    TEST(gbcemu, opcode_b0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // B0 0000
        gbc.setState(0x8e59, 0x5d95, 0x84e0, 0xd8e3, 0xe270, 0xd27e, 0x0, 0x1);
        gbc.writeMem(0x8e59, { 0xb0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5d95, gbc.sp());
        EXPECT(0x8e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8e59));
        // B0 0001
        gbc.setState(0x6b2e, 0xf326, 0xf2d0, 0xad85, 0x8e38, 0xa57b, 0x0, 0x1);
        gbc.writeMem(0x6b2e, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf326, gbc.sp());
        EXPECT(0x6b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0002
        gbc.setState(0xa839, 0xea00, 0x87a0, 0x7b3d, 0xc068, 0xa01c, 0x0, 0x1);
        gbc.writeMem(0xa839, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xea00, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa839));
        // B0 0003
        gbc.setState(0x3ebc, 0xd156, 0x5180, 0xe638, 0x62d1, 0xc319, 0x0, 0x0);
        gbc.writeMem(0x3ebc, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd156, gbc.sp());
        EXPECT(0x3ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0004
        gbc.setState(0xd781, 0x43b7, 0x3150, 0xa2a0, 0x5de7, 0x8ee6, 0x1, 0x0);
        gbc.writeMem(0xd781, { 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x43b7, gbc.sp());
        EXPECT(0xd782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd781));
        // B0 0005
        gbc.setState(0xc0f, 0x6a26, 0x6400, 0x445b, 0xf60c, 0x9082, 0x0, 0x0);
        gbc.writeMem(0xc0f, { 0xb0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6a26, gbc.sp());
        EXPECT(0xc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0006
        gbc.setState(0xd0c0, 0xa301, 0x15b0, 0x55e1, 0xe899, 0x1143, 0x0, 0x1);
        gbc.writeMem(0xd0c0, { 0xb0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa301, gbc.sp());
        EXPECT(0xd0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd0c0));
        // B0 0007
        gbc.setState(0x15d2, 0xc49d, 0x7060, 0x7a80, 0x708e, 0xa311, 0x0, 0x0);
        gbc.writeMem(0x15d2, { 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc49d, gbc.sp());
        EXPECT(0x15d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0008
        gbc.setState(0x4588, 0xa587, 0xc5e0, 0xce6f, 0x4ae8, 0x6a41, 0x1, 0x0);
        gbc.writeMem(0x4588, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa587, gbc.sp());
        EXPECT(0x4589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0009
        gbc.setState(0x8f5e, 0xb48e, 0x3a70, 0x1d35, 0xd32d, 0x5a7d, 0x0, 0x0);
        gbc.writeMem(0x8f5e, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb48e, gbc.sp());
        EXPECT(0x8f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8f5e));
        // B0 000A
        gbc.setState(0xb9b3, 0x122c, 0xf740, 0x5e4b, 0xe103, 0x17be, 0x1, 0x1);
        gbc.writeMem(0xb9b3, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x122c, gbc.sp());
        EXPECT(0xb9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb9b3));
        // B0 000B
        gbc.setState(0xbb88, 0xff30, 0xbf10, 0xb957, 0x66f9, 0x299c, 0x0, 0x0);
        gbc.writeMem(0xbb88, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xff30, gbc.sp());
        EXPECT(0xbb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbb88));
        // B0 000C
        gbc.setState(0x664f, 0x759, 0x3c0, 0x91d8, 0xd6f8, 0x2bd9, 0x1, 0x1);
        gbc.writeMem(0x664f, { 0xb0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x759, gbc.sp());
        EXPECT(0x6650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 000D
        gbc.setState(0xc834, 0x3092, 0xbd60, 0x474f, 0xf349, 0x4c25, 0x1, 0x0);
        gbc.writeMem(0xc834, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3092, gbc.sp());
        EXPECT(0xc835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc834));
        // B0 000E
        gbc.setState(0xe, 0x37ef, 0x75a0, 0x3e15, 0x12de, 0xebe4, 0x1, 0x1);
        gbc.writeMem(0xe, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x37ef, gbc.sp());
        EXPECT(0xf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 000F
        gbc.setState(0x4cbc, 0xcd58, 0x96a0, 0x3eb6, 0xca2a, 0x2b2c, 0x1, 0x1);
        gbc.writeMem(0x4cbc, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcd58, gbc.sp());
        EXPECT(0x4cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0010
        gbc.setState(0xeb7d, 0x1dca, 0xe430, 0x7c45, 0x8c65, 0x788f, 0x1, 0x0);
        gbc.writeMem(0xeb7d, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1dca, gbc.sp());
        EXPECT(0xeb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xeb7d));
        // B0 0011
        gbc.setState(0x83f, 0x4c4b, 0x8620, 0xa179, 0x7e1b, 0x2ee2, 0x0, 0x1);
        gbc.writeMem(0x83f, { 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4c4b, gbc.sp());
        EXPECT(0x840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0012
        gbc.setState(0x866a, 0xd793, 0x8a70, 0xe642, 0xc938, 0x7c69, 0x1, 0x1);
        gbc.writeMem(0x866a, { 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd793, gbc.sp());
        EXPECT(0x866b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x866a));
        // B0 0014
        gbc.setState(0x9530, 0x3545, 0x5270, 0xe545, 0xa5f1, 0xcbf6, 0x1, 0x1);
        gbc.writeMem(0x9530, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3545, gbc.sp());
        EXPECT(0x9531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9530));
        // B0 0015
        gbc.setState(0xa98c, 0x9cf7, 0x4ea0, 0x52a0, 0x6a83, 0xdba0, 0x1, 0x1);
        gbc.writeMem(0xa98c, { 0xb0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9cf7, gbc.sp());
        EXPECT(0xa98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa98c));
        // B0 0016
        gbc.setState(0xd2c7, 0xbabd, 0x9a60, 0xe02c, 0x5fd, 0xf123, 0x0, 0x0);
        gbc.writeMem(0xd2c7, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbabd, gbc.sp());
        EXPECT(0xd2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd2c7));
        // B0 0017
        gbc.setState(0x8a47, 0x9d64, 0xcfd0, 0x829f, 0xb84f, 0x798, 0x0, 0x0);
        gbc.writeMem(0x8a47, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9d64, gbc.sp());
        EXPECT(0x8a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8a47));
        // B0 0018
        gbc.setState(0xc4db, 0x41fe, 0x6720, 0xcdef, 0x2c7a, 0x3d83, 0x1, 0x1);
        gbc.writeMem(0xc4db, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x41fe, gbc.sp());
        EXPECT(0xc4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc4db));
        // B0 001A
        gbc.setState(0x8359, 0x8643, 0xe630, 0x147, 0xd5c0, 0xfb40, 0x0, 0x0);
        gbc.writeMem(0x8359, { 0xb0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8643, gbc.sp());
        EXPECT(0x835a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8359));
        // B0 001B
        gbc.setState(0x82d0, 0x5a8f, 0xaf0, 0x2f9c, 0xee3e, 0x974e, 0x1, 0x1);
        gbc.writeMem(0x82d0, { 0xb0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5a8f, gbc.sp());
        EXPECT(0x82d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x82d0));
        // B0 001C
        gbc.setState(0x603e, 0x7856, 0xdbd0, 0xb130, 0x6e2, 0xd8b9, 0x0, 0x1);
        gbc.writeMem(0x603e, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7856, gbc.sp());
        EXPECT(0x603f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 001D
        gbc.setState(0xa445, 0x67cf, 0xe270, 0xddae, 0xff51, 0x47d9, 0x1, 0x0);
        gbc.writeMem(0xa445, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x67cf, gbc.sp());
        EXPECT(0xa446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa445));
        // B0 001E
        gbc.setState(0x4384, 0x584d, 0xe1f0, 0x4d77, 0x50e1, 0xd942, 0x0, 0x0);
        gbc.writeMem(0x4384, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x584d, gbc.sp());
        EXPECT(0x4385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 001F
        gbc.setState(0x1abc, 0x5693, 0xeb30, 0x30a3, 0x82c9, 0x6874, 0x0, 0x1);
        gbc.writeMem(0x1abc, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5693, gbc.sp());
        EXPECT(0x1abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0020
        gbc.setState(0xe8c1, 0x25ce, 0x7230, 0xd8ed, 0x75df, 0x265e, 0x1, 0x0);
        gbc.writeMem(0xe8c1, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x25ce, gbc.sp());
        EXPECT(0xe8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe8c1));
        // B0 0021
        gbc.setState(0x2017, 0x43fd, 0x2340, 0xa775, 0xd724, 0x44c3, 0x0, 0x0);
        gbc.writeMem(0x2017, { 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x43fd, gbc.sp());
        EXPECT(0x2018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0022
        gbc.setState(0x48d7, 0xb16d, 0xfe10, 0x53ab, 0x6f24, 0x8feb, 0x1, 0x0);
        gbc.writeMem(0x48d7, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb16d, gbc.sp());
        EXPECT(0x48d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0023
        gbc.setState(0x5fde, 0x3bc0, 0x9e60, 0x164, 0x8464, 0x1cad, 0x1, 0x0);
        gbc.writeMem(0x5fde, { 0xb0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3bc0, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0024
        gbc.setState(0x1d6c, 0xf755, 0xf790, 0x1372, 0x73d0, 0x87cc, 0x0, 0x1);
        gbc.writeMem(0x1d6c, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf755, gbc.sp());
        EXPECT(0x1d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0025
        gbc.setState(0x974f, 0x52df, 0xd2d0, 0x93e0, 0x665c, 0x61d1, 0x0, 0x1);
        gbc.writeMem(0x974f, { 0xb0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x52df, gbc.sp());
        EXPECT(0x9750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x974f));
        // B0 0026
        gbc.setState(0x5433, 0x4633, 0xd720, 0x864a, 0x483c, 0x3881, 0x1, 0x1);
        gbc.writeMem(0x5433, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4633, gbc.sp());
        EXPECT(0x5434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0027
        gbc.setState(0xc15b, 0xbe16, 0x9350, 0x66f5, 0xa68f, 0xdd3f, 0x0, 0x1);
        gbc.writeMem(0xc15b, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbe16, gbc.sp());
        EXPECT(0xc15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc15b));
        // B0 0028
        gbc.setState(0xa45e, 0x8275, 0xdad0, 0x5ac6, 0x2d78, 0x85c9, 0x1, 0x1);
        gbc.writeMem(0xa45e, { 0xb0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8275, gbc.sp());
        EXPECT(0xa45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa45e));
        // B0 0029
        gbc.setState(0x73db, 0x1fdd, 0x7ac0, 0x3ccd, 0x782b, 0xa974, 0x1, 0x0);
        gbc.writeMem(0x73db, { 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1fdd, gbc.sp());
        EXPECT(0x73dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 002A
        gbc.setState(0x232e, 0x1952, 0x4a30, 0xc204, 0x740b, 0x4b3e, 0x0, 0x1);
        gbc.writeMem(0x232e, { 0xb0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1952, gbc.sp());
        EXPECT(0x232f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 002B
        gbc.setState(0x4095, 0xff8c, 0x4d20, 0x42fc, 0xf807, 0xcd19, 0x1, 0x0);
        gbc.writeMem(0x4095, { 0xb0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xff8c, gbc.sp());
        EXPECT(0x4096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 002C
        gbc.setState(0xdf94, 0x2456, 0xcf00, 0xc635, 0xe925, 0xa9d6, 0x1, 0x1);
        gbc.writeMem(0xdf94, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2456, gbc.sp());
        EXPECT(0xdf95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdf94));
        // B0 002D
        gbc.setState(0x8f5, 0x95ca, 0xb910, 0xf5c0, 0xb9d, 0x32ee, 0x0, 0x0);
        gbc.writeMem(0x8f5, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x95ca, gbc.sp());
        EXPECT(0x8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 002E
        gbc.setState(0xc8a9, 0xd53e, 0x9b90, 0xadc, 0xeece, 0x8f37, 0x0, 0x0);
        gbc.writeMem(0xc8a9, { 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd53e, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc8a9));
        // B0 002F
        gbc.setState(0x173c, 0xee25, 0x6b60, 0x49b4, 0xa36f, 0xaee, 0x0, 0x0);
        gbc.writeMem(0x173c, { 0xb0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xee25, gbc.sp());
        EXPECT(0x173d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0030
        gbc.setState(0x3f70, 0xb907, 0x9e20, 0x806b, 0xe3ae, 0xd7, 0x1, 0x1);
        gbc.writeMem(0x3f70, { 0xb0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb907, gbc.sp());
        EXPECT(0x3f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0031
        gbc.setState(0x633e, 0xcd72, 0x35a0, 0xd6da, 0xdcc3, 0x5c9, 0x0, 0x0);
        gbc.writeMem(0x633e, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcd72, gbc.sp());
        EXPECT(0x633f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0032
        gbc.setState(0xa47f, 0x5378, 0xed50, 0xe634, 0x858a, 0x3b6e, 0x1, 0x1);
        gbc.writeMem(0xa47f, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5378, gbc.sp());
        EXPECT(0xa480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa47f));
        // B0 0033
        gbc.setState(0xaccb, 0xe8b6, 0xd370, 0x9766, 0x79d6, 0x8dde, 0x1, 0x1);
        gbc.writeMem(0xaccb, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe8b6, gbc.sp());
        EXPECT(0xaccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xaccb));
        // B0 0034
        gbc.setState(0x505, 0x6a25, 0x3c70, 0xa06, 0x2793, 0x513c, 0x1, 0x0);
        gbc.writeMem(0x505, { 0xb0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6a25, gbc.sp());
        EXPECT(0x506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0035
        gbc.setState(0xc3c7, 0x6f7f, 0x8bd0, 0x270a, 0xf3bb, 0xd178, 0x1, 0x0);
        gbc.writeMem(0xc3c7, { 0xb0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6f7f, gbc.sp());
        EXPECT(0xc3c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc3c7));
        // B0 0036
        gbc.setState(0xc6ff, 0xe905, 0x6a70, 0x5fef, 0x6d55, 0x6392, 0x0, 0x1);
        gbc.writeMem(0xc6ff, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe905, gbc.sp());
        EXPECT(0xc700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc6ff));
        // B0 0037
        gbc.setState(0x86d, 0x9108, 0x9640, 0x82d2, 0x7c3, 0xa398, 0x1, 0x0);
        gbc.writeMem(0x86d, { 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9108, gbc.sp());
        EXPECT(0x86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0038
        gbc.setState(0x7995, 0xf9fe, 0xcad0, 0x6b59, 0x5ea6, 0x587, 0x0, 0x1);
        gbc.writeMem(0x7995, { 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf9fe, gbc.sp());
        EXPECT(0x7996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0039
        gbc.setState(0x956a, 0xf3b5, 0x5360, 0xca36, 0x1be9, 0x1a85, 0x1, 0x1);
        gbc.writeMem(0x956a, { 0xb0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf3b5, gbc.sp());
        EXPECT(0x956b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x956a));
        // B0 003A
        gbc.setState(0x5bc4, 0x7a01, 0x1600, 0x364a, 0x379f, 0xe9d0, 0x1, 0x0);
        gbc.writeMem(0x5bc4, { 0xb0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7a01, gbc.sp());
        EXPECT(0x5bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 003B
        gbc.setState(0x905f, 0x724f, 0x9e00, 0x8ce, 0x41f9, 0x3f18, 0x0, 0x1);
        gbc.writeMem(0x905f, { 0xb0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x724f, gbc.sp());
        EXPECT(0x9060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x905f));
        // B0 003C
        gbc.setState(0x1a53, 0x217a, 0xd550, 0xedc, 0x5139, 0x9187, 0x0, 0x1);
        gbc.writeMem(0x1a53, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x217a, gbc.sp());
        EXPECT(0x1a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 003D
        gbc.setState(0xdac2, 0x6f77, 0xfd10, 0xd734, 0xe90e, 0x9c7d, 0x1, 0x1);
        gbc.writeMem(0xdac2, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6f77, gbc.sp());
        EXPECT(0xdac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdac2));
        // B0 003E
        gbc.setState(0x781c, 0xa35, 0x1480, 0x6c33, 0xac9d, 0xcfe5, 0x1, 0x0);
        gbc.writeMem(0x781c, { 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa35, gbc.sp());
        EXPECT(0x781d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 003F
        gbc.setState(0xdb6, 0x3371, 0x420, 0xb828, 0xae6a, 0xd3c8, 0x0, 0x1);
        gbc.writeMem(0xdb6, { 0xb0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3371, gbc.sp());
        EXPECT(0xdb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0040
        gbc.setState(0x55ef, 0x7202, 0x6e50, 0xdad2, 0x5157, 0xc153, 0x1, 0x1);
        gbc.writeMem(0x55ef, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7202, gbc.sp());
        EXPECT(0x55f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0041
        gbc.setState(0x4fb7, 0x1521, 0xb210, 0x675c, 0xdd16, 0x5185, 0x1, 0x0);
        gbc.writeMem(0x4fb7, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1521, gbc.sp());
        EXPECT(0x4fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0042
        gbc.setState(0x3862, 0xcfc0, 0x7d30, 0x490b, 0xf11b, 0x8907, 0x1, 0x1);
        gbc.writeMem(0x3862, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcfc0, gbc.sp());
        EXPECT(0x3863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0043
        gbc.setState(0x706c, 0x3f1c, 0x3040, 0x64ae, 0xded9, 0x583c, 0x0, 0x1);
        gbc.writeMem(0x706c, { 0xb0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3f1c, gbc.sp());
        EXPECT(0x706d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0044
        gbc.setState(0xcf89, 0x63dc, 0xabc0, 0xce4b, 0x5837, 0x7483, 0x1, 0x0);
        gbc.writeMem(0xcf89, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x63dc, gbc.sp());
        EXPECT(0xcf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcf89));
        // B0 0045
        gbc.setState(0x2452, 0x1dd9, 0x33e0, 0xb255, 0x58aa, 0xaf55, 0x1, 0x0);
        gbc.writeMem(0x2452, { 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1dd9, gbc.sp());
        EXPECT(0x2453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0046
        gbc.setState(0xa182, 0x473e, 0xda30, 0x4f17, 0x5b58, 0xaa73, 0x1, 0x0);
        gbc.writeMem(0xa182, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x473e, gbc.sp());
        EXPECT(0xa183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa182));
        // B0 0047
        gbc.setState(0xcdf3, 0xced3, 0x5930, 0xd369, 0xbc2, 0xf65f, 0x1, 0x0);
        gbc.writeMem(0xcdf3, { 0xb0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xced3, gbc.sp());
        EXPECT(0xcdf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcdf3));
        // B0 0048
        gbc.setState(0x1876, 0x1e9a, 0xf600, 0x4c26, 0xd4ab, 0x7cf9, 0x1, 0x1);
        gbc.writeMem(0x1876, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1e9a, gbc.sp());
        EXPECT(0x1877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 004A
        gbc.setState(0xb8e3, 0x4ba2, 0xe650, 0x9d47, 0x2171, 0xcd70, 0x0, 0x0);
        gbc.writeMem(0xb8e3, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4ba2, gbc.sp());
        EXPECT(0xb8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb8e3));
        // B0 004B
        gbc.setState(0xa0e2, 0x95d6, 0xc5d0, 0xeade, 0x9176, 0x9b0c, 0x0, 0x1);
        gbc.writeMem(0xa0e2, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x95d6, gbc.sp());
        EXPECT(0xa0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa0e2));
        // B0 004C
        gbc.setState(0x4e6c, 0x374, 0xcd40, 0x2fd2, 0xbafd, 0xe5f, 0x1, 0x0);
        gbc.writeMem(0x4e6c, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x374, gbc.sp());
        EXPECT(0x4e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 004D
        gbc.setState(0x2c43, 0x733e, 0xa100, 0x5a06, 0x3aaa, 0x22ae, 0x1, 0x0);
        gbc.writeMem(0x2c43, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x733e, gbc.sp());
        EXPECT(0x2c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 004E
        gbc.setState(0x7aa, 0x4684, 0x11c0, 0xa948, 0xa995, 0x2fb5, 0x1, 0x1);
        gbc.writeMem(0x7aa, { 0xb0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4684, gbc.sp());
        EXPECT(0x7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 004F
        gbc.setState(0xef59, 0x7eee, 0x6700, 0xee2c, 0x623d, 0x63f8, 0x1, 0x0);
        gbc.writeMem(0xef59, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7eee, gbc.sp());
        EXPECT(0xef5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xef59));
        // B0 0050
        gbc.setState(0xaa14, 0x4280, 0x3300, 0x6e2d, 0x60d2, 0xabc7, 0x0, 0x0);
        gbc.writeMem(0xaa14, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4280, gbc.sp());
        EXPECT(0xaa15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xaa14));
        // B0 0051
        gbc.setState(0x385, 0x1250, 0x120, 0x1d78, 0x2966, 0x2e9, 0x0, 0x1);
        gbc.writeMem(0x385, { 0xb0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1250, gbc.sp());
        EXPECT(0x386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0052
        gbc.setState(0x888, 0x29ab, 0x2890, 0x5455, 0x557, 0x3891, 0x1, 0x0);
        gbc.writeMem(0x888, { 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x29ab, gbc.sp());
        EXPECT(0x889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0053
        gbc.setState(0x7ad4, 0x51, 0x490, 0xad24, 0x9207, 0xeb9e, 0x1, 0x1);
        gbc.writeMem(0x7ad4, { 0xb0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x51, gbc.sp());
        EXPECT(0x7ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0055
        gbc.setState(0x8fce, 0x3b38, 0x1ca0, 0x86d2, 0x7a77, 0xd52d, 0x1, 0x1);
        gbc.writeMem(0x8fce, { 0xb0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3b38, gbc.sp());
        EXPECT(0x8fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8fce));
        // B0 0056
        gbc.setState(0x385e, 0x4d73, 0xba10, 0x24ba, 0xa8be, 0xf0c6, 0x0, 0x0);
        gbc.writeMem(0x385e, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d73, gbc.sp());
        EXPECT(0x385f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0057
        gbc.setState(0x2c32, 0x5f4d, 0xd0d0, 0x89a6, 0x77c4, 0x3902, 0x1, 0x0);
        gbc.writeMem(0x2c32, { 0xb0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5f4d, gbc.sp());
        EXPECT(0x2c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0058
        gbc.setState(0x9275, 0x8994, 0x1e60, 0x3b87, 0xf384, 0x4a90, 0x0, 0x0);
        gbc.writeMem(0x9275, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8994, gbc.sp());
        EXPECT(0x9276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9275));
        // B0 0059
        gbc.setState(0x173e, 0xaa05, 0x2a20, 0x21ea, 0x8f3c, 0xcf89, 0x0, 0x0);
        gbc.writeMem(0x173e, { 0xb0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xaa05, gbc.sp());
        EXPECT(0x173f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 005A
        gbc.setState(0x589a, 0xaa99, 0xe8d0, 0x14f9, 0x5545, 0xecf9, 0x1, 0x0);
        gbc.writeMem(0x589a, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaa99, gbc.sp());
        EXPECT(0x589b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 005B
        gbc.setState(0xa8fc, 0xabad, 0x6f20, 0xb2ac, 0x6ed2, 0x949c, 0x0, 0x0);
        gbc.writeMem(0xa8fc, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xabad, gbc.sp());
        EXPECT(0xa8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa8fc));
        // B0 005C
        gbc.setState(0x96ab, 0x4c6, 0xfde0, 0xf3ca, 0xe8da, 0x81a, 0x1, 0x1);
        gbc.writeMem(0x96ab, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4c6, gbc.sp());
        EXPECT(0x96ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x96ab));
        // B0 005D
        gbc.setState(0x4491, 0x5c10, 0x1d00, 0x4468, 0x4bb6, 0x35f, 0x0, 0x0);
        gbc.writeMem(0x4491, { 0xb0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5c10, gbc.sp());
        EXPECT(0x4492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 005E
        gbc.setState(0x9826, 0xb4d4, 0x8770, 0x2d15, 0xfe9e, 0xed80, 0x1, 0x1);
        gbc.writeMem(0x9826, { 0xb0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb4d4, gbc.sp());
        EXPECT(0x9827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9826));
        // B0 005F
        gbc.setState(0x3853, 0xc5ef, 0xd110, 0x8097, 0xb8e8, 0xdad5, 0x1, 0x0);
        gbc.writeMem(0x3853, { 0xb0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc5ef, gbc.sp());
        EXPECT(0x3854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0060
        gbc.setState(0x4b15, 0xf5, 0x5660, 0x3e5e, 0xae76, 0x7220, 0x0, 0x1);
        gbc.writeMem(0x4b15, { 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf5, gbc.sp());
        EXPECT(0x4b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0061
        gbc.setState(0xe0a5, 0xa377, 0x7aa0, 0x506f, 0xc79f, 0xa582, 0x1, 0x0);
        gbc.writeMem(0xe0a5, { 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa377, gbc.sp());
        EXPECT(0xe0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe0a5));
        // B0 0062
        gbc.setState(0xd53f, 0x547d, 0x5f90, 0xf8e8, 0x762c, 0xeec4, 0x1, 0x0);
        gbc.writeMem(0xd53f, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x547d, gbc.sp());
        EXPECT(0xd540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd53f));
        // B0 0063
        gbc.setState(0xaa63, 0xedcc, 0x7a50, 0xfef9, 0x3c5a, 0x4dae, 0x1, 0x1);
        gbc.writeMem(0xaa63, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xedcc, gbc.sp());
        EXPECT(0xaa64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xaa63));
        // B0 0066
        gbc.setState(0xb79c, 0xbcb9, 0x6e50, 0xa949, 0xdac9, 0x891, 0x0, 0x0);
        gbc.writeMem(0xb79c, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbcb9, gbc.sp());
        EXPECT(0xb79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb79c));
        // B0 0068
        gbc.setState(0x3bda, 0xa81a, 0x4360, 0xe0f3, 0x964a, 0x14ad, 0x1, 0x1);
        gbc.writeMem(0x3bda, { 0xb0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa81a, gbc.sp());
        EXPECT(0x3bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 006A
        gbc.setState(0x64e5, 0x355a, 0xe320, 0xb812, 0x91c7, 0x66cf, 0x1, 0x0);
        gbc.writeMem(0x64e5, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x355a, gbc.sp());
        EXPECT(0x64e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 006B
        gbc.setState(0xd020, 0x9d14, 0x1f0, 0x3c45, 0x7d41, 0xc175, 0x0, 0x1);
        gbc.writeMem(0xd020, { 0xb0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9d14, gbc.sp());
        EXPECT(0xd021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd020));
        // B0 006C
        gbc.setState(0xc754, 0x9700, 0xd90, 0x982e, 0x5cc4, 0xbaa9, 0x0, 0x0);
        gbc.writeMem(0xc754, { 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9700, gbc.sp());
        EXPECT(0xc755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc754));
        // B0 006D
        gbc.setState(0xe6b9, 0xe631, 0xc490, 0x4044, 0xec9a, 0xd57d, 0x1, 0x0);
        gbc.writeMem(0xe6b9, { 0xb0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe631, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe6b9));
        // B0 006E
        gbc.setState(0x820a, 0x24a5, 0x1510, 0xec4f, 0xef48, 0xf87, 0x0, 0x1);
        gbc.writeMem(0x820a, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x24a5, gbc.sp());
        EXPECT(0x820b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x820a));
        // B0 006F
        gbc.setState(0xa24e, 0x7c64, 0xf960, 0x1485, 0xb79c, 0x8f31, 0x0, 0x0);
        gbc.writeMem(0xa24e, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7c64, gbc.sp());
        EXPECT(0xa24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa24e));
        // B0 0070
        gbc.setState(0x33, 0xb938, 0x1dd0, 0xce6d, 0xb4a4, 0xe054, 0x1, 0x1);
        gbc.writeMem(0x33, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb938, gbc.sp());
        EXPECT(0x34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0071
        gbc.setState(0xd734, 0x2c0, 0x9410, 0x81ad, 0x425b, 0x94fa, 0x0, 0x1);
        gbc.writeMem(0xd734, { 0xb0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2c0, gbc.sp());
        EXPECT(0xd735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd734));
        // B0 0072
        gbc.setState(0x265b, 0x5b2f, 0x600, 0x8815, 0xdf4a, 0x4eef, 0x0, 0x1);
        gbc.writeMem(0x265b, { 0xb0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5b2f, gbc.sp());
        EXPECT(0x265c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0073
        gbc.setState(0xdb30, 0xdf1f, 0xe750, 0x2497, 0x5a04, 0x2a4f, 0x0, 0x0);
        gbc.writeMem(0xdb30, { 0xb0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdf1f, gbc.sp());
        EXPECT(0xdb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdb30));
        // B0 0074
        gbc.setState(0xf42, 0xe5d2, 0xd980, 0xb196, 0xfb61, 0x7b7c, 0x1, 0x1);
        gbc.writeMem(0xf42, { 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe5d2, gbc.sp());
        EXPECT(0xf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0075
        gbc.setState(0xe8bc, 0xcc9, 0x6920, 0xb7b3, 0x26c7, 0x34cb, 0x1, 0x1);
        gbc.writeMem(0xe8bc, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcc9, gbc.sp());
        EXPECT(0xe8bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe8bc));
        // B0 0076
        gbc.setState(0x9bc4, 0xe241, 0x7400, 0x9a08, 0x5827, 0x730c, 0x1, 0x1);
        gbc.writeMem(0x9bc4, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe241, gbc.sp());
        EXPECT(0x9bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9bc4));
        // B0 0077
        gbc.setState(0x3af9, 0x69df, 0x98c0, 0xb7ea, 0x6806, 0x93f0, 0x1, 0x0);
        gbc.writeMem(0x3af9, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x69df, gbc.sp());
        EXPECT(0x3afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0078
        gbc.setState(0x6564, 0x14e3, 0xf9c0, 0xeba6, 0x8ba4, 0x8b4d, 0x1, 0x1);
        gbc.writeMem(0x6564, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x14e3, gbc.sp());
        EXPECT(0x6565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0079
        gbc.setState(0x5882, 0xe49b, 0xb690, 0xbb89, 0xe700, 0x71f1, 0x0, 0x1);
        gbc.writeMem(0x5882, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe49b, gbc.sp());
        EXPECT(0x5883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 007A
        gbc.setState(0x1793, 0xaa45, 0x7c70, 0x761e, 0x8aa8, 0x9a4f, 0x1, 0x0);
        gbc.writeMem(0x1793, { 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaa45, gbc.sp());
        EXPECT(0x1794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 007B
        gbc.setState(0x98eb, 0xf49e, 0xc450, 0x1e51, 0x135a, 0xa5ee, 0x0, 0x1);
        gbc.writeMem(0x98eb, { 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf49e, gbc.sp());
        EXPECT(0x98ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x98eb));
        // B0 007D
        gbc.setState(0x38f9, 0x4325, 0x1890, 0x8357, 0xdf05, 0x5959, 0x1, 0x0);
        gbc.writeMem(0x38f9, { 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4325, gbc.sp());
        EXPECT(0x38fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 007E
        gbc.setState(0x2a2c, 0x95d9, 0xe3d0, 0x2b6c, 0xdcb5, 0x3439, 0x0, 0x1);
        gbc.writeMem(0x2a2c, { 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x95d9, gbc.sp());
        EXPECT(0x2a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 007F
        gbc.setState(0x1ffb, 0x932b, 0x17a0, 0x5a03, 0x7a18, 0xacd7, 0x0, 0x1);
        gbc.writeMem(0x1ffb, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x932b, gbc.sp());
        EXPECT(0x1ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0080
        gbc.setState(0x3723, 0x6f0e, 0x9a10, 0xdda8, 0xf9b7, 0xdfe9, 0x0, 0x1);
        gbc.writeMem(0x3723, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6f0e, gbc.sp());
        EXPECT(0x3724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0081
        gbc.setState(0x5e20, 0x1307, 0x2710, 0xca7b, 0xa3df, 0xbf8d, 0x1, 0x1);
        gbc.writeMem(0x5e20, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1307, gbc.sp());
        EXPECT(0x5e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0082
        gbc.setState(0xe8e1, 0x4a77, 0xb480, 0x3fa2, 0x1d9e, 0x3ce7, 0x1, 0x1);
        gbc.writeMem(0xe8e1, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4a77, gbc.sp());
        EXPECT(0xe8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe8e1));
        // B0 0083
        gbc.setState(0x481e, 0x8dc9, 0x3300, 0x86ca, 0x44a6, 0x18f2, 0x1, 0x0);
        gbc.writeMem(0x481e, { 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8dc9, gbc.sp());
        EXPECT(0x481f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0084
        gbc.setState(0x964, 0x6e80, 0xf7c0, 0x298a, 0xdda1, 0x518c, 0x0, 0x1);
        gbc.writeMem(0x964, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6e80, gbc.sp());
        EXPECT(0x965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0085
        gbc.setState(0x828a, 0x2a2a, 0x5400, 0xc2d5, 0x3526, 0x9a23, 0x0, 0x1);
        gbc.writeMem(0x828a, { 0xb0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2a2a, gbc.sp());
        EXPECT(0x828b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x828a));
        // B0 0086
        gbc.setState(0x7b7b, 0xb9b, 0xc910, 0x6fa4, 0xa64c, 0x4330, 0x0, 0x0);
        gbc.writeMem(0x7b7b, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb9b, gbc.sp());
        EXPECT(0x7b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0087
        gbc.setState(0x915a, 0x5cb0, 0x80d0, 0xc708, 0x8549, 0x671e, 0x0, 0x0);
        gbc.writeMem(0x915a, { 0xb0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5cb0, gbc.sp());
        EXPECT(0x915b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x915a));
        // B0 0089
        gbc.setState(0xe446, 0xc0f7, 0x29d0, 0xa8bb, 0x9140, 0x7e57, 0x0, 0x1);
        gbc.writeMem(0xe446, { 0xb0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc0f7, gbc.sp());
        EXPECT(0xe447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe446));
        // B0 008A
        gbc.setState(0x6e0, 0x5ffb, 0xa660, 0xeec2, 0xa9bf, 0x1eb3, 0x0, 0x0);
        gbc.writeMem(0x6e0, { 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5ffb, gbc.sp());
        EXPECT(0x6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 008B
        gbc.setState(0x81f6, 0x6703, 0x3bb0, 0x6669, 0x7c79, 0x4122, 0x1, 0x0);
        gbc.writeMem(0x81f6, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6703, gbc.sp());
        EXPECT(0x81f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x81f6));
        // B0 008C
        gbc.setState(0x452, 0xf0df, 0x8ef0, 0x37e7, 0xb721, 0x2705, 0x0, 0x1);
        gbc.writeMem(0x452, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf0df, gbc.sp());
        EXPECT(0x453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 008D
        gbc.setState(0x21e8, 0xe290, 0x62a0, 0xfda7, 0x9bf5, 0x5c2, 0x1, 0x0);
        gbc.writeMem(0x21e8, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe290, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 008E
        gbc.setState(0x8a8, 0xceb6, 0x2910, 0x9514, 0xf753, 0x1bbd, 0x0, 0x1);
        gbc.writeMem(0x8a8, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xceb6, gbc.sp());
        EXPECT(0x8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0090
        gbc.setState(0x2efe, 0x447b, 0x55f0, 0xce31, 0xa323, 0x47c9, 0x1, 0x1);
        gbc.writeMem(0x2efe, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x447b, gbc.sp());
        EXPECT(0x2eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0091
        gbc.setState(0xcd1a, 0x44e2, 0xb610, 0x19a0, 0x27b9, 0xabfe, 0x1, 0x1);
        gbc.writeMem(0xcd1a, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x44e2, gbc.sp());
        EXPECT(0xcd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcd1a));
        // B0 0092
        gbc.setState(0x656f, 0x7fe9, 0xb2b0, 0xa26d, 0x4b3e, 0xbec4, 0x1, 0x0);
        gbc.writeMem(0x656f, { 0xb0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7fe9, gbc.sp());
        EXPECT(0x6570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0093
        gbc.setState(0x7b83, 0x7696, 0x21d0, 0xccd8, 0x550e, 0xd26b, 0x1, 0x0);
        gbc.writeMem(0x7b83, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7696, gbc.sp());
        EXPECT(0x7b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0094
        gbc.setState(0x31b7, 0x2d33, 0x6af0, 0x793b, 0xffee, 0x4772, 0x1, 0x1);
        gbc.writeMem(0x31b7, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2d33, gbc.sp());
        EXPECT(0x31b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0095
        gbc.setState(0x76f3, 0x34d8, 0xb260, 0xf1b5, 0x6139, 0xb0af, 0x0, 0x0);
        gbc.writeMem(0x76f3, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x34d8, gbc.sp());
        EXPECT(0x76f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0096
        gbc.setState(0x1ede, 0x3deb, 0x69b0, 0x5e9, 0x2312, 0x18fb, 0x1, 0x1);
        gbc.writeMem(0x1ede, { 0xb0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3deb, gbc.sp());
        EXPECT(0x1edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0097
        gbc.setState(0xc483, 0x479a, 0xf160, 0x3451, 0xd77f, 0x7b35, 0x0, 0x0);
        gbc.writeMem(0xc483, { 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x479a, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc483));
        // B0 0098
        gbc.setState(0x44e2, 0x351e, 0x5150, 0xa5ba, 0xf8cf, 0x6cb0, 0x1, 0x1);
        gbc.writeMem(0x44e2, { 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x351e, gbc.sp());
        EXPECT(0x44e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0099
        gbc.setState(0xa526, 0x32bf, 0x2060, 0x1c30, 0x9083, 0x3c92, 0x1, 0x1);
        gbc.writeMem(0xa526, { 0xb0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x32bf, gbc.sp());
        EXPECT(0xa527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa526));
        // B0 009A
        gbc.setState(0x4ad2, 0xf5be, 0xe2d0, 0x9be8, 0xfbda, 0x257b, 0x0, 0x1);
        gbc.writeMem(0x4ad2, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf5be, gbc.sp());
        EXPECT(0x4ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 009B
        gbc.setState(0x2497, 0x9808, 0xb6f0, 0xe55f, 0x4c33, 0xc16a, 0x0, 0x0);
        gbc.writeMem(0x2497, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9808, gbc.sp());
        EXPECT(0x2498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 009D
        gbc.setState(0x418b, 0x366, 0x3a90, 0x4026, 0x6720, 0x3e80, 0x0, 0x1);
        gbc.writeMem(0x418b, { 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x366, gbc.sp());
        EXPECT(0x418c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 009E
        gbc.setState(0x8c04, 0xb1ce, 0x54c0, 0xed0, 0x68a6, 0x66ee, 0x1, 0x1);
        gbc.writeMem(0x8c04, { 0xb0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb1ce, gbc.sp());
        EXPECT(0x8c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8c04));
        // B0 009F
        gbc.setState(0xad6f, 0x9512, 0x2db0, 0x659d, 0x6af6, 0x9f0a, 0x1, 0x1);
        gbc.writeMem(0xad6f, { 0xb0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9512, gbc.sp());
        EXPECT(0xad70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xad6f));
        // B0 00A0
        gbc.setState(0x5214, 0x92aa, 0x65b0, 0x9673, 0xdf27, 0x97fd, 0x1, 0x1);
        gbc.writeMem(0x5214, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x92aa, gbc.sp());
        EXPECT(0x5215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00A1
        gbc.setState(0x4cf8, 0x2209, 0x18b0, 0xeba3, 0xeb78, 0x6708, 0x0, 0x0);
        gbc.writeMem(0x4cf8, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2209, gbc.sp());
        EXPECT(0x4cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00A2
        gbc.setState(0x8a81, 0xed40, 0x21b0, 0x66fe, 0x9821, 0x35c0, 0x0, 0x1);
        gbc.writeMem(0x8a81, { 0xb0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xed40, gbc.sp());
        EXPECT(0x8a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8a81));
        // B0 00A3
        gbc.setState(0x81c2, 0xd718, 0x8ba0, 0x76c, 0xc2e5, 0x9a2b, 0x1, 0x0);
        gbc.writeMem(0x81c2, { 0xb0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd718, gbc.sp());
        EXPECT(0x81c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x81c2));
        // B0 00A4
        gbc.setState(0x4676, 0x75a8, 0xd530, 0x5ec4, 0x991c, 0xd785, 0x0, 0x1);
        gbc.writeMem(0x4676, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x75a8, gbc.sp());
        EXPECT(0x4677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00A5
        gbc.setState(0x9a91, 0xf56b, 0xdf0, 0xf1ce, 0x5728, 0x498f, 0x1, 0x1);
        gbc.writeMem(0x9a91, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf56b, gbc.sp());
        EXPECT(0x9a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9a91));
        // B0 00A6
        gbc.setState(0x824b, 0x296e, 0xdd60, 0xe5c3, 0xc862, 0xd049, 0x0, 0x1);
        gbc.writeMem(0x824b, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x296e, gbc.sp());
        EXPECT(0x824c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x824b));
        // B0 00A7
        gbc.setState(0x5aef, 0xff43, 0x44d0, 0xb77d, 0x98f5, 0x76ff, 0x1, 0x0);
        gbc.writeMem(0x5aef, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xff43, gbc.sp());
        EXPECT(0x5af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00A8
        gbc.setState(0x22f0, 0x95f9, 0x40a0, 0x8955, 0xa1c9, 0x96d2, 0x0, 0x0);
        gbc.writeMem(0x22f0, { 0xb0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x95f9, gbc.sp());
        EXPECT(0x22f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00A9
        gbc.setState(0x6d65, 0x1923, 0xfd90, 0x8b6b, 0x6681, 0xccd6, 0x1, 0x1);
        gbc.writeMem(0x6d65, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1923, gbc.sp());
        EXPECT(0x6d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00AA
        gbc.setState(0x8af9, 0xb8ba, 0xb120, 0xc3e2, 0x4e25, 0xa5ca, 0x1, 0x0);
        gbc.writeMem(0x8af9, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb8ba, gbc.sp());
        EXPECT(0x8afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8af9));
        // B0 00AB
        gbc.setState(0xa690, 0xe055, 0x9d0, 0x78ac, 0xc1f1, 0x3e6, 0x1, 0x1);
        gbc.writeMem(0xa690, { 0xb0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe055, gbc.sp());
        EXPECT(0xa691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa690));
        // B0 00AC
        gbc.setState(0x2b2a, 0x9d33, 0xe950, 0x31db, 0x78e8, 0xef0f, 0x1, 0x0);
        gbc.writeMem(0x2b2a, { 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9d33, gbc.sp());
        EXPECT(0x2b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00AD
        gbc.setState(0x9564, 0xe21d, 0xb6b0, 0x3729, 0xe941, 0xc8b6, 0x0, 0x0);
        gbc.writeMem(0x9564, { 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe21d, gbc.sp());
        EXPECT(0x9565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9564));
        // B0 00AE
        gbc.setState(0x2772, 0xd44d, 0xf070, 0xc49b, 0x4d1e, 0xb7c8, 0x1, 0x1);
        gbc.writeMem(0x2772, { 0xb0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd44d, gbc.sp());
        EXPECT(0x2773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00AF
        gbc.setState(0xacf1, 0x6f6e, 0x3340, 0x9157, 0xb611, 0xeade, 0x0, 0x1);
        gbc.writeMem(0xacf1, { 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6f6e, gbc.sp());
        EXPECT(0xacf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xacf1));
        // B0 00B0
        gbc.setState(0x484d, 0xa308, 0x5c30, 0x1bff, 0x491, 0x50e, 0x1, 0x1);
        gbc.writeMem(0x484d, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa308, gbc.sp());
        EXPECT(0x484e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00B1
        gbc.setState(0x226c, 0xe462, 0x7ea0, 0x73ff, 0x5d52, 0x83d6, 0x0, 0x1);
        gbc.writeMem(0x226c, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0x226d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00B2
        gbc.setState(0x4729, 0x5f65, 0x5fb0, 0x4b57, 0x552b, 0x1148, 0x1, 0x1);
        gbc.writeMem(0x4729, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5f65, gbc.sp());
        EXPECT(0x472a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00B3
        gbc.setState(0x9b6e, 0x2727, 0xedd0, 0x472a, 0x6163, 0xdee9, 0x0, 0x0);
        gbc.writeMem(0x9b6e, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2727, gbc.sp());
        EXPECT(0x9b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9b6e));
        // B0 00B4
        gbc.setState(0x7ec8, 0x956f, 0x27f0, 0x35fb, 0xb1e6, 0x4550, 0x1, 0x1);
        gbc.writeMem(0x7ec8, { 0xb0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x956f, gbc.sp());
        EXPECT(0x7ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00B5
        gbc.setState(0x2bf, 0x6e67, 0xf980, 0xe4ce, 0x8503, 0x3d72, 0x1, 0x1);
        gbc.writeMem(0x2bf, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6e67, gbc.sp());
        EXPECT(0x2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00B6
        gbc.setState(0x1743, 0x1391, 0xa4b0, 0x2424, 0x1b5c, 0x7dcf, 0x0, 0x0);
        gbc.writeMem(0x1743, { 0xb0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1391, gbc.sp());
        EXPECT(0x1744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00B7
        gbc.setState(0x5861, 0x4ec3, 0x8b10, 0x2300, 0x9973, 0x294a, 0x0, 0x1);
        gbc.writeMem(0x5861, { 0xb0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4ec3, gbc.sp());
        EXPECT(0x5862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00B8
        gbc.setState(0x87f2, 0xabd1, 0x4900, 0x4cb2, 0xb632, 0x87e0, 0x0, 0x0);
        gbc.writeMem(0x87f2, { 0xb0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xabd1, gbc.sp());
        EXPECT(0x87f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x87f2));
        // B0 00B9
        gbc.setState(0x8cfb, 0xdb8c, 0x32a0, 0xa1cb, 0x334a, 0x8bc6, 0x1, 0x1);
        gbc.writeMem(0x8cfb, { 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdb8c, gbc.sp());
        EXPECT(0x8cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8cfb));
        // B0 00BA
        gbc.setState(0x8859, 0xa523, 0x3e10, 0x2e6c, 0x58b8, 0x828a, 0x1, 0x0);
        gbc.writeMem(0x8859, { 0xb0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa523, gbc.sp());
        EXPECT(0x885a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8859));
        // B0 00BB
        gbc.setState(0x9d, 0x9840, 0x1d50, 0xb602, 0x163f, 0x5b8e, 0x1, 0x0);
        gbc.writeMem(0x9d, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9840, gbc.sp());
        EXPECT(0x9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00BC
        gbc.setState(0x554a, 0xcbd1, 0x7f30, 0x8c22, 0x1938, 0x6806, 0x0, 0x1);
        gbc.writeMem(0x554a, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcbd1, gbc.sp());
        EXPECT(0x554b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00BD
        gbc.setState(0xe710, 0xcdca, 0x8000, 0x903d, 0x6693, 0x1a13, 0x1, 0x1);
        gbc.writeMem(0xe710, { 0xb0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcdca, gbc.sp());
        EXPECT(0xe711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe710));
        // B0 00BE
        gbc.setState(0x16b, 0xfb75, 0x66a0, 0x6d35, 0x4140, 0x20c6, 0x0, 0x0);
        gbc.writeMem(0x16b, { 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfb75, gbc.sp());
        EXPECT(0x16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00BF
        gbc.setState(0xcc36, 0xa34d, 0xe580, 0xcb0e, 0x5d41, 0x2702, 0x1, 0x0);
        gbc.writeMem(0xcc36, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa34d, gbc.sp());
        EXPECT(0xcc37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcc36));
        // B0 00C0
        gbc.setState(0xde58, 0xeb22, 0x12f0, 0x4369, 0xed6e, 0xe56e, 0x0, 0x1);
        gbc.writeMem(0xde58, { 0xb0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xeb22, gbc.sp());
        EXPECT(0xde59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xde58));
        // B0 00C1
        gbc.setState(0x56d4, 0x1338, 0xd370, 0xce39, 0x9066, 0x1731, 0x0, 0x0);
        gbc.writeMem(0x56d4, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1338, gbc.sp());
        EXPECT(0x56d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00C2
        gbc.setState(0x5140, 0x53c3, 0x7cb0, 0x3677, 0xb50a, 0x9d85, 0x0, 0x0);
        gbc.writeMem(0x5140, { 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x53c3, gbc.sp());
        EXPECT(0x5141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00C3
        gbc.setState(0x9809, 0xd1f8, 0x21c0, 0x8103, 0x8d6e, 0xcffb, 0x1, 0x1);
        gbc.writeMem(0x9809, { 0xb0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd1f8, gbc.sp());
        EXPECT(0x980a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9809));
        // B0 00C4
        gbc.setState(0x7b4d, 0x4000, 0x3ff0, 0xccfe, 0x4f18, 0x763f, 0x0, 0x1);
        gbc.writeMem(0x7b4d, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4000, gbc.sp());
        EXPECT(0x7b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00C5
        gbc.setState(0xd892, 0x243, 0x4750, 0x7341, 0x82a4, 0x4ee8, 0x0, 0x1);
        gbc.writeMem(0xd892, { 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x243, gbc.sp());
        EXPECT(0xd893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd892));
        // B0 00C6
        gbc.setState(0xbf8f, 0xc159, 0x6870, 0x8169, 0x4574, 0x54bb, 0x0, 0x0);
        gbc.writeMem(0xbf8f, { 0xb0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc159, gbc.sp());
        EXPECT(0xbf90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbf8f));
        // B0 00C7
        gbc.setState(0x4271, 0xdbd5, 0x7a10, 0x7132, 0x3486, 0x336c, 0x0, 0x0);
        gbc.writeMem(0x4271, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdbd5, gbc.sp());
        EXPECT(0x4272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00C8
        gbc.setState(0x6fb5, 0x8638, 0x3ba0, 0xb36e, 0xa01e, 0xce90, 0x1, 0x1);
        gbc.writeMem(0x6fb5, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8638, gbc.sp());
        EXPECT(0x6fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00C9
        gbc.setState(0x7668, 0x4ce5, 0xa670, 0x35b5, 0x8575, 0xd00c, 0x0, 0x0);
        gbc.writeMem(0x7668, { 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4ce5, gbc.sp());
        EXPECT(0x7669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00CA
        gbc.setState(0x1dd5, 0xe015, 0x8f40, 0xb2b8, 0x86c8, 0xcc0, 0x0, 0x1);
        gbc.writeMem(0x1dd5, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe015, gbc.sp());
        EXPECT(0x1dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00CB
        gbc.setState(0xb861, 0xf0bf, 0x7130, 0x140c, 0x8530, 0xf9ff, 0x1, 0x0);
        gbc.writeMem(0xb861, { 0xb0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf0bf, gbc.sp());
        EXPECT(0xb862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb861));
        // B0 00CC
        gbc.setState(0x7e62, 0x302, 0x4690, 0xb1ab, 0xebd5, 0x5921, 0x0, 0x0);
        gbc.writeMem(0x7e62, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x302, gbc.sp());
        EXPECT(0x7e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00CD
        gbc.setState(0xc09f, 0xb237, 0x2830, 0x4062, 0xa096, 0x834b, 0x1, 0x1);
        gbc.writeMem(0xc09f, { 0xb0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb237, gbc.sp());
        EXPECT(0xc0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc09f));
        // B0 00CE
        gbc.setState(0x6e29, 0xd484, 0x2c0, 0xf053, 0x5d5f, 0x1195, 0x1, 0x1);
        gbc.writeMem(0x6e29, { 0xb0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd484, gbc.sp());
        EXPECT(0x6e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00CF
        gbc.setState(0x8b7a, 0x39f6, 0xf430, 0xf8b8, 0x6dbf, 0x284, 0x0, 0x0);
        gbc.writeMem(0x8b7a, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x39f6, gbc.sp());
        EXPECT(0x8b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8b7a));
        // B0 00D0
        gbc.setState(0xe446, 0x235f, 0xc480, 0x6ebf, 0xd1b3, 0x58a1, 0x0, 0x0);
        gbc.writeMem(0xe446, { 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x235f, gbc.sp());
        EXPECT(0xe447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe446));
        // B0 00D1
        gbc.setState(0x3c60, 0xbcc3, 0xc1f0, 0x707d, 0xfdd7, 0x8237, 0x1, 0x1);
        gbc.writeMem(0x3c60, { 0xb0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbcc3, gbc.sp());
        EXPECT(0x3c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00D2
        gbc.setState(0xbf74, 0x87c, 0x4f40, 0x3caf, 0x1f69, 0x3eae, 0x1, 0x0);
        gbc.writeMem(0xbf74, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x87c, gbc.sp());
        EXPECT(0xbf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbf74));
        // B0 00D3
        gbc.setState(0xa35f, 0x480f, 0xe800, 0x34e1, 0x4c1d, 0xb7e7, 0x0, 0x1);
        gbc.writeMem(0xa35f, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x480f, gbc.sp());
        EXPECT(0xa360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa35f));
        // B0 00D4
        gbc.setState(0x560e, 0xa279, 0x1a70, 0x5fdf, 0x18d7, 0xd14c, 0x1, 0x1);
        gbc.writeMem(0x560e, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa279, gbc.sp());
        EXPECT(0x560f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00D5
        gbc.setState(0x6e93, 0x7e87, 0x8450, 0x5ebf, 0x4843, 0x7f07, 0x1, 0x1);
        gbc.writeMem(0x6e93, { 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7e87, gbc.sp());
        EXPECT(0x6e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00D6
        gbc.setState(0x7839, 0x3848, 0x3ee0, 0x8cc4, 0x189d, 0x88b5, 0x0, 0x0);
        gbc.writeMem(0x7839, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3848, gbc.sp());
        EXPECT(0x783a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00D7
        gbc.setState(0x280, 0x4c29, 0x31c0, 0x5661, 0x18cc, 0x2bc2, 0x1, 0x1);
        gbc.writeMem(0x280, { 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4c29, gbc.sp());
        EXPECT(0x281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00D8
        gbc.setState(0x254d, 0x8bf3, 0xe130, 0x9a43, 0xbcb7, 0xd8fc, 0x0, 0x0);
        gbc.writeMem(0x254d, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8bf3, gbc.sp());
        EXPECT(0x254e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00D9
        gbc.setState(0xc7ef, 0xfff, 0x12c0, 0x2602, 0xfc73, 0xb10b, 0x1, 0x1);
        gbc.writeMem(0xc7ef, { 0xb0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfff, gbc.sp());
        EXPECT(0xc7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc7ef));
        // B0 00DA
        gbc.setState(0x5f33, 0x5ab1, 0xfe50, 0x29a7, 0xc632, 0xfd76, 0x0, 0x1);
        gbc.writeMem(0x5f33, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5ab1, gbc.sp());
        EXPECT(0x5f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00DB
        gbc.setState(0x13b3, 0xc839, 0xf4c0, 0xd18e, 0x7318, 0xa56a, 0x0, 0x1);
        gbc.writeMem(0x13b3, { 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc839, gbc.sp());
        EXPECT(0x13b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00DC
        gbc.setState(0x18d8, 0xcc03, 0xaa10, 0xef94, 0xe512, 0x7063, 0x0, 0x0);
        gbc.writeMem(0x18d8, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcc03, gbc.sp());
        EXPECT(0x18d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00DD
        gbc.setState(0x3256, 0x2df3, 0xd270, 0x9751, 0x997f, 0x20d1, 0x1, 0x1);
        gbc.writeMem(0x3256, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2df3, gbc.sp());
        EXPECT(0x3257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00DE
        gbc.setState(0x338b, 0x1b9e, 0x7310, 0xfaac, 0x3d07, 0x4080, 0x1, 0x1);
        gbc.writeMem(0x338b, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1b9e, gbc.sp());
        EXPECT(0x338c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00DF
        gbc.setState(0xdf2c, 0xbc4f, 0x43c0, 0xb257, 0x870c, 0x5ef2, 0x0, 0x0);
        gbc.writeMem(0xdf2c, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbc4f, gbc.sp());
        EXPECT(0xdf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdf2c));
        // B0 00E0
        gbc.setState(0x5225, 0xe507, 0x9490, 0x28ea, 0x8bf3, 0xc613, 0x0, 0x1);
        gbc.writeMem(0x5225, { 0xb0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe507, gbc.sp());
        EXPECT(0x5226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00E1
        gbc.setState(0x5979, 0x60b9, 0x6300, 0x48b0, 0x24ae, 0x9469, 0x1, 0x1);
        gbc.writeMem(0x5979, { 0xb0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x60b9, gbc.sp());
        EXPECT(0x597a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00E2
        gbc.setState(0xce52, 0x33b0, 0x1cb0, 0x2434, 0xa3ce, 0xccf6, 0x0, 0x1);
        gbc.writeMem(0xce52, { 0xb0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x33b0, gbc.sp());
        EXPECT(0xce53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xce52));
        // B0 00E3
        gbc.setState(0x37b0, 0x75e4, 0xed90, 0x4c63, 0x5b51, 0x3b9f, 0x0, 0x1);
        gbc.writeMem(0x37b0, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x75e4, gbc.sp());
        EXPECT(0x37b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00E4
        gbc.setState(0x1070, 0x54ca, 0x40e0, 0xe56b, 0x6082, 0x67ed, 0x1, 0x0);
        gbc.writeMem(0x1070, { 0xb0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x54ca, gbc.sp());
        EXPECT(0x1071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00E5
        gbc.setState(0x7502, 0xc4aa, 0xa330, 0x96a6, 0x3797, 0x22ca, 0x1, 0x1);
        gbc.writeMem(0x7502, { 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc4aa, gbc.sp());
        EXPECT(0x7503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00E7
        gbc.setState(0xdc1d, 0x194d, 0xd340, 0x2356, 0xa1b8, 0x450b, 0x1, 0x1);
        gbc.writeMem(0xdc1d, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x194d, gbc.sp());
        EXPECT(0xdc1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdc1d));
        // B0 00E8
        gbc.setState(0xdf8c, 0xd379, 0xf150, 0xd878, 0x1931, 0x8843, 0x1, 0x0);
        gbc.writeMem(0xdf8c, { 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd379, gbc.sp());
        EXPECT(0xdf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdf8c));
        // B0 00E9
        gbc.setState(0x5d31, 0xe45, 0x5b70, 0x5fdb, 0x7931, 0x6c9d, 0x0, 0x0);
        gbc.writeMem(0x5d31, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe45, gbc.sp());
        EXPECT(0x5d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00EA
        gbc.setState(0x3ca0, 0x31f5, 0x52f0, 0xa3d2, 0xdbf2, 0xe84, 0x1, 0x1);
        gbc.writeMem(0x3ca0, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x31f5, gbc.sp());
        EXPECT(0x3ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00EB
        gbc.setState(0x4edc, 0xa985, 0x8be0, 0xc654, 0x1ccb, 0xecd8, 0x0, 0x1);
        gbc.writeMem(0x4edc, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa985, gbc.sp());
        EXPECT(0x4edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00EC
        gbc.setState(0x3b2a, 0xef92, 0xad80, 0xc24f, 0x6cf6, 0xd9bc, 0x0, 0x0);
        gbc.writeMem(0x3b2a, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xef92, gbc.sp());
        EXPECT(0x3b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00ED
        gbc.setState(0x55e0, 0xfbf2, 0x8430, 0x44f, 0xe64c, 0xf648, 0x1, 0x1);
        gbc.writeMem(0x55e0, { 0xb0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfbf2, gbc.sp());
        EXPECT(0x55e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00EE
        gbc.setState(0x82e2, 0x2c25, 0x7020, 0x2bb0, 0x4ce1, 0x32bf, 0x1, 0x0);
        gbc.writeMem(0x82e2, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2c25, gbc.sp());
        EXPECT(0x82e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x82e2));
        // B0 00EF
        gbc.setState(0x3af5, 0x1de4, 0xb90, 0x6a3e, 0x963e, 0xcb92, 0x0, 0x0);
        gbc.writeMem(0x3af5, { 0xb0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1de4, gbc.sp());
        EXPECT(0x3af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00F0
        gbc.setState(0x2b5d, 0x3626, 0xc6b0, 0x42a6, 0xb1a9, 0xef9e, 0x1, 0x0);
        gbc.writeMem(0x2b5d, { 0xb0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3626, gbc.sp());
        EXPECT(0x2b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00F1
        gbc.setState(0x24b8, 0x6477, 0xa240, 0x7d5d, 0xb058, 0xb965, 0x0, 0x1);
        gbc.writeMem(0x24b8, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6477, gbc.sp());
        EXPECT(0x24b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00F2
        gbc.setState(0x18aa, 0xd9ff, 0x39e0, 0xb20, 0x57bc, 0x90f0, 0x0, 0x1);
        gbc.writeMem(0x18aa, { 0xb0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd9ff, gbc.sp());
        EXPECT(0x18ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00F3
        gbc.setState(0xd6b, 0xf9e7, 0x16a0, 0xcd83, 0x16d8, 0x67e0, 0x1, 0x1);
        gbc.writeMem(0xd6b, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf9e7, gbc.sp());
        EXPECT(0xd6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00F4
        gbc.setState(0x4af5, 0x8657, 0xd710, 0x9ae, 0x2a55, 0x9e6a, 0x0, 0x0);
        gbc.writeMem(0x4af5, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8657, gbc.sp());
        EXPECT(0x4af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00F6
        gbc.setState(0xd12a, 0x33b9, 0xa4a0, 0x438e, 0xecba, 0xc27d, 0x1, 0x1);
        gbc.writeMem(0xd12a, { 0xb0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x33b9, gbc.sp());
        EXPECT(0xd12b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd12a));
        // B0 00F7
        gbc.setState(0x82fa, 0x193e, 0x4120, 0x8eff, 0xcf39, 0x4112, 0x1, 0x1);
        gbc.writeMem(0x82fa, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x193e, gbc.sp());
        EXPECT(0x82fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x82fa));
        // B0 00F8
        gbc.setState(0x32e0, 0x9bf9, 0x4370, 0x1edf, 0x37ca, 0x4158, 0x1, 0x0);
        gbc.writeMem(0x32e0, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9bf9, gbc.sp());
        EXPECT(0x32e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00F9
        gbc.setState(0x3d13, 0xa1d1, 0xee70, 0x2845, 0xb8a0, 0x702f, 0x1, 0x0);
        gbc.writeMem(0x3d13, { 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa1d1, gbc.sp());
        EXPECT(0x3d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00FA
        gbc.setState(0x9f0, 0x7da9, 0x660, 0xa3b1, 0x7ba0, 0xbda5, 0x0, 0x1);
        gbc.writeMem(0x9f0, { 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7da9, gbc.sp());
        EXPECT(0x9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00FB
        gbc.setState(0x40e6, 0x3f22, 0xa420, 0x2366, 0x2ed1, 0x645c, 0x1, 0x1);
        gbc.writeMem(0x40e6, { 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3f22, gbc.sp());
        EXPECT(0x40e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00FC
        gbc.setState(0x5ca7, 0x62c4, 0xf5c0, 0xabf3, 0x98d0, 0xac6d, 0x0, 0x0);
        gbc.writeMem(0x5ca7, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x62c4, gbc.sp());
        EXPECT(0x5ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 00FD
        gbc.setState(0xed33, 0x129, 0x4f60, 0x3c45, 0x4f5d, 0x9563, 0x1, 0x1);
        gbc.writeMem(0xed33, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x129, gbc.sp());
        EXPECT(0xed34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xed33));
        // B0 00FE
        gbc.setState(0xc793, 0x115f, 0xae50, 0x6da4, 0xd591, 0xf17c, 0x1, 0x0);
        gbc.writeMem(0xc793, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x115f, gbc.sp());
        EXPECT(0xc794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc793));
        // B0 00FF
        gbc.setState(0x34e7, 0x401, 0x7e70, 0xfbd4, 0x625b, 0xbcfe, 0x1, 0x0);
        gbc.writeMem(0x34e7, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x401, gbc.sp());
        EXPECT(0x34e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0100
        gbc.setState(0xe929, 0x1c4, 0x3940, 0x7f39, 0x3b93, 0xb509, 0x1, 0x1);
        gbc.writeMem(0xe929, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1c4, gbc.sp());
        EXPECT(0xe92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe929));
        // B0 0101
        gbc.setState(0x4ce8, 0x44de, 0x5880, 0x2e7a, 0x47d, 0x7acf, 0x0, 0x1);
        gbc.writeMem(0x4ce8, { 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x44de, gbc.sp());
        EXPECT(0x4ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0102
        gbc.setState(0xc2c1, 0x1f09, 0x53c0, 0x7d88, 0x9e5e, 0x5e5f, 0x0, 0x1);
        gbc.writeMem(0xc2c1, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1f09, gbc.sp());
        EXPECT(0xc2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc2c1));
        // B0 0103
        gbc.setState(0x15a4, 0x3f0b, 0xaa20, 0xe708, 0x3d72, 0x7429, 0x0, 0x1);
        gbc.writeMem(0x15a4, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3f0b, gbc.sp());
        EXPECT(0x15a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0104
        gbc.setState(0x73e4, 0x634e, 0x3050, 0x3155, 0xdaa8, 0xa796, 0x0, 0x0);
        gbc.writeMem(0x73e4, { 0xb0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x634e, gbc.sp());
        EXPECT(0x73e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0105
        gbc.setState(0x2295, 0x4ec1, 0xcc40, 0x415f, 0x87bd, 0x1d41, 0x1, 0x0);
        gbc.writeMem(0x2295, { 0xb0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4ec1, gbc.sp());
        EXPECT(0x2296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0106
        gbc.setState(0x3b64, 0x95c3, 0xf800, 0x5114, 0x4c6d, 0x7b38, 0x0, 0x1);
        gbc.writeMem(0x3b64, { 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x95c3, gbc.sp());
        EXPECT(0x3b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0107
        gbc.setState(0x59c8, 0x4672, 0x7ab0, 0x536d, 0xf214, 0x1d9c, 0x1, 0x1);
        gbc.writeMem(0x59c8, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4672, gbc.sp());
        EXPECT(0x59c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0108
        gbc.setState(0x90e1, 0x30ff, 0x2e40, 0x4158, 0x9507, 0xae4a, 0x0, 0x0);
        gbc.writeMem(0x90e1, { 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x30ff, gbc.sp());
        EXPECT(0x90e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x90e1));
        // B0 0109
        gbc.setState(0x284c, 0x88d2, 0xd310, 0x1c79, 0xf61a, 0xa8a2, 0x1, 0x1);
        gbc.writeMem(0x284c, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x88d2, gbc.sp());
        EXPECT(0x284d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 010A
        gbc.setState(0x8f08, 0xfdd0, 0xdec0, 0x92cc, 0x4113, 0x47c3, 0x1, 0x0);
        gbc.writeMem(0x8f08, { 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfdd0, gbc.sp());
        EXPECT(0x8f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8f08));
        // B0 010B
        gbc.setState(0x4cc5, 0x260b, 0x50a0, 0x9a92, 0x950e, 0xc283, 0x1, 0x0);
        gbc.writeMem(0x4cc5, { 0xb0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x260b, gbc.sp());
        EXPECT(0x4cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 010D
        gbc.setState(0xd03e, 0xc961, 0x3050, 0x556a, 0x67f0, 0x5f0d, 0x0, 0x1);
        gbc.writeMem(0xd03e, { 0xb0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc961, gbc.sp());
        EXPECT(0xd03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd03e));
        // B0 010E
        gbc.setState(0x9067, 0x8c58, 0x18f0, 0x6f, 0xb6d9, 0xab12, 0x1, 0x0);
        gbc.writeMem(0x9067, { 0xb0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8c58, gbc.sp());
        EXPECT(0x9068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9067));
        // B0 010F
        gbc.setState(0x5f0b, 0x4a16, 0x7120, 0x269b, 0xcfca, 0xf7ed, 0x0, 0x1);
        gbc.writeMem(0x5f0b, { 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4a16, gbc.sp());
        EXPECT(0x5f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0110
        gbc.setState(0x6e4e, 0x427d, 0x99e0, 0x1501, 0x403b, 0xda6a, 0x1, 0x1);
        gbc.writeMem(0x6e4e, { 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x427d, gbc.sp());
        EXPECT(0x6e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0111
        gbc.setState(0x4afa, 0x4fc3, 0x73e0, 0x545f, 0x5990, 0xf71e, 0x0, 0x0);
        gbc.writeMem(0x4afa, { 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4fc3, gbc.sp());
        EXPECT(0x4afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0112
        gbc.setState(0x4245, 0x97b, 0x9c30, 0xe4f3, 0x34ad, 0xe299, 0x1, 0x0);
        gbc.writeMem(0x4245, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x97b, gbc.sp());
        EXPECT(0x4246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0114
        gbc.setState(0xd130, 0x977d, 0x6d00, 0x4ee9, 0xe6ca, 0x2909, 0x0, 0x0);
        gbc.writeMem(0xd130, { 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x977d, gbc.sp());
        EXPECT(0xd131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd130));
        // B0 0115
        gbc.setState(0x793a, 0x32ab, 0xcdf0, 0xcb6c, 0x5591, 0x85d0, 0x0, 0x1);
        gbc.writeMem(0x793a, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x32ab, gbc.sp());
        EXPECT(0x793b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0116
        gbc.setState(0x3622, 0x9254, 0xc6d0, 0x89d3, 0xb680, 0x10d5, 0x1, 0x1);
        gbc.writeMem(0x3622, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9254, gbc.sp());
        EXPECT(0x3623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0117
        gbc.setState(0x9dbd, 0x888e, 0x75a0, 0x5597, 0x64a1, 0xbff4, 0x0, 0x0);
        gbc.writeMem(0x9dbd, { 0xb0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x888e, gbc.sp());
        EXPECT(0x9dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9dbd));
        // B0 0118
        gbc.setState(0x24ce, 0x3a9f, 0x17c0, 0x5b62, 0x5e19, 0x7dd9, 0x1, 0x0);
        gbc.writeMem(0x24ce, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3a9f, gbc.sp());
        EXPECT(0x24cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0119
        gbc.setState(0xa23e, 0x11f4, 0xb2c0, 0xa8e8, 0x2adc, 0x36fb, 0x0, 0x0);
        gbc.writeMem(0xa23e, { 0xb0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x11f4, gbc.sp());
        EXPECT(0xa23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa23e));
        // B0 011A
        gbc.setState(0xc9ca, 0x932d, 0x1ae0, 0x25d6, 0x7210, 0x693e, 0x1, 0x0);
        gbc.writeMem(0xc9ca, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x932d, gbc.sp());
        EXPECT(0xc9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc9ca));
        // B0 011B
        gbc.setState(0x3799, 0x9321, 0x2800, 0x6052, 0x873f, 0x38cf, 0x0, 0x1);
        gbc.writeMem(0x3799, { 0xb0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9321, gbc.sp());
        EXPECT(0x379a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 011C
        gbc.setState(0x4d8f, 0x5bf0, 0x9e40, 0xf6c5, 0xed0e, 0x83de, 0x0, 0x1);
        gbc.writeMem(0x4d8f, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5bf0, gbc.sp());
        EXPECT(0x4d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 011D
        gbc.setState(0x7f7b, 0x227b, 0x8860, 0xde65, 0x79a7, 0xa0ac, 0x1, 0x0);
        gbc.writeMem(0x7f7b, { 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x227b, gbc.sp());
        EXPECT(0x7f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 011E
        gbc.setState(0x504e, 0x1d22, 0xfdf0, 0x95b2, 0x775a, 0x4c05, 0x1, 0x0);
        gbc.writeMem(0x504e, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1d22, gbc.sp());
        EXPECT(0x504f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 011F
        gbc.setState(0x81c1, 0x3fe0, 0xadf0, 0x7a10, 0xeae, 0x505a, 0x0, 0x0);
        gbc.writeMem(0x81c1, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3fe0, gbc.sp());
        EXPECT(0x81c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x81c1));
        // B0 0120
        gbc.setState(0xf41, 0x67f5, 0x91d0, 0x6a6b, 0x73e9, 0xcaab, 0x0, 0x1);
        gbc.writeMem(0xf41, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x67f5, gbc.sp());
        EXPECT(0xf42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0121
        gbc.setState(0xa93f, 0x9c42, 0xb7a0, 0xa4b3, 0xff01, 0xae65, 0x0, 0x1);
        gbc.writeMem(0xa93f, { 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9c42, gbc.sp());
        EXPECT(0xa940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa93f));
        // B0 0122
        gbc.setState(0x779b, 0xc828, 0xac70, 0xd22f, 0xbb44, 0xedd2, 0x0, 0x1);
        gbc.writeMem(0x779b, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc828, gbc.sp());
        EXPECT(0x779c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0123
        gbc.setState(0x8e83, 0x2bb5, 0xba90, 0xa7d7, 0x51c0, 0xbf71, 0x1, 0x1);
        gbc.writeMem(0x8e83, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2bb5, gbc.sp());
        EXPECT(0x8e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8e83));
        // B0 0124
        gbc.setState(0x696f, 0xb47e, 0x4360, 0x3d34, 0xe030, 0x21fd, 0x0, 0x1);
        gbc.writeMem(0x696f, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb47e, gbc.sp());
        EXPECT(0x6970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0125
        gbc.setState(0x2f8f, 0x692, 0x1210, 0x5824, 0x77df, 0x3be3, 0x0, 0x0);
        gbc.writeMem(0x2f8f, { 0xb0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x692, gbc.sp());
        EXPECT(0x2f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0127
        gbc.setState(0x525, 0x40c1, 0x7110, 0x3008, 0xa616, 0x68f0, 0x1, 0x1);
        gbc.writeMem(0x525, { 0xb0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x40c1, gbc.sp());
        EXPECT(0x526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0128
        gbc.setState(0xafa9, 0xe3d0, 0x4b90, 0xff37, 0xcb56, 0xa64e, 0x0, 0x1);
        gbc.writeMem(0xafa9, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe3d0, gbc.sp());
        EXPECT(0xafaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xafa9));
        // B0 0129
        gbc.setState(0x93e, 0xee05, 0xe3b0, 0x9127, 0xd5a5, 0x39af, 0x1, 0x0);
        gbc.writeMem(0x93e, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xee05, gbc.sp());
        EXPECT(0x93f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 012A
        gbc.setState(0x24bc, 0xa04f, 0xdfa0, 0xa043, 0xa9c0, 0x4956, 0x0, 0x1);
        gbc.writeMem(0x24bc, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa04f, gbc.sp());
        EXPECT(0x24bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 012B
        gbc.setState(0xe3c7, 0x117, 0xcea0, 0xbbb4, 0x4f7e, 0xfe47, 0x1, 0x1);
        gbc.writeMem(0xe3c7, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x117, gbc.sp());
        EXPECT(0xe3c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe3c7));
        // B0 012C
        gbc.setState(0x7b6c, 0xef77, 0x3f40, 0x3e91, 0x1914, 0xd9e9, 0x0, 0x1);
        gbc.writeMem(0x7b6c, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xef77, gbc.sp());
        EXPECT(0x7b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 012D
        gbc.setState(0xef35, 0x9b5b, 0xc8e0, 0x73d1, 0xfd04, 0x4054, 0x1, 0x1);
        gbc.writeMem(0xef35, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9b5b, gbc.sp());
        EXPECT(0xef36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xef35));
        // B0 012E
        gbc.setState(0x62a, 0x7a53, 0xc1b0, 0x62a7, 0x44ba, 0xa7a8, 0x0, 0x1);
        gbc.writeMem(0x62a, { 0xb0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7a53, gbc.sp());
        EXPECT(0x62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 012F
        gbc.setState(0x6c76, 0x29b1, 0x3780, 0x6b4c, 0x1cdd, 0x993f, 0x0, 0x1);
        gbc.writeMem(0x6c76, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x29b1, gbc.sp());
        EXPECT(0x6c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0130
        gbc.setState(0x68a3, 0x1fc, 0xb770, 0xeadd, 0xe405, 0xaa9d, 0x1, 0x0);
        gbc.writeMem(0x68a3, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1fc, gbc.sp());
        EXPECT(0x68a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0131
        gbc.setState(0xe4ae, 0xdb73, 0xc8b0, 0x1001, 0xbb02, 0xad52, 0x1, 0x1);
        gbc.writeMem(0xe4ae, { 0xb0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdb73, gbc.sp());
        EXPECT(0xe4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe4ae));
        // B0 0132
        gbc.setState(0x1c7b, 0x9c33, 0xd5b0, 0x89f8, 0x727f, 0xdc76, 0x0, 0x0);
        gbc.writeMem(0x1c7b, { 0xb0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9c33, gbc.sp());
        EXPECT(0x1c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0133
        gbc.setState(0x92c4, 0xab08, 0x1430, 0xe7ef, 0x17e2, 0x7e46, 0x1, 0x1);
        gbc.writeMem(0x92c4, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xab08, gbc.sp());
        EXPECT(0x92c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x92c4));
        // B0 0134
        gbc.setState(0x9b3d, 0x589e, 0x6960, 0xa146, 0x8e38, 0xa5fc, 0x0, 0x0);
        gbc.writeMem(0x9b3d, { 0xb0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x589e, gbc.sp());
        EXPECT(0x9b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9b3d));
        // B0 0135
        gbc.setState(0x6c64, 0x9160, 0x5320, 0x1084, 0x6aee, 0x5f19, 0x1, 0x1);
        gbc.writeMem(0x6c64, { 0xb0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9160, gbc.sp());
        EXPECT(0x6c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0136
        gbc.setState(0x9cd2, 0xa576, 0x4500, 0x55ef, 0xc6ad, 0xd981, 0x1, 0x0);
        gbc.writeMem(0x9cd2, { 0xb0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa576, gbc.sp());
        EXPECT(0x9cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9cd2));
        // B0 0138
        gbc.setState(0x20e0, 0x6848, 0xeac0, 0x14b3, 0x315d, 0x3d18, 0x0, 0x0);
        gbc.writeMem(0x20e0, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6848, gbc.sp());
        EXPECT(0x20e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 013A
        gbc.setState(0x4867, 0x2466, 0x1f90, 0xa4df, 0x441d, 0x4634, 0x0, 0x0);
        gbc.writeMem(0x4867, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2466, gbc.sp());
        EXPECT(0x4868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 013B
        gbc.setState(0x7c07, 0x354, 0x6f70, 0x79f7, 0xedd5, 0x2480, 0x1, 0x1);
        gbc.writeMem(0x7c07, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x354, gbc.sp());
        EXPECT(0x7c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 013C
        gbc.setState(0x77aa, 0x8feb, 0xdc0, 0xd5eb, 0xa250, 0xd1cd, 0x0, 0x1);
        gbc.writeMem(0x77aa, { 0xb0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8feb, gbc.sp());
        EXPECT(0x77ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 013D
        gbc.setState(0x1950, 0xfd51, 0xd040, 0x719f, 0xdb9c, 0xc74d, 0x1, 0x1);
        gbc.writeMem(0x1950, { 0xb0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfd51, gbc.sp());
        EXPECT(0x1951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 013E
        gbc.setState(0xd10c, 0x655e, 0x3290, 0x3beb, 0x837b, 0x9ec4, 0x1, 0x1);
        gbc.writeMem(0xd10c, { 0xb0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x655e, gbc.sp());
        EXPECT(0xd10d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd10c));
        // B0 013F
        gbc.setState(0x8eba, 0x8511, 0xe410, 0xe701, 0xa45a, 0x2314, 0x0, 0x1);
        gbc.writeMem(0x8eba, { 0xb0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8511, gbc.sp());
        EXPECT(0x8ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8eba));
        // B0 0140
        gbc.setState(0xb3c1, 0x5576, 0x57d0, 0xbf83, 0x642b, 0xeab7, 0x0, 0x0);
        gbc.writeMem(0xb3c1, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5576, gbc.sp());
        EXPECT(0xb3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb3c1));
        // B0 0141
        gbc.setState(0xb00, 0x175, 0x36d0, 0x62f1, 0x5645, 0xe059, 0x1, 0x0);
        gbc.writeMem(0xb00, { 0xb0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x175, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0142
        gbc.setState(0x8690, 0x3448, 0x5200, 0x969a, 0xc168, 0x4565, 0x0, 0x1);
        gbc.writeMem(0x8690, { 0xb0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3448, gbc.sp());
        EXPECT(0x8691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8690));
        // B0 0143
        gbc.setState(0x512b, 0xa5ba, 0xd5c0, 0xdb5d, 0xd740, 0x7f41, 0x1, 0x1);
        gbc.writeMem(0x512b, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa5ba, gbc.sp());
        EXPECT(0x512c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0144
        gbc.setState(0xd47a, 0x5df, 0xda30, 0x9d27, 0xd850, 0xfe49, 0x0, 0x1);
        gbc.writeMem(0xd47a, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5df, gbc.sp());
        EXPECT(0xd47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd47a));
        // B0 0145
        gbc.setState(0xc01e, 0x7ea3, 0x9040, 0xdfc2, 0xae6a, 0x4773, 0x0, 0x1);
        gbc.writeMem(0xc01e, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7ea3, gbc.sp());
        EXPECT(0xc01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc01e));
        // B0 0146
        gbc.setState(0xa43f, 0x9129, 0xc050, 0x4730, 0xb210, 0x8ca5, 0x1, 0x1);
        gbc.writeMem(0xa43f, { 0xb0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9129, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa43f));
        // B0 0147
        gbc.setState(0x9f66, 0x50e6, 0xe290, 0x6785, 0x426d, 0x6c5, 0x0, 0x0);
        gbc.writeMem(0x9f66, { 0xb0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x50e6, gbc.sp());
        EXPECT(0x9f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9f66));
        // B0 0148
        gbc.setState(0xe664, 0x2f92, 0xe0b0, 0xa823, 0x902f, 0x27fa, 0x0, 0x1);
        gbc.writeMem(0xe664, { 0xb0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2f92, gbc.sp());
        EXPECT(0xe665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe664));
        // B0 0149
        gbc.setState(0xba37, 0x541, 0x34a0, 0x7584, 0xd699, 0xe834, 0x0, 0x0);
        gbc.writeMem(0xba37, { 0xb0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x541, gbc.sp());
        EXPECT(0xba38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xba37));
        // B0 014A
        gbc.setState(0xccc3, 0x60db, 0xe9f0, 0xb474, 0xb7b7, 0x35f, 0x1, 0x1);
        gbc.writeMem(0xccc3, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x60db, gbc.sp());
        EXPECT(0xccc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xccc3));
        // B0 014B
        gbc.setState(0xc1ab, 0x6b48, 0xc6f0, 0x5ad2, 0xd8b1, 0xd039, 0x0, 0x0);
        gbc.writeMem(0xc1ab, { 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6b48, gbc.sp());
        EXPECT(0xc1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc1ab));
        // B0 014C
        gbc.setState(0x99bd, 0x3fe0, 0x5c10, 0x88ff, 0x40cb, 0x7ed1, 0x1, 0x0);
        gbc.writeMem(0x99bd, { 0xb0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3fe0, gbc.sp());
        EXPECT(0x99be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x99bd));
        // B0 014D
        gbc.setState(0x4500, 0x828e, 0x15b0, 0xed99, 0x891d, 0xf9c6, 0x1, 0x0);
        gbc.writeMem(0x4500, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x828e, gbc.sp());
        EXPECT(0x4501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 014E
        gbc.setState(0x4283, 0x9994, 0x3460, 0x6840, 0x7c66, 0x5767, 0x0, 0x1);
        gbc.writeMem(0x4283, { 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9994, gbc.sp());
        EXPECT(0x4284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 014F
        gbc.setState(0xec23, 0x71a9, 0x78e0, 0x81fa, 0xec49, 0x9b31, 0x1, 0x1);
        gbc.writeMem(0xec23, { 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x71a9, gbc.sp());
        EXPECT(0xec24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xec23));
        // B0 0150
        gbc.setState(0x7fd3, 0xf385, 0xc1c0, 0x88ed, 0xa229, 0xab9e, 0x0, 0x1);
        gbc.writeMem(0x7fd3, { 0xb0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf385, gbc.sp());
        EXPECT(0x7fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0151
        gbc.setState(0x5159, 0xfe3b, 0xb6d0, 0xc6ad, 0xcc16, 0x613e, 0x1, 0x0);
        gbc.writeMem(0x5159, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfe3b, gbc.sp());
        EXPECT(0x515a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0152
        gbc.setState(0xa4b1, 0xb192, 0xfc30, 0xec4c, 0x6983, 0x2557, 0x1, 0x1);
        gbc.writeMem(0xa4b1, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb192, gbc.sp());
        EXPECT(0xa4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa4b1));
        // B0 0153
        gbc.setState(0xaf87, 0xc90e, 0xd440, 0x840d, 0x378, 0x8701, 0x1, 0x1);
        gbc.writeMem(0xaf87, { 0xb0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc90e, gbc.sp());
        EXPECT(0xaf88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xaf87));
        // B0 0154
        gbc.setState(0x2bc8, 0xd940, 0x6bb0, 0x78be, 0x5216, 0x220a, 0x1, 0x0);
        gbc.writeMem(0x2bc8, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd940, gbc.sp());
        EXPECT(0x2bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0156
        gbc.setState(0xc730, 0xac7d, 0xf1d0, 0x4d82, 0x3d0e, 0x34ae, 0x1, 0x1);
        gbc.writeMem(0xc730, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xac7d, gbc.sp());
        EXPECT(0xc731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc730));
        // B0 0157
        gbc.setState(0xcaa7, 0x5d5c, 0xb090, 0x2064, 0xb42b, 0xc87a, 0x1, 0x1);
        gbc.writeMem(0xcaa7, { 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5d5c, gbc.sp());
        EXPECT(0xcaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcaa7));
        // B0 0158
        gbc.setState(0x7496, 0xfd9d, 0xac20, 0x322c, 0xb572, 0xaf6d, 0x0, 0x1);
        gbc.writeMem(0x7496, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfd9d, gbc.sp());
        EXPECT(0x7497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0159
        gbc.setState(0x8ca9, 0x4163, 0x2760, 0x4f5e, 0xb08c, 0xf4d9, 0x0, 0x0);
        gbc.writeMem(0x8ca9, { 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4163, gbc.sp());
        EXPECT(0x8caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8ca9));
        // B0 015A
        gbc.setState(0x2715, 0xa4ae, 0xb760, 0x54be, 0x89e4, 0x5946, 0x1, 0x0);
        gbc.writeMem(0x2715, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa4ae, gbc.sp());
        EXPECT(0x2716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 015B
        gbc.setState(0xb0, 0x1afa, 0x34d0, 0x3cb8, 0x5d42, 0x4c80, 0x1, 0x0);
        gbc.writeMem(0xb0, { 0xb0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1afa, gbc.sp());
        EXPECT(0xb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 015C
        gbc.setState(0x72cf, 0x3fad, 0x8960, 0x6856, 0xfb0b, 0x1499, 0x1, 0x0);
        gbc.writeMem(0x72cf, { 0xb0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3fad, gbc.sp());
        EXPECT(0x72d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 015E
        gbc.setState(0x1e43, 0xf0ed, 0x5f30, 0x315c, 0x5993, 0x6e75, 0x1, 0x0);
        gbc.writeMem(0x1e43, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf0ed, gbc.sp());
        EXPECT(0x1e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 015F
        gbc.setState(0x8d99, 0x998b, 0x1010, 0xe698, 0xee96, 0x3405, 0x0, 0x0);
        gbc.writeMem(0x8d99, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x998b, gbc.sp());
        EXPECT(0x8d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8d99));
        // B0 0160
        gbc.setState(0xe06f, 0xe032, 0xecf0, 0x4883, 0xcbf2, 0x1146, 0x0, 0x0);
        gbc.writeMem(0xe06f, { 0xb0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe032, gbc.sp());
        EXPECT(0xe070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe06f));
        // B0 0161
        gbc.setState(0x35f9, 0x27c6, 0xba0, 0xe584, 0xb265, 0x248, 0x1, 0x0);
        gbc.writeMem(0x35f9, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x27c6, gbc.sp());
        EXPECT(0x35fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0162
        gbc.setState(0xe0ab, 0x151a, 0x7c30, 0x52e2, 0x4917, 0x2db0, 0x0, 0x1);
        gbc.writeMem(0xe0ab, { 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x151a, gbc.sp());
        EXPECT(0xe0ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe0ab));
        // B0 0163
        gbc.setState(0x5d15, 0x75ca, 0x1a70, 0xc9cc, 0x8303, 0xee67, 0x0, 0x0);
        gbc.writeMem(0x5d15, { 0xb0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x75ca, gbc.sp());
        EXPECT(0x5d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0164
        gbc.setState(0x738e, 0x50a2, 0x6940, 0x77c0, 0xc8f3, 0xfe4b, 0x0, 0x1);
        gbc.writeMem(0x738e, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x50a2, gbc.sp());
        EXPECT(0x738f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0165
        gbc.setState(0x87b4, 0x1c44, 0x5be0, 0x290b, 0xb7d1, 0x36d2, 0x1, 0x0);
        gbc.writeMem(0x87b4, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1c44, gbc.sp());
        EXPECT(0x87b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x87b4));
        // B0 0166
        gbc.setState(0xdb6c, 0x432b, 0x3aa0, 0xd014, 0xa59e, 0x557d, 0x1, 0x1);
        gbc.writeMem(0xdb6c, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x432b, gbc.sp());
        EXPECT(0xdb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdb6c));
        // B0 0167
        gbc.setState(0x4ec8, 0x5fa4, 0xcb50, 0x777d, 0x8079, 0x759c, 0x1, 0x1);
        gbc.writeMem(0x4ec8, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5fa4, gbc.sp());
        EXPECT(0x4ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0168
        gbc.setState(0xef11, 0x7678, 0xf5b0, 0x82b, 0xc26, 0x8901, 0x1, 0x0);
        gbc.writeMem(0xef11, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7678, gbc.sp());
        EXPECT(0xef12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xef11));
        // B0 0169
        gbc.setState(0x7c6f, 0x7ce5, 0x8690, 0x9123, 0x24d7, 0xa316, 0x1, 0x1);
        gbc.writeMem(0x7c6f, { 0xb0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7ce5, gbc.sp());
        EXPECT(0x7c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 016A
        gbc.setState(0xd497, 0x96bc, 0x7420, 0x9269, 0x1f4e, 0xddbb, 0x0, 0x1);
        gbc.writeMem(0xd497, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x96bc, gbc.sp());
        EXPECT(0xd498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd497));
        // B0 016B
        gbc.setState(0xee96, 0x2f4a, 0x1b80, 0xe311, 0x907c, 0xf803, 0x1, 0x0);
        gbc.writeMem(0xee96, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2f4a, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xee96));
        // B0 016C
        gbc.setState(0x4e02, 0xc810, 0x5f90, 0x1160, 0x8c91, 0xd090, 0x1, 0x0);
        gbc.writeMem(0x4e02, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc810, gbc.sp());
        EXPECT(0x4e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 016D
        gbc.setState(0xa37d, 0x147d, 0x3750, 0x7780, 0xb8c3, 0x14c2, 0x0, 0x1);
        gbc.writeMem(0xa37d, { 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x147d, gbc.sp());
        EXPECT(0xa37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa37d));
        // B0 016E
        gbc.setState(0xe057, 0x7687, 0x8b40, 0x399f, 0xff76, 0xf59, 0x1, 0x0);
        gbc.writeMem(0xe057, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7687, gbc.sp());
        EXPECT(0xe058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe057));
        // B0 016F
        gbc.setState(0x3cc4, 0x6d10, 0x68c0, 0x6038, 0x67fd, 0x409b, 0x1, 0x0);
        gbc.writeMem(0x3cc4, { 0xb0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6d10, gbc.sp());
        EXPECT(0x3cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0170
        gbc.setState(0xef2b, 0xe4c, 0xc130, 0x597e, 0xb864, 0x5b67, 0x1, 0x0);
        gbc.writeMem(0xef2b, { 0xb0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe4c, gbc.sp());
        EXPECT(0xef2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xef2b));
        // B0 0171
        gbc.setState(0x2101, 0x4ea7, 0x24c0, 0x7134, 0x5302, 0xbfc4, 0x1, 0x1);
        gbc.writeMem(0x2101, { 0xb0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4ea7, gbc.sp());
        EXPECT(0x2102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0172
        gbc.setState(0x8b7b, 0xc7dc, 0xd280, 0x5fe2, 0xaa8d, 0xed9a, 0x0, 0x0);
        gbc.writeMem(0x8b7b, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc7dc, gbc.sp());
        EXPECT(0x8b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8b7b));
        // B0 0173
        gbc.setState(0x6664, 0xd080, 0xe4e0, 0xe990, 0x4af3, 0x68ef, 0x1, 0x1);
        gbc.writeMem(0x6664, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0x6665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0174
        gbc.setState(0x4b03, 0xedf, 0x4380, 0x3d4f, 0x3923, 0x81cc, 0x1, 0x1);
        gbc.writeMem(0x4b03, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xedf, gbc.sp());
        EXPECT(0x4b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0175
        gbc.setState(0xaf48, 0x8da5, 0x1c30, 0xa99b, 0x9bb3, 0x3993, 0x1, 0x1);
        gbc.writeMem(0xaf48, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8da5, gbc.sp());
        EXPECT(0xaf49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xaf48));
        // B0 0176
        gbc.setState(0x1af7, 0xcd9b, 0x4730, 0x214d, 0xad02, 0x626f, 0x0, 0x0);
        gbc.writeMem(0x1af7, { 0xb0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcd9b, gbc.sp());
        EXPECT(0x1af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0177
        gbc.setState(0x9942, 0x6207, 0x5e90, 0x75f7, 0x4b5, 0xe0aa, 0x0, 0x0);
        gbc.writeMem(0x9942, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6207, gbc.sp());
        EXPECT(0x9943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9942));
        // B0 0178
        gbc.setState(0x6ef4, 0x6248, 0x8250, 0xc94b, 0x7c52, 0x1478, 0x0, 0x1);
        gbc.writeMem(0x6ef4, { 0xb0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6248, gbc.sp());
        EXPECT(0x6ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0179
        gbc.setState(0xa0e, 0xc7e6, 0xb040, 0xa8af, 0xb8b5, 0xc71d, 0x0, 0x0);
        gbc.writeMem(0xa0e, { 0xb0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc7e6, gbc.sp());
        EXPECT(0xa0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 017A
        gbc.setState(0xc01, 0x81d6, 0xee50, 0x7b06, 0xab1a, 0x320f, 0x0, 0x0);
        gbc.writeMem(0xc01, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x81d6, gbc.sp());
        EXPECT(0xc02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 017B
        gbc.setState(0xb946, 0xee26, 0xc5b0, 0xc000, 0x17ba, 0x47a1, 0x1, 0x0);
        gbc.writeMem(0xb946, { 0xb0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xee26, gbc.sp());
        EXPECT(0xb947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb946));
        // B0 017C
        gbc.setState(0xc309, 0xe432, 0x5e10, 0x2e30, 0xb147, 0x48c3, 0x1, 0x0);
        gbc.writeMem(0xc309, { 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe432, gbc.sp());
        EXPECT(0xc30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc309));
        // B0 017D
        gbc.setState(0x530d, 0x2678, 0xfe40, 0x7668, 0xbbda, 0x8bab, 0x0, 0x1);
        gbc.writeMem(0x530d, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2678, gbc.sp());
        EXPECT(0x530e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 017E
        gbc.setState(0x7b90, 0xd547, 0x1f00, 0x56b2, 0xfabb, 0x26c1, 0x1, 0x0);
        gbc.writeMem(0x7b90, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd547, gbc.sp());
        EXPECT(0x7b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 017F
        gbc.setState(0xbd7a, 0xbcd0, 0x8cf0, 0x4318, 0x5ad3, 0xb38b, 0x1, 0x0);
        gbc.writeMem(0xbd7a, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbcd0, gbc.sp());
        EXPECT(0xbd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbd7a));
        // B0 0180
        gbc.setState(0x6688, 0xaa33, 0xbdf0, 0x1414, 0x13ea, 0x2999, 0x1, 0x1);
        gbc.writeMem(0x6688, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaa33, gbc.sp());
        EXPECT(0x6689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0181
        gbc.setState(0x9212, 0x84, 0x3d80, 0x41f7, 0x6806, 0xe169, 0x1, 0x0);
        gbc.writeMem(0x9212, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x84, gbc.sp());
        EXPECT(0x9213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9212));
        // B0 0183
        gbc.setState(0x3f4f, 0xf645, 0xd5a0, 0x4593, 0x7684, 0x7465, 0x1, 0x0);
        gbc.writeMem(0x3f4f, { 0xb0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf645, gbc.sp());
        EXPECT(0x3f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0184
        gbc.setState(0x9fb2, 0x450d, 0x6bb0, 0xa938, 0xb439, 0x78f3, 0x0, 0x0);
        gbc.writeMem(0x9fb2, { 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x450d, gbc.sp());
        EXPECT(0x9fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9fb2));
        // B0 0185
        gbc.setState(0xb7ca, 0xbbb7, 0xd8a0, 0x9f5c, 0xaf8d, 0xc72e, 0x0, 0x0);
        gbc.writeMem(0xb7ca, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbbb7, gbc.sp());
        EXPECT(0xb7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb7ca));
        // B0 0186
        gbc.setState(0xa816, 0x9673, 0x55a0, 0xe07e, 0xe779, 0x3cd, 0x0, 0x0);
        gbc.writeMem(0xa816, { 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9673, gbc.sp());
        EXPECT(0xa817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa816));
        // B0 0187
        gbc.setState(0x564f, 0x4d83, 0x4480, 0x2eea, 0xbb9, 0x1a84, 0x0, 0x1);
        gbc.writeMem(0x564f, { 0xb0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4d83, gbc.sp());
        EXPECT(0x5650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0188
        gbc.setState(0x5147, 0x800e, 0x8e10, 0xa73f, 0xf9b, 0x830a, 0x1, 0x0);
        gbc.writeMem(0x5147, { 0xb0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x800e, gbc.sp());
        EXPECT(0x5148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0189
        gbc.setState(0xc54f, 0x1221, 0xf570, 0x887e, 0xb161, 0x70e3, 0x0, 0x1);
        gbc.writeMem(0xc54f, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1221, gbc.sp());
        EXPECT(0xc550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc54f));
        // B0 018A
        gbc.setState(0x46b4, 0x2e67, 0xa7f0, 0x59e5, 0xe356, 0xfa31, 0x1, 0x0);
        gbc.writeMem(0x46b4, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2e67, gbc.sp());
        EXPECT(0x46b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 018B
        gbc.setState(0x4247, 0x78a6, 0x8dd0, 0x1ecf, 0x7c53, 0x8226, 0x1, 0x0);
        gbc.writeMem(0x4247, { 0xb0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x78a6, gbc.sp());
        EXPECT(0x4248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 018C
        gbc.setState(0xda66, 0x7558, 0x1f70, 0x712a, 0xa7c8, 0xe4f5, 0x1, 0x1);
        gbc.writeMem(0xda66, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7558, gbc.sp());
        EXPECT(0xda67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xda66));
        // B0 018D
        gbc.setState(0x32f3, 0x786e, 0x7a50, 0x3b18, 0x6f5b, 0x1cbf, 0x0, 0x1);
        gbc.writeMem(0x32f3, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x786e, gbc.sp());
        EXPECT(0x32f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 018E
        gbc.setState(0x5e07, 0x6fa4, 0xbb50, 0x6f2b, 0xd8ad, 0x47a1, 0x0, 0x1);
        gbc.writeMem(0x5e07, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6fa4, gbc.sp());
        EXPECT(0x5e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 018F
        gbc.setState(0xcd95, 0xaf13, 0x6e0, 0x998d, 0x8261, 0xc189, 0x1, 0x1);
        gbc.writeMem(0xcd95, { 0xb0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xaf13, gbc.sp());
        EXPECT(0xcd96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcd95));
        // B0 0190
        gbc.setState(0x4f36, 0xe4bc, 0xfd40, 0x3285, 0xb5ff, 0x6684, 0x1, 0x1);
        gbc.writeMem(0x4f36, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe4bc, gbc.sp());
        EXPECT(0x4f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0191
        gbc.setState(0x7225, 0xeadf, 0xc7a0, 0x9b10, 0xff82, 0x98b1, 0x1, 0x1);
        gbc.writeMem(0x7225, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xeadf, gbc.sp());
        EXPECT(0x7226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0192
        gbc.setState(0xd572, 0x4b29, 0x6e50, 0xc449, 0xced7, 0xe13b, 0x1, 0x1);
        gbc.writeMem(0xd572, { 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4b29, gbc.sp());
        EXPECT(0xd573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd572));
        // B0 0193
        gbc.setState(0xba, 0x210d, 0x3070, 0xae64, 0x329a, 0x3418, 0x1, 0x0);
        gbc.writeMem(0xba, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x210d, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0194
        gbc.setState(0x770c, 0x7c6e, 0xfe50, 0xe522, 0x865d, 0xf54d, 0x1, 0x1);
        gbc.writeMem(0x770c, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7c6e, gbc.sp());
        EXPECT(0x770d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0195
        gbc.setState(0x7702, 0xe987, 0x1ac0, 0x9403, 0xe0b0, 0x7793, 0x0, 0x1);
        gbc.writeMem(0x7702, { 0xb0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe987, gbc.sp());
        EXPECT(0x7703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0197
        gbc.setState(0x1cca, 0x64b9, 0xb4a0, 0x44a6, 0xb124, 0xdd4f, 0x1, 0x0);
        gbc.writeMem(0x1cca, { 0xb0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x64b9, gbc.sp());
        EXPECT(0x1ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0199
        gbc.setState(0xc5a5, 0x8deb, 0x5c00, 0x3025, 0xd830, 0x22b8, 0x0, 0x1);
        gbc.writeMem(0xc5a5, { 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8deb, gbc.sp());
        EXPECT(0xc5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc5a5));
        // B0 019A
        gbc.setState(0x9db6, 0x7f69, 0x4b60, 0x50c0, 0x93a2, 0x8f2, 0x0, 0x1);
        gbc.writeMem(0x9db6, { 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7f69, gbc.sp());
        EXPECT(0x9db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9db6));
        // B0 019B
        gbc.setState(0x98ba, 0xfbe9, 0xb60, 0x6b21, 0x8495, 0x75f8, 0x1, 0x0);
        gbc.writeMem(0x98ba, { 0xb0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0x98bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x98ba));
        // B0 019C
        gbc.setState(0x2458, 0x4b84, 0xe460, 0x772, 0x5e2e, 0x2eb4, 0x0, 0x1);
        gbc.writeMem(0x2458, { 0xb0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4b84, gbc.sp());
        EXPECT(0x2459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 019D
        gbc.setState(0x61f1, 0xc007, 0xc810, 0x76ee, 0x9d25, 0x5cc7, 0x1, 0x1);
        gbc.writeMem(0x61f1, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc007, gbc.sp());
        EXPECT(0x61f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 019E
        gbc.setState(0x962e, 0x9298, 0xe9e0, 0xa402, 0x4aac, 0x4e0c, 0x0, 0x1);
        gbc.writeMem(0x962e, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9298, gbc.sp());
        EXPECT(0x962f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x962e));
        // B0 019F
        gbc.setState(0xdb30, 0xac6b, 0xedd0, 0x88a9, 0xb3a1, 0x23e9, 0x1, 0x0);
        gbc.writeMem(0xdb30, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xac6b, gbc.sp());
        EXPECT(0xdb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdb30));
        // B0 01A0
        gbc.setState(0xd014, 0x392f, 0x88a0, 0x4618, 0x3421, 0x8193, 0x0, 0x1);
        gbc.writeMem(0xd014, { 0xb0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x392f, gbc.sp());
        EXPECT(0xd015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd014));
        // B0 01A1
        gbc.setState(0x57d3, 0x8171, 0x9fe0, 0x3caa, 0xc286, 0x9ca9, 0x1, 0x1);
        gbc.writeMem(0x57d3, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8171, gbc.sp());
        EXPECT(0x57d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01A2
        gbc.setState(0xda6d, 0x7b4a, 0x5d60, 0xf519, 0x2b0b, 0x16e9, 0x0, 0x0);
        gbc.writeMem(0xda6d, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7b4a, gbc.sp());
        EXPECT(0xda6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xda6d));
        // B0 01A3
        gbc.setState(0x4073, 0xf7b2, 0xb620, 0x886d, 0x9fc6, 0x38eb, 0x0, 0x1);
        gbc.writeMem(0x4073, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf7b2, gbc.sp());
        EXPECT(0x4074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01A4
        gbc.setState(0x9616, 0xeb4b, 0xeb60, 0x6a8b, 0xec28, 0xa846, 0x0, 0x0);
        gbc.writeMem(0x9616, { 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xeb4b, gbc.sp());
        EXPECT(0x9617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9616));
        // B0 01A6
        gbc.setState(0x9910, 0x32c, 0x84a0, 0x5d13, 0x640d, 0x7fec, 0x1, 0x0);
        gbc.writeMem(0x9910, { 0xb0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x32c, gbc.sp());
        EXPECT(0x9911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9910));
        // B0 01A7
        gbc.setState(0x52db, 0x2155, 0xb610, 0xd03a, 0x6a3a, 0xfef2, 0x0, 0x0);
        gbc.writeMem(0x52db, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2155, gbc.sp());
        EXPECT(0x52dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01A8
        gbc.setState(0x6d3f, 0xb32d, 0x26a0, 0xb761, 0xa17d, 0x8ae7, 0x0, 0x1);
        gbc.writeMem(0x6d3f, { 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb32d, gbc.sp());
        EXPECT(0x6d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01A9
        gbc.setState(0x3a89, 0x8f7, 0x5370, 0xc953, 0xf662, 0xeecd, 0x1, 0x0);
        gbc.writeMem(0x3a89, { 0xb0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8f7, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01AA
        gbc.setState(0x1d8b, 0x1a07, 0x6870, 0x2edf, 0xdcee, 0x7b, 0x1, 0x1);
        gbc.writeMem(0x1d8b, { 0xb0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1a07, gbc.sp());
        EXPECT(0x1d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01AB
        gbc.setState(0x7fa1, 0xfefd, 0xb700, 0xf2b4, 0x8c6f, 0x5d58, 0x0, 0x0);
        gbc.writeMem(0x7fa1, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfefd, gbc.sp());
        EXPECT(0x7fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01AC
        gbc.setState(0xecef, 0x610d, 0xc7b0, 0x30, 0xec18, 0xa6e4, 0x1, 0x1);
        gbc.writeMem(0xecef, { 0xb0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x610d, gbc.sp());
        EXPECT(0xecf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xecef));
        // B0 01AD
        gbc.setState(0x8fe, 0x8671, 0x30e0, 0x2400, 0xd307, 0x2a1a, 0x1, 0x0);
        gbc.writeMem(0x8fe, { 0xb0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0x8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01AE
        gbc.setState(0x1f4c, 0x7b71, 0x8df0, 0x8aa5, 0x598f, 0x47e, 0x0, 0x0);
        gbc.writeMem(0x1f4c, { 0xb0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7b71, gbc.sp());
        EXPECT(0x1f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01AF
        gbc.setState(0x5324, 0x8805, 0x8640, 0xcbe, 0x9479, 0x382c, 0x1, 0x0);
        gbc.writeMem(0x5324, { 0xb0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8805, gbc.sp());
        EXPECT(0x5325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01B0
        gbc.setState(0xeb1c, 0x60c, 0x39f0, 0x9efb, 0xb6a7, 0x802, 0x0, 0x1);
        gbc.writeMem(0xeb1c, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x60c, gbc.sp());
        EXPECT(0xeb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xeb1c));
        // B0 01B1
        gbc.setState(0x8ca5, 0xe526, 0x9cc0, 0x11e6, 0x8dea, 0xbfa1, 0x1, 0x0);
        gbc.writeMem(0x8ca5, { 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe526, gbc.sp());
        EXPECT(0x8ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8ca5));
        // B0 01B2
        gbc.setState(0x3d4b, 0x425e, 0xce10, 0x12f0, 0x8a3e, 0xc787, 0x0, 0x0);
        gbc.writeMem(0x3d4b, { 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x425e, gbc.sp());
        EXPECT(0x3d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01B3
        gbc.setState(0x25bf, 0x882e, 0x47e0, 0xf8c5, 0x5d1b, 0x6dcb, 0x1, 0x0);
        gbc.writeMem(0x25bf, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x882e, gbc.sp());
        EXPECT(0x25c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01B4
        gbc.setState(0xa054, 0x9da, 0x3280, 0x9f47, 0x635e, 0x98b6, 0x0, 0x0);
        gbc.writeMem(0xa054, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9da, gbc.sp());
        EXPECT(0xa055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa054));
        // B0 01B5
        gbc.setState(0x5c89, 0xa74, 0x320, 0x1496, 0x2b44, 0x42af, 0x1, 0x1);
        gbc.writeMem(0x5c89, { 0xb0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa74, gbc.sp());
        EXPECT(0x5c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01B6
        gbc.setState(0x287, 0xe295, 0x6fd0, 0x8142, 0x7138, 0x2a1e, 0x0, 0x1);
        gbc.writeMem(0x287, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe295, gbc.sp());
        EXPECT(0x288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01B7
        gbc.setState(0xeef, 0xf6ba, 0x7150, 0xeaa, 0x9943, 0x5940, 0x0, 0x1);
        gbc.writeMem(0xeef, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf6ba, gbc.sp());
        EXPECT(0xef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01B8
        gbc.setState(0x8e72, 0x241a, 0xc3e0, 0xaeff, 0x8e31, 0xd169, 0x1, 0x1);
        gbc.writeMem(0x8e72, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x241a, gbc.sp());
        EXPECT(0x8e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8e72));
        // B0 01B9
        gbc.setState(0x204a, 0xfa70, 0xe670, 0x5f95, 0xe2c0, 0x2027, 0x1, 0x0);
        gbc.writeMem(0x204a, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0x204b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01BA
        gbc.setState(0x7bc, 0x895b, 0x6a90, 0x38f5, 0x63ca, 0xf420, 0x0, 0x1);
        gbc.writeMem(0x7bc, { 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x895b, gbc.sp());
        EXPECT(0x7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01BB
        gbc.setState(0x9389, 0xde49, 0x58c0, 0x2272, 0xd776, 0x171e, 0x1, 0x0);
        gbc.writeMem(0x9389, { 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xde49, gbc.sp());
        EXPECT(0x938a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9389));
        // B0 01BC
        gbc.setState(0xb072, 0xb57f, 0x7240, 0x6cb2, 0x4bf0, 0xbb28, 0x0, 0x1);
        gbc.writeMem(0xb072, { 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb57f, gbc.sp());
        EXPECT(0xb073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb072));
        // B0 01BD
        gbc.setState(0xcd68, 0xf1cb, 0x9aa0, 0x7a0, 0x4389, 0x9017, 0x0, 0x0);
        gbc.writeMem(0xcd68, { 0xb0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf1cb, gbc.sp());
        EXPECT(0xcd69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcd68));
        // B0 01BE
        gbc.setState(0xa572, 0x9a8c, 0xd680, 0x5764, 0x44f5, 0x31c6, 0x0, 0x1);
        gbc.writeMem(0xa572, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9a8c, gbc.sp());
        EXPECT(0xa573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa572));
        // B0 01BF
        gbc.setState(0x84a7, 0x7360, 0x4a20, 0x54cf, 0xf96, 0x1886, 0x1, 0x0);
        gbc.writeMem(0x84a7, { 0xb0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7360, gbc.sp());
        EXPECT(0x84a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x84a7));
        // B0 01C0
        gbc.setState(0xe38a, 0x9bb7, 0xb5d0, 0x19fe, 0x7ac1, 0x70f7, 0x1, 0x0);
        gbc.writeMem(0xe38a, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9bb7, gbc.sp());
        EXPECT(0xe38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe38a));
        // B0 01C1
        gbc.setState(0x2182, 0x119, 0xa270, 0x9128, 0x511a, 0xe8d3, 0x0, 0x1);
        gbc.writeMem(0x2182, { 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x119, gbc.sp());
        EXPECT(0x2183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01C2
        gbc.setState(0x27c7, 0x92b8, 0xa390, 0x98a3, 0xc59d, 0xc3a4, 0x1, 0x0);
        gbc.writeMem(0x27c7, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x92b8, gbc.sp());
        EXPECT(0x27c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01C3
        gbc.setState(0xcbd8, 0xc48e, 0x6910, 0x9782, 0xb5d2, 0x1445, 0x1, 0x1);
        gbc.writeMem(0xcbd8, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc48e, gbc.sp());
        EXPECT(0xcbd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcbd8));
        // B0 01C4
        gbc.setState(0xd2a3, 0x1925, 0xfbf0, 0xba7a, 0xe270, 0x87fd, 0x1, 0x1);
        gbc.writeMem(0xd2a3, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1925, gbc.sp());
        EXPECT(0xd2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd2a3));
        // B0 01C5
        gbc.setState(0x16c2, 0x869a, 0xcbf0, 0x622b, 0xa87c, 0x6986, 0x0, 0x0);
        gbc.writeMem(0x16c2, { 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0x16c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01C6
        gbc.setState(0xc97e, 0xeb35, 0x9640, 0xe306, 0x9a95, 0x72f2, 0x1, 0x0);
        gbc.writeMem(0xc97e, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xeb35, gbc.sp());
        EXPECT(0xc97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc97e));
        // B0 01C7
        gbc.setState(0x93aa, 0x23a9, 0x2a70, 0xa3c4, 0x6845, 0x4ae9, 0x1, 0x0);
        gbc.writeMem(0x93aa, { 0xb0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x23a9, gbc.sp());
        EXPECT(0x93ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x93aa));
        // B0 01C8
        gbc.setState(0x7e82, 0xe580, 0x4b80, 0x3f87, 0xa241, 0xac8c, 0x0, 0x0);
        gbc.writeMem(0x7e82, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe580, gbc.sp());
        EXPECT(0x7e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01C9
        gbc.setState(0x4f06, 0xdd29, 0x3570, 0x8906, 0x5218, 0xcfc2, 0x1, 0x0);
        gbc.writeMem(0x4f06, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdd29, gbc.sp());
        EXPECT(0x4f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01CA
        gbc.setState(0x368a, 0x991b, 0xd580, 0x6e25, 0x8ac0, 0xd3d2, 0x1, 0x1);
        gbc.writeMem(0x368a, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x991b, gbc.sp());
        EXPECT(0x368b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01CB
        gbc.setState(0x6202, 0x28c9, 0x12b0, 0xe186, 0x5424, 0xf7ad, 0x1, 0x1);
        gbc.writeMem(0x6202, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x28c9, gbc.sp());
        EXPECT(0x6203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01CC
        gbc.setState(0xb31, 0x20ab, 0x3160, 0x3e78, 0x8064, 0xaa1, 0x1, 0x1);
        gbc.writeMem(0xb31, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x20ab, gbc.sp());
        EXPECT(0xb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01CD
        gbc.setState(0xc057, 0x3c91, 0x63e0, 0xaee, 0x2239, 0xbe2d, 0x0, 0x0);
        gbc.writeMem(0xc057, { 0xb0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3c91, gbc.sp());
        EXPECT(0xc058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc057));
        // B0 01CE
        gbc.setState(0xbf3b, 0x70, 0xc40, 0xf929, 0xc790, 0xe50b, 0x1, 0x0);
        gbc.writeMem(0xbf3b, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x70, gbc.sp());
        EXPECT(0xbf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbf3b));
        // B0 01CF
        gbc.setState(0x31fe, 0x5c7a, 0x85e0, 0xb3c3, 0xc599, 0x13b0, 0x0, 0x0);
        gbc.writeMem(0x31fe, { 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5c7a, gbc.sp());
        EXPECT(0x31ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01D0
        gbc.setState(0x40b7, 0xaf01, 0x3f20, 0x2ae3, 0x7491, 0x38cb, 0x0, 0x1);
        gbc.writeMem(0x40b7, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaf01, gbc.sp());
        EXPECT(0x40b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01D1
        gbc.setState(0xb7de, 0xd1e8, 0xb570, 0x3685, 0x5db1, 0x9ffc, 0x0, 0x1);
        gbc.writeMem(0xb7de, { 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd1e8, gbc.sp());
        EXPECT(0xb7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb7de));
        // B0 01D2
        gbc.setState(0x893c, 0xfb99, 0x7e80, 0xf80a, 0x7d8f, 0xe5ab, 0x1, 0x1);
        gbc.writeMem(0x893c, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfb99, gbc.sp());
        EXPECT(0x893d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x893c));
        // B0 01D3
        gbc.setState(0x3481, 0xd58d, 0x2fc0, 0x79cc, 0x5e66, 0x62c6, 0x0, 0x0);
        gbc.writeMem(0x3481, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd58d, gbc.sp());
        EXPECT(0x3482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01D4
        gbc.setState(0xe141, 0xd281, 0x59a0, 0xf754, 0xa8b7, 0xe3c3, 0x0, 0x0);
        gbc.writeMem(0xe141, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd281, gbc.sp());
        EXPECT(0xe142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe141));
        // B0 01D5
        gbc.setState(0x2216, 0xe5d2, 0x88b0, 0x95da, 0xe2c1, 0xc2b6, 0x0, 0x0);
        gbc.writeMem(0x2216, { 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe5d2, gbc.sp());
        EXPECT(0x2217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01D6
        gbc.setState(0x9aec, 0x6614, 0x6190, 0xf1bf, 0x9a7c, 0x1156, 0x0, 0x0);
        gbc.writeMem(0x9aec, { 0xb0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6614, gbc.sp());
        EXPECT(0x9aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9aec));
        // B0 01D7
        gbc.setState(0x77c3, 0x4f91, 0xa700, 0x7ce2, 0xf0bc, 0x9631, 0x1, 0x0);
        gbc.writeMem(0x77c3, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4f91, gbc.sp());
        EXPECT(0x77c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01D9
        gbc.setState(0xe2b1, 0x68cf, 0x94a0, 0xfe78, 0x96f5, 0xa609, 0x1, 0x0);
        gbc.writeMem(0xe2b1, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x68cf, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe2b1));
        // B0 01DA
        gbc.setState(0x7cde, 0x7dfe, 0xdcf0, 0xc36c, 0x8329, 0x7c86, 0x0, 0x1);
        gbc.writeMem(0x7cde, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7dfe, gbc.sp());
        EXPECT(0x7cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01DB
        gbc.setState(0xd74f, 0x7c9b, 0x40c0, 0x360e, 0x7114, 0xe490, 0x1, 0x1);
        gbc.writeMem(0xd74f, { 0xb0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7c9b, gbc.sp());
        EXPECT(0xd750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd74f));
        // B0 01DD
        gbc.setState(0xc45b, 0x9842, 0xefc0, 0xa5a8, 0xdab7, 0x2147, 0x0, 0x1);
        gbc.writeMem(0xc45b, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9842, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc45b));
        // B0 01DE
        gbc.setState(0x952b, 0x85dc, 0x4140, 0x5bc2, 0x8b40, 0x29c4, 0x0, 0x0);
        gbc.writeMem(0x952b, { 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x85dc, gbc.sp());
        EXPECT(0x952c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x952b));
        // B0 01DF
        gbc.setState(0x4e76, 0xc01c, 0xb1f0, 0xc328, 0xf59d, 0x168d, 0x0, 0x0);
        gbc.writeMem(0x4e76, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc01c, gbc.sp());
        EXPECT(0x4e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01E0
        gbc.setState(0xe079, 0xc7f3, 0xf620, 0xf0c4, 0x7b66, 0x7cad, 0x0, 0x1);
        gbc.writeMem(0xe079, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc7f3, gbc.sp());
        EXPECT(0xe07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe079));
        // B0 01E1
        gbc.setState(0x83ef, 0x441f, 0x1f40, 0x3981, 0x9233, 0xde5a, 0x0, 0x0);
        gbc.writeMem(0x83ef, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x441f, gbc.sp());
        EXPECT(0x83f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x83ef));
        // B0 01E2
        gbc.setState(0x1558, 0x9b39, 0xa6c0, 0x32a4, 0x9d23, 0xfe0c, 0x0, 0x1);
        gbc.writeMem(0x1558, { 0xb0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0x1559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01E4
        gbc.setState(0x6da7, 0xe9e6, 0xd1e0, 0x5d7d, 0xc60a, 0xc0b9, 0x1, 0x0);
        gbc.writeMem(0x6da7, { 0xb0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe9e6, gbc.sp());
        EXPECT(0x6da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01E5
        gbc.setState(0x2233, 0x417b, 0x5040, 0xd4b6, 0xa54f, 0x4661, 0x1, 0x1);
        gbc.writeMem(0x2233, { 0xb0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x417b, gbc.sp());
        EXPECT(0x2234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01E6
        gbc.setState(0x76d6, 0x5cd, 0x5f90, 0x952b, 0x32a3, 0xd175, 0x1, 0x1);
        gbc.writeMem(0x76d6, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5cd, gbc.sp());
        EXPECT(0x76d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01E7
        gbc.setState(0x5297, 0x71f2, 0xe110, 0x7e23, 0x235d, 0xf3a9, 0x1, 0x0);
        gbc.writeMem(0x5297, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x71f2, gbc.sp());
        EXPECT(0x5298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01E8
        gbc.setState(0xb3c4, 0x2a80, 0x8db0, 0xb1d8, 0xc022, 0xed32, 0x0, 0x0);
        gbc.writeMem(0xb3c4, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2a80, gbc.sp());
        EXPECT(0xb3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb3c4));
        // B0 01E9
        gbc.setState(0x626a, 0xc47e, 0x120, 0x3cea, 0x8743, 0x1b83, 0x1, 0x0);
        gbc.writeMem(0x626a, { 0xb0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc47e, gbc.sp());
        EXPECT(0x626b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01EA
        gbc.setState(0x9599, 0xccdb, 0x38e0, 0xaee6, 0xd494, 0xa726, 0x1, 0x0);
        gbc.writeMem(0x9599, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xccdb, gbc.sp());
        EXPECT(0x959a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9599));
        // B0 01EB
        gbc.setState(0xbd24, 0x1664, 0xfdc0, 0x2a84, 0xc58f, 0xfd85, 0x1, 0x0);
        gbc.writeMem(0xbd24, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1664, gbc.sp());
        EXPECT(0xbd25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbd24));
        // B0 01EC
        gbc.setState(0xef7, 0xe3eb, 0x8880, 0xee31, 0x763, 0x1b7f, 0x0, 0x0);
        gbc.writeMem(0xef7, { 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe3eb, gbc.sp());
        EXPECT(0xef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01ED
        gbc.setState(0xa1b2, 0x2d43, 0x2d70, 0x2c7c, 0x6ac5, 0x37ef, 0x0, 0x0);
        gbc.writeMem(0xa1b2, { 0xb0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2d43, gbc.sp());
        EXPECT(0xa1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa1b2));
        // B0 01EF
        gbc.setState(0x5f85, 0xf84, 0x9480, 0xac93, 0x817d, 0xb31a, 0x1, 0x1);
        gbc.writeMem(0x5f85, { 0xb0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf84, gbc.sp());
        EXPECT(0x5f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01F0
        gbc.setState(0x7a54, 0x1a68, 0x4620, 0xebac, 0x696c, 0x7eb3, 0x1, 0x1);
        gbc.writeMem(0x7a54, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1a68, gbc.sp());
        EXPECT(0x7a55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01F1
        gbc.setState(0x692f, 0x90e2, 0x7f70, 0x7225, 0x57b, 0x44ea, 0x1, 0x1);
        gbc.writeMem(0x692f, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x90e2, gbc.sp());
        EXPECT(0x6930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01F2
        gbc.setState(0x7c3, 0x5d52, 0x9c60, 0xdb11, 0xd2f9, 0xa568, 0x0, 0x1);
        gbc.writeMem(0x7c3, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5d52, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01F3
        gbc.setState(0x545a, 0xef17, 0x27a0, 0xe82b, 0x1158, 0x17b, 0x0, 0x1);
        gbc.writeMem(0x545a, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xef17, gbc.sp());
        EXPECT(0x545b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01F4
        gbc.setState(0xedd7, 0x58c2, 0x9750, 0x1f19, 0x26b9, 0x1141, 0x1, 0x1);
        gbc.writeMem(0xedd7, { 0xb0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x58c2, gbc.sp());
        EXPECT(0xedd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xedd7));
        // B0 01F5
        gbc.setState(0xaa4e, 0xa75d, 0x1090, 0xbc9f, 0xf8d1, 0x433e, 0x1, 0x0);
        gbc.writeMem(0xaa4e, { 0xb0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa75d, gbc.sp());
        EXPECT(0xaa4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xaa4e));
        // B0 01F6
        gbc.setState(0x7d4d, 0x487c, 0xfe0, 0x7f07, 0xead1, 0x194e, 0x1, 0x1);
        gbc.writeMem(0x7d4d, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x487c, gbc.sp());
        EXPECT(0x7d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01F7
        gbc.setState(0xdaff, 0xa223, 0x4c20, 0xf71c, 0xb9f1, 0x7a6e, 0x1, 0x1);
        gbc.writeMem(0xdaff, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa223, gbc.sp());
        EXPECT(0xdb00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdaff));
        // B0 01F8
        gbc.setState(0xbc8e, 0xb025, 0x4bb0, 0x517a, 0xc909, 0x8262, 0x0, 0x0);
        gbc.writeMem(0xbc8e, { 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb025, gbc.sp());
        EXPECT(0xbc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbc8e));
        // B0 01F9
        gbc.setState(0xb89e, 0x6ada, 0x6a00, 0xd9e8, 0x23bf, 0x5a8c, 0x0, 0x1);
        gbc.writeMem(0xb89e, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6ada, gbc.sp());
        EXPECT(0xb89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb89e));
        // B0 01FA
        gbc.setState(0xbcc8, 0x5208, 0xa2c0, 0x86a0, 0x78a7, 0x1d98, 0x0, 0x1);
        gbc.writeMem(0xbcc8, { 0xb0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5208, gbc.sp());
        EXPECT(0xbcc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbcc8));
        // B0 01FB
        gbc.setState(0xded6, 0xee4a, 0x9c10, 0xae19, 0xfabc, 0x3eeb, 0x1, 0x0);
        gbc.writeMem(0xded6, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xee4a, gbc.sp());
        EXPECT(0xded7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xded6));
        // B0 01FC
        gbc.setState(0xa06a, 0xf29, 0x6c0, 0x27de, 0x630b, 0x8b09, 0x1, 0x0);
        gbc.writeMem(0xa06a, { 0xb0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf29, gbc.sp());
        EXPECT(0xa06b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa06a));
        // B0 01FD
        gbc.setState(0x213b, 0x945f, 0xa430, 0xa4ea, 0x21b0, 0xb668, 0x1, 0x1);
        gbc.writeMem(0x213b, { 0xb0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x945f, gbc.sp());
        EXPECT(0x213c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01FE
        gbc.setState(0x4bbb, 0xa387, 0xe670, 0x9935, 0x189a, 0x50f6, 0x1, 0x0);
        gbc.writeMem(0x4bbb, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa387, gbc.sp());
        EXPECT(0x4bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 01FF
        gbc.setState(0xaa89, 0x64ee, 0xf1c0, 0xadc0, 0xf939, 0xedbb, 0x1, 0x0);
        gbc.writeMem(0xaa89, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x64ee, gbc.sp());
        EXPECT(0xaa8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xaa89));
        // B0 0200
        gbc.setState(0xeddd, 0xcf19, 0x4460, 0x8db5, 0xa764, 0xdbf3, 0x1, 0x0);
        gbc.writeMem(0xeddd, { 0xb0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcf19, gbc.sp());
        EXPECT(0xedde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xeddd));
        // B0 0201
        gbc.setState(0xd617, 0x8da7, 0xfde0, 0x85f8, 0x9706, 0x515f, 0x1, 0x1);
        gbc.writeMem(0xd617, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8da7, gbc.sp());
        EXPECT(0xd618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd617));
        // B0 0203
        gbc.setState(0x38c2, 0x69e, 0x8fe0, 0x55aa, 0xe9ce, 0xd15, 0x1, 0x1);
        gbc.writeMem(0x38c2, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x69e, gbc.sp());
        EXPECT(0x38c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0204
        gbc.setState(0xe6e9, 0x1f36, 0x3a10, 0x31b6, 0xa83b, 0x1494, 0x1, 0x1);
        gbc.writeMem(0xe6e9, { 0xb0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1f36, gbc.sp());
        EXPECT(0xe6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe6e9));
        // B0 0205
        gbc.setState(0xcd50, 0xe8ef, 0xfb00, 0xf4d2, 0xd7fe, 0x3c88, 0x0, 0x1);
        gbc.writeMem(0xcd50, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe8ef, gbc.sp());
        EXPECT(0xcd51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcd50));
        // B0 0206
        gbc.setState(0x71fa, 0x45ad, 0xf100, 0x2df3, 0x40c1, 0xced, 0x1, 0x0);
        gbc.writeMem(0x71fa, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x45ad, gbc.sp());
        EXPECT(0x71fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0207
        gbc.setState(0x2c03, 0xca35, 0x45e0, 0x175, 0x7e84, 0xca52, 0x1, 0x0);
        gbc.writeMem(0x2c03, { 0xb0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xca35, gbc.sp());
        EXPECT(0x2c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0208
        gbc.setState(0x509e, 0xbe3e, 0xed00, 0x6305, 0x3f0a, 0x63e6, 0x0, 0x0);
        gbc.writeMem(0x509e, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbe3e, gbc.sp());
        EXPECT(0x509f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0209
        gbc.setState(0x5a68, 0x723e, 0xf850, 0x2db1, 0x4a00, 0xffb5, 0x0, 0x1);
        gbc.writeMem(0x5a68, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x723e, gbc.sp());
        EXPECT(0x5a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 020A
        gbc.setState(0xe226, 0x8c6e, 0x5aa0, 0xef8b, 0x4bef, 0xe1df, 0x0, 0x0);
        gbc.writeMem(0xe226, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8c6e, gbc.sp());
        EXPECT(0xe227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe226));
        // B0 020B
        gbc.setState(0x5285, 0x6306, 0x6ac0, 0x6685, 0xbe84, 0x9295, 0x0, 0x1);
        gbc.writeMem(0x5285, { 0xb0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6306, gbc.sp());
        EXPECT(0x5286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 020D
        gbc.setState(0x1639, 0xf9ef, 0x1440, 0xdfef, 0x28ba, 0x98d2, 0x0, 0x1);
        gbc.writeMem(0x1639, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0x163a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 020E
        gbc.setState(0x4547, 0x9f7, 0x6300, 0x6300, 0x7d9c, 0xf453, 0x1, 0x1);
        gbc.writeMem(0x4547, { 0xb0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9f7, gbc.sp());
        EXPECT(0x4548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 020F
        gbc.setState(0x36be, 0x9280, 0x6450, 0x59d4, 0x8c91, 0x260d, 0x1, 0x0);
        gbc.writeMem(0x36be, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9280, gbc.sp());
        EXPECT(0x36bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0210
        gbc.setState(0xeaa4, 0x419e, 0x3e70, 0x26e1, 0x2c7c, 0xdd10, 0x1, 0x1);
        gbc.writeMem(0xeaa4, { 0xb0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x419e, gbc.sp());
        EXPECT(0xeaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xeaa4));
        // B0 0211
        gbc.setState(0x20e7, 0x201a, 0xbcb0, 0xdeb3, 0xcc4d, 0x5a03, 0x1, 0x1);
        gbc.writeMem(0x20e7, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x201a, gbc.sp());
        EXPECT(0x20e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0212
        gbc.setState(0xc38e, 0x4bed, 0x28c0, 0xe025, 0x8c4d, 0x259f, 0x1, 0x0);
        gbc.writeMem(0xc38e, { 0xb0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4bed, gbc.sp());
        EXPECT(0xc38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc38e));
        // B0 0213
        gbc.setState(0x2c25, 0x7bf4, 0xc7b0, 0xf239, 0x9b5d, 0x23b3, 0x1, 0x1);
        gbc.writeMem(0x2c25, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7bf4, gbc.sp());
        EXPECT(0x2c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0214
        gbc.setState(0xb469, 0xc100, 0xf2e0, 0x6cf6, 0x45b5, 0xdac0, 0x0, 0x0);
        gbc.writeMem(0xb469, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc100, gbc.sp());
        EXPECT(0xb46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb469));
        // B0 0216
        gbc.setState(0x840c, 0x5668, 0xaf40, 0x9aff, 0x4919, 0xf669, 0x0, 0x0);
        gbc.writeMem(0x840c, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5668, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x840c));
        // B0 0217
        gbc.setState(0xd513, 0x957d, 0x3460, 0xcb03, 0xca31, 0x91b, 0x0, 0x1);
        gbc.writeMem(0xd513, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x957d, gbc.sp());
        EXPECT(0xd514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd513));
        // B0 0218
        gbc.setState(0xfa9, 0x8f0f, 0x34d0, 0xc3d4, 0xd782, 0xbfce, 0x0, 0x0);
        gbc.writeMem(0xfa9, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8f0f, gbc.sp());
        EXPECT(0xfaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0219
        gbc.setState(0x6512, 0xa79c, 0xe40, 0xc30d, 0x3534, 0x1205, 0x1, 0x1);
        gbc.writeMem(0x6512, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa79c, gbc.sp());
        EXPECT(0x6513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 021A
        gbc.setState(0x62a9, 0x1609, 0x2670, 0xa3e6, 0x300a, 0x2aa4, 0x0, 0x0);
        gbc.writeMem(0x62a9, { 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1609, gbc.sp());
        EXPECT(0x62aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 021B
        gbc.setState(0xb1b2, 0xf8b3, 0x3d30, 0xf66c, 0x606d, 0x25ae, 0x0, 0x1);
        gbc.writeMem(0xb1b2, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf8b3, gbc.sp());
        EXPECT(0xb1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb1b2));
        // B0 021C
        gbc.setState(0xdf8c, 0xe155, 0x45d0, 0x8809, 0xe933, 0xe0be, 0x0, 0x0);
        gbc.writeMem(0xdf8c, { 0xb0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe155, gbc.sp());
        EXPECT(0xdf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdf8c));
        // B0 021E
        gbc.setState(0x8cfb, 0xc137, 0x62d0, 0xf46, 0x7000, 0x8db8, 0x0, 0x0);
        gbc.writeMem(0x8cfb, { 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc137, gbc.sp());
        EXPECT(0x8cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8cfb));
        // B0 021F
        gbc.setState(0x94c8, 0xb4cb, 0xdad0, 0xb1f0, 0x8a53, 0x26b9, 0x1, 0x0);
        gbc.writeMem(0x94c8, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb4cb, gbc.sp());
        EXPECT(0x94c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x94c8));
        // B0 0220
        gbc.setState(0xe137, 0xa8ca, 0x5e50, 0x35a, 0x1417, 0x9ed2, 0x1, 0x1);
        gbc.writeMem(0xe137, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa8ca, gbc.sp());
        EXPECT(0xe138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe137));
        // B0 0221
        gbc.setState(0xc761, 0x4d48, 0x7890, 0x6f1b, 0xb63c, 0x6dec, 0x0, 0x0);
        gbc.writeMem(0xc761, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4d48, gbc.sp());
        EXPECT(0xc762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc761));
        // B0 0222
        gbc.setState(0x6203, 0xc582, 0x5bc0, 0xed82, 0xa5e8, 0x527d, 0x1, 0x0);
        gbc.writeMem(0x6203, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc582, gbc.sp());
        EXPECT(0x6204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0223
        gbc.setState(0x7f30, 0xd445, 0xd1c0, 0xf5c8, 0x611f, 0x22b3, 0x0, 0x1);
        gbc.writeMem(0x7f30, { 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd445, gbc.sp());
        EXPECT(0x7f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0224
        gbc.setState(0x50f7, 0x4a40, 0x71c0, 0x2fc1, 0xc5f2, 0x7712, 0x0, 0x0);
        gbc.writeMem(0x50f7, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4a40, gbc.sp());
        EXPECT(0x50f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0225
        gbc.setState(0x9872, 0x5605, 0x8b80, 0x8b9f, 0x3d95, 0xae76, 0x0, 0x0);
        gbc.writeMem(0x9872, { 0xb0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5605, gbc.sp());
        EXPECT(0x9873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9872));
        // B0 0226
        gbc.setState(0x343d, 0xc813, 0xdb70, 0x4788, 0xaf17, 0x3a51, 0x1, 0x0);
        gbc.writeMem(0x343d, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc813, gbc.sp());
        EXPECT(0x343e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0227
        gbc.setState(0x32c7, 0xa53b, 0xeac0, 0xdcdb, 0xd712, 0x190f, 0x1, 0x1);
        gbc.writeMem(0x32c7, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa53b, gbc.sp());
        EXPECT(0x32c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0228
        gbc.setState(0x2fc3, 0x519d, 0xfff0, 0xa185, 0x20c8, 0x32c2, 0x0, 0x1);
        gbc.writeMem(0x2fc3, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x519d, gbc.sp());
        EXPECT(0x2fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0229
        gbc.setState(0xdcae, 0x1132, 0x34a0, 0x8905, 0x7103, 0x2660, 0x0, 0x1);
        gbc.writeMem(0xdcae, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1132, gbc.sp());
        EXPECT(0xdcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdcae));
        // B0 022A
        gbc.setState(0x8d6c, 0x2513, 0x740, 0x3a02, 0x6608, 0x3970, 0x1, 0x1);
        gbc.writeMem(0x8d6c, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2513, gbc.sp());
        EXPECT(0x8d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8d6c));
        // B0 022B
        gbc.setState(0xc346, 0xe7a, 0x58b0, 0x1189, 0x2a0c, 0x34b7, 0x1, 0x1);
        gbc.writeMem(0xc346, { 0xb0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe7a, gbc.sp());
        EXPECT(0xc347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc346));
        // B0 022C
        gbc.setState(0x51c4, 0xf038, 0x86c0, 0x2da7, 0xe09, 0xe5be, 0x1, 0x1);
        gbc.writeMem(0x51c4, { 0xb0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf038, gbc.sp());
        EXPECT(0x51c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 022D
        gbc.setState(0x1bd3, 0x2f9a, 0x9cb0, 0xff2a, 0xe3e6, 0x7cfb, 0x1, 0x1);
        gbc.writeMem(0x1bd3, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2f9a, gbc.sp());
        EXPECT(0x1bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 022E
        gbc.setState(0xafa7, 0xd255, 0xef20, 0x4349, 0x4f0b, 0xa6b2, 0x1, 0x1);
        gbc.writeMem(0xafa7, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd255, gbc.sp());
        EXPECT(0xafa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xafa7));
        // B0 022F
        gbc.setState(0x1f0e, 0x6fae, 0xc690, 0x1f21, 0x55ba, 0x33f5, 0x0, 0x0);
        gbc.writeMem(0x1f0e, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6fae, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0230
        gbc.setState(0x6fdc, 0x8953, 0x2b80, 0x9d68, 0x90f1, 0x751b, 0x1, 0x0);
        gbc.writeMem(0x6fdc, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8953, gbc.sp());
        EXPECT(0x6fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0231
        gbc.setState(0x34c3, 0x99e5, 0xe170, 0x2568, 0x32d3, 0x96d2, 0x1, 0x1);
        gbc.writeMem(0x34c3, { 0xb0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x99e5, gbc.sp());
        EXPECT(0x34c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0232
        gbc.setState(0xb4bd, 0x4f42, 0x770, 0xd0b5, 0xfc40, 0xf664, 0x1, 0x1);
        gbc.writeMem(0xb4bd, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4f42, gbc.sp());
        EXPECT(0xb4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb4bd));
        // B0 0233
        gbc.setState(0xc188, 0xa229, 0x3c00, 0xdb11, 0xfde8, 0xc859, 0x0, 0x0);
        gbc.writeMem(0xc188, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa229, gbc.sp());
        EXPECT(0xc189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc188));
        // B0 0234
        gbc.setState(0x2281, 0x4d32, 0xdd40, 0xf674, 0x55c1, 0x8b81, 0x0, 0x0);
        gbc.writeMem(0x2281, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4d32, gbc.sp());
        EXPECT(0x2282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0235
        gbc.setState(0x6f7, 0xd60a, 0xc500, 0x615a, 0x7fca, 0x7b8a, 0x1, 0x0);
        gbc.writeMem(0x6f7, { 0xb0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd60a, gbc.sp());
        EXPECT(0x6f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0236
        gbc.setState(0x4241, 0xe0a7, 0x7ab0, 0x810c, 0x3dc6, 0xc3ea, 0x0, 0x1);
        gbc.writeMem(0x4241, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe0a7, gbc.sp());
        EXPECT(0x4242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0237
        gbc.setState(0x2e01, 0xbf0c, 0x4ae0, 0xfafa, 0x3c1f, 0xdc80, 0x0, 0x1);
        gbc.writeMem(0x2e01, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbf0c, gbc.sp());
        EXPECT(0x2e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0238
        gbc.setState(0xd064, 0x7f2e, 0x11b0, 0x7f9a, 0x2cdf, 0x3482, 0x1, 0x1);
        gbc.writeMem(0xd064, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7f2e, gbc.sp());
        EXPECT(0xd065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd064));
        // B0 0239
        gbc.setState(0xdd7b, 0x1442, 0x9a50, 0x2ea1, 0xa4ab, 0xb62d, 0x1, 0x0);
        gbc.writeMem(0xdd7b, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1442, gbc.sp());
        EXPECT(0xdd7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdd7b));
        // B0 023A
        gbc.setState(0x756b, 0x60d, 0x49e0, 0xa85a, 0x5630, 0x501c, 0x0, 0x0);
        gbc.writeMem(0x756b, { 0xb0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x60d, gbc.sp());
        EXPECT(0x756c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 023B
        gbc.setState(0x47dc, 0xa89b, 0x6f10, 0xbece, 0x531f, 0xdb07, 0x1, 0x0);
        gbc.writeMem(0x47dc, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa89b, gbc.sp());
        EXPECT(0x47dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 023C
        gbc.setState(0x4a16, 0x6380, 0xf370, 0xac30, 0x6885, 0x17f2, 0x0, 0x1);
        gbc.writeMem(0x4a16, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6380, gbc.sp());
        EXPECT(0x4a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 023D
        gbc.setState(0xdd1a, 0xa593, 0x86a0, 0xa5de, 0xc0b9, 0xe6da, 0x0, 0x0);
        gbc.writeMem(0xdd1a, { 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa593, gbc.sp());
        EXPECT(0xdd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdd1a));
        // B0 023F
        gbc.setState(0x8486, 0xdf20, 0xc890, 0x57fd, 0x1f25, 0x62ef, 0x1, 0x1);
        gbc.writeMem(0x8486, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdf20, gbc.sp());
        EXPECT(0x8487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8486));
        // B0 0240
        gbc.setState(0x9d73, 0x769, 0xe1e0, 0x9ac0, 0x5556, 0xe370, 0x0, 0x0);
        gbc.writeMem(0x9d73, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x769, gbc.sp());
        EXPECT(0x9d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9d73));
        // B0 0241
        gbc.setState(0xc6ad, 0x7c2, 0x4770, 0x7bd7, 0x38de, 0x85a, 0x0, 0x1);
        gbc.writeMem(0xc6ad, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7c2, gbc.sp());
        EXPECT(0xc6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc6ad));
        // B0 0242
        gbc.setState(0x71a6, 0x2c67, 0x2db0, 0xbbe9, 0xe175, 0x6c11, 0x0, 0x0);
        gbc.writeMem(0x71a6, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2c67, gbc.sp());
        EXPECT(0x71a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0243
        gbc.setState(0x6d1f, 0xd283, 0xb320, 0xd30a, 0xa46b, 0xf8d8, 0x1, 0x1);
        gbc.writeMem(0x6d1f, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd283, gbc.sp());
        EXPECT(0x6d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0244
        gbc.setState(0x6104, 0x5cc6, 0x65b0, 0xfaf6, 0xb2ce, 0xd91c, 0x1, 0x1);
        gbc.writeMem(0x6104, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5cc6, gbc.sp());
        EXPECT(0x6105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0245
        gbc.setState(0x7ac8, 0xbe83, 0xcda0, 0x1a94, 0xecb7, 0x8c55, 0x0, 0x1);
        gbc.writeMem(0x7ac8, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbe83, gbc.sp());
        EXPECT(0x7ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0246
        gbc.setState(0x4410, 0xe984, 0x7490, 0x8ae5, 0xb0b2, 0x7733, 0x0, 0x0);
        gbc.writeMem(0x4410, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe984, gbc.sp());
        EXPECT(0x4411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0248
        gbc.setState(0x6bd, 0xcad8, 0x3a50, 0xf06d, 0x63e3, 0x89ae, 0x1, 0x0);
        gbc.writeMem(0x6bd, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcad8, gbc.sp());
        EXPECT(0x6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0249
        gbc.setState(0xa3ce, 0x8563, 0xbc0, 0xb95e, 0xfd30, 0xf31d, 0x0, 0x0);
        gbc.writeMem(0xa3ce, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8563, gbc.sp());
        EXPECT(0xa3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa3ce));
        // B0 024A
        gbc.setState(0x1798, 0x6f8b, 0xe5f0, 0xca50, 0x9e1c, 0x98b, 0x0, 0x0);
        gbc.writeMem(0x1798, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6f8b, gbc.sp());
        EXPECT(0x1799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 024B
        gbc.setState(0x8e05, 0x24a9, 0x87f0, 0xfc63, 0xff76, 0x1df7, 0x0, 0x0);
        gbc.writeMem(0x8e05, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x24a9, gbc.sp());
        EXPECT(0x8e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8e05));
        // B0 024C
        gbc.setState(0xc334, 0xbed6, 0xe960, 0xb5cb, 0x3258, 0x7704, 0x1, 0x1);
        gbc.writeMem(0xc334, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbed6, gbc.sp());
        EXPECT(0xc335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc334));
        // B0 024D
        gbc.setState(0xa54b, 0xa4e1, 0xb930, 0x4252, 0xec00, 0xd788, 0x0, 0x0);
        gbc.writeMem(0xa54b, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa4e1, gbc.sp());
        EXPECT(0xa54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa54b));
        // B0 024E
        gbc.setState(0xa13f, 0x4d76, 0xafc0, 0xf2cd, 0xe792, 0xcb9d, 0x0, 0x0);
        gbc.writeMem(0xa13f, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4d76, gbc.sp());
        EXPECT(0xa140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa13f));
        // B0 024F
        gbc.setState(0x745, 0x465f, 0xd570, 0x25cf, 0x2294, 0x8687, 0x0, 0x1);
        gbc.writeMem(0x745, { 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x465f, gbc.sp());
        EXPECT(0x746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0251
        gbc.setState(0x1e1f, 0x994b, 0x1280, 0xab1c, 0xfd94, 0x937, 0x0, 0x1);
        gbc.writeMem(0x1e1f, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x994b, gbc.sp());
        EXPECT(0x1e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0252
        gbc.setState(0x96e1, 0xf72e, 0x8380, 0xc0b6, 0x3919, 0x73f8, 0x0, 0x0);
        gbc.writeMem(0x96e1, { 0xb0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf72e, gbc.sp());
        EXPECT(0x96e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x96e1));
        // B0 0253
        gbc.setState(0xd1c0, 0xda7d, 0x6d00, 0x34b6, 0x43e0, 0xfc5f, 0x0, 0x0);
        gbc.writeMem(0xd1c0, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xda7d, gbc.sp());
        EXPECT(0xd1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd1c0));
        // B0 0254
        gbc.setState(0x9f1e, 0x71f8, 0x5140, 0x1889, 0x4923, 0x393, 0x0, 0x0);
        gbc.writeMem(0x9f1e, { 0xb0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x71f8, gbc.sp());
        EXPECT(0x9f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9f1e));
        // B0 0255
        gbc.setState(0x1e19, 0x2959, 0xd180, 0x3da5, 0x7c54, 0x6386, 0x0, 0x0);
        gbc.writeMem(0x1e19, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2959, gbc.sp());
        EXPECT(0x1e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0256
        gbc.setState(0xbc54, 0x1161, 0x50a0, 0x3d1, 0x8ab5, 0x19df, 0x0, 0x1);
        gbc.writeMem(0xbc54, { 0xb0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1161, gbc.sp());
        EXPECT(0xbc55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbc54));
        // B0 0257
        gbc.setState(0x9bfa, 0xdae6, 0x7d80, 0x557b, 0xa59d, 0xffee, 0x0, 0x0);
        gbc.writeMem(0x9bfa, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdae6, gbc.sp());
        EXPECT(0x9bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9bfa));
        // B0 0258
        gbc.setState(0x4bbd, 0xdf04, 0x9e40, 0x9c42, 0xea11, 0x9c00, 0x1, 0x1);
        gbc.writeMem(0x4bbd, { 0xb0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdf04, gbc.sp());
        EXPECT(0x4bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0259
        gbc.setState(0xb458, 0x65dc, 0x4d00, 0x1484, 0xa706, 0x5c76, 0x0, 0x0);
        gbc.writeMem(0xb458, { 0xb0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x65dc, gbc.sp());
        EXPECT(0xb459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb458));
        // B0 025A
        gbc.setState(0xa10f, 0xdf64, 0x21b0, 0xe680, 0xaf6d, 0x546d, 0x0, 0x0);
        gbc.writeMem(0xa10f, { 0xb0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdf64, gbc.sp());
        EXPECT(0xa110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa10f));
        // B0 025B
        gbc.setState(0xaa2b, 0x2483, 0xc380, 0xa177, 0x19a6, 0x9114, 0x1, 0x1);
        gbc.writeMem(0xaa2b, { 0xb0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2483, gbc.sp());
        EXPECT(0xaa2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xaa2b));
        // B0 025C
        gbc.setState(0x9aa9, 0xe505, 0xf5a0, 0xd91f, 0x62c4, 0x857d, 0x0, 0x0);
        gbc.writeMem(0x9aa9, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe505, gbc.sp());
        EXPECT(0x9aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9aa9));
        // B0 025D
        gbc.setState(0x365c, 0x5c25, 0x3e70, 0xa013, 0x84c3, 0x9b42, 0x1, 0x0);
        gbc.writeMem(0x365c, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5c25, gbc.sp());
        EXPECT(0x365d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 025E
        gbc.setState(0x7117, 0xc4df, 0x2210, 0x7523, 0x45db, 0xb359, 0x1, 0x0);
        gbc.writeMem(0x7117, { 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc4df, gbc.sp());
        EXPECT(0x7118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 025F
        gbc.setState(0x8025, 0x62df, 0x14e0, 0xb542, 0x5142, 0xbcd2, 0x1, 0x0);
        gbc.writeMem(0x8025, { 0xb0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x62df, gbc.sp());
        EXPECT(0x8026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8025));
        // B0 0260
        gbc.setState(0x4082, 0x3d7e, 0xb6f0, 0xed1f, 0x7e31, 0xb6e3, 0x1, 0x1);
        gbc.writeMem(0x4082, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3d7e, gbc.sp());
        EXPECT(0x4083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0261
        gbc.setState(0x50c4, 0xe756, 0x4d40, 0x7822, 0x36ee, 0x1b1e, 0x0, 0x1);
        gbc.writeMem(0x50c4, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe756, gbc.sp());
        EXPECT(0x50c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0262
        gbc.setState(0x26db, 0xa618, 0xbf10, 0xc5ed, 0xa42e, 0x8e8f, 0x0, 0x1);
        gbc.writeMem(0x26db, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa618, gbc.sp());
        EXPECT(0x26dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0263
        gbc.setState(0x762d, 0x623a, 0xa1f0, 0xe84c, 0xd9da, 0x141f, 0x0, 0x0);
        gbc.writeMem(0x762d, { 0xb0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x623a, gbc.sp());
        EXPECT(0x762e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0264
        gbc.setState(0x9bc0, 0x79c1, 0x15e0, 0x6e76, 0x91d3, 0x355a, 0x1, 0x0);
        gbc.writeMem(0x9bc0, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x79c1, gbc.sp());
        EXPECT(0x9bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9bc0));
        // B0 0265
        gbc.setState(0x1b37, 0x9589, 0x2850, 0x50f5, 0x35b3, 0xce2f, 0x1, 0x0);
        gbc.writeMem(0x1b37, { 0xb0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9589, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0266
        gbc.setState(0xbaaa, 0xf816, 0x3450, 0xa2e6, 0x18a6, 0xbb49, 0x1, 0x0);
        gbc.writeMem(0xbaaa, { 0xb0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf816, gbc.sp());
        EXPECT(0xbaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbaaa));
        // B0 0267
        gbc.setState(0x4e94, 0x3eb8, 0xe620, 0x849f, 0xcb97, 0x148d, 0x1, 0x1);
        gbc.writeMem(0x4e94, { 0xb0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3eb8, gbc.sp());
        EXPECT(0x4e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0268
        gbc.setState(0x444a, 0xe048, 0x83e0, 0x1a, 0xdb28, 0xe04e, 0x0, 0x0);
        gbc.writeMem(0x444a, { 0xb0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe048, gbc.sp());
        EXPECT(0x444b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0269
        gbc.setState(0x113d, 0x8884, 0x78f0, 0x3fa7, 0x5206, 0xe90, 0x1, 0x1);
        gbc.writeMem(0x113d, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8884, gbc.sp());
        EXPECT(0x113e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 026A
        gbc.setState(0x2fcb, 0xa54a, 0x1600, 0xfcd7, 0x6629, 0xbafc, 0x0, 0x0);
        gbc.writeMem(0x2fcb, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa54a, gbc.sp());
        EXPECT(0x2fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 026B
        gbc.setState(0xcd31, 0xbeca, 0x2ba0, 0x4683, 0x425c, 0xbce1, 0x1, 0x1);
        gbc.writeMem(0xcd31, { 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbeca, gbc.sp());
        EXPECT(0xcd32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcd31));
        // B0 026C
        gbc.setState(0x59ba, 0x5523, 0xa150, 0x3c7d, 0x6f0, 0x3f76, 0x1, 0x1);
        gbc.writeMem(0x59ba, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5523, gbc.sp());
        EXPECT(0x59bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 026D
        gbc.setState(0xbe7d, 0x2f4f, 0x2100, 0xd1be, 0x7a95, 0xd9bd, 0x1, 0x1);
        gbc.writeMem(0xbe7d, { 0xb0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2f4f, gbc.sp());
        EXPECT(0xbe7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbe7d));
        // B0 026E
        gbc.setState(0xd82f, 0xbf61, 0xbfd0, 0x97de, 0xcf9e, 0x910a, 0x0, 0x1);
        gbc.writeMem(0xd82f, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbf61, gbc.sp());
        EXPECT(0xd830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd82f));
        // B0 026F
        gbc.setState(0x70c, 0xc217, 0xd590, 0x1624, 0x38ad, 0x4d17, 0x1, 0x1);
        gbc.writeMem(0x70c, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc217, gbc.sp());
        EXPECT(0x70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0270
        gbc.setState(0xd56, 0x15df, 0x5b30, 0xcea4, 0x43d5, 0x1981, 0x0, 0x0);
        gbc.writeMem(0xd56, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x15df, gbc.sp());
        EXPECT(0xd57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0271
        gbc.setState(0x7e2c, 0xd77c, 0x9e0, 0x2e33, 0x5eb5, 0x6fe1, 0x1, 0x0);
        gbc.writeMem(0x7e2c, { 0xb0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd77c, gbc.sp());
        EXPECT(0x7e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0272
        gbc.setState(0x787c, 0xc5d9, 0x99f0, 0x734d, 0x7a6e, 0xeca4, 0x0, 0x1);
        gbc.writeMem(0x787c, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc5d9, gbc.sp());
        EXPECT(0x787d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0273
        gbc.setState(0xc9c6, 0xcbbb, 0xcb50, 0x9674, 0xeec, 0xadba, 0x1, 0x1);
        gbc.writeMem(0xc9c6, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcbbb, gbc.sp());
        EXPECT(0xc9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc9c6));
        // B0 0274
        gbc.setState(0xc9ee, 0x56af, 0x2990, 0xfa1a, 0x94a1, 0xf31f, 0x0, 0x0);
        gbc.writeMem(0xc9ee, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x56af, gbc.sp());
        EXPECT(0xc9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc9ee));
        // B0 0275
        gbc.setState(0x6d63, 0xa7a2, 0x3ac0, 0xda22, 0x8346, 0x96fb, 0x1, 0x1);
        gbc.writeMem(0x6d63, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa7a2, gbc.sp());
        EXPECT(0x6d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0276
        gbc.setState(0x6dc2, 0xbcda, 0x25c0, 0x6c9b, 0xe9fe, 0x5b1, 0x0, 0x1);
        gbc.writeMem(0x6dc2, { 0xb0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbcda, gbc.sp());
        EXPECT(0x6dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0278
        gbc.setState(0x3373, 0xa062, 0x7d50, 0xe5bf, 0xfadb, 0x899c, 0x0, 0x1);
        gbc.writeMem(0x3373, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa062, gbc.sp());
        EXPECT(0x3374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0279
        gbc.setState(0x7780, 0x2e9f, 0xac0, 0xdb01, 0x43cb, 0x3990, 0x0, 0x1);
        gbc.writeMem(0x7780, { 0xb0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2e9f, gbc.sp());
        EXPECT(0x7781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 027A
        gbc.setState(0x1f15, 0x3953, 0x4e50, 0xcc08, 0x932, 0x7f34, 0x1, 0x1);
        gbc.writeMem(0x1f15, { 0xb0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3953, gbc.sp());
        EXPECT(0x1f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 027C
        gbc.setState(0x49ec, 0xcd63, 0x4fd0, 0x522a, 0xb3c8, 0xfa6f, 0x1, 0x1);
        gbc.writeMem(0x49ec, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcd63, gbc.sp());
        EXPECT(0x49ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 027D
        gbc.setState(0xadf1, 0xc91e, 0xa0c0, 0xc55e, 0x1056, 0x6d2e, 0x1, 0x1);
        gbc.writeMem(0xadf1, { 0xb0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc91e, gbc.sp());
        EXPECT(0xadf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xadf1));
        // B0 027E
        gbc.setState(0x38b1, 0x525, 0xe690, 0x42c4, 0x5bcd, 0xbe5c, 0x0, 0x1);
        gbc.writeMem(0x38b1, { 0xb0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x525, gbc.sp());
        EXPECT(0x38b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 027F
        gbc.setState(0x7d1c, 0x4e26, 0x33a0, 0x8041, 0x40e3, 0x3f6a, 0x1, 0x0);
        gbc.writeMem(0x7d1c, { 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4e26, gbc.sp());
        EXPECT(0x7d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0280
        gbc.setState(0xca12, 0x18aa, 0x7c90, 0xb7e4, 0xda79, 0x6c12, 0x1, 0x0);
        gbc.writeMem(0xca12, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x18aa, gbc.sp());
        EXPECT(0xca13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xca12));
        // B0 0281
        gbc.setState(0x7c8a, 0xa6ca, 0xd5d0, 0x9007, 0xf04f, 0x1c2e, 0x1, 0x0);
        gbc.writeMem(0x7c8a, { 0xb0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa6ca, gbc.sp());
        EXPECT(0x7c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0282
        gbc.setState(0xd727, 0xeeec, 0xb310, 0xaba8, 0xb91, 0xcddf, 0x0, 0x1);
        gbc.writeMem(0xd727, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xeeec, gbc.sp());
        EXPECT(0xd728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd727));
        // B0 0283
        gbc.setState(0x24d7, 0x5d51, 0x92a0, 0x4470, 0xc255, 0xde3d, 0x1, 0x1);
        gbc.writeMem(0x24d7, { 0xb0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5d51, gbc.sp());
        EXPECT(0x24d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0284
        gbc.setState(0x4769, 0xa15a, 0x6ef0, 0x71b7, 0xd402, 0x5d36, 0x1, 0x0);
        gbc.writeMem(0x4769, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa15a, gbc.sp());
        EXPECT(0x476a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0285
        gbc.setState(0x4b54, 0x6569, 0x2670, 0xcf26, 0xa2d3, 0xe6e6, 0x0, 0x0);
        gbc.writeMem(0x4b54, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6569, gbc.sp());
        EXPECT(0x4b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0286
        gbc.setState(0x6dad, 0x4b6d, 0x11f0, 0xcb86, 0xd768, 0x775f, 0x1, 0x0);
        gbc.writeMem(0x6dad, { 0xb0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4b6d, gbc.sp());
        EXPECT(0x6dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0287
        gbc.setState(0x380c, 0x5b5a, 0xb840, 0x4c1a, 0x5083, 0x6c23, 0x1, 0x0);
        gbc.writeMem(0x380c, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5b5a, gbc.sp());
        EXPECT(0x380d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0288
        gbc.setState(0x5a3a, 0xb68d, 0x28a0, 0x333b, 0x577, 0x2601, 0x1, 0x1);
        gbc.writeMem(0x5a3a, { 0xb0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb68d, gbc.sp());
        EXPECT(0x5a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0289
        gbc.setState(0x5954, 0xb8e0, 0xdf80, 0xf346, 0x3311, 0xc7d0, 0x0, 0x0);
        gbc.writeMem(0x5954, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb8e0, gbc.sp());
        EXPECT(0x5955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 028A
        gbc.setState(0x77e7, 0x42d, 0x9d20, 0x8151, 0x47e3, 0x13a9, 0x1, 0x0);
        gbc.writeMem(0x77e7, { 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x42d, gbc.sp());
        EXPECT(0x77e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 028B
        gbc.setState(0xac6e, 0xbc54, 0xe6d0, 0xb69c, 0x14a1, 0x8a1, 0x0, 0x1);
        gbc.writeMem(0xac6e, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbc54, gbc.sp());
        EXPECT(0xac6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xac6e));
        // B0 028C
        gbc.setState(0xeda9, 0xac7b, 0x8bb0, 0x6105, 0x6abe, 0xba3b, 0x0, 0x1);
        gbc.writeMem(0xeda9, { 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xac7b, gbc.sp());
        EXPECT(0xedaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xeda9));
        // B0 028D
        gbc.setState(0x74a8, 0x55bc, 0xc780, 0xdbf1, 0xd274, 0xa546, 0x1, 0x1);
        gbc.writeMem(0x74a8, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x55bc, gbc.sp());
        EXPECT(0x74a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 028E
        gbc.setState(0x1206, 0xbeea, 0xa4e0, 0x9abc, 0xbb81, 0x955, 0x0, 0x1);
        gbc.writeMem(0x1206, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbeea, gbc.sp());
        EXPECT(0x1207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 028F
        gbc.setState(0xe3c6, 0x1b3e, 0x2750, 0x4a51, 0xcc2, 0x3cb2, 0x1, 0x0);
        gbc.writeMem(0xe3c6, { 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1b3e, gbc.sp());
        EXPECT(0xe3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe3c6));
        // B0 0290
        gbc.setState(0xecc9, 0x2331, 0x12f0, 0x6a35, 0xd4e6, 0x757c, 0x0, 0x1);
        gbc.writeMem(0xecc9, { 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2331, gbc.sp());
        EXPECT(0xecca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xecc9));
        // B0 0291
        gbc.setState(0x95a3, 0x334d, 0xebd0, 0x6cb6, 0x80cb, 0x3e87, 0x0, 0x0);
        gbc.writeMem(0x95a3, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x334d, gbc.sp());
        EXPECT(0x95a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x95a3));
        // B0 0292
        gbc.setState(0xdd9d, 0xe058, 0xfba0, 0x1704, 0x8883, 0x1b8d, 0x1, 0x0);
        gbc.writeMem(0xdd9d, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe058, gbc.sp());
        EXPECT(0xdd9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdd9d));
        // B0 0293
        gbc.setState(0x1a81, 0x36bf, 0xcd90, 0x446e, 0x30e2, 0x7e76, 0x0, 0x0);
        gbc.writeMem(0x1a81, { 0xb0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x36bf, gbc.sp());
        EXPECT(0x1a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0294
        gbc.setState(0xa31b, 0x307a, 0xf50, 0xe3a3, 0x65c6, 0xc7db, 0x1, 0x1);
        gbc.writeMem(0xa31b, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x307a, gbc.sp());
        EXPECT(0xa31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa31b));
        // B0 0295
        gbc.setState(0x2553, 0x25a4, 0xa730, 0x1afb, 0xd7a0, 0x6825, 0x0, 0x0);
        gbc.writeMem(0x2553, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x25a4, gbc.sp());
        EXPECT(0x2554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0296
        gbc.setState(0xee09, 0xb934, 0x7c30, 0x3c86, 0x7cf3, 0x7706, 0x0, 0x0);
        gbc.writeMem(0xee09, { 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb934, gbc.sp());
        EXPECT(0xee0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xee09));
        // B0 0297
        gbc.setState(0x74ee, 0x624e, 0xe060, 0x9bf1, 0x4a0e, 0x737e, 0x1, 0x1);
        gbc.writeMem(0x74ee, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x624e, gbc.sp());
        EXPECT(0x74ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0298
        gbc.setState(0x9e83, 0x7e30, 0xd880, 0xa40c, 0x454d, 0x4b84, 0x0, 0x0);
        gbc.writeMem(0x9e83, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7e30, gbc.sp());
        EXPECT(0x9e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9e83));
        // B0 029A
        gbc.setState(0x9b60, 0xefc8, 0xaca0, 0x1e2d, 0xd2e4, 0x6df2, 0x1, 0x0);
        gbc.writeMem(0x9b60, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xefc8, gbc.sp());
        EXPECT(0x9b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9b60));
        // B0 029B
        gbc.setState(0xdd6d, 0x3c29, 0xb8f0, 0x1ba0, 0xcc59, 0xe341, 0x0, 0x0);
        gbc.writeMem(0xdd6d, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3c29, gbc.sp());
        EXPECT(0xdd6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdd6d));
        // B0 029C
        gbc.setState(0x9add, 0x57cf, 0x8d00, 0x5d88, 0xe348, 0x32ec, 0x0, 0x1);
        gbc.writeMem(0x9add, { 0xb0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x57cf, gbc.sp());
        EXPECT(0x9ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9add));
        // B0 029D
        gbc.setState(0x585e, 0x37fc, 0xc6e0, 0xb40b, 0xa37e, 0xfb91, 0x0, 0x1);
        gbc.writeMem(0x585e, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x37fc, gbc.sp());
        EXPECT(0x585f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 029E
        gbc.setState(0xe312, 0xb94b, 0x15a0, 0x4be8, 0x4a72, 0x1508, 0x1, 0x0);
        gbc.writeMem(0xe312, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb94b, gbc.sp());
        EXPECT(0xe313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe312));
        // B0 029F
        gbc.setState(0xd0eb, 0x1f7e, 0xc360, 0x819, 0x2cd2, 0x9f36, 0x1, 0x0);
        gbc.writeMem(0xd0eb, { 0xb0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1f7e, gbc.sp());
        EXPECT(0xd0ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd0eb));
        // B0 02A0
        gbc.setState(0x69f4, 0x2fa1, 0x5030, 0x7f2a, 0xc418, 0x114d, 0x1, 0x0);
        gbc.writeMem(0x69f4, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2fa1, gbc.sp());
        EXPECT(0x69f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02A2
        gbc.setState(0x8fc5, 0xa175, 0xab40, 0xcb57, 0xadd3, 0x449e, 0x1, 0x0);
        gbc.writeMem(0x8fc5, { 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa175, gbc.sp());
        EXPECT(0x8fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8fc5));
        // B0 02A3
        gbc.setState(0x56b, 0xc05c, 0x4170, 0x1764, 0xbbca, 0xc1e6, 0x1, 0x1);
        gbc.writeMem(0x56b, { 0xb0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc05c, gbc.sp());
        EXPECT(0x56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02A4
        gbc.setState(0x2ec2, 0xd618, 0xde40, 0x8e91, 0xef7f, 0x8131, 0x1, 0x1);
        gbc.writeMem(0x2ec2, { 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd618, gbc.sp());
        EXPECT(0x2ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02A5
        gbc.setState(0xdec3, 0xfc76, 0xd200, 0xd919, 0x538c, 0xf381, 0x1, 0x0);
        gbc.writeMem(0xdec3, { 0xb0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfc76, gbc.sp());
        EXPECT(0xdec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdec3));
        // B0 02A6
        gbc.setState(0xbdff, 0x7b4d, 0x8e80, 0xa710, 0x677b, 0x3b35, 0x0, 0x0);
        gbc.writeMem(0xbdff, { 0xb0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7b4d, gbc.sp());
        EXPECT(0xbe00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbdff));
        // B0 02A7
        gbc.setState(0x73a3, 0xfc4, 0x3c50, 0x9318, 0xd420, 0xe6a0, 0x0, 0x0);
        gbc.writeMem(0x73a3, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfc4, gbc.sp());
        EXPECT(0x73a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02A8
        gbc.setState(0x889a, 0xecfb, 0x3610, 0x4b50, 0x70c1, 0x940, 0x0, 0x0);
        gbc.writeMem(0x889a, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xecfb, gbc.sp());
        EXPECT(0x889b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x889a));
        // B0 02A9
        gbc.setState(0x7e48, 0xa417, 0xc850, 0x409c, 0xa15c, 0xb2bd, 0x0, 0x0);
        gbc.writeMem(0x7e48, { 0xb0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa417, gbc.sp());
        EXPECT(0x7e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02AA
        gbc.setState(0x80be, 0xe928, 0xf310, 0xe0f9, 0x7f3, 0x5e09, 0x0, 0x0);
        gbc.writeMem(0x80be, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe928, gbc.sp());
        EXPECT(0x80bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x80be));
        // B0 02AB
        gbc.setState(0xb247, 0x71c9, 0xc6c0, 0xdb77, 0xd30f, 0x7281, 0x0, 0x0);
        gbc.writeMem(0xb247, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x71c9, gbc.sp());
        EXPECT(0xb248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb247));
        // B0 02AC
        gbc.setState(0x27b6, 0x133b, 0x8220, 0x569b, 0x452d, 0xe19c, 0x0, 0x1);
        gbc.writeMem(0x27b6, { 0xb0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x133b, gbc.sp());
        EXPECT(0x27b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02AD
        gbc.setState(0xe4d8, 0xace2, 0xbc00, 0xaf39, 0x4a08, 0x31af, 0x1, 0x1);
        gbc.writeMem(0xe4d8, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xace2, gbc.sp());
        EXPECT(0xe4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe4d8));
        // B0 02AE
        gbc.setState(0x2864, 0x9afa, 0xa590, 0x6c96, 0x6801, 0x5516, 0x0, 0x0);
        gbc.writeMem(0x2864, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9afa, gbc.sp());
        EXPECT(0x2865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02AF
        gbc.setState(0x5e1e, 0x4d70, 0xfab0, 0xfeb5, 0x2628, 0x559, 0x0, 0x1);
        gbc.writeMem(0x5e1e, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4d70, gbc.sp());
        EXPECT(0x5e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02B0
        gbc.setState(0xded2, 0x2bff, 0xb630, 0x42ac, 0x68ca, 0x389c, 0x1, 0x0);
        gbc.writeMem(0xded2, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2bff, gbc.sp());
        EXPECT(0xded3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xded2));
        // B0 02B1
        gbc.setState(0x9e0f, 0x170b, 0x5580, 0x27c0, 0x6624, 0x2401, 0x0, 0x0);
        gbc.writeMem(0x9e0f, { 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x170b, gbc.sp());
        EXPECT(0x9e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9e0f));
        // B0 02B2
        gbc.setState(0xdca0, 0x94aa, 0x55f0, 0x8c41, 0xafcf, 0x2dc0, 0x0, 0x1);
        gbc.writeMem(0xdca0, { 0xb0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0xdca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdca0));
        // B0 02B3
        gbc.setState(0xd510, 0xa3bc, 0xdcd0, 0x366c, 0x12e8, 0xc9d, 0x0, 0x0);
        gbc.writeMem(0xd510, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa3bc, gbc.sp());
        EXPECT(0xd511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd510));
        // B0 02B4
        gbc.setState(0xaeb0, 0x420d, 0xa0a0, 0xb20a, 0x92e4, 0xa11, 0x1, 0x0);
        gbc.writeMem(0xaeb0, { 0xb0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x420d, gbc.sp());
        EXPECT(0xaeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xaeb0));
        // B0 02B5
        gbc.setState(0x2ce1, 0x6f21, 0xc670, 0x956f, 0x40af, 0x2c1d, 0x0, 0x0);
        gbc.writeMem(0x2ce1, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6f21, gbc.sp());
        EXPECT(0x2ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02B6
        gbc.setState(0x1e54, 0x177d, 0x3820, 0xf69, 0x8987, 0xdeac, 0x1, 0x0);
        gbc.writeMem(0x1e54, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x177d, gbc.sp());
        EXPECT(0x1e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02B7
        gbc.setState(0x740, 0x149, 0xec0, 0x6d3f, 0xbb9d, 0xc657, 0x0, 0x1);
        gbc.writeMem(0x740, { 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x149, gbc.sp());
        EXPECT(0x741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02B8
        gbc.setState(0x7436, 0x134f, 0x3c80, 0x6c56, 0x82fb, 0xf16d, 0x0, 0x1);
        gbc.writeMem(0x7436, { 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x134f, gbc.sp());
        EXPECT(0x7437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02B9
        gbc.setState(0x4935, 0xb746, 0x35d0, 0x311f, 0xa413, 0x43e6, 0x1, 0x1);
        gbc.writeMem(0x4935, { 0xb0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb746, gbc.sp());
        EXPECT(0x4936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02BA
        gbc.setState(0xb68b, 0x5192, 0xfa80, 0x5191, 0xf391, 0x49c3, 0x0, 0x0);
        gbc.writeMem(0xb68b, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5192, gbc.sp());
        EXPECT(0xb68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb68b));
        // B0 02BB
        gbc.setState(0xb85c, 0xfeb4, 0x3da0, 0x4c13, 0x3b41, 0xc7fb, 0x0, 0x0);
        gbc.writeMem(0xb85c, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfeb4, gbc.sp());
        EXPECT(0xb85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb85c));
        // B0 02BC
        gbc.setState(0x2c59, 0xa95f, 0x4e10, 0xd40f, 0xc2c8, 0x3519, 0x1, 0x1);
        gbc.writeMem(0x2c59, { 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa95f, gbc.sp());
        EXPECT(0x2c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02BD
        gbc.setState(0x1ed8, 0x8a78, 0xa1d0, 0x1d3e, 0x7b8d, 0xe194, 0x1, 0x0);
        gbc.writeMem(0x1ed8, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0x1ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02BE
        gbc.setState(0x7d3f, 0x6bfd, 0x8fb0, 0xeb49, 0xd54d, 0x7555, 0x1, 0x1);
        gbc.writeMem(0x7d3f, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6bfd, gbc.sp());
        EXPECT(0x7d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02BF
        gbc.setState(0xb9b0, 0x9079, 0x8440, 0x1ee3, 0x4cda, 0xa083, 0x0, 0x1);
        gbc.writeMem(0xb9b0, { 0xb0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9079, gbc.sp());
        EXPECT(0xb9b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb9b0));
        // B0 02C0
        gbc.setState(0xbf81, 0x2ab5, 0xc3a0, 0xf7a6, 0x27ee, 0x7389, 0x1, 0x1);
        gbc.writeMem(0xbf81, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2ab5, gbc.sp());
        EXPECT(0xbf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbf81));
        // B0 02C1
        gbc.setState(0x9643, 0x8b66, 0x3770, 0x2db7, 0x38d2, 0x473b, 0x1, 0x0);
        gbc.writeMem(0x9643, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8b66, gbc.sp());
        EXPECT(0x9644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9643));
        // B0 02C2
        gbc.setState(0x6c42, 0xdd6c, 0x82e0, 0xc427, 0xccf9, 0x32f0, 0x0, 0x1);
        gbc.writeMem(0x6c42, { 0xb0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdd6c, gbc.sp());
        EXPECT(0x6c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02C3
        gbc.setState(0xc772, 0x7df2, 0x390, 0x6dd7, 0x123e, 0x2eca, 0x1, 0x1);
        gbc.writeMem(0xc772, { 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7df2, gbc.sp());
        EXPECT(0xc773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc772));
        // B0 02C4
        gbc.setState(0xe79, 0x69e6, 0xc6e0, 0x5560, 0x83d2, 0x4506, 0x1, 0x0);
        gbc.writeMem(0xe79, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x69e6, gbc.sp());
        EXPECT(0xe7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02C5
        gbc.setState(0xea3a, 0x9f9f, 0xdd50, 0x9f1e, 0x260d, 0xf2c8, 0x1, 0x0);
        gbc.writeMem(0xea3a, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9f9f, gbc.sp());
        EXPECT(0xea3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xea3a));
        // B0 02C6
        gbc.setState(0x8bfa, 0x5dc7, 0xa6b0, 0xc230, 0x94fb, 0xefb6, 0x1, 0x1);
        gbc.writeMem(0x8bfa, { 0xb0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5dc7, gbc.sp());
        EXPECT(0x8bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8bfa));
        // B0 02C7
        gbc.setState(0xac32, 0xf2a2, 0x4520, 0x877e, 0xf162, 0x14fc, 0x0, 0x0);
        gbc.writeMem(0xac32, { 0xb0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf2a2, gbc.sp());
        EXPECT(0xac33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xac32));
        // B0 02C8
        gbc.setState(0x8a0, 0x48f8, 0xb8f0, 0x8326, 0x104f, 0x7774, 0x1, 0x1);
        gbc.writeMem(0x8a0, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x48f8, gbc.sp());
        EXPECT(0x8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02C9
        gbc.setState(0xacf3, 0x951, 0x9840, 0x9aca, 0xdcc1, 0x12e5, 0x1, 0x1);
        gbc.writeMem(0xacf3, { 0xb0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x951, gbc.sp());
        EXPECT(0xacf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xacf3));
        // B0 02CA
        gbc.setState(0xe8ca, 0x3edb, 0x41e0, 0xb241, 0x44a3, 0xa3d1, 0x0, 0x1);
        gbc.writeMem(0xe8ca, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3edb, gbc.sp());
        EXPECT(0xe8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe8ca));
        // B0 02CB
        gbc.setState(0xdb9a, 0xca1, 0xdd10, 0x354f, 0x40e9, 0x610, 0x0, 0x0);
        gbc.writeMem(0xdb9a, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xca1, gbc.sp());
        EXPECT(0xdb9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdb9a));
        // B0 02CC
        gbc.setState(0xc515, 0x4fcb, 0xed10, 0xad27, 0xe7e5, 0x7f41, 0x0, 0x1);
        gbc.writeMem(0xc515, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4fcb, gbc.sp());
        EXPECT(0xc516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc515));
        // B0 02CD
        gbc.setState(0xd50a, 0x3eb9, 0xacf0, 0xb440, 0x4ea6, 0xbf13, 0x0, 0x0);
        gbc.writeMem(0xd50a, { 0xb0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3eb9, gbc.sp());
        EXPECT(0xd50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd50a));
        // B0 02CF
        gbc.setState(0xb9b, 0xde77, 0x8ae0, 0x4d11, 0x754, 0x397f, 0x1, 0x0);
        gbc.writeMem(0xb9b, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xde77, gbc.sp());
        EXPECT(0xb9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02D0
        gbc.setState(0x7dcd, 0xa987, 0xeb40, 0x9684, 0xa4f7, 0x57fa, 0x0, 0x1);
        gbc.writeMem(0x7dcd, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa987, gbc.sp());
        EXPECT(0x7dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02D1
        gbc.setState(0x5050, 0x363c, 0x2fb0, 0xa501, 0xb7b6, 0x35f2, 0x0, 0x0);
        gbc.writeMem(0x5050, { 0xb0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x363c, gbc.sp());
        EXPECT(0x5051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02D2
        gbc.setState(0x41fc, 0xc303, 0x8430, 0xa3ec, 0x2e5c, 0xbd04, 0x1, 0x1);
        gbc.writeMem(0x41fc, { 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc303, gbc.sp());
        EXPECT(0x41fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02D3
        gbc.setState(0x1987, 0x450, 0x9cd0, 0xeeb6, 0xdf7d, 0xd1f5, 0x0, 0x1);
        gbc.writeMem(0x1987, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x450, gbc.sp());
        EXPECT(0x1988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02D4
        gbc.setState(0xb3b7, 0xc84a, 0x340, 0x4b7d, 0xd4c7, 0x899a, 0x1, 0x1);
        gbc.writeMem(0xb3b7, { 0xb0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc84a, gbc.sp());
        EXPECT(0xb3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb3b7));
        // B0 02D5
        gbc.setState(0x5abd, 0x606, 0xe6a0, 0x3ad5, 0xf70d, 0x8de, 0x0, 0x0);
        gbc.writeMem(0x5abd, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x606, gbc.sp());
        EXPECT(0x5abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02D6
        gbc.setState(0x1a5a, 0x4ae9, 0xa1e0, 0x9f42, 0xd87f, 0x33d2, 0x0, 0x0);
        gbc.writeMem(0x1a5a, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4ae9, gbc.sp());
        EXPECT(0x1a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02D7
        gbc.setState(0x4069, 0x2ca1, 0x8710, 0x6d01, 0x9047, 0xf2c4, 0x0, 0x0);
        gbc.writeMem(0x4069, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2ca1, gbc.sp());
        EXPECT(0x406a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02D8
        gbc.setState(0xcb8c, 0x8229, 0x21c0, 0x3296, 0xa917, 0x8c6d, 0x0, 0x1);
        gbc.writeMem(0xcb8c, { 0xb0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8229, gbc.sp());
        EXPECT(0xcb8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcb8c));
        // B0 02D9
        gbc.setState(0xc03d, 0xce69, 0xdd70, 0x8a62, 0xd37, 0x93ff, 0x1, 0x1);
        gbc.writeMem(0xc03d, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xce69, gbc.sp());
        EXPECT(0xc03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc03d));
        // B0 02DA
        gbc.setState(0xb2b, 0x76f6, 0x59a0, 0xc9cc, 0xe53f, 0xf981, 0x0, 0x0);
        gbc.writeMem(0xb2b, { 0xb0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x76f6, gbc.sp());
        EXPECT(0xb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02DB
        gbc.setState(0xb8e2, 0xb1a1, 0xb100, 0xffd6, 0x996e, 0x4ae4, 0x0, 0x1);
        gbc.writeMem(0xb8e2, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb1a1, gbc.sp());
        EXPECT(0xb8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb8e2));
        // B0 02DC
        gbc.setState(0x340a, 0xc1b, 0xc900, 0x807f, 0xa8fa, 0x580d, 0x1, 0x1);
        gbc.writeMem(0x340a, { 0xb0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc1b, gbc.sp());
        EXPECT(0x340b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02DD
        gbc.setState(0x1f30, 0x5afa, 0x7d60, 0xa207, 0xb71b, 0x486d, 0x0, 0x0);
        gbc.writeMem(0x1f30, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5afa, gbc.sp());
        EXPECT(0x1f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02DE
        gbc.setState(0x8f42, 0x29b3, 0xbaa0, 0x186, 0x5abd, 0x1c54, 0x0, 0x0);
        gbc.writeMem(0x8f42, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x29b3, gbc.sp());
        EXPECT(0x8f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8f42));
        // B0 02DF
        gbc.setState(0x6ba2, 0xab0d, 0x5a30, 0x78bb, 0x6be1, 0xf2a5, 0x1, 0x0);
        gbc.writeMem(0x6ba2, { 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xab0d, gbc.sp());
        EXPECT(0x6ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02E0
        gbc.setState(0xbda1, 0xa651, 0x7160, 0xdf74, 0x6c93, 0x22d4, 0x0, 0x1);
        gbc.writeMem(0xbda1, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa651, gbc.sp());
        EXPECT(0xbda2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbda1));
        // B0 02E1
        gbc.setState(0xa167, 0xcac8, 0x1200, 0xde9a, 0x28ad, 0xf015, 0x0, 0x1);
        gbc.writeMem(0xa167, { 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0xa168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa167));
        // B0 02E2
        gbc.setState(0x6c36, 0xf3c6, 0xfa50, 0x146d, 0x22bf, 0x4f9b, 0x0, 0x1);
        gbc.writeMem(0x6c36, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf3c6, gbc.sp());
        EXPECT(0x6c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02E3
        gbc.setState(0xeb84, 0x5309, 0x2bc0, 0xde27, 0xc51e, 0xaf41, 0x0, 0x0);
        gbc.writeMem(0xeb84, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5309, gbc.sp());
        EXPECT(0xeb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xeb84));
        // B0 02E4
        gbc.setState(0x250, 0x1ba2, 0x4dd0, 0x8101, 0x4c, 0x9303, 0x1, 0x0);
        gbc.writeMem(0x250, { 0xb0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1ba2, gbc.sp());
        EXPECT(0x251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02E5
        gbc.setState(0xc12, 0x2066, 0x19f0, 0x10bb, 0xf0b9, 0x432, 0x0, 0x1);
        gbc.writeMem(0xc12, { 0xb0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2066, gbc.sp());
        EXPECT(0xc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02E6
        gbc.setState(0x4d18, 0xff02, 0xf170, 0xde01, 0x8d23, 0x2dc1, 0x0, 0x0);
        gbc.writeMem(0x4d18, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xff02, gbc.sp());
        EXPECT(0x4d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02E7
        gbc.setState(0x44fb, 0x9328, 0xe1a0, 0xe3e3, 0x317, 0xdfe4, 0x1, 0x1);
        gbc.writeMem(0x44fb, { 0xb0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9328, gbc.sp());
        EXPECT(0x44fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02E8
        gbc.setState(0xdaf5, 0x3008, 0x8610, 0x902c, 0xa4ea, 0x18ce, 0x0, 0x1);
        gbc.writeMem(0xdaf5, { 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3008, gbc.sp());
        EXPECT(0xdaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdaf5));
        // B0 02E9
        gbc.setState(0xcd46, 0x95b2, 0x6b50, 0xcb0a, 0x3e11, 0x9a5d, 0x0, 0x1);
        gbc.writeMem(0xcd46, { 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x95b2, gbc.sp());
        EXPECT(0xcd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcd46));
        // B0 02EA
        gbc.setState(0xe4eb, 0xe3e2, 0xc4a0, 0x6d06, 0x3496, 0x6ccc, 0x1, 0x0);
        gbc.writeMem(0xe4eb, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe3e2, gbc.sp());
        EXPECT(0xe4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe4eb));
        // B0 02EB
        gbc.setState(0x6970, 0x95da, 0x80f0, 0x2c36, 0xca2a, 0x3a5e, 0x1, 0x0);
        gbc.writeMem(0x6970, { 0xb0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x95da, gbc.sp());
        EXPECT(0x6971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02EC
        gbc.setState(0x5ead, 0x3a2a, 0xbb10, 0xd6df, 0xecf7, 0xd3f, 0x0, 0x1);
        gbc.writeMem(0x5ead, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3a2a, gbc.sp());
        EXPECT(0x5eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02ED
        gbc.setState(0xdb79, 0xf8fd, 0xf640, 0xc731, 0xa8b3, 0xbf10, 0x1, 0x0);
        gbc.writeMem(0xdb79, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf8fd, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdb79));
        // B0 02EE
        gbc.setState(0x471b, 0x9aa2, 0x1340, 0x7015, 0x52cd, 0x2a8d, 0x0, 0x0);
        gbc.writeMem(0x471b, { 0xb0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9aa2, gbc.sp());
        EXPECT(0x471c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02EF
        gbc.setState(0x6fc0, 0x2bd0, 0x9bf0, 0xab9, 0xb010, 0xf3d4, 0x1, 0x1);
        gbc.writeMem(0x6fc0, { 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2bd0, gbc.sp());
        EXPECT(0x6fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02F0
        gbc.setState(0x6e00, 0x3296, 0xe590, 0xcbaf, 0xee62, 0x38a, 0x0, 0x0);
        gbc.writeMem(0x6e00, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3296, gbc.sp());
        EXPECT(0x6e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02F1
        gbc.setState(0x2c61, 0xb3f6, 0x46a0, 0x2281, 0xba8a, 0xf07c, 0x1, 0x0);
        gbc.writeMem(0x2c61, { 0xb0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb3f6, gbc.sp());
        EXPECT(0x2c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02F2
        gbc.setState(0x22be, 0x572b, 0x69f0, 0xd6a1, 0x3c55, 0x8165, 0x1, 0x0);
        gbc.writeMem(0x22be, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x572b, gbc.sp());
        EXPECT(0x22bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02F3
        gbc.setState(0xa0a1, 0xd76, 0xa650, 0xc269, 0xf2de, 0x1606, 0x1, 0x1);
        gbc.writeMem(0xa0a1, { 0xb0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd76, gbc.sp());
        EXPECT(0xa0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa0a1));
        // B0 02F4
        gbc.setState(0x4743, 0x6a39, 0xb8e0, 0x7442, 0xc8b, 0x62e8, 0x1, 0x0);
        gbc.writeMem(0x4743, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6a39, gbc.sp());
        EXPECT(0x4744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02F5
        gbc.setState(0x9099, 0xa832, 0xbd30, 0x2a19, 0x280f, 0xd9af, 0x0, 0x0);
        gbc.writeMem(0x9099, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa832, gbc.sp());
        EXPECT(0x909a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9099));
        // B0 02F6
        gbc.setState(0x9cbf, 0x80c3, 0xec60, 0x58fe, 0x35ad, 0x8453, 0x1, 0x0);
        gbc.writeMem(0x9cbf, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x80c3, gbc.sp());
        EXPECT(0x9cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9cbf));
        // B0 02F7
        gbc.setState(0x3e21, 0x82b3, 0xcf30, 0x662, 0x97f8, 0xeaab, 0x0, 0x1);
        gbc.writeMem(0x3e21, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x82b3, gbc.sp());
        EXPECT(0x3e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02F8
        gbc.setState(0x4dc0, 0x3a0b, 0xcef0, 0x24b6, 0xc1e, 0xf1c7, 0x0, 0x1);
        gbc.writeMem(0x4dc0, { 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3a0b, gbc.sp());
        EXPECT(0x4dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02F9
        gbc.setState(0x510e, 0xebf4, 0xacd0, 0x3df2, 0x6c71, 0x19fc, 0x0, 0x1);
        gbc.writeMem(0x510e, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xebf4, gbc.sp());
        EXPECT(0x510f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02FA
        gbc.setState(0xa032, 0xde46, 0x1a00, 0xf05e, 0x31b0, 0x923e, 0x0, 0x0);
        gbc.writeMem(0xa032, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xde46, gbc.sp());
        EXPECT(0xa033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa032));
        // B0 02FB
        gbc.setState(0xddb6, 0xe0f7, 0xe940, 0x48a8, 0x3841, 0x8ba7, 0x1, 0x1);
        gbc.writeMem(0xddb6, { 0xb0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe0f7, gbc.sp());
        EXPECT(0xddb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xddb6));
        // B0 02FC
        gbc.setState(0xde3e, 0x20f8, 0x8d30, 0x6dc9, 0x2e52, 0xe016, 0x0, 0x0);
        gbc.writeMem(0xde3e, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x20f8, gbc.sp());
        EXPECT(0xde3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xde3e));
        // B0 02FD
        gbc.setState(0x480, 0xb249, 0xcff0, 0x9ffb, 0x1a70, 0xd243, 0x0, 0x1);
        gbc.writeMem(0x480, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb249, gbc.sp());
        EXPECT(0x481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02FE
        gbc.setState(0x65d6, 0xfa89, 0xf130, 0x8a70, 0xf9ea, 0x7f7d, 0x1, 0x0);
        gbc.writeMem(0x65d6, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfa89, gbc.sp());
        EXPECT(0x65d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 02FF
        gbc.setState(0xcd8b, 0x1358, 0xbeb0, 0x598c, 0x8637, 0x7e44, 0x1, 0x1);
        gbc.writeMem(0xcd8b, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1358, gbc.sp());
        EXPECT(0xcd8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcd8b));
        // B0 0300
        gbc.setState(0xe434, 0xbddd, 0x5ce0, 0xf006, 0xc6e3, 0xd66f, 0x0, 0x1);
        gbc.writeMem(0xe434, { 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbddd, gbc.sp());
        EXPECT(0xe435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe434));
        // B0 0301
        gbc.setState(0x42b0, 0x4e16, 0xa0, 0x31d7, 0xe87b, 0xe487, 0x1, 0x1);
        gbc.writeMem(0x42b0, { 0xb0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4e16, gbc.sp());
        EXPECT(0x42b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0302
        gbc.setState(0x75eb, 0x4f82, 0x3220, 0x6a23, 0x1da9, 0xe2c6, 0x0, 0x0);
        gbc.writeMem(0x75eb, { 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4f82, gbc.sp());
        EXPECT(0x75ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0303
        gbc.setState(0x4cdb, 0x48c4, 0xf670, 0x7727, 0x1387, 0x6e3f, 0x1, 0x1);
        gbc.writeMem(0x4cdb, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x48c4, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0304
        gbc.setState(0x3b7b, 0x58e7, 0x2980, 0x7b0b, 0xf904, 0xc398, 0x0, 0x0);
        gbc.writeMem(0x3b7b, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x58e7, gbc.sp());
        EXPECT(0x3b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0305
        gbc.setState(0xb874, 0x139d, 0xae90, 0x2c2f, 0xba60, 0xa754, 0x1, 0x1);
        gbc.writeMem(0xb874, { 0xb0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x139d, gbc.sp());
        EXPECT(0xb875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb874));
        // B0 0306
        gbc.setState(0x1b46, 0xdb46, 0x2430, 0x56e9, 0xc818, 0x29e0, 0x0, 0x1);
        gbc.writeMem(0x1b46, { 0xb0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdb46, gbc.sp());
        EXPECT(0x1b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0307
        gbc.setState(0xcc5e, 0x4843, 0xaa70, 0xd59a, 0xe0d, 0xd667, 0x0, 0x1);
        gbc.writeMem(0xcc5e, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4843, gbc.sp());
        EXPECT(0xcc5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcc5e));
        // B0 0308
        gbc.setState(0xb60a, 0xd0d2, 0xf9e0, 0x73db, 0xdac1, 0x8e6d, 0x1, 0x0);
        gbc.writeMem(0xb60a, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd0d2, gbc.sp());
        EXPECT(0xb60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb60a));
        // B0 0309
        gbc.setState(0x1f93, 0x3299, 0xdc10, 0xa7d9, 0x658b, 0xf976, 0x0, 0x1);
        gbc.writeMem(0x1f93, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3299, gbc.sp());
        EXPECT(0x1f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 030A
        gbc.setState(0x1327, 0xb561, 0xaff0, 0xfea3, 0x5eb0, 0x51e6, 0x1, 0x0);
        gbc.writeMem(0x1327, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb561, gbc.sp());
        EXPECT(0x1328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 030B
        gbc.setState(0xec4b, 0x8490, 0xc470, 0x5421, 0xcc68, 0xe7d8, 0x1, 0x0);
        gbc.writeMem(0xec4b, { 0xb0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8490, gbc.sp());
        EXPECT(0xec4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xec4b));
        // B0 030D
        gbc.setState(0x430, 0x6b4e, 0xabe0, 0x38a9, 0x640f, 0x8f61, 0x1, 0x1);
        gbc.writeMem(0x430, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6b4e, gbc.sp());
        EXPECT(0x431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 030E
        gbc.setState(0x77e1, 0xa906, 0xd2a0, 0x5b8, 0x127f, 0x3a3e, 0x1, 0x1);
        gbc.writeMem(0x77e1, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa906, gbc.sp());
        EXPECT(0x77e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 030F
        gbc.setState(0xa620, 0xc2b, 0x620, 0x5dd3, 0xd8e1, 0xff9, 0x1, 0x1);
        gbc.writeMem(0xa620, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc2b, gbc.sp());
        EXPECT(0xa621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa620));
        // B0 0310
        gbc.setState(0x9ee8, 0x71bc, 0xfbc0, 0x297e, 0xfb7a, 0xb7cc, 0x0, 0x0);
        gbc.writeMem(0x9ee8, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x71bc, gbc.sp());
        EXPECT(0x9ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9ee8));
        // B0 0311
        gbc.setState(0xcf48, 0x72c4, 0x5320, 0xb4f0, 0xd09d, 0x4b96, 0x0, 0x0);
        gbc.writeMem(0xcf48, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x72c4, gbc.sp());
        EXPECT(0xcf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcf48));
        // B0 0312
        gbc.setState(0xd9cd, 0x7964, 0xfce0, 0xee1a, 0x8ee5, 0x9d31, 0x0, 0x1);
        gbc.writeMem(0xd9cd, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7964, gbc.sp());
        EXPECT(0xd9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd9cd));
        // B0 0313
        gbc.setState(0xc4d7, 0xff0, 0x360, 0x8fb2, 0x3b9a, 0x6b27, 0x0, 0x0);
        gbc.writeMem(0xc4d7, { 0xb0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xff0, gbc.sp());
        EXPECT(0xc4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc4d7));
        // B0 0314
        gbc.setState(0x66e5, 0x999, 0x9fb0, 0xd533, 0x4941, 0xbe23, 0x1, 0x0);
        gbc.writeMem(0x66e5, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x999, gbc.sp());
        EXPECT(0x66e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0315
        gbc.setState(0x357e, 0x7aca, 0x6540, 0x2a0, 0xbbbe, 0xbd3f, 0x0, 0x0);
        gbc.writeMem(0x357e, { 0xb0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7aca, gbc.sp());
        EXPECT(0x357f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0316
        gbc.setState(0xb972, 0x7a1, 0xf3b0, 0xd9ff, 0xdd7e, 0x13de, 0x1, 0x1);
        gbc.writeMem(0xb972, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7a1, gbc.sp());
        EXPECT(0xb973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb972));
        // B0 0317
        gbc.setState(0x55c5, 0xb0ce, 0x9320, 0x20fa, 0x10f2, 0xa263, 0x1, 0x0);
        gbc.writeMem(0x55c5, { 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb0ce, gbc.sp());
        EXPECT(0x55c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0318
        gbc.setState(0x7d, 0x7ad7, 0x73a0, 0xc208, 0x1edb, 0xda16, 0x1, 0x0);
        gbc.writeMem(0x7d, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7ad7, gbc.sp());
        EXPECT(0x7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0319
        gbc.setState(0x131, 0xec81, 0x6320, 0x43e6, 0x7f49, 0x8169, 0x0, 0x0);
        gbc.writeMem(0x131, { 0xb0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xec81, gbc.sp());
        EXPECT(0x132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 031A
        gbc.setState(0x2f15, 0xae9, 0x6ec0, 0xdbc1, 0x22ce, 0x7e61, 0x0, 0x0);
        gbc.writeMem(0x2f15, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xae9, gbc.sp());
        EXPECT(0x2f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 031C
        gbc.setState(0x7dd3, 0x9708, 0x6eb0, 0x371, 0x6933, 0x9a64, 0x1, 0x0);
        gbc.writeMem(0x7dd3, { 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9708, gbc.sp());
        EXPECT(0x7dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 031D
        gbc.setState(0xa7c7, 0x5892, 0xb280, 0xa13, 0x9191, 0x3d9a, 0x0, 0x0);
        gbc.writeMem(0xa7c7, { 0xb0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5892, gbc.sp());
        EXPECT(0xa7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa7c7));
        // B0 031E
        gbc.setState(0x223f, 0x681f, 0x4b60, 0xa69a, 0x1d48, 0xfbc0, 0x1, 0x0);
        gbc.writeMem(0x223f, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x681f, gbc.sp());
        EXPECT(0x2240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 031F
        gbc.setState(0xdc5f, 0xdbc6, 0xd370, 0x2d98, 0xa2fa, 0x12da, 0x0, 0x1);
        gbc.writeMem(0xdc5f, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdbc6, gbc.sp());
        EXPECT(0xdc60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdc5f));
        // B0 0320
        gbc.setState(0xd28d, 0x3514, 0x2ad0, 0x626f, 0x17f8, 0x4125, 0x0, 0x1);
        gbc.writeMem(0xd28d, { 0xb0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3514, gbc.sp());
        EXPECT(0xd28e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd28d));
        // B0 0321
        gbc.setState(0x6f55, 0xd79b, 0xc060, 0x7d36, 0x1e64, 0xb9eb, 0x0, 0x1);
        gbc.writeMem(0x6f55, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd79b, gbc.sp());
        EXPECT(0x6f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0322
        gbc.setState(0xe557, 0xc75a, 0xb00, 0x99cd, 0x6e34, 0xf68b, 0x0, 0x0);
        gbc.writeMem(0xe557, { 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc75a, gbc.sp());
        EXPECT(0xe558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe557));
        // B0 0323
        gbc.setState(0xe4b2, 0x84b2, 0xd20, 0xf3f0, 0x50e4, 0x88c4, 0x1, 0x1);
        gbc.writeMem(0xe4b2, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x84b2, gbc.sp());
        EXPECT(0xe4b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe4b2));
        // B0 0324
        gbc.setState(0x14eb, 0x6515, 0xda10, 0xd5f9, 0x4fa5, 0xd718, 0x1, 0x0);
        gbc.writeMem(0x14eb, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6515, gbc.sp());
        EXPECT(0x14ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0325
        gbc.setState(0x32c7, 0x924, 0x12f0, 0x5e42, 0x50cb, 0x93e3, 0x0, 0x1);
        gbc.writeMem(0x32c7, { 0xb0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x924, gbc.sp());
        EXPECT(0x32c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0326
        gbc.setState(0xb5d8, 0x6c56, 0xa410, 0xdafb, 0xc7d5, 0x4a5e, 0x1, 0x1);
        gbc.writeMem(0xb5d8, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6c56, gbc.sp());
        EXPECT(0xb5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb5d8));
        // B0 0328
        gbc.setState(0xdcda, 0xa747, 0x8970, 0x43cb, 0x4b29, 0xb554, 0x0, 0x1);
        gbc.writeMem(0xdcda, { 0xb0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa747, gbc.sp());
        EXPECT(0xdcdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdcda));
        // B0 0329
        gbc.setState(0xeeed, 0xaf8e, 0xcd0, 0x120a, 0x77c4, 0x13af, 0x1, 0x1);
        gbc.writeMem(0xeeed, { 0xb0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaf8e, gbc.sp());
        EXPECT(0xeeee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xeeed));
        // B0 032A
        gbc.setState(0xb49d, 0x1372, 0x39f0, 0x3b46, 0x3220, 0x9c41, 0x1, 0x0);
        gbc.writeMem(0xb49d, { 0xb0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1372, gbc.sp());
        EXPECT(0xb49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb49d));
        // B0 032B
        gbc.setState(0x8434, 0x3c89, 0x8680, 0xe842, 0xe4d5, 0xa0be, 0x1, 0x0);
        gbc.writeMem(0x8434, { 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3c89, gbc.sp());
        EXPECT(0x8435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8434));
        // B0 032D
        gbc.setState(0x6bdd, 0xa8a8, 0x9740, 0x4653, 0xaf9d, 0xcd0d, 0x1, 0x0);
        gbc.writeMem(0x6bdd, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0x6bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 032F
        gbc.setState(0xb8e3, 0x1faf, 0xa900, 0x10bb, 0x557b, 0x57a7, 0x1, 0x0);
        gbc.writeMem(0xb8e3, { 0xb0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1faf, gbc.sp());
        EXPECT(0xb8e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb8e3));
        // B0 0330
        gbc.setState(0x9b8e, 0xef2f, 0xb750, 0x90d5, 0x5e49, 0xc205, 0x0, 0x0);
        gbc.writeMem(0x9b8e, { 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xef2f, gbc.sp());
        EXPECT(0x9b8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9b8e));
        // B0 0331
        gbc.setState(0x10f4, 0xdb61, 0xc670, 0x73e3, 0x5414, 0x387a, 0x1, 0x0);
        gbc.writeMem(0x10f4, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdb61, gbc.sp());
        EXPECT(0x10f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0332
        gbc.setState(0x7b0d, 0x7d26, 0xa090, 0xe369, 0x1584, 0x5f8a, 0x1, 0x1);
        gbc.writeMem(0x7b0d, { 0xb0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7d26, gbc.sp());
        EXPECT(0x7b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0333
        gbc.setState(0xe276, 0xcf5e, 0x31f0, 0x29d8, 0xcafc, 0x206d, 0x1, 0x1);
        gbc.writeMem(0xe276, { 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcf5e, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe276));
        // B0 0334
        gbc.setState(0xbe4, 0x3aad, 0xd6d0, 0xbd64, 0x26ee, 0xf3a6, 0x1, 0x1);
        gbc.writeMem(0xbe4, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3aad, gbc.sp());
        EXPECT(0xbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0335
        gbc.setState(0xbbc, 0x6694, 0xcd10, 0x9269, 0xab6e, 0xa448, 0x1, 0x1);
        gbc.writeMem(0xbbc, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6694, gbc.sp());
        EXPECT(0xbbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0336
        gbc.setState(0x556c, 0xcc35, 0x6c90, 0x7d54, 0x3095, 0xcc3b, 0x0, 0x0);
        gbc.writeMem(0x556c, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcc35, gbc.sp());
        EXPECT(0x556d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0337
        gbc.setState(0x78c3, 0x650c, 0xfe50, 0x9f73, 0x1b24, 0xc8df, 0x0, 0x0);
        gbc.writeMem(0x78c3, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x650c, gbc.sp());
        EXPECT(0x78c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0338
        gbc.setState(0xcc9f, 0x8363, 0xb580, 0x394c, 0xa7f0, 0xac29, 0x0, 0x1);
        gbc.writeMem(0xcc9f, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8363, gbc.sp());
        EXPECT(0xcca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcc9f));
        // B0 0339
        gbc.setState(0x434c, 0x727e, 0x1320, 0x14ab, 0xc5a6, 0xdc3b, 0x0, 0x1);
        gbc.writeMem(0x434c, { 0xb0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x727e, gbc.sp());
        EXPECT(0x434d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 033A
        gbc.setState(0x6bde, 0x3783, 0x3c40, 0xb9d4, 0xa9ec, 0xf9ba, 0x1, 0x0);
        gbc.writeMem(0x6bde, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3783, gbc.sp());
        EXPECT(0x6bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 033B
        gbc.setState(0x2120, 0x2af7, 0xbe0, 0x8579, 0xc95b, 0x374d, 0x1, 0x1);
        gbc.writeMem(0x2120, { 0xb0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0x2121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 033C
        gbc.setState(0xdb44, 0x3e9a, 0x7970, 0xd616, 0x7ccd, 0xfb9, 0x1, 0x0);
        gbc.writeMem(0xdb44, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3e9a, gbc.sp());
        EXPECT(0xdb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdb44));
        // B0 033E
        gbc.setState(0xd8c5, 0x1149, 0x430, 0x42ff, 0x5d2b, 0xcd6f, 0x0, 0x0);
        gbc.writeMem(0xd8c5, { 0xb0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1149, gbc.sp());
        EXPECT(0xd8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd8c5));
        // B0 033F
        gbc.setState(0x76f6, 0xb8d9, 0x5510, 0xd790, 0x526b, 0x4daf, 0x1, 0x0);
        gbc.writeMem(0x76f6, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb8d9, gbc.sp());
        EXPECT(0x76f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0340
        gbc.setState(0x3f32, 0xa940, 0x2680, 0xd50f, 0xd1e5, 0xc9af, 0x1, 0x0);
        gbc.writeMem(0x3f32, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa940, gbc.sp());
        EXPECT(0x3f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0341
        gbc.setState(0x3730, 0x4912, 0x4d70, 0xb3e6, 0x1f73, 0x9a9a, 0x1, 0x1);
        gbc.writeMem(0x3730, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4912, gbc.sp());
        EXPECT(0x3731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0342
        gbc.setState(0xd4e5, 0x87e, 0x3740, 0xc427, 0x9e03, 0x4cc3, 0x1, 0x1);
        gbc.writeMem(0xd4e5, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x87e, gbc.sp());
        EXPECT(0xd4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd4e5));
        // B0 0343
        gbc.setState(0x3372, 0x4e1f, 0x9bf0, 0xc42a, 0x178c, 0x5b44, 0x1, 0x1);
        gbc.writeMem(0x3372, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4e1f, gbc.sp());
        EXPECT(0x3373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0344
        gbc.setState(0x756d, 0x91c5, 0xad40, 0x2187, 0xa3b4, 0x3b39, 0x0, 0x0);
        gbc.writeMem(0x756d, { 0xb0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x91c5, gbc.sp());
        EXPECT(0x756e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0345
        gbc.setState(0x9a66, 0x1d72, 0xf3f0, 0x93f6, 0x7a10, 0xd160, 0x1, 0x0);
        gbc.writeMem(0x9a66, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1d72, gbc.sp());
        EXPECT(0x9a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9a66));
        // B0 0346
        gbc.setState(0x62d9, 0xf8d, 0x1660, 0xa956, 0x367, 0xb42d, 0x1, 0x1);
        gbc.writeMem(0x62d9, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf8d, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0347
        gbc.setState(0xd478, 0xe376, 0x7d20, 0x9261, 0x11a6, 0xd8a4, 0x0, 0x0);
        gbc.writeMem(0xd478, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe376, gbc.sp());
        EXPECT(0xd479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd478));
        // B0 0348
        gbc.setState(0x7bc0, 0xfd50, 0xee20, 0x7ac6, 0xf0b9, 0x4fda, 0x1, 0x0);
        gbc.writeMem(0x7bc0, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfd50, gbc.sp());
        EXPECT(0x7bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0349
        gbc.setState(0x5c90, 0xe86b, 0xf610, 0x79d7, 0xd63d, 0x4787, 0x1, 0x1);
        gbc.writeMem(0x5c90, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe86b, gbc.sp());
        EXPECT(0x5c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 034A
        gbc.setState(0xa6b1, 0x4ba3, 0x58a0, 0xbf61, 0x1b36, 0xa89, 0x1, 0x0);
        gbc.writeMem(0xa6b1, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4ba3, gbc.sp());
        EXPECT(0xa6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa6b1));
        // B0 034B
        gbc.setState(0x3d6b, 0xe38a, 0x94a0, 0xb9d5, 0x3b3b, 0x9a86, 0x1, 0x1);
        gbc.writeMem(0x3d6b, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe38a, gbc.sp());
        EXPECT(0x3d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 034C
        gbc.setState(0xeca6, 0xef6e, 0x48d0, 0xad16, 0x3d67, 0x977c, 0x0, 0x1);
        gbc.writeMem(0xeca6, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xef6e, gbc.sp());
        EXPECT(0xeca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xeca6));
        // B0 034D
        gbc.setState(0xd888, 0xc561, 0x36f0, 0x6d8e, 0x2b68, 0x1ca3, 0x0, 0x0);
        gbc.writeMem(0xd888, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc561, gbc.sp());
        EXPECT(0xd889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd888));
        // B0 034E
        gbc.setState(0xf43, 0x552b, 0x1ad0, 0x8b53, 0x5267, 0x2d67, 0x0, 0x0);
        gbc.writeMem(0xf43, { 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x552b, gbc.sp());
        EXPECT(0xf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 034F
        gbc.setState(0xd8d0, 0x3dd1, 0xe660, 0x855b, 0xabcc, 0xe500, 0x1, 0x0);
        gbc.writeMem(0xd8d0, { 0xb0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3dd1, gbc.sp());
        EXPECT(0xd8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd8d0));
        // B0 0350
        gbc.setState(0xaf44, 0x4e36, 0x21b0, 0xc3a6, 0x95cd, 0xbdc6, 0x0, 0x0);
        gbc.writeMem(0xaf44, { 0xb0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4e36, gbc.sp());
        EXPECT(0xaf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xaf44));
        // B0 0351
        gbc.setState(0x8a1e, 0xd60c, 0xce10, 0x8fea, 0x39d0, 0x2fb1, 0x1, 0x1);
        gbc.writeMem(0x8a1e, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd60c, gbc.sp());
        EXPECT(0x8a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8a1e));
        // B0 0352
        gbc.setState(0x6b35, 0xdac0, 0x18a0, 0xf345, 0x4d9a, 0xe9c5, 0x1, 0x0);
        gbc.writeMem(0x6b35, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdac0, gbc.sp());
        EXPECT(0x6b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0353
        gbc.setState(0xcc4d, 0x30, 0x4740, 0xb595, 0xfecb, 0x7fc7, 0x1, 0x0);
        gbc.writeMem(0xcc4d, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x30, gbc.sp());
        EXPECT(0xcc4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcc4d));
        // B0 0354
        gbc.setState(0x9a95, 0x8c25, 0x84b0, 0x97f, 0x6775, 0xc0de, 0x1, 0x0);
        gbc.writeMem(0x9a95, { 0xb0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8c25, gbc.sp());
        EXPECT(0x9a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9a95));
        // B0 0355
        gbc.setState(0xe9c5, 0x6b5, 0x3980, 0x8a6f, 0x40be, 0x86f5, 0x1, 0x0);
        gbc.writeMem(0xe9c5, { 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6b5, gbc.sp());
        EXPECT(0xe9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe9c5));
        // B0 0357
        gbc.setState(0x8bce, 0xa4f2, 0x6fb0, 0xa681, 0x33ef, 0x485b, 0x1, 0x0);
        gbc.writeMem(0x8bce, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa4f2, gbc.sp());
        EXPECT(0x8bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8bce));
        // B0 0358
        gbc.setState(0x8c6, 0xb03e, 0x620, 0x5bb5, 0x4d7c, 0x5551, 0x0, 0x0);
        gbc.writeMem(0x8c6, { 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb03e, gbc.sp());
        EXPECT(0x8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0359
        gbc.setState(0xd7c3, 0x3bae, 0x7d0, 0x5108, 0xb6f0, 0x2481, 0x1, 0x0);
        gbc.writeMem(0xd7c3, { 0xb0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3bae, gbc.sp());
        EXPECT(0xd7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd7c3));
        // B0 035A
        gbc.setState(0x5fa0, 0x89ab, 0xc3d0, 0x7a1e, 0xff49, 0x9120, 0x0, 0x1);
        gbc.writeMem(0x5fa0, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x89ab, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 035B
        gbc.setState(0x54a3, 0x6e12, 0x69d0, 0x5473, 0xacff, 0x442c, 0x1, 0x1);
        gbc.writeMem(0x54a3, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6e12, gbc.sp());
        EXPECT(0x54a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 035C
        gbc.setState(0x8860, 0x747d, 0xc3c0, 0xeab6, 0x6cae, 0xd054, 0x1, 0x1);
        gbc.writeMem(0x8860, { 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x747d, gbc.sp());
        EXPECT(0x8861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8860));
        // B0 035D
        gbc.setState(0x2164, 0xa129, 0xc310, 0x8e88, 0xd05, 0x3938, 0x1, 0x1);
        gbc.writeMem(0x2164, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa129, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 035E
        gbc.setState(0x2870, 0x6dc9, 0xf010, 0x333e, 0x913a, 0xb18a, 0x1, 0x0);
        gbc.writeMem(0x2870, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6dc9, gbc.sp());
        EXPECT(0x2871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 035F
        gbc.setState(0xee7, 0x6336, 0x24e0, 0xf479, 0x1a3b, 0x7bd, 0x1, 0x0);
        gbc.writeMem(0xee7, { 0xb0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6336, gbc.sp());
        EXPECT(0xee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0360
        gbc.setState(0xb09f, 0x89f9, 0x19a0, 0xde27, 0x54cb, 0x2f46, 0x1, 0x0);
        gbc.writeMem(0xb09f, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x89f9, gbc.sp());
        EXPECT(0xb0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb09f));
        // B0 0361
        gbc.setState(0x9a55, 0x2d57, 0xaa20, 0xffac, 0x43e2, 0x124, 0x1, 0x0);
        gbc.writeMem(0x9a55, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2d57, gbc.sp());
        EXPECT(0x9a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9a55));
        // B0 0362
        gbc.setState(0x89f, 0x77f7, 0xa800, 0x1d91, 0x9126, 0xab20, 0x1, 0x0);
        gbc.writeMem(0x89f, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x77f7, gbc.sp());
        EXPECT(0x8a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0363
        gbc.setState(0x3882, 0xd5fa, 0xcda0, 0xefcf, 0x9702, 0x9ccd, 0x0, 0x1);
        gbc.writeMem(0x3882, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd5fa, gbc.sp());
        EXPECT(0x3883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0365
        gbc.setState(0x1203, 0xe28b, 0xe460, 0x767, 0xcfd6, 0xa735, 0x1, 0x0);
        gbc.writeMem(0x1203, { 0xb0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe28b, gbc.sp());
        EXPECT(0x1204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0366
        gbc.setState(0xbb8e, 0x7380, 0x1cf0, 0xa563, 0xa2bc, 0xc07d, 0x1, 0x1);
        gbc.writeMem(0xbb8e, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7380, gbc.sp());
        EXPECT(0xbb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbb8e));
        // B0 0367
        gbc.setState(0x49b5, 0x4d7c, 0x9990, 0x1230, 0x7f0a, 0x317a, 0x1, 0x1);
        gbc.writeMem(0x49b5, { 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4d7c, gbc.sp());
        EXPECT(0x49b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0368
        gbc.setState(0xc695, 0xf315, 0x3020, 0x93ce, 0xedf8, 0xb23d, 0x1, 0x0);
        gbc.writeMem(0xc695, { 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf315, gbc.sp());
        EXPECT(0xc696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc695));
        // B0 0369
        gbc.setState(0x54c0, 0x46aa, 0xff60, 0xeae3, 0x8bc8, 0x16d, 0x1, 0x1);
        gbc.writeMem(0x54c0, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x46aa, gbc.sp());
        EXPECT(0x54c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 036A
        gbc.setState(0x3fde, 0xfd27, 0x5710, 0xc7ac, 0x8abf, 0xf603, 0x1, 0x1);
        gbc.writeMem(0x3fde, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfd27, gbc.sp());
        EXPECT(0x3fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 036B
        gbc.setState(0x3bca, 0xfa7a, 0x58b0, 0xfe69, 0xdf8f, 0x485d, 0x1, 0x0);
        gbc.writeMem(0x3bca, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfa7a, gbc.sp());
        EXPECT(0x3bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 036C
        gbc.setState(0x43d8, 0xb482, 0xc2f0, 0xd27d, 0xcca0, 0x4ed8, 0x0, 0x0);
        gbc.writeMem(0x43d8, { 0xb0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb482, gbc.sp());
        EXPECT(0x43d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 036D
        gbc.setState(0x30c1, 0xdaa7, 0xd3e0, 0x1ff0, 0x7088, 0x15e7, 0x0, 0x1);
        gbc.writeMem(0x30c1, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdaa7, gbc.sp());
        EXPECT(0x30c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 036E
        gbc.setState(0x2f41, 0x117b, 0xdc70, 0x1fbe, 0xd0b, 0x3e0, 0x1, 0x1);
        gbc.writeMem(0x2f41, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x117b, gbc.sp());
        EXPECT(0x2f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 036F
        gbc.setState(0xb014, 0xb74b, 0x5c10, 0x3ded, 0x71f6, 0x40f8, 0x0, 0x1);
        gbc.writeMem(0xb014, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb74b, gbc.sp());
        EXPECT(0xb015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb014));
        // B0 0370
        gbc.setState(0x7d0b, 0x5a0, 0x5170, 0x6bd4, 0xe6ed, 0x4469, 0x0, 0x1);
        gbc.writeMem(0x7d0b, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5a0, gbc.sp());
        EXPECT(0x7d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0371
        gbc.setState(0x71bf, 0xfd83, 0xf670, 0xadc6, 0x10f7, 0x3798, 0x1, 0x1);
        gbc.writeMem(0x71bf, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfd83, gbc.sp());
        EXPECT(0x71c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0372
        gbc.setState(0x2fe3, 0x2cce, 0xe4d0, 0xd5a3, 0x8bcf, 0x519, 0x1, 0x0);
        gbc.writeMem(0x2fe3, { 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2cce, gbc.sp());
        EXPECT(0x2fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0373
        gbc.setState(0xd4a8, 0x4c53, 0xf550, 0x943e, 0xed71, 0x1650, 0x0, 0x0);
        gbc.writeMem(0xd4a8, { 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4c53, gbc.sp());
        EXPECT(0xd4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd4a8));
        // B0 0375
        gbc.setState(0x6f6a, 0xbbe6, 0x4d80, 0x94e0, 0xa444, 0x45bb, 0x1, 0x1);
        gbc.writeMem(0x6f6a, { 0xb0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbbe6, gbc.sp());
        EXPECT(0x6f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0376
        gbc.setState(0xef4a, 0xcafb, 0x81b0, 0xf836, 0x9ba8, 0xa7c, 0x1, 0x0);
        gbc.writeMem(0xef4a, { 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcafb, gbc.sp());
        EXPECT(0xef4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xef4a));
        // B0 0377
        gbc.setState(0x5c2b, 0x32d0, 0xf6a0, 0x7061, 0x3374, 0xc45b, 0x1, 0x1);
        gbc.writeMem(0x5c2b, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x32d0, gbc.sp());
        EXPECT(0x5c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0378
        gbc.setState(0x1bd0, 0x7bb4, 0xc7b0, 0x35f4, 0x5358, 0x97be, 0x0, 0x1);
        gbc.writeMem(0x1bd0, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7bb4, gbc.sp());
        EXPECT(0x1bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0379
        gbc.setState(0x3614, 0x2fb5, 0x44c0, 0x7aa0, 0xc205, 0xcd63, 0x1, 0x1);
        gbc.writeMem(0x3614, { 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2fb5, gbc.sp());
        EXPECT(0x3615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 037A
        gbc.setState(0xc9b9, 0xb9c7, 0x47f0, 0xb9cb, 0x7093, 0x81af, 0x1, 0x0);
        gbc.writeMem(0xc9b9, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb9c7, gbc.sp());
        EXPECT(0xc9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc9b9));
        // B0 037B
        gbc.setState(0x91e1, 0x4e40, 0xd1f0, 0x877f, 0xb0ef, 0xb370, 0x0, 0x1);
        gbc.writeMem(0x91e1, { 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4e40, gbc.sp());
        EXPECT(0x91e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x91e1));
        // B0 037C
        gbc.setState(0x1fdd, 0x63c1, 0xf750, 0x3c04, 0x2f16, 0xf66, 0x0, 0x0);
        gbc.writeMem(0x1fdd, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x63c1, gbc.sp());
        EXPECT(0x1fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 037D
        gbc.setState(0x8add, 0x79ee, 0x8da0, 0xf35d, 0x67b5, 0x182f, 0x1, 0x1);
        gbc.writeMem(0x8add, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x79ee, gbc.sp());
        EXPECT(0x8ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8add));
        // B0 037E
        gbc.setState(0x3da4, 0x2520, 0xfda0, 0xe0ca, 0x2c7b, 0x5378, 0x1, 0x1);
        gbc.writeMem(0x3da4, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2520, gbc.sp());
        EXPECT(0x3da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 037F
        gbc.setState(0x785a, 0x2fd3, 0xe8d0, 0xa487, 0x24e8, 0x8738, 0x1, 0x0);
        gbc.writeMem(0x785a, { 0xb0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2fd3, gbc.sp());
        EXPECT(0x785b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0380
        gbc.setState(0xb72, 0x5b7b, 0xc280, 0xe8a8, 0xa626, 0x9e2f, 0x0, 0x0);
        gbc.writeMem(0xb72, { 0xb0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5b7b, gbc.sp());
        EXPECT(0xb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0381
        gbc.setState(0xe7ac, 0x6811, 0xf240, 0x36a, 0x92df, 0xbaf8, 0x0, 0x0);
        gbc.writeMem(0xe7ac, { 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6811, gbc.sp());
        EXPECT(0xe7ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe7ac));
        // B0 0383
        gbc.setState(0x5e17, 0xe894, 0xea20, 0xd97c, 0x4119, 0x5a8d, 0x1, 0x0);
        gbc.writeMem(0x5e17, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe894, gbc.sp());
        EXPECT(0x5e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0384
        gbc.setState(0xa346, 0x3b78, 0xaeb0, 0x1370, 0x3af3, 0xa970, 0x1, 0x1);
        gbc.writeMem(0xa346, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3b78, gbc.sp());
        EXPECT(0xa347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa346));
        // B0 0385
        gbc.setState(0xabf1, 0xb189, 0x9470, 0xa248, 0x88df, 0x25f1, 0x1, 0x0);
        gbc.writeMem(0xabf1, { 0xb0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb189, gbc.sp());
        EXPECT(0xabf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xabf1));
        // B0 0386
        gbc.setState(0x4bf2, 0xfe4, 0x8f20, 0x6f66, 0x8af8, 0xee72, 0x0, 0x1);
        gbc.writeMem(0x4bf2, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfe4, gbc.sp());
        EXPECT(0x4bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0387
        gbc.setState(0xac71, 0x1005, 0x6a70, 0x3d27, 0xa8b, 0x52f8, 0x1, 0x0);
        gbc.writeMem(0xac71, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1005, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xac71));
        // B0 0388
        gbc.setState(0xc411, 0x80a7, 0x15e0, 0x48eb, 0x6f9a, 0x5727, 0x1, 0x1);
        gbc.writeMem(0xc411, { 0xb0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x80a7, gbc.sp());
        EXPECT(0xc412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc411));
        // B0 038A
        gbc.setState(0x2e06, 0x3dd6, 0xf210, 0x77ab, 0x2baa, 0x86f5, 0x1, 0x1);
        gbc.writeMem(0x2e06, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3dd6, gbc.sp());
        EXPECT(0x2e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 038B
        gbc.setState(0xb4b8, 0xb5cc, 0x8350, 0x4f2e, 0xb5d0, 0x9715, 0x0, 0x1);
        gbc.writeMem(0xb4b8, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb5cc, gbc.sp());
        EXPECT(0xb4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb4b8));
        // B0 038C
        gbc.setState(0x27fc, 0xd89d, 0xc000, 0xa171, 0xfa39, 0xc084, 0x0, 0x1);
        gbc.writeMem(0x27fc, { 0xb0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd89d, gbc.sp());
        EXPECT(0x27fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 038D
        gbc.setState(0x1ae3, 0xd27, 0x70f0, 0x3077, 0x2844, 0xc199, 0x1, 0x1);
        gbc.writeMem(0x1ae3, { 0xb0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd27, gbc.sp());
        EXPECT(0x1ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 038E
        gbc.setState(0xedec, 0xd999, 0xac0, 0xb80a, 0x4b70, 0x82fb, 0x1, 0x1);
        gbc.writeMem(0xedec, { 0xb0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd999, gbc.sp());
        EXPECT(0xeded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xedec));
        // B0 038F
        gbc.setState(0x77a3, 0x1e02, 0xf6d0, 0x20f7, 0x3017, 0x837a, 0x1, 0x1);
        gbc.writeMem(0x77a3, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1e02, gbc.sp());
        EXPECT(0x77a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0390
        gbc.setState(0xbf49, 0xdd7, 0x1260, 0xfa78, 0xb43, 0x6c07, 0x0, 0x0);
        gbc.writeMem(0xbf49, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdd7, gbc.sp());
        EXPECT(0xbf4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbf49));
        // B0 0391
        gbc.setState(0x6745, 0xafbc, 0xc520, 0x9545, 0xeeba, 0xa8e1, 0x1, 0x0);
        gbc.writeMem(0x6745, { 0xb0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xafbc, gbc.sp());
        EXPECT(0x6746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0392
        gbc.setState(0x8fa6, 0xb679, 0x7a00, 0xe23b, 0xfd87, 0xaf39, 0x0, 0x1);
        gbc.writeMem(0x8fa6, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb679, gbc.sp());
        EXPECT(0x8fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8fa6));
        // B0 0393
        gbc.setState(0xe8ca, 0x273f, 0xce30, 0xa38b, 0x93bf, 0x91e6, 0x0, 0x1);
        gbc.writeMem(0xe8ca, { 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x273f, gbc.sp());
        EXPECT(0xe8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe8ca));
        // B0 0395
        gbc.setState(0x33da, 0x9987, 0xc000, 0x1189, 0x2c2a, 0x636f, 0x0, 0x1);
        gbc.writeMem(0x33da, { 0xb0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9987, gbc.sp());
        EXPECT(0x33db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0396
        gbc.setState(0x3964, 0x9490, 0x8760, 0xb7cb, 0xc729, 0x766d, 0x0, 0x1);
        gbc.writeMem(0x3964, { 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9490, gbc.sp());
        EXPECT(0x3965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0397
        gbc.setState(0x6fff, 0xe083, 0x3cd0, 0xac3, 0x40b2, 0x7156, 0x1, 0x0);
        gbc.writeMem(0x6fff, { 0xb0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe083, gbc.sp());
        EXPECT(0x7000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 0398
        gbc.setState(0x97ab, 0xb2df, 0xf610, 0x8898, 0x67fb, 0x9ba8, 0x0, 0x0);
        gbc.writeMem(0x97ab, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb2df, gbc.sp());
        EXPECT(0x97ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x97ab));
        // B0 0399
        gbc.setState(0xe20d, 0xe9d6, 0x3dd0, 0xc10e, 0x4552, 0xf240, 0x0, 0x1);
        gbc.writeMem(0xe20d, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe9d6, gbc.sp());
        EXPECT(0xe20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe20d));
        // B0 039A
        gbc.setState(0x968d, 0x111a, 0x9d00, 0x3300, 0xf9ca, 0x6584, 0x0, 0x1);
        gbc.writeMem(0x968d, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x111a, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x968d));
        // B0 039B
        gbc.setState(0x281c, 0x6115, 0xb0c0, 0x8e44, 0xee33, 0xbb4d, 0x0, 0x0);
        gbc.writeMem(0x281c, { 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0x281d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 039C
        gbc.setState(0x16c5, 0x1104, 0x90, 0xb26d, 0xbdad, 0xf1a4, 0x1, 0x1);
        gbc.writeMem(0x16c5, { 0xb0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1104, gbc.sp());
        EXPECT(0x16c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 039D
        gbc.setState(0x99f9, 0xdc4e, 0xdec0, 0xc2c, 0x81e0, 0x3b8b, 0x0, 0x0);
        gbc.writeMem(0x99f9, { 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdc4e, gbc.sp());
        EXPECT(0x99fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x99f9));
        // B0 039E
        gbc.setState(0xbe71, 0x713d, 0x5ba0, 0x9702, 0x6ad5, 0xefca, 0x0, 0x1);
        gbc.writeMem(0xbe71, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x713d, gbc.sp());
        EXPECT(0xbe72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbe71));
        // B0 039F
        gbc.setState(0xd848, 0xbe4a, 0xfbc0, 0x40d9, 0xd7a2, 0x430c, 0x0, 0x1);
        gbc.writeMem(0xd848, { 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbe4a, gbc.sp());
        EXPECT(0xd849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd848));
        // B0 03A0
        gbc.setState(0x37c6, 0x9f3c, 0xd4f0, 0x257f, 0x4749, 0x566a, 0x0, 0x1);
        gbc.writeMem(0x37c6, { 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9f3c, gbc.sp());
        EXPECT(0x37c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03A1
        gbc.setState(0xbd51, 0x24c7, 0x2c60, 0x45df, 0x7443, 0xc259, 0x1, 0x0);
        gbc.writeMem(0xbd51, { 0xb0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x24c7, gbc.sp());
        EXPECT(0xbd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbd51));
        // B0 03A3
        gbc.setState(0x362, 0x4dd2, 0x2b80, 0x2940, 0x83ba, 0xa4b9, 0x0, 0x0);
        gbc.writeMem(0x362, { 0xb0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4dd2, gbc.sp());
        EXPECT(0x363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03A4
        gbc.setState(0xd7f4, 0x4a1e, 0x47e0, 0x51c0, 0x1e18, 0x2029, 0x1, 0x1);
        gbc.writeMem(0xd7f4, { 0xb0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4a1e, gbc.sp());
        EXPECT(0xd7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd7f4));
        // B0 03A5
        gbc.setState(0x6d62, 0x50c8, 0x27e0, 0x614d, 0x4a78, 0x6cd9, 0x0, 0x0);
        gbc.writeMem(0x6d62, { 0xb0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x50c8, gbc.sp());
        EXPECT(0x6d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03A7
        gbc.setState(0xd1ef, 0x979b, 0x2810, 0xa24f, 0x3821, 0x2235, 0x1, 0x0);
        gbc.writeMem(0xd1ef, { 0xb0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x979b, gbc.sp());
        EXPECT(0xd1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd1ef));
        // B0 03A8
        gbc.setState(0x30d9, 0x8d5d, 0x3140, 0x382e, 0x7bcc, 0xd40e, 0x1, 0x0);
        gbc.writeMem(0x30d9, { 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8d5d, gbc.sp());
        EXPECT(0x30da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03A9
        gbc.setState(0xac4e, 0x1750, 0x1330, 0xfc7e, 0x6aa6, 0x7057, 0x1, 0x0);
        gbc.writeMem(0xac4e, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1750, gbc.sp());
        EXPECT(0xac4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xac4e));
        // B0 03AA
        gbc.setState(0xbdb6, 0x1ff7, 0xe3f0, 0xa308, 0x2f9e, 0x1219, 0x1, 0x1);
        gbc.writeMem(0xbdb6, { 0xb0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1ff7, gbc.sp());
        EXPECT(0xbdb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbdb6));
        // B0 03AC
        gbc.setState(0x270f, 0xb9d, 0xc670, 0x30b6, 0x2347, 0x8ea8, 0x0, 0x0);
        gbc.writeMem(0x270f, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb9d, gbc.sp());
        EXPECT(0x2710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03AD
        gbc.setState(0x3fa, 0xd560, 0x2480, 0xe248, 0x497d, 0x8824, 0x0, 0x0);
        gbc.writeMem(0x3fa, { 0xb0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd560, gbc.sp());
        EXPECT(0x3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03AE
        gbc.setState(0xd598, 0xa3c0, 0x6290, 0x3149, 0xcc3d, 0xa1f3, 0x1, 0x1);
        gbc.writeMem(0xd598, { 0xb0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa3c0, gbc.sp());
        EXPECT(0xd599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd598));
        // B0 03AF
        gbc.setState(0x12fd, 0xe010, 0xca30, 0x3d44, 0x7bd2, 0x192c, 0x1, 0x1);
        gbc.writeMem(0x12fd, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0x12fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03B0
        gbc.setState(0xd12d, 0x1f5f, 0x70, 0x1c03, 0x3119, 0x2f2e, 0x0, 0x0);
        gbc.writeMem(0xd12d, { 0xb0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1f5f, gbc.sp());
        EXPECT(0xd12e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd12d));
        // B0 03B1
        gbc.setState(0xa709, 0x358d, 0x9c00, 0x3db6, 0x644f, 0x4ce4, 0x1, 0x1);
        gbc.writeMem(0xa709, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x358d, gbc.sp());
        EXPECT(0xa70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa709));
        // B0 03B3
        gbc.setState(0xf92, 0xc24d, 0x2570, 0x2c32, 0xb269, 0x7a24, 0x1, 0x0);
        gbc.writeMem(0xf92, { 0xb0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc24d, gbc.sp());
        EXPECT(0xf93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03B4
        gbc.setState(0x7846, 0x997, 0x1d90, 0xa7c7, 0x18de, 0xef8f, 0x0, 0x0);
        gbc.writeMem(0x7846, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x997, gbc.sp());
        EXPECT(0x7847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03B5
        gbc.setState(0xda64, 0x7605, 0x3090, 0x9802, 0xd82c, 0x4483, 0x0, 0x1);
        gbc.writeMem(0xda64, { 0xb0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7605, gbc.sp());
        EXPECT(0xda65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xda64));
        // B0 03B6
        gbc.setState(0x153e, 0x115, 0x45d0, 0xad14, 0xb0ec, 0x5c23, 0x1, 0x0);
        gbc.writeMem(0x153e, { 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x115, gbc.sp());
        EXPECT(0x153f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03B7
        gbc.setState(0x7195, 0xf053, 0x7a10, 0x7046, 0x2642, 0xc462, 0x1, 0x0);
        gbc.writeMem(0x7195, { 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf053, gbc.sp());
        EXPECT(0x7196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03B8
        gbc.setState(0x6f01, 0x2db8, 0xf020, 0x3622, 0x4774, 0xff03, 0x1, 0x0);
        gbc.writeMem(0x6f01, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2db8, gbc.sp());
        EXPECT(0x6f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03B9
        gbc.setState(0xefb6, 0x382a, 0xd0f0, 0xdf67, 0xf8f4, 0xdbe2, 0x0, 0x0);
        gbc.writeMem(0xefb6, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x382a, gbc.sp());
        EXPECT(0xefb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xefb6));
        // B0 03BA
        gbc.setState(0xb613, 0x2d4a, 0x71f0, 0x11, 0x4cc5, 0x73b2, 0x0, 0x0);
        gbc.writeMem(0xb613, { 0xb0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2d4a, gbc.sp());
        EXPECT(0xb614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb613));
        // B0 03BB
        gbc.setState(0xa4cd, 0x7846, 0xd0c0, 0xe518, 0xab72, 0x4683, 0x0, 0x1);
        gbc.writeMem(0xa4cd, { 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7846, gbc.sp());
        EXPECT(0xa4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa4cd));
        // B0 03BC
        gbc.setState(0xde9b, 0x56f, 0x36b0, 0xdaf, 0xf323, 0x842e, 0x1, 0x1);
        gbc.writeMem(0xde9b, { 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x56f, gbc.sp());
        EXPECT(0xde9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xde9b));
        // B0 03BD
        gbc.setState(0x1dc6, 0x4775, 0xede0, 0x10c4, 0x8db5, 0x955b, 0x1, 0x1);
        gbc.writeMem(0x1dc6, { 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4775, gbc.sp());
        EXPECT(0x1dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03BF
        gbc.setState(0x9dd6, 0xd12f, 0x38f0, 0x73a9, 0x7334, 0xb758, 0x0, 0x0);
        gbc.writeMem(0x9dd6, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd12f, gbc.sp());
        EXPECT(0x9dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9dd6));
        // B0 03C0
        gbc.setState(0x94f3, 0x5b4, 0xd280, 0xa06d, 0xae69, 0xfc37, 0x1, 0x0);
        gbc.writeMem(0x94f3, { 0xb0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5b4, gbc.sp());
        EXPECT(0x94f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x94f3));
        // B0 03C1
        gbc.setState(0x7be7, 0xab5, 0xbcc0, 0x6217, 0x5c8f, 0x1734, 0x0, 0x1);
        gbc.writeMem(0x7be7, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xab5, gbc.sp());
        EXPECT(0x7be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03C2
        gbc.setState(0xb090, 0xf701, 0xbd50, 0x8a3c, 0x563b, 0x7686, 0x1, 0x0);
        gbc.writeMem(0xb090, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf701, gbc.sp());
        EXPECT(0xb091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb090));
        // B0 03C3
        gbc.setState(0xb13, 0xedda, 0xd9c0, 0x1829, 0x4d05, 0xa26c, 0x1, 0x1);
        gbc.writeMem(0xb13, { 0xb0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xedda, gbc.sp());
        EXPECT(0xb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03C4
        gbc.setState(0x4582, 0x66cd, 0x4900, 0xf022, 0x9a97, 0xd33d, 0x0, 0x0);
        gbc.writeMem(0x4582, { 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x66cd, gbc.sp());
        EXPECT(0x4583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03C5
        gbc.setState(0xe51a, 0xaad4, 0xcc50, 0x4ff1, 0x63b0, 0x29f, 0x0, 0x0);
        gbc.writeMem(0xe51a, { 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xaad4, gbc.sp());
        EXPECT(0xe51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe51a));
        // B0 03C6
        gbc.setState(0x2a6, 0x1fcf, 0x9d90, 0xd6ce, 0x9249, 0x1b32, 0x1, 0x0);
        gbc.writeMem(0x2a6, { 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1fcf, gbc.sp());
        EXPECT(0x2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03C7
        gbc.setState(0x78b7, 0x17be, 0xd720, 0xf1c0, 0x7224, 0x7d33, 0x0, 0x0);
        gbc.writeMem(0x78b7, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x17be, gbc.sp());
        EXPECT(0x78b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03C8
        gbc.setState(0xc4b7, 0x5e0f, 0xe8a0, 0x1651, 0xf654, 0xa292, 0x0, 0x0);
        gbc.writeMem(0xc4b7, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5e0f, gbc.sp());
        EXPECT(0xc4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc4b7));
        // B0 03C9
        gbc.setState(0x7f50, 0xe40b, 0x5a40, 0x6e88, 0xb3e1, 0x58a9, 0x1, 0x1);
        gbc.writeMem(0x7f50, { 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe40b, gbc.sp());
        EXPECT(0x7f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03CB
        gbc.setState(0x87e5, 0xffe8, 0x7630, 0x7449, 0x1d64, 0x1048, 0x1, 0x1);
        gbc.writeMem(0x87e5, { 0xb0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xffe8, gbc.sp());
        EXPECT(0x87e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x87e5));
        // B0 03CC
        gbc.setState(0xcd96, 0x9c3e, 0x620, 0x4bff, 0x25af, 0xc720, 0x0, 0x0);
        gbc.writeMem(0xcd96, { 0xb0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9c3e, gbc.sp());
        EXPECT(0xcd97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcd96));
        // B0 03CD
        gbc.setState(0x803b, 0x3fa0, 0x6710, 0xfb42, 0x695b, 0xc0ca, 0x1, 0x1);
        gbc.writeMem(0x803b, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3fa0, gbc.sp());
        EXPECT(0x803c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x803b));
        // B0 03CE
        gbc.setState(0x46a, 0xfb57, 0x8a0, 0xf6d8, 0xf9dd, 0xedb2, 0x1, 0x1);
        gbc.writeMem(0x46a, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfb57, gbc.sp());
        EXPECT(0x46b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03CF
        gbc.setState(0x35a8, 0x9f05, 0x3310, 0x84b, 0x8375, 0x8b4c, 0x1, 0x1);
        gbc.writeMem(0x35a8, { 0xb0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9f05, gbc.sp());
        EXPECT(0x35a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03D0
        gbc.setState(0x2c29, 0xbeb3, 0x48b0, 0xda37, 0xf983, 0xf3a6, 0x1, 0x0);
        gbc.writeMem(0x2c29, { 0xb0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbeb3, gbc.sp());
        EXPECT(0x2c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03D1
        gbc.setState(0xcce1, 0xbcbe, 0xf50, 0x9fc4, 0x36c3, 0x4024, 0x0, 0x1);
        gbc.writeMem(0xcce1, { 0xb0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbcbe, gbc.sp());
        EXPECT(0xcce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcce1));
        // B0 03D3
        gbc.setState(0xe6f6, 0x50ec, 0xaa30, 0x28ef, 0x73d9, 0x599d, 0x0, 0x1);
        gbc.writeMem(0xe6f6, { 0xb0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x50ec, gbc.sp());
        EXPECT(0xe6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe6f6));
        // B0 03D4
        gbc.setState(0xd5e2, 0xee16, 0xbab0, 0x3298, 0x8d02, 0x9735, 0x1, 0x1);
        gbc.writeMem(0xd5e2, { 0xb0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xee16, gbc.sp());
        EXPECT(0xd5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd5e2));
        // B0 03D5
        gbc.setState(0x7af2, 0x1f54, 0x5f00, 0xfe25, 0x7aec, 0x69b5, 0x1, 0x1);
        gbc.writeMem(0x7af2, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1f54, gbc.sp());
        EXPECT(0x7af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03D6
        gbc.setState(0xb749, 0xb5ae, 0x43a0, 0xe0fb, 0x8d62, 0xd4b5, 0x1, 0x0);
        gbc.writeMem(0xb749, { 0xb0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb5ae, gbc.sp());
        EXPECT(0xb74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb749));
        // B0 03D7
        gbc.setState(0xa6e3, 0x4695, 0x4800, 0x7781, 0x4c7f, 0x6e7f, 0x1, 0x1);
        gbc.writeMem(0xa6e3, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4695, gbc.sp());
        EXPECT(0xa6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa6e3));
        // B0 03D8
        gbc.setState(0x6201, 0xdf31, 0x82b0, 0x3302, 0x8590, 0x6f68, 0x1, 0x0);
        gbc.writeMem(0x6201, { 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdf31, gbc.sp());
        EXPECT(0x6202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03D9
        gbc.setState(0x568d, 0x840c, 0xea60, 0xf2fd, 0x17a6, 0x364, 0x0, 0x1);
        gbc.writeMem(0x568d, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x840c, gbc.sp());
        EXPECT(0x568e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03DA
        gbc.setState(0x5564, 0x48cf, 0xa180, 0x58b9, 0x9f80, 0xceaa, 0x1, 0x0);
        gbc.writeMem(0x5564, { 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x48cf, gbc.sp());
        EXPECT(0x5565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03DB
        gbc.setState(0x2da9, 0x1b69, 0x7990, 0x36a7, 0x64e, 0xd36c, 0x1, 0x1);
        gbc.writeMem(0x2da9, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1b69, gbc.sp());
        EXPECT(0x2daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03DC
        gbc.setState(0x31f9, 0xb450, 0x1ed0, 0x1b87, 0x35b6, 0x3929, 0x0, 0x0);
        gbc.writeMem(0x31f9, { 0xb0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb450, gbc.sp());
        EXPECT(0x31fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03DD
        gbc.setState(0x6d42, 0x2c1, 0xd4a0, 0x26b2, 0x98f7, 0xc7f9, 0x1, 0x1);
        gbc.writeMem(0x6d42, { 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2c1, gbc.sp());
        EXPECT(0x6d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03DE
        gbc.setState(0x5026, 0x432b, 0x35f0, 0x8a8f, 0x80a, 0xf81d, 0x0, 0x1);
        gbc.writeMem(0x5026, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x432b, gbc.sp());
        EXPECT(0x5027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03E0
        gbc.setState(0x3a96, 0xa197, 0x5fa0, 0xa2e8, 0x9a35, 0x16b2, 0x0, 0x0);
        gbc.writeMem(0x3a96, { 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa197, gbc.sp());
        EXPECT(0x3a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03E1
        gbc.setState(0x40e2, 0xc747, 0x2020, 0x9d0f, 0xfab2, 0x8387, 0x0, 0x1);
        gbc.writeMem(0x40e2, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc747, gbc.sp());
        EXPECT(0x40e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03E2
        gbc.setState(0x7456, 0x4ba0, 0x7140, 0x2, 0xaa4, 0xc2b0, 0x1, 0x1);
        gbc.writeMem(0x7456, { 0xb0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4ba0, gbc.sp());
        EXPECT(0x7457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03E3
        gbc.setState(0x69d4, 0xa2a5, 0xd250, 0xd8c6, 0xc1ed, 0x476f, 0x0, 0x0);
        gbc.writeMem(0x69d4, { 0xb0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa2a5, gbc.sp());
        EXPECT(0x69d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03E4
        gbc.setState(0x8626, 0x8f2f, 0xa850, 0x89e8, 0x4497, 0xf919, 0x1, 0x0);
        gbc.writeMem(0x8626, { 0xb0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8f2f, gbc.sp());
        EXPECT(0x8627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8626));
        // B0 03E6
        gbc.setState(0x14ec, 0xc540, 0xbe90, 0x4668, 0x6bf9, 0x6e45, 0x0, 0x1);
        gbc.writeMem(0x14ec, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc540, gbc.sp());
        EXPECT(0x14ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B0 03E7
        gbc.setState(0xd0b7, 0x2c4b, 0x4d20, 0x1406, 0xb3f0, 0x241b, 0x1, 0x1);
        gbc.writeMem(0xd0b7, { 0xb0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2c4b, gbc.sp());
        EXPECT(0xd0b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd0b7));
    }
