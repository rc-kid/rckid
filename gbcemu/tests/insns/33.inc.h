    TEST(gbcemu, opcode_33) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 33 0000
        gbc.setState(0x48cb, 0x8142, 0xd270, 0x6677, 0x42d6, 0xd14f, 0x1, 0x1);
        gbc.writeMem(0x48cb, { 0x33 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8143, gbc.sp());
        EXPECT(0x48cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0002
        gbc.setState(0xc97e, 0x9ba0, 0x2e80, 0x49f1, 0xf42, 0x7232, 0x0, 0x1);
        gbc.writeMem(0xc97e, { 0x33 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9ba1, gbc.sp());
        EXPECT(0xc97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc97e));
        // 33 0003
        gbc.setState(0x81de, 0xef09, 0xe6c0, 0x10bd, 0xf96f, 0xcfd, 0x0, 0x0);
        gbc.writeMem(0x81de, { 0x33 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xef0a, gbc.sp());
        EXPECT(0x81df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x81de));
        // 33 0004
        gbc.setState(0xeae9, 0xf2ea, 0x59a0, 0xeaad, 0x499f, 0x9bf6, 0x0, 0x0);
        gbc.writeMem(0xeae9, { 0x33 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0xeaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xeae9));
        // 33 0005
        gbc.setState(0xd945, 0xad76, 0xa1f0, 0xd8f7, 0xb9a0, 0x720f, 0x1, 0x1);
        gbc.writeMem(0xd945, { 0x33 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xad77, gbc.sp());
        EXPECT(0xd946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd945));
        // 33 0006
        gbc.setState(0xeae8, 0x9095, 0x71e0, 0x6231, 0xb1c1, 0xe745, 0x0, 0x0);
        gbc.writeMem(0xeae8, { 0x33 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9096, gbc.sp());
        EXPECT(0xeae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xeae8));
        // 33 0007
        gbc.setState(0x986f, 0x26fa, 0x4400, 0xd30d, 0x478a, 0x4420, 0x0, 0x1);
        gbc.writeMem(0x986f, { 0x33 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x26fb, gbc.sp());
        EXPECT(0x9870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x986f));
        // 33 0008
        gbc.setState(0xec53, 0xf135, 0x30b0, 0x9faa, 0x7f39, 0x4109, 0x1, 0x0);
        gbc.writeMem(0xec53, { 0x33 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf136, gbc.sp());
        EXPECT(0xec54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xec53));
        // 33 0009
        gbc.setState(0xcc5c, 0xdf4b, 0xcf10, 0x3a1f, 0x9dbf, 0x6616, 0x1, 0x1);
        gbc.writeMem(0xcc5c, { 0x33 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdf4c, gbc.sp());
        EXPECT(0xcc5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcc5c));
        // 33 000A
        gbc.setState(0x82f8, 0x818e, 0x8fd0, 0x7fef, 0xaaf9, 0x8b0, 0x0, 0x1);
        gbc.writeMem(0x82f8, { 0x33 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x818f, gbc.sp());
        EXPECT(0x82f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x82f8));
        // 33 000B
        gbc.setState(0xe8c4, 0x7e49, 0x93f0, 0xfeb2, 0x7fdc, 0x3397, 0x0, 0x0);
        gbc.writeMem(0xe8c4, { 0x33 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7e4a, gbc.sp());
        EXPECT(0xe8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe8c4));
        // 33 000C
        gbc.setState(0xca12, 0xf52c, 0xf370, 0x2b0d, 0xcbfb, 0x711e, 0x0, 0x1);
        gbc.writeMem(0xca12, { 0x33 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf52d, gbc.sp());
        EXPECT(0xca13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xca12));
        // 33 000D
        gbc.setState(0x71c9, 0x37c9, 0xc770, 0x219f, 0x247b, 0x85ac, 0x1, 0x1);
        gbc.writeMem(0x71c9, { 0x33 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x37ca, gbc.sp());
        EXPECT(0x71ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 000F
        gbc.setState(0xc4de, 0xa748, 0x60c0, 0xa65d, 0x579d, 0x8fc7, 0x1, 0x1);
        gbc.writeMem(0xc4de, { 0x33 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa749, gbc.sp());
        EXPECT(0xc4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc4de));
        // 33 0010
        gbc.setState(0xb9db, 0xafcd, 0xc8b0, 0x23d0, 0x8f3a, 0xc6c9, 0x0, 0x0);
        gbc.writeMem(0xb9db, { 0x33 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xafce, gbc.sp());
        EXPECT(0xb9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb9db));
        // 33 0011
        gbc.setState(0x3bcc, 0x3e35, 0x2cb0, 0x8836, 0xee43, 0xb0fe, 0x1, 0x0);
        gbc.writeMem(0x3bcc, { 0x33 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3e36, gbc.sp());
        EXPECT(0x3bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0012
        gbc.setState(0xd608, 0xe57b, 0x5870, 0x89d9, 0x72, 0x3403, 0x1, 0x1);
        gbc.writeMem(0xd608, { 0x33 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe57c, gbc.sp());
        EXPECT(0xd609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd608));
        // 33 0013
        gbc.setState(0x7951, 0xa0cd, 0x7ba0, 0x1cfb, 0x7d71, 0x331a, 0x1, 0x0);
        gbc.writeMem(0x7951, { 0x33 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa0ce, gbc.sp());
        EXPECT(0x7952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0014
        gbc.setState(0xa9f, 0xac6c, 0x3e30, 0x473d, 0xd027, 0x4a84, 0x1, 0x1);
        gbc.writeMem(0xa9f, { 0x33 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xac6d, gbc.sp());
        EXPECT(0xaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0015
        gbc.setState(0xb221, 0x5665, 0x5280, 0xd9f9, 0x9267, 0xb02e, 0x1, 0x1);
        gbc.writeMem(0xb221, { 0x33 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5666, gbc.sp());
        EXPECT(0xb222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb221));
        // 33 0016
        gbc.setState(0x18d0, 0x3e67, 0xd2d0, 0x745, 0x8faf, 0xf7a4, 0x1, 0x0);
        gbc.writeMem(0x18d0, { 0x33 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3e68, gbc.sp());
        EXPECT(0x18d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0017
        gbc.setState(0x8ab3, 0x1ec4, 0xd670, 0xc797, 0x6b2c, 0x812e, 0x0, 0x0);
        gbc.writeMem(0x8ab3, { 0x33 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1ec5, gbc.sp());
        EXPECT(0x8ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8ab3));
        // 33 0018
        gbc.setState(0x5580, 0x6d4, 0x5360, 0x2652, 0xc914, 0xe6f5, 0x1, 0x1);
        gbc.writeMem(0x5580, { 0x33 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6d5, gbc.sp());
        EXPECT(0x5581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0019
        gbc.setState(0x2889, 0xd2d3, 0xa100, 0x85e5, 0x7b1d, 0x89fd, 0x1, 0x1);
        gbc.writeMem(0x2889, { 0x33 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd2d4, gbc.sp());
        EXPECT(0x288a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 001A
        gbc.setState(0xd845, 0xb7df, 0x3b0, 0x9d2d, 0xa983, 0xc4dd, 0x0, 0x0);
        gbc.writeMem(0xd845, { 0x33 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb7e0, gbc.sp());
        EXPECT(0xd846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd845));
        // 33 001B
        gbc.setState(0xb4fe, 0x9b1, 0x48a0, 0xee32, 0x3ff4, 0x248b, 0x0, 0x1);
        gbc.writeMem(0xb4fe, { 0x33 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9b2, gbc.sp());
        EXPECT(0xb4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb4fe));
        // 33 001C
        gbc.setState(0xad7b, 0x5550, 0xc610, 0xf46c, 0x635c, 0x88c0, 0x0, 0x1);
        gbc.writeMem(0xad7b, { 0x33 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5551, gbc.sp());
        EXPECT(0xad7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xad7b));
        // 33 001D
        gbc.setState(0x83cd, 0xbe8b, 0xbe00, 0xbf47, 0xa4c3, 0xce5c, 0x0, 0x1);
        gbc.writeMem(0x83cd, { 0x33 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbe8c, gbc.sp());
        EXPECT(0x83ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x83cd));
        // 33 001E
        gbc.setState(0x1dbb, 0x8635, 0x64d0, 0xe885, 0x857b, 0xc67, 0x1, 0x0);
        gbc.writeMem(0x1dbb, { 0x33 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8636, gbc.sp());
        EXPECT(0x1dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 001F
        gbc.setState(0x215c, 0xf5de, 0x1230, 0x24fe, 0x19fe, 0x65fb, 0x1, 0x1);
        gbc.writeMem(0x215c, { 0x33 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0x215d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0020
        gbc.setState(0x7577, 0xa904, 0xe180, 0xe1d7, 0x3166, 0x299f, 0x0, 0x0);
        gbc.writeMem(0x7577, { 0x33 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa905, gbc.sp());
        EXPECT(0x7578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0021
        gbc.setState(0x8037, 0xc896, 0xa930, 0x803, 0x5cc2, 0xd335, 0x0, 0x1);
        gbc.writeMem(0x8037, { 0x33 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc897, gbc.sp());
        EXPECT(0x8038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8037));
        // 33 0022
        gbc.setState(0xd7c0, 0x4b96, 0x7f80, 0xe5a7, 0x20da, 0x5cdd, 0x1, 0x0);
        gbc.writeMem(0xd7c0, { 0x33 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4b97, gbc.sp());
        EXPECT(0xd7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd7c0));
        // 33 0023
        gbc.setState(0xae98, 0xcd63, 0xf6b0, 0x9dae, 0x605a, 0x4473, 0x1, 0x1);
        gbc.writeMem(0xae98, { 0x33 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcd64, gbc.sp());
        EXPECT(0xae99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xae98));
        // 33 0024
        gbc.setState(0xeb63, 0x5afb, 0xaf00, 0x47af, 0x8370, 0xfbbe, 0x0, 0x0);
        gbc.writeMem(0xeb63, { 0x33 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5afc, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xeb63));
        // 33 0025
        gbc.setState(0xd343, 0x6902, 0x6230, 0x2747, 0x5cbc, 0xec33, 0x0, 0x0);
        gbc.writeMem(0xd343, { 0x33 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6903, gbc.sp());
        EXPECT(0xd344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd343));
        // 33 0026
        gbc.setState(0x311f, 0x261c, 0xdfe0, 0x3689, 0xbd38, 0x17d2, 0x1, 0x0);
        gbc.writeMem(0x311f, { 0x33 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x261d, gbc.sp());
        EXPECT(0x3120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0027
        gbc.setState(0xd6e0, 0xb4e0, 0x55c0, 0x1cbe, 0xd229, 0x6b56, 0x0, 0x0);
        gbc.writeMem(0xd6e0, { 0x33 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb4e1, gbc.sp());
        EXPECT(0xd6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd6e0));
        // 33 0028
        gbc.setState(0xeade, 0xed39, 0x3550, 0xc91d, 0xbf87, 0x49a7, 0x1, 0x1);
        gbc.writeMem(0xeade, { 0x33 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xed3a, gbc.sp());
        EXPECT(0xeadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xeade));
        // 33 0029
        gbc.setState(0xa2c5, 0x374, 0xa1c0, 0x9bea, 0x82fb, 0x4ecf, 0x0, 0x1);
        gbc.writeMem(0xa2c5, { 0x33 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x375, gbc.sp());
        EXPECT(0xa2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa2c5));
        // 33 002A
        gbc.setState(0x52f9, 0x5357, 0x6570, 0x72e6, 0xdbc8, 0x5d86, 0x1, 0x0);
        gbc.writeMem(0x52f9, { 0x33 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5358, gbc.sp());
        EXPECT(0x52fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 002B
        gbc.setState(0x493c, 0x1881, 0x5270, 0xdc4b, 0xade5, 0x52f3, 0x1, 0x1);
        gbc.writeMem(0x493c, { 0x33 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1882, gbc.sp());
        EXPECT(0x493d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 002C
        gbc.setState(0x7a6e, 0xe9b2, 0x2bf0, 0x77cb, 0x3ef4, 0x5134, 0x1, 0x1);
        gbc.writeMem(0x7a6e, { 0x33 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe9b3, gbc.sp());
        EXPECT(0x7a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 002D
        gbc.setState(0x5169, 0x849c, 0x8640, 0x9bbc, 0x2318, 0x430, 0x1, 0x0);
        gbc.writeMem(0x5169, { 0x33 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x849d, gbc.sp());
        EXPECT(0x516a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 002E
        gbc.setState(0x5ff6, 0x7304, 0xec70, 0x2a0a, 0xd49c, 0x5129, 0x0, 0x0);
        gbc.writeMem(0x5ff6, { 0x33 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7305, gbc.sp());
        EXPECT(0x5ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0030
        gbc.setState(0x63f4, 0x6f0, 0xe9d0, 0x7803, 0xfa, 0x8915, 0x1, 0x1);
        gbc.writeMem(0x63f4, { 0x33 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6f1, gbc.sp());
        EXPECT(0x63f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0031
        gbc.setState(0xca30, 0xf907, 0xb1d0, 0xada6, 0xbb23, 0x8929, 0x0, 0x0);
        gbc.writeMem(0xca30, { 0x33 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf908, gbc.sp());
        EXPECT(0xca31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xca30));
        // 33 0032
        gbc.setState(0x88d1, 0xdfa7, 0x3200, 0xcdbc, 0x54c3, 0x9191, 0x1, 0x1);
        gbc.writeMem(0x88d1, { 0x33 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdfa8, gbc.sp());
        EXPECT(0x88d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x88d1));
        // 33 0033
        gbc.setState(0x11d3, 0xd72b, 0xefa0, 0xffe7, 0x60a9, 0x694, 0x0, 0x1);
        gbc.writeMem(0x11d3, { 0x33 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd72c, gbc.sp());
        EXPECT(0x11d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0034
        gbc.setState(0x7be1, 0x7a42, 0x6dd0, 0xa5ba, 0x88be, 0x11c1, 0x1, 0x0);
        gbc.writeMem(0x7be1, { 0x33 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7a43, gbc.sp());
        EXPECT(0x7be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0035
        gbc.setState(0x7d95, 0x7c75, 0x1a0, 0xfdfb, 0x43f7, 0x4ebe, 0x1, 0x1);
        gbc.writeMem(0x7d95, { 0x33 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7c76, gbc.sp());
        EXPECT(0x7d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0036
        gbc.setState(0xe56a, 0x8f14, 0x1dd0, 0xfaa8, 0x8979, 0xcd7a, 0x1, 0x0);
        gbc.writeMem(0xe56a, { 0x33 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8f15, gbc.sp());
        EXPECT(0xe56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe56a));
        // 33 0037
        gbc.setState(0x19ca, 0xb3d1, 0x3710, 0xde8b, 0x3ab4, 0xbc34, 0x0, 0x1);
        gbc.writeMem(0x19ca, { 0x33 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb3d2, gbc.sp());
        EXPECT(0x19cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0038
        gbc.setState(0x3ee9, 0x7ffb, 0x970, 0x59c2, 0xc8cc, 0x4490, 0x1, 0x0);
        gbc.writeMem(0x3ee9, { 0x33 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7ffc, gbc.sp());
        EXPECT(0x3eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0039
        gbc.setState(0x3740, 0x28cf, 0x87c0, 0xf5c, 0x11d0, 0x3337, 0x0, 0x1);
        gbc.writeMem(0x3740, { 0x33 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x28d0, gbc.sp());
        EXPECT(0x3741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 003A
        gbc.setState(0xadc1, 0x3305, 0xa4b0, 0xaf7e, 0x306d, 0x5c73, 0x0, 0x0);
        gbc.writeMem(0xadc1, { 0x33 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3306, gbc.sp());
        EXPECT(0xadc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xadc1));
        // 33 003B
        gbc.setState(0x44b6, 0x1eb9, 0xa2f0, 0xe7e2, 0x74b0, 0x1aba, 0x1, 0x0);
        gbc.writeMem(0x44b6, { 0x33 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1eba, gbc.sp());
        EXPECT(0x44b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 003C
        gbc.setState(0xc1b1, 0x931c, 0xfb90, 0xbcb, 0x71e5, 0x3de, 0x1, 0x1);
        gbc.writeMem(0xc1b1, { 0x33 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x931d, gbc.sp());
        EXPECT(0xc1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc1b1));
        // 33 003D
        gbc.setState(0x46b8, 0x51f, 0xf480, 0x25a5, 0x1ff, 0x3dcf, 0x1, 0x1);
        gbc.writeMem(0x46b8, { 0x33 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x520, gbc.sp());
        EXPECT(0x46b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 003E
        gbc.setState(0xdd10, 0xb02f, 0xb440, 0x83d5, 0x906c, 0xb91, 0x1, 0x0);
        gbc.writeMem(0xdd10, { 0x33 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb030, gbc.sp());
        EXPECT(0xdd11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdd10));
        // 33 003F
        gbc.setState(0xe9cf, 0xb75d, 0x5b30, 0x68bb, 0x7426, 0x8c96, 0x0, 0x1);
        gbc.writeMem(0xe9cf, { 0x33 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb75e, gbc.sp());
        EXPECT(0xe9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe9cf));
        // 33 0040
        gbc.setState(0xbbd5, 0x1c89, 0xd6f0, 0xba4e, 0x2f43, 0x36f6, 0x0, 0x1);
        gbc.writeMem(0xbbd5, { 0x33 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1c8a, gbc.sp());
        EXPECT(0xbbd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbbd5));
        // 33 0041
        gbc.setState(0xc972, 0xc1e2, 0x2210, 0x8d45, 0x760b, 0x225d, 0x0, 0x1);
        gbc.writeMem(0xc972, { 0x33 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc1e3, gbc.sp());
        EXPECT(0xc973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc972));
        // 33 0042
        gbc.setState(0x30db, 0x764c, 0xee40, 0xfe, 0x4aa6, 0x2a6e, 0x0, 0x0);
        gbc.writeMem(0x30db, { 0x33 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x764d, gbc.sp());
        EXPECT(0x30dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0043
        gbc.setState(0xbc1e, 0xbde0, 0xe830, 0x2189, 0xc71d, 0x5353, 0x0, 0x0);
        gbc.writeMem(0xbc1e, { 0x33 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbde1, gbc.sp());
        EXPECT(0xbc1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbc1e));
        // 33 0044
        gbc.setState(0xa751, 0xda5c, 0x6050, 0x8971, 0xefa4, 0xc079, 0x0, 0x1);
        gbc.writeMem(0xa751, { 0x33 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xda5d, gbc.sp());
        EXPECT(0xa752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa751));
        // 33 0045
        gbc.setState(0xe122, 0xa229, 0x9be0, 0x4ecf, 0xacb5, 0x7c07, 0x1, 0x0);
        gbc.writeMem(0xe122, { 0x33 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa22a, gbc.sp());
        EXPECT(0xe123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe122));
        // 33 0047
        gbc.setState(0x735b, 0xab64, 0xf250, 0x150d, 0xe9e9, 0x73ed, 0x1, 0x0);
        gbc.writeMem(0x735b, { 0x33 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xab65, gbc.sp());
        EXPECT(0x735c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0048
        gbc.setState(0x757e, 0xaaef, 0xaa00, 0x7b74, 0x37dd, 0x4c5a, 0x1, 0x1);
        gbc.writeMem(0x757e, { 0x33 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xaaf0, gbc.sp());
        EXPECT(0x757f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0049
        gbc.setState(0x3777, 0x4173, 0xbc0, 0xac13, 0xafa1, 0x5d45, 0x0, 0x0);
        gbc.writeMem(0x3777, { 0x33 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4174, gbc.sp());
        EXPECT(0x3778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 004A
        gbc.setState(0xb5eb, 0xf264, 0x4760, 0xdc13, 0x1b2c, 0xd3f5, 0x1, 0x1);
        gbc.writeMem(0xb5eb, { 0x33 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf265, gbc.sp());
        EXPECT(0xb5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb5eb));
        // 33 004B
        gbc.setState(0x82b5, 0x816c, 0xebd0, 0x489c, 0xe4ba, 0x96aa, 0x0, 0x1);
        gbc.writeMem(0x82b5, { 0x33 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x816d, gbc.sp());
        EXPECT(0x82b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x82b5));
        // 33 004D
        gbc.setState(0x450, 0x566d, 0xda40, 0x5d0c, 0xda41, 0xd7ff, 0x1, 0x0);
        gbc.writeMem(0x450, { 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x566e, gbc.sp());
        EXPECT(0x451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 004E
        gbc.setState(0x919c, 0x9a7d, 0x4ad0, 0xc21f, 0x43f7, 0x26ea, 0x1, 0x1);
        gbc.writeMem(0x919c, { 0x33 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9a7e, gbc.sp());
        EXPECT(0x919d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x919c));
        // 33 004F
        gbc.setState(0x386b, 0x435, 0xdf60, 0x5b33, 0xee07, 0x896f, 0x0, 0x0);
        gbc.writeMem(0x386b, { 0x33 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x436, gbc.sp());
        EXPECT(0x386c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0050
        gbc.setState(0xbcb9, 0x4109, 0x310, 0xe945, 0x7e52, 0x7b7f, 0x1, 0x0);
        gbc.writeMem(0xbcb9, { 0x33 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x410a, gbc.sp());
        EXPECT(0xbcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbcb9));
        // 33 0051
        gbc.setState(0x47e5, 0x2325, 0x6050, 0x1061, 0xdb44, 0x8307, 0x1, 0x1);
        gbc.writeMem(0x47e5, { 0x33 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2326, gbc.sp());
        EXPECT(0x47e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0052
        gbc.setState(0x7f8f, 0x1636, 0xa2b0, 0x63c2, 0x826d, 0x81f, 0x0, 0x1);
        gbc.writeMem(0x7f8f, { 0x33 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1637, gbc.sp());
        EXPECT(0x7f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0053
        gbc.setState(0xd28e, 0x4ff4, 0x7f10, 0x6c0c, 0xa72f, 0x280b, 0x1, 0x0);
        gbc.writeMem(0xd28e, { 0x33 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4ff5, gbc.sp());
        EXPECT(0xd28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd28e));
        // 33 0054
        gbc.setState(0x44b4, 0xc95f, 0xe610, 0x327e, 0x432, 0xa4e6, 0x1, 0x0);
        gbc.writeMem(0x44b4, { 0x33 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc960, gbc.sp());
        EXPECT(0x44b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0055
        gbc.setState(0x739f, 0xc7e7, 0x5550, 0x5332, 0x37b4, 0xbd32, 0x0, 0x0);
        gbc.writeMem(0x739f, { 0x33 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc7e8, gbc.sp());
        EXPECT(0x73a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0056
        gbc.setState(0x4107, 0x5ca, 0xcae0, 0x72ec, 0xc48, 0xef18, 0x0, 0x0);
        gbc.writeMem(0x4107, { 0x33 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5cb, gbc.sp());
        EXPECT(0x4108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0057
        gbc.setState(0x3d3, 0x21d, 0x21d0, 0x3960, 0x297c, 0x1ad3, 0x0, 0x1);
        gbc.writeMem(0x3d3, { 0x33 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x21e, gbc.sp());
        EXPECT(0x3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0058
        gbc.setState(0x7798, 0xf1b, 0x8c20, 0x79e5, 0x77c1, 0x7caa, 0x0, 0x0);
        gbc.writeMem(0x7798, { 0x33 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf1c, gbc.sp());
        EXPECT(0x7799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0059
        gbc.setState(0xeaff, 0xc3e2, 0x91a0, 0xb4b9, 0x6b14, 0xb152, 0x0, 0x1);
        gbc.writeMem(0xeaff, { 0x33 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc3e3, gbc.sp());
        EXPECT(0xeb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xeaff));
        // 33 005A
        gbc.setState(0x534b, 0x8a29, 0x7540, 0x7a1e, 0xb404, 0x4367, 0x0, 0x0);
        gbc.writeMem(0x534b, { 0x33 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8a2a, gbc.sp());
        EXPECT(0x534c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 005B
        gbc.setState(0xde64, 0x64f0, 0x7350, 0x606, 0x59d2, 0xa993, 0x1, 0x1);
        gbc.writeMem(0xde64, { 0x33 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x64f1, gbc.sp());
        EXPECT(0xde65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xde64));
        // 33 005C
        gbc.setState(0x9c1c, 0x1c4f, 0x3c30, 0x55f6, 0x67a1, 0xe8ef, 0x1, 0x1);
        gbc.writeMem(0x9c1c, { 0x33 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1c50, gbc.sp());
        EXPECT(0x9c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9c1c));
        // 33 005D
        gbc.setState(0x4deb, 0xe8b6, 0x3400, 0x1ab8, 0x673d, 0x87d6, 0x0, 0x1);
        gbc.writeMem(0x4deb, { 0x33 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe8b7, gbc.sp());
        EXPECT(0x4dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 005E
        gbc.setState(0xce48, 0xc383, 0xc2f0, 0x450a, 0xdf51, 0x4893, 0x0, 0x1);
        gbc.writeMem(0xce48, { 0x33 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc384, gbc.sp());
        EXPECT(0xce49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xce48));
        // 33 005F
        gbc.setState(0x55df, 0xd449, 0x280, 0xfe02, 0x84a1, 0x957, 0x0, 0x0);
        gbc.writeMem(0x55df, { 0x33 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd44a, gbc.sp());
        EXPECT(0x55e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0060
        gbc.setState(0x50e, 0x8790, 0x9e40, 0xf1bf, 0xb763, 0x86e5, 0x0, 0x0);
        gbc.writeMem(0x50e, { 0x33 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8791, gbc.sp());
        EXPECT(0x50f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0061
        gbc.setState(0xe5bd, 0x56a, 0xea80, 0x75d1, 0xa5c1, 0x2cad, 0x1, 0x1);
        gbc.writeMem(0xe5bd, { 0x33 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x56b, gbc.sp());
        EXPECT(0xe5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe5bd));
        // 33 0062
        gbc.setState(0xd2cb, 0xe9e5, 0x5180, 0x34cc, 0x23c, 0x5698, 0x1, 0x1);
        gbc.writeMem(0xd2cb, { 0x33 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe9e6, gbc.sp());
        EXPECT(0xd2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd2cb));
        // 33 0063
        gbc.setState(0xb752, 0x974, 0x5b0, 0xbc19, 0xb22, 0x29b, 0x1, 0x1);
        gbc.writeMem(0xb752, { 0x33 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x975, gbc.sp());
        EXPECT(0xb753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb752));
        // 33 0064
        gbc.setState(0xe93c, 0x37a3, 0x9740, 0xb355, 0x2e1f, 0xce13, 0x1, 0x1);
        gbc.writeMem(0xe93c, { 0x33 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x37a4, gbc.sp());
        EXPECT(0xe93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe93c));
        // 33 0065
        gbc.setState(0xb2e5, 0x3249, 0x4fe0, 0xf203, 0x17cf, 0x3877, 0x1, 0x1);
        gbc.writeMem(0xb2e5, { 0x33 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x324a, gbc.sp());
        EXPECT(0xb2e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb2e5));
        // 33 0066
        gbc.setState(0xe9f0, 0x7be6, 0xc280, 0xa1a7, 0x7afd, 0x8641, 0x0, 0x1);
        gbc.writeMem(0xe9f0, { 0x33 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7be7, gbc.sp());
        EXPECT(0xe9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe9f0));
        // 33 0067
        gbc.setState(0xe63d, 0x677c, 0x3a30, 0xdb7f, 0xf7d3, 0xefe2, 0x1, 0x0);
        gbc.writeMem(0xe63d, { 0x33 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x677d, gbc.sp());
        EXPECT(0xe63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe63d));
        // 33 0068
        gbc.setState(0x9ab1, 0x85c9, 0x9d60, 0xfff6, 0x477, 0x4d4b, 0x1, 0x0);
        gbc.writeMem(0x9ab1, { 0x33 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x85ca, gbc.sp());
        EXPECT(0x9ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9ab1));
        // 33 0069
        gbc.setState(0xba9, 0x498, 0x2d10, 0x68f6, 0xffe5, 0x7a55, 0x1, 0x0);
        gbc.writeMem(0xba9, { 0x33 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x499, gbc.sp());
        EXPECT(0xbaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 006A
        gbc.setState(0x4991, 0xac6, 0xf340, 0x93cb, 0x3932, 0x5da5, 0x1, 0x1);
        gbc.writeMem(0x4991, { 0x33 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xac7, gbc.sp());
        EXPECT(0x4992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 006B
        gbc.setState(0xe526, 0x29a8, 0x42d0, 0x8f58, 0x8f53, 0x819b, 0x0, 0x1);
        gbc.writeMem(0xe526, { 0x33 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x29a9, gbc.sp());
        EXPECT(0xe527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe526));
        // 33 006C
        gbc.setState(0x6c63, 0x538, 0x36a0, 0xccfd, 0x3b3f, 0xadd1, 0x1, 0x1);
        gbc.writeMem(0x6c63, { 0x33 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x539, gbc.sp());
        EXPECT(0x6c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 006D
        gbc.setState(0xbbbb, 0x81ea, 0x9e80, 0xa80d, 0x1050, 0xe57, 0x1, 0x0);
        gbc.writeMem(0xbbbb, { 0x33 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x81eb, gbc.sp());
        EXPECT(0xbbbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbbbb));
        // 33 006E
        gbc.setState(0x2ce1, 0xf6e0, 0x75b0, 0x68d1, 0x7be0, 0x396f, 0x0, 0x1);
        gbc.writeMem(0x2ce1, { 0x33 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf6e1, gbc.sp());
        EXPECT(0x2ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 006F
        gbc.setState(0x9d85, 0xd32a, 0xa330, 0x84f7, 0x1f41, 0xd9d2, 0x1, 0x1);
        gbc.writeMem(0x9d85, { 0x33 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd32b, gbc.sp());
        EXPECT(0x9d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9d85));
        // 33 0070
        gbc.setState(0x5b6c, 0xf563, 0xab10, 0x147b, 0xc9c4, 0x49bd, 0x1, 0x0);
        gbc.writeMem(0x5b6c, { 0x33 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf564, gbc.sp());
        EXPECT(0x5b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0071
        gbc.setState(0x6918, 0x51da, 0xfdb0, 0xf1a0, 0x6d60, 0x21fd, 0x0, 0x0);
        gbc.writeMem(0x6918, { 0x33 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x51db, gbc.sp());
        EXPECT(0x6919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0072
        gbc.setState(0xf24, 0x6b3, 0x1e0, 0x9c6, 0xbd4, 0x47d3, 0x0, 0x0);
        gbc.writeMem(0xf24, { 0x33 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6b4, gbc.sp());
        EXPECT(0xf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0073
        gbc.setState(0x3391, 0x88d4, 0xe5a0, 0xc061, 0x4300, 0xdb50, 0x1, 0x0);
        gbc.writeMem(0x3391, { 0x33 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x88d5, gbc.sp());
        EXPECT(0x3392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0074
        gbc.setState(0x936, 0xb9e, 0x1030, 0x5d52, 0xa7f3, 0xcadf, 0x1, 0x0);
        gbc.writeMem(0x936, { 0x33 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb9f, gbc.sp());
        EXPECT(0x937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0076
        gbc.setState(0xa99f, 0xdb9e, 0xe3b0, 0x8d0a, 0x993b, 0x3816, 0x0, 0x1);
        gbc.writeMem(0xa99f, { 0x33 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdb9f, gbc.sp());
        EXPECT(0xa9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa99f));
        // 33 0077
        gbc.setState(0x2150, 0xaefa, 0x1ef0, 0xaaf3, 0x4ec7, 0x2e3c, 0x0, 0x0);
        gbc.writeMem(0x2150, { 0x33 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaefb, gbc.sp());
        EXPECT(0x2151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0078
        gbc.setState(0x5917, 0x1d52, 0x43f0, 0xf7b1, 0xb2b8, 0x45a2, 0x1, 0x0);
        gbc.writeMem(0x5917, { 0x33 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1d53, gbc.sp());
        EXPECT(0x5918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0079
        gbc.setState(0xc579, 0x2f6e, 0xd480, 0x9d5, 0xa32c, 0xa295, 0x0, 0x0);
        gbc.writeMem(0xc579, { 0x33 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2f6f, gbc.sp());
        EXPECT(0xc57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc579));
        // 33 007A
        gbc.setState(0x2f29, 0x6457, 0xd360, 0xc81e, 0x73ee, 0xb97a, 0x1, 0x0);
        gbc.writeMem(0x2f29, { 0x33 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6458, gbc.sp());
        EXPECT(0x2f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 007B
        gbc.setState(0x83ca, 0x1a4, 0x8330, 0x7264, 0xd3fe, 0x30ea, 0x0, 0x0);
        gbc.writeMem(0x83ca, { 0x33 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1a5, gbc.sp());
        EXPECT(0x83cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x83ca));
        // 33 007C
        gbc.setState(0x5876, 0x46c, 0x3100, 0x1c4, 0x7d9a, 0xdf11, 0x1, 0x1);
        gbc.writeMem(0x5876, { 0x33 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x46d, gbc.sp());
        EXPECT(0x5877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 007D
        gbc.setState(0x9d10, 0xd271, 0x1b80, 0xb25f, 0x4d0f, 0x1df, 0x0, 0x1);
        gbc.writeMem(0x9d10, { 0x33 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd272, gbc.sp());
        EXPECT(0x9d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9d10));
        // 33 007E
        gbc.setState(0x427a, 0x327e, 0x16a0, 0x62dc, 0xb01e, 0xdf9, 0x1, 0x0);
        gbc.writeMem(0x427a, { 0x33 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x327f, gbc.sp());
        EXPECT(0x427b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 007F
        gbc.setState(0xaed0, 0x422e, 0xe820, 0xce96, 0x360b, 0x84d7, 0x1, 0x0);
        gbc.writeMem(0xaed0, { 0x33 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x422f, gbc.sp());
        EXPECT(0xaed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaed0));
        // 33 0080
        gbc.setState(0xbde3, 0xa638, 0x34b0, 0x3528, 0x4c5d, 0x14f8, 0x1, 0x1);
        gbc.writeMem(0xbde3, { 0x33 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa639, gbc.sp());
        EXPECT(0xbde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbde3));
        // 33 0081
        gbc.setState(0xa06b, 0xc490, 0xbf30, 0x57ab, 0x7cdc, 0xdeba, 0x0, 0x1);
        gbc.writeMem(0xa06b, { 0x33 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc491, gbc.sp());
        EXPECT(0xa06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa06b));
        // 33 0082
        gbc.setState(0x5c74, 0x81c7, 0x6c70, 0x3a31, 0x85dc, 0x3572, 0x0, 0x1);
        gbc.writeMem(0x5c74, { 0x33 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x81c8, gbc.sp());
        EXPECT(0x5c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0083
        gbc.setState(0xd720, 0x7ec, 0xc450, 0xd2dd, 0xd285, 0xbf58, 0x1, 0x0);
        gbc.writeMem(0xd720, { 0x33 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7ed, gbc.sp());
        EXPECT(0xd721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd720));
        // 33 0084
        gbc.setState(0x1d39, 0x37d5, 0x3b0, 0x32b5, 0xe820, 0x9a07, 0x0, 0x1);
        gbc.writeMem(0x1d39, { 0x33 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x37d6, gbc.sp());
        EXPECT(0x1d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0085
        gbc.setState(0x2387, 0x33c9, 0xde20, 0xabe5, 0xb8de, 0x3b67, 0x1, 0x1);
        gbc.writeMem(0x2387, { 0x33 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x33ca, gbc.sp());
        EXPECT(0x2388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0086
        gbc.setState(0x4a87, 0x62d2, 0x2ca0, 0xc75d, 0x2316, 0x4921, 0x1, 0x1);
        gbc.writeMem(0x4a87, { 0x33 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x62d3, gbc.sp());
        EXPECT(0x4a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0087
        gbc.setState(0x5eb6, 0x1776, 0x5450, 0xdf76, 0xdbea, 0x63fc, 0x1, 0x1);
        gbc.writeMem(0x5eb6, { 0x33 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1777, gbc.sp());
        EXPECT(0x5eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0088
        gbc.setState(0x1997, 0xf6b0, 0xc440, 0x7ae2, 0x4364, 0xb222, 0x1, 0x1);
        gbc.writeMem(0x1997, { 0x33 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0x1998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0089
        gbc.setState(0xc6cd, 0xf0d0, 0x8bb0, 0x13d1, 0x48e0, 0xb3c5, 0x0, 0x1);
        gbc.writeMem(0xc6cd, { 0x33 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf0d1, gbc.sp());
        EXPECT(0xc6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc6cd));
        // 33 008A
        gbc.setState(0xb85d, 0x43f0, 0xe3f0, 0xcff8, 0x9ab7, 0xcc7f, 0x1, 0x0);
        gbc.writeMem(0xb85d, { 0x33 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x43f1, gbc.sp());
        EXPECT(0xb85e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb85d));
        // 33 008B
        gbc.setState(0xaade, 0x9619, 0x2910, 0xe41, 0x5ae7, 0x4fb0, 0x1, 0x1);
        gbc.writeMem(0xaade, { 0x33 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x961a, gbc.sp());
        EXPECT(0xaadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaade));
        // 33 008C
        gbc.setState(0x64c3, 0x7d1a, 0xd500, 0x2dae, 0xb72f, 0x42d0, 0x1, 0x1);
        gbc.writeMem(0x64c3, { 0x33 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7d1b, gbc.sp());
        EXPECT(0x64c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 008D
        gbc.setState(0x7b30, 0xb78c, 0x8480, 0xde00, 0xb0e3, 0x5e92, 0x1, 0x0);
        gbc.writeMem(0x7b30, { 0x33 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb78d, gbc.sp());
        EXPECT(0x7b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 008E
        gbc.setState(0x7216, 0x8171, 0xa3c0, 0x17eb, 0xdf15, 0x7e4b, 0x1, 0x1);
        gbc.writeMem(0x7216, { 0x33 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8172, gbc.sp());
        EXPECT(0x7217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 008F
        gbc.setState(0x690b, 0x36d, 0x26c0, 0xe2c7, 0x7453, 0x6186, 0x0, 0x0);
        gbc.writeMem(0x690b, { 0x33 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x36e, gbc.sp());
        EXPECT(0x690c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0090
        gbc.setState(0x7728, 0x7d69, 0x7a70, 0xad3e, 0x89a4, 0x9eac, 0x1, 0x1);
        gbc.writeMem(0x7728, { 0x33 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7d6a, gbc.sp());
        EXPECT(0x7729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0091
        gbc.setState(0x253c, 0xfc20, 0xa070, 0xe7d6, 0x3570, 0xd79, 0x0, 0x0);
        gbc.writeMem(0x253c, { 0x33 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfc21, gbc.sp());
        EXPECT(0x253d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0092
        gbc.setState(0x89b1, 0x8809, 0xf510, 0xffeb, 0x7238, 0x9cd0, 0x1, 0x0);
        gbc.writeMem(0x89b1, { 0x33 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x880a, gbc.sp());
        EXPECT(0x89b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x89b1));
        // 33 0093
        gbc.setState(0x4254, 0x508d, 0x8810, 0x655, 0xc761, 0x51b1, 0x0, 0x1);
        gbc.writeMem(0x4254, { 0x33 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x508e, gbc.sp());
        EXPECT(0x4255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0094
        gbc.setState(0x65d6, 0x8e3f, 0x9a80, 0x396a, 0x4dd1, 0xdbad, 0x0, 0x0);
        gbc.writeMem(0x65d6, { 0x33 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8e40, gbc.sp());
        EXPECT(0x65d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0095
        gbc.setState(0x20b8, 0x4597, 0xf850, 0x2233, 0x1f0e, 0xce2b, 0x1, 0x0);
        gbc.writeMem(0x20b8, { 0x33 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4598, gbc.sp());
        EXPECT(0x20b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0096
        gbc.setState(0x8615, 0xd2b, 0x17f0, 0x93ed, 0xc744, 0x8023, 0x1, 0x1);
        gbc.writeMem(0x8615, { 0x33 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd2c, gbc.sp());
        EXPECT(0x8616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8615));
        // 33 0097
        gbc.setState(0x1645, 0x8e2e, 0x630, 0x9de1, 0x373e, 0x7944, 0x0, 0x1);
        gbc.writeMem(0x1645, { 0x33 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8e2f, gbc.sp());
        EXPECT(0x1646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0098
        gbc.setState(0x4b6c, 0x95b4, 0xb450, 0xea1, 0xf7c5, 0x21cf, 0x0, 0x1);
        gbc.writeMem(0x4b6c, { 0x33 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x95b5, gbc.sp());
        EXPECT(0x4b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0099
        gbc.setState(0x57a1, 0xa27f, 0xb950, 0xc25a, 0x31da, 0xeecb, 0x0, 0x0);
        gbc.writeMem(0x57a1, { 0x33 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa280, gbc.sp());
        EXPECT(0x57a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 009A
        gbc.setState(0xd881, 0x7710, 0x2330, 0x8e58, 0x2999, 0x57e1, 0x0, 0x1);
        gbc.writeMem(0xd881, { 0x33 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7711, gbc.sp());
        EXPECT(0xd882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd881));
        // 33 009B
        gbc.setState(0x9498, 0x9e2b, 0x38b0, 0x5f7c, 0x680a, 0x26e6, 0x0, 0x1);
        gbc.writeMem(0x9498, { 0x33 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9e2c, gbc.sp());
        EXPECT(0x9499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9498));
        // 33 009C
        gbc.setState(0xb429, 0x6323, 0x81c0, 0x10c2, 0x81ef, 0xb0cc, 0x1, 0x1);
        gbc.writeMem(0xb429, { 0x33 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6324, gbc.sp());
        EXPECT(0xb42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb429));
        // 33 009D
        gbc.setState(0x89c2, 0x285d, 0x6110, 0x2e69, 0x537a, 0x965, 0x1, 0x0);
        gbc.writeMem(0x89c2, { 0x33 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x285e, gbc.sp());
        EXPECT(0x89c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x89c2));
        // 33 009E
        gbc.setState(0xa2ee, 0xdb9f, 0x3dd0, 0xedff, 0xad04, 0x7484, 0x1, 0x0);
        gbc.writeMem(0xa2ee, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdba0, gbc.sp());
        EXPECT(0xa2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa2ee));
        // 33 009F
        gbc.setState(0x722c, 0x1731, 0xe750, 0x8bdf, 0x14c9, 0x8277, 0x0, 0x1);
        gbc.writeMem(0x722c, { 0x33 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1732, gbc.sp());
        EXPECT(0x722d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00A0
        gbc.setState(0xc3e9, 0xc8c9, 0xcfe0, 0xd9bf, 0xe56b, 0xe7f, 0x0, 0x1);
        gbc.writeMem(0xc3e9, { 0x33 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc8ca, gbc.sp());
        EXPECT(0xc3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc3e9));
        // 33 00A2
        gbc.setState(0x2a8d, 0x779a, 0x8690, 0xd6da, 0x974c, 0x33f7, 0x0, 0x1);
        gbc.writeMem(0x2a8d, { 0x33 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x779b, gbc.sp());
        EXPECT(0x2a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00A3
        gbc.setState(0x5bf7, 0xe573, 0xbf00, 0xb0a2, 0xee5d, 0xa2f9, 0x0, 0x0);
        gbc.writeMem(0x5bf7, { 0x33 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe574, gbc.sp());
        EXPECT(0x5bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00A4
        gbc.setState(0xa9c0, 0xd4ad, 0x7810, 0xcd16, 0x3691, 0x4fde, 0x1, 0x0);
        gbc.writeMem(0xa9c0, { 0x33 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd4ae, gbc.sp());
        EXPECT(0xa9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa9c0));
        // 33 00A5
        gbc.setState(0x7bc4, 0x8261, 0x6d0, 0xdf2f, 0x8de8, 0xb949, 0x1, 0x1);
        gbc.writeMem(0x7bc4, { 0x33 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8262, gbc.sp());
        EXPECT(0x7bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00A6
        gbc.setState(0xa062, 0x7292, 0x3970, 0xb586, 0xf243, 0x800a, 0x1, 0x0);
        gbc.writeMem(0xa062, { 0x33 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7293, gbc.sp());
        EXPECT(0xa063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa062));
        // 33 00A7
        gbc.setState(0xd40, 0x1849, 0x4680, 0xe352, 0xe780, 0x2946, 0x1, 0x1);
        gbc.writeMem(0xd40, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x184a, gbc.sp());
        EXPECT(0xd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00A9
        gbc.setState(0xa84e, 0xdc0e, 0xaa60, 0xae27, 0x44b5, 0x4255, 0x0, 0x1);
        gbc.writeMem(0xa84e, { 0x33 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdc0f, gbc.sp());
        EXPECT(0xa84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa84e));
        // 33 00AA
        gbc.setState(0xaaf6, 0xab7e, 0xa8a0, 0x6099, 0x8959, 0x89b8, 0x0, 0x0);
        gbc.writeMem(0xaaf6, { 0x33 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xab7f, gbc.sp());
        EXPECT(0xaaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaaf6));
        // 33 00AB
        gbc.setState(0x37ba, 0x5269, 0x3bd0, 0x902d, 0xa6a2, 0x2fd3, 0x1, 0x0);
        gbc.writeMem(0x37ba, { 0x33 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x526a, gbc.sp());
        EXPECT(0x37bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00AC
        gbc.setState(0x9175, 0xe72, 0x1de0, 0xf68d, 0x233c, 0xdc37, 0x0, 0x0);
        gbc.writeMem(0x9175, { 0x33 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe73, gbc.sp());
        EXPECT(0x9176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9175));
        // 33 00AD
        gbc.setState(0xc6c4, 0x1e5c, 0x6180, 0xc781, 0xb7c7, 0xb268, 0x1, 0x1);
        gbc.writeMem(0xc6c4, { 0x33 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1e5d, gbc.sp());
        EXPECT(0xc6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc6c4));
        // 33 00AE
        gbc.setState(0xdc42, 0x28e9, 0x5280, 0x9e19, 0x9df, 0xb4e6, 0x1, 0x0);
        gbc.writeMem(0xdc42, { 0x33 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x28ea, gbc.sp());
        EXPECT(0xdc43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdc42));
        // 33 00AF
        gbc.setState(0x58e4, 0x67dd, 0x4e10, 0xe07, 0x56f3, 0x9c4, 0x1, 0x0);
        gbc.writeMem(0x58e4, { 0x33 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x67de, gbc.sp());
        EXPECT(0x58e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00B0
        gbc.setState(0x6b52, 0xe163, 0x4f30, 0xc7b4, 0xc351, 0x4ea6, 0x1, 0x0);
        gbc.writeMem(0x6b52, { 0x33 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe164, gbc.sp());
        EXPECT(0x6b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00B1
        gbc.setState(0x38b7, 0x39f3, 0xa4a0, 0x56eb, 0x6cec, 0x2817, 0x0, 0x1);
        gbc.writeMem(0x38b7, { 0x33 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x39f4, gbc.sp());
        EXPECT(0x38b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00B2
        gbc.setState(0x7d99, 0xd96a, 0xfe80, 0x9a70, 0x1144, 0x6621, 0x0, 0x1);
        gbc.writeMem(0x7d99, { 0x33 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd96b, gbc.sp());
        EXPECT(0x7d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00B3
        gbc.setState(0x2706, 0x9414, 0x3790, 0x898f, 0xf9aa, 0xec77, 0x0, 0x0);
        gbc.writeMem(0x2706, { 0x33 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9415, gbc.sp());
        EXPECT(0x2707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00B4
        gbc.setState(0xa555, 0xa87b, 0x9450, 0x6c51, 0xc042, 0x56e1, 0x1, 0x0);
        gbc.writeMem(0xa555, { 0x33 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa87c, gbc.sp());
        EXPECT(0xa556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa555));
        // 33 00B7
        gbc.setState(0xd483, 0xb8c, 0x22d0, 0xd626, 0xbda3, 0x1910, 0x1, 0x1);
        gbc.writeMem(0xd483, { 0x33 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb8d, gbc.sp());
        EXPECT(0xd484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd483));
        // 33 00B8
        gbc.setState(0xbdfd, 0x2b19, 0x9160, 0x1a32, 0xfa0c, 0xdcec, 0x1, 0x0);
        gbc.writeMem(0xbdfd, { 0x33 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2b1a, gbc.sp());
        EXPECT(0xbdfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbdfd));
        // 33 00B9
        gbc.setState(0x1433, 0x279d, 0x3610, 0x8907, 0xe9df, 0xbcf4, 0x0, 0x0);
        gbc.writeMem(0x1433, { 0x33 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x279e, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00BA
        gbc.setState(0xb1dc, 0x8e58, 0x8c10, 0x9beb, 0xac6b, 0xe4f5, 0x0, 0x1);
        gbc.writeMem(0xb1dc, { 0x33 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8e59, gbc.sp());
        EXPECT(0xb1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb1dc));
        // 33 00BB
        gbc.setState(0xc1d3, 0x462c, 0x99c0, 0x9456, 0xef57, 0xb110, 0x1, 0x1);
        gbc.writeMem(0xc1d3, { 0x33 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x462d, gbc.sp());
        EXPECT(0xc1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc1d3));
        // 33 00BC
        gbc.setState(0x3702, 0xc838, 0xcd60, 0x5c81, 0x5011, 0x37ea, 0x1, 0x0);
        gbc.writeMem(0x3702, { 0x33 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc839, gbc.sp());
        EXPECT(0x3703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00BD
        gbc.setState(0xdbb6, 0x1b10, 0x2c40, 0x4f34, 0x99cc, 0x84a, 0x0, 0x1);
        gbc.writeMem(0xdbb6, { 0x33 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1b11, gbc.sp());
        EXPECT(0xdbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdbb6));
        // 33 00BE
        gbc.setState(0x6960, 0xbc9d, 0x5090, 0xbb5c, 0x1a74, 0x721e, 0x0, 0x1);
        gbc.writeMem(0x6960, { 0x33 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbc9e, gbc.sp());
        EXPECT(0x6961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00BF
        gbc.setState(0xdead, 0x6a4a, 0xf420, 0x95b9, 0xbfb8, 0x82b0, 0x1, 0x1);
        gbc.writeMem(0xdead, { 0x33 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6a4b, gbc.sp());
        EXPECT(0xdeae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdead));
        // 33 00C0
        gbc.setState(0xa06d, 0xdd3f, 0x5e00, 0x9fac, 0x2829, 0x3199, 0x1, 0x1);
        gbc.writeMem(0xa06d, { 0x33 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdd40, gbc.sp());
        EXPECT(0xa06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa06d));
        // 33 00C1
        gbc.setState(0xace5, 0x8dcc, 0xe3b0, 0x3acd, 0xa26e, 0xda16, 0x0, 0x1);
        gbc.writeMem(0xace5, { 0x33 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8dcd, gbc.sp());
        EXPECT(0xace6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xace5));
        // 33 00C3
        gbc.setState(0x680e, 0x5248, 0xce00, 0xceb4, 0x2b1e, 0x52dd, 0x0, 0x1);
        gbc.writeMem(0x680e, { 0x33 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5249, gbc.sp());
        EXPECT(0x680f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00C4
        gbc.setState(0x35de, 0xc918, 0x3ce0, 0x17ce, 0x7873, 0x918d, 0x0, 0x0);
        gbc.writeMem(0x35de, { 0x33 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc919, gbc.sp());
        EXPECT(0x35df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00C5
        gbc.setState(0x8a49, 0xf335, 0x99e0, 0x6d69, 0xff81, 0x9a5, 0x0, 0x1);
        gbc.writeMem(0x8a49, { 0x33 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf336, gbc.sp());
        EXPECT(0x8a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8a49));
        // 33 00C6
        gbc.setState(0x3bf8, 0xda3c, 0x3790, 0xf38d, 0x9425, 0xd48d, 0x1, 0x0);
        gbc.writeMem(0x3bf8, { 0x33 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xda3d, gbc.sp());
        EXPECT(0x3bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00C7
        gbc.setState(0x42d1, 0x96a1, 0xce00, 0xc065, 0x62fa, 0xf703, 0x0, 0x1);
        gbc.writeMem(0x42d1, { 0x33 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x96a2, gbc.sp());
        EXPECT(0x42d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00C8
        gbc.setState(0x53fe, 0xb218, 0xb280, 0xa2bd, 0x5582, 0x452c, 0x1, 0x1);
        gbc.writeMem(0x53fe, { 0x33 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb219, gbc.sp());
        EXPECT(0x53ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00C9
        gbc.setState(0x311b, 0xf172, 0xc650, 0x2a76, 0xa3b2, 0x414a, 0x1, 0x0);
        gbc.writeMem(0x311b, { 0x33 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf173, gbc.sp());
        EXPECT(0x311c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00CA
        gbc.setState(0x79de, 0x43bc, 0xc710, 0x387e, 0x8e4f, 0x4e9f, 0x1, 0x0);
        gbc.writeMem(0x79de, { 0x33 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x43bd, gbc.sp());
        EXPECT(0x79df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00CB
        gbc.setState(0x4080, 0x2b2c, 0xdc90, 0x6ef0, 0xce22, 0xb47c, 0x1, 0x1);
        gbc.writeMem(0x4080, { 0x33 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2b2d, gbc.sp());
        EXPECT(0x4081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00CC
        gbc.setState(0x144d, 0xbb07, 0x6760, 0xb005, 0x1308, 0x91cc, 0x1, 0x0);
        gbc.writeMem(0x144d, { 0x33 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0x144e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00CD
        gbc.setState(0x3e72, 0xd269, 0xb820, 0xa16b, 0x2b5, 0x54c6, 0x0, 0x1);
        gbc.writeMem(0x3e72, { 0x33 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd26a, gbc.sp());
        EXPECT(0x3e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00CE
        gbc.setState(0xbddc, 0x4633, 0x5c10, 0x1bcc, 0x59f8, 0x2c51, 0x0, 0x1);
        gbc.writeMem(0xbddc, { 0x33 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4634, gbc.sp());
        EXPECT(0xbddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbddc));
        // 33 00CF
        gbc.setState(0x6582, 0x8020, 0xe560, 0xcc55, 0xc27a, 0x73f3, 0x0, 0x0);
        gbc.writeMem(0x6582, { 0x33 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8021, gbc.sp());
        EXPECT(0x6583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00D0
        gbc.setState(0x2e54, 0x30b1, 0xe20, 0x4cde, 0xbed, 0x747f, 0x0, 0x1);
        gbc.writeMem(0x2e54, { 0x33 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x30b2, gbc.sp());
        EXPECT(0x2e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00D1
        gbc.setState(0x93bb, 0x9687, 0x4100, 0xd9cf, 0xc6ff, 0xce16, 0x0, 0x0);
        gbc.writeMem(0x93bb, { 0x33 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9688, gbc.sp());
        EXPECT(0x93bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x93bb));
        // 33 00D2
        gbc.setState(0xbc93, 0x2963, 0x31a0, 0x52ab, 0x2d0f, 0xb101, 0x0, 0x1);
        gbc.writeMem(0xbc93, { 0x33 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2964, gbc.sp());
        EXPECT(0xbc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbc93));
        // 33 00D3
        gbc.setState(0x69b7, 0x91a4, 0x8fa0, 0x6052, 0xb74b, 0x81f5, 0x0, 0x0);
        gbc.writeMem(0x69b7, { 0x33 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x91a5, gbc.sp());
        EXPECT(0x69b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00D4
        gbc.setState(0x1e9a, 0xfb3d, 0xaf80, 0xd979, 0x6a33, 0x5c0e, 0x0, 0x1);
        gbc.writeMem(0x1e9a, { 0x33 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfb3e, gbc.sp());
        EXPECT(0x1e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00D6
        gbc.setState(0xdeb, 0xe634, 0xf2c0, 0x9b77, 0xa7cc, 0x71ad, 0x0, 0x1);
        gbc.writeMem(0xdeb, { 0x33 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe635, gbc.sp());
        EXPECT(0xdec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00D7
        gbc.setState(0x87c0, 0x2a1, 0x3a90, 0x299a, 0xce51, 0xfb1e, 0x0, 0x0);
        gbc.writeMem(0x87c0, { 0x33 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2a2, gbc.sp());
        EXPECT(0x87c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x87c0));
        // 33 00D8
        gbc.setState(0xd7cf, 0x4aa7, 0x2d80, 0xae0c, 0xc45, 0x77c2, 0x0, 0x1);
        gbc.writeMem(0xd7cf, { 0x33 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4aa8, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd7cf));
        // 33 00D9
        gbc.setState(0xa916, 0xfa30, 0x3eb0, 0xcfeb, 0x2ae4, 0xab7d, 0x0, 0x0);
        gbc.writeMem(0xa916, { 0x33 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfa31, gbc.sp());
        EXPECT(0xa917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa916));
        // 33 00DA
        gbc.setState(0x5719, 0xba0f, 0x1610, 0x8553, 0x6690, 0x239f, 0x0, 0x0);
        gbc.writeMem(0x5719, { 0x33 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xba10, gbc.sp());
        EXPECT(0x571a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00DB
        gbc.setState(0xe8a8, 0xf4cc, 0x57d0, 0x76b1, 0xd78e, 0xcb94, 0x1, 0x1);
        gbc.writeMem(0xe8a8, { 0x33 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf4cd, gbc.sp());
        EXPECT(0xe8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe8a8));
        // 33 00DC
        gbc.setState(0x62ff, 0x57e6, 0xfd60, 0x67f0, 0xd9be, 0x137c, 0x1, 0x1);
        gbc.writeMem(0x62ff, { 0x33 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x57e7, gbc.sp());
        EXPECT(0x6300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00DD
        gbc.setState(0xbafe, 0x42f, 0xa730, 0xe504, 0x44fc, 0x3d18, 0x0, 0x0);
        gbc.writeMem(0xbafe, { 0x33 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x430, gbc.sp());
        EXPECT(0xbaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbafe));
        // 33 00DE
        gbc.setState(0xed5b, 0xc649, 0x75f0, 0x9b5, 0x2daf, 0x9d5a, 0x0, 0x1);
        gbc.writeMem(0xed5b, { 0x33 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc64a, gbc.sp());
        EXPECT(0xed5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xed5b));
        // 33 00DF
        gbc.setState(0xe078, 0x8d38, 0xc340, 0xc666, 0x665e, 0x4465, 0x1, 0x0);
        gbc.writeMem(0xe078, { 0x33 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8d39, gbc.sp());
        EXPECT(0xe079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe078));
        // 33 00E0
        gbc.setState(0x4508, 0xbe82, 0x7090, 0x4247, 0x29ae, 0x4f33, 0x0, 0x0);
        gbc.writeMem(0x4508, { 0x33 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbe83, gbc.sp());
        EXPECT(0x4509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00E1
        gbc.setState(0xb4ef, 0xad71, 0xe4e0, 0x7e12, 0xd18c, 0xf84, 0x0, 0x0);
        gbc.writeMem(0xb4ef, { 0x33 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xad72, gbc.sp());
        EXPECT(0xb4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb4ef));
        // 33 00E2
        gbc.setState(0x7074, 0x9398, 0x9b00, 0x586c, 0xf4bc, 0x212e, 0x1, 0x0);
        gbc.writeMem(0x7074, { 0x33 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9399, gbc.sp());
        EXPECT(0x7075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00E3
        gbc.setState(0x6f28, 0xa3bf, 0x1790, 0x2299, 0xef9d, 0xe9d7, 0x1, 0x1);
        gbc.writeMem(0x6f28, { 0x33 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa3c0, gbc.sp());
        EXPECT(0x6f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00E4
        gbc.setState(0xa0af, 0x6f58, 0xb7b0, 0xefe7, 0xddec, 0xb8a2, 0x1, 0x0);
        gbc.writeMem(0xa0af, { 0x33 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6f59, gbc.sp());
        EXPECT(0xa0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa0af));
        // 33 00E5
        gbc.setState(0xc033, 0x33dc, 0x2720, 0xdcb8, 0x24c, 0xe2df, 0x1, 0x1);
        gbc.writeMem(0xc033, { 0x33 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x33dd, gbc.sp());
        EXPECT(0xc034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc033));
        // 33 00E6
        gbc.setState(0x8870, 0xf5af, 0xfac0, 0xb23c, 0x82b0, 0x6081, 0x0, 0x0);
        gbc.writeMem(0x8870, { 0x33 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf5b0, gbc.sp());
        EXPECT(0x8871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8870));
        // 33 00E7
        gbc.setState(0xb7cc, 0xb807, 0x62e0, 0xf73f, 0x43cb, 0xcf72, 0x1, 0x1);
        gbc.writeMem(0xb7cc, { 0x33 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb808, gbc.sp());
        EXPECT(0xb7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb7cc));
        // 33 00E8
        gbc.setState(0xd157, 0xa037, 0xe7b0, 0x4031, 0xad9d, 0xb751, 0x1, 0x1);
        gbc.writeMem(0xd157, { 0x33 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa038, gbc.sp());
        EXPECT(0xd158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd157));
        // 33 00EA
        gbc.setState(0xaa68, 0x30c4, 0xea10, 0x68c6, 0x176b, 0x1cf9, 0x0, 0x1);
        gbc.writeMem(0xaa68, { 0x33 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x30c5, gbc.sp());
        EXPECT(0xaa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaa68));
        // 33 00EB
        gbc.setState(0x4b05, 0x9f61, 0x52e0, 0x6b56, 0x15f1, 0xe9, 0x1, 0x0);
        gbc.writeMem(0x4b05, { 0x33 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9f62, gbc.sp());
        EXPECT(0x4b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00EC
        gbc.setState(0xe516, 0x21b7, 0x5690, 0x6587, 0x5033, 0x3361, 0x0, 0x0);
        gbc.writeMem(0xe516, { 0x33 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x21b8, gbc.sp());
        EXPECT(0xe517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe516));
        // 33 00ED
        gbc.setState(0xc94, 0xd881, 0xaea0, 0x976b, 0xe5a, 0x2388, 0x0, 0x0);
        gbc.writeMem(0xc94, { 0x33 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd882, gbc.sp());
        EXPECT(0xc95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00EE
        gbc.setState(0xd5dc, 0x8594, 0xbb90, 0xd3fc, 0xdfb9, 0xcbc1, 0x1, 0x1);
        gbc.writeMem(0xd5dc, { 0x33 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8595, gbc.sp());
        EXPECT(0xd5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd5dc));
        // 33 00EF
        gbc.setState(0x2d67, 0xbd9a, 0xeeb0, 0xf882, 0xf340, 0x1976, 0x1, 0x1);
        gbc.writeMem(0x2d67, { 0x33 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbd9b, gbc.sp());
        EXPECT(0x2d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00F0
        gbc.setState(0x69c3, 0x3f9a, 0xd6e0, 0xc04a, 0x68a7, 0x6eed, 0x0, 0x1);
        gbc.writeMem(0x69c3, { 0x33 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3f9b, gbc.sp());
        EXPECT(0x69c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00F1
        gbc.setState(0x9a12, 0x4543, 0x1f40, 0x76b1, 0xd7d8, 0xc072, 0x1, 0x1);
        gbc.writeMem(0x9a12, { 0x33 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4544, gbc.sp());
        EXPECT(0x9a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9a12));
        // 33 00F2
        gbc.setState(0x3de8, 0xb2f4, 0xf3c0, 0x9ee5, 0x1fdb, 0xf856, 0x1, 0x1);
        gbc.writeMem(0x3de8, { 0x33 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb2f5, gbc.sp());
        EXPECT(0x3de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00F4
        gbc.setState(0x7d0c, 0x37f6, 0x54b0, 0x2de7, 0x3294, 0xc4f8, 0x1, 0x1);
        gbc.writeMem(0x7d0c, { 0x33 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x37f7, gbc.sp());
        EXPECT(0x7d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00F5
        gbc.setState(0x5bc7, 0x31aa, 0x3e00, 0xabfd, 0xd42d, 0x33ff, 0x0, 0x0);
        gbc.writeMem(0x5bc7, { 0x33 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x31ab, gbc.sp());
        EXPECT(0x5bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00F6
        gbc.setState(0x1149, 0xc2a, 0x17d0, 0xa43f, 0x2dc8, 0xe1ec, 0x0, 0x1);
        gbc.writeMem(0x1149, { 0x33 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc2b, gbc.sp());
        EXPECT(0x114a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00F7
        gbc.setState(0x862b, 0x6630, 0x4ab0, 0xb889, 0x2001, 0xd81e, 0x0, 0x1);
        gbc.writeMem(0x862b, { 0x33 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6631, gbc.sp());
        EXPECT(0x862c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x862b));
        // 33 00F8
        gbc.setState(0xd970, 0x9af6, 0xbf80, 0xd120, 0x287e, 0x5090, 0x1, 0x0);
        gbc.writeMem(0xd970, { 0x33 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9af7, gbc.sp());
        EXPECT(0xd971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd970));
        // 33 00F9
        gbc.setState(0x5704, 0xd658, 0xff70, 0xe28c, 0xa3c5, 0xe396, 0x0, 0x0);
        gbc.writeMem(0x5704, { 0x33 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd659, gbc.sp());
        EXPECT(0x5705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 00FA
        gbc.setState(0xb545, 0xf1f5, 0xbe30, 0x9159, 0x768d, 0xa817, 0x0, 0x1);
        gbc.writeMem(0xb545, { 0x33 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf1f6, gbc.sp());
        EXPECT(0xb546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb545));
        // 33 00FB
        gbc.setState(0xc273, 0x2c2f, 0xae20, 0x44fc, 0x2824, 0x978c, 0x0, 0x0);
        gbc.writeMem(0xc273, { 0x33 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2c30, gbc.sp());
        EXPECT(0xc274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc273));
        // 33 00FC
        gbc.setState(0x10a2, 0x5b3e, 0x8f40, 0x5402, 0x55fb, 0x1abf, 0x1, 0x0);
        gbc.writeMem(0x10a2, { 0x33 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5b3f, gbc.sp());
        EXPECT(0x10a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00FD
        gbc.setState(0x80a2, 0x988a, 0xf0c0, 0x4fd8, 0xa1a9, 0xa64d, 0x0, 0x0);
        gbc.writeMem(0x80a2, { 0x33 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x988b, gbc.sp());
        EXPECT(0x80a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x80a2));
        // 33 00FE
        gbc.setState(0x1c71, 0x8d9a, 0xdaa0, 0xdf72, 0xe49b, 0x79fb, 0x0, 0x1);
        gbc.writeMem(0x1c71, { 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8d9b, gbc.sp());
        EXPECT(0x1c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 00FF
        gbc.setState(0x57d3, 0x6b48, 0xb660, 0xf9e4, 0x926f, 0xcb6b, 0x0, 0x1);
        gbc.writeMem(0x57d3, { 0x33 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6b49, gbc.sp());
        EXPECT(0x57d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0100
        gbc.setState(0xc238, 0x2cd3, 0x6630, 0xcbc4, 0x51a3, 0x51b8, 0x0, 0x0);
        gbc.writeMem(0xc238, { 0x33 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2cd4, gbc.sp());
        EXPECT(0xc239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc238));
        // 33 0101
        gbc.setState(0x53e2, 0x8773, 0xba60, 0x292e, 0x8ce8, 0xa71c, 0x0, 0x1);
        gbc.writeMem(0x53e2, { 0x33 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8774, gbc.sp());
        EXPECT(0x53e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0102
        gbc.setState(0xe4fc, 0xbe75, 0x6ee0, 0x547, 0xb52d, 0xd928, 0x1, 0x1);
        gbc.writeMem(0xe4fc, { 0x33 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbe76, gbc.sp());
        EXPECT(0xe4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe4fc));
        // 33 0103
        gbc.setState(0x3194, 0xbf, 0xf490, 0x9253, 0xf18e, 0x5686, 0x0, 0x1);
        gbc.writeMem(0x3194, { 0x33 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc0, gbc.sp());
        EXPECT(0x3195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0105
        gbc.setState(0x43c7, 0x2963, 0x8f70, 0xa674, 0x888a, 0x6d72, 0x1, 0x1);
        gbc.writeMem(0x43c7, { 0x33 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2964, gbc.sp());
        EXPECT(0x43c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0106
        gbc.setState(0x23b2, 0x80f7, 0xf300, 0x5641, 0x8b3b, 0xf9ac, 0x0, 0x0);
        gbc.writeMem(0x23b2, { 0x33 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x80f8, gbc.sp());
        EXPECT(0x23b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0108
        gbc.setState(0x3dce, 0xb7be, 0xe650, 0xd996, 0xd4b7, 0xc8e6, 0x1, 0x1);
        gbc.writeMem(0x3dce, { 0x33 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb7bf, gbc.sp());
        EXPECT(0x3dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0109
        gbc.setState(0x71a5, 0xe7b5, 0xd820, 0xcbd4, 0xe57a, 0xa0e6, 0x1, 0x1);
        gbc.writeMem(0x71a5, { 0x33 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe7b6, gbc.sp());
        EXPECT(0x71a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 010A
        gbc.setState(0x506e, 0x82ae, 0x3790, 0x8d6b, 0x4a2c, 0x85bc, 0x1, 0x0);
        gbc.writeMem(0x506e, { 0x33 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x82af, gbc.sp());
        EXPECT(0x506f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 010B
        gbc.setState(0x2d21, 0xda21, 0xa5a0, 0x3b35, 0xf69a, 0x7a98, 0x1, 0x0);
        gbc.writeMem(0x2d21, { 0x33 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xda22, gbc.sp());
        EXPECT(0x2d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 010C
        gbc.setState(0xd3a7, 0x438, 0xcca0, 0x34dc, 0xb8f7, 0xb38c, 0x0, 0x1);
        gbc.writeMem(0xd3a7, { 0x33 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x439, gbc.sp());
        EXPECT(0xd3a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd3a7));
        // 33 010D
        gbc.setState(0x5eda, 0x7f4c, 0x9c40, 0xdb64, 0x7b4f, 0x4634, 0x0, 0x1);
        gbc.writeMem(0x5eda, { 0x33 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7f4d, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 010E
        gbc.setState(0x781e, 0xe913, 0xfc80, 0xa465, 0x66ef, 0xa7b6, 0x0, 0x0);
        gbc.writeMem(0x781e, { 0x33 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe914, gbc.sp());
        EXPECT(0x781f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 010F
        gbc.setState(0x4a21, 0xe023, 0xc9e0, 0xf258, 0xdf72, 0xc797, 0x1, 0x1);
        gbc.writeMem(0x4a21, { 0x33 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe024, gbc.sp());
        EXPECT(0x4a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0110
        gbc.setState(0xc4fd, 0xb78f, 0xfaa0, 0x46f5, 0x9c86, 0xdc61, 0x0, 0x0);
        gbc.writeMem(0xc4fd, { 0x33 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb790, gbc.sp());
        EXPECT(0xc4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc4fd));
        // 33 0111
        gbc.setState(0x2228, 0xa6c4, 0x5a20, 0x5bc1, 0x1d37, 0xe89b, 0x1, 0x1);
        gbc.writeMem(0x2228, { 0x33 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa6c5, gbc.sp());
        EXPECT(0x2229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0112
        gbc.setState(0xd982, 0x429b, 0x1b30, 0x1e03, 0xe952, 0xc8a4, 0x1, 0x1);
        gbc.writeMem(0xd982, { 0x33 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x429c, gbc.sp());
        EXPECT(0xd983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd982));
        // 33 0113
        gbc.setState(0x355c, 0x7c0b, 0xa770, 0x86a8, 0xc167, 0x5f0b, 0x0, 0x0);
        gbc.writeMem(0x355c, { 0x33 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7c0c, gbc.sp());
        EXPECT(0x355d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0114
        gbc.setState(0x6617, 0xff6b, 0x3230, 0xb62e, 0xd009, 0x9688, 0x0, 0x1);
        gbc.writeMem(0x6617, { 0x33 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xff6c, gbc.sp());
        EXPECT(0x6618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0115
        gbc.setState(0x48cd, 0x71c5, 0x1cc0, 0x1b82, 0x2a5f, 0xbfb3, 0x0, 0x1);
        gbc.writeMem(0x48cd, { 0x33 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x71c6, gbc.sp());
        EXPECT(0x48ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0116
        gbc.setState(0x8f30, 0x6028, 0x2530, 0x1cd4, 0xe43b, 0xff23, 0x1, 0x1);
        gbc.writeMem(0x8f30, { 0x33 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6029, gbc.sp());
        EXPECT(0x8f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8f30));
        // 33 0119
        gbc.setState(0x9502, 0xd97c, 0xaa10, 0x6104, 0x69a4, 0xe977, 0x1, 0x1);
        gbc.writeMem(0x9502, { 0x33 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd97d, gbc.sp());
        EXPECT(0x9503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9502));
        // 33 011B
        gbc.setState(0x9511, 0x6678, 0x8ab0, 0xfe16, 0x97c, 0x4ef6, 0x0, 0x1);
        gbc.writeMem(0x9511, { 0x33 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6679, gbc.sp());
        EXPECT(0x9512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9511));
        // 33 011C
        gbc.setState(0xabcb, 0xaf76, 0x8fa0, 0x717f, 0xbd7f, 0xba8f, 0x1, 0x1);
        gbc.writeMem(0xabcb, { 0x33 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaf77, gbc.sp());
        EXPECT(0xabcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xabcb));
        // 33 011D
        gbc.setState(0xe72c, 0x96c4, 0xee50, 0x6c12, 0x44b3, 0xa10a, 0x0, 0x0);
        gbc.writeMem(0xe72c, { 0x33 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x96c5, gbc.sp());
        EXPECT(0xe72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe72c));
        // 33 011E
        gbc.setState(0xae2, 0x48bd, 0xbeb0, 0x5769, 0x9846, 0xa5ef, 0x1, 0x1);
        gbc.writeMem(0xae2, { 0x33 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x48be, gbc.sp());
        EXPECT(0xae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 011F
        gbc.setState(0x5825, 0x4a9a, 0xa9c0, 0x418a, 0x14f3, 0x172d, 0x0, 0x0);
        gbc.writeMem(0x5825, { 0x33 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4a9b, gbc.sp());
        EXPECT(0x5826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0120
        gbc.setState(0x7e5a, 0x1bd5, 0x4ef0, 0xfa94, 0x9e9e, 0x9ae7, 0x0, 0x1);
        gbc.writeMem(0x7e5a, { 0x33 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1bd6, gbc.sp());
        EXPECT(0x7e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0121
        gbc.setState(0x226b, 0x4a08, 0x3480, 0xf3a3, 0xbfc0, 0x7429, 0x0, 0x0);
        gbc.writeMem(0x226b, { 0x33 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4a09, gbc.sp());
        EXPECT(0x226c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0122
        gbc.setState(0x6b2d, 0x3897, 0x4f30, 0x8eb3, 0xf84, 0x8c53, 0x0, 0x0);
        gbc.writeMem(0x6b2d, { 0x33 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3898, gbc.sp());
        EXPECT(0x6b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0123
        gbc.setState(0x228b, 0xb606, 0x55d0, 0x62ff, 0x276c, 0x29a3, 0x0, 0x0);
        gbc.writeMem(0x228b, { 0x33 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb607, gbc.sp());
        EXPECT(0x228c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0124
        gbc.setState(0x9fb0, 0xab1, 0x38a0, 0xf5c8, 0x2468, 0xfd67, 0x1, 0x0);
        gbc.writeMem(0x9fb0, { 0x33 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xab2, gbc.sp());
        EXPECT(0x9fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9fb0));
        // 33 0125
        gbc.setState(0xc71b, 0x4219, 0x6e70, 0xe539, 0xf062, 0x1a25, 0x0, 0x0);
        gbc.writeMem(0xc71b, { 0x33 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x421a, gbc.sp());
        EXPECT(0xc71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc71b));
        // 33 0126
        gbc.setState(0x64f3, 0xce99, 0x2280, 0xde36, 0x5e36, 0x29c0, 0x0, 0x0);
        gbc.writeMem(0x64f3, { 0x33 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xce9a, gbc.sp());
        EXPECT(0x64f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0127
        gbc.setState(0xa31a, 0xe013, 0x1970, 0xfbce, 0x8389, 0xbda4, 0x0, 0x1);
        gbc.writeMem(0xa31a, { 0x33 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe014, gbc.sp());
        EXPECT(0xa31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa31a));
        // 33 0128
        gbc.setState(0xc5ae, 0xc18e, 0x5090, 0x2144, 0x4ab4, 0x6e89, 0x1, 0x0);
        gbc.writeMem(0xc5ae, { 0x33 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc18f, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc5ae));
        // 33 0129
        gbc.setState(0x6b14, 0x398a, 0xd8b0, 0x335, 0x7b46, 0x9a4, 0x0, 0x0);
        gbc.writeMem(0x6b14, { 0x33 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x398b, gbc.sp());
        EXPECT(0x6b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 012A
        gbc.setState(0x71f2, 0x93f2, 0x3300, 0xe9e6, 0xc3a6, 0x2dd1, 0x1, 0x1);
        gbc.writeMem(0x71f2, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x93f3, gbc.sp());
        EXPECT(0x71f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 012B
        gbc.setState(0x552b, 0x3472, 0x9cf0, 0xf9ea, 0x27b7, 0xc410, 0x1, 0x1);
        gbc.writeMem(0x552b, { 0x33 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3473, gbc.sp());
        EXPECT(0x552c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 012C
        gbc.setState(0x9199, 0xde2b, 0x8070, 0x1f8, 0xbeed, 0x4398, 0x0, 0x1);
        gbc.writeMem(0x9199, { 0x33 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xde2c, gbc.sp());
        EXPECT(0x919a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9199));
        // 33 012D
        gbc.setState(0x56b1, 0xe96e, 0x4a70, 0xdc3f, 0xff0a, 0x51c0, 0x0, 0x1);
        gbc.writeMem(0x56b1, { 0x33 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe96f, gbc.sp());
        EXPECT(0x56b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 012E
        gbc.setState(0x50b5, 0x8424, 0x6d20, 0x4c13, 0x8587, 0x86ae, 0x0, 0x0);
        gbc.writeMem(0x50b5, { 0x33 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8425, gbc.sp());
        EXPECT(0x50b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 012F
        gbc.setState(0x7673, 0xef1b, 0xe950, 0xf34e, 0x9387, 0x5367, 0x0, 0x1);
        gbc.writeMem(0x7673, { 0x33 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xef1c, gbc.sp());
        EXPECT(0x7674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0130
        gbc.setState(0x961f, 0x8601, 0x2a40, 0xf5ef, 0xdbb5, 0x8749, 0x1, 0x1);
        gbc.writeMem(0x961f, { 0x33 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8602, gbc.sp());
        EXPECT(0x9620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x961f));
        // 33 0131
        gbc.setState(0xad7a, 0xdc88, 0x1b40, 0xdf16, 0xda24, 0xa51f, 0x0, 0x1);
        gbc.writeMem(0xad7a, { 0x33 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdc89, gbc.sp());
        EXPECT(0xad7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xad7a));
        // 33 0132
        gbc.setState(0xaa24, 0x6e4b, 0x4c50, 0x602d, 0x68b7, 0x2337, 0x1, 0x0);
        gbc.writeMem(0xaa24, { 0x33 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6e4c, gbc.sp());
        EXPECT(0xaa25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaa24));
        // 33 0133
        gbc.setState(0x615a, 0xa3ed, 0x4280, 0x4c59, 0xad6d, 0x7404, 0x0, 0x1);
        gbc.writeMem(0x615a, { 0x33 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa3ee, gbc.sp());
        EXPECT(0x615b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0134
        gbc.setState(0x4114, 0x3bec, 0xda90, 0x8169, 0x64a9, 0x4fe6, 0x1, 0x0);
        gbc.writeMem(0x4114, { 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3bed, gbc.sp());
        EXPECT(0x4115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0135
        gbc.setState(0x9d19, 0xf4dd, 0x81e0, 0x49fa, 0xa16b, 0xfc6c, 0x1, 0x1);
        gbc.writeMem(0x9d19, { 0x33 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf4de, gbc.sp());
        EXPECT(0x9d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9d19));
        // 33 0136
        gbc.setState(0x7ebf, 0xa885, 0xf420, 0x174, 0x4f86, 0xb4dd, 0x1, 0x0);
        gbc.writeMem(0x7ebf, { 0x33 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa886, gbc.sp());
        EXPECT(0x7ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0137
        gbc.setState(0x1bad, 0xd9ef, 0xa6f0, 0x2bdb, 0xf101, 0xce00, 0x0, 0x0);
        gbc.writeMem(0x1bad, { 0x33 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd9f0, gbc.sp());
        EXPECT(0x1bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0138
        gbc.setState(0xbeef, 0xd94f, 0x4b20, 0x42f1, 0xb39f, 0x7270, 0x1, 0x1);
        gbc.writeMem(0xbeef, { 0x33 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd950, gbc.sp());
        EXPECT(0xbef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbeef));
        // 33 0139
        gbc.setState(0x22c0, 0xbe6d, 0xe1c0, 0xba13, 0x7748, 0x4dcb, 0x0, 0x1);
        gbc.writeMem(0x22c0, { 0x33 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbe6e, gbc.sp());
        EXPECT(0x22c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 013A
        gbc.setState(0x9438, 0xf966, 0xf3b0, 0x403c, 0x45ab, 0x4497, 0x1, 0x0);
        gbc.writeMem(0x9438, { 0x33 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf967, gbc.sp());
        EXPECT(0x9439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9438));
        // 33 013B
        gbc.setState(0xbbe3, 0x409a, 0xaed0, 0x5818, 0xd9bf, 0xfcd1, 0x1, 0x0);
        gbc.writeMem(0xbbe3, { 0x33 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x409b, gbc.sp());
        EXPECT(0xbbe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbbe3));
        // 33 013C
        gbc.setState(0x3b51, 0x3410, 0x5df0, 0x9d7a, 0x9885, 0x2419, 0x1, 0x1);
        gbc.writeMem(0x3b51, { 0x33 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3411, gbc.sp());
        EXPECT(0x3b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 013D
        gbc.setState(0x7a0d, 0xa775, 0x1c40, 0x297, 0x82e, 0x1cf5, 0x0, 0x0);
        gbc.writeMem(0x7a0d, { 0x33 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa776, gbc.sp());
        EXPECT(0x7a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 013E
        gbc.setState(0xa499, 0x8231, 0xe040, 0xbf40, 0xd2e, 0x1f14, 0x1, 0x0);
        gbc.writeMem(0xa499, { 0x33 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8232, gbc.sp());
        EXPECT(0xa49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa499));
        // 33 013F
        gbc.setState(0x24f8, 0x75a1, 0xefd0, 0x8e94, 0x81a1, 0x7aac, 0x1, 0x1);
        gbc.writeMem(0x24f8, { 0x33 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x75a2, gbc.sp());
        EXPECT(0x24f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0140
        gbc.setState(0x9613, 0xaf87, 0xb880, 0x229c, 0x5b99, 0x93c4, 0x1, 0x0);
        gbc.writeMem(0x9613, { 0x33 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaf88, gbc.sp());
        EXPECT(0x9614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9613));
        // 33 0141
        gbc.setState(0x1377, 0xc8ad, 0x7f10, 0x398c, 0x16cb, 0xb2f8, 0x1, 0x0);
        gbc.writeMem(0x1377, { 0x33 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc8ae, gbc.sp());
        EXPECT(0x1378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0142
        gbc.setState(0xe310, 0x8e9c, 0xdc70, 0xc0fd, 0x9938, 0x6710, 0x0, 0x0);
        gbc.writeMem(0xe310, { 0x33 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8e9d, gbc.sp());
        EXPECT(0xe311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe310));
        // 33 0144
        gbc.setState(0xbd6a, 0x5f8d, 0xd80, 0x9800, 0xdba9, 0x9f02, 0x0, 0x0);
        gbc.writeMem(0xbd6a, { 0x33 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5f8e, gbc.sp());
        EXPECT(0xbd6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbd6a));
        // 33 0145
        gbc.setState(0xe9c0, 0x1ac7, 0xaf30, 0xff93, 0x27e4, 0xdd0a, 0x1, 0x1);
        gbc.writeMem(0xe9c0, { 0x33 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1ac8, gbc.sp());
        EXPECT(0xe9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe9c0));
        // 33 0146
        gbc.setState(0x8e19, 0x42d, 0x8e80, 0xea50, 0xd017, 0x1303, 0x1, 0x1);
        gbc.writeMem(0x8e19, { 0x33 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x42e, gbc.sp());
        EXPECT(0x8e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8e19));
        // 33 0147
        gbc.setState(0x19b8, 0xd999, 0x9040, 0x87d1, 0x54f0, 0x4f3b, 0x1, 0x0);
        gbc.writeMem(0x19b8, { 0x33 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd99a, gbc.sp());
        EXPECT(0x19b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0148
        gbc.setState(0xc253, 0x772, 0xa970, 0xc907, 0x51c8, 0xa322, 0x0, 0x1);
        gbc.writeMem(0xc253, { 0x33 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x773, gbc.sp());
        EXPECT(0xc254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc253));
        // 33 0149
        gbc.setState(0xd8ea, 0x72af, 0x9e50, 0x223, 0x1f90, 0x56d6, 0x1, 0x0);
        gbc.writeMem(0xd8ea, { 0x33 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x72b0, gbc.sp());
        EXPECT(0xd8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd8ea));
        // 33 014A
        gbc.setState(0xdd95, 0x47bc, 0xb4e0, 0x37a5, 0x1b9f, 0x70d8, 0x0, 0x1);
        gbc.writeMem(0xdd95, { 0x33 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x47bd, gbc.sp());
        EXPECT(0xdd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdd95));
        // 33 014B
        gbc.setState(0x5259, 0x640d, 0x8650, 0x325e, 0x2421, 0x914e, 0x0, 0x0);
        gbc.writeMem(0x5259, { 0x33 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x640e, gbc.sp());
        EXPECT(0x525a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 014C
        gbc.setState(0xc2d3, 0x951c, 0x9bb0, 0xe1c, 0xed25, 0x1468, 0x1, 0x1);
        gbc.writeMem(0xc2d3, { 0x33 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x951d, gbc.sp());
        EXPECT(0xc2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc2d3));
        // 33 014D
        gbc.setState(0xcc17, 0xf9ab, 0x3860, 0x7238, 0x2e76, 0x702d, 0x0, 0x0);
        gbc.writeMem(0xcc17, { 0x33 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf9ac, gbc.sp());
        EXPECT(0xcc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcc17));
        // 33 014E
        gbc.setState(0x93da, 0xdf58, 0x4f50, 0x66d1, 0x8511, 0x4aa8, 0x1, 0x0);
        gbc.writeMem(0x93da, { 0x33 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdf59, gbc.sp());
        EXPECT(0x93db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x93da));
        // 33 014F
        gbc.setState(0x4377, 0xc984, 0x4650, 0x7d81, 0x4417, 0xf3a2, 0x1, 0x1);
        gbc.writeMem(0x4377, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc985, gbc.sp());
        EXPECT(0x4378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0150
        gbc.setState(0xb306, 0x768d, 0x9f80, 0xfdf2, 0xbb79, 0x88c0, 0x1, 0x0);
        gbc.writeMem(0xb306, { 0x33 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x768e, gbc.sp());
        EXPECT(0xb307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb306));
        // 33 0151
        gbc.setState(0xc045, 0xdd50, 0xe550, 0x80cc, 0x1e2, 0xce04, 0x1, 0x1);
        gbc.writeMem(0xc045, { 0x33 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdd51, gbc.sp());
        EXPECT(0xc046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc045));
        // 33 0152
        gbc.setState(0x3f13, 0x1229, 0x1db0, 0x2a38, 0xa706, 0x5759, 0x0, 0x0);
        gbc.writeMem(0x3f13, { 0x33 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x122a, gbc.sp());
        EXPECT(0x3f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0153
        gbc.setState(0xa27, 0xaa3c, 0x3a00, 0x5e3, 0xd1c2, 0x3bce, 0x1, 0x0);
        gbc.writeMem(0xa27, { 0x33 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaa3d, gbc.sp());
        EXPECT(0xa28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0154
        gbc.setState(0x2527, 0x5346, 0xf620, 0x8017, 0xae62, 0x20ad, 0x0, 0x1);
        gbc.writeMem(0x2527, { 0x33 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5347, gbc.sp());
        EXPECT(0x2528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0155
        gbc.setState(0x7fff, 0x2f54, 0xb0f0, 0x84fe, 0x7fba, 0x931d, 0x1, 0x1);
        gbc.writeMem(0x7fff, { 0x33 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2f55, gbc.sp());
        EXPECT(0x8000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0156
        gbc.setState(0xd8d6, 0x717c, 0x1220, 0x8333, 0x37b4, 0x9167, 0x1, 0x0);
        gbc.writeMem(0xd8d6, { 0x33 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x717d, gbc.sp());
        EXPECT(0xd8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd8d6));
        // 33 0157
        gbc.setState(0xdd9b, 0x827a, 0x6870, 0x7d62, 0xdd8, 0xdb2a, 0x0, 0x0);
        gbc.writeMem(0xdd9b, { 0x33 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x827b, gbc.sp());
        EXPECT(0xdd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdd9b));
        // 33 0158
        gbc.setState(0xde6, 0x9c3d, 0x3f60, 0x84fa, 0x2328, 0x5f0f, 0x0, 0x0);
        gbc.writeMem(0xde6, { 0x33 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9c3e, gbc.sp());
        EXPECT(0xde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0159
        gbc.setState(0x74af, 0xf2d9, 0x3de0, 0xa9a1, 0x66dd, 0x3e56, 0x0, 0x1);
        gbc.writeMem(0x74af, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf2da, gbc.sp());
        EXPECT(0x74b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 015A
        gbc.setState(0x164c, 0x51fe, 0x1700, 0xfba4, 0x74ec, 0x11e0, 0x0, 0x0);
        gbc.writeMem(0x164c, { 0x33 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x51ff, gbc.sp());
        EXPECT(0x164d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 015B
        gbc.setState(0x97fe, 0xc3a1, 0xc7d0, 0x6f10, 0xf1ac, 0x955b, 0x0, 0x1);
        gbc.writeMem(0x97fe, { 0x33 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc3a2, gbc.sp());
        EXPECT(0x97ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x97fe));
        // 33 015C
        gbc.setState(0x2ee1, 0xfe85, 0x7ea0, 0xaa17, 0x6c72, 0xc050, 0x1, 0x0);
        gbc.writeMem(0x2ee1, { 0x33 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfe86, gbc.sp());
        EXPECT(0x2ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 015D
        gbc.setState(0x1b0c, 0xfbba, 0x8540, 0xf57d, 0x28e2, 0xb761, 0x1, 0x0);
        gbc.writeMem(0x1b0c, { 0x33 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfbbb, gbc.sp());
        EXPECT(0x1b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 015E
        gbc.setState(0x80c7, 0xcff2, 0x44c0, 0xf730, 0x6d1c, 0xebc1, 0x1, 0x0);
        gbc.writeMem(0x80c7, { 0x33 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcff3, gbc.sp());
        EXPECT(0x80c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x80c7));
        // 33 015F
        gbc.setState(0xdde, 0x8eb8, 0xcdb0, 0x2235, 0xde6f, 0x7afb, 0x1, 0x0);
        gbc.writeMem(0xdde, { 0x33 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8eb9, gbc.sp());
        EXPECT(0xddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0160
        gbc.setState(0x91a8, 0xd1b4, 0xc340, 0x7542, 0xfdc2, 0x77fd, 0x0, 0x0);
        gbc.writeMem(0x91a8, { 0x33 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd1b5, gbc.sp());
        EXPECT(0x91a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x91a8));
        // 33 0161
        gbc.setState(0xe2d0, 0x6538, 0x5950, 0x8735, 0xad6, 0x9919, 0x1, 0x0);
        gbc.writeMem(0xe2d0, { 0x33 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6539, gbc.sp());
        EXPECT(0xe2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe2d0));
        // 33 0162
        gbc.setState(0xac41, 0x9012, 0x11a0, 0x9d97, 0x8d3b, 0x8414, 0x1, 0x1);
        gbc.writeMem(0xac41, { 0x33 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9013, gbc.sp());
        EXPECT(0xac42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xac41));
        // 33 0163
        gbc.setState(0x3c92, 0x8f6a, 0x2db0, 0x687a, 0xe7a7, 0x3e4b, 0x1, 0x0);
        gbc.writeMem(0x3c92, { 0x33 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8f6b, gbc.sp());
        EXPECT(0x3c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0164
        gbc.setState(0x39fd, 0x29b5, 0xcce0, 0xf1de, 0x6a1d, 0xddd8, 0x0, 0x0);
        gbc.writeMem(0x39fd, { 0x33 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x29b6, gbc.sp());
        EXPECT(0x39fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0165
        gbc.setState(0x7107, 0x9277, 0xdff0, 0xfad3, 0x29eb, 0x87ec, 0x0, 0x0);
        gbc.writeMem(0x7107, { 0x33 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9278, gbc.sp());
        EXPECT(0x7108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0166
        gbc.setState(0x584d, 0x420, 0x48b0, 0x4360, 0xcb0e, 0xc535, 0x1, 0x1);
        gbc.writeMem(0x584d, { 0x33 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x421, gbc.sp());
        EXPECT(0x584e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0167
        gbc.setState(0x1c13, 0xc855, 0xcc40, 0xf312, 0x3c32, 0xdf3f, 0x0, 0x0);
        gbc.writeMem(0x1c13, { 0x33 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc856, gbc.sp());
        EXPECT(0x1c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0168
        gbc.setState(0xe57c, 0xeb66, 0x2c10, 0x1753, 0xf64e, 0x69ea, 0x1, 0x0);
        gbc.writeMem(0xe57c, { 0x33 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeb67, gbc.sp());
        EXPECT(0xe57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe57c));
        // 33 0169
        gbc.setState(0x3f34, 0x6530, 0x5220, 0xef79, 0x7091, 0xf427, 0x1, 0x0);
        gbc.writeMem(0x3f34, { 0x33 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6531, gbc.sp());
        EXPECT(0x3f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 016A
        gbc.setState(0xd7a1, 0x4ec9, 0x1b50, 0x5991, 0xe936, 0xd4bf, 0x0, 0x1);
        gbc.writeMem(0xd7a1, { 0x33 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4eca, gbc.sp());
        EXPECT(0xd7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd7a1));
        // 33 016B
        gbc.setState(0xb959, 0x2d6a, 0xc690, 0xc01, 0xc718, 0x8a4a, 0x0, 0x0);
        gbc.writeMem(0xb959, { 0x33 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2d6b, gbc.sp());
        EXPECT(0xb95a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb959));
        // 33 016C
        gbc.setState(0xdaad, 0x1474, 0x81c0, 0x3eb0, 0x6c37, 0x8e08, 0x1, 0x0);
        gbc.writeMem(0xdaad, { 0x33 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1475, gbc.sp());
        EXPECT(0xdaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdaad));
        // 33 016E
        gbc.setState(0x8230, 0x2b4e, 0x3d20, 0x4f23, 0x52f2, 0xeee6, 0x0, 0x0);
        gbc.writeMem(0x8230, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2b4f, gbc.sp());
        EXPECT(0x8231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8230));
        // 33 016F
        gbc.setState(0xe453, 0xd3e2, 0x1e00, 0x2835, 0xc1e9, 0xdd68, 0x1, 0x0);
        gbc.writeMem(0xe453, { 0x33 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd3e3, gbc.sp());
        EXPECT(0xe454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe453));
        // 33 0170
        gbc.setState(0x7e57, 0xda59, 0xdd40, 0x2e8b, 0xbfcd, 0xe3fa, 0x1, 0x0);
        gbc.writeMem(0x7e57, { 0x33 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xda5a, gbc.sp());
        EXPECT(0x7e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0171
        gbc.setState(0x7d6c, 0x4add, 0xc280, 0x7e3e, 0x30a, 0x439, 0x1, 0x0);
        gbc.writeMem(0x7d6c, { 0x33 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4ade, gbc.sp());
        EXPECT(0x7d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0172
        gbc.setState(0x3a7e, 0x6950, 0x7be0, 0xa9e5, 0xa6c0, 0xe4d, 0x0, 0x0);
        gbc.writeMem(0x3a7e, { 0x33 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6951, gbc.sp());
        EXPECT(0x3a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0173
        gbc.setState(0x987a, 0x8922, 0x4160, 0x3227, 0xb1c9, 0xed60, 0x1, 0x0);
        gbc.writeMem(0x987a, { 0x33 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8923, gbc.sp());
        EXPECT(0x987b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x987a));
        // 33 0174
        gbc.setState(0xeb87, 0xddd6, 0xa380, 0xd629, 0x59dc, 0x8fc7, 0x1, 0x1);
        gbc.writeMem(0xeb87, { 0x33 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xddd7, gbc.sp());
        EXPECT(0xeb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xeb87));
        // 33 0175
        gbc.setState(0x1418, 0xd7a, 0x2f70, 0x5aa4, 0xe12d, 0x50c1, 0x1, 0x1);
        gbc.writeMem(0x1418, { 0x33 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd7b, gbc.sp());
        EXPECT(0x1419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0176
        gbc.setState(0x4dd1, 0x15ad, 0x9bd0, 0xa415, 0x30cc, 0x1413, 0x0, 0x1);
        gbc.writeMem(0x4dd1, { 0x33 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x15ae, gbc.sp());
        EXPECT(0x4dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0177
        gbc.setState(0x1ff9, 0x92ea, 0xa6f0, 0xda6b, 0x5e2, 0xc864, 0x0, 0x0);
        gbc.writeMem(0x1ff9, { 0x33 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x92eb, gbc.sp());
        EXPECT(0x1ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0178
        gbc.setState(0x5234, 0x2cb8, 0x210, 0x5fc6, 0x76c3, 0xd7fc, 0x0, 0x1);
        gbc.writeMem(0x5234, { 0x33 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2cb9, gbc.sp());
        EXPECT(0x5235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0179
        gbc.setState(0x2c81, 0x3b8c, 0x2fb0, 0x2246, 0x7923, 0x60b0, 0x0, 0x0);
        gbc.writeMem(0x2c81, { 0x33 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3b8d, gbc.sp());
        EXPECT(0x2c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 017A
        gbc.setState(0xabcb, 0xcb04, 0x2440, 0xce50, 0x47d4, 0x4cf4, 0x0, 0x0);
        gbc.writeMem(0xabcb, { 0x33 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcb05, gbc.sp());
        EXPECT(0xabcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xabcb));
        // 33 017B
        gbc.setState(0x733, 0x8f3d, 0x7f40, 0x87d2, 0xee7a, 0xc141, 0x1, 0x0);
        gbc.writeMem(0x733, { 0x33 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8f3e, gbc.sp());
        EXPECT(0x734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 017C
        gbc.setState(0xd90d, 0xe0d0, 0xa6c0, 0xe41b, 0x36d7, 0xcb55, 0x1, 0x0);
        gbc.writeMem(0xd90d, { 0x33 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe0d1, gbc.sp());
        EXPECT(0xd90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd90d));
        // 33 017D
        gbc.setState(0xd97c, 0xf987, 0x6ea0, 0xdf19, 0x74d9, 0x4434, 0x1, 0x0);
        gbc.writeMem(0xd97c, { 0x33 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf988, gbc.sp());
        EXPECT(0xd97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd97c));
        // 33 017E
        gbc.setState(0x43d4, 0xee1d, 0x43c0, 0x11f0, 0x1958, 0x66c7, 0x1, 0x0);
        gbc.writeMem(0x43d4, { 0x33 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xee1e, gbc.sp());
        EXPECT(0x43d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 017F
        gbc.setState(0x88cc, 0x6540, 0x42b0, 0x20ea, 0x75ce, 0xcf31, 0x0, 0x1);
        gbc.writeMem(0x88cc, { 0x33 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6541, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x88cc));
        // 33 0180
        gbc.setState(0x81e2, 0xffc4, 0xb6a0, 0x8e05, 0xc41f, 0x3071, 0x1, 0x1);
        gbc.writeMem(0x81e2, { 0x33 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xffc5, gbc.sp());
        EXPECT(0x81e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x81e2));
        // 33 0181
        gbc.setState(0x5574, 0xe639, 0xa390, 0x27e, 0xc52a, 0xafcc, 0x0, 0x0);
        gbc.writeMem(0x5574, { 0x33 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe63a, gbc.sp());
        EXPECT(0x5575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0182
        gbc.setState(0x24bf, 0x198e, 0x7e10, 0x1b97, 0x30a1, 0xf56a, 0x1, 0x0);
        gbc.writeMem(0x24bf, { 0x33 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x198f, gbc.sp());
        EXPECT(0x24c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0183
        gbc.setState(0x7342, 0x8e0a, 0x4bc0, 0x652b, 0x2f05, 0x7e77, 0x0, 0x1);
        gbc.writeMem(0x7342, { 0x33 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8e0b, gbc.sp());
        EXPECT(0x7343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0184
        gbc.setState(0x57e0, 0x348c, 0xf430, 0xce87, 0xfdd4, 0xb779, 0x0, 0x1);
        gbc.writeMem(0x57e0, { 0x33 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x348d, gbc.sp());
        EXPECT(0x57e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0185
        gbc.setState(0x3118, 0x7235, 0xaf30, 0x8051, 0x908a, 0xa35e, 0x0, 0x1);
        gbc.writeMem(0x3118, { 0x33 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7236, gbc.sp());
        EXPECT(0x3119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0186
        gbc.setState(0xedf1, 0x7cdc, 0xb640, 0x84cf, 0x219a, 0xf290, 0x0, 0x1);
        gbc.writeMem(0xedf1, { 0x33 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7cdd, gbc.sp());
        EXPECT(0xedf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xedf1));
        // 33 0187
        gbc.setState(0xbd88, 0xb523, 0xd220, 0x30bb, 0xe61f, 0x4662, 0x0, 0x1);
        gbc.writeMem(0xbd88, { 0x33 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb524, gbc.sp());
        EXPECT(0xbd89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbd88));
        // 33 0188
        gbc.setState(0x2f2b, 0x5982, 0x680, 0x2b23, 0x1ce6, 0xbae8, 0x0, 0x1);
        gbc.writeMem(0x2f2b, { 0x33 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5983, gbc.sp());
        EXPECT(0x2f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0189
        gbc.setState(0xbb9d, 0x43e9, 0x6a70, 0x745c, 0x6d8f, 0xdb0d, 0x0, 0x1);
        gbc.writeMem(0xbb9d, { 0x33 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x43ea, gbc.sp());
        EXPECT(0xbb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbb9d));
        // 33 018A
        gbc.setState(0xcc11, 0x70d4, 0xb100, 0x39dd, 0x4012, 0x1fd2, 0x1, 0x1);
        gbc.writeMem(0xcc11, { 0x33 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x70d5, gbc.sp());
        EXPECT(0xcc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcc11));
        // 33 018B
        gbc.setState(0x7cdf, 0x1a20, 0xe290, 0xbe61, 0xc879, 0xb86d, 0x1, 0x1);
        gbc.writeMem(0x7cdf, { 0x33 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1a21, gbc.sp());
        EXPECT(0x7ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 018D
        gbc.setState(0xc9f, 0x904e, 0xe760, 0x304d, 0x97cf, 0x609e, 0x0, 0x1);
        gbc.writeMem(0xc9f, { 0x33 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x904f, gbc.sp());
        EXPECT(0xca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 018E
        gbc.setState(0x8a3d, 0xbe14, 0xb960, 0x9615, 0xe276, 0x74cd, 0x1, 0x1);
        gbc.writeMem(0x8a3d, { 0x33 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbe15, gbc.sp());
        EXPECT(0x8a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8a3d));
        // 33 018F
        gbc.setState(0xaf44, 0x7bb7, 0x7270, 0xb741, 0x3eb7, 0xfa91, 0x0, 0x1);
        gbc.writeMem(0xaf44, { 0x33 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7bb8, gbc.sp());
        EXPECT(0xaf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaf44));
        // 33 0191
        gbc.setState(0xdcc6, 0xcc4b, 0x3db0, 0xd8ac, 0x2029, 0x8484, 0x1, 0x1);
        gbc.writeMem(0xdcc6, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcc4c, gbc.sp());
        EXPECT(0xdcc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdcc6));
        // 33 0192
        gbc.setState(0xe8a9, 0x61b5, 0x79a0, 0xb5a6, 0x9587, 0x7c3d, 0x1, 0x1);
        gbc.writeMem(0xe8a9, { 0x33 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x61b6, gbc.sp());
        EXPECT(0xe8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe8a9));
        // 33 0194
        gbc.setState(0xb71e, 0xf9ba, 0x43c0, 0x8ce, 0x727a, 0x2d1c, 0x1, 0x0);
        gbc.writeMem(0xb71e, { 0x33 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf9bb, gbc.sp());
        EXPECT(0xb71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb71e));
        // 33 0195
        gbc.setState(0xbf3f, 0xa990, 0xc910, 0xa046, 0xae61, 0x8556, 0x1, 0x1);
        gbc.writeMem(0xbf3f, { 0x33 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa991, gbc.sp());
        EXPECT(0xbf40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbf3f));
        // 33 0196
        gbc.setState(0xd8e2, 0xf1dd, 0xf080, 0x1184, 0xa450, 0x4c9c, 0x1, 0x1);
        gbc.writeMem(0xd8e2, { 0x33 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf1de, gbc.sp());
        EXPECT(0xd8e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd8e2));
        // 33 0197
        gbc.setState(0x6fdf, 0xeaa5, 0x5840, 0x6edb, 0xdc61, 0xb8f3, 0x0, 0x1);
        gbc.writeMem(0x6fdf, { 0x33 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xeaa6, gbc.sp());
        EXPECT(0x6fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0198
        gbc.setState(0x7ef0, 0x6cde, 0x7800, 0xf4b, 0x106b, 0x4bab, 0x0, 0x1);
        gbc.writeMem(0x7ef0, { 0x33 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6cdf, gbc.sp());
        EXPECT(0x7ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0199
        gbc.setState(0x565f, 0x5bc1, 0x3c30, 0x6001, 0x2a76, 0x86fa, 0x1, 0x1);
        gbc.writeMem(0x565f, { 0x33 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5bc2, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 019A
        gbc.setState(0x9b2e, 0xd45d, 0xde00, 0x1a70, 0xa986, 0x6f8d, 0x1, 0x0);
        gbc.writeMem(0x9b2e, { 0x33 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd45e, gbc.sp());
        EXPECT(0x9b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9b2e));
        // 33 019D
        gbc.setState(0x4adc, 0x83fd, 0x9e90, 0xdb83, 0x4ef3, 0x919, 0x1, 0x1);
        gbc.writeMem(0x4adc, { 0x33 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x83fe, gbc.sp());
        EXPECT(0x4add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 019E
        gbc.setState(0xce86, 0x546e, 0xca80, 0x1e00, 0x97d2, 0x50eb, 0x1, 0x0);
        gbc.writeMem(0xce86, { 0x33 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x546f, gbc.sp());
        EXPECT(0xce87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xce86));
        // 33 019F
        gbc.setState(0x18ac, 0x9fdf, 0xf630, 0x660e, 0x416a, 0x2606, 0x1, 0x1);
        gbc.writeMem(0x18ac, { 0x33 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9fe0, gbc.sp());
        EXPECT(0x18ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01A0
        gbc.setState(0x2ac3, 0x7f69, 0x10a0, 0x58b0, 0xa519, 0x5813, 0x0, 0x0);
        gbc.writeMem(0x2ac3, { 0x33 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7f6a, gbc.sp());
        EXPECT(0x2ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01A1
        gbc.setState(0x935b, 0x107c, 0xc5d0, 0x92ee, 0x3cc0, 0x5f92, 0x1, 0x1);
        gbc.writeMem(0x935b, { 0x33 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x107d, gbc.sp());
        EXPECT(0x935c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x935b));
        // 33 01A2
        gbc.setState(0x97e3, 0x544e, 0x3230, 0x7c8a, 0xb55d, 0x23f9, 0x0, 0x0);
        gbc.writeMem(0x97e3, { 0x33 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x544f, gbc.sp());
        EXPECT(0x97e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x97e3));
        // 33 01A3
        gbc.setState(0x778a, 0xcb45, 0x8a70, 0x26db, 0x1db, 0xcd6c, 0x1, 0x0);
        gbc.writeMem(0x778a, { 0x33 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcb46, gbc.sp());
        EXPECT(0x778b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01A5
        gbc.setState(0xda79, 0x80aa, 0x7150, 0x4fe6, 0x7c73, 0xb2a2, 0x0, 0x0);
        gbc.writeMem(0xda79, { 0x33 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x80ab, gbc.sp());
        EXPECT(0xda7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xda79));
        // 33 01A6
        gbc.setState(0x975f, 0x4484, 0x3bc0, 0xd7f, 0x669f, 0x7df1, 0x0, 0x1);
        gbc.writeMem(0x975f, { 0x33 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4485, gbc.sp());
        EXPECT(0x9760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x975f));
        // 33 01A7
        gbc.setState(0xa668, 0x2d9c, 0x17b0, 0x898d, 0x81c8, 0xc0a2, 0x0, 0x0);
        gbc.writeMem(0xa668, { 0x33 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0xa669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa668));
        // 33 01A8
        gbc.setState(0x4ca1, 0x2a5f, 0x84c0, 0x78, 0xa461, 0x4bd5, 0x0, 0x1);
        gbc.writeMem(0x4ca1, { 0x33 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2a60, gbc.sp());
        EXPECT(0x4ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01A9
        gbc.setState(0x34ef, 0x8a77, 0x410, 0x1b66, 0xfe82, 0x2e2c, 0x1, 0x1);
        gbc.writeMem(0x34ef, { 0x33 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0x34f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01AA
        gbc.setState(0x6e1e, 0x85fb, 0xcb00, 0x43ab, 0xbd0d, 0x354a, 0x1, 0x0);
        gbc.writeMem(0x6e1e, { 0x33 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x85fc, gbc.sp());
        EXPECT(0x6e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01AB
        gbc.setState(0x642, 0xc35e, 0x98b0, 0x46af, 0xe810, 0x4574, 0x1, 0x1);
        gbc.writeMem(0x642, { 0x33 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc35f, gbc.sp());
        EXPECT(0x643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01AC
        gbc.setState(0x98f8, 0x8932, 0xf000, 0x94fd, 0x48a4, 0xbb1c, 0x1, 0x1);
        gbc.writeMem(0x98f8, { 0x33 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8933, gbc.sp());
        EXPECT(0x98f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x98f8));
        // 33 01AE
        gbc.setState(0x5d52, 0x6f1b, 0x8340, 0x4d56, 0xb8b6, 0x57d7, 0x0, 0x1);
        gbc.writeMem(0x5d52, { 0x33 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6f1c, gbc.sp());
        EXPECT(0x5d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01AF
        gbc.setState(0xd9eb, 0xce02, 0xc9c0, 0x161e, 0xeba4, 0xa876, 0x0, 0x1);
        gbc.writeMem(0xd9eb, { 0x33 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xce03, gbc.sp());
        EXPECT(0xd9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd9eb));
        // 33 01B0
        gbc.setState(0x22c0, 0x7f54, 0xa0c0, 0xdaa7, 0xbc3a, 0x3dab, 0x1, 0x1);
        gbc.writeMem(0x22c0, { 0x33 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7f55, gbc.sp());
        EXPECT(0x22c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01B1
        gbc.setState(0x91dc, 0xdf5d, 0x5470, 0x3d7b, 0xc89a, 0x93b8, 0x0, 0x1);
        gbc.writeMem(0x91dc, { 0x33 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdf5e, gbc.sp());
        EXPECT(0x91dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x91dc));
        // 33 01B2
        gbc.setState(0x213e, 0x4fa9, 0x7680, 0xec6a, 0x2b1c, 0x1408, 0x0, 0x0);
        gbc.writeMem(0x213e, { 0x33 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4faa, gbc.sp());
        EXPECT(0x213f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01B3
        gbc.setState(0x2c4b, 0xafb5, 0xb7f0, 0x6d02, 0xfb7, 0x4ff2, 0x0, 0x1);
        gbc.writeMem(0x2c4b, { 0x33 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xafb6, gbc.sp());
        EXPECT(0x2c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01B4
        gbc.setState(0xb172, 0x6668, 0x2880, 0x696c, 0xa3b1, 0xa504, 0x0, 0x0);
        gbc.writeMem(0xb172, { 0x33 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6669, gbc.sp());
        EXPECT(0xb173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb172));
        // 33 01B5
        gbc.setState(0x127e, 0x6d31, 0x9480, 0xb803, 0x44ca, 0x4beb, 0x0, 0x1);
        gbc.writeMem(0x127e, { 0x33 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6d32, gbc.sp());
        EXPECT(0x127f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01B6
        gbc.setState(0xaa61, 0xa562, 0x46e0, 0xcc68, 0x5912, 0x9c37, 0x1, 0x1);
        gbc.writeMem(0xaa61, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa563, gbc.sp());
        EXPECT(0xaa62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaa61));
        // 33 01B7
        gbc.setState(0x3f0c, 0xb5e6, 0xacb0, 0x3bb2, 0x7726, 0x1421, 0x1, 0x1);
        gbc.writeMem(0x3f0c, { 0x33 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb5e7, gbc.sp());
        EXPECT(0x3f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01B8
        gbc.setState(0x4ce7, 0xf496, 0x2730, 0x4d5b, 0x574, 0xbef0, 0x0, 0x0);
        gbc.writeMem(0x4ce7, { 0x33 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf497, gbc.sp());
        EXPECT(0x4ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01BA
        gbc.setState(0x4f8, 0x23f6, 0xe0e0, 0xf662, 0x66bb, 0xe774, 0x1, 0x1);
        gbc.writeMem(0x4f8, { 0x33 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x23f7, gbc.sp());
        EXPECT(0x4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01BB
        gbc.setState(0x81f2, 0xf410, 0xcba0, 0x598d, 0xa13c, 0x6280, 0x0, 0x1);
        gbc.writeMem(0x81f2, { 0x33 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf411, gbc.sp());
        EXPECT(0x81f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x81f2));
        // 33 01BC
        gbc.setState(0x7776, 0x6c38, 0xe830, 0x5cb8, 0x51da, 0xaaf9, 0x1, 0x0);
        gbc.writeMem(0x7776, { 0x33 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6c39, gbc.sp());
        EXPECT(0x7777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01BE
        gbc.setState(0x42b3, 0x205, 0x1520, 0x7697, 0x44d4, 0x470c, 0x1, 0x1);
        gbc.writeMem(0x42b3, { 0x33 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x206, gbc.sp());
        EXPECT(0x42b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01BF
        gbc.setState(0x91fd, 0xc812, 0xe790, 0x4971, 0x2251, 0x72a7, 0x1, 0x0);
        gbc.writeMem(0x91fd, { 0x33 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc813, gbc.sp());
        EXPECT(0x91fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x91fd));
        // 33 01C1
        gbc.setState(0xa972, 0x5d86, 0xc470, 0xfb6d, 0x2c0b, 0x3b7c, 0x1, 0x1);
        gbc.writeMem(0xa972, { 0x33 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5d87, gbc.sp());
        EXPECT(0xa973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa972));
        // 33 01C2
        gbc.setState(0x9720, 0x7afc, 0x7880, 0x6c4b, 0x2985, 0x7dbb, 0x1, 0x1);
        gbc.writeMem(0x9720, { 0x33 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7afd, gbc.sp());
        EXPECT(0x9721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9720));
        // 33 01C3
        gbc.setState(0x57a0, 0x1ff, 0xc5e0, 0xca51, 0xe319, 0x6448, 0x1, 0x1);
        gbc.writeMem(0x57a0, { 0x33 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x200, gbc.sp());
        EXPECT(0x57a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01C4
        gbc.setState(0x4f0b, 0x1036, 0xc500, 0xffb4, 0xea7a, 0x4073, 0x1, 0x0);
        gbc.writeMem(0x4f0b, { 0x33 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1037, gbc.sp());
        EXPECT(0x4f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01C5
        gbc.setState(0x9d66, 0x9767, 0x2610, 0x5252, 0x3ec7, 0x559a, 0x0, 0x0);
        gbc.writeMem(0x9d66, { 0x33 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9768, gbc.sp());
        EXPECT(0x9d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9d66));
        // 33 01C6
        gbc.setState(0x3852, 0x54c4, 0xeae0, 0xe4b8, 0xb413, 0xc249, 0x1, 0x0);
        gbc.writeMem(0x3852, { 0x33 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x54c5, gbc.sp());
        EXPECT(0x3853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01C7
        gbc.setState(0x4c13, 0xcce8, 0x1350, 0xefe1, 0xf039, 0x7073, 0x0, 0x1);
        gbc.writeMem(0x4c13, { 0x33 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcce9, gbc.sp());
        EXPECT(0x4c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01C8
        gbc.setState(0x9f05, 0xed6, 0x9d10, 0xcf74, 0x8b25, 0xdd8f, 0x1, 0x0);
        gbc.writeMem(0x9f05, { 0x33 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xed7, gbc.sp());
        EXPECT(0x9f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9f05));
        // 33 01C9
        gbc.setState(0xa873, 0xa477, 0x5750, 0x5a77, 0xffca, 0xc72d, 0x1, 0x0);
        gbc.writeMem(0xa873, { 0x33 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa478, gbc.sp());
        EXPECT(0xa874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa873));
        // 33 01CA
        gbc.setState(0x578f, 0x34d1, 0xf8a0, 0xc4d9, 0x4744, 0x6d4, 0x1, 0x1);
        gbc.writeMem(0x578f, { 0x33 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x34d2, gbc.sp());
        EXPECT(0x5790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01CB
        gbc.setState(0xcab, 0x3167, 0xe310, 0xec06, 0x85c, 0x79fc, 0x0, 0x0);
        gbc.writeMem(0xcab, { 0x33 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3168, gbc.sp());
        EXPECT(0xcac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01CC
        gbc.setState(0xc9a2, 0x7ea6, 0x7410, 0x4a56, 0x5e37, 0x3dec, 0x1, 0x0);
        gbc.writeMem(0xc9a2, { 0x33 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7ea7, gbc.sp());
        EXPECT(0xc9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc9a2));
        // 33 01CD
        gbc.setState(0x123, 0xbf5e, 0x30e0, 0xe0aa, 0x216a, 0x143b, 0x1, 0x0);
        gbc.writeMem(0x123, { 0x33 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbf5f, gbc.sp());
        EXPECT(0x124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01CE
        gbc.setState(0xcd2d, 0x6437, 0x7d10, 0x4ad, 0xdf09, 0x7eec, 0x0, 0x1);
        gbc.writeMem(0xcd2d, { 0x33 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6438, gbc.sp());
        EXPECT(0xcd2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcd2d));
        // 33 01CF
        gbc.setState(0x5da1, 0x2781, 0x6dd0, 0x82ac, 0xa54e, 0x3143, 0x1, 0x1);
        gbc.writeMem(0x5da1, { 0x33 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2782, gbc.sp());
        EXPECT(0x5da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01D0
        gbc.setState(0x58bb, 0xdb3c, 0xcf70, 0x85d0, 0x482, 0x2534, 0x1, 0x0);
        gbc.writeMem(0x58bb, { 0x33 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdb3d, gbc.sp());
        EXPECT(0x58bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01D1
        gbc.setState(0x302b, 0xa96e, 0x4e70, 0x1d68, 0x643f, 0xdb00, 0x1, 0x0);
        gbc.writeMem(0x302b, { 0x33 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa96f, gbc.sp());
        EXPECT(0x302c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01D2
        gbc.setState(0x5fc7, 0x8603, 0x44c0, 0xfc4e, 0xf8fc, 0xb8bc, 0x0, 0x1);
        gbc.writeMem(0x5fc7, { 0x33 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0x5fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01D3
        gbc.setState(0x8160, 0x5772, 0xca90, 0x1091, 0x91f5, 0x4f89, 0x1, 0x1);
        gbc.writeMem(0x8160, { 0x33 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5773, gbc.sp());
        EXPECT(0x8161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8160));
        // 33 01D4
        gbc.setState(0xaa3e, 0xb9d3, 0xc920, 0x80fb, 0x52ff, 0x899, 0x1, 0x1);
        gbc.writeMem(0xaa3e, { 0x33 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb9d4, gbc.sp());
        EXPECT(0xaa3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaa3e));
        // 33 01D5
        gbc.setState(0xad4a, 0xddb2, 0x6c90, 0x431b, 0x9687, 0xf1ca, 0x0, 0x0);
        gbc.writeMem(0xad4a, { 0x33 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xddb3, gbc.sp());
        EXPECT(0xad4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xad4a));
        // 33 01D6
        gbc.setState(0x94c6, 0x872f, 0x8090, 0xb13e, 0x197b, 0x24d, 0x0, 0x0);
        gbc.writeMem(0x94c6, { 0x33 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8730, gbc.sp());
        EXPECT(0x94c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x94c6));
        // 33 01D8
        gbc.setState(0xc48, 0x1927, 0x3f0, 0x5af9, 0x5694, 0x6779, 0x0, 0x0);
        gbc.writeMem(0xc48, { 0x33 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1928, gbc.sp());
        EXPECT(0xc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01D9
        gbc.setState(0x66f6, 0x6039, 0x220, 0x8227, 0x1644, 0x3f61, 0x1, 0x1);
        gbc.writeMem(0x66f6, { 0x33 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x603a, gbc.sp());
        EXPECT(0x66f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01DA
        gbc.setState(0xaaab, 0x9bd5, 0x3db0, 0xec94, 0x36d2, 0x416a, 0x1, 0x0);
        gbc.writeMem(0xaaab, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9bd6, gbc.sp());
        EXPECT(0xaaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaaab));
        // 33 01DB
        gbc.setState(0xa4d8, 0xa4f8, 0x120, 0xf829, 0x1332, 0x92df, 0x0, 0x1);
        gbc.writeMem(0xa4d8, { 0x33 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa4f9, gbc.sp());
        EXPECT(0xa4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa4d8));
        // 33 01DC
        gbc.setState(0x2a2a, 0x7cd6, 0xe2a0, 0xb2e3, 0xfb3c, 0x805, 0x0, 0x0);
        gbc.writeMem(0x2a2a, { 0x33 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7cd7, gbc.sp());
        EXPECT(0x2a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01DD
        gbc.setState(0xe3e, 0x9e8d, 0x1830, 0x773d, 0x5999, 0xda60, 0x1, 0x0);
        gbc.writeMem(0xe3e, { 0x33 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9e8e, gbc.sp());
        EXPECT(0xe3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01DE
        gbc.setState(0x22cf, 0xbe3a, 0xa420, 0xe469, 0x42ca, 0x934a, 0x1, 0x1);
        gbc.writeMem(0x22cf, { 0x33 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbe3b, gbc.sp());
        EXPECT(0x22d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01DF
        gbc.setState(0x16d, 0xc9bf, 0xa530, 0x86cc, 0x20c3, 0x5d6e, 0x1, 0x1);
        gbc.writeMem(0x16d, { 0x33 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc9c0, gbc.sp());
        EXPECT(0x16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01E0
        gbc.setState(0xa66c, 0xc971, 0x9fc0, 0xce19, 0xc340, 0x3f4d, 0x0, 0x1);
        gbc.writeMem(0xa66c, { 0x33 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc972, gbc.sp());
        EXPECT(0xa66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa66c));
        // 33 01E2
        gbc.setState(0x5e4a, 0xb108, 0x5010, 0xffe, 0xd8fa, 0x3ee8, 0x1, 0x0);
        gbc.writeMem(0x5e4a, { 0x33 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb109, gbc.sp());
        EXPECT(0x5e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01E3
        gbc.setState(0x1af, 0x8000, 0xa90, 0x65b6, 0xdaab, 0xa931, 0x0, 0x0);
        gbc.writeMem(0x1af, { 0x33 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8001, gbc.sp());
        EXPECT(0x1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01E4
        gbc.setState(0xeed0, 0xbc8f, 0x1ed0, 0xbfdb, 0xf6ed, 0x685a, 0x0, 0x0);
        gbc.writeMem(0xeed0, { 0x33 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbc90, gbc.sp());
        EXPECT(0xeed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xeed0));
        // 33 01E6
        gbc.setState(0xc261, 0xeda, 0x9ba0, 0x3dd8, 0xb995, 0xaf49, 0x0, 0x1);
        gbc.writeMem(0xc261, { 0x33 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xedb, gbc.sp());
        EXPECT(0xc262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc261));
        // 33 01E7
        gbc.setState(0xd294, 0xed0a, 0x7560, 0x84a2, 0x43cd, 0x437, 0x0, 0x0);
        gbc.writeMem(0xd294, { 0x33 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0xd295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd294));
        // 33 01E8
        gbc.setState(0xad65, 0x1582, 0xad60, 0x2a40, 0x5035, 0xb3ce, 0x1, 0x1);
        gbc.writeMem(0xad65, { 0x33 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1583, gbc.sp());
        EXPECT(0xad66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xad65));
        // 33 01E9
        gbc.setState(0xaadf, 0xafc6, 0x7020, 0x471d, 0x946a, 0x9e83, 0x1, 0x0);
        gbc.writeMem(0xaadf, { 0x33 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xafc7, gbc.sp());
        EXPECT(0xaae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaadf));
        // 33 01EA
        gbc.setState(0x84dc, 0x1b6a, 0xeaf0, 0x492e, 0x256, 0x70bf, 0x1, 0x1);
        gbc.writeMem(0x84dc, { 0x33 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1b6b, gbc.sp());
        EXPECT(0x84dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x84dc));
        // 33 01EB
        gbc.setState(0x9c76, 0xc82, 0x9e80, 0xfa73, 0x8b85, 0x45be, 0x0, 0x0);
        gbc.writeMem(0x9c76, { 0x33 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc83, gbc.sp());
        EXPECT(0x9c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9c76));
        // 33 01EC
        gbc.setState(0x6a3, 0x419a, 0x6fb0, 0x4c92, 0x8ba5, 0x4a6f, 0x0, 0x0);
        gbc.writeMem(0x6a3, { 0x33 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x419b, gbc.sp());
        EXPECT(0x6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01ED
        gbc.setState(0xe554, 0xba9b, 0x8870, 0xb804, 0xb163, 0xb97f, 0x0, 0x0);
        gbc.writeMem(0xe554, { 0x33 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xba9c, gbc.sp());
        EXPECT(0xe555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe554));
        // 33 01EE
        gbc.setState(0x6b86, 0x8ece, 0x660, 0x5f37, 0x803, 0x3ac3, 0x1, 0x0);
        gbc.writeMem(0x6b86, { 0x33 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8ecf, gbc.sp());
        EXPECT(0x6b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01EF
        gbc.setState(0xe997, 0x18c1, 0xd4c0, 0x372b, 0x4ba0, 0xdfe, 0x1, 0x1);
        gbc.writeMem(0xe997, { 0x33 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x18c2, gbc.sp());
        EXPECT(0xe998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe997));
        // 33 01F0
        gbc.setState(0x3738, 0x5602, 0xe650, 0xc984, 0x8dbc, 0x101a, 0x0, 0x0);
        gbc.writeMem(0x3738, { 0x33 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5603, gbc.sp());
        EXPECT(0x3739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01F1
        gbc.setState(0xac71, 0x5f8a, 0x20, 0x4036, 0x5aa0, 0x7598, 0x1, 0x0);
        gbc.writeMem(0xac71, { 0x33 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5f8b, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xac71));
        // 33 01F2
        gbc.setState(0x24fb, 0xd1c2, 0x3a50, 0x470a, 0x1b57, 0xe8b1, 0x0, 0x0);
        gbc.writeMem(0x24fb, { 0x33 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd1c3, gbc.sp());
        EXPECT(0x24fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01F3
        gbc.setState(0x1cf7, 0x9141, 0x3160, 0x68e, 0xf9e2, 0x7cfd, 0x1, 0x1);
        gbc.writeMem(0x1cf7, { 0x33 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9142, gbc.sp());
        EXPECT(0x1cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01F4
        gbc.setState(0x6cee, 0x2e46, 0xba50, 0x8725, 0x3288, 0x7060, 0x0, 0x1);
        gbc.writeMem(0x6cee, { 0x33 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2e47, gbc.sp());
        EXPECT(0x6cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01F5
        gbc.setState(0x92f6, 0xdce3, 0x24f0, 0xb722, 0x67e3, 0x5e3b, 0x1, 0x1);
        gbc.writeMem(0x92f6, { 0x33 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdce4, gbc.sp());
        EXPECT(0x92f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x92f6));
        // 33 01F6
        gbc.setState(0xedf5, 0x5f83, 0x5fb0, 0x12bd, 0xda5b, 0x5bc3, 0x0, 0x0);
        gbc.writeMem(0xedf5, { 0x33 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5f84, gbc.sp());
        EXPECT(0xedf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xedf5));
        // 33 01F7
        gbc.setState(0x9e79, 0x4469, 0x1640, 0xc5dc, 0x6c0d, 0x14a4, 0x0, 0x0);
        gbc.writeMem(0x9e79, { 0x33 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x446a, gbc.sp());
        EXPECT(0x9e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9e79));
        // 33 01F8
        gbc.setState(0x7b1e, 0x53d1, 0xccc0, 0x7944, 0x21f2, 0xec0d, 0x0, 0x0);
        gbc.writeMem(0x7b1e, { 0x33 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x53d2, gbc.sp());
        EXPECT(0x7b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01F9
        gbc.setState(0x2854, 0xbd39, 0x3bf0, 0xf18c, 0x5983, 0xb02a, 0x1, 0x0);
        gbc.writeMem(0x2854, { 0x33 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbd3a, gbc.sp());
        EXPECT(0x2855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01FA
        gbc.setState(0xd001, 0x4c06, 0xc570, 0xd6d, 0xb462, 0xdfc3, 0x0, 0x1);
        gbc.writeMem(0xd001, { 0x33 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4c07, gbc.sp());
        EXPECT(0xd002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd001));
        // 33 01FB
        gbc.setState(0x61a2, 0x9f0f, 0xa5e0, 0x90a8, 0x5e6, 0xd2cb, 0x0, 0x0);
        gbc.writeMem(0x61a2, { 0x33 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9f10, gbc.sp());
        EXPECT(0x61a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 01FC
        gbc.setState(0x7ea4, 0xd8f0, 0x7110, 0x4274, 0xf789, 0xfe5e, 0x0, 0x1);
        gbc.writeMem(0x7ea4, { 0x33 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd8f1, gbc.sp());
        EXPECT(0x7ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01FD
        gbc.setState(0xe0b6, 0x5f82, 0xe750, 0x4662, 0xadc6, 0x9dc, 0x0, 0x1);
        gbc.writeMem(0xe0b6, { 0x33 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5f83, gbc.sp());
        EXPECT(0xe0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe0b6));
        // 33 01FE
        gbc.setState(0x23d9, 0xe586, 0x9c70, 0x7c96, 0x3131, 0x1266, 0x1, 0x1);
        gbc.writeMem(0x23d9, { 0x33 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe587, gbc.sp());
        EXPECT(0x23da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 01FF
        gbc.setState(0xa7ac, 0x2bbc, 0x94e0, 0x5c0b, 0x3418, 0x305b, 0x1, 0x1);
        gbc.writeMem(0xa7ac, { 0x33 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2bbd, gbc.sp());
        EXPECT(0xa7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa7ac));
        // 33 0200
        gbc.setState(0x9e1f, 0xb521, 0x5cf0, 0x2bd5, 0x4712, 0x5662, 0x0, 0x1);
        gbc.writeMem(0x9e1f, { 0x33 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb522, gbc.sp());
        EXPECT(0x9e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9e1f));
        // 33 0201
        gbc.setState(0x23ee, 0x19be, 0xcb60, 0x3a55, 0x15de, 0x2998, 0x0, 0x0);
        gbc.writeMem(0x23ee, { 0x33 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x19bf, gbc.sp());
        EXPECT(0x23ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0202
        gbc.setState(0x9f52, 0x5cc5, 0xda50, 0x6450, 0x9b9c, 0x5669, 0x1, 0x0);
        gbc.writeMem(0x9f52, { 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5cc6, gbc.sp());
        EXPECT(0x9f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9f52));
        // 33 0203
        gbc.setState(0xbe14, 0x2bb2, 0xfa70, 0x8577, 0xbef7, 0x62d5, 0x0, 0x0);
        gbc.writeMem(0xbe14, { 0x33 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2bb3, gbc.sp());
        EXPECT(0xbe15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbe14));
        // 33 0204
        gbc.setState(0x8bd7, 0x130a, 0x6380, 0x6b14, 0x5bda, 0x2e6d, 0x1, 0x0);
        gbc.writeMem(0x8bd7, { 0x33 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x130b, gbc.sp());
        EXPECT(0x8bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8bd7));
        // 33 0206
        gbc.setState(0x5c6c, 0x5418, 0x3100, 0x3b75, 0x72b8, 0xa413, 0x0, 0x1);
        gbc.writeMem(0x5c6c, { 0x33 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5419, gbc.sp());
        EXPECT(0x5c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0207
        gbc.setState(0x86d2, 0xcd6e, 0xd270, 0xd1fa, 0x5c57, 0x6bac, 0x1, 0x1);
        gbc.writeMem(0x86d2, { 0x33 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcd6f, gbc.sp());
        EXPECT(0x86d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x86d2));
        // 33 0208
        gbc.setState(0xe07c, 0x5ea7, 0x64b0, 0x71b3, 0x20ab, 0x75c, 0x1, 0x1);
        gbc.writeMem(0xe07c, { 0x33 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5ea8, gbc.sp());
        EXPECT(0xe07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe07c));
        // 33 0209
        gbc.setState(0x5dbd, 0x1637, 0x690, 0x7b11, 0x429e, 0xd8a8, 0x0, 0x0);
        gbc.writeMem(0x5dbd, { 0x33 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1638, gbc.sp());
        EXPECT(0x5dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 020A
        gbc.setState(0x7196, 0x5329, 0x5010, 0x9e81, 0x1c7d, 0x57e7, 0x1, 0x0);
        gbc.writeMem(0x7196, { 0x33 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x532a, gbc.sp());
        EXPECT(0x7197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 020B
        gbc.setState(0x964b, 0x6f3, 0xdac0, 0xe946, 0x6c0a, 0xd316, 0x1, 0x1);
        gbc.writeMem(0x964b, { 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6f4, gbc.sp());
        EXPECT(0x964c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x964b));
        // 33 020C
        gbc.setState(0x173b, 0x94be, 0x1a60, 0x584f, 0xe0df, 0x1233, 0x0, 0x1);
        gbc.writeMem(0x173b, { 0x33 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x94bf, gbc.sp());
        EXPECT(0x173c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 020D
        gbc.setState(0x62d9, 0xf31e, 0xecb0, 0xc6f0, 0x2090, 0x1249, 0x0, 0x1);
        gbc.writeMem(0x62d9, { 0x33 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf31f, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 020E
        gbc.setState(0x1c09, 0xe037, 0x6240, 0x1afa, 0xea07, 0xf9a0, 0x1, 0x1);
        gbc.writeMem(0x1c09, { 0x33 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe038, gbc.sp());
        EXPECT(0x1c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 020F
        gbc.setState(0xc605, 0x1af2, 0xfec0, 0xfa9a, 0xf711, 0xfd93, 0x1, 0x1);
        gbc.writeMem(0xc605, { 0x33 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1af3, gbc.sp());
        EXPECT(0xc606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc605));
        // 33 0210
        gbc.setState(0xdda7, 0x4d56, 0xecc0, 0xd63c, 0x4078, 0x783, 0x0, 0x0);
        gbc.writeMem(0xdda7, { 0x33 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4d57, gbc.sp());
        EXPECT(0xdda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdda7));
        // 33 0211
        gbc.setState(0x5043, 0xc52b, 0x8500, 0xa412, 0x377, 0x5454, 0x1, 0x0);
        gbc.writeMem(0x5043, { 0x33 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc52c, gbc.sp());
        EXPECT(0x5044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0212
        gbc.setState(0x1675, 0xda62, 0xadc0, 0xce96, 0x3bf, 0x3ee2, 0x1, 0x0);
        gbc.writeMem(0x1675, { 0x33 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xda63, gbc.sp());
        EXPECT(0x1676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0213
        gbc.setState(0x47c9, 0x7c6c, 0xc380, 0x8e41, 0x9700, 0xbcd, 0x1, 0x1);
        gbc.writeMem(0x47c9, { 0x33 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7c6d, gbc.sp());
        EXPECT(0x47ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0214
        gbc.setState(0x8ddd, 0x5613, 0x43b0, 0xe16c, 0xb53c, 0xbfff, 0x1, 0x1);
        gbc.writeMem(0x8ddd, { 0x33 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5614, gbc.sp());
        EXPECT(0x8dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8ddd));
        // 33 0215
        gbc.setState(0xd3de, 0xed48, 0x2650, 0x9876, 0x834f, 0xd0e2, 0x0, 0x1);
        gbc.writeMem(0xd3de, { 0x33 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xed49, gbc.sp());
        EXPECT(0xd3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd3de));
        // 33 0216
        gbc.setState(0x4b1c, 0x4357, 0x3e20, 0x2427, 0x2382, 0xc68c, 0x0, 0x0);
        gbc.writeMem(0x4b1c, { 0x33 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4358, gbc.sp());
        EXPECT(0x4b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0217
        gbc.setState(0x97b0, 0xa38f, 0x6150, 0x3424, 0xf327, 0x8f35, 0x1, 0x1);
        gbc.writeMem(0x97b0, { 0x33 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa390, gbc.sp());
        EXPECT(0x97b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x97b0));
        // 33 0218
        gbc.setState(0xe6b7, 0x256f, 0x6020, 0xc816, 0x7037, 0xd44a, 0x1, 0x1);
        gbc.writeMem(0xe6b7, { 0x33 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2570, gbc.sp());
        EXPECT(0xe6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe6b7));
        // 33 0219
        gbc.setState(0x1118, 0x2423, 0x9790, 0xc01c, 0xb92c, 0x14e7, 0x1, 0x1);
        gbc.writeMem(0x1118, { 0x33 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2424, gbc.sp());
        EXPECT(0x1119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 021A
        gbc.setState(0x6841, 0x17e8, 0xe320, 0x2770, 0x7e8b, 0x23d0, 0x0, 0x1);
        gbc.writeMem(0x6841, { 0x33 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x17e9, gbc.sp());
        EXPECT(0x6842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 021B
        gbc.setState(0xe552, 0x96e8, 0x44c0, 0x83a5, 0x1b2c, 0x2d4a, 0x0, 0x0);
        gbc.writeMem(0xe552, { 0x33 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x96e9, gbc.sp());
        EXPECT(0xe553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe552));
        // 33 021C
        gbc.setState(0x54ad, 0x599d, 0xb8e0, 0x7dc3, 0xd35a, 0x9313, 0x0, 0x0);
        gbc.writeMem(0x54ad, { 0x33 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x599e, gbc.sp());
        EXPECT(0x54ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 021D
        gbc.setState(0x7f7c, 0xede4, 0xda00, 0xaf7d, 0x54bb, 0x6f06, 0x0, 0x0);
        gbc.writeMem(0x7f7c, { 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xede5, gbc.sp());
        EXPECT(0x7f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 021E
        gbc.setState(0x5889, 0xa166, 0x24a0, 0xd83f, 0x9cfb, 0x8d0e, 0x0, 0x0);
        gbc.writeMem(0x5889, { 0x33 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa167, gbc.sp());
        EXPECT(0x588a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 021F
        gbc.setState(0xc17f, 0x69e1, 0x8590, 0x8758, 0xf05b, 0x16b0, 0x0, 0x1);
        gbc.writeMem(0xc17f, { 0x33 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x69e2, gbc.sp());
        EXPECT(0xc180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc17f));
        // 33 0220
        gbc.setState(0x4b3a, 0xdaca, 0x680, 0xe0e1, 0xa301, 0x30b9, 0x1, 0x1);
        gbc.writeMem(0x4b3a, { 0x33 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdacb, gbc.sp());
        EXPECT(0x4b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0221
        gbc.setState(0x7d4a, 0xdbc5, 0x2a90, 0x67bb, 0x4a3c, 0x86a7, 0x1, 0x1);
        gbc.writeMem(0x7d4a, { 0x33 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdbc6, gbc.sp());
        EXPECT(0x7d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0222
        gbc.setState(0xe4ed, 0x9695, 0xff50, 0x78b5, 0x7902, 0xeca3, 0x1, 0x0);
        gbc.writeMem(0xe4ed, { 0x33 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9696, gbc.sp());
        EXPECT(0xe4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe4ed));
        // 33 0223
        gbc.setState(0x681f, 0xfddb, 0x8e0, 0x98c6, 0x3ba9, 0x2184, 0x1, 0x0);
        gbc.writeMem(0x681f, { 0x33 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfddc, gbc.sp());
        EXPECT(0x6820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0224
        gbc.setState(0x596f, 0x2101, 0xad60, 0xb447, 0x29df, 0xa715, 0x0, 0x1);
        gbc.writeMem(0x596f, { 0x33 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2102, gbc.sp());
        EXPECT(0x5970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0225
        gbc.setState(0x2ae4, 0xf300, 0x3410, 0x5b20, 0x2bb9, 0x8699, 0x0, 0x0);
        gbc.writeMem(0x2ae4, { 0x33 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf301, gbc.sp());
        EXPECT(0x2ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0226
        gbc.setState(0xc0e1, 0x8375, 0x81b0, 0xe10f, 0x3ca3, 0x4dc0, 0x0, 0x0);
        gbc.writeMem(0xc0e1, { 0x33 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8376, gbc.sp());
        EXPECT(0xc0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc0e1));
        // 33 0227
        gbc.setState(0xcb6, 0xa1ee, 0x3340, 0x5c16, 0xb512, 0x1bef, 0x1, 0x0);
        gbc.writeMem(0xcb6, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa1ef, gbc.sp());
        EXPECT(0xcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0228
        gbc.setState(0xc3a3, 0x7cbc, 0x88e0, 0xce77, 0x1408, 0x7dd7, 0x0, 0x1);
        gbc.writeMem(0xc3a3, { 0x33 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7cbd, gbc.sp());
        EXPECT(0xc3a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc3a3));
        // 33 0229
        gbc.setState(0x6da, 0xa96c, 0xf130, 0xae22, 0x7173, 0xd0a9, 0x0, 0x1);
        gbc.writeMem(0x6da, { 0x33 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa96d, gbc.sp());
        EXPECT(0x6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 022A
        gbc.setState(0xccc9, 0xfed9, 0x1d40, 0x23ad, 0xd289, 0xf7ad, 0x0, 0x1);
        gbc.writeMem(0xccc9, { 0x33 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfeda, gbc.sp());
        EXPECT(0xccca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xccc9));
        // 33 022B
        gbc.setState(0x35ed, 0x7f34, 0x2f70, 0x6028, 0x3c58, 0x3b25, 0x0, 0x0);
        gbc.writeMem(0x35ed, { 0x33 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7f35, gbc.sp());
        EXPECT(0x35ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 022C
        gbc.setState(0x4d19, 0xd194, 0x38f0, 0x26f, 0xa748, 0x5621, 0x0, 0x1);
        gbc.writeMem(0x4d19, { 0x33 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd195, gbc.sp());
        EXPECT(0x4d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 022D
        gbc.setState(0x2cda, 0xf7fb, 0x49b0, 0xe08d, 0x5513, 0xb1b5, 0x1, 0x0);
        gbc.writeMem(0x2cda, { 0x33 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf7fc, gbc.sp());
        EXPECT(0x2cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 022E
        gbc.setState(0x8af6, 0xc25d, 0x34d0, 0x569d, 0xef61, 0xdc36, 0x1, 0x0);
        gbc.writeMem(0x8af6, { 0x33 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc25e, gbc.sp());
        EXPECT(0x8af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8af6));
        // 33 022F
        gbc.setState(0x1d20, 0xe79e, 0x3ac0, 0x1ed5, 0xcc78, 0xadbc, 0x1, 0x0);
        gbc.writeMem(0x1d20, { 0x33 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe79f, gbc.sp());
        EXPECT(0x1d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0231
        gbc.setState(0xd312, 0xcc15, 0x5340, 0xdc89, 0xb54f, 0x2735, 0x0, 0x0);
        gbc.writeMem(0xd312, { 0x33 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcc16, gbc.sp());
        EXPECT(0xd313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd312));
        // 33 0232
        gbc.setState(0x2ef9, 0x5d39, 0x1740, 0xc150, 0x8fa3, 0xce9a, 0x1, 0x0);
        gbc.writeMem(0x2ef9, { 0x33 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5d3a, gbc.sp());
        EXPECT(0x2efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0233
        gbc.setState(0x8d4f, 0x6603, 0xb430, 0x1d02, 0xd91f, 0x899b, 0x0, 0x1);
        gbc.writeMem(0x8d4f, { 0x33 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6604, gbc.sp());
        EXPECT(0x8d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8d4f));
        // 33 0234
        gbc.setState(0x6b3c, 0x8e99, 0x9a80, 0x8c40, 0xa2a, 0xb1c3, 0x0, 0x0);
        gbc.writeMem(0x6b3c, { 0x33 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8e9a, gbc.sp());
        EXPECT(0x6b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0235
        gbc.setState(0x317, 0x6f49, 0xcd70, 0xcc41, 0xdd8e, 0xfb2d, 0x1, 0x0);
        gbc.writeMem(0x317, { 0x33 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6f4a, gbc.sp());
        EXPECT(0x318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0236
        gbc.setState(0x79bd, 0x7e23, 0xa350, 0xbc77, 0x7de2, 0x5bd9, 0x1, 0x0);
        gbc.writeMem(0x79bd, { 0x33 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7e24, gbc.sp());
        EXPECT(0x79be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0237
        gbc.setState(0x961b, 0x2697, 0x6720, 0x23a8, 0x1e80, 0x178a, 0x1, 0x0);
        gbc.writeMem(0x961b, { 0x33 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2698, gbc.sp());
        EXPECT(0x961c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x961b));
        // 33 0238
        gbc.setState(0x1e29, 0xbe3d, 0x6ef0, 0xe26, 0xacff, 0xc000, 0x1, 0x0);
        gbc.writeMem(0x1e29, { 0x33 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbe3e, gbc.sp());
        EXPECT(0x1e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0239
        gbc.setState(0x4336, 0xad27, 0xe3c0, 0xf182, 0x17db, 0x8b28, 0x0, 0x0);
        gbc.writeMem(0x4336, { 0x33 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xad28, gbc.sp());
        EXPECT(0x4337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 023A
        gbc.setState(0xacfb, 0x3e50, 0xbe30, 0x6c39, 0x30c5, 0xcb88, 0x0, 0x0);
        gbc.writeMem(0xacfb, { 0x33 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3e51, gbc.sp());
        EXPECT(0xacfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xacfb));
        // 33 023B
        gbc.setState(0xd219, 0x5d90, 0xfbb0, 0x68c6, 0xb8b, 0xc4ce, 0x1, 0x1);
        gbc.writeMem(0xd219, { 0x33 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5d91, gbc.sp());
        EXPECT(0xd21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd219));
        // 33 023C
        gbc.setState(0x7a04, 0xddda, 0xef20, 0xe0ca, 0xf71a, 0x63fe, 0x0, 0x1);
        gbc.writeMem(0x7a04, { 0x33 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdddb, gbc.sp());
        EXPECT(0x7a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 023D
        gbc.setState(0x6ad3, 0xa9f5, 0x7290, 0xcc9, 0xab61, 0xa2dc, 0x1, 0x1);
        gbc.writeMem(0x6ad3, { 0x33 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa9f6, gbc.sp());
        EXPECT(0x6ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 023E
        gbc.setState(0xc51f, 0x705a, 0x19f0, 0xd160, 0x455c, 0x9e7, 0x0, 0x0);
        gbc.writeMem(0xc51f, { 0x33 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x705b, gbc.sp());
        EXPECT(0xc520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc51f));
        // 33 023F
        gbc.setState(0x113, 0xd149, 0x4ae0, 0x407d, 0x44fd, 0xba85, 0x1, 0x0);
        gbc.writeMem(0x113, { 0x33 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd14a, gbc.sp());
        EXPECT(0x114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0240
        gbc.setState(0x871, 0xba7b, 0xc860, 0x7df6, 0x9391, 0x7728, 0x1, 0x0);
        gbc.writeMem(0x871, { 0x33 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xba7c, gbc.sp());
        EXPECT(0x872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0241
        gbc.setState(0x6c2c, 0x514a, 0x1350, 0x5a26, 0x4bec, 0x6c09, 0x1, 0x0);
        gbc.writeMem(0x6c2c, { 0x33 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x514b, gbc.sp());
        EXPECT(0x6c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0242
        gbc.setState(0xe5ca, 0x8c40, 0x8610, 0x3988, 0xc142, 0x7716, 0x1, 0x1);
        gbc.writeMem(0xe5ca, { 0x33 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8c41, gbc.sp());
        EXPECT(0xe5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe5ca));
        // 33 0243
        gbc.setState(0x6ffd, 0xb24d, 0xb620, 0x75c4, 0xe870, 0x942d, 0x1, 0x0);
        gbc.writeMem(0x6ffd, { 0x33 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb24e, gbc.sp());
        EXPECT(0x6ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0244
        gbc.setState(0x3e1a, 0x2d78, 0x6350, 0x5ada, 0xa9ea, 0x2fbd, 0x1, 0x0);
        gbc.writeMem(0x3e1a, { 0x33 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2d79, gbc.sp());
        EXPECT(0x3e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0245
        gbc.setState(0x6b79, 0xa059, 0x9c60, 0x5d75, 0x396f, 0xe0b, 0x1, 0x1);
        gbc.writeMem(0x6b79, { 0x33 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa05a, gbc.sp());
        EXPECT(0x6b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0246
        gbc.setState(0xe078, 0x9db3, 0x4d10, 0x45dd, 0xdd96, 0x700, 0x0, 0x0);
        gbc.writeMem(0xe078, { 0x33 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9db4, gbc.sp());
        EXPECT(0xe079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe078));
        // 33 0247
        gbc.setState(0x7a4a, 0xb264, 0x2d00, 0x529b, 0xe0dc, 0x8120, 0x0, 0x1);
        gbc.writeMem(0x7a4a, { 0x33 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb265, gbc.sp());
        EXPECT(0x7a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0248
        gbc.setState(0xb960, 0x61b8, 0xb780, 0xf64e, 0xf6c, 0x7dc9, 0x1, 0x0);
        gbc.writeMem(0xb960, { 0x33 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x61b9, gbc.sp());
        EXPECT(0xb961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb960));
        // 33 0249
        gbc.setState(0x8f12, 0x2b78, 0xdee0, 0x68cd, 0x6907, 0x2ec0, 0x1, 0x0);
        gbc.writeMem(0x8f12, { 0x33 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2b79, gbc.sp());
        EXPECT(0x8f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8f12));
        // 33 024A
        gbc.setState(0x563f, 0xfaea, 0xf30, 0x9142, 0xa7ae, 0x424f, 0x0, 0x1);
        gbc.writeMem(0x563f, { 0x33 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfaeb, gbc.sp());
        EXPECT(0x5640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 024B
        gbc.setState(0xc62c, 0xda2f, 0xe260, 0xca36, 0xe281, 0xe22e, 0x1, 0x1);
        gbc.writeMem(0xc62c, { 0x33 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xda30, gbc.sp());
        EXPECT(0xc62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc62c));
        // 33 024C
        gbc.setState(0x7ae4, 0xdc3d, 0xb880, 0xa829, 0x865, 0x832d, 0x0, 0x0);
        gbc.writeMem(0x7ae4, { 0x33 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdc3e, gbc.sp());
        EXPECT(0x7ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 024D
        gbc.setState(0x2cb0, 0x6b3d, 0xd1e0, 0x3700, 0xeb1c, 0xf9f8, 0x1, 0x1);
        gbc.writeMem(0x2cb0, { 0x33 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6b3e, gbc.sp());
        EXPECT(0x2cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 024E
        gbc.setState(0x484c, 0xb3a5, 0x1180, 0xf601, 0x65c, 0xf74c, 0x0, 0x1);
        gbc.writeMem(0x484c, { 0x33 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb3a6, gbc.sp());
        EXPECT(0x484d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0250
        gbc.setState(0x2c1e, 0x21b6, 0x6db0, 0x5ef5, 0xabce, 0x67ea, 0x1, 0x1);
        gbc.writeMem(0x2c1e, { 0x33 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x21b7, gbc.sp());
        EXPECT(0x2c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0251
        gbc.setState(0xb316, 0xab34, 0x49a0, 0xb418, 0x268a, 0x7fae, 0x0, 0x1);
        gbc.writeMem(0xb316, { 0x33 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xab35, gbc.sp());
        EXPECT(0xb317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb316));
        // 33 0252
        gbc.setState(0x1fed, 0x7b1b, 0xaf80, 0x1485, 0xe772, 0x7595, 0x1, 0x0);
        gbc.writeMem(0x1fed, { 0x33 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7b1c, gbc.sp());
        EXPECT(0x1fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0253
        gbc.setState(0xcb2a, 0xda4d, 0x3490, 0x41c3, 0x726f, 0x8b00, 0x1, 0x0);
        gbc.writeMem(0xcb2a, { 0x33 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xda4e, gbc.sp());
        EXPECT(0xcb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcb2a));
        // 33 0254
        gbc.setState(0xe622, 0xc3c1, 0x8230, 0x5f7f, 0x300e, 0x838, 0x0, 0x0);
        gbc.writeMem(0xe622, { 0x33 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc3c2, gbc.sp());
        EXPECT(0xe623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe622));
        // 33 0255
        gbc.setState(0x14fa, 0x92a9, 0x8530, 0x9699, 0x381f, 0x541b, 0x0, 0x0);
        gbc.writeMem(0x14fa, { 0x33 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x92aa, gbc.sp());
        EXPECT(0x14fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0256
        gbc.setState(0x6d10, 0xb242, 0x1ed0, 0x8929, 0x868e, 0xda7e, 0x0, 0x0);
        gbc.writeMem(0x6d10, { 0x33 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb243, gbc.sp());
        EXPECT(0x6d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0257
        gbc.setState(0x2d09, 0x891f, 0xfd0, 0x6575, 0x8c0e, 0xec5f, 0x1, 0x1);
        gbc.writeMem(0x2d09, { 0x33 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8920, gbc.sp());
        EXPECT(0x2d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0258
        gbc.setState(0x83ca, 0x6380, 0xa410, 0x1eb, 0x3918, 0x2aa4, 0x0, 0x1);
        gbc.writeMem(0x83ca, { 0x33 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6381, gbc.sp());
        EXPECT(0x83cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x83ca));
        // 33 0259
        gbc.setState(0x8920, 0x977a, 0xe2f0, 0x452, 0xa384, 0x6b06, 0x0, 0x0);
        gbc.writeMem(0x8920, { 0x33 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x977b, gbc.sp());
        EXPECT(0x8921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8920));
        // 33 025B
        gbc.setState(0xca4d, 0xc18e, 0x660, 0xa05b, 0xa82f, 0x1be9, 0x1, 0x0);
        gbc.writeMem(0xca4d, { 0x33 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc18f, gbc.sp());
        EXPECT(0xca4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xca4d));
        // 33 025C
        gbc.setState(0x1d2, 0x9af2, 0xd520, 0x3de1, 0x6ede, 0x9566, 0x0, 0x1);
        gbc.writeMem(0x1d2, { 0x33 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9af3, gbc.sp());
        EXPECT(0x1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 025E
        gbc.setState(0xa4c6, 0xfd59, 0x3d10, 0xc40f, 0x3995, 0x6a13, 0x1, 0x1);
        gbc.writeMem(0xa4c6, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfd5a, gbc.sp());
        EXPECT(0xa4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa4c6));
        // 33 025F
        gbc.setState(0x13d6, 0x8558, 0xf370, 0xf0b3, 0xc0ec, 0x281e, 0x0, 0x0);
        gbc.writeMem(0x13d6, { 0x33 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8559, gbc.sp());
        EXPECT(0x13d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0260
        gbc.setState(0x7c82, 0x3531, 0x24f0, 0x2603, 0x722a, 0x39f9, 0x0, 0x0);
        gbc.writeMem(0x7c82, { 0x33 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3532, gbc.sp());
        EXPECT(0x7c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0261
        gbc.setState(0xc25d, 0x7adb, 0x1760, 0x96e0, 0xb55f, 0xb257, 0x1, 0x1);
        gbc.writeMem(0xc25d, { 0x33 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7adc, gbc.sp());
        EXPECT(0xc25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc25d));
        // 33 0262
        gbc.setState(0xca90, 0xe2a9, 0x4570, 0xfed1, 0x2eb7, 0x5a2, 0x1, 0x1);
        gbc.writeMem(0xca90, { 0x33 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe2aa, gbc.sp());
        EXPECT(0xca91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xca90));
        // 33 0263
        gbc.setState(0xa29a, 0x8fa9, 0xda40, 0x5532, 0xdd2f, 0x1873, 0x0, 0x0);
        gbc.writeMem(0xa29a, { 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8faa, gbc.sp());
        EXPECT(0xa29b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa29a));
        // 33 0264
        gbc.setState(0x74fa, 0x85d1, 0xae60, 0x2a0d, 0x5747, 0xa5e6, 0x0, 0x1);
        gbc.writeMem(0x74fa, { 0x33 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x85d2, gbc.sp());
        EXPECT(0x74fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0265
        gbc.setState(0xc864, 0x7743, 0x29e0, 0x56eb, 0x8234, 0x1d0, 0x1, 0x0);
        gbc.writeMem(0xc864, { 0x33 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7744, gbc.sp());
        EXPECT(0xc865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc864));
        // 33 0266
        gbc.setState(0x2814, 0x99a2, 0x2320, 0xcd00, 0xd5c7, 0x3ae, 0x1, 0x1);
        gbc.writeMem(0x2814, { 0x33 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x99a3, gbc.sp());
        EXPECT(0x2815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0267
        gbc.setState(0x1b2a, 0xa2f7, 0xf480, 0xc9e8, 0x616b, 0x9cae, 0x0, 0x0);
        gbc.writeMem(0x1b2a, { 0x33 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa2f8, gbc.sp());
        EXPECT(0x1b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0268
        gbc.setState(0x4785, 0x61eb, 0xd550, 0x821b, 0xe354, 0xeb02, 0x1, 0x0);
        gbc.writeMem(0x4785, { 0x33 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x61ec, gbc.sp());
        EXPECT(0x4786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0269
        gbc.setState(0x9502, 0x27b3, 0x1060, 0x1efe, 0xf52e, 0xcba6, 0x1, 0x0);
        gbc.writeMem(0x9502, { 0x33 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x27b4, gbc.sp());
        EXPECT(0x9503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9502));
        // 33 026A
        gbc.setState(0xa3ca, 0x3890, 0x42f0, 0x6565, 0x3786, 0xa274, 0x1, 0x0);
        gbc.writeMem(0xa3ca, { 0x33 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3891, gbc.sp());
        EXPECT(0xa3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa3ca));
        // 33 026B
        gbc.setState(0x9204, 0x8303, 0x2eb0, 0x88e9, 0x1e88, 0xe779, 0x0, 0x1);
        gbc.writeMem(0x9204, { 0x33 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8304, gbc.sp());
        EXPECT(0x9205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9204));
        // 33 026D
        gbc.setState(0x8beb, 0x23d1, 0x6b50, 0x2e3c, 0x844b, 0x3204, 0x1, 0x1);
        gbc.writeMem(0x8beb, { 0x33 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x23d2, gbc.sp());
        EXPECT(0x8bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8beb));
        // 33 026E
        gbc.setState(0xe431, 0xf576, 0x9780, 0xc56a, 0x7d3f, 0xad14, 0x1, 0x1);
        gbc.writeMem(0xe431, { 0x33 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf577, gbc.sp());
        EXPECT(0xe432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe431));
        // 33 0270
        gbc.setState(0x9bab, 0x3fab, 0xfd90, 0xa7b9, 0x6034, 0x68b0, 0x1, 0x1);
        gbc.writeMem(0x9bab, { 0x33 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3fac, gbc.sp());
        EXPECT(0x9bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9bab));
        // 33 0271
        gbc.setState(0x9af6, 0x1fbf, 0xad50, 0xacaf, 0xe40c, 0x6de8, 0x0, 0x0);
        gbc.writeMem(0x9af6, { 0x33 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1fc0, gbc.sp());
        EXPECT(0x9af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9af6));
        // 33 0273
        gbc.setState(0x4c01, 0x682a, 0xc900, 0x8672, 0xc2fa, 0x3874, 0x0, 0x0);
        gbc.writeMem(0x4c01, { 0x33 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x682b, gbc.sp());
        EXPECT(0x4c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0274
        gbc.setState(0xdca3, 0xbd91, 0x42c0, 0x615c, 0x34bc, 0x7e94, 0x1, 0x1);
        gbc.writeMem(0xdca3, { 0x33 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbd92, gbc.sp());
        EXPECT(0xdca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdca3));
        // 33 0275
        gbc.setState(0x45ab, 0x401c, 0x7fb0, 0xd2f5, 0xe87b, 0x9707, 0x0, 0x1);
        gbc.writeMem(0x45ab, { 0x33 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x401d, gbc.sp());
        EXPECT(0x45ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0276
        gbc.setState(0x3cec, 0x7228, 0xc0b0, 0x5a27, 0x44b1, 0x5c2, 0x0, 0x0);
        gbc.writeMem(0x3cec, { 0x33 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7229, gbc.sp());
        EXPECT(0x3ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0277
        gbc.setState(0x3532, 0xfc5e, 0x9410, 0x4ebd, 0x30ae, 0x5014, 0x1, 0x0);
        gbc.writeMem(0x3532, { 0x33 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfc5f, gbc.sp());
        EXPECT(0x3533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0278
        gbc.setState(0x83d2, 0x8332, 0xa720, 0xe231, 0x6563, 0x8a1a, 0x1, 0x1);
        gbc.writeMem(0x83d2, { 0x33 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8333, gbc.sp());
        EXPECT(0x83d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x83d2));
        // 33 0279
        gbc.setState(0x5f47, 0xfeac, 0xcd90, 0x6bc2, 0x612, 0x99e, 0x1, 0x0);
        gbc.writeMem(0x5f47, { 0x33 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfead, gbc.sp());
        EXPECT(0x5f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 027A
        gbc.setState(0x2c4d, 0xd1e4, 0xe530, 0xb276, 0x1269, 0x734d, 0x0, 0x0);
        gbc.writeMem(0x2c4d, { 0x33 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd1e5, gbc.sp());
        EXPECT(0x2c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 027B
        gbc.setState(0xc375, 0xa4c2, 0x6c60, 0xad3b, 0xd53f, 0x2a39, 0x1, 0x0);
        gbc.writeMem(0xc375, { 0x33 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa4c3, gbc.sp());
        EXPECT(0xc376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc375));
        // 33 027C
        gbc.setState(0x5789, 0x6ca1, 0xf7e0, 0xe1ee, 0xecc1, 0x22d2, 0x1, 0x0);
        gbc.writeMem(0x5789, { 0x33 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6ca2, gbc.sp());
        EXPECT(0x578a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 027D
        gbc.setState(0x6448, 0x779e, 0x9fe0, 0x82ac, 0xf3b0, 0xff82, 0x0, 0x0);
        gbc.writeMem(0x6448, { 0x33 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x779f, gbc.sp());
        EXPECT(0x6449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 027E
        gbc.setState(0x6e0, 0x538c, 0xe2e0, 0x2ec5, 0xbc63, 0xb94d, 0x0, 0x1);
        gbc.writeMem(0x6e0, { 0x33 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x538d, gbc.sp());
        EXPECT(0x6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 027F
        gbc.setState(0x730b, 0x6fe2, 0x58f0, 0xeb8e, 0x2398, 0x9f7b, 0x0, 0x0);
        gbc.writeMem(0x730b, { 0x33 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6fe3, gbc.sp());
        EXPECT(0x730c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0280
        gbc.setState(0x1d69, 0x533d, 0x5270, 0xc10e, 0x20cc, 0x935e, 0x0, 0x0);
        gbc.writeMem(0x1d69, { 0x33 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x533e, gbc.sp());
        EXPECT(0x1d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0281
        gbc.setState(0x5d92, 0xd506, 0xf360, 0x87d5, 0xe9a0, 0x6ab5, 0x1, 0x0);
        gbc.writeMem(0x5d92, { 0x33 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd507, gbc.sp());
        EXPECT(0x5d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0282
        gbc.setState(0x2545, 0x9d25, 0x8980, 0xc932, 0x270, 0xb9f6, 0x0, 0x0);
        gbc.writeMem(0x2545, { 0x33 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9d26, gbc.sp());
        EXPECT(0x2546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0283
        gbc.setState(0x7b61, 0x64cd, 0x1530, 0x92ad, 0x60a5, 0x96c1, 0x0, 0x1);
        gbc.writeMem(0x7b61, { 0x33 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x64ce, gbc.sp());
        EXPECT(0x7b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0284
        gbc.setState(0x36eb, 0xfd, 0x73a0, 0xebb5, 0x6a56, 0x21b3, 0x1, 0x0);
        gbc.writeMem(0x36eb, { 0x33 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfe, gbc.sp());
        EXPECT(0x36ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0285
        gbc.setState(0xa639, 0xa147, 0xbd20, 0xd242, 0x2e13, 0x922a, 0x1, 0x0);
        gbc.writeMem(0xa639, { 0x33 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa148, gbc.sp());
        EXPECT(0xa63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa639));
        // 33 0286
        gbc.setState(0xec11, 0xfc0b, 0xc0f0, 0x228e, 0xd71f, 0xe62e, 0x0, 0x0);
        gbc.writeMem(0xec11, { 0x33 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfc0c, gbc.sp());
        EXPECT(0xec12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xec11));
        // 33 0287
        gbc.setState(0xce33, 0xdbde, 0xb00, 0x9b4a, 0x1525, 0x4af7, 0x0, 0x0);
        gbc.writeMem(0xce33, { 0x33 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdbdf, gbc.sp());
        EXPECT(0xce34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xce33));
        // 33 0288
        gbc.setState(0x9e57, 0x72c, 0x4240, 0x5bac, 0xb020, 0xe4b4, 0x0, 0x0);
        gbc.writeMem(0x9e57, { 0x33 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x72d, gbc.sp());
        EXPECT(0x9e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9e57));
        // 33 028A
        gbc.setState(0x97c6, 0xc317, 0x9720, 0x84ae, 0x2cfa, 0xb090, 0x1, 0x1);
        gbc.writeMem(0x97c6, { 0x33 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc318, gbc.sp());
        EXPECT(0x97c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x97c6));
        // 33 028C
        gbc.setState(0x1857, 0x5b7d, 0xd1c0, 0x69e8, 0xe67b, 0x5107, 0x0, 0x1);
        gbc.writeMem(0x1857, { 0x33 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5b7e, gbc.sp());
        EXPECT(0x1858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 028D
        gbc.setState(0xacd6, 0x5cf4, 0xa270, 0x3ff9, 0xc04, 0xea1f, 0x1, 0x0);
        gbc.writeMem(0xacd6, { 0x33 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5cf5, gbc.sp());
        EXPECT(0xacd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xacd6));
        // 33 028E
        gbc.setState(0xd547, 0xee7b, 0x2950, 0xb0a, 0x78b6, 0x7483, 0x0, 0x1);
        gbc.writeMem(0xd547, { 0x33 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xee7c, gbc.sp());
        EXPECT(0xd548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd547));
        // 33 028F
        gbc.setState(0xa9f6, 0x1eee, 0xf210, 0x9bce, 0xff2f, 0x30, 0x0, 0x1);
        gbc.writeMem(0xa9f6, { 0x33 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1eef, gbc.sp());
        EXPECT(0xa9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa9f6));
        // 33 0290
        gbc.setState(0xa703, 0x4b21, 0x3950, 0xf7c9, 0xefb, 0xb23f, 0x1, 0x0);
        gbc.writeMem(0xa703, { 0x33 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4b22, gbc.sp());
        EXPECT(0xa704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa703));
        // 33 0291
        gbc.setState(0x1947, 0x73fd, 0x4ef0, 0x8d86, 0xb5b1, 0x7dc7, 0x0, 0x1);
        gbc.writeMem(0x1947, { 0x33 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x73fe, gbc.sp());
        EXPECT(0x1948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0292
        gbc.setState(0x279d, 0x1e1, 0xb8f0, 0xff10, 0xbcf3, 0x38dd, 0x1, 0x0);
        gbc.writeMem(0x279d, { 0x33 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1e2, gbc.sp());
        EXPECT(0x279e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0293
        gbc.setState(0xf6a, 0xe6b2, 0xc050, 0x8896, 0x460, 0x5eba, 0x0, 0x1);
        gbc.writeMem(0xf6a, { 0x33 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe6b3, gbc.sp());
        EXPECT(0xf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0294
        gbc.setState(0x92b4, 0xa1fe, 0x4820, 0xa094, 0x490f, 0x2c61, 0x0, 0x1);
        gbc.writeMem(0x92b4, { 0x33 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa1ff, gbc.sp());
        EXPECT(0x92b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x92b4));
        // 33 0295
        gbc.setState(0x5edc, 0x4a94, 0xd890, 0x17be, 0xe52d, 0xc95, 0x0, 0x0);
        gbc.writeMem(0x5edc, { 0x33 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4a95, gbc.sp());
        EXPECT(0x5edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0297
        gbc.setState(0x1867, 0x53c8, 0xfc40, 0x5941, 0x97e9, 0x14f4, 0x0, 0x1);
        gbc.writeMem(0x1867, { 0x33 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0x1868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0298
        gbc.setState(0x9592, 0x22c4, 0x33a0, 0x6f02, 0x9eec, 0x78d9, 0x1, 0x1);
        gbc.writeMem(0x9592, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x22c5, gbc.sp());
        EXPECT(0x9593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9592));
        // 33 0299
        gbc.setState(0x8994, 0x9d95, 0x8540, 0x93a4, 0xa9c6, 0xdd08, 0x1, 0x0);
        gbc.writeMem(0x8994, { 0x33 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9d96, gbc.sp());
        EXPECT(0x8995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8994));
        // 33 029A
        gbc.setState(0x9f1b, 0xecf7, 0xcef0, 0x8e3, 0xbb29, 0x92a, 0x1, 0x1);
        gbc.writeMem(0x9f1b, { 0x33 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xecf8, gbc.sp());
        EXPECT(0x9f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9f1b));
        // 33 029B
        gbc.setState(0x4030, 0x1772, 0xb3c0, 0xc068, 0x31e, 0x6a34, 0x0, 0x1);
        gbc.writeMem(0x4030, { 0x33 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1773, gbc.sp());
        EXPECT(0x4031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 029C
        gbc.setState(0x5082, 0x45b1, 0xbd0, 0xd8e, 0x7f83, 0x1318, 0x1, 0x1);
        gbc.writeMem(0x5082, { 0x33 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x45b2, gbc.sp());
        EXPECT(0x5083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 029D
        gbc.setState(0x58d6, 0x73bb, 0xe5a0, 0x7912, 0xd347, 0x153c, 0x1, 0x1);
        gbc.writeMem(0x58d6, { 0x33 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x73bc, gbc.sp());
        EXPECT(0x58d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 029E
        gbc.setState(0xb3af, 0x8de2, 0xa610, 0x5fb1, 0x2e0, 0x684f, 0x0, 0x0);
        gbc.writeMem(0xb3af, { 0x33 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0xb3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb3af));
        // 33 029F
        gbc.setState(0x2c8c, 0xa4a4, 0x68d0, 0xb61, 0xc9b8, 0xba05, 0x1, 0x0);
        gbc.writeMem(0x2c8c, { 0x33 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa4a5, gbc.sp());
        EXPECT(0x2c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02A0
        gbc.setState(0x70db, 0x323, 0x7420, 0x781c, 0xa5c8, 0x494e, 0x0, 0x1);
        gbc.writeMem(0x70db, { 0x33 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x324, gbc.sp());
        EXPECT(0x70dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02A1
        gbc.setState(0x99ad, 0x4b35, 0x41e0, 0x28a4, 0x120d, 0x18fd, 0x1, 0x1);
        gbc.writeMem(0x99ad, { 0x33 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4b36, gbc.sp());
        EXPECT(0x99ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x99ad));
        // 33 02A3
        gbc.setState(0xbec3, 0x417b, 0x12f0, 0xf42c, 0x8d11, 0x9762, 0x1, 0x1);
        gbc.writeMem(0xbec3, { 0x33 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x417c, gbc.sp());
        EXPECT(0xbec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbec3));
        // 33 02A4
        gbc.setState(0x20b1, 0x486e, 0xdd70, 0xb353, 0xd164, 0xd690, 0x1, 0x1);
        gbc.writeMem(0x20b1, { 0x33 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0x20b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02A5
        gbc.setState(0x7b6d, 0xc9c1, 0x92c0, 0x4be3, 0x8769, 0xc890, 0x1, 0x0);
        gbc.writeMem(0x7b6d, { 0x33 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc9c2, gbc.sp());
        EXPECT(0x7b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02A8
        gbc.setState(0x9f8, 0x3189, 0x47a0, 0x4803, 0x4306, 0x6f14, 0x0, 0x0);
        gbc.writeMem(0x9f8, { 0x33 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0x9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02A9
        gbc.setState(0xac6, 0x4587, 0x5730, 0x620c, 0xa01, 0xcf06, 0x1, 0x1);
        gbc.writeMem(0xac6, { 0x33 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4588, gbc.sp());
        EXPECT(0xac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02AA
        gbc.setState(0x23b3, 0x1c59, 0xa540, 0xd47c, 0x977a, 0x43ee, 0x0, 0x0);
        gbc.writeMem(0x23b3, { 0x33 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1c5a, gbc.sp());
        EXPECT(0x23b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02AB
        gbc.setState(0x3813, 0x6e15, 0x4100, 0xef31, 0x5da4, 0x1e2d, 0x0, 0x1);
        gbc.writeMem(0x3813, { 0x33 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6e16, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02AC
        gbc.setState(0xe907, 0xde85, 0xc170, 0x587b, 0xc056, 0xd118, 0x1, 0x1);
        gbc.writeMem(0xe907, { 0x33 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xde86, gbc.sp());
        EXPECT(0xe908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe907));
        // 33 02AD
        gbc.setState(0xe3cf, 0x757c, 0xf280, 0x7482, 0x5be5, 0xa1f9, 0x0, 0x0);
        gbc.writeMem(0xe3cf, { 0x33 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x757d, gbc.sp());
        EXPECT(0xe3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe3cf));
        // 33 02AE
        gbc.setState(0x7f0b, 0xb16d, 0x95d0, 0xaf23, 0x4718, 0xe69a, 0x1, 0x0);
        gbc.writeMem(0x7f0b, { 0x33 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb16e, gbc.sp());
        EXPECT(0x7f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02AF
        gbc.setState(0xc896, 0x5c31, 0x6670, 0xc090, 0x1821, 0x8c86, 0x0, 0x0);
        gbc.writeMem(0xc896, { 0x33 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5c32, gbc.sp());
        EXPECT(0xc897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc896));
        // 33 02B0
        gbc.setState(0x464e, 0xcfa7, 0x35f0, 0x7d17, 0x13e8, 0x858f, 0x1, 0x0);
        gbc.writeMem(0x464e, { 0x33 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcfa8, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02B1
        gbc.setState(0x4e0c, 0xd64b, 0x1ed0, 0xdd60, 0x2444, 0x37f2, 0x0, 0x1);
        gbc.writeMem(0x4e0c, { 0x33 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd64c, gbc.sp());
        EXPECT(0x4e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02B2
        gbc.setState(0xd6e0, 0x8425, 0x3940, 0x4a44, 0x7806, 0x2f65, 0x1, 0x0);
        gbc.writeMem(0xd6e0, { 0x33 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8426, gbc.sp());
        EXPECT(0xd6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd6e0));
        // 33 02B3
        gbc.setState(0x8882, 0xbbea, 0x1150, 0x25a2, 0x14e0, 0x87a7, 0x0, 0x1);
        gbc.writeMem(0x8882, { 0x33 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbbeb, gbc.sp());
        EXPECT(0x8883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8882));
        // 33 02B4
        gbc.setState(0xd9e1, 0xbe90, 0xdcc0, 0x34, 0x96a6, 0x4afb, 0x1, 0x1);
        gbc.writeMem(0xd9e1, { 0x33 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbe91, gbc.sp());
        EXPECT(0xd9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd9e1));
        // 33 02B5
        gbc.setState(0x29de, 0xc8f9, 0xcbb0, 0xb1e7, 0x4366, 0x3c00, 0x1, 0x1);
        gbc.writeMem(0x29de, { 0x33 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc8fa, gbc.sp());
        EXPECT(0x29df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02B6
        gbc.setState(0x420b, 0xa845, 0xf570, 0x298c, 0x1d1f, 0xdbef, 0x1, 0x1);
        gbc.writeMem(0x420b, { 0x33 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa846, gbc.sp());
        EXPECT(0x420c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02B7
        gbc.setState(0xec56, 0xc39b, 0x3450, 0x41f4, 0xf625, 0xdd4c, 0x0, 0x0);
        gbc.writeMem(0xec56, { 0x33 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc39c, gbc.sp());
        EXPECT(0xec57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xec56));
        // 33 02B8
        gbc.setState(0xd8f8, 0x83e4, 0x7800, 0x29db, 0x22cd, 0x9ca, 0x1, 0x0);
        gbc.writeMem(0xd8f8, { 0x33 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x83e5, gbc.sp());
        EXPECT(0xd8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd8f8));
        // 33 02B9
        gbc.setState(0xc388, 0xc0a0, 0x5e80, 0xf915, 0x3fdb, 0x1a44, 0x1, 0x1);
        gbc.writeMem(0xc388, { 0x33 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc0a1, gbc.sp());
        EXPECT(0xc389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc388));
        // 33 02BA
        gbc.setState(0xd604, 0x7776, 0xb1a0, 0x444d, 0x30d8, 0xba50, 0x0, 0x1);
        gbc.writeMem(0xd604, { 0x33 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7777, gbc.sp());
        EXPECT(0xd605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd604));
        // 33 02BB
        gbc.setState(0x403c, 0x7dc6, 0x7db0, 0x3d71, 0x8eed, 0x9131, 0x0, 0x0);
        gbc.writeMem(0x403c, { 0x33 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7dc7, gbc.sp());
        EXPECT(0x403d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02BC
        gbc.setState(0x2da0, 0xf231, 0x22a0, 0x642b, 0xa0fe, 0x3df4, 0x0, 0x0);
        gbc.writeMem(0x2da0, { 0x33 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf232, gbc.sp());
        EXPECT(0x2da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02BD
        gbc.setState(0xaf69, 0x7bc8, 0xc660, 0xae3c, 0x8bf5, 0xefc9, 0x0, 0x0);
        gbc.writeMem(0xaf69, { 0x33 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7bc9, gbc.sp());
        EXPECT(0xaf6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaf69));
        // 33 02BE
        gbc.setState(0xc432, 0x9bd2, 0xbed0, 0x4bf, 0x4d44, 0x2886, 0x0, 0x0);
        gbc.writeMem(0xc432, { 0x33 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9bd3, gbc.sp());
        EXPECT(0xc433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc432));
        // 33 02BF
        gbc.setState(0xdf7, 0xcb9e, 0xc460, 0x40d0, 0xebb2, 0xf8e4, 0x1, 0x1);
        gbc.writeMem(0xdf7, { 0x33 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcb9f, gbc.sp());
        EXPECT(0xdf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02C0
        gbc.setState(0x1d44, 0x1510, 0xa00, 0x33ea, 0xab66, 0xf5f8, 0x0, 0x0);
        gbc.writeMem(0x1d44, { 0x33 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1511, gbc.sp());
        EXPECT(0x1d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02C1
        gbc.setState(0xcbab, 0xb14f, 0x8210, 0x394b, 0xd5aa, 0x5ba0, 0x1, 0x0);
        gbc.writeMem(0xcbab, { 0x33 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb150, gbc.sp());
        EXPECT(0xcbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcbab));
        // 33 02C2
        gbc.setState(0x85e9, 0xb635, 0x2e0, 0xffe, 0xd806, 0x9b9d, 0x1, 0x0);
        gbc.writeMem(0x85e9, { 0x33 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb636, gbc.sp());
        EXPECT(0x85ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x85e9));
        // 33 02C3
        gbc.setState(0x53ca, 0xceb, 0x3fb0, 0x5b14, 0xe2b1, 0x1b81, 0x1, 0x1);
        gbc.writeMem(0x53ca, { 0x33 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcec, gbc.sp());
        EXPECT(0x53cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02C4
        gbc.setState(0x2087, 0x3e8a, 0x4450, 0x7830, 0xfd4f, 0xb6e4, 0x0, 0x0);
        gbc.writeMem(0x2087, { 0x33 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3e8b, gbc.sp());
        EXPECT(0x2088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02C5
        gbc.setState(0x47c4, 0x9ef5, 0x9d10, 0x2d39, 0x3e55, 0xffe0, 0x1, 0x0);
        gbc.writeMem(0x47c4, { 0x33 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9ef6, gbc.sp());
        EXPECT(0x47c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02C6
        gbc.setState(0x19b0, 0x886f, 0x8db0, 0xeac8, 0x2b80, 0x9785, 0x1, 0x0);
        gbc.writeMem(0x19b0, { 0x33 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8870, gbc.sp());
        EXPECT(0x19b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02C8
        gbc.setState(0x9817, 0xd72e, 0x8d80, 0x29c6, 0x6261, 0xc36a, 0x1, 0x1);
        gbc.writeMem(0x9817, { 0x33 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd72f, gbc.sp());
        EXPECT(0x9818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9817));
        // 33 02CA
        gbc.setState(0x2a0c, 0xfd17, 0x3e20, 0x69a, 0x43ed, 0x94e4, 0x0, 0x0);
        gbc.writeMem(0x2a0c, { 0x33 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfd18, gbc.sp());
        EXPECT(0x2a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02CB
        gbc.setState(0x26e0, 0xdb35, 0x60f0, 0x88f6, 0xb1d2, 0xed5d, 0x0, 0x0);
        gbc.writeMem(0x26e0, { 0x33 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdb36, gbc.sp());
        EXPECT(0x26e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02CC
        gbc.setState(0x8e9d, 0x8d83, 0xbc30, 0xf166, 0xcdbf, 0xd4aa, 0x1, 0x0);
        gbc.writeMem(0x8e9d, { 0x33 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8d84, gbc.sp());
        EXPECT(0x8e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8e9d));
        // 33 02CD
        gbc.setState(0x4b30, 0xabb1, 0x2770, 0xae66, 0x570f, 0x5948, 0x1, 0x0);
        gbc.writeMem(0x4b30, { 0x33 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xabb2, gbc.sp());
        EXPECT(0x4b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02CE
        gbc.setState(0x7bf8, 0xd273, 0x8af0, 0x5edd, 0x4587, 0x7da4, 0x1, 0x1);
        gbc.writeMem(0x7bf8, { 0x33 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd274, gbc.sp());
        EXPECT(0x7bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02CF
        gbc.setState(0x3153, 0xac1c, 0xa840, 0x768e, 0x4eb6, 0xcf32, 0x1, 0x0);
        gbc.writeMem(0x3153, { 0x33 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xac1d, gbc.sp());
        EXPECT(0x3154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02D0
        gbc.setState(0x1d2a, 0x460d, 0xb860, 0x92e8, 0x70f6, 0x8e22, 0x0, 0x1);
        gbc.writeMem(0x1d2a, { 0x33 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x460e, gbc.sp());
        EXPECT(0x1d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02D1
        gbc.setState(0x4685, 0xcea6, 0x7ea0, 0x65b4, 0x687c, 0x6075, 0x0, 0x1);
        gbc.writeMem(0x4685, { 0x33 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcea7, gbc.sp());
        EXPECT(0x4686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02D2
        gbc.setState(0x66d4, 0x8961, 0xf060, 0x91, 0x4583, 0xe458, 0x0, 0x1);
        gbc.writeMem(0x66d4, { 0x33 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8962, gbc.sp());
        EXPECT(0x66d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02D3
        gbc.setState(0x6f77, 0x4a45, 0x68e0, 0x7367, 0xfa07, 0xd1c9, 0x0, 0x0);
        gbc.writeMem(0x6f77, { 0x33 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4a46, gbc.sp());
        EXPECT(0x6f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02D4
        gbc.setState(0x40bc, 0x1b19, 0x24b0, 0xcc11, 0xe645, 0xf53e, 0x1, 0x1);
        gbc.writeMem(0x40bc, { 0x33 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1b1a, gbc.sp());
        EXPECT(0x40bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02D5
        gbc.setState(0x5c50, 0x3cd3, 0x3070, 0xee2, 0x66cd, 0x49d2, 0x1, 0x1);
        gbc.writeMem(0x5c50, { 0x33 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3cd4, gbc.sp());
        EXPECT(0x5c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02D6
        gbc.setState(0xc5cb, 0x8c99, 0x5440, 0xace1, 0xa96, 0x54dc, 0x0, 0x1);
        gbc.writeMem(0xc5cb, { 0x33 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8c9a, gbc.sp());
        EXPECT(0xc5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc5cb));
        // 33 02D7
        gbc.setState(0xe512, 0x6f23, 0xcf00, 0xa261, 0xab44, 0x893a, 0x0, 0x0);
        gbc.writeMem(0xe512, { 0x33 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6f24, gbc.sp());
        EXPECT(0xe513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe512));
        // 33 02D8
        gbc.setState(0x5ccd, 0xc6ee, 0x95b0, 0x6665, 0x72c5, 0x47f2, 0x1, 0x0);
        gbc.writeMem(0x5ccd, { 0x33 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc6ef, gbc.sp());
        EXPECT(0x5cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02D9
        gbc.setState(0x1a87, 0x8b17, 0xd580, 0xcf20, 0x803c, 0x9b10, 0x1, 0x0);
        gbc.writeMem(0x1a87, { 0x33 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8b18, gbc.sp());
        EXPECT(0x1a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02DA
        gbc.setState(0x1c1a, 0x11cb, 0x890, 0xcd9c, 0xe195, 0xa0d3, 0x0, 0x1);
        gbc.writeMem(0x1c1a, { 0x33 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x11cc, gbc.sp());
        EXPECT(0x1c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02DB
        gbc.setState(0x251f, 0xbad7, 0x2740, 0xd106, 0x95d3, 0xc8da, 0x0, 0x1);
        gbc.writeMem(0x251f, { 0x33 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbad8, gbc.sp());
        EXPECT(0x2520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02DC
        gbc.setState(0x29b8, 0x934a, 0xfd70, 0x2891, 0xce57, 0xb283, 0x1, 0x0);
        gbc.writeMem(0x29b8, { 0x33 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x934b, gbc.sp());
        EXPECT(0x29b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02DD
        gbc.setState(0x5a51, 0xc16b, 0xc8c0, 0x15c0, 0xf05d, 0x7c1f, 0x1, 0x0);
        gbc.writeMem(0x5a51, { 0x33 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc16c, gbc.sp());
        EXPECT(0x5a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02DE
        gbc.setState(0x15e6, 0xe467, 0x1bf0, 0xbbca, 0xb5e7, 0x1ed4, 0x0, 0x0);
        gbc.writeMem(0x15e6, { 0x33 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe468, gbc.sp());
        EXPECT(0x15e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02DF
        gbc.setState(0x482d, 0xd746, 0x8080, 0x8b43, 0x8395, 0xcbf7, 0x1, 0x0);
        gbc.writeMem(0x482d, { 0x33 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd747, gbc.sp());
        EXPECT(0x482e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02E0
        gbc.setState(0xec3d, 0xa4b1, 0x2a00, 0x7f2b, 0x97b7, 0x4904, 0x1, 0x1);
        gbc.writeMem(0xec3d, { 0x33 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa4b2, gbc.sp());
        EXPECT(0xec3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xec3d));
        // 33 02E1
        gbc.setState(0x6b3, 0xea74, 0x7840, 0x3f16, 0x16a4, 0x4cd7, 0x1, 0x1);
        gbc.writeMem(0x6b3, { 0x33 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xea75, gbc.sp());
        EXPECT(0x6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02E2
        gbc.setState(0x83f3, 0xfce4, 0xf530, 0x2418, 0xd405, 0x4f93, 0x1, 0x0);
        gbc.writeMem(0x83f3, { 0x33 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfce5, gbc.sp());
        EXPECT(0x83f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x83f3));
        // 33 02E4
        gbc.setState(0xc029, 0xd94, 0x5180, 0xd5e7, 0x5257, 0x98a2, 0x0, 0x1);
        gbc.writeMem(0xc029, { 0x33 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd95, gbc.sp());
        EXPECT(0xc02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc029));
        // 33 02E5
        gbc.setState(0x6452, 0xc470, 0x6b60, 0x35a2, 0x93d5, 0xa124, 0x1, 0x0);
        gbc.writeMem(0x6452, { 0x33 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc471, gbc.sp());
        EXPECT(0x6453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02E6
        gbc.setState(0x180e, 0x4d9, 0xc390, 0xb4c4, 0x8641, 0x1c4a, 0x1, 0x0);
        gbc.writeMem(0x180e, { 0x33 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4da, gbc.sp());
        EXPECT(0x180f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02E7
        gbc.setState(0xe4d1, 0x552e, 0x860, 0x2fe3, 0x8386, 0xa28b, 0x1, 0x0);
        gbc.writeMem(0xe4d1, { 0x33 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x552f, gbc.sp());
        EXPECT(0xe4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe4d1));
        // 33 02E8
        gbc.setState(0xef6c, 0xc778, 0x4680, 0xab57, 0x61d8, 0xcbb6, 0x1, 0x0);
        gbc.writeMem(0xef6c, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc779, gbc.sp());
        EXPECT(0xef6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xef6c));
        // 33 02E9
        gbc.setState(0x1c0a, 0x5b1a, 0x65b0, 0x1b3e, 0xdb87, 0x3f2c, 0x0, 0x0);
        gbc.writeMem(0x1c0a, { 0x33 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5b1b, gbc.sp());
        EXPECT(0x1c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02EA
        gbc.setState(0x66ff, 0xf13d, 0x9070, 0xa004, 0x66b1, 0xc023, 0x0, 0x1);
        gbc.writeMem(0x66ff, { 0x33 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf13e, gbc.sp());
        EXPECT(0x6700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02EC
        gbc.setState(0x2e70, 0x5b6d, 0x46c0, 0xd495, 0xcb3f, 0x3fea, 0x1, 0x1);
        gbc.writeMem(0x2e70, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5b6e, gbc.sp());
        EXPECT(0x2e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02ED
        gbc.setState(0xd767, 0x6f98, 0xb350, 0x76e1, 0xad90, 0x1517, 0x1, 0x1);
        gbc.writeMem(0xd767, { 0x33 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6f99, gbc.sp());
        EXPECT(0xd768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd767));
        // 33 02EE
        gbc.setState(0xc3b3, 0x9ecb, 0x95e0, 0x30f7, 0x251c, 0xbec8, 0x1, 0x1);
        gbc.writeMem(0xc3b3, { 0x33 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9ecc, gbc.sp());
        EXPECT(0xc3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc3b3));
        // 33 02EF
        gbc.setState(0x1612, 0x1d35, 0xb850, 0x1382, 0xfd71, 0x7110, 0x1, 0x1);
        gbc.writeMem(0x1612, { 0x33 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1d36, gbc.sp());
        EXPECT(0x1613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02F0
        gbc.setState(0xefb1, 0xfbc7, 0x8d40, 0xf538, 0x27fe, 0xba69, 0x0, 0x0);
        gbc.writeMem(0xefb1, { 0x33 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfbc8, gbc.sp());
        EXPECT(0xefb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xefb1));
        // 33 02F1
        gbc.setState(0x1bda, 0xdb00, 0x82e0, 0x7abe, 0xdfe5, 0xa7d6, 0x0, 0x0);
        gbc.writeMem(0x1bda, { 0x33 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdb01, gbc.sp());
        EXPECT(0x1bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02F2
        gbc.setState(0xa0cf, 0x49a3, 0xebc0, 0xa74e, 0x4b70, 0x753a, 0x0, 0x1);
        gbc.writeMem(0xa0cf, { 0x33 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x49a4, gbc.sp());
        EXPECT(0xa0d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa0cf));
        // 33 02F3
        gbc.setState(0x4d02, 0x88ee, 0x29e0, 0x2814, 0x13af, 0x1ae2, 0x1, 0x0);
        gbc.writeMem(0x4d02, { 0x33 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x88ef, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02F4
        gbc.setState(0x6720, 0xe436, 0x4e10, 0xade5, 0x9444, 0xb9aa, 0x0, 0x1);
        gbc.writeMem(0x6720, { 0x33 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe437, gbc.sp());
        EXPECT(0x6721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02F5
        gbc.setState(0xc413, 0xe850, 0xcf80, 0x2a28, 0x6dca, 0xbb0f, 0x1, 0x1);
        gbc.writeMem(0xc413, { 0x33 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe851, gbc.sp());
        EXPECT(0xc414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc413));
        // 33 02F6
        gbc.setState(0x5d24, 0x75a5, 0xa2b0, 0x152a, 0xf722, 0xe481, 0x0, 0x1);
        gbc.writeMem(0x5d24, { 0x33 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x75a6, gbc.sp());
        EXPECT(0x5d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02F7
        gbc.setState(0x82fa, 0xe0d, 0xa4d0, 0x9a6d, 0xad83, 0xcc58, 0x0, 0x1);
        gbc.writeMem(0x82fa, { 0x33 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe0e, gbc.sp());
        EXPECT(0x82fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x82fa));
        // 33 02F9
        gbc.setState(0x3d57, 0x8f26, 0x6420, 0x2d35, 0xe93c, 0x864b, 0x0, 0x1);
        gbc.writeMem(0x3d57, { 0x33 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8f27, gbc.sp());
        EXPECT(0x3d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02FA
        gbc.setState(0x8f5c, 0x6a3, 0x7f20, 0x7632, 0xf922, 0xd275, 0x0, 0x1);
        gbc.writeMem(0x8f5c, { 0x33 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6a4, gbc.sp());
        EXPECT(0x8f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8f5c));
        // 33 02FB
        gbc.setState(0x679d, 0x1904, 0x3de0, 0x7137, 0x447f, 0xae69, 0x0, 0x0);
        gbc.writeMem(0x679d, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1905, gbc.sp());
        EXPECT(0x679e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02FC
        gbc.setState(0x6004, 0x1bb2, 0xe740, 0x2173, 0xc252, 0xa0f5, 0x0, 0x0);
        gbc.writeMem(0x6004, { 0x33 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1bb3, gbc.sp());
        EXPECT(0x6005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 02FD
        gbc.setState(0x8e3c, 0xd6cf, 0x3d00, 0x6694, 0x9a94, 0x1f57, 0x1, 0x0);
        gbc.writeMem(0x8e3c, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd6d0, gbc.sp());
        EXPECT(0x8e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8e3c));
        // 33 02FE
        gbc.setState(0x369e, 0x257d, 0x91f0, 0x754d, 0xba4a, 0x2801, 0x0, 0x1);
        gbc.writeMem(0x369e, { 0x33 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x257e, gbc.sp());
        EXPECT(0x369f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 02FF
        gbc.setState(0x7c5d, 0xbc3b, 0x8c50, 0x7eda, 0x49ff, 0xb860, 0x0, 0x1);
        gbc.writeMem(0x7c5d, { 0x33 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbc3c, gbc.sp());
        EXPECT(0x7c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0300
        gbc.setState(0x7745, 0xc18e, 0x78e0, 0x380a, 0x1a3, 0x153c, 0x0, 0x1);
        gbc.writeMem(0x7745, { 0x33 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc18f, gbc.sp());
        EXPECT(0x7746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0301
        gbc.setState(0xd658, 0xcc9e, 0x4690, 0xedb2, 0x7520, 0xaf90, 0x1, 0x0);
        gbc.writeMem(0xd658, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcc9f, gbc.sp());
        EXPECT(0xd659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd658));
        // 33 0302
        gbc.setState(0xe60f, 0x15c7, 0xccb0, 0xf445, 0xbc5e, 0x4588, 0x0, 0x1);
        gbc.writeMem(0xe60f, { 0x33 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x15c8, gbc.sp());
        EXPECT(0xe610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe60f));
        // 33 0303
        gbc.setState(0x87bb, 0xa05a, 0xf620, 0x64b3, 0x1a44, 0x3b56, 0x0, 0x0);
        gbc.writeMem(0x87bb, { 0x33 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa05b, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x87bb));
        // 33 0304
        gbc.setState(0xc255, 0xbe7f, 0x7d40, 0x2377, 0x6460, 0xc494, 0x1, 0x1);
        gbc.writeMem(0xc255, { 0x33 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbe80, gbc.sp());
        EXPECT(0xc256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc255));
        // 33 0305
        gbc.setState(0x9482, 0x90a0, 0xa2d0, 0xc5f, 0xdefa, 0x9545, 0x0, 0x0);
        gbc.writeMem(0x9482, { 0x33 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x90a1, gbc.sp());
        EXPECT(0x9483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9482));
        // 33 0306
        gbc.setState(0x605d, 0xa7ed, 0xa7c0, 0x2172, 0x16fc, 0xb651, 0x0, 0x0);
        gbc.writeMem(0x605d, { 0x33 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa7ee, gbc.sp());
        EXPECT(0x605e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0307
        gbc.setState(0xa78b, 0x8990, 0xc290, 0xb46b, 0x283b, 0xf2cf, 0x1, 0x1);
        gbc.writeMem(0xa78b, { 0x33 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8991, gbc.sp());
        EXPECT(0xa78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa78b));
        // 33 0308
        gbc.setState(0xe542, 0x3b7b, 0x82d0, 0xcc0a, 0xe015, 0x6712, 0x0, 0x0);
        gbc.writeMem(0xe542, { 0x33 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3b7c, gbc.sp());
        EXPECT(0xe543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe542));
        // 33 0309
        gbc.setState(0xbbfd, 0x5a55, 0xe200, 0xa563, 0xf587, 0x365c, 0x0, 0x0);
        gbc.writeMem(0xbbfd, { 0x33 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5a56, gbc.sp());
        EXPECT(0xbbfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbbfd));
        // 33 030A
        gbc.setState(0x4e4, 0x131, 0x6be0, 0x74ba, 0x1960, 0x8297, 0x1, 0x1);
        gbc.writeMem(0x4e4, { 0x33 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x132, gbc.sp());
        EXPECT(0x4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 030B
        gbc.setState(0x4449, 0xc304, 0x4350, 0x6d9c, 0x7bbd, 0x6123, 0x0, 0x1);
        gbc.writeMem(0x4449, { 0x33 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc305, gbc.sp());
        EXPECT(0x444a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 030C
        gbc.setState(0x7a37, 0xa72b, 0x65b0, 0xc2f1, 0x85e2, 0x18b, 0x0, 0x0);
        gbc.writeMem(0x7a37, { 0x33 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa72c, gbc.sp());
        EXPECT(0x7a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 030D
        gbc.setState(0x17e0, 0x1053, 0x900, 0xb3c2, 0xdb81, 0xfb96, 0x1, 0x0);
        gbc.writeMem(0x17e0, { 0x33 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1054, gbc.sp());
        EXPECT(0x17e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 030E
        gbc.setState(0x9c89, 0x994f, 0xfa00, 0x93df, 0x7fea, 0x2b3d, 0x0, 0x1);
        gbc.writeMem(0x9c89, { 0x33 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9950, gbc.sp());
        EXPECT(0x9c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9c89));
        // 33 030F
        gbc.setState(0xb8d4, 0x8a6, 0xdb00, 0x6a3d, 0x3bcf, 0x4a48, 0x1, 0x0);
        gbc.writeMem(0xb8d4, { 0x33 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8a7, gbc.sp());
        EXPECT(0xb8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb8d4));
        // 33 0310
        gbc.setState(0xe9c2, 0xe3b7, 0xf140, 0x5c9e, 0x38df, 0x801d, 0x0, 0x0);
        gbc.writeMem(0xe9c2, { 0x33 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe3b8, gbc.sp());
        EXPECT(0xe9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe9c2));
        // 33 0311
        gbc.setState(0xc9a, 0xea63, 0x5360, 0x8df5, 0x83ad, 0x6787, 0x1, 0x1);
        gbc.writeMem(0xc9a, { 0x33 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xea64, gbc.sp());
        EXPECT(0xc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0312
        gbc.setState(0xac14, 0xb96b, 0xd0f0, 0xa97c, 0xeb53, 0xd989, 0x1, 0x0);
        gbc.writeMem(0xac14, { 0x33 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb96c, gbc.sp());
        EXPECT(0xac15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xac14));
        // 33 0313
        gbc.setState(0xdfcb, 0x6e1, 0xb60, 0xb3a9, 0x1ddb, 0xc6cb, 0x1, 0x0);
        gbc.writeMem(0xdfcb, { 0x33 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6e2, gbc.sp());
        EXPECT(0xdfcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdfcb));
        // 33 0314
        gbc.setState(0x9867, 0x5d4b, 0xd0c0, 0xdd8e, 0xc65f, 0xf73a, 0x0, 0x0);
        gbc.writeMem(0x9867, { 0x33 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5d4c, gbc.sp());
        EXPECT(0x9868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9867));
        // 33 0315
        gbc.setState(0xe86a, 0x9b41, 0xa20, 0x3a06, 0xd71a, 0xa5e7, 0x0, 0x1);
        gbc.writeMem(0xe86a, { 0x33 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9b42, gbc.sp());
        EXPECT(0xe86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe86a));
        // 33 0316
        gbc.setState(0x40cd, 0x4c24, 0x32c0, 0x12ee, 0x897c, 0xad6f, 0x0, 0x1);
        gbc.writeMem(0x40cd, { 0x33 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4c25, gbc.sp());
        EXPECT(0x40ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0317
        gbc.setState(0xb477, 0x8f70, 0x9ea0, 0x5afa, 0x4033, 0xe6bc, 0x0, 0x0);
        gbc.writeMem(0xb477, { 0x33 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8f71, gbc.sp());
        EXPECT(0xb478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb477));
        // 33 0318
        gbc.setState(0x37f1, 0x9c9c, 0x24c0, 0xa6f0, 0x4a15, 0x7c0f, 0x1, 0x0);
        gbc.writeMem(0x37f1, { 0x33 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9c9d, gbc.sp());
        EXPECT(0x37f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0319
        gbc.setState(0xa1d6, 0xbd48, 0xa3c0, 0x66ee, 0xb6fc, 0x95a7, 0x1, 0x1);
        gbc.writeMem(0xa1d6, { 0x33 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbd49, gbc.sp());
        EXPECT(0xa1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa1d6));
        // 33 031A
        gbc.setState(0x66d8, 0x7344, 0x69c0, 0xe111, 0x9cad, 0xafc4, 0x0, 0x0);
        gbc.writeMem(0x66d8, { 0x33 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7345, gbc.sp());
        EXPECT(0x66d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 031B
        gbc.setState(0xb77b, 0x9def, 0xfa30, 0xf1dc, 0xb41c, 0x714d, 0x0, 0x1);
        gbc.writeMem(0xb77b, { 0x33 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9df0, gbc.sp());
        EXPECT(0xb77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb77b));
        // 33 031C
        gbc.setState(0xaff6, 0xd30c, 0x2e80, 0x105a, 0xa1ce, 0x5b90, 0x0, 0x1);
        gbc.writeMem(0xaff6, { 0x33 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd30d, gbc.sp());
        EXPECT(0xaff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaff6));
        // 33 031F
        gbc.setState(0xc693, 0xb49a, 0x1040, 0xc920, 0x4b27, 0xc6a5, 0x1, 0x1);
        gbc.writeMem(0xc693, { 0x33 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb49b, gbc.sp());
        EXPECT(0xc694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc693));
        // 33 0321
        gbc.setState(0xe71d, 0x7d37, 0x9c00, 0xeec4, 0x1fed, 0xbb84, 0x1, 0x1);
        gbc.writeMem(0xe71d, { 0x33 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7d38, gbc.sp());
        EXPECT(0xe71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe71d));
        // 33 0322
        gbc.setState(0xb843, 0xf73e, 0x6fb0, 0x4289, 0xae30, 0xdb1, 0x1, 0x0);
        gbc.writeMem(0xb843, { 0x33 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf73f, gbc.sp());
        EXPECT(0xb844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb843));
        // 33 0323
        gbc.setState(0xdf1, 0xb966, 0x3900, 0x6b1, 0xc13, 0x3a73, 0x0, 0x0);
        gbc.writeMem(0xdf1, { 0x33 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb967, gbc.sp());
        EXPECT(0xdf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0324
        gbc.setState(0x7ed1, 0x52c2, 0x5250, 0x2650, 0x4d2e, 0x7eb5, 0x1, 0x1);
        gbc.writeMem(0x7ed1, { 0x33 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x52c3, gbc.sp());
        EXPECT(0x7ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0325
        gbc.setState(0xdc40, 0xee3d, 0x690, 0x767d, 0x7a22, 0x19d0, 0x1, 0x1);
        gbc.writeMem(0xdc40, { 0x33 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xee3e, gbc.sp());
        EXPECT(0xdc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdc40));
        // 33 0326
        gbc.setState(0x40d4, 0xca, 0xd9a0, 0xf0fb, 0x6e6d, 0x6482, 0x1, 0x0);
        gbc.writeMem(0x40d4, { 0x33 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcb, gbc.sp());
        EXPECT(0x40d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0327
        gbc.setState(0x8963, 0x3c21, 0xd190, 0x6abd, 0xaa0f, 0xc0a7, 0x1, 0x0);
        gbc.writeMem(0x8963, { 0x33 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3c22, gbc.sp());
        EXPECT(0x8964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8963));
        // 33 0328
        gbc.setState(0x6dc1, 0xec01, 0xfa90, 0xbb7c, 0x281f, 0xf812, 0x0, 0x0);
        gbc.writeMem(0x6dc1, { 0x33 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xec02, gbc.sp());
        EXPECT(0x6dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0329
        gbc.setState(0x148a, 0xb1f2, 0x8800, 0x6343, 0x25f3, 0x963a, 0x1, 0x1);
        gbc.writeMem(0x148a, { 0x33 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb1f3, gbc.sp());
        EXPECT(0x148b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 032A
        gbc.setState(0xca5f, 0x22eb, 0x5380, 0xab92, 0x35b7, 0xc837, 0x0, 0x0);
        gbc.writeMem(0xca5f, { 0x33 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x22ec, gbc.sp());
        EXPECT(0xca60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xca5f));
        // 33 032B
        gbc.setState(0x315a, 0x6ab4, 0x8c90, 0x7cdb, 0xc62b, 0xde9e, 0x1, 0x1);
        gbc.writeMem(0x315a, { 0x33 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6ab5, gbc.sp());
        EXPECT(0x315b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 032C
        gbc.setState(0xd415, 0x2dbc, 0x2520, 0xd794, 0xb52b, 0x228c, 0x1, 0x1);
        gbc.writeMem(0xd415, { 0x33 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2dbd, gbc.sp());
        EXPECT(0xd416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd415));
        // 33 032D
        gbc.setState(0x5fc5, 0x276a, 0xa260, 0x6fa4, 0x3b11, 0x9997, 0x1, 0x0);
        gbc.writeMem(0x5fc5, { 0x33 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x276b, gbc.sp());
        EXPECT(0x5fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 032E
        gbc.setState(0xaa74, 0x7e11, 0xeea0, 0x624e, 0xff5a, 0xf14a, 0x0, 0x0);
        gbc.writeMem(0xaa74, { 0x33 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7e12, gbc.sp());
        EXPECT(0xaa75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaa74));
        // 33 032F
        gbc.setState(0x791, 0xcfca, 0xe240, 0xb24a, 0xd5b5, 0xc84a, 0x0, 0x1);
        gbc.writeMem(0x791, { 0x33 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcfcb, gbc.sp());
        EXPECT(0x792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0330
        gbc.setState(0xa42f, 0x41f5, 0x3c00, 0xa932, 0x3208, 0x3719, 0x1, 0x0);
        gbc.writeMem(0xa42f, { 0x33 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x41f6, gbc.sp());
        EXPECT(0xa430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa42f));
        // 33 0331
        gbc.setState(0x6fbb, 0x5e3e, 0xfdd0, 0x1fd0, 0x131e, 0x2fc6, 0x0, 0x1);
        gbc.writeMem(0x6fbb, { 0x33 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x6fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0332
        gbc.setState(0xb02b, 0x2cee, 0x5dd0, 0xcdb5, 0x498f, 0x9772, 0x0, 0x1);
        gbc.writeMem(0xb02b, { 0x33 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2cef, gbc.sp());
        EXPECT(0xb02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb02b));
        // 33 0333
        gbc.setState(0x633f, 0x37f1, 0x40e0, 0xe3f9, 0x854b, 0xcab5, 0x0, 0x1);
        gbc.writeMem(0x633f, { 0x33 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x37f2, gbc.sp());
        EXPECT(0x6340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0335
        gbc.setState(0xe978, 0xf356, 0x5d60, 0x9053, 0xa112, 0xa205, 0x0, 0x1);
        gbc.writeMem(0xe978, { 0x33 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf357, gbc.sp());
        EXPECT(0xe979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe978));
        // 33 0336
        gbc.setState(0xc76, 0x2563, 0x1580, 0xa7a5, 0x876a, 0x81c7, 0x1, 0x0);
        gbc.writeMem(0xc76, { 0x33 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2564, gbc.sp());
        EXPECT(0xc77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0337
        gbc.setState(0x2f96, 0x79d0, 0xff0, 0xe4d9, 0x592c, 0x1335, 0x0, 0x1);
        gbc.writeMem(0x2f96, { 0x33 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x79d1, gbc.sp());
        EXPECT(0x2f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0338
        gbc.setState(0xc68, 0x16bf, 0xc10, 0xad69, 0xf9af, 0x1616, 0x0, 0x1);
        gbc.writeMem(0xc68, { 0x33 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x16c0, gbc.sp());
        EXPECT(0xc69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0339
        gbc.setState(0x6a9b, 0xddec, 0x5cf0, 0xbd73, 0x210c, 0xdf79, 0x1, 0x0);
        gbc.writeMem(0x6a9b, { 0x33 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdded, gbc.sp());
        EXPECT(0x6a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 033A
        gbc.setState(0x7da0, 0x1e71, 0xb510, 0xebd9, 0xa260, 0x1fad, 0x0, 0x0);
        gbc.writeMem(0x7da0, { 0x33 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1e72, gbc.sp());
        EXPECT(0x7da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 033B
        gbc.setState(0xd774, 0xfd3f, 0xcd10, 0x1979, 0xb1c2, 0xced, 0x0, 0x0);
        gbc.writeMem(0xd774, { 0x33 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfd40, gbc.sp());
        EXPECT(0xd775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd774));
        // 33 033C
        gbc.setState(0x5fbd, 0x987, 0xfe80, 0x6783, 0xb0d7, 0x258f, 0x1, 0x1);
        gbc.writeMem(0x5fbd, { 0x33 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x988, gbc.sp());
        EXPECT(0x5fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 033D
        gbc.setState(0x75cb, 0xede6, 0x2a50, 0x1cae, 0x5c81, 0x48c, 0x1, 0x0);
        gbc.writeMem(0x75cb, { 0x33 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xede7, gbc.sp());
        EXPECT(0x75cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 033E
        gbc.setState(0x8e55, 0xe8a, 0x32e0, 0x6f7a, 0x8a7d, 0x55ea, 0x0, 0x0);
        gbc.writeMem(0x8e55, { 0x33 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe8b, gbc.sp());
        EXPECT(0x8e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8e55));
        // 33 033F
        gbc.setState(0x2715, 0xd4cb, 0xce0, 0x71aa, 0x92c5, 0x89ba, 0x1, 0x0);
        gbc.writeMem(0x2715, { 0x33 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd4cc, gbc.sp());
        EXPECT(0x2716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0340
        gbc.setState(0x9407, 0x90a, 0x3ee0, 0x350c, 0x8d0e, 0xec0c, 0x0, 0x0);
        gbc.writeMem(0x9407, { 0x33 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x90b, gbc.sp());
        EXPECT(0x9408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9407));
        // 33 0341
        gbc.setState(0x2a42, 0x5999, 0xb720, 0x1f1c, 0x5125, 0xe853, 0x0, 0x1);
        gbc.writeMem(0x2a42, { 0x33 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x599a, gbc.sp());
        EXPECT(0x2a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0342
        gbc.setState(0x2ad4, 0xd249, 0x6a80, 0x75f7, 0xe459, 0x993e, 0x1, 0x0);
        gbc.writeMem(0x2ad4, { 0x33 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd24a, gbc.sp());
        EXPECT(0x2ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0343
        gbc.setState(0x9963, 0x7813, 0xc2c0, 0x35c1, 0x20fa, 0x6884, 0x1, 0x0);
        gbc.writeMem(0x9963, { 0x33 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7814, gbc.sp());
        EXPECT(0x9964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9963));
        // 33 0344
        gbc.setState(0x4478, 0xbe1d, 0x5a70, 0x8a8f, 0x39f, 0x26ec, 0x1, 0x0);
        gbc.writeMem(0x4478, { 0x33 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbe1e, gbc.sp());
        EXPECT(0x4479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0345
        gbc.setState(0xd90f, 0x4370, 0x1ca0, 0xa284, 0xde19, 0x8380, 0x1, 0x0);
        gbc.writeMem(0xd90f, { 0x33 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4371, gbc.sp());
        EXPECT(0xd910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd90f));
        // 33 0346
        gbc.setState(0x4908, 0x1e68, 0x8400, 0x7e5, 0xc4fd, 0x9ada, 0x0, 0x1);
        gbc.writeMem(0x4908, { 0x33 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1e69, gbc.sp());
        EXPECT(0x4909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0347
        gbc.setState(0x25e1, 0xab74, 0xab0, 0xb7bc, 0x5bf8, 0xde91, 0x0, 0x1);
        gbc.writeMem(0x25e1, { 0x33 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xab75, gbc.sp());
        EXPECT(0x25e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0348
        gbc.setState(0x3eb7, 0xd754, 0xac90, 0x3381, 0xc25, 0xa250, 0x0, 0x0);
        gbc.writeMem(0x3eb7, { 0x33 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd755, gbc.sp());
        EXPECT(0x3eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0349
        gbc.setState(0x7fbe, 0xe1da, 0x7330, 0xf692, 0xa74d, 0xf8de, 0x1, 0x1);
        gbc.writeMem(0x7fbe, { 0x33 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe1db, gbc.sp());
        EXPECT(0x7fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 034A
        gbc.setState(0x7ab, 0xda4b, 0xa260, 0x9e3e, 0xf4d6, 0x7f52, 0x1, 0x1);
        gbc.writeMem(0x7ab, { 0x33 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xda4c, gbc.sp());
        EXPECT(0x7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 034B
        gbc.setState(0x201d, 0x63e8, 0x1910, 0x4180, 0xdef6, 0x2035, 0x1, 0x1);
        gbc.writeMem(0x201d, { 0x33 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x63e9, gbc.sp());
        EXPECT(0x201e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 034C
        gbc.setState(0xd26d, 0x28f7, 0x2af0, 0x7a85, 0x6f8a, 0xfe58, 0x1, 0x1);
        gbc.writeMem(0xd26d, { 0x33 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x28f8, gbc.sp());
        EXPECT(0xd26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd26d));
        // 33 034D
        gbc.setState(0x15a3, 0x8d7b, 0x5d60, 0x979a, 0xd98f, 0x7a9b, 0x0, 0x0);
        gbc.writeMem(0x15a3, { 0x33 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8d7c, gbc.sp());
        EXPECT(0x15a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 034E
        gbc.setState(0xb106, 0x9057, 0xbef0, 0xef38, 0xb027, 0x5a2c, 0x1, 0x1);
        gbc.writeMem(0xb106, { 0x33 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9058, gbc.sp());
        EXPECT(0xb107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb106));
        // 33 034F
        gbc.setState(0x21f7, 0x3e8e, 0x45d0, 0x6c82, 0xf4a0, 0xa2a2, 0x0, 0x1);
        gbc.writeMem(0x21f7, { 0x33 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3e8f, gbc.sp());
        EXPECT(0x21f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0350
        gbc.setState(0x8bdf, 0x6a4e, 0x300, 0xb409, 0x1ccd, 0xd308, 0x1, 0x0);
        gbc.writeMem(0x8bdf, { 0x33 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6a4f, gbc.sp());
        EXPECT(0x8be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8bdf));
        // 33 0351
        gbc.setState(0x8310, 0x90bb, 0xdc50, 0xe721, 0xed7d, 0x7c88, 0x1, 0x0);
        gbc.writeMem(0x8310, { 0x33 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x90bc, gbc.sp());
        EXPECT(0x8311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8310));
        // 33 0352
        gbc.setState(0x40e6, 0xfa6f, 0xaf30, 0x876d, 0x13fa, 0xb2bb, 0x1, 0x0);
        gbc.writeMem(0x40e6, { 0x33 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0x40e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0353
        gbc.setState(0xeddd, 0xe431, 0x7ca0, 0xf4ef, 0x41da, 0x1e0f, 0x1, 0x0);
        gbc.writeMem(0xeddd, { 0x33 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe432, gbc.sp());
        EXPECT(0xedde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xeddd));
        // 33 0354
        gbc.setState(0x4534, 0xe5e3, 0xd640, 0x987b, 0x832c, 0x1c24, 0x1, 0x1);
        gbc.writeMem(0x4534, { 0x33 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe5e4, gbc.sp());
        EXPECT(0x4535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0355
        gbc.setState(0xca7c, 0x4a61, 0x3c50, 0xda1e, 0x4af5, 0xab5e, 0x1, 0x0);
        gbc.writeMem(0xca7c, { 0x33 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4a62, gbc.sp());
        EXPECT(0xca7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xca7c));
        // 33 0356
        gbc.setState(0x438, 0x9c5f, 0x57e0, 0xb034, 0x14a3, 0xbb7e, 0x1, 0x1);
        gbc.writeMem(0x438, { 0x33 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9c60, gbc.sp());
        EXPECT(0x439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0357
        gbc.setState(0x1c1f, 0xb5de, 0xd440, 0xa1b5, 0xa485, 0xa860, 0x1, 0x1);
        gbc.writeMem(0x1c1f, { 0x33 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb5df, gbc.sp());
        EXPECT(0x1c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0358
        gbc.setState(0x366, 0x989c, 0x8460, 0x71a1, 0xaa5a, 0x505b, 0x0, 0x1);
        gbc.writeMem(0x366, { 0x33 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x989d, gbc.sp());
        EXPECT(0x367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0359
        gbc.setState(0xdcb8, 0x555d, 0x5a40, 0x105f, 0xb5f8, 0xa161, 0x1, 0x1);
        gbc.writeMem(0xdcb8, { 0x33 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x555e, gbc.sp());
        EXPECT(0xdcb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdcb8));
        // 33 035A
        gbc.setState(0xa66f, 0x91be, 0xf430, 0xf2db, 0xcc74, 0x46f2, 0x1, 0x0);
        gbc.writeMem(0xa66f, { 0x33 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x91bf, gbc.sp());
        EXPECT(0xa670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa66f));
        // 33 035B
        gbc.setState(0x7f40, 0xa930, 0x3cb0, 0x4f72, 0xbfb4, 0x9260, 0x1, 0x1);
        gbc.writeMem(0x7f40, { 0x33 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa931, gbc.sp());
        EXPECT(0x7f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 035C
        gbc.setState(0x75f5, 0x8e62, 0x80e0, 0x3846, 0x5c2, 0x13a6, 0x0, 0x1);
        gbc.writeMem(0x75f5, { 0x33 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8e63, gbc.sp());
        EXPECT(0x75f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 035D
        gbc.setState(0x72c7, 0x6f0, 0x5f60, 0x21b6, 0x2573, 0xa171, 0x1, 0x0);
        gbc.writeMem(0x72c7, { 0x33 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6f1, gbc.sp());
        EXPECT(0x72c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 035F
        gbc.setState(0xee51, 0xcd54, 0xaa00, 0x4a16, 0x8879, 0x2c61, 0x1, 0x1);
        gbc.writeMem(0xee51, { 0x33 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcd55, gbc.sp());
        EXPECT(0xee52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xee51));
        // 33 0360
        gbc.setState(0xda38, 0xa96c, 0xcc90, 0x2e21, 0x33cc, 0x29f, 0x0, 0x0);
        gbc.writeMem(0xda38, { 0x33 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa96d, gbc.sp());
        EXPECT(0xda39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xda38));
        // 33 0361
        gbc.setState(0x2aed, 0x6e74, 0x4a80, 0x8e3d, 0x2972, 0xbbf9, 0x0, 0x1);
        gbc.writeMem(0x2aed, { 0x33 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6e75, gbc.sp());
        EXPECT(0x2aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0362
        gbc.setState(0xb35, 0x34fd, 0xab70, 0x3392, 0xd626, 0x955d, 0x0, 0x1);
        gbc.writeMem(0xb35, { 0x33 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x34fe, gbc.sp());
        EXPECT(0xb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0364
        gbc.setState(0xc5d4, 0x5ccb, 0x48e0, 0x8143, 0xfc09, 0xfdf4, 0x0, 0x0);
        gbc.writeMem(0xc5d4, { 0x33 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5ccc, gbc.sp());
        EXPECT(0xc5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc5d4));
        // 33 0365
        gbc.setState(0x6dbc, 0xc267, 0x6770, 0x8865, 0x4d5, 0xad7f, 0x1, 0x1);
        gbc.writeMem(0x6dbc, { 0x33 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc268, gbc.sp());
        EXPECT(0x6dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0366
        gbc.setState(0x14c5, 0x797a, 0xbf70, 0x104a, 0x82c5, 0xf32b, 0x1, 0x1);
        gbc.writeMem(0x14c5, { 0x33 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x797b, gbc.sp());
        EXPECT(0x14c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0367
        gbc.setState(0x46fb, 0xc2e1, 0x6bd0, 0xb2d, 0x79cb, 0x8a98, 0x0, 0x1);
        gbc.writeMem(0x46fb, { 0x33 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc2e2, gbc.sp());
        EXPECT(0x46fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0368
        gbc.setState(0xaa65, 0x2951, 0x2b80, 0x9ad0, 0xf160, 0xb2d1, 0x1, 0x0);
        gbc.writeMem(0xaa65, { 0x33 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2952, gbc.sp());
        EXPECT(0xaa66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaa65));
        // 33 0369
        gbc.setState(0xa3d3, 0xade2, 0x120, 0xfc99, 0xb0af, 0x51b6, 0x0, 0x0);
        gbc.writeMem(0xa3d3, { 0x33 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xade3, gbc.sp());
        EXPECT(0xa3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa3d3));
        // 33 036A
        gbc.setState(0x579b, 0x4bd6, 0xa900, 0x3765, 0x783c, 0xa38a, 0x0, 0x1);
        gbc.writeMem(0x579b, { 0x33 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4bd7, gbc.sp());
        EXPECT(0x579c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 036B
        gbc.setState(0x4af8, 0x6fbf, 0xe3d0, 0x8c9c, 0x76ae, 0x77aa, 0x0, 0x1);
        gbc.writeMem(0x4af8, { 0x33 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6fc0, gbc.sp());
        EXPECT(0x4af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 036C
        gbc.setState(0xd007, 0x7196, 0x3ae0, 0x9508, 0x5a, 0x44bf, 0x0, 0x1);
        gbc.writeMem(0xd007, { 0x33 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7197, gbc.sp());
        EXPECT(0xd008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd007));
        // 33 036D
        gbc.setState(0x71ab, 0xd7b9, 0x9f50, 0xe262, 0x75c9, 0xc384, 0x0, 0x1);
        gbc.writeMem(0x71ab, { 0x33 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd7ba, gbc.sp());
        EXPECT(0x71ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 036E
        gbc.setState(0x998, 0x1a3, 0x9c40, 0xe9c1, 0x31f4, 0xb83, 0x1, 0x0);
        gbc.writeMem(0x998, { 0x33 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1a4, gbc.sp());
        EXPECT(0x999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 036F
        gbc.setState(0xd3ff, 0x8ba2, 0xb1a0, 0x82fc, 0x7e6c, 0x3e76, 0x0, 0x0);
        gbc.writeMem(0xd3ff, { 0x33 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8ba3, gbc.sp());
        EXPECT(0xd400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd3ff));
        // 33 0370
        gbc.setState(0x244e, 0x7e99, 0x4de0, 0x8c18, 0x5bcf, 0x5672, 0x0, 0x0);
        gbc.writeMem(0x244e, { 0x33 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7e9a, gbc.sp());
        EXPECT(0x244f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0371
        gbc.setState(0x367d, 0x5866, 0x1770, 0xb009, 0x75ef, 0x5a89, 0x1, 0x0);
        gbc.writeMem(0x367d, { 0x33 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5867, gbc.sp());
        EXPECT(0x367e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0372
        gbc.setState(0xa7ba, 0xee16, 0x5b10, 0xddb5, 0x91ab, 0xea66, 0x0, 0x0);
        gbc.writeMem(0xa7ba, { 0x33 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xee17, gbc.sp());
        EXPECT(0xa7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa7ba));
        // 33 0374
        gbc.setState(0x3934, 0x1c15, 0x43f0, 0xe0c5, 0x6da7, 0xc912, 0x0, 0x1);
        gbc.writeMem(0x3934, { 0x33 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1c16, gbc.sp());
        EXPECT(0x3935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0375
        gbc.setState(0x1698, 0x29ec, 0x3140, 0x8947, 0x56f0, 0xb6, 0x1, 0x1);
        gbc.writeMem(0x1698, { 0x33 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x29ed, gbc.sp());
        EXPECT(0x1699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0376
        gbc.setState(0xa227, 0x1825, 0x3600, 0xfd3, 0xe3dc, 0x9a0a, 0x0, 0x0);
        gbc.writeMem(0xa227, { 0x33 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1826, gbc.sp());
        EXPECT(0xa228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa227));
        // 33 0377
        gbc.setState(0x330b, 0x2e1a, 0x61a0, 0xedc2, 0x96bb, 0xc6db, 0x0, 0x1);
        gbc.writeMem(0x330b, { 0x33 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2e1b, gbc.sp());
        EXPECT(0x330c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0378
        gbc.setState(0xac8f, 0xe8e0, 0x8bb0, 0x355f, 0xbf25, 0x2882, 0x1, 0x1);
        gbc.writeMem(0xac8f, { 0x33 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe8e1, gbc.sp());
        EXPECT(0xac90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xac8f));
        // 33 0379
        gbc.setState(0x1f04, 0x1435, 0x440, 0x5a5d, 0x82ed, 0x758e, 0x0, 0x0);
        gbc.writeMem(0x1f04, { 0x33 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1436, gbc.sp());
        EXPECT(0x1f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 037A
        gbc.setState(0x2c50, 0xc647, 0xd620, 0x2430, 0xe22f, 0x5a1a, 0x0, 0x1);
        gbc.writeMem(0x2c50, { 0x33 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc648, gbc.sp());
        EXPECT(0x2c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 037B
        gbc.setState(0x6096, 0xbbb, 0x8760, 0x6aa2, 0x2bb7, 0xc400, 0x1, 0x0);
        gbc.writeMem(0x6096, { 0x33 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbbc, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 037C
        gbc.setState(0x8103, 0x5583, 0x6440, 0x4d81, 0xdd2b, 0x6a4, 0x1, 0x1);
        gbc.writeMem(0x8103, { 0x33 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5584, gbc.sp());
        EXPECT(0x8104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8103));
        // 33 037D
        gbc.setState(0xe9e, 0xab61, 0xb10, 0x5dc3, 0x2a54, 0x337b, 0x1, 0x0);
        gbc.writeMem(0xe9e, { 0x33 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xab62, gbc.sp());
        EXPECT(0xe9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 037F
        gbc.setState(0xe52, 0x2821, 0x1630, 0xcbd7, 0xd180, 0xaa3d, 0x1, 0x0);
        gbc.writeMem(0xe52, { 0x33 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2822, gbc.sp());
        EXPECT(0xe53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0380
        gbc.setState(0x9b0a, 0x8068, 0x73a0, 0x672e, 0xbcec, 0xe619, 0x0, 0x0);
        gbc.writeMem(0x9b0a, { 0x33 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8069, gbc.sp());
        EXPECT(0x9b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9b0a));
        // 33 0381
        gbc.setState(0x3420, 0xd9a0, 0x150, 0x4835, 0x5172, 0xd5dd, 0x0, 0x1);
        gbc.writeMem(0x3420, { 0x33 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd9a1, gbc.sp());
        EXPECT(0x3421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0382
        gbc.setState(0x197b, 0x54db, 0x6b30, 0x464d, 0x2ee, 0x2698, 0x1, 0x1);
        gbc.writeMem(0x197b, { 0x33 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x54dc, gbc.sp());
        EXPECT(0x197c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0383
        gbc.setState(0x8224, 0xf9fa, 0x7e10, 0xc503, 0x1491, 0xcd54, 0x1, 0x0);
        gbc.writeMem(0x8224, { 0x33 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf9fb, gbc.sp());
        EXPECT(0x8225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8224));
        // 33 0385
        gbc.setState(0x3258, 0xf87, 0x8f40, 0x490a, 0xc70a, 0xcd9a, 0x1, 0x0);
        gbc.writeMem(0x3258, { 0x33 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf88, gbc.sp());
        EXPECT(0x3259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0386
        gbc.setState(0x71ac, 0x8fc7, 0x5fa0, 0xe8c5, 0x89f9, 0xea2, 0x1, 0x1);
        gbc.writeMem(0x71ac, { 0x33 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8fc8, gbc.sp());
        EXPECT(0x71ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0387
        gbc.setState(0x25f4, 0x9444, 0x98d0, 0x13a2, 0xb526, 0xb7db, 0x0, 0x0);
        gbc.writeMem(0x25f4, { 0x33 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9445, gbc.sp());
        EXPECT(0x25f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0388
        gbc.setState(0x450, 0x6bb0, 0x7000, 0xb4fd, 0x23dc, 0x4870, 0x1, 0x1);
        gbc.writeMem(0x450, { 0x33 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6bb1, gbc.sp());
        EXPECT(0x451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0389
        gbc.setState(0x4e5e, 0xc1ce, 0x79b0, 0x4cf3, 0x2267, 0xb92a, 0x0, 0x1);
        gbc.writeMem(0x4e5e, { 0x33 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc1cf, gbc.sp());
        EXPECT(0x4e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 038A
        gbc.setState(0xe483, 0x2d34, 0xcae0, 0x78c0, 0xed73, 0x2c4, 0x0, 0x0);
        gbc.writeMem(0xe483, { 0x33 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2d35, gbc.sp());
        EXPECT(0xe484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe483));
        // 33 038B
        gbc.setState(0xb718, 0xd55d, 0x3d60, 0x8484, 0x6dc, 0x69e4, 0x1, 0x1);
        gbc.writeMem(0xb718, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd55e, gbc.sp());
        EXPECT(0xb719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb718));
        // 33 038C
        gbc.setState(0x2ad7, 0x1f6b, 0x9190, 0x8f9a, 0x7901, 0xa324, 0x1, 0x0);
        gbc.writeMem(0x2ad7, { 0x33 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1f6c, gbc.sp());
        EXPECT(0x2ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 038D
        gbc.setState(0xd7c2, 0x8ae0, 0xe040, 0x240, 0xc5ed, 0x8262, 0x0, 0x1);
        gbc.writeMem(0xd7c2, { 0x33 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8ae1, gbc.sp());
        EXPECT(0xd7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd7c2));
        // 33 038E
        gbc.setState(0x81d8, 0x8f7, 0x2940, 0x836b, 0xdeb7, 0x665c, 0x1, 0x1);
        gbc.writeMem(0x81d8, { 0x33 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8f8, gbc.sp());
        EXPECT(0x81d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x81d8));
        // 33 038F
        gbc.setState(0x47bc, 0x5796, 0x9a00, 0x56fb, 0xa6d2, 0xac6c, 0x1, 0x0);
        gbc.writeMem(0x47bc, { 0x33 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5797, gbc.sp());
        EXPECT(0x47bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0390
        gbc.setState(0x29b8, 0x5b15, 0xf9f0, 0x5fe, 0x7fdc, 0x7564, 0x1, 0x1);
        gbc.writeMem(0x29b8, { 0x33 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5b16, gbc.sp());
        EXPECT(0x29b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0391
        gbc.setState(0x3184, 0xe5f9, 0x6730, 0x1ab6, 0x6aa3, 0xde9f, 0x0, 0x0);
        gbc.writeMem(0x3184, { 0x33 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe5fa, gbc.sp());
        EXPECT(0x3185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0392
        gbc.setState(0xeabd, 0x179e, 0x8100, 0x873f, 0x5b25, 0x2610, 0x0, 0x1);
        gbc.writeMem(0xeabd, { 0x33 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x179f, gbc.sp());
        EXPECT(0xeabe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xeabd));
        // 33 0393
        gbc.setState(0xb5f, 0xd9ee, 0x6880, 0x9aa3, 0x7614, 0xe02d, 0x0, 0x1);
        gbc.writeMem(0xb5f, { 0x33 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd9ef, gbc.sp());
        EXPECT(0xb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 0395
        gbc.setState(0x1ab, 0xe748, 0xa7d0, 0x609d, 0xb6e3, 0x8731, 0x0, 0x0);
        gbc.writeMem(0x1ab, { 0x33 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe749, gbc.sp());
        EXPECT(0x1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 0396
        gbc.setState(0x8bca, 0x3e65, 0xadd0, 0x92b1, 0x9dd5, 0x552f, 0x0, 0x0);
        gbc.writeMem(0x8bca, { 0x33 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3e66, gbc.sp());
        EXPECT(0x8bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8bca));
        // 33 0397
        gbc.setState(0x83f5, 0x4adb, 0x84a0, 0x513c, 0xd1d5, 0xe76c, 0x0, 0x1);
        gbc.writeMem(0x83f5, { 0x33 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4adc, gbc.sp());
        EXPECT(0x83f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x83f5));
        // 33 0398
        gbc.setState(0xde03, 0xfe32, 0xca20, 0xebda, 0xe68c, 0x7cd8, 0x0, 0x0);
        gbc.writeMem(0xde03, { 0x33 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfe33, gbc.sp());
        EXPECT(0xde04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xde03));
        // 33 0399
        gbc.setState(0x63fe, 0xa532, 0x31b0, 0xedba, 0x7afa, 0xb993, 0x1, 0x0);
        gbc.writeMem(0x63fe, { 0x33 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa533, gbc.sp());
        EXPECT(0x63ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 039A
        gbc.setState(0x8ae7, 0x5f7b, 0x42f0, 0xc6dd, 0x4f21, 0x40e5, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0x33 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5f7c, gbc.sp());
        EXPECT(0x8ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8ae7));
        // 33 039B
        gbc.setState(0xbff1, 0xb4a, 0x8900, 0x702b, 0xb53a, 0x9a5, 0x1, 0x0);
        gbc.writeMem(0xbff1, { 0x33 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb4b, gbc.sp());
        EXPECT(0xbff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbff1));
        // 33 039C
        gbc.setState(0xb967, 0x6f92, 0x7f30, 0xd935, 0x800f, 0x864b, 0x1, 0x0);
        gbc.writeMem(0xb967, { 0x33 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6f93, gbc.sp());
        EXPECT(0xb968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb967));
        // 33 039D
        gbc.setState(0x7f9b, 0xe04d, 0x4640, 0x7507, 0xd4a4, 0xac58, 0x0, 0x0);
        gbc.writeMem(0x7f9b, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe04e, gbc.sp());
        EXPECT(0x7f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 039E
        gbc.setState(0x2d8e, 0x10d, 0xbd90, 0x7d44, 0x7d43, 0x3d01, 0x1, 0x0);
        gbc.writeMem(0x2d8e, { 0x33 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x10e, gbc.sp());
        EXPECT(0x2d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 039F
        gbc.setState(0x87c1, 0x64b6, 0xc200, 0x172b, 0xe38, 0x9c10, 0x0, 0x1);
        gbc.writeMem(0x87c1, { 0x33 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x64b7, gbc.sp());
        EXPECT(0x87c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x87c1));
        // 33 03A0
        gbc.setState(0xa5d8, 0x8e81, 0x8890, 0x7634, 0xf8f9, 0x813a, 0x0, 0x1);
        gbc.writeMem(0xa5d8, { 0x33 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8e82, gbc.sp());
        EXPECT(0xa5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa5d8));
        // 33 03A1
        gbc.setState(0xdeb4, 0xb53f, 0xfe80, 0xd268, 0x79b9, 0x6a35, 0x1, 0x1);
        gbc.writeMem(0xdeb4, { 0x33 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb540, gbc.sp());
        EXPECT(0xdeb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdeb4));
        // 33 03A2
        gbc.setState(0x8030, 0x79aa, 0x5910, 0x8ff1, 0x40fe, 0xfa32, 0x0, 0x1);
        gbc.writeMem(0x8030, { 0x33 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x79ab, gbc.sp());
        EXPECT(0x8031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8030));
        // 33 03A3
        gbc.setState(0xaa0c, 0x3bd8, 0xd110, 0xba, 0xa967, 0x9235, 0x0, 0x1);
        gbc.writeMem(0xaa0c, { 0x33 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3bd9, gbc.sp());
        EXPECT(0xaa0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaa0c));
        // 33 03A4
        gbc.setState(0x4b61, 0xee6b, 0x4630, 0xfa49, 0x86a5, 0xb0e6, 0x1, 0x0);
        gbc.writeMem(0x4b61, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xee6c, gbc.sp());
        EXPECT(0x4b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03A5
        gbc.setState(0xd13c, 0xa795, 0x240, 0xd784, 0xf094, 0x6693, 0x0, 0x1);
        gbc.writeMem(0xd13c, { 0x33 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa796, gbc.sp());
        EXPECT(0xd13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd13c));
        // 33 03A6
        gbc.setState(0xb544, 0x25e7, 0xf340, 0xaf, 0x4a2b, 0xe597, 0x1, 0x1);
        gbc.writeMem(0xb544, { 0x33 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x25e8, gbc.sp());
        EXPECT(0xb545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb544));
        // 33 03A7
        gbc.setState(0xb995, 0x5f58, 0x5710, 0x7c12, 0x2566, 0x331c, 0x0, 0x1);
        gbc.writeMem(0xb995, { 0x33 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5f59, gbc.sp());
        EXPECT(0xb996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb995));
        // 33 03A8
        gbc.setState(0xcb52, 0x101, 0x5b0, 0xbb4a, 0xbc18, 0x3e3a, 0x1, 0x1);
        gbc.writeMem(0xcb52, { 0x33 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x102, gbc.sp());
        EXPECT(0xcb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcb52));
        // 33 03A9
        gbc.setState(0x8be2, 0x5236, 0x3400, 0x574d, 0x5637, 0x5be8, 0x0, 0x0);
        gbc.writeMem(0x8be2, { 0x33 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5237, gbc.sp());
        EXPECT(0x8be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8be2));
        // 33 03AA
        gbc.setState(0xabc6, 0x5086, 0x3360, 0x29bc, 0xf54d, 0xcbdd, 0x0, 0x0);
        gbc.writeMem(0xabc6, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5087, gbc.sp());
        EXPECT(0xabc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xabc6));
        // 33 03AB
        gbc.setState(0x1981, 0xde2d, 0x8310, 0x5a39, 0x905b, 0x49e3, 0x0, 0x0);
        gbc.writeMem(0x1981, { 0x33 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xde2e, gbc.sp());
        EXPECT(0x1982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03AC
        gbc.setState(0x53a0, 0xf469, 0x3780, 0x5a52, 0x3a1e, 0x9fdb, 0x1, 0x1);
        gbc.writeMem(0x53a0, { 0x33 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf46a, gbc.sp());
        EXPECT(0x53a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03AD
        gbc.setState(0xc792, 0xf367, 0xf630, 0x5d07, 0x8cbc, 0xfe9a, 0x0, 0x1);
        gbc.writeMem(0xc792, { 0x33 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf368, gbc.sp());
        EXPECT(0xc793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc792));
        // 33 03AE
        gbc.setState(0xd2a9, 0xdc2c, 0xf9d0, 0xd521, 0xb004, 0xdacf, 0x0, 0x0);
        gbc.writeMem(0xd2a9, { 0x33 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdc2d, gbc.sp());
        EXPECT(0xd2aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd2a9));
        // 33 03AF
        gbc.setState(0x1d3e, 0xa03d, 0x6860, 0x90fb, 0x4d37, 0xa9c0, 0x0, 0x0);
        gbc.writeMem(0x1d3e, { 0x33 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa03e, gbc.sp());
        EXPECT(0x1d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03B0
        gbc.setState(0xa59a, 0x1848, 0xbea0, 0x4e78, 0xd253, 0x9d94, 0x1, 0x1);
        gbc.writeMem(0xa59a, { 0x33 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1849, gbc.sp());
        EXPECT(0xa59b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa59a));
        // 33 03B1
        gbc.setState(0xd90d, 0xcbf8, 0x56d0, 0x3bdd, 0x2468, 0x4c41, 0x0, 0x0);
        gbc.writeMem(0xd90d, { 0x33 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcbf9, gbc.sp());
        EXPECT(0xd90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd90d));
        // 33 03B2
        gbc.setState(0xa2a3, 0x404a, 0x3bc0, 0x46e7, 0x797d, 0x6c4a, 0x1, 0x0);
        gbc.writeMem(0xa2a3, { 0x33 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x404b, gbc.sp());
        EXPECT(0xa2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa2a3));
        // 33 03B3
        gbc.setState(0xcd53, 0x4db0, 0x12f0, 0xc53, 0xc9bf, 0x28a4, 0x1, 0x0);
        gbc.writeMem(0xcd53, { 0x33 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4db1, gbc.sp());
        EXPECT(0xcd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcd53));
        // 33 03B4
        gbc.setState(0x1cb8, 0xb617, 0x7f20, 0x6f74, 0x2f0a, 0x24c1, 0x1, 0x0);
        gbc.writeMem(0x1cb8, { 0x33 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb618, gbc.sp());
        EXPECT(0x1cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03B5
        gbc.setState(0x5cb5, 0x7f81, 0x3d10, 0x5fe4, 0xb252, 0xf4f2, 0x1, 0x1);
        gbc.writeMem(0x5cb5, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7f82, gbc.sp());
        EXPECT(0x5cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03B6
        gbc.setState(0x74, 0x61d3, 0x3a40, 0x8537, 0x8492, 0xac51, 0x1, 0x0);
        gbc.writeMem(0x74, { 0x33 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x61d4, gbc.sp());
        EXPECT(0x75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03B7
        gbc.setState(0x49ef, 0x3569, 0xc10, 0x5002, 0xdcc6, 0x64af, 0x1, 0x1);
        gbc.writeMem(0x49ef, { 0x33 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x356a, gbc.sp());
        EXPECT(0x49f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03B8
        gbc.setState(0x8047, 0x93da, 0x5960, 0x4c1d, 0xd2fc, 0x1110, 0x0, 0x0);
        gbc.writeMem(0x8047, { 0x33 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0x8048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8047));
        // 33 03B9
        gbc.setState(0xace1, 0x86, 0xcc40, 0xfcea, 0xeb3f, 0xf9c2, 0x0, 0x1);
        gbc.writeMem(0xace1, { 0x33 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x87, gbc.sp());
        EXPECT(0xace2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xace1));
        // 33 03BA
        gbc.setState(0x5e7b, 0xe2fa, 0x77d0, 0x8dd4, 0x1604, 0xb34b, 0x0, 0x0);
        gbc.writeMem(0x5e7b, { 0x33 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe2fb, gbc.sp());
        EXPECT(0x5e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03BB
        gbc.setState(0x1206, 0x7c0, 0x2d00, 0x8773, 0x8c2, 0xf73c, 0x1, 0x1);
        gbc.writeMem(0x1206, { 0x33 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7c1, gbc.sp());
        EXPECT(0x1207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03BC
        gbc.setState(0x43ff, 0x8584, 0x7d50, 0x6c4, 0xd434, 0x13e6, 0x1, 0x1);
        gbc.writeMem(0x43ff, { 0x33 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8585, gbc.sp());
        EXPECT(0x4400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03BD
        gbc.setState(0x52a6, 0x85c5, 0xb510, 0xd6d1, 0xd030, 0x3ac3, 0x1, 0x0);
        gbc.writeMem(0x52a6, { 0x33 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x85c6, gbc.sp());
        EXPECT(0x52a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03BE
        gbc.setState(0x8ca5, 0xac87, 0xfc10, 0x7663, 0xe055, 0x141d, 0x1, 0x0);
        gbc.writeMem(0x8ca5, { 0x33 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xac88, gbc.sp());
        EXPECT(0x8ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8ca5));
        // 33 03BF
        gbc.setState(0x1f5d, 0x57, 0x1b0, 0x5c1e, 0x5e04, 0x740b, 0x0, 0x1);
        gbc.writeMem(0x1f5d, { 0x33 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x58, gbc.sp());
        EXPECT(0x1f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03C0
        gbc.setState(0xefd0, 0x2d5e, 0x6b60, 0x84a4, 0xf6be, 0xd919, 0x1, 0x1);
        gbc.writeMem(0xefd0, { 0x33 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2d5f, gbc.sp());
        EXPECT(0xefd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xefd0));
        // 33 03C1
        gbc.setState(0x47e6, 0x5898, 0xff40, 0xbd45, 0x6c25, 0x2647, 0x1, 0x0);
        gbc.writeMem(0x47e6, { 0x33 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5899, gbc.sp());
        EXPECT(0x47e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03C2
        gbc.setState(0xc7cf, 0xfb0e, 0x5bc0, 0xe5b0, 0xe877, 0x572a, 0x1, 0x1);
        gbc.writeMem(0xc7cf, { 0x33 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfb0f, gbc.sp());
        EXPECT(0xc7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc7cf));
        // 33 03C3
        gbc.setState(0x5d69, 0x2a5e, 0x78e0, 0xcb15, 0x364f, 0xade7, 0x1, 0x0);
        gbc.writeMem(0x5d69, { 0x33 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2a5f, gbc.sp());
        EXPECT(0x5d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03C4
        gbc.setState(0x5dd1, 0x709f, 0xf080, 0xd47d, 0xbdc7, 0x5699, 0x1, 0x0);
        gbc.writeMem(0x5dd1, { 0x33 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x70a0, gbc.sp());
        EXPECT(0x5dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03C5
        gbc.setState(0x221b, 0xc47d, 0x7e0, 0x691a, 0x5b93, 0x7cf8, 0x1, 0x1);
        gbc.writeMem(0x221b, { 0x33 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc47e, gbc.sp());
        EXPECT(0x221c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03C6
        gbc.setState(0xe51a, 0x296c, 0xf020, 0x4037, 0xa5b1, 0x6d3d, 0x0, 0x1);
        gbc.writeMem(0xe51a, { 0x33 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x296d, gbc.sp());
        EXPECT(0xe51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe51a));
        // 33 03C7
        gbc.setState(0x76d, 0x3e10, 0x7a00, 0x5b8f, 0xef3e, 0xa4a4, 0x1, 0x0);
        gbc.writeMem(0x76d, { 0x33 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3e11, gbc.sp());
        EXPECT(0x76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03C8
        gbc.setState(0xe6c5, 0x50dc, 0x9e80, 0x462d, 0x38c2, 0xc965, 0x0, 0x1);
        gbc.writeMem(0xe6c5, { 0x33 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x50dd, gbc.sp());
        EXPECT(0xe6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe6c5));
        // 33 03C9
        gbc.setState(0x756d, 0x2a38, 0xbe00, 0x441, 0x5ef8, 0xa003, 0x1, 0x0);
        gbc.writeMem(0x756d, { 0x33 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2a39, gbc.sp());
        EXPECT(0x756e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03CA
        gbc.setState(0x3d06, 0xd40d, 0xd5f0, 0x19be, 0xc32c, 0x2280, 0x1, 0x1);
        gbc.writeMem(0x3d06, { 0x33 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd40e, gbc.sp());
        EXPECT(0x3d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03CB
        gbc.setState(0xbb86, 0xfe3f, 0xb350, 0x4e6c, 0xe3b, 0x85a3, 0x0, 0x1);
        gbc.writeMem(0xbb86, { 0x33 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfe40, gbc.sp());
        EXPECT(0xbb87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbb86));
        // 33 03CC
        gbc.setState(0xcd21, 0xb91a, 0x2150, 0xe740, 0x2512, 0xde4, 0x0, 0x1);
        gbc.writeMem(0xcd21, { 0x33 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb91b, gbc.sp());
        EXPECT(0xcd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcd21));
        // 33 03CD
        gbc.setState(0x92ca, 0x1a95, 0x3340, 0xdb3b, 0xa4ec, 0x1edf, 0x1, 0x1);
        gbc.writeMem(0x92ca, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1a96, gbc.sp());
        EXPECT(0x92cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x92ca));
        // 33 03CE
        gbc.setState(0x9d07, 0xa78e, 0x47b0, 0x7f39, 0x1eb8, 0x213a, 0x0, 0x0);
        gbc.writeMem(0x9d07, { 0x33 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa78f, gbc.sp());
        EXPECT(0x9d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9d07));
        // 33 03CF
        gbc.setState(0xd953, 0xb439, 0x3cb0, 0xb9b1, 0xe981, 0x5ee8, 0x1, 0x1);
        gbc.writeMem(0xd953, { 0x33 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb43a, gbc.sp());
        EXPECT(0xd954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd953));
        // 33 03D0
        gbc.setState(0x7bef, 0x1d43, 0x1e80, 0xf7e4, 0x6316, 0x262d, 0x1, 0x0);
        gbc.writeMem(0x7bef, { 0x33 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1d44, gbc.sp());
        EXPECT(0x7bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03D1
        gbc.setState(0xc270, 0x8450, 0x9e60, 0x60dd, 0x90b0, 0x8065, 0x0, 0x0);
        gbc.writeMem(0xc270, { 0x33 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8451, gbc.sp());
        EXPECT(0xc271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc270));
        // 33 03D2
        gbc.setState(0x968, 0xc7fc, 0x8be0, 0x561c, 0x4640, 0xabbb, 0x1, 0x0);
        gbc.writeMem(0x968, { 0x33 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc7fd, gbc.sp());
        EXPECT(0x969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03D3
        gbc.setState(0x5d7, 0xca04, 0x2410, 0xf58f, 0x2bb7, 0xcc90, 0x0, 0x1);
        gbc.writeMem(0x5d7, { 0x33 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xca05, gbc.sp());
        EXPECT(0x5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03D4
        gbc.setState(0x79fb, 0x9487, 0xe4e0, 0x2702, 0x2297, 0xf977, 0x1, 0x0);
        gbc.writeMem(0x79fb, { 0x33 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9488, gbc.sp());
        EXPECT(0x79fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03D5
        gbc.setState(0x496b, 0xd453, 0x62e0, 0x9c9a, 0x333, 0x50ad, 0x0, 0x0);
        gbc.writeMem(0x496b, { 0x33 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd454, gbc.sp());
        EXPECT(0x496c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03D6
        gbc.setState(0xd48a, 0x6e6, 0xda20, 0xd28, 0x8dd5, 0xd2e3, 0x1, 0x0);
        gbc.writeMem(0xd48a, { 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6e7, gbc.sp());
        EXPECT(0xd48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd48a));
        // 33 03D7
        gbc.setState(0x27fa, 0x16c, 0x3fa0, 0x64c9, 0x955c, 0x6b7d, 0x1, 0x1);
        gbc.writeMem(0x27fa, { 0x33 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x16d, gbc.sp());
        EXPECT(0x27fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03D8
        gbc.setState(0x35d8, 0x319b, 0x80d0, 0xc22e, 0xb3c1, 0x8a48, 0x1, 0x1);
        gbc.writeMem(0x35d8, { 0x33 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x319c, gbc.sp());
        EXPECT(0x35d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03D9
        gbc.setState(0x4dd1, 0x502b, 0x4630, 0x18c1, 0x4b27, 0xe61e, 0x1, 0x0);
        gbc.writeMem(0x4dd1, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x502c, gbc.sp());
        EXPECT(0x4dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03DA
        gbc.setState(0x3891, 0x19e7, 0x17b0, 0xa67b, 0x2287, 0x95b1, 0x1, 0x0);
        gbc.writeMem(0x3891, { 0x33 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x19e8, gbc.sp());
        EXPECT(0x3892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03DB
        gbc.setState(0x169a, 0x982f, 0x1c70, 0x2f04, 0xf9e1, 0xb04d, 0x0, 0x1);
        gbc.writeMem(0x169a, { 0x33 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9830, gbc.sp());
        EXPECT(0x169b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03DD
        gbc.setState(0x8346, 0xb3ed, 0xd6f0, 0x15fc, 0x8d76, 0xfef4, 0x0, 0x0);
        gbc.writeMem(0x8346, { 0x33 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb3ee, gbc.sp());
        EXPECT(0x8347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8346));
        // 33 03DE
        gbc.setState(0x2e58, 0x3ed8, 0xf970, 0xe307, 0xfc0, 0x6b78, 0x1, 0x0);
        gbc.writeMem(0x2e58, { 0x33 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3ed9, gbc.sp());
        EXPECT(0x2e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03DF
        gbc.setState(0x27da, 0x5a71, 0x61d0, 0xb46e, 0xf11, 0x6a37, 0x1, 0x1);
        gbc.writeMem(0x27da, { 0x33 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5a72, gbc.sp());
        EXPECT(0x27db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03E0
        gbc.setState(0xbc76, 0x5ca, 0xa5e0, 0x884f, 0x5ae6, 0x7cff, 0x0, 0x0);
        gbc.writeMem(0xbc76, { 0x33 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5cb, gbc.sp());
        EXPECT(0xbc77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbc76));
        // 33 03E1
        gbc.setState(0xcfbe, 0xf63c, 0xf0a0, 0xc77d, 0x8653, 0xcce9, 0x0, 0x0);
        gbc.writeMem(0xcfbe, { 0x33 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf63d, gbc.sp());
        EXPECT(0xcfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcfbe));
        // 33 03E2
        gbc.setState(0xc15a, 0x2286, 0xe390, 0x347d, 0x88b3, 0xdc40, 0x1, 0x0);
        gbc.writeMem(0xc15a, { 0x33 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2287, gbc.sp());
        EXPECT(0xc15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc15a));
        // 33 03E3
        gbc.setState(0xd2e0, 0x5ddc, 0x4320, 0xad3c, 0xc579, 0x42f0, 0x0, 0x1);
        gbc.writeMem(0xd2e0, { 0x33 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5ddd, gbc.sp());
        EXPECT(0xd2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd2e0));
        // 33 03E4
        gbc.setState(0x32a7, 0x1ef9, 0xd780, 0xc56c, 0x2fbf, 0x807c, 0x1, 0x0);
        gbc.writeMem(0x32a7, { 0x33 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1efa, gbc.sp());
        EXPECT(0x32a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 33 03E5
        gbc.setState(0x7e9e, 0xd75b, 0xf7b0, 0x4515, 0x550f, 0x10ff, 0x0, 0x1);
        gbc.writeMem(0x7e9e, { 0x33 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd75c, gbc.sp());
        EXPECT(0x7e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03E6
        gbc.setState(0x6378, 0xd695, 0xda30, 0x4071, 0x6d, 0xf87f, 0x1, 0x1);
        gbc.writeMem(0x6378, { 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd696, gbc.sp());
        EXPECT(0x6379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 33 03E7
        gbc.setState(0x6e67, 0x6a54, 0xbe00, 0xde1, 0x279f, 0x16d0, 0x0, 0x0);
        gbc.writeMem(0x6e67, { 0x33 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6a55, gbc.sp());
        EXPECT(0x6e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
