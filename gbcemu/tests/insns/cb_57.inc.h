    TEST(gbcemu, opcode_cb_57) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 57 0000
        gbc.setState(0x3876, 0xb52, 0x5000, 0x66da, 0x938b, 0xe36d, 0x0, 0x1);
        gbc.writeMem(0x3876, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb52, gbc.sp());
        EXPECT(0x3878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0001
        gbc.setState(0x822f, 0x6761, 0x86b0, 0xb7cd, 0x5cfb, 0x2919, 0x0, 0x0);
        gbc.writeMem(0x822f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6761, gbc.sp());
        EXPECT(0x8231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822f));
        EXPECT(0x57, gbc.readMem(0x8230));
        // CB 57 0002
        gbc.setState(0xa48, 0xb3db, 0xe2c0, 0x1a0d, 0x393, 0xb0fa, 0x0, 0x1);
        gbc.writeMem(0xa48, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb3db, gbc.sp());
        EXPECT(0xa4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0003
        gbc.setState(0xea6, 0xd3a, 0xbb00, 0x77e1, 0xe551, 0x6226, 0x1, 0x1);
        gbc.writeMem(0xea6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd3a, gbc.sp());
        EXPECT(0xea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0004
        gbc.setState(0xe295, 0x63bd, 0x1700, 0xf4c2, 0xc8fe, 0xa0de, 0x1, 0x1);
        gbc.writeMem(0xe295, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x63bd, gbc.sp());
        EXPECT(0xe297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe295));
        EXPECT(0x57, gbc.readMem(0xe296));
        // CB 57 0005
        gbc.setState(0x5528, 0x3317, 0xa1c0, 0x2279, 0x562c, 0xfcba, 0x0, 0x0);
        gbc.writeMem(0x5528, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3317, gbc.sp());
        EXPECT(0x552a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0006
        gbc.setState(0x4593, 0x2fe2, 0x31c0, 0x16b4, 0xc21, 0x8f17, 0x0, 0x0);
        gbc.writeMem(0x4593, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2fe2, gbc.sp());
        EXPECT(0x4595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0007
        gbc.setState(0x1d5e, 0xbf12, 0x46c0, 0xc88a, 0x971e, 0x3a97, 0x1, 0x0);
        gbc.writeMem(0x1d5e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbf12, gbc.sp());
        EXPECT(0x1d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0008
        gbc.setState(0xc2ab, 0xa0d8, 0x8900, 0xa175, 0x91ba, 0xa875, 0x0, 0x1);
        gbc.writeMem(0xc2ab, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0xc2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ab));
        EXPECT(0x57, gbc.readMem(0xc2ac));
        // CB 57 0009
        gbc.setState(0x71ed, 0xc31e, 0x420, 0xbb64, 0xe3b5, 0xea83, 0x0, 0x1);
        gbc.writeMem(0x71ed, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc31e, gbc.sp());
        EXPECT(0x71ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 000A
        gbc.setState(0xdb0, 0xdfce, 0x27d0, 0x9760, 0x94ac, 0x1517, 0x0, 0x1);
        gbc.writeMem(0xdb0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdfce, gbc.sp());
        EXPECT(0xdb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 000B
        gbc.setState(0x3dc5, 0x146b, 0x5510, 0x2aff, 0x949c, 0x48c7, 0x0, 0x0);
        gbc.writeMem(0x3dc5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x146b, gbc.sp());
        EXPECT(0x3dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 000C
        gbc.setState(0x8c76, 0x6ddb, 0x5b0, 0xa9fc, 0xd134, 0x789b, 0x1, 0x0);
        gbc.writeMem(0x8c76, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6ddb, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c76));
        EXPECT(0x57, gbc.readMem(0x8c77));
        // CB 57 000D
        gbc.setState(0xb06d, 0xe6c9, 0xec50, 0xce2c, 0x2bdf, 0x7340, 0x0, 0x0);
        gbc.writeMem(0xb06d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe6c9, gbc.sp());
        EXPECT(0xb06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06d));
        EXPECT(0x57, gbc.readMem(0xb06e));
        // CB 57 000E
        gbc.setState(0x9fba, 0xcc8, 0xa700, 0x4999, 0x279c, 0xa319, 0x0, 0x1);
        gbc.writeMem(0x9fba, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcc8, gbc.sp());
        EXPECT(0x9fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fba));
        EXPECT(0x57, gbc.readMem(0x9fbb));
        // CB 57 000F
        gbc.setState(0x2755, 0x6005, 0x3370, 0xc83f, 0xf3c2, 0xf75c, 0x0, 0x0);
        gbc.writeMem(0x2755, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6005, gbc.sp());
        EXPECT(0x2757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0010
        gbc.setState(0x19d7, 0x7d8c, 0xee00, 0x5e19, 0x3d2f, 0x265a, 0x1, 0x1);
        gbc.writeMem(0x19d7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7d8c, gbc.sp());
        EXPECT(0x19d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0011
        gbc.setState(0xba1d, 0xed97, 0x7ae0, 0x1c23, 0x9713, 0xefae, 0x1, 0x1);
        gbc.writeMem(0xba1d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xed97, gbc.sp());
        EXPECT(0xba1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1d));
        EXPECT(0x57, gbc.readMem(0xba1e));
        // CB 57 0012
        gbc.setState(0x6250, 0x2677, 0x8ce0, 0x30f0, 0xa62, 0xf439, 0x0, 0x0);
        gbc.writeMem(0x6250, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0x6252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0013
        gbc.setState(0x40e2, 0xb6a5, 0x9340, 0xf55b, 0x585c, 0x84c5, 0x1, 0x1);
        gbc.writeMem(0x40e2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb6a5, gbc.sp());
        EXPECT(0x40e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0014
        gbc.setState(0x1bd5, 0xff45, 0xdd30, 0x53ea, 0xf3e1, 0xeb83, 0x0, 0x0);
        gbc.writeMem(0x1bd5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xff45, gbc.sp());
        EXPECT(0x1bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0015
        gbc.setState(0x829a, 0x9788, 0x9020, 0xe9ae, 0x370d, 0x15c8, 0x0, 0x0);
        gbc.writeMem(0x829a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9788, gbc.sp());
        EXPECT(0x829c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829a));
        EXPECT(0x57, gbc.readMem(0x829b));
        // CB 57 0017
        gbc.setState(0x8b36, 0xf0e8, 0x37e0, 0xb8c3, 0xdeda, 0x94e5, 0x0, 0x1);
        gbc.writeMem(0x8b36, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf0e8, gbc.sp());
        EXPECT(0x8b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b36));
        EXPECT(0x57, gbc.readMem(0x8b37));
        // CB 57 0018
        gbc.setState(0xd144, 0x1ba3, 0xc5b0, 0x9683, 0x5aab, 0xd528, 0x0, 0x1);
        gbc.writeMem(0xd144, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1ba3, gbc.sp());
        EXPECT(0xd146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd144));
        EXPECT(0x57, gbc.readMem(0xd145));
        // CB 57 0019
        gbc.setState(0x43c5, 0x921a, 0x1c10, 0x6846, 0x2a55, 0x6c53, 0x1, 0x0);
        gbc.writeMem(0x43c5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x921a, gbc.sp());
        EXPECT(0x43c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 001A
        gbc.setState(0x13c3, 0x6dfa, 0x8140, 0x1437, 0x4482, 0xcaf2, 0x0, 0x1);
        gbc.writeMem(0x13c3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6dfa, gbc.sp());
        EXPECT(0x13c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 001B
        gbc.setState(0x181f, 0xd1e4, 0x87f0, 0x810a, 0x3c85, 0x568d, 0x0, 0x1);
        gbc.writeMem(0x181f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd1e4, gbc.sp());
        EXPECT(0x1821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 001D
        gbc.setState(0x4d38, 0x25f6, 0x6bf0, 0x4144, 0xca3d, 0x7f5f, 0x1, 0x1);
        gbc.writeMem(0x4d38, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x25f6, gbc.sp());
        EXPECT(0x4d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 001E
        gbc.setState(0xbc1, 0xd6d4, 0xa7b0, 0xbf6a, 0x80e1, 0xeb59, 0x1, 0x1);
        gbc.writeMem(0xbc1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd6d4, gbc.sp());
        EXPECT(0xbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 001F
        gbc.setState(0x2e9c, 0xfec3, 0x9670, 0xe3c8, 0x7a75, 0xc914, 0x0, 0x0);
        gbc.writeMem(0x2e9c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfec3, gbc.sp());
        EXPECT(0x2e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0020
        gbc.setState(0xc451, 0x7146, 0x4e70, 0xf045, 0x8d76, 0x5e10, 0x0, 0x0);
        gbc.writeMem(0xc451, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7146, gbc.sp());
        EXPECT(0xc453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc451));
        EXPECT(0x57, gbc.readMem(0xc452));
        // CB 57 0021
        gbc.setState(0xf78, 0x7e24, 0x33e0, 0xe453, 0x7d24, 0xadc0, 0x1, 0x0);
        gbc.writeMem(0xf78, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7e24, gbc.sp());
        EXPECT(0xf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0022
        gbc.setState(0x3c2d, 0x4a9b, 0x91a0, 0x17d8, 0x99fd, 0xdb12, 0x1, 0x0);
        gbc.writeMem(0x3c2d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4a9b, gbc.sp());
        EXPECT(0x3c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0023
        gbc.setState(0x864a, 0xa746, 0x8ed0, 0xbae0, 0x7d13, 0xfe, 0x0, 0x0);
        gbc.writeMem(0x864a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa746, gbc.sp());
        EXPECT(0x864c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864a));
        EXPECT(0x57, gbc.readMem(0x864b));
        // CB 57 0024
        gbc.setState(0x9876, 0x66be, 0x7a60, 0x8d6c, 0xd6a5, 0x1f20, 0x0, 0x0);
        gbc.writeMem(0x9876, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x66be, gbc.sp());
        EXPECT(0x9878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9876));
        EXPECT(0x57, gbc.readMem(0x9877));
        // CB 57 0025
        gbc.setState(0x6dde, 0xe374, 0x6ca0, 0x53f, 0xbbbc, 0xd894, 0x0, 0x0);
        gbc.writeMem(0x6dde, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe374, gbc.sp());
        EXPECT(0x6de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0026
        gbc.setState(0xebe5, 0x8157, 0xcc20, 0x8c3f, 0x9463, 0x41e0, 0x0, 0x0);
        gbc.writeMem(0xebe5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8157, gbc.sp());
        EXPECT(0xebe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe5));
        EXPECT(0x57, gbc.readMem(0xebe6));
        // CB 57 0027
        gbc.setState(0x8e17, 0x588, 0xcc50, 0x246c, 0x607b, 0xa9d2, 0x0, 0x0);
        gbc.writeMem(0x8e17, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x588, gbc.sp());
        EXPECT(0x8e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e17));
        EXPECT(0x57, gbc.readMem(0x8e18));
        // CB 57 0028
        gbc.setState(0x458c, 0x94bb, 0x7cd0, 0x842a, 0x8692, 0xdab4, 0x1, 0x0);
        gbc.writeMem(0x458c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x94bb, gbc.sp());
        EXPECT(0x458e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0029
        gbc.setState(0x73f5, 0x2fa3, 0x1b60, 0x889a, 0x3da4, 0x8b3a, 0x1, 0x1);
        gbc.writeMem(0x73f5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2fa3, gbc.sp());
        EXPECT(0x73f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 002A
        gbc.setState(0x997f, 0xf714, 0x3fa0, 0xccfc, 0x2092, 0xa635, 0x0, 0x0);
        gbc.writeMem(0x997f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf714, gbc.sp());
        EXPECT(0x9981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997f));
        EXPECT(0x57, gbc.readMem(0x9980));
        // CB 57 002B
        gbc.setState(0xd00d, 0x9ea4, 0xc260, 0xa4c8, 0xff17, 0xa45d, 0x0, 0x0);
        gbc.writeMem(0xd00d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9ea4, gbc.sp());
        EXPECT(0xd00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00d));
        EXPECT(0x57, gbc.readMem(0xd00e));
        // CB 57 002C
        gbc.setState(0xeff, 0xd72d, 0xf0, 0xf31d, 0x475e, 0x9012, 0x0, 0x0);
        gbc.writeMem(0xeff, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd72d, gbc.sp());
        EXPECT(0xf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 002D
        gbc.setState(0xced, 0x158e, 0x9990, 0x2bcf, 0x11a1, 0x3172, 0x0, 0x0);
        gbc.writeMem(0xced, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x158e, gbc.sp());
        EXPECT(0xcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 002E
        gbc.setState(0x4f68, 0x2450, 0x74a0, 0x3c7b, 0x2053, 0x5c5c, 0x1, 0x1);
        gbc.writeMem(0x4f68, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2450, gbc.sp());
        EXPECT(0x4f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 002F
        gbc.setState(0x3f60, 0xfdf7, 0xb8e0, 0x916, 0xf97d, 0x210c, 0x0, 0x0);
        gbc.writeMem(0x3f60, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfdf7, gbc.sp());
        EXPECT(0x3f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0031
        gbc.setState(0xbf2a, 0x5f8c, 0xb470, 0xf533, 0x1092, 0x89df, 0x0, 0x1);
        gbc.writeMem(0xbf2a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5f8c, gbc.sp());
        EXPECT(0xbf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf2a));
        EXPECT(0x57, gbc.readMem(0xbf2b));
        // CB 57 0032
        gbc.setState(0x4f65, 0x407e, 0x8670, 0x5e1a, 0x96b6, 0xd622, 0x0, 0x1);
        gbc.writeMem(0x4f65, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x407e, gbc.sp());
        EXPECT(0x4f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0033
        gbc.setState(0x69f7, 0x10dc, 0x2950, 0x5430, 0x8afa, 0x1591, 0x1, 0x1);
        gbc.writeMem(0x69f7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x10dc, gbc.sp());
        EXPECT(0x69f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0034
        gbc.setState(0x6a93, 0xd06d, 0x5da0, 0xc900, 0xc8f2, 0xff8, 0x0, 0x1);
        gbc.writeMem(0x6a93, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd06d, gbc.sp());
        EXPECT(0x6a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0035
        gbc.setState(0xd20a, 0x832, 0x6200, 0xc8be, 0xd358, 0xf56b, 0x0, 0x0);
        gbc.writeMem(0xd20a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x832, gbc.sp());
        EXPECT(0xd20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20a));
        EXPECT(0x57, gbc.readMem(0xd20b));
        // CB 57 0036
        gbc.setState(0xc945, 0xa44a, 0xb7b0, 0xaebe, 0xf5a5, 0x4375, 0x1, 0x1);
        gbc.writeMem(0xc945, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa44a, gbc.sp());
        EXPECT(0xc947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc945));
        EXPECT(0x57, gbc.readMem(0xc946));
        // CB 57 0037
        gbc.setState(0x76ce, 0xa6cc, 0xabc0, 0xd260, 0xbadb, 0xf591, 0x1, 0x0);
        gbc.writeMem(0x76ce, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa6cc, gbc.sp());
        EXPECT(0x76d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0038
        gbc.setState(0xa9c, 0x7b89, 0x5470, 0x4ca4, 0x7407, 0x776a, 0x0, 0x0);
        gbc.writeMem(0xa9c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7b89, gbc.sp());
        EXPECT(0xa9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0039
        gbc.setState(0xa3d5, 0x8274, 0xf2a0, 0x62c7, 0x16f8, 0x598a, 0x1, 0x1);
        gbc.writeMem(0xa3d5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8274, gbc.sp());
        EXPECT(0xa3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d5));
        EXPECT(0x57, gbc.readMem(0xa3d6));
        // CB 57 003A
        gbc.setState(0x8fe2, 0xb1b2, 0x4710, 0xfd9b, 0x4ab7, 0xe269, 0x1, 0x0);
        gbc.writeMem(0x8fe2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb1b2, gbc.sp());
        EXPECT(0x8fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe2));
        EXPECT(0x57, gbc.readMem(0x8fe3));
        // CB 57 003B
        gbc.setState(0x95a0, 0x29d1, 0xbe40, 0x5550, 0xdb33, 0x1538, 0x0, 0x0);
        gbc.writeMem(0x95a0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x29d1, gbc.sp());
        EXPECT(0x95a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a0));
        EXPECT(0x57, gbc.readMem(0x95a1));
        // CB 57 003C
        gbc.setState(0x16e9, 0x1b6c, 0x8b30, 0x12d8, 0x7aef, 0x3c1f, 0x1, 0x0);
        gbc.writeMem(0x16e9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1b6c, gbc.sp());
        EXPECT(0x16eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 003D
        gbc.setState(0x8ce5, 0x8f00, 0xe2e0, 0x170f, 0x6fbf, 0xfcd0, 0x1, 0x0);
        gbc.writeMem(0x8ce5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8f00, gbc.sp());
        EXPECT(0x8ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce5));
        EXPECT(0x57, gbc.readMem(0x8ce6));
        // CB 57 003E
        gbc.setState(0x72c1, 0xd2e8, 0x9b20, 0xa033, 0x2507, 0xca, 0x1, 0x0);
        gbc.writeMem(0x72c1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd2e8, gbc.sp());
        EXPECT(0x72c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 003F
        gbc.setState(0xa040, 0x500c, 0xb150, 0x34c4, 0x56aa, 0x66cf, 0x0, 0x0);
        gbc.writeMem(0xa040, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x500c, gbc.sp());
        EXPECT(0xa042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa040));
        EXPECT(0x57, gbc.readMem(0xa041));
        // CB 57 0040
        gbc.setState(0x6a6a, 0xa786, 0xd30, 0x1e34, 0xe8f7, 0xcd1d, 0x1, 0x0);
        gbc.writeMem(0x6a6a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa786, gbc.sp());
        EXPECT(0x6a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0041
        gbc.setState(0xc5c5, 0x1f91, 0xcf70, 0xc786, 0xd40b, 0x565d, 0x1, 0x1);
        gbc.writeMem(0xc5c5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1f91, gbc.sp());
        EXPECT(0xc5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c5));
        EXPECT(0x57, gbc.readMem(0xc5c6));
        // CB 57 0042
        gbc.setState(0xe2b1, 0x6205, 0x1a80, 0xd3f8, 0xcbd0, 0xb051, 0x0, 0x0);
        gbc.writeMem(0xe2b1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6205, gbc.sp());
        EXPECT(0xe2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b1));
        EXPECT(0x57, gbc.readMem(0xe2b2));
        // CB 57 0043
        gbc.setState(0xebbc, 0xfbe9, 0xde00, 0x7f94, 0x3dbf, 0x7468, 0x1, 0x1);
        gbc.writeMem(0xebbc, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0xebbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebbc));
        EXPECT(0x57, gbc.readMem(0xebbd));
        // CB 57 0044
        gbc.setState(0xa065, 0xd135, 0xb790, 0xbbc2, 0x8567, 0xfe43, 0x0, 0x1);
        gbc.writeMem(0xa065, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd135, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa065));
        EXPECT(0x57, gbc.readMem(0xa066));
        // CB 57 0045
        gbc.setState(0x4b31, 0xb1f1, 0x7840, 0x5097, 0xbd24, 0xefbe, 0x1, 0x0);
        gbc.writeMem(0x4b31, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb1f1, gbc.sp());
        EXPECT(0x4b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0047
        gbc.setState(0xd6be, 0x5d4c, 0x46d0, 0x806e, 0x307, 0x4260, 0x0, 0x1);
        gbc.writeMem(0xd6be, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5d4c, gbc.sp());
        EXPECT(0xd6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6be));
        EXPECT(0x57, gbc.readMem(0xd6bf));
        // CB 57 0048
        gbc.setState(0x84f6, 0xbb3d, 0xd670, 0x9295, 0xaf3e, 0x4742, 0x1, 0x1);
        gbc.writeMem(0x84f6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbb3d, gbc.sp());
        EXPECT(0x84f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f6));
        EXPECT(0x57, gbc.readMem(0x84f7));
        // CB 57 0049
        gbc.setState(0xcb4, 0xf7da, 0x91e0, 0xde4, 0xbd8b, 0xdf14, 0x0, 0x0);
        gbc.writeMem(0xcb4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf7da, gbc.sp());
        EXPECT(0xcb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 004A
        gbc.setState(0x3418, 0xb522, 0xa00, 0xd57a, 0xc9c1, 0xe74e, 0x0, 0x1);
        gbc.writeMem(0x3418, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb522, gbc.sp());
        EXPECT(0x341a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 004B
        gbc.setState(0xe6a3, 0x3cf, 0x4df0, 0xf686, 0xaf35, 0x6a8f, 0x1, 0x1);
        gbc.writeMem(0xe6a3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3cf, gbc.sp());
        EXPECT(0xe6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a3));
        EXPECT(0x57, gbc.readMem(0xe6a4));
        // CB 57 004C
        gbc.setState(0x3439, 0x8e7b, 0xbcf0, 0xd8bd, 0x4025, 0x4779, 0x0, 0x0);
        gbc.writeMem(0x3439, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8e7b, gbc.sp());
        EXPECT(0x343b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 004D
        gbc.setState(0xbc8f, 0x78eb, 0x7730, 0xe6f6, 0x8fa9, 0xeac7, 0x1, 0x0);
        gbc.writeMem(0xbc8f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x78eb, gbc.sp());
        EXPECT(0xbc91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8f));
        EXPECT(0x57, gbc.readMem(0xbc90));
        // CB 57 004E
        gbc.setState(0xbf23, 0xec39, 0x9950, 0xa631, 0xc626, 0x9420, 0x0, 0x0);
        gbc.writeMem(0xbf23, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xec39, gbc.sp());
        EXPECT(0xbf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf23));
        EXPECT(0x57, gbc.readMem(0xbf24));
        // CB 57 004F
        gbc.setState(0xc1ef, 0x9c08, 0x4cd0, 0xef6, 0xa58a, 0x7c8, 0x0, 0x1);
        gbc.writeMem(0xc1ef, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9c08, gbc.sp());
        EXPECT(0xc1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ef));
        EXPECT(0x57, gbc.readMem(0xc1f0));
        // CB 57 0050
        gbc.setState(0xbc62, 0x6028, 0x7670, 0xca54, 0xfcae, 0xd1f2, 0x1, 0x1);
        gbc.writeMem(0xbc62, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6028, gbc.sp());
        EXPECT(0xbc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc62));
        EXPECT(0x57, gbc.readMem(0xbc63));
        // CB 57 0051
        gbc.setState(0x7392, 0xd3a1, 0xbbd0, 0x2bbf, 0x87d3, 0x2483, 0x1, 0x0);
        gbc.writeMem(0x7392, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd3a1, gbc.sp());
        EXPECT(0x7394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0052
        gbc.setState(0x3c4e, 0x13d5, 0x15a0, 0x6812, 0x63cb, 0x6708, 0x0, 0x1);
        gbc.writeMem(0x3c4e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x13d5, gbc.sp());
        EXPECT(0x3c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0053
        gbc.setState(0x5520, 0xef76, 0x7c40, 0x14ce, 0x3375, 0x101, 0x1, 0x1);
        gbc.writeMem(0x5520, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xef76, gbc.sp());
        EXPECT(0x5522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0054
        gbc.setState(0x9c6, 0xe0b7, 0x5560, 0xd059, 0x5576, 0x12d2, 0x1, 0x0);
        gbc.writeMem(0x9c6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe0b7, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0055
        gbc.setState(0x9392, 0xe486, 0xacb0, 0xd158, 0xa7b6, 0x1a19, 0x0, 0x0);
        gbc.writeMem(0x9392, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe486, gbc.sp());
        EXPECT(0x9394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9392));
        EXPECT(0x57, gbc.readMem(0x9393));
        // CB 57 0056
        gbc.setState(0x1c44, 0xb955, 0xaeb0, 0x6748, 0xdf66, 0xf9be, 0x0, 0x1);
        gbc.writeMem(0x1c44, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb955, gbc.sp());
        EXPECT(0x1c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0057
        gbc.setState(0xc033, 0xc95e, 0xe920, 0xb205, 0xec1e, 0xdfd8, 0x1, 0x0);
        gbc.writeMem(0xc033, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc95e, gbc.sp());
        EXPECT(0xc035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc033));
        EXPECT(0x57, gbc.readMem(0xc034));
        // CB 57 0058
        gbc.setState(0x9dee, 0xe638, 0x3f70, 0xab1b, 0x9490, 0xb04d, 0x0, 0x1);
        gbc.writeMem(0x9dee, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe638, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dee));
        EXPECT(0x57, gbc.readMem(0x9def));
        // CB 57 0059
        gbc.setState(0x35f9, 0x628c, 0xbb50, 0x1645, 0x4256, 0x3490, 0x1, 0x0);
        gbc.writeMem(0x35f9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x628c, gbc.sp());
        EXPECT(0x35fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 005A
        gbc.setState(0x8f2a, 0x1243, 0x9340, 0x167c, 0xf5f4, 0x277, 0x0, 0x1);
        gbc.writeMem(0x8f2a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1243, gbc.sp());
        EXPECT(0x8f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2a));
        EXPECT(0x57, gbc.readMem(0x8f2b));
        // CB 57 005B
        gbc.setState(0xa4ef, 0xb742, 0xeb0, 0xd294, 0xf1ca, 0x1508, 0x0, 0x0);
        gbc.writeMem(0xa4ef, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb742, gbc.sp());
        EXPECT(0xa4f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ef));
        EXPECT(0x57, gbc.readMem(0xa4f0));
        // CB 57 005C
        gbc.setState(0x252d, 0xedad, 0xa420, 0xdda8, 0xf92f, 0x87ec, 0x0, 0x1);
        gbc.writeMem(0x252d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xedad, gbc.sp());
        EXPECT(0x252f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 005D
        gbc.setState(0x50f8, 0x3a6c, 0x3a30, 0x33b9, 0x2b05, 0x9b75, 0x0, 0x1);
        gbc.writeMem(0x50f8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3a6c, gbc.sp());
        EXPECT(0x50fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 005E
        gbc.setState(0x29e, 0x3603, 0xcf70, 0x2f33, 0x10f9, 0xcdc5, 0x0, 0x1);
        gbc.writeMem(0x29e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3603, gbc.sp());
        EXPECT(0x2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 005F
        gbc.setState(0x52ee, 0xc946, 0x5f80, 0x7dac, 0x764f, 0xed21, 0x0, 0x1);
        gbc.writeMem(0x52ee, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc946, gbc.sp());
        EXPECT(0x52f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0061
        gbc.setState(0xb2e0, 0xc2e0, 0x6910, 0x728a, 0x56b8, 0x8499, 0x1, 0x1);
        gbc.writeMem(0xb2e0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc2e0, gbc.sp());
        EXPECT(0xb2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e0));
        EXPECT(0x57, gbc.readMem(0xb2e1));
        // CB 57 0062
        gbc.setState(0x6f8c, 0x9198, 0x5000, 0xc9f5, 0x18c1, 0x15db, 0x0, 0x0);
        gbc.writeMem(0x6f8c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9198, gbc.sp());
        EXPECT(0x6f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0063
        gbc.setState(0xcfdf, 0xa968, 0xa110, 0x32a8, 0xe5a1, 0xadad, 0x0, 0x0);
        gbc.writeMem(0xcfdf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa968, gbc.sp());
        EXPECT(0xcfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdf));
        EXPECT(0x57, gbc.readMem(0xcfe0));
        // CB 57 0064
        gbc.setState(0x95cb, 0xa737, 0x9e50, 0xc473, 0xcf87, 0x61cc, 0x1, 0x0);
        gbc.writeMem(0x95cb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa737, gbc.sp());
        EXPECT(0x95cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95cb));
        EXPECT(0x57, gbc.readMem(0x95cc));
        // CB 57 0065
        gbc.setState(0xeb4a, 0x995a, 0x5580, 0x46a6, 0x6d8f, 0x428e, 0x1, 0x0);
        gbc.writeMem(0xeb4a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x995a, gbc.sp());
        EXPECT(0xeb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4a));
        EXPECT(0x57, gbc.readMem(0xeb4b));
        // CB 57 0066
        gbc.setState(0x7f01, 0x8246, 0x6430, 0x73ae, 0xff48, 0x4e93, 0x1, 0x1);
        gbc.writeMem(0x7f01, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8246, gbc.sp());
        EXPECT(0x7f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0067
        gbc.setState(0xd9d9, 0xfd1a, 0x44f0, 0x6d73, 0xb29e, 0x5411, 0x1, 0x0);
        gbc.writeMem(0xd9d9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfd1a, gbc.sp());
        EXPECT(0xd9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d9));
        EXPECT(0x57, gbc.readMem(0xd9da));
        // CB 57 0068
        gbc.setState(0xc991, 0x4380, 0xc3e0, 0x8b07, 0xe1bb, 0xbaad, 0x1, 0x0);
        gbc.writeMem(0xc991, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4380, gbc.sp());
        EXPECT(0xc993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc991));
        EXPECT(0x57, gbc.readMem(0xc992));
        // CB 57 0069
        gbc.setState(0xac91, 0xb16f, 0xa50, 0xdb4d, 0x2e25, 0x3942, 0x1, 0x0);
        gbc.writeMem(0xac91, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb16f, gbc.sp());
        EXPECT(0xac93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac91));
        EXPECT(0x57, gbc.readMem(0xac92));
        // CB 57 006A
        gbc.setState(0xcc21, 0x80b3, 0xe670, 0xc3f1, 0xcc06, 0xbf5a, 0x1, 0x1);
        gbc.writeMem(0xcc21, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x80b3, gbc.sp());
        EXPECT(0xcc23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc21));
        EXPECT(0x57, gbc.readMem(0xcc22));
        // CB 57 006B
        gbc.setState(0x1ceb, 0x9254, 0x86f0, 0x35f5, 0xede1, 0x537d, 0x1, 0x0);
        gbc.writeMem(0x1ceb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9254, gbc.sp());
        EXPECT(0x1ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 006C
        gbc.setState(0xcf8, 0xff36, 0x4330, 0x5060, 0xd8c9, 0x5ada, 0x0, 0x0);
        gbc.writeMem(0xcf8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xff36, gbc.sp());
        EXPECT(0xcfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 006D
        gbc.setState(0x45e0, 0x7d70, 0xfe00, 0xa65d, 0xde18, 0x4295, 0x0, 0x1);
        gbc.writeMem(0x45e0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7d70, gbc.sp());
        EXPECT(0x45e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 006E
        gbc.setState(0x7f32, 0x50d8, 0x1280, 0x1e75, 0xd1, 0x7736, 0x0, 0x1);
        gbc.writeMem(0x7f32, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x50d8, gbc.sp());
        EXPECT(0x7f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 006F
        gbc.setState(0x7bd3, 0x5cd0, 0x1080, 0x775d, 0x67b8, 0xbf02, 0x0, 0x0);
        gbc.writeMem(0x7bd3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5cd0, gbc.sp());
        EXPECT(0x7bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0070
        gbc.setState(0xd687, 0xf1f6, 0xd960, 0x9d9e, 0x8e7c, 0xe3a7, 0x0, 0x0);
        gbc.writeMem(0xd687, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf1f6, gbc.sp());
        EXPECT(0xd689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd687));
        EXPECT(0x57, gbc.readMem(0xd688));
        // CB 57 0071
        gbc.setState(0x403c, 0xb293, 0xadb0, 0xa9c3, 0xd60c, 0xf3ad, 0x1, 0x1);
        gbc.writeMem(0x403c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb293, gbc.sp());
        EXPECT(0x403e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0072
        gbc.setState(0x8522, 0x63bb, 0x95b0, 0x131f, 0x2d54, 0xdfd8, 0x0, 0x1);
        gbc.writeMem(0x8522, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x63bb, gbc.sp());
        EXPECT(0x8524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8522));
        EXPECT(0x57, gbc.readMem(0x8523));
        // CB 57 0073
        gbc.setState(0xa97a, 0x5e9, 0xea30, 0x77c9, 0x27d5, 0x6b9f, 0x0, 0x1);
        gbc.writeMem(0xa97a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5e9, gbc.sp());
        EXPECT(0xa97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97a));
        EXPECT(0x57, gbc.readMem(0xa97b));
        // CB 57 0074
        gbc.setState(0x1cd9, 0xb4e, 0x1180, 0x68e1, 0x550e, 0x80c2, 0x0, 0x0);
        gbc.writeMem(0x1cd9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb4e, gbc.sp());
        EXPECT(0x1cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0075
        gbc.setState(0xa7d0, 0xa438, 0x7500, 0xc290, 0xd8c9, 0xe7bc, 0x0, 0x1);
        gbc.writeMem(0xa7d0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa438, gbc.sp());
        EXPECT(0xa7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d0));
        EXPECT(0x57, gbc.readMem(0xa7d1));
        // CB 57 0076
        gbc.setState(0x5f85, 0x423a, 0x4590, 0xfc9c, 0xc200, 0x19a8, 0x1, 0x0);
        gbc.writeMem(0x5f85, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x423a, gbc.sp());
        EXPECT(0x5f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0077
        gbc.setState(0x35cd, 0xee5b, 0x6880, 0x597a, 0x8265, 0x574a, 0x0, 0x0);
        gbc.writeMem(0x35cd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xee5b, gbc.sp());
        EXPECT(0x35cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0078
        gbc.setState(0x36fd, 0xb05b, 0xbe40, 0xd197, 0x4072, 0xa7b6, 0x0, 0x0);
        gbc.writeMem(0x36fd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb05b, gbc.sp());
        EXPECT(0x36ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0079
        gbc.setState(0x3943, 0x7b70, 0x2d20, 0xe129, 0xab33, 0xd66d, 0x0, 0x0);
        gbc.writeMem(0x3943, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7b70, gbc.sp());
        EXPECT(0x3945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 007A
        gbc.setState(0xd33f, 0x8d98, 0x4e30, 0xe4d5, 0xdd2e, 0x2f2f, 0x0, 0x0);
        gbc.writeMem(0xd33f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8d98, gbc.sp());
        EXPECT(0xd341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33f));
        EXPECT(0x57, gbc.readMem(0xd340));
        // CB 57 007B
        gbc.setState(0x5d9, 0x94e6, 0x5080, 0x6bc3, 0xc030, 0xffef, 0x1, 0x0);
        gbc.writeMem(0x5d9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x94e6, gbc.sp());
        EXPECT(0x5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 007C
        gbc.setState(0x6ed6, 0xeb5f, 0xf160, 0x4c1e, 0x446b, 0xd097, 0x1, 0x0);
        gbc.writeMem(0x6ed6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xeb5f, gbc.sp());
        EXPECT(0x6ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 007D
        gbc.setState(0x934c, 0xd021, 0xa650, 0xa457, 0xd10d, 0xd062, 0x1, 0x0);
        gbc.writeMem(0x934c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd021, gbc.sp());
        EXPECT(0x934e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934c));
        EXPECT(0x57, gbc.readMem(0x934d));
        // CB 57 007E
        gbc.setState(0x81dd, 0xae17, 0xdf80, 0x7648, 0x5ade, 0x34f7, 0x1, 0x1);
        gbc.writeMem(0x81dd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xae17, gbc.sp());
        EXPECT(0x81df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81dd));
        EXPECT(0x57, gbc.readMem(0x81de));
        // CB 57 0080
        gbc.setState(0x32b7, 0xbf6f, 0xd710, 0xbd20, 0x4ef0, 0x80a0, 0x0, 0x1);
        gbc.writeMem(0x32b7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbf6f, gbc.sp());
        EXPECT(0x32b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0081
        gbc.setState(0x22d3, 0x8b1a, 0xf430, 0x9663, 0x87d6, 0x212, 0x0, 0x1);
        gbc.writeMem(0x22d3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8b1a, gbc.sp());
        EXPECT(0x22d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0082
        gbc.setState(0xa00a, 0xb828, 0x3a30, 0xcb2, 0x5846, 0xcdad, 0x1, 0x0);
        gbc.writeMem(0xa00a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0xa00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00a));
        EXPECT(0x57, gbc.readMem(0xa00b));
        // CB 57 0085
        gbc.setState(0x4737, 0x8c14, 0x90, 0xaeea, 0x2b65, 0xa484, 0x1, 0x1);
        gbc.writeMem(0x4737, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8c14, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0086
        gbc.setState(0xb06f, 0x2413, 0x4c70, 0x5a4d, 0x2b60, 0xa275, 0x0, 0x1);
        gbc.writeMem(0xb06f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2413, gbc.sp());
        EXPECT(0xb071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06f));
        EXPECT(0x57, gbc.readMem(0xb070));
        // CB 57 0087
        gbc.setState(0x60bf, 0x296b, 0x6ac0, 0xa7a, 0xa8c5, 0x8c16, 0x1, 0x1);
        gbc.writeMem(0x60bf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x296b, gbc.sp());
        EXPECT(0x60c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0088
        gbc.setState(0x7ede, 0xcab, 0xcc40, 0x5330, 0x7a24, 0xc855, 0x0, 0x0);
        gbc.writeMem(0x7ede, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcab, gbc.sp());
        EXPECT(0x7ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0089
        gbc.setState(0x2cc2, 0xd4fe, 0x7e80, 0x8a2c, 0xe93e, 0xef0b, 0x0, 0x1);
        gbc.writeMem(0x2cc2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd4fe, gbc.sp());
        EXPECT(0x2cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 008A
        gbc.setState(0xd87d, 0x8f10, 0x7fe0, 0x4975, 0x3175, 0xc5f0, 0x0, 0x0);
        gbc.writeMem(0xd87d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8f10, gbc.sp());
        EXPECT(0xd87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87d));
        EXPECT(0x57, gbc.readMem(0xd87e));
        // CB 57 008C
        gbc.setState(0x5668, 0x5477, 0x6a70, 0xb5ea, 0x9000, 0xa3c9, 0x0, 0x1);
        gbc.writeMem(0x5668, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5477, gbc.sp());
        EXPECT(0x566a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 008D
        gbc.setState(0x180e, 0x7a1e, 0x300, 0x1388, 0x5fd2, 0xd058, 0x1, 0x1);
        gbc.writeMem(0x180e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7a1e, gbc.sp());
        EXPECT(0x1810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 008F
        gbc.setState(0xe3af, 0x96c1, 0xfee0, 0xa7ed, 0x2332, 0xa089, 0x0, 0x1);
        gbc.writeMem(0xe3af, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x96c1, gbc.sp());
        EXPECT(0xe3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3af));
        EXPECT(0x57, gbc.readMem(0xe3b0));
        // CB 57 0090
        gbc.setState(0x5b58, 0xc839, 0xbd60, 0x783b, 0x59ad, 0x7bfd, 0x0, 0x0);
        gbc.writeMem(0x5b58, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc839, gbc.sp());
        EXPECT(0x5b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0091
        gbc.setState(0x5caa, 0xb0fe, 0x6c10, 0xc95d, 0x8820, 0x1524, 0x0, 0x0);
        gbc.writeMem(0x5caa, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb0fe, gbc.sp());
        EXPECT(0x5cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0092
        gbc.setState(0x8321, 0xcc40, 0x19b0, 0xb2a4, 0x8b0c, 0xd1f6, 0x0, 0x1);
        gbc.writeMem(0x8321, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcc40, gbc.sp());
        EXPECT(0x8323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8321));
        EXPECT(0x57, gbc.readMem(0x8322));
        // CB 57 0094
        gbc.setState(0xc006, 0x3174, 0xd870, 0x42b0, 0x77b1, 0xfde, 0x1, 0x0);
        gbc.writeMem(0xc006, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3174, gbc.sp());
        EXPECT(0xc008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc006));
        EXPECT(0x57, gbc.readMem(0xc007));
        // CB 57 0095
        gbc.setState(0xdd7d, 0x3374, 0x54d0, 0xf58d, 0x6ae3, 0xda3, 0x1, 0x0);
        gbc.writeMem(0xdd7d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3374, gbc.sp());
        EXPECT(0xdd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd7d));
        EXPECT(0x57, gbc.readMem(0xdd7e));
        // CB 57 0096
        gbc.setState(0x6344, 0x54a0, 0xae40, 0xc2a9, 0x3851, 0x40c3, 0x1, 0x1);
        gbc.writeMem(0x6344, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x54a0, gbc.sp());
        EXPECT(0x6346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0097
        gbc.setState(0xadd5, 0x17b9, 0x5f00, 0x4f52, 0x343b, 0xe341, 0x0, 0x1);
        gbc.writeMem(0xadd5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x17b9, gbc.sp());
        EXPECT(0xadd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd5));
        EXPECT(0x57, gbc.readMem(0xadd6));
        // CB 57 0098
        gbc.setState(0x6d0b, 0x657c, 0x630, 0x9a06, 0x4bac, 0x59b9, 0x1, 0x1);
        gbc.writeMem(0x6d0b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x657c, gbc.sp());
        EXPECT(0x6d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0099
        gbc.setState(0x7c3d, 0x5580, 0xf920, 0x9d06, 0xc882, 0x459c, 0x1, 0x0);
        gbc.writeMem(0x7c3d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5580, gbc.sp());
        EXPECT(0x7c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 009A
        gbc.setState(0x1a22, 0x73de, 0x83d0, 0xd29c, 0xee03, 0x4463, 0x1, 0x0);
        gbc.writeMem(0x1a22, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x73de, gbc.sp());
        EXPECT(0x1a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 009B
        gbc.setState(0x4ef9, 0x152f, 0x43b0, 0x7d2e, 0xd271, 0xe08a, 0x0, 0x1);
        gbc.writeMem(0x4ef9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x152f, gbc.sp());
        EXPECT(0x4efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 009C
        gbc.setState(0x4cf0, 0x1b77, 0x4cd0, 0x346f, 0xcebc, 0x97aa, 0x1, 0x0);
        gbc.writeMem(0x4cf0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1b77, gbc.sp());
        EXPECT(0x4cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 009D
        gbc.setState(0x8762, 0x1146, 0x9b50, 0x418b, 0x81ad, 0x194a, 0x1, 0x1);
        gbc.writeMem(0x8762, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1146, gbc.sp());
        EXPECT(0x8764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8762));
        EXPECT(0x57, gbc.readMem(0x8763));
        // CB 57 009E
        gbc.setState(0x6b49, 0x204f, 0x6170, 0x8ffd, 0xd61b, 0xb9c1, 0x1, 0x1);
        gbc.writeMem(0x6b49, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x204f, gbc.sp());
        EXPECT(0x6b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00A0
        gbc.setState(0xc9b7, 0x7315, 0xfbe0, 0xb1b3, 0x2bbd, 0xe59a, 0x0, 0x0);
        gbc.writeMem(0xc9b7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7315, gbc.sp());
        EXPECT(0xc9b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b7));
        EXPECT(0x57, gbc.readMem(0xc9b8));
        // CB 57 00A1
        gbc.setState(0xd451, 0xc4fd, 0xcdc0, 0x752, 0xc6b6, 0x96e, 0x1, 0x1);
        gbc.writeMem(0xd451, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc4fd, gbc.sp());
        EXPECT(0xd453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd451));
        EXPECT(0x57, gbc.readMem(0xd452));
        // CB 57 00A2
        gbc.setState(0xafcd, 0xe080, 0x6a90, 0xe5f, 0x9b76, 0x14d, 0x0, 0x1);
        gbc.writeMem(0xafcd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe080, gbc.sp());
        EXPECT(0xafcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafcd));
        EXPECT(0x57, gbc.readMem(0xafce));
        // CB 57 00A3
        gbc.setState(0x93bb, 0xcf5f, 0x8aa0, 0xe61d, 0x299c, 0x5efb, 0x1, 0x0);
        gbc.writeMem(0x93bb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcf5f, gbc.sp());
        EXPECT(0x93bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bb));
        EXPECT(0x57, gbc.readMem(0x93bc));
        // CB 57 00A4
        gbc.setState(0x36bc, 0xc79d, 0x5c20, 0x11ea, 0x3d86, 0xee5c, 0x0, 0x1);
        gbc.writeMem(0x36bc, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc79d, gbc.sp());
        EXPECT(0x36be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00A5
        gbc.setState(0x2a5c, 0xb461, 0xac00, 0xbf99, 0xfd42, 0xbbd5, 0x0, 0x0);
        gbc.writeMem(0x2a5c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb461, gbc.sp());
        EXPECT(0x2a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00A6
        gbc.setState(0xadce, 0x2bcc, 0x88f0, 0x3ce7, 0xe793, 0x959d, 0x1, 0x1);
        gbc.writeMem(0xadce, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2bcc, gbc.sp());
        EXPECT(0xadd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadce));
        EXPECT(0x57, gbc.readMem(0xadcf));
        // CB 57 00A7
        gbc.setState(0xefa5, 0xaa76, 0xa440, 0x8bca, 0x1d1e, 0xc28b, 0x0, 0x0);
        gbc.writeMem(0xefa5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaa76, gbc.sp());
        EXPECT(0xefa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa5));
        EXPECT(0x57, gbc.readMem(0xefa6));
        // CB 57 00A8
        gbc.setState(0x64bb, 0xf762, 0x7a70, 0xb50, 0x5e71, 0xc23e, 0x0, 0x0);
        gbc.writeMem(0x64bb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf762, gbc.sp());
        EXPECT(0x64bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00A9
        gbc.setState(0x19eb, 0x2818, 0xe430, 0x98fd, 0xa23b, 0xb290, 0x1, 0x1);
        gbc.writeMem(0x19eb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2818, gbc.sp());
        EXPECT(0x19ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00AA
        gbc.setState(0x33f3, 0xcd87, 0xd2c0, 0x44ad, 0xc116, 0x155, 0x1, 0x1);
        gbc.writeMem(0x33f3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcd87, gbc.sp());
        EXPECT(0x33f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00AB
        gbc.setState(0x3907, 0xe9b5, 0xef80, 0x69b8, 0x962d, 0x739b, 0x1, 0x1);
        gbc.writeMem(0x3907, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe9b5, gbc.sp());
        EXPECT(0x3909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00AC
        gbc.setState(0x528c, 0xe12e, 0x5270, 0x2b67, 0xad08, 0x3848, 0x1, 0x0);
        gbc.writeMem(0x528c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe12e, gbc.sp());
        EXPECT(0x528e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00AD
        gbc.setState(0xc180, 0x12c2, 0x8420, 0xae2f, 0xbb72, 0x69ed, 0x0, 0x0);
        gbc.writeMem(0xc180, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x12c2, gbc.sp());
        EXPECT(0xc182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc180));
        EXPECT(0x57, gbc.readMem(0xc181));
        // CB 57 00AE
        gbc.setState(0x4ef4, 0x578f, 0xdd60, 0xe7d0, 0x656d, 0x900f, 0x0, 0x0);
        gbc.writeMem(0x4ef4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x578f, gbc.sp());
        EXPECT(0x4ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00AF
        gbc.setState(0x7058, 0xb90f, 0x2980, 0x60c5, 0x101d, 0x1078, 0x1, 0x0);
        gbc.writeMem(0x7058, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb90f, gbc.sp());
        EXPECT(0x705a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00B0
        gbc.setState(0xecd9, 0x4e3e, 0x8c70, 0xa953, 0x86e, 0x779, 0x1, 0x1);
        gbc.writeMem(0xecd9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4e3e, gbc.sp());
        EXPECT(0xecdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd9));
        EXPECT(0x57, gbc.readMem(0xecda));
        // CB 57 00B1
        gbc.setState(0xe1d4, 0x1623, 0xf530, 0xb7ab, 0x1989, 0x1c62, 0x0, 0x0);
        gbc.writeMem(0xe1d4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1623, gbc.sp());
        EXPECT(0xe1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d4));
        EXPECT(0x57, gbc.readMem(0xe1d5));
        // CB 57 00B3
        gbc.setState(0xdc77, 0x90f9, 0x6120, 0xd36e, 0x1ed3, 0x662f, 0x1, 0x1);
        gbc.writeMem(0xdc77, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x90f9, gbc.sp());
        EXPECT(0xdc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc77));
        EXPECT(0x57, gbc.readMem(0xdc78));
        // CB 57 00B5
        gbc.setState(0xe755, 0x48c8, 0x8640, 0xd0c8, 0xf6cc, 0x1666, 0x1, 0x0);
        gbc.writeMem(0xe755, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x48c8, gbc.sp());
        EXPECT(0xe757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe755));
        EXPECT(0x57, gbc.readMem(0xe756));
        // CB 57 00B6
        gbc.setState(0xa91b, 0x55a6, 0x98e0, 0x102b, 0x73b7, 0x4f41, 0x1, 0x0);
        gbc.writeMem(0xa91b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x55a6, gbc.sp());
        EXPECT(0xa91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91b));
        EXPECT(0x57, gbc.readMem(0xa91c));
        // CB 57 00B7
        gbc.setState(0xb4c0, 0x669c, 0x64e0, 0x3bb8, 0x1040, 0x5d04, 0x1, 0x1);
        gbc.writeMem(0xb4c0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x669c, gbc.sp());
        EXPECT(0xb4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c0));
        EXPECT(0x57, gbc.readMem(0xb4c1));
        // CB 57 00B8
        gbc.setState(0xcb4d, 0xd7a0, 0xa0b0, 0x6f72, 0x1720, 0xe504, 0x0, 0x0);
        gbc.writeMem(0xcb4d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd7a0, gbc.sp());
        EXPECT(0xcb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4d));
        EXPECT(0x57, gbc.readMem(0xcb4e));
        // CB 57 00B9
        gbc.setState(0xe000, 0x89ca, 0x7cb0, 0xa973, 0x7e06, 0x7f6, 0x0, 0x0);
        gbc.writeMem(0xe000, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x89ca, gbc.sp());
        EXPECT(0xe002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe000));
        EXPECT(0x57, gbc.readMem(0xe001));
        // CB 57 00BA
        gbc.setState(0x310, 0xb9cc, 0x3e50, 0x4c01, 0x25b1, 0xa38b, 0x1, 0x0);
        gbc.writeMem(0x310, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb9cc, gbc.sp());
        EXPECT(0x312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00BB
        gbc.setState(0xbab5, 0x90ed, 0x410, 0xf70a, 0xae4a, 0xc917, 0x1, 0x0);
        gbc.writeMem(0xbab5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x90ed, gbc.sp());
        EXPECT(0xbab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab5));
        EXPECT(0x57, gbc.readMem(0xbab6));
        // CB 57 00BD
        gbc.setState(0x702c, 0x9876, 0x3b0, 0x722, 0x9601, 0xe18e, 0x0, 0x1);
        gbc.writeMem(0x702c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9876, gbc.sp());
        EXPECT(0x702e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00BE
        gbc.setState(0xd397, 0x358d, 0xfca0, 0xfa8c, 0xac1a, 0x5bd9, 0x0, 0x1);
        gbc.writeMem(0xd397, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x358d, gbc.sp());
        EXPECT(0xd399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd397));
        EXPECT(0x57, gbc.readMem(0xd398));
        // CB 57 00BF
        gbc.setState(0x4241, 0x6008, 0x7080, 0xb3ae, 0x1089, 0xf72b, 0x0, 0x1);
        gbc.writeMem(0x4241, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6008, gbc.sp());
        EXPECT(0x4243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00C0
        gbc.setState(0x9748, 0xacd9, 0x3250, 0x3eda, 0x376, 0x47c7, 0x1, 0x0);
        gbc.writeMem(0x9748, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xacd9, gbc.sp());
        EXPECT(0x974a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9748));
        EXPECT(0x57, gbc.readMem(0x9749));
        // CB 57 00C1
        gbc.setState(0x9408, 0xc434, 0xe80, 0x2610, 0x71df, 0x9074, 0x0, 0x0);
        gbc.writeMem(0x9408, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc434, gbc.sp());
        EXPECT(0x940a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9408));
        EXPECT(0x57, gbc.readMem(0x9409));
        // CB 57 00C2
        gbc.setState(0x678d, 0xbd4, 0x89c0, 0xa99e, 0x408a, 0x923b, 0x1, 0x0);
        gbc.writeMem(0x678d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00C3
        gbc.setState(0xee6d, 0x21c1, 0x7bf0, 0x62e0, 0x4883, 0xaa3d, 0x1, 0x0);
        gbc.writeMem(0xee6d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x21c1, gbc.sp());
        EXPECT(0xee6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6d));
        EXPECT(0x57, gbc.readMem(0xee6e));
        // CB 57 00C4
        gbc.setState(0x9253, 0x812e, 0x5f40, 0x574f, 0x6ab4, 0xab9b, 0x0, 0x1);
        gbc.writeMem(0x9253, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x812e, gbc.sp());
        EXPECT(0x9255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9253));
        EXPECT(0x57, gbc.readMem(0x9254));
        // CB 57 00C5
        gbc.setState(0x3550, 0x38ed, 0xcf00, 0x761a, 0xf747, 0xd0f7, 0x1, 0x1);
        gbc.writeMem(0x3550, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x38ed, gbc.sp());
        EXPECT(0x3552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00C6
        gbc.setState(0x7bc1, 0xe7a2, 0x8550, 0xf845, 0x2c30, 0x9872, 0x0, 0x0);
        gbc.writeMem(0x7bc1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe7a2, gbc.sp());
        EXPECT(0x7bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00C7
        gbc.setState(0x1f49, 0x769f, 0x8bf0, 0xc8a, 0x4eea, 0xaafd, 0x0, 0x0);
        gbc.writeMem(0x1f49, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x769f, gbc.sp());
        EXPECT(0x1f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00C8
        gbc.setState(0x9ec3, 0x9306, 0xb170, 0x2a25, 0xbf30, 0x8c78, 0x0, 0x0);
        gbc.writeMem(0x9ec3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9306, gbc.sp());
        EXPECT(0x9ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec3));
        EXPECT(0x57, gbc.readMem(0x9ec4));
        // CB 57 00C9
        gbc.setState(0xc3ad, 0x72a8, 0xe6f0, 0xbd6f, 0x8ef2, 0xb558, 0x0, 0x1);
        gbc.writeMem(0xc3ad, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x72a8, gbc.sp());
        EXPECT(0xc3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ad));
        EXPECT(0x57, gbc.readMem(0xc3ae));
        // CB 57 00CA
        gbc.setState(0xeddf, 0xbc3f, 0xc130, 0xec74, 0x89a1, 0x418, 0x0, 0x1);
        gbc.writeMem(0xeddf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbc3f, gbc.sp());
        EXPECT(0xede1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeddf));
        EXPECT(0x57, gbc.readMem(0xede0));
        // CB 57 00CB
        gbc.setState(0xd496, 0x8c20, 0xf210, 0x45f, 0x6253, 0x8f60, 0x0, 0x0);
        gbc.writeMem(0xd496, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8c20, gbc.sp());
        EXPECT(0xd498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd496));
        EXPECT(0x57, gbc.readMem(0xd497));
        // CB 57 00CC
        gbc.setState(0x51bf, 0x8197, 0x9d90, 0xa23d, 0x4bb5, 0x11c0, 0x1, 0x1);
        gbc.writeMem(0x51bf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8197, gbc.sp());
        EXPECT(0x51c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00CD
        gbc.setState(0x4ab, 0x3c6b, 0x65d0, 0x8ba2, 0x36c6, 0xfe4, 0x0, 0x0);
        gbc.writeMem(0x4ab, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3c6b, gbc.sp());
        EXPECT(0x4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00CE
        gbc.setState(0xbc3f, 0x704e, 0x1f30, 0xb874, 0x9dfd, 0x6902, 0x1, 0x1);
        gbc.writeMem(0xbc3f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x704e, gbc.sp());
        EXPECT(0xbc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3f));
        EXPECT(0x57, gbc.readMem(0xbc40));
        // CB 57 00CF
        gbc.setState(0xedea, 0x4664, 0x8600, 0xabc1, 0x4f79, 0x12ca, 0x1, 0x1);
        gbc.writeMem(0xedea, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4664, gbc.sp());
        EXPECT(0xedec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedea));
        EXPECT(0x57, gbc.readMem(0xedeb));
        // CB 57 00D0
        gbc.setState(0xae6c, 0x5656, 0x1620, 0xbc59, 0xbf37, 0xf2d9, 0x1, 0x0);
        gbc.writeMem(0xae6c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5656, gbc.sp());
        EXPECT(0xae6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6c));
        EXPECT(0x57, gbc.readMem(0xae6d));
        // CB 57 00D1
        gbc.setState(0x72aa, 0xe4a7, 0x2530, 0x9ac5, 0x22bb, 0xba98, 0x0, 0x0);
        gbc.writeMem(0x72aa, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe4a7, gbc.sp());
        EXPECT(0x72ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00D2
        gbc.setState(0xd542, 0xef2a, 0x9980, 0x9c13, 0x2bf6, 0x699b, 0x1, 0x0);
        gbc.writeMem(0xd542, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xef2a, gbc.sp());
        EXPECT(0xd544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd542));
        EXPECT(0x57, gbc.readMem(0xd543));
        // CB 57 00D3
        gbc.setState(0xd736, 0x72d5, 0x4a40, 0x7c7b, 0xa7d5, 0x6173, 0x0, 0x0);
        gbc.writeMem(0xd736, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x72d5, gbc.sp());
        EXPECT(0xd738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd736));
        EXPECT(0x57, gbc.readMem(0xd737));
        // CB 57 00D4
        gbc.setState(0xe4d7, 0xdac0, 0xfca0, 0x5718, 0x19b2, 0xf4e, 0x0, 0x1);
        gbc.writeMem(0xe4d7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdac0, gbc.sp());
        EXPECT(0xe4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d7));
        EXPECT(0x57, gbc.readMem(0xe4d8));
        // CB 57 00D5
        gbc.setState(0x6a74, 0xc62b, 0x5fc0, 0x96ce, 0xa1ed, 0xeccc, 0x1, 0x0);
        gbc.writeMem(0x6a74, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc62b, gbc.sp());
        EXPECT(0x6a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00D6
        gbc.setState(0x8aba, 0xe415, 0xbde0, 0x30dc, 0x6789, 0x8212, 0x0, 0x0);
        gbc.writeMem(0x8aba, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe415, gbc.sp());
        EXPECT(0x8abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aba));
        EXPECT(0x57, gbc.readMem(0x8abb));
        // CB 57 00D7
        gbc.setState(0x4f44, 0x4a0b, 0x52e0, 0x1d96, 0x7c62, 0x4ffd, 0x1, 0x1);
        gbc.writeMem(0x4f44, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4a0b, gbc.sp());
        EXPECT(0x4f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00D8
        gbc.setState(0x711c, 0xf873, 0x1280, 0xbffb, 0x25ae, 0x8e80, 0x1, 0x0);
        gbc.writeMem(0x711c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf873, gbc.sp());
        EXPECT(0x711e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00D9
        gbc.setState(0x5bad, 0xb229, 0x29a0, 0xcc4b, 0x6a59, 0xa655, 0x1, 0x0);
        gbc.writeMem(0x5bad, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb229, gbc.sp());
        EXPECT(0x5baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00DA
        gbc.setState(0x2459, 0x4729, 0x49f0, 0x2eef, 0x47b5, 0xb713, 0x1, 0x1);
        gbc.writeMem(0x2459, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4729, gbc.sp());
        EXPECT(0x245b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00DB
        gbc.setState(0xa632, 0xfc13, 0x9030, 0xba0, 0xc3b6, 0x8d69, 0x1, 0x1);
        gbc.writeMem(0xa632, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfc13, gbc.sp());
        EXPECT(0xa634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa632));
        EXPECT(0x57, gbc.readMem(0xa633));
        // CB 57 00DC
        gbc.setState(0x3dfe, 0x6848, 0xa930, 0xbfaf, 0x908c, 0xc5b1, 0x0, 0x0);
        gbc.writeMem(0x3dfe, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6848, gbc.sp());
        EXPECT(0x3e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00DD
        gbc.setState(0xeec1, 0x4631, 0x5e80, 0x56e6, 0x6971, 0xb6c, 0x1, 0x0);
        gbc.writeMem(0xeec1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4631, gbc.sp());
        EXPECT(0xeec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec1));
        EXPECT(0x57, gbc.readMem(0xeec2));
        // CB 57 00DE
        gbc.setState(0xda0c, 0x3352, 0xb190, 0x9170, 0xbe58, 0x4c5d, 0x0, 0x1);
        gbc.writeMem(0xda0c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3352, gbc.sp());
        EXPECT(0xda0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0c));
        EXPECT(0x57, gbc.readMem(0xda0d));
        // CB 57 00DF
        gbc.setState(0xce4b, 0xdfe2, 0xa1f0, 0xe326, 0x431b, 0xdbfb, 0x0, 0x0);
        gbc.writeMem(0xce4b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdfe2, gbc.sp());
        EXPECT(0xce4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4b));
        EXPECT(0x57, gbc.readMem(0xce4c));
        // CB 57 00E0
        gbc.setState(0x4313, 0xd7fc, 0x1f90, 0xe539, 0xd5b8, 0xc582, 0x0, 0x1);
        gbc.writeMem(0x4313, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd7fc, gbc.sp());
        EXPECT(0x4315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00E1
        gbc.setState(0x4568, 0xaac4, 0x70f0, 0x3fe2, 0x37df, 0xccfa, 0x1, 0x1);
        gbc.writeMem(0x4568, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xaac4, gbc.sp());
        EXPECT(0x456a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00E2
        gbc.setState(0x7b8f, 0xe17d, 0x5160, 0xb0c9, 0x4ea0, 0xfded, 0x0, 0x0);
        gbc.writeMem(0x7b8f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe17d, gbc.sp());
        EXPECT(0x7b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00E4
        gbc.setState(0x68b3, 0x793b, 0xe340, 0x27c, 0xdf36, 0xd8f3, 0x0, 0x1);
        gbc.writeMem(0x68b3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x793b, gbc.sp());
        EXPECT(0x68b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00E5
        gbc.setState(0x5c01, 0xa315, 0x3e30, 0x41a1, 0x2949, 0xe145, 0x0, 0x0);
        gbc.writeMem(0x5c01, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa315, gbc.sp());
        EXPECT(0x5c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00E6
        gbc.setState(0x74f2, 0x29ae, 0x2400, 0x6e8c, 0x8aea, 0xf957, 0x1, 0x1);
        gbc.writeMem(0x74f2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x29ae, gbc.sp());
        EXPECT(0x74f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00E7
        gbc.setState(0xd286, 0xaf3, 0x9f70, 0x61ea, 0xb9af, 0x1772, 0x0, 0x0);
        gbc.writeMem(0xd286, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xaf3, gbc.sp());
        EXPECT(0xd288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd286));
        EXPECT(0x57, gbc.readMem(0xd287));
        // CB 57 00E8
        gbc.setState(0x3815, 0xa83e, 0x12d0, 0x1be2, 0x60c3, 0xbc1c, 0x0, 0x1);
        gbc.writeMem(0x3815, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa83e, gbc.sp());
        EXPECT(0x3817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00E9
        gbc.setState(0x6be9, 0xe8cd, 0xef50, 0x6969, 0xf3d9, 0x5165, 0x1, 0x0);
        gbc.writeMem(0x6be9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe8cd, gbc.sp());
        EXPECT(0x6beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00EA
        gbc.setState(0x6a32, 0x3a2, 0x68d0, 0x19e7, 0x32ab, 0x69df, 0x1, 0x1);
        gbc.writeMem(0x6a32, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3a2, gbc.sp());
        EXPECT(0x6a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00EB
        gbc.setState(0xbadd, 0x986f, 0x2bf0, 0x5100, 0x28f3, 0x3d64, 0x0, 0x1);
        gbc.writeMem(0xbadd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x986f, gbc.sp());
        EXPECT(0xbadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadd));
        EXPECT(0x57, gbc.readMem(0xbade));
        // CB 57 00EC
        gbc.setState(0x87cd, 0xc13b, 0x230, 0x1f6d, 0x2d7a, 0x5c3d, 0x1, 0x0);
        gbc.writeMem(0x87cd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc13b, gbc.sp());
        EXPECT(0x87cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87cd));
        EXPECT(0x57, gbc.readMem(0x87ce));
        // CB 57 00ED
        gbc.setState(0x81ee, 0xaa49, 0x7140, 0xd667, 0x81c0, 0x25c9, 0x0, 0x0);
        gbc.writeMem(0x81ee, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xaa49, gbc.sp());
        EXPECT(0x81f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ee));
        EXPECT(0x57, gbc.readMem(0x81ef));
        // CB 57 00EE
        gbc.setState(0x78c9, 0x3008, 0x40a0, 0x6a83, 0x98d2, 0x81fc, 0x0, 0x1);
        gbc.writeMem(0x78c9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3008, gbc.sp());
        EXPECT(0x78cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00EF
        gbc.setState(0x139a, 0xc895, 0xa6f0, 0x9ab3, 0xec3f, 0xf204, 0x1, 0x0);
        gbc.writeMem(0x139a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc895, gbc.sp());
        EXPECT(0x139c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00F0
        gbc.setState(0x6662, 0x72ee, 0x2800, 0x4b72, 0xb030, 0xb5da, 0x1, 0x1);
        gbc.writeMem(0x6662, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x72ee, gbc.sp());
        EXPECT(0x6664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00F1
        gbc.setState(0x44db, 0xf001, 0xba00, 0xdb62, 0xa00e, 0x2cac, 0x1, 0x0);
        gbc.writeMem(0x44db, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf001, gbc.sp());
        EXPECT(0x44dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00F2
        gbc.setState(0x3642, 0x3397, 0xab60, 0x386c, 0xf8c3, 0x88d3, 0x0, 0x0);
        gbc.writeMem(0x3642, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3397, gbc.sp());
        EXPECT(0x3644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00F3
        gbc.setState(0xdc67, 0x74bc, 0xd920, 0x41c2, 0xbb96, 0xc11a, 0x0, 0x0);
        gbc.writeMem(0xdc67, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x74bc, gbc.sp());
        EXPECT(0xdc69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc67));
        EXPECT(0x57, gbc.readMem(0xdc68));
        // CB 57 00F4
        gbc.setState(0x3023, 0x39e2, 0x1250, 0x3605, 0xdd3, 0x4b9d, 0x0, 0x1);
        gbc.writeMem(0x3023, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x39e2, gbc.sp());
        EXPECT(0x3025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00F5
        gbc.setState(0x7ca8, 0xa49a, 0x2440, 0x8c5e, 0xc168, 0x9c7e, 0x1, 0x0);
        gbc.writeMem(0x7ca8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa49a, gbc.sp());
        EXPECT(0x7caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00F6
        gbc.setState(0x5079, 0x20ae, 0x6e40, 0x8669, 0x1178, 0xaac2, 0x1, 0x0);
        gbc.writeMem(0x5079, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x20ae, gbc.sp());
        EXPECT(0x507b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00F7
        gbc.setState(0xb7e1, 0x37a8, 0x1fb0, 0x571c, 0x77f9, 0xfefe, 0x0, 0x0);
        gbc.writeMem(0xb7e1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x37a8, gbc.sp());
        EXPECT(0xb7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e1));
        EXPECT(0x57, gbc.readMem(0xb7e2));
        // CB 57 00F8
        gbc.setState(0x2137, 0xcdc1, 0xa2a0, 0xdd85, 0x5a00, 0x2212, 0x1, 0x0);
        gbc.writeMem(0x2137, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcdc1, gbc.sp());
        EXPECT(0x2139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00F9
        gbc.setState(0xdab, 0x4ed4, 0xbad0, 0xc1be, 0x5fa6, 0x27d1, 0x0, 0x1);
        gbc.writeMem(0xdab, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4ed4, gbc.sp());
        EXPECT(0xdad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00FA
        gbc.setState(0xed58, 0x1f6, 0xa3c0, 0x8c52, 0x7584, 0x63d5, 0x1, 0x1);
        gbc.writeMem(0xed58, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1f6, gbc.sp());
        EXPECT(0xed5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed58));
        EXPECT(0x57, gbc.readMem(0xed59));
        // CB 57 00FB
        gbc.setState(0x9a5a, 0x55e4, 0xea70, 0x65ad, 0x42e9, 0x9527, 0x0, 0x0);
        gbc.writeMem(0x9a5a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0x9a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5a));
        EXPECT(0x57, gbc.readMem(0x9a5b));
        // CB 57 00FC
        gbc.setState(0x64e9, 0x2711, 0x5460, 0x2b22, 0x7adc, 0x8c3f, 0x1, 0x0);
        gbc.writeMem(0x64e9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2711, gbc.sp());
        EXPECT(0x64eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 00FD
        gbc.setState(0x93d5, 0x7b2c, 0x9de0, 0x207a, 0xfb5b, 0xb8f8, 0x1, 0x0);
        gbc.writeMem(0x93d5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7b2c, gbc.sp());
        EXPECT(0x93d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d5));
        EXPECT(0x57, gbc.readMem(0x93d6));
        // CB 57 00FE
        gbc.setState(0x33f0, 0xbc2d, 0xdbd0, 0xdeca, 0x79ca, 0xc8a2, 0x0, 0x0);
        gbc.writeMem(0x33f0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbc2d, gbc.sp());
        EXPECT(0x33f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 00FF
        gbc.setState(0x733e, 0x4b8b, 0xa30, 0xe5c, 0x4d11, 0xe3d6, 0x1, 0x1);
        gbc.writeMem(0x733e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4b8b, gbc.sp());
        EXPECT(0x7340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0100
        gbc.setState(0x2f79, 0xdedf, 0x250, 0x65e1, 0xa158, 0xc1c9, 0x1, 0x1);
        gbc.writeMem(0x2f79, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdedf, gbc.sp());
        EXPECT(0x2f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0101
        gbc.setState(0xbec8, 0x9280, 0x7c40, 0x628d, 0x9246, 0x52ac, 0x0, 0x1);
        gbc.writeMem(0xbec8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9280, gbc.sp());
        EXPECT(0xbeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec8));
        EXPECT(0x57, gbc.readMem(0xbec9));
        // CB 57 0102
        gbc.setState(0xafec, 0x9ae9, 0x9970, 0xfe91, 0x1a22, 0x9c5f, 0x0, 0x1);
        gbc.writeMem(0xafec, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9ae9, gbc.sp());
        EXPECT(0xafee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafec));
        EXPECT(0x57, gbc.readMem(0xafed));
        // CB 57 0103
        gbc.setState(0x3652, 0xb071, 0x6d00, 0x1be3, 0x6246, 0xc792, 0x0, 0x1);
        gbc.writeMem(0x3652, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0x3654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0104
        gbc.setState(0x543d, 0xf341, 0x4b20, 0xa3b0, 0xe745, 0xd11e, 0x1, 0x0);
        gbc.writeMem(0x543d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf341, gbc.sp());
        EXPECT(0x543f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0105
        gbc.setState(0xeac9, 0x3bb8, 0x3990, 0xef25, 0xb31d, 0x1993, 0x0, 0x0);
        gbc.writeMem(0xeac9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3bb8, gbc.sp());
        EXPECT(0xeacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac9));
        EXPECT(0x57, gbc.readMem(0xeaca));
        // CB 57 0106
        gbc.setState(0xcb12, 0xab2f, 0x6e70, 0x466f, 0x7ce, 0xb485, 0x1, 0x1);
        gbc.writeMem(0xcb12, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xab2f, gbc.sp());
        EXPECT(0xcb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb12));
        EXPECT(0x57, gbc.readMem(0xcb13));
        // CB 57 0107
        gbc.setState(0x1e44, 0x426c, 0x37a0, 0xa49d, 0xa57d, 0x25a0, 0x1, 0x1);
        gbc.writeMem(0x1e44, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x426c, gbc.sp());
        EXPECT(0x1e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0108
        gbc.setState(0xd1a8, 0x504, 0x8a90, 0xb512, 0x2653, 0x7b87, 0x1, 0x0);
        gbc.writeMem(0xd1a8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x504, gbc.sp());
        EXPECT(0xd1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a8));
        EXPECT(0x57, gbc.readMem(0xd1a9));
        // CB 57 0109
        gbc.setState(0x2a7f, 0x280a, 0x4440, 0x4684, 0xcd2, 0x7d1c, 0x0, 0x1);
        gbc.writeMem(0x2a7f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x280a, gbc.sp());
        EXPECT(0x2a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 010A
        gbc.setState(0x9439, 0x744b, 0x5380, 0xabae, 0xa8ca, 0xfca6, 0x0, 0x1);
        gbc.writeMem(0x9439, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x744b, gbc.sp());
        EXPECT(0x943b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9439));
        EXPECT(0x57, gbc.readMem(0x943a));
        // CB 57 010B
        gbc.setState(0x2301, 0xeb5, 0xe270, 0xe4d6, 0x46ee, 0x99bc, 0x0, 0x0);
        gbc.writeMem(0x2301, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xeb5, gbc.sp());
        EXPECT(0x2303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 010C
        gbc.setState(0xe385, 0x159a, 0x2aa0, 0xc4ba, 0x2879, 0x13c4, 0x0, 0x0);
        gbc.writeMem(0xe385, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0xe387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe385));
        EXPECT(0x57, gbc.readMem(0xe386));
        // CB 57 010D
        gbc.setState(0xa8c4, 0x9f11, 0x7fd0, 0x7fb7, 0xbf74, 0x99d1, 0x1, 0x1);
        gbc.writeMem(0xa8c4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9f11, gbc.sp());
        EXPECT(0xa8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c4));
        EXPECT(0x57, gbc.readMem(0xa8c5));
        // CB 57 010F
        gbc.setState(0xdd80, 0xd833, 0xd950, 0xcb51, 0x4a48, 0xce9a, 0x1, 0x1);
        gbc.writeMem(0xdd80, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd833, gbc.sp());
        EXPECT(0xdd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd80));
        EXPECT(0x57, gbc.readMem(0xdd81));
        // CB 57 0110
        gbc.setState(0x5675, 0x45a6, 0x1160, 0xc8eb, 0x74f2, 0x2f93, 0x0, 0x0);
        gbc.writeMem(0x5675, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x45a6, gbc.sp());
        EXPECT(0x5677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0111
        gbc.setState(0x12a9, 0xb259, 0x25f0, 0x81f6, 0xdb4b, 0x144b, 0x0, 0x1);
        gbc.writeMem(0x12a9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb259, gbc.sp());
        EXPECT(0x12ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0112
        gbc.setState(0x5fc7, 0x4fd, 0x290, 0xaa6e, 0x82e7, 0x7bc0, 0x1, 0x0);
        gbc.writeMem(0x5fc7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4fd, gbc.sp());
        EXPECT(0x5fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0113
        gbc.setState(0xf38, 0x8fd1, 0x4900, 0x3d29, 0x679d, 0x9485, 0x1, 0x0);
        gbc.writeMem(0xf38, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8fd1, gbc.sp());
        EXPECT(0xf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0115
        gbc.setState(0x3993, 0xa153, 0x3b0, 0x41f1, 0x5c77, 0x1fd7, 0x1, 0x1);
        gbc.writeMem(0x3993, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa153, gbc.sp());
        EXPECT(0x3995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0116
        gbc.setState(0x8e56, 0x3a10, 0xecd0, 0x1db9, 0x11a5, 0x165e, 0x0, 0x0);
        gbc.writeMem(0x8e56, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3a10, gbc.sp());
        EXPECT(0x8e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e56));
        EXPECT(0x57, gbc.readMem(0x8e57));
        // CB 57 0117
        gbc.setState(0xe68b, 0x78ec, 0x3a90, 0xbaeb, 0xbbf4, 0xbfec, 0x0, 0x1);
        gbc.writeMem(0xe68b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x78ec, gbc.sp());
        EXPECT(0xe68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68b));
        EXPECT(0x57, gbc.readMem(0xe68c));
        // CB 57 0118
        gbc.setState(0xc1bc, 0xd2c4, 0x5860, 0x1aa4, 0x7433, 0x77cf, 0x1, 0x1);
        gbc.writeMem(0xc1bc, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd2c4, gbc.sp());
        EXPECT(0xc1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1bc));
        EXPECT(0x57, gbc.readMem(0xc1bd));
        // CB 57 0119
        gbc.setState(0xe7f8, 0xf7e8, 0x50a0, 0x9e36, 0x37a, 0x6d8c, 0x1, 0x0);
        gbc.writeMem(0xe7f8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf7e8, gbc.sp());
        EXPECT(0xe7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f8));
        EXPECT(0x57, gbc.readMem(0xe7f9));
        // CB 57 011A
        gbc.setState(0xca59, 0x7059, 0xbe10, 0x9685, 0xecc7, 0xd1e1, 0x1, 0x1);
        gbc.writeMem(0xca59, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7059, gbc.sp());
        EXPECT(0xca5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca59));
        EXPECT(0x57, gbc.readMem(0xca5a));
        // CB 57 011B
        gbc.setState(0xdfc4, 0x16ce, 0xdf90, 0x6284, 0x5878, 0x92c0, 0x1, 0x1);
        gbc.writeMem(0xdfc4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x16ce, gbc.sp());
        EXPECT(0xdfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc4));
        EXPECT(0x57, gbc.readMem(0xdfc5));
        // CB 57 011C
        gbc.setState(0x68ea, 0x5a75, 0xc4b0, 0x3c31, 0x5e06, 0x44d3, 0x0, 0x1);
        gbc.writeMem(0x68ea, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5a75, gbc.sp());
        EXPECT(0x68ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 011D
        gbc.setState(0x860a, 0x428a, 0x1e30, 0x9c9a, 0x4927, 0x69f5, 0x0, 0x1);
        gbc.writeMem(0x860a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x428a, gbc.sp());
        EXPECT(0x860c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860a));
        EXPECT(0x57, gbc.readMem(0x860b));
        // CB 57 011E
        gbc.setState(0x6d, 0x1b81, 0x3050, 0xf87d, 0x420, 0xffb7, 0x1, 0x1);
        gbc.writeMem(0x6d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1b81, gbc.sp());
        EXPECT(0x6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 011F
        gbc.setState(0x2407, 0x8037, 0xf2b0, 0xd34, 0x41fe, 0xd19, 0x0, 0x1);
        gbc.writeMem(0x2407, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8037, gbc.sp());
        EXPECT(0x2409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0120
        gbc.setState(0x6b11, 0x13b7, 0x9d60, 0x84f5, 0x733c, 0x9db9, 0x0, 0x1);
        gbc.writeMem(0x6b11, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x13b7, gbc.sp());
        EXPECT(0x6b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0121
        gbc.setState(0x55b8, 0xdb52, 0x6d40, 0x868e, 0x9f6c, 0x2771, 0x1, 0x0);
        gbc.writeMem(0x55b8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdb52, gbc.sp());
        EXPECT(0x55ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0122
        gbc.setState(0xa85f, 0xabc3, 0x5a10, 0x1d1a, 0xc084, 0x3c8e, 0x0, 0x1);
        gbc.writeMem(0xa85f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xabc3, gbc.sp());
        EXPECT(0xa861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85f));
        EXPECT(0x57, gbc.readMem(0xa860));
        // CB 57 0123
        gbc.setState(0xdfcc, 0xf839, 0xb190, 0x80b3, 0xdf10, 0x4884, 0x1, 0x1);
        gbc.writeMem(0xdfcc, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf839, gbc.sp());
        EXPECT(0xdfce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfcc));
        EXPECT(0x57, gbc.readMem(0xdfcd));
        // CB 57 0124
        gbc.setState(0x5d2e, 0x10b1, 0xbaa0, 0x3ae1, 0xe37e, 0xe705, 0x1, 0x0);
        gbc.writeMem(0x5d2e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x10b1, gbc.sp());
        EXPECT(0x5d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0125
        gbc.setState(0xcabb, 0xc67a, 0x3a10, 0xd1f5, 0xf159, 0xb976, 0x1, 0x0);
        gbc.writeMem(0xcabb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc67a, gbc.sp());
        EXPECT(0xcabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabb));
        EXPECT(0x57, gbc.readMem(0xcabc));
        // CB 57 0126
        gbc.setState(0x739c, 0x2bd, 0xe290, 0x8f9d, 0x76ff, 0x8094, 0x1, 0x1);
        gbc.writeMem(0x739c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2bd, gbc.sp());
        EXPECT(0x739e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0127
        gbc.setState(0xd565, 0x505c, 0xe070, 0x5b56, 0xfbed, 0x3099, 0x1, 0x1);
        gbc.writeMem(0xd565, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0xd567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd565));
        EXPECT(0x57, gbc.readMem(0xd566));
        // CB 57 0128
        gbc.setState(0xccb0, 0x1918, 0x7b0, 0x5e3e, 0x408f, 0x3f74, 0x1, 0x1);
        gbc.writeMem(0xccb0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1918, gbc.sp());
        EXPECT(0xccb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb0));
        EXPECT(0x57, gbc.readMem(0xccb1));
        // CB 57 0129
        gbc.setState(0x68d0, 0xcca, 0x4510, 0xcee1, 0xb1fe, 0x1227, 0x1, 0x0);
        gbc.writeMem(0x68d0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcca, gbc.sp());
        EXPECT(0x68d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 012A
        gbc.setState(0xb500, 0xb6eb, 0x9ce0, 0xdf40, 0x4104, 0x15f7, 0x1, 0x1);
        gbc.writeMem(0xb500, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb6eb, gbc.sp());
        EXPECT(0xb502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb500));
        EXPECT(0x57, gbc.readMem(0xb501));
        // CB 57 012B
        gbc.setState(0xd453, 0xbe54, 0xd070, 0x1867, 0xcae9, 0x5613, 0x0, 0x0);
        gbc.writeMem(0xd453, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbe54, gbc.sp());
        EXPECT(0xd455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd453));
        EXPECT(0x57, gbc.readMem(0xd454));
        // CB 57 012C
        gbc.setState(0x556a, 0xd34c, 0xf930, 0x1959, 0xef6e, 0xe9, 0x0, 0x0);
        gbc.writeMem(0x556a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd34c, gbc.sp());
        EXPECT(0x556c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 012D
        gbc.setState(0xe918, 0x3cbf, 0xeeb0, 0x82cd, 0x9671, 0xe5b4, 0x1, 0x1);
        gbc.writeMem(0xe918, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3cbf, gbc.sp());
        EXPECT(0xe91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe918));
        EXPECT(0x57, gbc.readMem(0xe919));
        // CB 57 012E
        gbc.setState(0x2f70, 0x8a8f, 0x4ed0, 0x4bd, 0xb24a, 0x8736, 0x0, 0x0);
        gbc.writeMem(0x2f70, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8a8f, gbc.sp());
        EXPECT(0x2f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 012F
        gbc.setState(0xb329, 0xaa97, 0x7e80, 0xc10, 0xe15, 0x9902, 0x0, 0x1);
        gbc.writeMem(0xb329, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xaa97, gbc.sp());
        EXPECT(0xb32b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb329));
        EXPECT(0x57, gbc.readMem(0xb32a));
        // CB 57 0130
        gbc.setState(0xe740, 0x8e6d, 0xd6b0, 0xb11b, 0x8cb4, 0xf64c, 0x0, 0x1);
        gbc.writeMem(0xe740, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8e6d, gbc.sp());
        EXPECT(0xe742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe740));
        EXPECT(0x57, gbc.readMem(0xe741));
        // CB 57 0131
        gbc.setState(0x8a5, 0x9b25, 0x49b0, 0x226b, 0x5e43, 0xaf3, 0x0, 0x1);
        gbc.writeMem(0x8a5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9b25, gbc.sp());
        EXPECT(0x8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0132
        gbc.setState(0x9fcf, 0xeb0b, 0x2360, 0x25f6, 0x25b, 0x8dc3, 0x1, 0x1);
        gbc.writeMem(0x9fcf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xeb0b, gbc.sp());
        EXPECT(0x9fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcf));
        EXPECT(0x57, gbc.readMem(0x9fd0));
        // CB 57 0134
        gbc.setState(0x857c, 0x89b7, 0xb8e0, 0xae03, 0xc9f9, 0x4ebf, 0x0, 0x0);
        gbc.writeMem(0x857c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x89b7, gbc.sp());
        EXPECT(0x857e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857c));
        EXPECT(0x57, gbc.readMem(0x857d));
        // CB 57 0135
        gbc.setState(0x30b2, 0x8e11, 0x6d70, 0xed01, 0x71de, 0xbb3d, 0x0, 0x1);
        gbc.writeMem(0x30b2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8e11, gbc.sp());
        EXPECT(0x30b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0136
        gbc.setState(0x5213, 0x4beb, 0xf760, 0xfb99, 0xd7ec, 0x1036, 0x0, 0x1);
        gbc.writeMem(0x5213, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4beb, gbc.sp());
        EXPECT(0x5215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0137
        gbc.setState(0x6e8c, 0x354c, 0x4000, 0xc47e, 0x7c9e, 0x5f82, 0x0, 0x1);
        gbc.writeMem(0x6e8c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x354c, gbc.sp());
        EXPECT(0x6e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0138
        gbc.setState(0x2625, 0xbfce, 0xcd00, 0x985e, 0x82ec, 0xd778, 0x1, 0x0);
        gbc.writeMem(0x2625, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbfce, gbc.sp());
        EXPECT(0x2627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 013A
        gbc.setState(0xa791, 0x2737, 0xd670, 0x7aca, 0x92bd, 0x372d, 0x0, 0x1);
        gbc.writeMem(0xa791, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2737, gbc.sp());
        EXPECT(0xa793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa791));
        EXPECT(0x57, gbc.readMem(0xa792));
        // CB 57 013B
        gbc.setState(0xbea5, 0xc997, 0x8f70, 0x4d3c, 0xf126, 0xc7b1, 0x0, 0x0);
        gbc.writeMem(0xbea5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc997, gbc.sp());
        EXPECT(0xbea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea5));
        EXPECT(0x57, gbc.readMem(0xbea6));
        // CB 57 013C
        gbc.setState(0xc688, 0x34d4, 0xe020, 0x6ae2, 0x974b, 0x518b, 0x0, 0x1);
        gbc.writeMem(0xc688, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x34d4, gbc.sp());
        EXPECT(0xc68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc688));
        EXPECT(0x57, gbc.readMem(0xc689));
        // CB 57 013D
        gbc.setState(0xc82a, 0x7321, 0x120, 0x8321, 0x8119, 0x331e, 0x1, 0x1);
        gbc.writeMem(0xc82a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7321, gbc.sp());
        EXPECT(0xc82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82a));
        EXPECT(0x57, gbc.readMem(0xc82b));
        // CB 57 013E
        gbc.setState(0xaea0, 0x3ad3, 0xd360, 0xb167, 0xd757, 0x16a1, 0x0, 0x0);
        gbc.writeMem(0xaea0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3ad3, gbc.sp());
        EXPECT(0xaea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea0));
        EXPECT(0x57, gbc.readMem(0xaea1));
        // CB 57 013F
        gbc.setState(0x5412, 0xefc6, 0x8910, 0x20e1, 0x7196, 0x87ce, 0x0, 0x1);
        gbc.writeMem(0x5412, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xefc6, gbc.sp());
        EXPECT(0x5414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0140
        gbc.setState(0x31f5, 0x522d, 0xf130, 0xf8bc, 0x2112, 0xc03e, 0x1, 0x1);
        gbc.writeMem(0x31f5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x522d, gbc.sp());
        EXPECT(0x31f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0141
        gbc.setState(0x9d5c, 0x8b73, 0x1240, 0xe2a6, 0xc201, 0x7109, 0x1, 0x0);
        gbc.writeMem(0x9d5c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8b73, gbc.sp());
        EXPECT(0x9d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5c));
        EXPECT(0x57, gbc.readMem(0x9d5d));
        // CB 57 0142
        gbc.setState(0x46cd, 0x715c, 0x7190, 0x8e21, 0x58b2, 0x600a, 0x1, 0x1);
        gbc.writeMem(0x46cd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x715c, gbc.sp());
        EXPECT(0x46cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0143
        gbc.setState(0x1965, 0x24b8, 0xa860, 0x1adc, 0x7fb, 0x5411, 0x1, 0x0);
        gbc.writeMem(0x1965, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x24b8, gbc.sp());
        EXPECT(0x1967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0144
        gbc.setState(0xe875, 0xfb2c, 0x6960, 0xfe7c, 0x85d, 0x1132, 0x1, 0x0);
        gbc.writeMem(0xe875, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfb2c, gbc.sp());
        EXPECT(0xe877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe875));
        EXPECT(0x57, gbc.readMem(0xe876));
        // CB 57 0145
        gbc.setState(0x8f2d, 0xe241, 0x4a40, 0x7196, 0xa8cd, 0xb624, 0x1, 0x1);
        gbc.writeMem(0x8f2d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe241, gbc.sp());
        EXPECT(0x8f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2d));
        EXPECT(0x57, gbc.readMem(0x8f2e));
        // CB 57 0146
        gbc.setState(0xa09d, 0xe3eb, 0x5f10, 0xba2b, 0x744e, 0xf84e, 0x0, 0x1);
        gbc.writeMem(0xa09d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe3eb, gbc.sp());
        EXPECT(0xa09f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09d));
        EXPECT(0x57, gbc.readMem(0xa09e));
        // CB 57 0147
        gbc.setState(0x84ab, 0x3854, 0x22d0, 0x994b, 0xa1a2, 0xa73c, 0x0, 0x1);
        gbc.writeMem(0x84ab, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3854, gbc.sp());
        EXPECT(0x84ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ab));
        EXPECT(0x57, gbc.readMem(0x84ac));
        // CB 57 0148
        gbc.setState(0x855d, 0xdf59, 0x87c0, 0x2166, 0xb9cc, 0x2dd2, 0x1, 0x0);
        gbc.writeMem(0x855d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdf59, gbc.sp());
        EXPECT(0x855f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855d));
        EXPECT(0x57, gbc.readMem(0x855e));
        // CB 57 0149
        gbc.setState(0x9f0d, 0x5467, 0x8750, 0xc4ed, 0xa692, 0x8132, 0x0, 0x0);
        gbc.writeMem(0x9f0d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5467, gbc.sp());
        EXPECT(0x9f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0d));
        EXPECT(0x57, gbc.readMem(0x9f0e));
        // CB 57 014B
        gbc.setState(0x3ca3, 0x49ab, 0x9490, 0xc8d2, 0x64fb, 0xad5a, 0x1, 0x0);
        gbc.writeMem(0x3ca3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x49ab, gbc.sp());
        EXPECT(0x3ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 014D
        gbc.setState(0x8a03, 0x5212, 0x6ae0, 0xf472, 0x67b4, 0x513d, 0x1, 0x1);
        gbc.writeMem(0x8a03, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5212, gbc.sp());
        EXPECT(0x8a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a03));
        EXPECT(0x57, gbc.readMem(0x8a04));
        // CB 57 014E
        gbc.setState(0xaa0, 0x8344, 0x3c0, 0xd44, 0x4c33, 0x1346, 0x1, 0x0);
        gbc.writeMem(0xaa0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8344, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 014F
        gbc.setState(0x68c5, 0x7845, 0x6e30, 0x1081, 0x1b65, 0x824a, 0x0, 0x0);
        gbc.writeMem(0x68c5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7845, gbc.sp());
        EXPECT(0x68c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0150
        gbc.setState(0xfd6, 0x97aa, 0x830, 0x98a3, 0x4bba, 0x67e1, 0x1, 0x1);
        gbc.writeMem(0xfd6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x97aa, gbc.sp());
        EXPECT(0xfd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0151
        gbc.setState(0xdfcd, 0x8fe5, 0x6e40, 0x8086, 0x8f1f, 0x9d5c, 0x1, 0x0);
        gbc.writeMem(0xdfcd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8fe5, gbc.sp());
        EXPECT(0xdfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfcd));
        EXPECT(0x57, gbc.readMem(0xdfce));
        // CB 57 0152
        gbc.setState(0x8ee0, 0x49ad, 0x5ab0, 0x6b7a, 0x3fff, 0x8332, 0x0, 0x1);
        gbc.writeMem(0x8ee0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x49ad, gbc.sp());
        EXPECT(0x8ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee0));
        EXPECT(0x57, gbc.readMem(0x8ee1));
        // CB 57 0153
        gbc.setState(0x4b19, 0x53ac, 0xf070, 0x392b, 0x4c21, 0x3c0, 0x0, 0x1);
        gbc.writeMem(0x4b19, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x53ac, gbc.sp());
        EXPECT(0x4b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0154
        gbc.setState(0x7eaf, 0x9b0, 0x3f00, 0xdcfc, 0x8097, 0x31a1, 0x0, 0x0);
        gbc.writeMem(0x7eaf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9b0, gbc.sp());
        EXPECT(0x7eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0155
        gbc.setState(0xc4a0, 0x3cff, 0x46d0, 0x6d73, 0xce06, 0xa798, 0x0, 0x0);
        gbc.writeMem(0xc4a0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3cff, gbc.sp());
        EXPECT(0xc4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a0));
        EXPECT(0x57, gbc.readMem(0xc4a1));
        // CB 57 0156
        gbc.setState(0xebd5, 0x609b, 0xeb50, 0x872a, 0xf799, 0x4ae0, 0x0, 0x0);
        gbc.writeMem(0xebd5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x609b, gbc.sp());
        EXPECT(0xebd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd5));
        EXPECT(0x57, gbc.readMem(0xebd6));
        // CB 57 0157
        gbc.setState(0x7b25, 0x9e77, 0x8ee0, 0x3214, 0x56da, 0x2c1a, 0x0, 0x1);
        gbc.writeMem(0x7b25, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9e77, gbc.sp());
        EXPECT(0x7b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0158
        gbc.setState(0x399a, 0x4a76, 0x3410, 0x34c0, 0x63ba, 0x3235, 0x0, 0x0);
        gbc.writeMem(0x399a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4a76, gbc.sp());
        EXPECT(0x399c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0159
        gbc.setState(0x6b83, 0xe1e1, 0xb630, 0x6bf5, 0x1548, 0x1bbb, 0x1, 0x1);
        gbc.writeMem(0x6b83, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe1e1, gbc.sp());
        EXPECT(0x6b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 015A
        gbc.setState(0x15, 0xf031, 0xc030, 0xd372, 0xce9c, 0xc75b, 0x0, 0x0);
        gbc.writeMem(0x15, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf031, gbc.sp());
        EXPECT(0x17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 015B
        gbc.setState(0x6b15, 0x871a, 0xfb00, 0x6e63, 0xe83, 0x5526, 0x1, 0x1);
        gbc.writeMem(0x6b15, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x871a, gbc.sp());
        EXPECT(0x6b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 015C
        gbc.setState(0x8a1a, 0x3348, 0x38f0, 0x3029, 0xede6, 0xad9b, 0x0, 0x1);
        gbc.writeMem(0x8a1a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3348, gbc.sp());
        EXPECT(0x8a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1a));
        EXPECT(0x57, gbc.readMem(0x8a1b));
        // CB 57 015D
        gbc.setState(0x2033, 0xfb1f, 0xb1b0, 0x8397, 0x7c29, 0xffb8, 0x1, 0x1);
        gbc.writeMem(0x2033, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfb1f, gbc.sp());
        EXPECT(0x2035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 015E
        gbc.setState(0x27ce, 0x21ae, 0xb370, 0x912, 0x1055, 0x3b98, 0x0, 0x1);
        gbc.writeMem(0x27ce, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x21ae, gbc.sp());
        EXPECT(0x27d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 015F
        gbc.setState(0x56ae, 0x92bf, 0x7ca0, 0xedb7, 0xdc8d, 0xb1c1, 0x0, 0x1);
        gbc.writeMem(0x56ae, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x92bf, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0161
        gbc.setState(0x8c14, 0x1401, 0xaf50, 0xa47a, 0x98af, 0x48ee, 0x1, 0x1);
        gbc.writeMem(0x8c14, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1401, gbc.sp());
        EXPECT(0x8c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c14));
        EXPECT(0x57, gbc.readMem(0x8c15));
        // CB 57 0162
        gbc.setState(0x5709, 0x9567, 0xeb50, 0x2e34, 0x7b8b, 0x42e7, 0x0, 0x1);
        gbc.writeMem(0x5709, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9567, gbc.sp());
        EXPECT(0x570b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0163
        gbc.setState(0x9b86, 0xf9aa, 0x22e0, 0x5fea, 0x3c61, 0xce8f, 0x1, 0x0);
        gbc.writeMem(0x9b86, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf9aa, gbc.sp());
        EXPECT(0x9b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b86));
        EXPECT(0x57, gbc.readMem(0x9b87));
        // CB 57 0165
        gbc.setState(0xbd57, 0x701d, 0xba40, 0x9078, 0x8208, 0x9e65, 0x0, 0x0);
        gbc.writeMem(0xbd57, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x701d, gbc.sp());
        EXPECT(0xbd59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd57));
        EXPECT(0x57, gbc.readMem(0xbd58));
        // CB 57 0166
        gbc.setState(0x3e6d, 0x1d1d, 0x2360, 0x7faf, 0x776f, 0x1e88, 0x0, 0x1);
        gbc.writeMem(0x3e6d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1d1d, gbc.sp());
        EXPECT(0x3e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0167
        gbc.setState(0x85ac, 0x23af, 0x5d50, 0xb348, 0x5ec0, 0xe3f0, 0x1, 0x1);
        gbc.writeMem(0x85ac, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x23af, gbc.sp());
        EXPECT(0x85ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ac));
        EXPECT(0x57, gbc.readMem(0x85ad));
        // CB 57 0168
        gbc.setState(0xbc37, 0xc344, 0x6950, 0xffd0, 0x7524, 0xa80f, 0x1, 0x0);
        gbc.writeMem(0xbc37, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc344, gbc.sp());
        EXPECT(0xbc39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc37));
        EXPECT(0x57, gbc.readMem(0xbc38));
        // CB 57 0169
        gbc.setState(0xcfa9, 0x60d, 0x7fb0, 0x3cd2, 0x7fab, 0xd8f7, 0x0, 0x1);
        gbc.writeMem(0xcfa9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x60d, gbc.sp());
        EXPECT(0xcfab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa9));
        EXPECT(0x57, gbc.readMem(0xcfaa));
        // CB 57 016B
        gbc.setState(0x7482, 0xa502, 0xcd0, 0x7738, 0xcb08, 0x8829, 0x1, 0x0);
        gbc.writeMem(0x7482, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa502, gbc.sp());
        EXPECT(0x7484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 016C
        gbc.setState(0xdc48, 0x44c5, 0x7420, 0x9c2f, 0xd44d, 0xc49e, 0x0, 0x1);
        gbc.writeMem(0xdc48, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x44c5, gbc.sp());
        EXPECT(0xdc4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc48));
        EXPECT(0x57, gbc.readMem(0xdc49));
        // CB 57 016D
        gbc.setState(0x94cd, 0xd15b, 0x3960, 0x7e06, 0x542c, 0x657a, 0x0, 0x1);
        gbc.writeMem(0x94cd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd15b, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cd));
        EXPECT(0x57, gbc.readMem(0x94ce));
        // CB 57 016E
        gbc.setState(0x5177, 0x4c65, 0xda70, 0x7504, 0xc2e1, 0x62d7, 0x0, 0x0);
        gbc.writeMem(0x5177, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4c65, gbc.sp());
        EXPECT(0x5179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 016F
        gbc.setState(0xd33a, 0xa83c, 0xf140, 0xaced, 0xd7f1, 0x1abd, 0x1, 0x1);
        gbc.writeMem(0xd33a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa83c, gbc.sp());
        EXPECT(0xd33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33a));
        EXPECT(0x57, gbc.readMem(0xd33b));
        // CB 57 0170
        gbc.setState(0x70b3, 0xb832, 0xa4f0, 0x8931, 0x6b2e, 0x533e, 0x1, 0x0);
        gbc.writeMem(0x70b3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb832, gbc.sp());
        EXPECT(0x70b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0171
        gbc.setState(0xe9ff, 0x4724, 0x900, 0xe16d, 0xab02, 0x53f6, 0x0, 0x0);
        gbc.writeMem(0xe9ff, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4724, gbc.sp());
        EXPECT(0xea01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ff));
        EXPECT(0x57, gbc.readMem(0xea00));
        // CB 57 0172
        gbc.setState(0x7de1, 0xbf8d, 0xb1a0, 0xab39, 0xe57e, 0x1a66, 0x0, 0x0);
        gbc.writeMem(0x7de1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbf8d, gbc.sp());
        EXPECT(0x7de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0173
        gbc.setState(0xfbd, 0x5a4d, 0xf20, 0x4d6e, 0xae4c, 0x2934, 0x1, 0x1);
        gbc.writeMem(0xfbd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5a4d, gbc.sp());
        EXPECT(0xfbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0174
        gbc.setState(0x2ad9, 0xf9e7, 0x1fe0, 0x6ba3, 0x6f85, 0x5a04, 0x0, 0x0);
        gbc.writeMem(0x2ad9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf9e7, gbc.sp());
        EXPECT(0x2adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0175
        gbc.setState(0x8cb3, 0xec74, 0x4740, 0x11ec, 0xb5cc, 0xf9ac, 0x1, 0x0);
        gbc.writeMem(0x8cb3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xec74, gbc.sp());
        EXPECT(0x8cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb3));
        EXPECT(0x57, gbc.readMem(0x8cb4));
        // CB 57 0176
        gbc.setState(0x3839, 0x2547, 0xf2f0, 0x67f7, 0x6b62, 0x964c, 0x0, 0x0);
        gbc.writeMem(0x3839, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2547, gbc.sp());
        EXPECT(0x383b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0177
        gbc.setState(0x1469, 0x95d4, 0x9790, 0xa1c1, 0xec62, 0xd8f5, 0x1, 0x0);
        gbc.writeMem(0x1469, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x95d4, gbc.sp());
        EXPECT(0x146b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0178
        gbc.setState(0x332e, 0xcf23, 0x7570, 0xf610, 0x915b, 0x8488, 0x0, 0x0);
        gbc.writeMem(0x332e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcf23, gbc.sp());
        EXPECT(0x3330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0179
        gbc.setState(0x8338, 0x380e, 0x2050, 0x323, 0xfaed, 0xf3bd, 0x0, 0x0);
        gbc.writeMem(0x8338, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x380e, gbc.sp());
        EXPECT(0x833a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8338));
        EXPECT(0x57, gbc.readMem(0x8339));
        // CB 57 017A
        gbc.setState(0x6329, 0x16f5, 0x3490, 0xda1a, 0x20f9, 0xf943, 0x1, 0x0);
        gbc.writeMem(0x6329, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x16f5, gbc.sp());
        EXPECT(0x632b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 017B
        gbc.setState(0x787f, 0xd525, 0xfc50, 0x5c67, 0x19bb, 0x63cb, 0x0, 0x0);
        gbc.writeMem(0x787f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd525, gbc.sp());
        EXPECT(0x7881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 017C
        gbc.setState(0x8613, 0xdda8, 0x39a0, 0x7633, 0xe371, 0x118c, 0x0, 0x1);
        gbc.writeMem(0x8613, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdda8, gbc.sp());
        EXPECT(0x8615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8613));
        EXPECT(0x57, gbc.readMem(0x8614));
        // CB 57 017D
        gbc.setState(0x1f86, 0xd6b8, 0x1d00, 0x8a75, 0xcce5, 0x13ca, 0x1, 0x1);
        gbc.writeMem(0x1f86, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd6b8, gbc.sp());
        EXPECT(0x1f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 017E
        gbc.setState(0x6e58, 0xf4ee, 0x9ee0, 0xb574, 0xac25, 0xedbd, 0x0, 0x1);
        gbc.writeMem(0x6e58, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf4ee, gbc.sp());
        EXPECT(0x6e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 017F
        gbc.setState(0x192b, 0x7467, 0x9250, 0x89a0, 0xc1a0, 0x3455, 0x0, 0x1);
        gbc.writeMem(0x192b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7467, gbc.sp());
        EXPECT(0x192d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0180
        gbc.setState(0x8de8, 0x6772, 0xb350, 0xf3b5, 0xeb0, 0xe47d, 0x1, 0x0);
        gbc.writeMem(0x8de8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6772, gbc.sp());
        EXPECT(0x8dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de8));
        EXPECT(0x57, gbc.readMem(0x8de9));
        // CB 57 0181
        gbc.setState(0x63e, 0x25da, 0xc2d0, 0x2b6b, 0xd280, 0xc94b, 0x0, 0x0);
        gbc.writeMem(0x63e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x25da, gbc.sp());
        EXPECT(0x640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0182
        gbc.setState(0x11aa, 0x1f4e, 0x2960, 0xa402, 0xd7a6, 0xf12d, 0x0, 0x1);
        gbc.writeMem(0x11aa, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1f4e, gbc.sp());
        EXPECT(0x11ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0184
        gbc.setState(0xbf8a, 0x8b15, 0xa3f0, 0xae5f, 0x1696, 0x308a, 0x1, 0x0);
        gbc.writeMem(0xbf8a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8b15, gbc.sp());
        EXPECT(0xbf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8a));
        EXPECT(0x57, gbc.readMem(0xbf8b));
        // CB 57 0185
        gbc.setState(0x574a, 0x28b8, 0x4d20, 0x307e, 0xaf4f, 0x4f15, 0x0, 0x0);
        gbc.writeMem(0x574a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x28b8, gbc.sp());
        EXPECT(0x574c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0186
        gbc.setState(0xcae9, 0x3b48, 0x6030, 0x5922, 0xd199, 0xa82c, 0x1, 0x1);
        gbc.writeMem(0xcae9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3b48, gbc.sp());
        EXPECT(0xcaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae9));
        EXPECT(0x57, gbc.readMem(0xcaea));
        // CB 57 0187
        gbc.setState(0x7c27, 0x207c, 0xa650, 0x872, 0x3e0, 0x565e, 0x1, 0x1);
        gbc.writeMem(0x7c27, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x207c, gbc.sp());
        EXPECT(0x7c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0188
        gbc.setState(0x28fc, 0x8727, 0xbc60, 0x3b78, 0x3e1c, 0x7598, 0x0, 0x0);
        gbc.writeMem(0x28fc, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8727, gbc.sp());
        EXPECT(0x28fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0189
        gbc.setState(0x37fc, 0xb52a, 0x13c0, 0xde33, 0x3b23, 0xfeb6, 0x0, 0x1);
        gbc.writeMem(0x37fc, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0x37fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 018A
        gbc.setState(0x7ddc, 0xee29, 0xaf70, 0x169e, 0xeca1, 0x3db4, 0x0, 0x0);
        gbc.writeMem(0x7ddc, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xee29, gbc.sp());
        EXPECT(0x7dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 018C
        gbc.setState(0x440a, 0xf11, 0x7100, 0xc1bd, 0xfa3, 0x1a0f, 0x1, 0x0);
        gbc.writeMem(0x440a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf11, gbc.sp());
        EXPECT(0x440c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 018D
        gbc.setState(0xe16b, 0xa2cf, 0x3e40, 0xa685, 0x5fa5, 0x7e13, 0x0, 0x1);
        gbc.writeMem(0xe16b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa2cf, gbc.sp());
        EXPECT(0xe16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16b));
        EXPECT(0x57, gbc.readMem(0xe16c));
        // CB 57 018E
        gbc.setState(0x48ec, 0x5217, 0xedc0, 0xdc87, 0xf46e, 0xf112, 0x0, 0x0);
        gbc.writeMem(0x48ec, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5217, gbc.sp());
        EXPECT(0x48ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 018F
        gbc.setState(0xccba, 0x7c12, 0xc240, 0x15b2, 0x2904, 0x2b, 0x0, 0x1);
        gbc.writeMem(0xccba, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7c12, gbc.sp());
        EXPECT(0xccbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccba));
        EXPECT(0x57, gbc.readMem(0xccbb));
        // CB 57 0190
        gbc.setState(0x1a75, 0xb28b, 0xbaa0, 0xa6ec, 0x7d4f, 0xbdc4, 0x0, 0x0);
        gbc.writeMem(0x1a75, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb28b, gbc.sp());
        EXPECT(0x1a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0191
        gbc.setState(0x795f, 0xf063, 0x9c0, 0x1653, 0xaa2c, 0x6ccc, 0x0, 0x1);
        gbc.writeMem(0x795f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf063, gbc.sp());
        EXPECT(0x7961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0192
        gbc.setState(0xbfe9, 0x45e4, 0x39b0, 0xf1e6, 0xc556, 0xc2d9, 0x1, 0x1);
        gbc.writeMem(0xbfe9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x45e4, gbc.sp());
        EXPECT(0xbfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe9));
        EXPECT(0x57, gbc.readMem(0xbfea));
        // CB 57 0193
        gbc.setState(0x1d26, 0xa0bc, 0x69b0, 0x7efd, 0xef1e, 0x2234, 0x0, 0x0);
        gbc.writeMem(0x1d26, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa0bc, gbc.sp());
        EXPECT(0x1d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0194
        gbc.setState(0x132c, 0xd014, 0xc5c0, 0xb3cf, 0x8712, 0x7d7e, 0x0, 0x1);
        gbc.writeMem(0x132c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd014, gbc.sp());
        EXPECT(0x132e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0195
        gbc.setState(0x7024, 0x2719, 0x8a10, 0x326c, 0x832, 0x9b55, 0x1, 0x0);
        gbc.writeMem(0x7024, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2719, gbc.sp());
        EXPECT(0x7026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0196
        gbc.setState(0x3629, 0x58d8, 0x7880, 0x3887, 0x1c5f, 0xe594, 0x0, 0x1);
        gbc.writeMem(0x3629, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x58d8, gbc.sp());
        EXPECT(0x362b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0197
        gbc.setState(0x3c08, 0xca28, 0x4b0, 0x2aaa, 0x19ad, 0xaeb4, 0x1, 0x0);
        gbc.writeMem(0x3c08, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0x3c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0198
        gbc.setState(0x5891, 0x4260, 0x5d00, 0xb837, 0x5c1b, 0x9c3, 0x1, 0x1);
        gbc.writeMem(0x5891, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4260, gbc.sp());
        EXPECT(0x5893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0199
        gbc.setState(0x7f69, 0x9188, 0x4ed0, 0x7035, 0x60dd, 0x2742, 0x0, 0x0);
        gbc.writeMem(0x7f69, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9188, gbc.sp());
        EXPECT(0x7f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 019A
        gbc.setState(0xee8f, 0xcdf8, 0xeb0, 0x7bf9, 0x25ea, 0xef77, 0x1, 0x0);
        gbc.writeMem(0xee8f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcdf8, gbc.sp());
        EXPECT(0xee91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8f));
        EXPECT(0x57, gbc.readMem(0xee90));
        // CB 57 019B
        gbc.setState(0x2354, 0x4295, 0xa8d0, 0xb6a9, 0xafd2, 0x32ad, 0x0, 0x1);
        gbc.writeMem(0x2354, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4295, gbc.sp());
        EXPECT(0x2356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 019C
        gbc.setState(0x3478, 0xb379, 0xa270, 0xe5a, 0x8e87, 0x7052, 0x1, 0x1);
        gbc.writeMem(0x3478, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb379, gbc.sp());
        EXPECT(0x347a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 019D
        gbc.setState(0x3345, 0x8603, 0x5490, 0x5f86, 0xed63, 0xcf0a, 0x1, 0x1);
        gbc.writeMem(0x3345, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8603, gbc.sp());
        EXPECT(0x3347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 019E
        gbc.setState(0x9220, 0xeb5f, 0x3cf0, 0xc236, 0xba9a, 0xbdad, 0x0, 0x0);
        gbc.writeMem(0x9220, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xeb5f, gbc.sp());
        EXPECT(0x9222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9220));
        EXPECT(0x57, gbc.readMem(0x9221));
        // CB 57 019F
        gbc.setState(0xa13, 0x5f01, 0x4640, 0xdcfc, 0xfbb7, 0x93d5, 0x1, 0x1);
        gbc.writeMem(0xa13, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5f01, gbc.sp());
        EXPECT(0xa15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01A0
        gbc.setState(0xc17a, 0x1e09, 0x44c0, 0x4d22, 0xfa27, 0xfef8, 0x1, 0x1);
        gbc.writeMem(0xc17a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1e09, gbc.sp());
        EXPECT(0xc17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17a));
        EXPECT(0x57, gbc.readMem(0xc17b));
        // CB 57 01A1
        gbc.setState(0xa7e, 0x5a94, 0xbf40, 0x4405, 0xeac, 0x6eba, 0x1, 0x0);
        gbc.writeMem(0xa7e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5a94, gbc.sp());
        EXPECT(0xa80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01A2
        gbc.setState(0xde4a, 0x1a5f, 0x900, 0xc3b4, 0x6a56, 0xd9bb, 0x1, 0x1);
        gbc.writeMem(0xde4a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1a5f, gbc.sp());
        EXPECT(0xde4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4a));
        EXPECT(0x57, gbc.readMem(0xde4b));
        // CB 57 01A3
        gbc.setState(0x5b63, 0x775e, 0xa6c0, 0xf91, 0xe458, 0x49f9, 0x0, 0x1);
        gbc.writeMem(0x5b63, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x775e, gbc.sp());
        EXPECT(0x5b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01A4
        gbc.setState(0xd869, 0x9e81, 0xf6c0, 0x81aa, 0xb6d4, 0x1f4b, 0x1, 0x1);
        gbc.writeMem(0xd869, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9e81, gbc.sp());
        EXPECT(0xd86b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd869));
        EXPECT(0x57, gbc.readMem(0xd86a));
        // CB 57 01A5
        gbc.setState(0x4508, 0xaa4b, 0xf360, 0x70d3, 0xd444, 0x5909, 0x1, 0x0);
        gbc.writeMem(0x4508, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaa4b, gbc.sp());
        EXPECT(0x450a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01A6
        gbc.setState(0x719b, 0xfd47, 0x6b20, 0x178b, 0xa15d, 0x50fb, 0x1, 0x0);
        gbc.writeMem(0x719b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfd47, gbc.sp());
        EXPECT(0x719d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01A7
        gbc.setState(0x650f, 0xa1e1, 0x7ad0, 0x80bd, 0xe2a4, 0x6f96, 0x1, 0x1);
        gbc.writeMem(0x650f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa1e1, gbc.sp());
        EXPECT(0x6511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01A8
        gbc.setState(0xd240, 0x4f55, 0x8f50, 0x887a, 0x11bd, 0xbbe3, 0x1, 0x1);
        gbc.writeMem(0xd240, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4f55, gbc.sp());
        EXPECT(0xd242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd240));
        EXPECT(0x57, gbc.readMem(0xd241));
        // CB 57 01A9
        gbc.setState(0x59a5, 0x84ce, 0x95e0, 0x460d, 0x731f, 0x4a9d, 0x0, 0x1);
        gbc.writeMem(0x59a5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x84ce, gbc.sp());
        EXPECT(0x59a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01AB
        gbc.setState(0x4163, 0x64f9, 0x2820, 0x3318, 0x5e73, 0xb35d, 0x0, 0x1);
        gbc.writeMem(0x4163, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x64f9, gbc.sp());
        EXPECT(0x4165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01AC
        gbc.setState(0xcc46, 0xf022, 0x7fc0, 0xadfc, 0xe8df, 0xd789, 0x0, 0x0);
        gbc.writeMem(0xcc46, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf022, gbc.sp());
        EXPECT(0xcc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc46));
        EXPECT(0x57, gbc.readMem(0xcc47));
        // CB 57 01AE
        gbc.setState(0x1444, 0x7393, 0x67b0, 0xa81d, 0xb0af, 0x9733, 0x1, 0x1);
        gbc.writeMem(0x1444, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7393, gbc.sp());
        EXPECT(0x1446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01B0
        gbc.setState(0xdfeb, 0x84e0, 0xb4b0, 0xe5dd, 0xece4, 0x96ef, 0x1, 0x0);
        gbc.writeMem(0xdfeb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x84e0, gbc.sp());
        EXPECT(0xdfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfeb));
        EXPECT(0x57, gbc.readMem(0xdfec));
        // CB 57 01B1
        gbc.setState(0x781, 0x329f, 0x5670, 0xb7e8, 0x38e2, 0xe990, 0x0, 0x1);
        gbc.writeMem(0x781, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x329f, gbc.sp());
        EXPECT(0x783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01B2
        gbc.setState(0x6864, 0xe46c, 0x89e0, 0xdcff, 0x42b8, 0xd4d5, 0x1, 0x1);
        gbc.writeMem(0x6864, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe46c, gbc.sp());
        EXPECT(0x6866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01B3
        gbc.setState(0x6189, 0x43f7, 0x9350, 0xeaa6, 0x1709, 0x8edf, 0x1, 0x1);
        gbc.writeMem(0x6189, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x43f7, gbc.sp());
        EXPECT(0x618b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01B4
        gbc.setState(0xe54a, 0x6bb0, 0x1c30, 0xbf0b, 0x9125, 0x907c, 0x0, 0x1);
        gbc.writeMem(0xe54a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6bb0, gbc.sp());
        EXPECT(0xe54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54a));
        EXPECT(0x57, gbc.readMem(0xe54b));
        // CB 57 01B5
        gbc.setState(0x3500, 0xf9b9, 0x6f50, 0xe4d6, 0x5bfd, 0xb4aa, 0x1, 0x0);
        gbc.writeMem(0x3500, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf9b9, gbc.sp());
        EXPECT(0x3502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01B6
        gbc.setState(0x30a8, 0x2f69, 0x8ef0, 0x9de0, 0x40b4, 0x20d3, 0x0, 0x1);
        gbc.writeMem(0x30a8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2f69, gbc.sp());
        EXPECT(0x30aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01B7
        gbc.setState(0xa233, 0xb8b7, 0x6aa0, 0x74f, 0xb6c, 0xbd85, 0x1, 0x1);
        gbc.writeMem(0xa233, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb8b7, gbc.sp());
        EXPECT(0xa235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa233));
        EXPECT(0x57, gbc.readMem(0xa234));
        // CB 57 01B8
        gbc.setState(0x1f16, 0x8858, 0xc4f0, 0x8b78, 0x431, 0xe02, 0x1, 0x1);
        gbc.writeMem(0x1f16, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8858, gbc.sp());
        EXPECT(0x1f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01B9
        gbc.setState(0xe28a, 0x51e6, 0xb8a0, 0xa357, 0x80b3, 0x5ace, 0x0, 0x0);
        gbc.writeMem(0xe28a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x51e6, gbc.sp());
        EXPECT(0xe28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28a));
        EXPECT(0x57, gbc.readMem(0xe28b));
        // CB 57 01BA
        gbc.setState(0x35eb, 0x6ce2, 0x5710, 0x8ecf, 0x582d, 0x31b0, 0x1, 0x1);
        gbc.writeMem(0x35eb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6ce2, gbc.sp());
        EXPECT(0x35ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01BB
        gbc.setState(0xd90, 0xf12d, 0x4060, 0x1473, 0x25b5, 0x112b, 0x1, 0x1);
        gbc.writeMem(0xd90, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf12d, gbc.sp());
        EXPECT(0xd92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01BC
        gbc.setState(0xe0fd, 0x7692, 0x61b0, 0xef23, 0x9e72, 0x103e, 0x0, 0x0);
        gbc.writeMem(0xe0fd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7692, gbc.sp());
        EXPECT(0xe0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fd));
        EXPECT(0x57, gbc.readMem(0xe0fe));
        // CB 57 01BD
        gbc.setState(0x6d48, 0x1b98, 0x15e0, 0xf703, 0xde10, 0x4f8e, 0x0, 0x0);
        gbc.writeMem(0x6d48, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1b98, gbc.sp());
        EXPECT(0x6d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01BE
        gbc.setState(0x5aa3, 0x9602, 0x2de0, 0x34df, 0xccda, 0x73c6, 0x1, 0x0);
        gbc.writeMem(0x5aa3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9602, gbc.sp());
        EXPECT(0x5aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01BF
        gbc.setState(0x6bdf, 0x3433, 0x680, 0x3c38, 0xcdc6, 0x9b1b, 0x1, 0x0);
        gbc.writeMem(0x6bdf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3433, gbc.sp());
        EXPECT(0x6be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01C0
        gbc.setState(0xc29, 0xae81, 0x9c40, 0x6084, 0xcec1, 0x8025, 0x1, 0x0);
        gbc.writeMem(0xc29, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xae81, gbc.sp());
        EXPECT(0xc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01C1
        gbc.setState(0x5cb4, 0xdd4, 0xfdb0, 0x20a2, 0x1ef6, 0x1495, 0x0, 0x1);
        gbc.writeMem(0x5cb4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdd4, gbc.sp());
        EXPECT(0x5cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01C3
        gbc.setState(0x9be0, 0x98f7, 0xd3f0, 0x6266, 0xef6f, 0x4039, 0x1, 0x1);
        gbc.writeMem(0x9be0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x98f7, gbc.sp());
        EXPECT(0x9be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be0));
        EXPECT(0x57, gbc.readMem(0x9be1));
        // CB 57 01C5
        gbc.setState(0x4364, 0x6503, 0x4710, 0xe1be, 0xc30f, 0x133a, 0x0, 0x1);
        gbc.writeMem(0x4364, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6503, gbc.sp());
        EXPECT(0x4366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01C6
        gbc.setState(0xfc2, 0x127, 0xac40, 0xe9cf, 0x3ae0, 0x1771, 0x0, 0x0);
        gbc.writeMem(0xfc2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x127, gbc.sp());
        EXPECT(0xfc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01C7
        gbc.setState(0xb478, 0x739, 0x9340, 0x52d9, 0x66e4, 0x3265, 0x1, 0x1);
        gbc.writeMem(0xb478, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x739, gbc.sp());
        EXPECT(0xb47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb478));
        EXPECT(0x57, gbc.readMem(0xb479));
        // CB 57 01C8
        gbc.setState(0x6e91, 0xfc3b, 0x3730, 0x75e9, 0x9f35, 0x3226, 0x0, 0x1);
        gbc.writeMem(0x6e91, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfc3b, gbc.sp());
        EXPECT(0x6e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01C9
        gbc.setState(0x1a89, 0x3d2c, 0x7ae0, 0x8f65, 0x6708, 0x5d, 0x0, 0x1);
        gbc.writeMem(0x1a89, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3d2c, gbc.sp());
        EXPECT(0x1a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01CA
        gbc.setState(0xde94, 0xe6f4, 0xc580, 0x19da, 0x77ec, 0xdf56, 0x0, 0x0);
        gbc.writeMem(0xde94, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe6f4, gbc.sp());
        EXPECT(0xde96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde94));
        EXPECT(0x57, gbc.readMem(0xde95));
        // CB 57 01CB
        gbc.setState(0x645d, 0x1a63, 0xd750, 0xc378, 0x6f61, 0x664, 0x1, 0x1);
        gbc.writeMem(0x645d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1a63, gbc.sp());
        EXPECT(0x645f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01CC
        gbc.setState(0x808a, 0xb477, 0x49c0, 0xe30c, 0x61f, 0xf26f, 0x1, 0x1);
        gbc.writeMem(0x808a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb477, gbc.sp());
        EXPECT(0x808c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808a));
        EXPECT(0x57, gbc.readMem(0x808b));
        // CB 57 01CD
        gbc.setState(0xb170, 0x65ca, 0xd310, 0x4655, 0x547b, 0x3685, 0x1, 0x1);
        gbc.writeMem(0xb170, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x65ca, gbc.sp());
        EXPECT(0xb172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb170));
        EXPECT(0x57, gbc.readMem(0xb171));
        // CB 57 01CE
        gbc.setState(0x62e6, 0x6db7, 0x680, 0x9881, 0x5eaf, 0x9069, 0x1, 0x0);
        gbc.writeMem(0x62e6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6db7, gbc.sp());
        EXPECT(0x62e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01CF
        gbc.setState(0xbca3, 0x4b0c, 0x6e60, 0x8cdb, 0xb13c, 0x2404, 0x1, 0x1);
        gbc.writeMem(0xbca3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4b0c, gbc.sp());
        EXPECT(0xbca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca3));
        EXPECT(0x57, gbc.readMem(0xbca4));
        // CB 57 01D0
        gbc.setState(0x8aad, 0x48b9, 0x7110, 0xba21, 0x5c7c, 0x1345, 0x1, 0x0);
        gbc.writeMem(0x8aad, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x48b9, gbc.sp());
        EXPECT(0x8aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aad));
        EXPECT(0x57, gbc.readMem(0x8aae));
        // CB 57 01D1
        gbc.setState(0x8d13, 0x7473, 0x9b50, 0x70fd, 0xe988, 0x9e5f, 0x1, 0x0);
        gbc.writeMem(0x8d13, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7473, gbc.sp());
        EXPECT(0x8d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d13));
        EXPECT(0x57, gbc.readMem(0x8d14));
        // CB 57 01D2
        gbc.setState(0x5419, 0x4bc6, 0x5340, 0x82e7, 0x5d1f, 0x70fd, 0x1, 0x1);
        gbc.writeMem(0x5419, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4bc6, gbc.sp());
        EXPECT(0x541b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01D3
        gbc.setState(0x5d46, 0xf570, 0x8e70, 0x4ebf, 0xb3a1, 0x3016, 0x1, 0x1);
        gbc.writeMem(0x5d46, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf570, gbc.sp());
        EXPECT(0x5d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01D4
        gbc.setState(0x55c1, 0xfaa, 0xf410, 0xe9b3, 0x2ec1, 0x1b08, 0x1, 0x0);
        gbc.writeMem(0x55c1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfaa, gbc.sp());
        EXPECT(0x55c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01D5
        gbc.setState(0x7e04, 0xa089, 0xa920, 0x2511, 0xe9ba, 0x8e11, 0x1, 0x1);
        gbc.writeMem(0x7e04, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa089, gbc.sp());
        EXPECT(0x7e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01D6
        gbc.setState(0x373d, 0xb87b, 0xdde0, 0xd8cc, 0xfe4, 0x49cf, 0x1, 0x0);
        gbc.writeMem(0x373d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb87b, gbc.sp());
        EXPECT(0x373f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01D7
        gbc.setState(0xc4e4, 0x3321, 0x3760, 0x5aa0, 0xbe08, 0x432b, 0x1, 0x1);
        gbc.writeMem(0xc4e4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3321, gbc.sp());
        EXPECT(0xc4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e4));
        EXPECT(0x57, gbc.readMem(0xc4e5));
        // CB 57 01D8
        gbc.setState(0xf9, 0xc4de, 0xde0, 0x5ea5, 0xa208, 0x8258, 0x0, 0x1);
        gbc.writeMem(0xf9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc4de, gbc.sp());
        EXPECT(0xfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01D9
        gbc.setState(0x3eaa, 0x1b2a, 0x91b0, 0x80f7, 0xce08, 0x9a61, 0x0, 0x1);
        gbc.writeMem(0x3eaa, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1b2a, gbc.sp());
        EXPECT(0x3eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01DA
        gbc.setState(0xd26e, 0x5564, 0x1f20, 0xc74c, 0xc235, 0xd9cd, 0x0, 0x1);
        gbc.writeMem(0xd26e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5564, gbc.sp());
        EXPECT(0xd270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26e));
        EXPECT(0x57, gbc.readMem(0xd26f));
        // CB 57 01DB
        gbc.setState(0xca7f, 0x3dfd, 0x9570, 0x7b28, 0x8935, 0x6200, 0x0, 0x1);
        gbc.writeMem(0xca7f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3dfd, gbc.sp());
        EXPECT(0xca81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7f));
        EXPECT(0x57, gbc.readMem(0xca80));
        // CB 57 01DC
        gbc.setState(0x7868, 0x164d, 0x810, 0xe94, 0x1936, 0x2ca, 0x0, 0x1);
        gbc.writeMem(0x7868, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x164d, gbc.sp());
        EXPECT(0x786a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01DD
        gbc.setState(0x9f54, 0xd41e, 0x19a0, 0xf84c, 0xc4bd, 0x44c9, 0x0, 0x1);
        gbc.writeMem(0x9f54, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x9f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f54));
        EXPECT(0x57, gbc.readMem(0x9f55));
        // CB 57 01DE
        gbc.setState(0xce7b, 0x7dc5, 0xbf60, 0xdd71, 0x6021, 0xe844, 0x0, 0x1);
        gbc.writeMem(0xce7b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7dc5, gbc.sp());
        EXPECT(0xce7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7b));
        EXPECT(0x57, gbc.readMem(0xce7c));
        // CB 57 01DF
        gbc.setState(0xe4c8, 0xe52f, 0xa230, 0x92a0, 0x1569, 0x9bf, 0x1, 0x0);
        gbc.writeMem(0xe4c8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe52f, gbc.sp());
        EXPECT(0xe4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c8));
        EXPECT(0x57, gbc.readMem(0xe4c9));
        // CB 57 01E0
        gbc.setState(0x494d, 0x862a, 0x59d0, 0x46ab, 0x5c5f, 0x7cb7, 0x1, 0x1);
        gbc.writeMem(0x494d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x862a, gbc.sp());
        EXPECT(0x494f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01E1
        gbc.setState(0x3a17, 0x5fe5, 0x3250, 0x7767, 0x8a61, 0xb266, 0x1, 0x0);
        gbc.writeMem(0x3a17, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5fe5, gbc.sp());
        EXPECT(0x3a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01E2
        gbc.setState(0x7723, 0x5eb4, 0x91f0, 0x1d99, 0xe8e3, 0xba33, 0x0, 0x1);
        gbc.writeMem(0x7723, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5eb4, gbc.sp());
        EXPECT(0x7725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01E3
        gbc.setState(0xc76e, 0x3ce8, 0x26b0, 0x89c8, 0x3007, 0x80e0, 0x0, 0x0);
        gbc.writeMem(0xc76e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3ce8, gbc.sp());
        EXPECT(0xc770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76e));
        EXPECT(0x57, gbc.readMem(0xc76f));
        // CB 57 01E4
        gbc.setState(0x3e3a, 0x6da3, 0xbf60, 0x2391, 0xfabb, 0xfb49, 0x1, 0x0);
        gbc.writeMem(0x3e3a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6da3, gbc.sp());
        EXPECT(0x3e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01E5
        gbc.setState(0x4aa9, 0x4804, 0x7bd0, 0xf48c, 0x6e78, 0x3e31, 0x1, 0x0);
        gbc.writeMem(0x4aa9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4804, gbc.sp());
        EXPECT(0x4aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01E6
        gbc.setState(0x7fec, 0xf6cf, 0xc240, 0x2035, 0x7498, 0x5ad1, 0x1, 0x1);
        gbc.writeMem(0x7fec, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf6cf, gbc.sp());
        EXPECT(0x7fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01E7
        gbc.setState(0x5ba3, 0x6b1, 0x25b0, 0xa350, 0xec23, 0xb742, 0x0, 0x1);
        gbc.writeMem(0x5ba3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6b1, gbc.sp());
        EXPECT(0x5ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01E8
        gbc.setState(0x51a0, 0x4a97, 0xa5f0, 0x7d9e, 0xa40b, 0xffeb, 0x1, 0x0);
        gbc.writeMem(0x51a0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4a97, gbc.sp());
        EXPECT(0x51a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01E9
        gbc.setState(0xb1a9, 0x5791, 0x5be0, 0xf1ff, 0x159a, 0x80e3, 0x0, 0x1);
        gbc.writeMem(0xb1a9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5791, gbc.sp());
        EXPECT(0xb1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a9));
        EXPECT(0x57, gbc.readMem(0xb1aa));
        // CB 57 01EA
        gbc.setState(0x17b2, 0xd8d0, 0xa040, 0x4e4b, 0xf00a, 0x3d0a, 0x1, 0x0);
        gbc.writeMem(0x17b2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd8d0, gbc.sp());
        EXPECT(0x17b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01EB
        gbc.setState(0xc559, 0x2097, 0x9810, 0x36b9, 0x7935, 0xfdaa, 0x0, 0x1);
        gbc.writeMem(0xc559, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2097, gbc.sp());
        EXPECT(0xc55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc559));
        EXPECT(0x57, gbc.readMem(0xc55a));
        // CB 57 01EC
        gbc.setState(0xb1ce, 0x2536, 0xa3e0, 0xd65c, 0x8135, 0x678a, 0x0, 0x1);
        gbc.writeMem(0xb1ce, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2536, gbc.sp());
        EXPECT(0xb1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ce));
        EXPECT(0x57, gbc.readMem(0xb1cf));
        // CB 57 01ED
        gbc.setState(0x1682, 0x2058, 0x6f70, 0x2b3b, 0x10af, 0x276, 0x1, 0x0);
        gbc.writeMem(0x1682, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2058, gbc.sp());
        EXPECT(0x1684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01EE
        gbc.setState(0x5016, 0x3f2d, 0x37a0, 0x98ba, 0x530, 0xe468, 0x1, 0x1);
        gbc.writeMem(0x5016, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3f2d, gbc.sp());
        EXPECT(0x5018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01EF
        gbc.setState(0x5a6d, 0xc4c6, 0x5970, 0x4232, 0xf039, 0xc31c, 0x0, 0x1);
        gbc.writeMem(0x5a6d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc4c6, gbc.sp());
        EXPECT(0x5a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01F0
        gbc.setState(0x2e6, 0xc8f4, 0x9050, 0xc8f7, 0x62a8, 0x55d8, 0x0, 0x0);
        gbc.writeMem(0x2e6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc8f4, gbc.sp());
        EXPECT(0x2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01F1
        gbc.setState(0x3af2, 0x7064, 0xd00, 0xc3cb, 0x7e94, 0x3ffb, 0x0, 0x1);
        gbc.writeMem(0x3af2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7064, gbc.sp());
        EXPECT(0x3af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01F2
        gbc.setState(0x302d, 0xc39b, 0xd6f0, 0xf926, 0xdbbb, 0x87ac, 0x0, 0x1);
        gbc.writeMem(0x302d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc39b, gbc.sp());
        EXPECT(0x302f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01F3
        gbc.setState(0xc475, 0x6e5d, 0xdce0, 0x2177, 0x8e7e, 0x3218, 0x0, 0x1);
        gbc.writeMem(0xc475, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6e5d, gbc.sp());
        EXPECT(0xc477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc475));
        EXPECT(0x57, gbc.readMem(0xc476));
        // CB 57 01F5
        gbc.setState(0x7965, 0xfb03, 0x91a0, 0x771b, 0xe6cc, 0x196f, 0x1, 0x1);
        gbc.writeMem(0x7965, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfb03, gbc.sp());
        EXPECT(0x7967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01F6
        gbc.setState(0x5fb6, 0xbdf, 0xc3c0, 0xd823, 0x407f, 0x2e5a, 0x1, 0x0);
        gbc.writeMem(0x5fb6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbdf, gbc.sp());
        EXPECT(0x5fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01F7
        gbc.setState(0xc35, 0x4b14, 0xb130, 0x3313, 0xdec6, 0xd153, 0x1, 0x1);
        gbc.writeMem(0xc35, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4b14, gbc.sp());
        EXPECT(0xc37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01F8
        gbc.setState(0xd5cc, 0xc905, 0x9de0, 0x70a, 0xabcf, 0xbc77, 0x1, 0x0);
        gbc.writeMem(0xd5cc, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc905, gbc.sp());
        EXPECT(0xd5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5cc));
        EXPECT(0x57, gbc.readMem(0xd5cd));
        // CB 57 01FA
        gbc.setState(0x51b6, 0x9565, 0xbab0, 0xed86, 0x1b0b, 0x9445, 0x1, 0x0);
        gbc.writeMem(0x51b6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9565, gbc.sp());
        EXPECT(0x51b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 01FB
        gbc.setState(0xa49d, 0x6199, 0x600, 0x8922, 0x49a2, 0x1e25, 0x1, 0x1);
        gbc.writeMem(0xa49d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6199, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49d));
        EXPECT(0x57, gbc.readMem(0xa49e));
        // CB 57 01FC
        gbc.setState(0x2309, 0xcbbb, 0x3880, 0xb592, 0xb18b, 0x5e1f, 0x1, 0x1);
        gbc.writeMem(0x2309, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcbbb, gbc.sp());
        EXPECT(0x230b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01FD
        gbc.setState(0x615a, 0xc804, 0x11c0, 0x6465, 0xf4a9, 0x3d07, 0x0, 0x1);
        gbc.writeMem(0x615a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc804, gbc.sp());
        EXPECT(0x615c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 01FE
        gbc.setState(0xc39e, 0x43c7, 0xc6b0, 0x2707, 0xa194, 0x6088, 0x0, 0x1);
        gbc.writeMem(0xc39e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x43c7, gbc.sp());
        EXPECT(0xc3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39e));
        EXPECT(0x57, gbc.readMem(0xc39f));
        // CB 57 01FF
        gbc.setState(0xafc9, 0x4efd, 0x4b60, 0x5801, 0xe30e, 0xa0e9, 0x0, 0x1);
        gbc.writeMem(0xafc9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4efd, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc9));
        EXPECT(0x57, gbc.readMem(0xafca));
        // CB 57 0200
        gbc.setState(0x6834, 0x1e29, 0xf0e0, 0xe13b, 0x11b9, 0xfbaf, 0x1, 0x1);
        gbc.writeMem(0x6834, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1e29, gbc.sp());
        EXPECT(0x6836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0202
        gbc.setState(0x1e1c, 0xeed3, 0xb450, 0x7cd, 0x9d1a, 0x56e3, 0x0, 0x0);
        gbc.writeMem(0x1e1c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xeed3, gbc.sp());
        EXPECT(0x1e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0203
        gbc.setState(0xdb74, 0xa17c, 0x1d30, 0xe563, 0xfece, 0xbecc, 0x1, 0x0);
        gbc.writeMem(0xdb74, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa17c, gbc.sp());
        EXPECT(0xdb76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb74));
        EXPECT(0x57, gbc.readMem(0xdb75));
        // CB 57 0204
        gbc.setState(0xef8f, 0xeb61, 0x9780, 0x69a7, 0x87ae, 0x3887, 0x1, 0x1);
        gbc.writeMem(0xef8f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xeb61, gbc.sp());
        EXPECT(0xef91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8f));
        EXPECT(0x57, gbc.readMem(0xef90));
        // CB 57 0205
        gbc.setState(0x3ef3, 0x5b0b, 0xcc80, 0xb7db, 0x144d, 0xdc9d, 0x0, 0x0);
        gbc.writeMem(0x3ef3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5b0b, gbc.sp());
        EXPECT(0x3ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0206
        gbc.setState(0x5060, 0xb17f, 0x3670, 0xb3d1, 0x7e90, 0xbf26, 0x1, 0x1);
        gbc.writeMem(0x5060, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb17f, gbc.sp());
        EXPECT(0x5062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0207
        gbc.setState(0x7bfb, 0x3da7, 0xbb90, 0x1da1, 0xff3d, 0xd8fa, 0x0, 0x1);
        gbc.writeMem(0x7bfb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3da7, gbc.sp());
        EXPECT(0x7bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0209
        gbc.setState(0x54b6, 0x6f4f, 0x41b0, 0x5e8, 0xc4ec, 0x751f, 0x0, 0x1);
        gbc.writeMem(0x54b6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6f4f, gbc.sp());
        EXPECT(0x54b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 020A
        gbc.setState(0x1e28, 0x88e9, 0x4d50, 0xa643, 0x4df0, 0x8725, 0x0, 0x1);
        gbc.writeMem(0x1e28, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0x1e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 020B
        gbc.setState(0xde53, 0x580b, 0xad40, 0x67f5, 0x8e53, 0xa38e, 0x0, 0x0);
        gbc.writeMem(0xde53, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x580b, gbc.sp());
        EXPECT(0xde55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde53));
        EXPECT(0x57, gbc.readMem(0xde54));
        // CB 57 020C
        gbc.setState(0xe178, 0xa6fc, 0x1cf0, 0x8353, 0x55, 0xe0c2, 0x0, 0x1);
        gbc.writeMem(0xe178, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa6fc, gbc.sp());
        EXPECT(0xe17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe178));
        EXPECT(0x57, gbc.readMem(0xe179));
        // CB 57 020D
        gbc.setState(0x13e8, 0xdafc, 0x140, 0x19d5, 0x56ae, 0x571, 0x0, 0x1);
        gbc.writeMem(0x13e8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdafc, gbc.sp());
        EXPECT(0x13ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 020F
        gbc.setState(0x3809, 0x400e, 0x9860, 0x498a, 0x875c, 0xa37b, 0x0, 0x1);
        gbc.writeMem(0x3809, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x400e, gbc.sp());
        EXPECT(0x380b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0210
        gbc.setState(0xc2cd, 0x1ddd, 0x3040, 0x8a42, 0x2394, 0xea85, 0x0, 0x0);
        gbc.writeMem(0xc2cd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1ddd, gbc.sp());
        EXPECT(0xc2cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2cd));
        EXPECT(0x57, gbc.readMem(0xc2ce));
        // CB 57 0211
        gbc.setState(0xef95, 0x7248, 0x92d0, 0x5324, 0x6f2c, 0xc9eb, 0x0, 0x1);
        gbc.writeMem(0xef95, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7248, gbc.sp());
        EXPECT(0xef97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef95));
        EXPECT(0x57, gbc.readMem(0xef96));
        // CB 57 0212
        gbc.setState(0x1572, 0x839d, 0x5910, 0xf1b5, 0xa80, 0x6034, 0x1, 0x0);
        gbc.writeMem(0x1572, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x839d, gbc.sp());
        EXPECT(0x1574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0213
        gbc.setState(0x62cd, 0x22b8, 0xb7c0, 0x6b18, 0xd3f0, 0x7542, 0x0, 0x1);
        gbc.writeMem(0x62cd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x22b8, gbc.sp());
        EXPECT(0x62cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0214
        gbc.setState(0x3c77, 0x956b, 0x1690, 0x81a1, 0xe81c, 0x4df9, 0x0, 0x1);
        gbc.writeMem(0x3c77, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x956b, gbc.sp());
        EXPECT(0x3c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0215
        gbc.setState(0xce20, 0xedd2, 0x780, 0xbbd8, 0xc6fa, 0xd21a, 0x1, 0x1);
        gbc.writeMem(0xce20, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xedd2, gbc.sp());
        EXPECT(0xce22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce20));
        EXPECT(0x57, gbc.readMem(0xce21));
        // CB 57 0216
        gbc.setState(0x23b7, 0xfeef, 0xda30, 0xe91a, 0x63b5, 0xb052, 0x0, 0x1);
        gbc.writeMem(0x23b7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfeef, gbc.sp());
        EXPECT(0x23b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0217
        gbc.setState(0xc3dc, 0x4a27, 0x5be0, 0x2e74, 0x3ab4, 0xbf3b, 0x0, 0x1);
        gbc.writeMem(0xc3dc, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4a27, gbc.sp());
        EXPECT(0xc3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3dc));
        EXPECT(0x57, gbc.readMem(0xc3dd));
        // CB 57 0219
        gbc.setState(0xbec7, 0x835b, 0xa890, 0x4b3f, 0x3898, 0x4032, 0x1, 0x0);
        gbc.writeMem(0xbec7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x835b, gbc.sp());
        EXPECT(0xbec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec7));
        EXPECT(0x57, gbc.readMem(0xbec8));
        // CB 57 021A
        gbc.setState(0x9238, 0xe99, 0x95f0, 0xac14, 0x7313, 0x138c, 0x1, 0x0);
        gbc.writeMem(0x9238, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe99, gbc.sp());
        EXPECT(0x923a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9238));
        EXPECT(0x57, gbc.readMem(0x9239));
        // CB 57 021B
        gbc.setState(0x1b99, 0x6460, 0xe740, 0x889d, 0x136b, 0xf1ff, 0x1, 0x0);
        gbc.writeMem(0x1b99, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6460, gbc.sp());
        EXPECT(0x1b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 021C
        gbc.setState(0x2a4c, 0x9d2, 0xad60, 0x3f19, 0xd2ff, 0x1cc8, 0x0, 0x0);
        gbc.writeMem(0x2a4c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9d2, gbc.sp());
        EXPECT(0x2a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 021D
        gbc.setState(0x103f, 0xf7d0, 0xc280, 0x7c4b, 0xfbf0, 0x8726, 0x0, 0x0);
        gbc.writeMem(0x103f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf7d0, gbc.sp());
        EXPECT(0x1041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 021E
        gbc.setState(0xedc2, 0xc6a7, 0x17c0, 0xa8d7, 0xf848, 0x71a6, 0x1, 0x0);
        gbc.writeMem(0xedc2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc6a7, gbc.sp());
        EXPECT(0xedc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc2));
        EXPECT(0x57, gbc.readMem(0xedc3));
        // CB 57 021F
        gbc.setState(0x888a, 0x51c8, 0xf370, 0x2d0b, 0x30bd, 0xc1c0, 0x1, 0x0);
        gbc.writeMem(0x888a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x51c8, gbc.sp());
        EXPECT(0x888c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888a));
        EXPECT(0x57, gbc.readMem(0x888b));
        // CB 57 0220
        gbc.setState(0x809f, 0xf56b, 0xc070, 0xdf73, 0xab9b, 0x3826, 0x0, 0x0);
        gbc.writeMem(0x809f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf56b, gbc.sp());
        EXPECT(0x80a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809f));
        EXPECT(0x57, gbc.readMem(0x80a0));
        // CB 57 0221
        gbc.setState(0x1925, 0xe17d, 0xeb80, 0xbfcb, 0x7c2b, 0x82e8, 0x0, 0x0);
        gbc.writeMem(0x1925, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe17d, gbc.sp());
        EXPECT(0x1927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0222
        gbc.setState(0x3293, 0xa061, 0x51d0, 0xd8c2, 0x21f1, 0xe99d, 0x0, 0x1);
        gbc.writeMem(0x3293, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa061, gbc.sp());
        EXPECT(0x3295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0223
        gbc.setState(0x13b3, 0xe4fe, 0x4630, 0x106a, 0xa90f, 0xb43d, 0x0, 0x1);
        gbc.writeMem(0x13b3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe4fe, gbc.sp());
        EXPECT(0x13b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0224
        gbc.setState(0xeeb9, 0x5ae0, 0x7dd0, 0x902e, 0x5930, 0x5a6b, 0x0, 0x1);
        gbc.writeMem(0xeeb9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5ae0, gbc.sp());
        EXPECT(0xeebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb9));
        EXPECT(0x57, gbc.readMem(0xeeba));
        // CB 57 0225
        gbc.setState(0x6bc3, 0xe90a, 0x8610, 0x922, 0x8fb8, 0xcd7f, 0x1, 0x1);
        gbc.writeMem(0x6bc3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe90a, gbc.sp());
        EXPECT(0x6bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0226
        gbc.setState(0x19b9, 0xb90d, 0xace0, 0xe974, 0xd9a4, 0xe3aa, 0x1, 0x1);
        gbc.writeMem(0x19b9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb90d, gbc.sp());
        EXPECT(0x19bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0227
        gbc.setState(0x383c, 0xa0c0, 0x8110, 0x91e5, 0xe99f, 0xf8d7, 0x1, 0x1);
        gbc.writeMem(0x383c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa0c0, gbc.sp());
        EXPECT(0x383e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0228
        gbc.setState(0xb894, 0x787c, 0x9340, 0xe612, 0x77dd, 0xec7e, 0x0, 0x0);
        gbc.writeMem(0xb894, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x787c, gbc.sp());
        EXPECT(0xb896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb894));
        EXPECT(0x57, gbc.readMem(0xb895));
        // CB 57 0229
        gbc.setState(0x498, 0x9b3a, 0x7c60, 0xf695, 0xb302, 0x3e4d, 0x1, 0x1);
        gbc.writeMem(0x498, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9b3a, gbc.sp());
        EXPECT(0x49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 022B
        gbc.setState(0x6592, 0xd987, 0xccd0, 0xba5f, 0x132c, 0xcc92, 0x1, 0x0);
        gbc.writeMem(0x6592, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd987, gbc.sp());
        EXPECT(0x6594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 022C
        gbc.setState(0x976c, 0x8ed5, 0x7d50, 0x7987, 0xa63f, 0x561d, 0x0, 0x1);
        gbc.writeMem(0x976c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8ed5, gbc.sp());
        EXPECT(0x976e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x976c));
        EXPECT(0x57, gbc.readMem(0x976d));
        // CB 57 022D
        gbc.setState(0x7406, 0x1ff4, 0x480, 0x3342, 0x5861, 0x8810, 0x0, 0x1);
        gbc.writeMem(0x7406, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1ff4, gbc.sp());
        EXPECT(0x7408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 022E
        gbc.setState(0xb997, 0xbbf7, 0x1100, 0x8be0, 0x8f6, 0x8313, 0x1, 0x0);
        gbc.writeMem(0xb997, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbbf7, gbc.sp());
        EXPECT(0xb999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb997));
        EXPECT(0x57, gbc.readMem(0xb998));
        // CB 57 022F
        gbc.setState(0xa5da, 0x299d, 0xdb30, 0x9520, 0x539b, 0xfc65, 0x1, 0x0);
        gbc.writeMem(0xa5da, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x299d, gbc.sp());
        EXPECT(0xa5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5da));
        EXPECT(0x57, gbc.readMem(0xa5db));
        // CB 57 0230
        gbc.setState(0xf6f, 0xabaf, 0xf710, 0xdad2, 0xc97, 0x8548, 0x1, 0x0);
        gbc.writeMem(0xf6f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xabaf, gbc.sp());
        EXPECT(0xf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0231
        gbc.setState(0x2f4a, 0x1e92, 0x6090, 0xd942, 0xad38, 0xc818, 0x0, 0x0);
        gbc.writeMem(0x2f4a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1e92, gbc.sp());
        EXPECT(0x2f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0232
        gbc.setState(0xd2c5, 0x85f7, 0xc350, 0x9b01, 0x8af1, 0xa11f, 0x1, 0x1);
        gbc.writeMem(0xd2c5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x85f7, gbc.sp());
        EXPECT(0xd2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c5));
        EXPECT(0x57, gbc.readMem(0xd2c6));
        // CB 57 0233
        gbc.setState(0x117d, 0xa75f, 0x2710, 0x16a1, 0xc106, 0x1105, 0x1, 0x1);
        gbc.writeMem(0x117d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa75f, gbc.sp());
        EXPECT(0x117f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0234
        gbc.setState(0xcda4, 0xa201, 0xf2c0, 0xc630, 0x2af, 0x46d3, 0x0, 0x0);
        gbc.writeMem(0xcda4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa201, gbc.sp());
        EXPECT(0xcda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda4));
        EXPECT(0x57, gbc.readMem(0xcda5));
        // CB 57 0235
        gbc.setState(0xb58d, 0x6a58, 0xbf00, 0x666f, 0x1386, 0x4d62, 0x1, 0x1);
        gbc.writeMem(0xb58d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6a58, gbc.sp());
        EXPECT(0xb58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58d));
        EXPECT(0x57, gbc.readMem(0xb58e));
        // CB 57 0236
        gbc.setState(0x6af1, 0xf379, 0xb130, 0x6ae, 0x4cd, 0x8726, 0x1, 0x0);
        gbc.writeMem(0x6af1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf379, gbc.sp());
        EXPECT(0x6af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0237
        gbc.setState(0x72ca, 0xe56a, 0x6be0, 0xf5ff, 0x5f5b, 0x5dc2, 0x0, 0x1);
        gbc.writeMem(0x72ca, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe56a, gbc.sp());
        EXPECT(0x72cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0239
        gbc.setState(0xc2c2, 0xc98b, 0x2180, 0x8dc9, 0x865a, 0x1fc3, 0x1, 0x1);
        gbc.writeMem(0xc2c2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc98b, gbc.sp());
        EXPECT(0xc2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c2));
        EXPECT(0x57, gbc.readMem(0xc2c3));
        // CB 57 023A
        gbc.setState(0x9ce8, 0xe7db, 0x6850, 0xf28c, 0x83cb, 0xa844, 0x1, 0x1);
        gbc.writeMem(0x9ce8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe7db, gbc.sp());
        EXPECT(0x9cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce8));
        EXPECT(0x57, gbc.readMem(0x9ce9));
        // CB 57 023B
        gbc.setState(0x9739, 0x487d, 0x9520, 0x200f, 0x2fd0, 0x897, 0x0, 0x1);
        gbc.writeMem(0x9739, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x487d, gbc.sp());
        EXPECT(0x973b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9739));
        EXPECT(0x57, gbc.readMem(0x973a));
        // CB 57 023C
        gbc.setState(0xc0a6, 0x4a83, 0xcd0, 0xc9b6, 0xb5e9, 0x67e0, 0x1, 0x0);
        gbc.writeMem(0xc0a6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0xc0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a6));
        EXPECT(0x57, gbc.readMem(0xc0a7));
        // CB 57 023D
        gbc.setState(0x6e8f, 0xa7aa, 0x2a20, 0x2989, 0xe15f, 0x22e, 0x0, 0x0);
        gbc.writeMem(0x6e8f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa7aa, gbc.sp());
        EXPECT(0x6e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 023E
        gbc.setState(0x93d7, 0xc6ad, 0xd970, 0xd02d, 0x54e4, 0xc3a5, 0x1, 0x0);
        gbc.writeMem(0x93d7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc6ad, gbc.sp());
        EXPECT(0x93d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d7));
        EXPECT(0x57, gbc.readMem(0x93d8));
        // CB 57 023F
        gbc.setState(0xca2b, 0x5ac9, 0xefc0, 0xd570, 0xd82e, 0x137c, 0x1, 0x1);
        gbc.writeMem(0xca2b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5ac9, gbc.sp());
        EXPECT(0xca2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2b));
        EXPECT(0x57, gbc.readMem(0xca2c));
        // CB 57 0240
        gbc.setState(0xb7e1, 0xf8c8, 0x97a0, 0xe2bf, 0xfc39, 0x9a5e, 0x0, 0x0);
        gbc.writeMem(0xb7e1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf8c8, gbc.sp());
        EXPECT(0xb7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e1));
        EXPECT(0x57, gbc.readMem(0xb7e2));
        // CB 57 0241
        gbc.setState(0xbe81, 0xbd6e, 0x5860, 0x8329, 0xe5b6, 0x2fac, 0x0, 0x0);
        gbc.writeMem(0xbe81, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbd6e, gbc.sp());
        EXPECT(0xbe83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe81));
        EXPECT(0x57, gbc.readMem(0xbe82));
        // CB 57 0242
        gbc.setState(0x696a, 0xe2e5, 0x2f70, 0x64fe, 0xa24, 0xc801, 0x1, 0x1);
        gbc.writeMem(0x696a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe2e5, gbc.sp());
        EXPECT(0x696c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0243
        gbc.setState(0x2e2d, 0x696a, 0xdb10, 0x3153, 0x5916, 0x45ff, 0x0, 0x1);
        gbc.writeMem(0x2e2d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x696a, gbc.sp());
        EXPECT(0x2e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0246
        gbc.setState(0x482, 0x6def, 0x56b0, 0xd16b, 0x583d, 0x70c5, 0x0, 0x0);
        gbc.writeMem(0x482, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6def, gbc.sp());
        EXPECT(0x484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0247
        gbc.setState(0x2725, 0xc5a8, 0x56f0, 0x697, 0xf177, 0x385, 0x0, 0x0);
        gbc.writeMem(0x2725, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc5a8, gbc.sp());
        EXPECT(0x2727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0248
        gbc.setState(0x2671, 0x90c, 0x400, 0x964e, 0x6ccb, 0x9e00, 0x0, 0x0);
        gbc.writeMem(0x2671, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x90c, gbc.sp());
        EXPECT(0x2673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0249
        gbc.setState(0x249f, 0x82fa, 0x7250, 0x5f8a, 0xcabf, 0x47a, 0x1, 0x1);
        gbc.writeMem(0x249f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x82fa, gbc.sp());
        EXPECT(0x24a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 024A
        gbc.setState(0x74f6, 0x3330, 0xdfb0, 0x28bb, 0xb99b, 0xb0b3, 0x0, 0x1);
        gbc.writeMem(0x74f6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3330, gbc.sp());
        EXPECT(0x74f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 024B
        gbc.setState(0x9f28, 0x55a4, 0xd10, 0x3daa, 0x3218, 0xf626, 0x0, 0x0);
        gbc.writeMem(0x9f28, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x55a4, gbc.sp());
        EXPECT(0x9f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f28));
        EXPECT(0x57, gbc.readMem(0x9f29));
        // CB 57 024C
        gbc.setState(0xbb59, 0x45c3, 0x23d0, 0xd4f5, 0xd995, 0xe371, 0x0, 0x0);
        gbc.writeMem(0xbb59, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x45c3, gbc.sp());
        EXPECT(0xbb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb59));
        EXPECT(0x57, gbc.readMem(0xbb5a));
        // CB 57 024D
        gbc.setState(0x7e34, 0xe81e, 0x1300, 0xd380, 0x9e2d, 0x314e, 0x1, 0x0);
        gbc.writeMem(0x7e34, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe81e, gbc.sp());
        EXPECT(0x7e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 024E
        gbc.setState(0xc952, 0x151d, 0x2340, 0x79e, 0x82ec, 0xbcf0, 0x0, 0x0);
        gbc.writeMem(0xc952, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x151d, gbc.sp());
        EXPECT(0xc954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc952));
        EXPECT(0x57, gbc.readMem(0xc953));
        // CB 57 024F
        gbc.setState(0x4abf, 0x35f9, 0x6880, 0x786d, 0xf22c, 0x7b6c, 0x0, 0x0);
        gbc.writeMem(0x4abf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x35f9, gbc.sp());
        EXPECT(0x4ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0251
        gbc.setState(0x21e8, 0x20b0, 0x19c0, 0x931f, 0xfc49, 0xe9ab, 0x0, 0x0);
        gbc.writeMem(0x21e8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x20b0, gbc.sp());
        EXPECT(0x21ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0252
        gbc.setState(0x2b84, 0x8aac, 0xba10, 0x9ece, 0x1b6b, 0x723, 0x1, 0x1);
        gbc.writeMem(0x2b84, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8aac, gbc.sp());
        EXPECT(0x2b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0253
        gbc.setState(0x34f1, 0x1c56, 0x35a0, 0xee36, 0x6aec, 0xd0f6, 0x0, 0x0);
        gbc.writeMem(0x34f1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1c56, gbc.sp());
        EXPECT(0x34f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0254
        gbc.setState(0x1257, 0x734f, 0x83a0, 0xe348, 0xc95a, 0x2520, 0x1, 0x0);
        gbc.writeMem(0x1257, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x734f, gbc.sp());
        EXPECT(0x1259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0255
        gbc.setState(0x4e84, 0x8391, 0x88d0, 0x16e8, 0xbf3, 0xa518, 0x0, 0x1);
        gbc.writeMem(0x4e84, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8391, gbc.sp());
        EXPECT(0x4e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0256
        gbc.setState(0x4cf, 0x992f, 0x9f00, 0x4050, 0xce38, 0x87dc, 0x1, 0x1);
        gbc.writeMem(0x4cf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x992f, gbc.sp());
        EXPECT(0x4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0258
        gbc.setState(0x2763, 0x4da0, 0xd2f0, 0x1eaf, 0xd756, 0x2841, 0x1, 0x0);
        gbc.writeMem(0x2763, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4da0, gbc.sp());
        EXPECT(0x2765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0259
        gbc.setState(0xcc6, 0x9c07, 0x7fd0, 0x260e, 0x45a5, 0xe0b8, 0x0, 0x0);
        gbc.writeMem(0xcc6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9c07, gbc.sp());
        EXPECT(0xcc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 025A
        gbc.setState(0x9ff, 0x66f5, 0xb40, 0x6901, 0xc8fb, 0x1e84, 0x0, 0x1);
        gbc.writeMem(0x9ff, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x66f5, gbc.sp());
        EXPECT(0xa01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 025B
        gbc.setState(0xef13, 0xcdc9, 0xd440, 0x121b, 0xed13, 0x403, 0x0, 0x1);
        gbc.writeMem(0xef13, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcdc9, gbc.sp());
        EXPECT(0xef15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef13));
        EXPECT(0x57, gbc.readMem(0xef14));
        // CB 57 025C
        gbc.setState(0x368c, 0x8441, 0x37d0, 0x3d75, 0x5545, 0xa9a7, 0x1, 0x0);
        gbc.writeMem(0x368c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8441, gbc.sp());
        EXPECT(0x368e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 025D
        gbc.setState(0xc9ad, 0x5a3f, 0x9fb0, 0x9b7a, 0x807e, 0x9ac9, 0x1, 0x1);
        gbc.writeMem(0xc9ad, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5a3f, gbc.sp());
        EXPECT(0xc9af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ad));
        EXPECT(0x57, gbc.readMem(0xc9ae));
        // CB 57 025F
        gbc.setState(0x7af6, 0xcf9c, 0x72e0, 0xf973, 0xc23e, 0x2c29, 0x0, 0x1);
        gbc.writeMem(0x7af6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcf9c, gbc.sp());
        EXPECT(0x7af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0260
        gbc.setState(0x8aaa, 0x5797, 0xbfd0, 0x2fec, 0xcd17, 0xf179, 0x1, 0x0);
        gbc.writeMem(0x8aaa, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5797, gbc.sp());
        EXPECT(0x8aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aaa));
        EXPECT(0x57, gbc.readMem(0x8aab));
        // CB 57 0261
        gbc.setState(0xd147, 0xccc8, 0x74f0, 0x7c6e, 0x906, 0xfde2, 0x0, 0x0);
        gbc.writeMem(0xd147, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xccc8, gbc.sp());
        EXPECT(0xd149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd147));
        EXPECT(0x57, gbc.readMem(0xd148));
        // CB 57 0262
        gbc.setState(0x17d6, 0x5a59, 0xed80, 0x2a8a, 0x1a70, 0x302e, 0x1, 0x1);
        gbc.writeMem(0x17d6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5a59, gbc.sp());
        EXPECT(0x17d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0263
        gbc.setState(0xd43b, 0xa6c9, 0x6110, 0x7602, 0x814a, 0xb36f, 0x0, 0x0);
        gbc.writeMem(0xd43b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa6c9, gbc.sp());
        EXPECT(0xd43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43b));
        EXPECT(0x57, gbc.readMem(0xd43c));
        // CB 57 0264
        gbc.setState(0xcc0d, 0xe8e5, 0x27c0, 0x502d, 0x6710, 0xd6d2, 0x0, 0x1);
        gbc.writeMem(0xcc0d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe8e5, gbc.sp());
        EXPECT(0xcc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0d));
        EXPECT(0x57, gbc.readMem(0xcc0e));
        // CB 57 0265
        gbc.setState(0x2862, 0xd027, 0xf860, 0xf7ef, 0x2a8c, 0xaf65, 0x0, 0x0);
        gbc.writeMem(0x2862, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd027, gbc.sp());
        EXPECT(0x2864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0266
        gbc.setState(0x90df, 0x4cbe, 0xbb80, 0x7137, 0x3e29, 0x766, 0x0, 0x0);
        gbc.writeMem(0x90df, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4cbe, gbc.sp());
        EXPECT(0x90e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90df));
        EXPECT(0x57, gbc.readMem(0x90e0));
        // CB 57 0268
        gbc.setState(0x58ae, 0x553e, 0x4900, 0xf2cf, 0x8499, 0x90fd, 0x0, 0x1);
        gbc.writeMem(0x58ae, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x553e, gbc.sp());
        EXPECT(0x58b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0269
        gbc.setState(0x20cf, 0xa774, 0x16e0, 0x7af6, 0x7340, 0x7118, 0x1, 0x0);
        gbc.writeMem(0x20cf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa774, gbc.sp());
        EXPECT(0x20d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 026A
        gbc.setState(0xaec4, 0x92e3, 0x8f50, 0xbb1d, 0xab3, 0x6fee, 0x0, 0x1);
        gbc.writeMem(0xaec4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x92e3, gbc.sp());
        EXPECT(0xaec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec4));
        EXPECT(0x57, gbc.readMem(0xaec5));
        // CB 57 026B
        gbc.setState(0x5997, 0x3a08, 0xae70, 0xba23, 0x6cac, 0x1978, 0x1, 0x1);
        gbc.writeMem(0x5997, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3a08, gbc.sp());
        EXPECT(0x5999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 026C
        gbc.setState(0x4db7, 0x18e, 0x2e90, 0xbca8, 0x64a2, 0xcadd, 0x0, 0x1);
        gbc.writeMem(0x4db7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x18e, gbc.sp());
        EXPECT(0x4db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 026E
        gbc.setState(0xed7f, 0xb828, 0x5f60, 0x7abc, 0xb68c, 0xdb39, 0x1, 0x0);
        gbc.writeMem(0xed7f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0xed81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7f));
        EXPECT(0x57, gbc.readMem(0xed80));
        // CB 57 026F
        gbc.setState(0x4fb5, 0xe5eb, 0x630, 0x52ad, 0xa478, 0xf5c4, 0x1, 0x0);
        gbc.writeMem(0x4fb5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe5eb, gbc.sp());
        EXPECT(0x4fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0270
        gbc.setState(0x578b, 0x2830, 0xdd80, 0x9542, 0x734a, 0x6d51, 0x0, 0x1);
        gbc.writeMem(0x578b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2830, gbc.sp());
        EXPECT(0x578d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0271
        gbc.setState(0x4fc3, 0xa13f, 0x6b70, 0x32e5, 0x1865, 0x6193, 0x1, 0x0);
        gbc.writeMem(0x4fc3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa13f, gbc.sp());
        EXPECT(0x4fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0272
        gbc.setState(0xab90, 0x9e5f, 0xfa50, 0x89a4, 0xef2b, 0x1e34, 0x0, 0x1);
        gbc.writeMem(0xab90, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9e5f, gbc.sp());
        EXPECT(0xab92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab90));
        EXPECT(0x57, gbc.readMem(0xab91));
        // CB 57 0273
        gbc.setState(0x6d7b, 0xe978, 0x1140, 0x5615, 0xed14, 0x73f5, 0x0, 0x0);
        gbc.writeMem(0x6d7b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe978, gbc.sp());
        EXPECT(0x6d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0274
        gbc.setState(0x20f6, 0x5074, 0xd3f0, 0xa273, 0xd807, 0x1f3e, 0x0, 0x0);
        gbc.writeMem(0x20f6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5074, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0276
        gbc.setState(0x667c, 0x4791, 0xfc50, 0xe0c4, 0x9d27, 0xd4ec, 0x1, 0x0);
        gbc.writeMem(0x667c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4791, gbc.sp());
        EXPECT(0x667e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0277
        gbc.setState(0xe29a, 0xd049, 0x23a0, 0x3de5, 0xbc04, 0xf1c0, 0x1, 0x0);
        gbc.writeMem(0xe29a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd049, gbc.sp());
        EXPECT(0xe29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29a));
        EXPECT(0x57, gbc.readMem(0xe29b));
        // CB 57 0278
        gbc.setState(0xeaba, 0x5f28, 0xdc80, 0x957d, 0x284a, 0x9a53, 0x1, 0x1);
        gbc.writeMem(0xeaba, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5f28, gbc.sp());
        EXPECT(0xeabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaba));
        EXPECT(0x57, gbc.readMem(0xeabb));
        // CB 57 0279
        gbc.setState(0xdc95, 0xd748, 0x9ea0, 0xb47a, 0x7032, 0x3b1f, 0x0, 0x0);
        gbc.writeMem(0xdc95, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd748, gbc.sp());
        EXPECT(0xdc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc95));
        EXPECT(0x57, gbc.readMem(0xdc96));
        // CB 57 027A
        gbc.setState(0x436f, 0x59df, 0x9300, 0x5bac, 0xffe9, 0x91fd, 0x0, 0x0);
        gbc.writeMem(0x436f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x59df, gbc.sp());
        EXPECT(0x4371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 027B
        gbc.setState(0xc8d9, 0x576a, 0xa910, 0x9c63, 0xe19, 0x919c, 0x1, 0x0);
        gbc.writeMem(0xc8d9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x576a, gbc.sp());
        EXPECT(0xc8db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d9));
        EXPECT(0x57, gbc.readMem(0xc8da));
        // CB 57 027C
        gbc.setState(0x22f5, 0xf068, 0x6830, 0x27ad, 0x8602, 0x8259, 0x0, 0x1);
        gbc.writeMem(0x22f5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf068, gbc.sp());
        EXPECT(0x22f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 027D
        gbc.setState(0xba57, 0xa1cf, 0x30b0, 0xb12c, 0x4791, 0xa222, 0x0, 0x0);
        gbc.writeMem(0xba57, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa1cf, gbc.sp());
        EXPECT(0xba59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba57));
        EXPECT(0x57, gbc.readMem(0xba58));
        // CB 57 027E
        gbc.setState(0xacbe, 0xd215, 0x4560, 0xecb, 0x3f39, 0x41c2, 0x0, 0x1);
        gbc.writeMem(0xacbe, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd215, gbc.sp());
        EXPECT(0xacc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbe));
        EXPECT(0x57, gbc.readMem(0xacbf));
        // CB 57 0280
        gbc.setState(0x40a1, 0xbdee, 0xe140, 0xd678, 0x2ff3, 0x6380, 0x0, 0x0);
        gbc.writeMem(0x40a1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbdee, gbc.sp());
        EXPECT(0x40a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0281
        gbc.setState(0x141f, 0x1aa4, 0x2b20, 0xb3a6, 0xa7bc, 0xe27e, 0x1, 0x1);
        gbc.writeMem(0x141f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1aa4, gbc.sp());
        EXPECT(0x1421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0282
        gbc.setState(0x9677, 0xc59a, 0x7af0, 0xd138, 0xa39b, 0x32cf, 0x0, 0x1);
        gbc.writeMem(0x9677, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc59a, gbc.sp());
        EXPECT(0x9679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9677));
        EXPECT(0x57, gbc.readMem(0x9678));
        // CB 57 0283
        gbc.setState(0xabbf, 0x95e2, 0xb600, 0x7893, 0xfac8, 0x28c4, 0x0, 0x0);
        gbc.writeMem(0xabbf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x95e2, gbc.sp());
        EXPECT(0xabc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabbf));
        EXPECT(0x57, gbc.readMem(0xabc0));
        // CB 57 0284
        gbc.setState(0x96d6, 0x7581, 0xd260, 0xaf02, 0xf9f7, 0xcadb, 0x1, 0x0);
        gbc.writeMem(0x96d6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7581, gbc.sp());
        EXPECT(0x96d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d6));
        EXPECT(0x57, gbc.readMem(0x96d7));
        // CB 57 0285
        gbc.setState(0xb836, 0x9001, 0xf1c0, 0xf84c, 0x24, 0xc1d3, 0x0, 0x1);
        gbc.writeMem(0xb836, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9001, gbc.sp());
        EXPECT(0xb838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb836));
        EXPECT(0x57, gbc.readMem(0xb837));
        // CB 57 0286
        gbc.setState(0xa1d5, 0x5fcd, 0x5de0, 0xa638, 0xbbbd, 0xd8d4, 0x0, 0x0);
        gbc.writeMem(0xa1d5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5fcd, gbc.sp());
        EXPECT(0xa1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d5));
        EXPECT(0x57, gbc.readMem(0xa1d6));
        // CB 57 0287
        gbc.setState(0x51b1, 0x14a8, 0xc920, 0x59ca, 0x9987, 0x640a, 0x1, 0x0);
        gbc.writeMem(0x51b1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x14a8, gbc.sp());
        EXPECT(0x51b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0288
        gbc.setState(0x58c1, 0x8f7, 0xcb40, 0xf825, 0xea7a, 0x8ba4, 0x1, 0x0);
        gbc.writeMem(0x58c1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8f7, gbc.sp());
        EXPECT(0x58c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0289
        gbc.setState(0xa5d0, 0xf08d, 0xe260, 0x420, 0x32f9, 0x1ff, 0x0, 0x0);
        gbc.writeMem(0xa5d0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf08d, gbc.sp());
        EXPECT(0xa5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d0));
        EXPECT(0x57, gbc.readMem(0xa5d1));
        // CB 57 028B
        gbc.setState(0x4929, 0x45a8, 0xf40, 0x3664, 0x14b6, 0xe941, 0x1, 0x0);
        gbc.writeMem(0x4929, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x45a8, gbc.sp());
        EXPECT(0x492b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 028C
        gbc.setState(0x7d71, 0x86da, 0x4d20, 0x37a2, 0x5ca1, 0xa6c, 0x1, 0x1);
        gbc.writeMem(0x7d71, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x86da, gbc.sp());
        EXPECT(0x7d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 028D
        gbc.setState(0xe868, 0x1068, 0x29c0, 0xc35c, 0xac45, 0xfca4, 0x0, 0x0);
        gbc.writeMem(0xe868, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1068, gbc.sp());
        EXPECT(0xe86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe868));
        EXPECT(0x57, gbc.readMem(0xe869));
        // CB 57 028E
        gbc.setState(0x9894, 0xc116, 0x32e0, 0xf193, 0xd40d, 0xbdfd, 0x0, 0x1);
        gbc.writeMem(0x9894, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc116, gbc.sp());
        EXPECT(0x9896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9894));
        EXPECT(0x57, gbc.readMem(0x9895));
        // CB 57 028F
        gbc.setState(0x1119, 0xa438, 0x9c00, 0x9f4f, 0x64c9, 0x2a29, 0x1, 0x1);
        gbc.writeMem(0x1119, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa438, gbc.sp());
        EXPECT(0x111b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0290
        gbc.setState(0xe164, 0x7f07, 0x1990, 0x7516, 0xd41d, 0xa6d9, 0x0, 0x1);
        gbc.writeMem(0xe164, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7f07, gbc.sp());
        EXPECT(0xe166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe164));
        EXPECT(0x57, gbc.readMem(0xe165));
        // CB 57 0291
        gbc.setState(0x3bd4, 0xaccf, 0x65d0, 0xaa6c, 0xfea9, 0x6cac, 0x0, 0x0);
        gbc.writeMem(0x3bd4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaccf, gbc.sp());
        EXPECT(0x3bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0292
        gbc.setState(0xb6fa, 0xdd1f, 0xc910, 0x56e6, 0x709a, 0xacca, 0x0, 0x0);
        gbc.writeMem(0xb6fa, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdd1f, gbc.sp());
        EXPECT(0xb6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fa));
        EXPECT(0x57, gbc.readMem(0xb6fb));
        // CB 57 0293
        gbc.setState(0xeaca, 0xbfa0, 0xb340, 0xf72f, 0xd0e2, 0x62d2, 0x1, 0x1);
        gbc.writeMem(0xeaca, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbfa0, gbc.sp());
        EXPECT(0xeacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaca));
        EXPECT(0x57, gbc.readMem(0xeacb));
        // CB 57 0294
        gbc.setState(0xbde2, 0xe80e, 0x2160, 0xbd46, 0xcd5d, 0x211d, 0x1, 0x1);
        gbc.writeMem(0xbde2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe80e, gbc.sp());
        EXPECT(0xbde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde2));
        EXPECT(0x57, gbc.readMem(0xbde3));
        // CB 57 0295
        gbc.setState(0xde5f, 0xc346, 0xd8f0, 0x91c8, 0x6f4, 0xeb7e, 0x0, 0x1);
        gbc.writeMem(0xde5f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc346, gbc.sp());
        EXPECT(0xde61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5f));
        EXPECT(0x57, gbc.readMem(0xde60));
        // CB 57 0296
        gbc.setState(0xb466, 0x2b1b, 0x4740, 0x8ba3, 0xfab9, 0x2831, 0x0, 0x1);
        gbc.writeMem(0xb466, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2b1b, gbc.sp());
        EXPECT(0xb468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb466));
        EXPECT(0x57, gbc.readMem(0xb467));
        // CB 57 0297
        gbc.setState(0x6348, 0x79df, 0x44a0, 0x293d, 0xd0d8, 0xa641, 0x1, 0x1);
        gbc.writeMem(0x6348, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x79df, gbc.sp());
        EXPECT(0x634a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0298
        gbc.setState(0x442a, 0x460d, 0xc8a0, 0xda5d, 0x9845, 0x4f81, 0x1, 0x1);
        gbc.writeMem(0x442a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x460d, gbc.sp());
        EXPECT(0x442c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 029A
        gbc.setState(0x42b4, 0x6816, 0xabe0, 0xcec5, 0x7d85, 0xec92, 0x0, 0x0);
        gbc.writeMem(0x42b4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6816, gbc.sp());
        EXPECT(0x42b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 029B
        gbc.setState(0x4c34, 0xafa6, 0x70c0, 0xd76e, 0x4848, 0x584b, 0x0, 0x0);
        gbc.writeMem(0x4c34, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xafa6, gbc.sp());
        EXPECT(0x4c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 029C
        gbc.setState(0x162, 0xb246, 0x990, 0x569d, 0xc4ff, 0xa94b, 0x1, 0x1);
        gbc.writeMem(0x162, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb246, gbc.sp());
        EXPECT(0x164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 029D
        gbc.setState(0x6d1d, 0x7fdc, 0x76c0, 0xf169, 0xe80b, 0xd0d6, 0x0, 0x0);
        gbc.writeMem(0x6d1d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7fdc, gbc.sp());
        EXPECT(0x6d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 029E
        gbc.setState(0xb540, 0x82ca, 0xce10, 0x66ed, 0xaffd, 0xb599, 0x0, 0x1);
        gbc.writeMem(0xb540, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x82ca, gbc.sp());
        EXPECT(0xb542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb540));
        EXPECT(0x57, gbc.readMem(0xb541));
        // CB 57 029F
        gbc.setState(0xb6b0, 0xff44, 0x1ac0, 0x9879, 0xcd2a, 0x3bf, 0x0, 0x0);
        gbc.writeMem(0xb6b0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xff44, gbc.sp());
        EXPECT(0xb6b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b0));
        EXPECT(0x57, gbc.readMem(0xb6b1));
        // CB 57 02A0
        gbc.setState(0xb20d, 0x350, 0xe2d0, 0x5c13, 0xbb4a, 0x9e20, 0x1, 0x1);
        gbc.writeMem(0xb20d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x350, gbc.sp());
        EXPECT(0xb20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20d));
        EXPECT(0x57, gbc.readMem(0xb20e));
        // CB 57 02A1
        gbc.setState(0x9b09, 0x4e6a, 0xe820, 0xbfd9, 0x15ed, 0x26c1, 0x1, 0x0);
        gbc.writeMem(0x9b09, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4e6a, gbc.sp());
        EXPECT(0x9b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b09));
        EXPECT(0x57, gbc.readMem(0x9b0a));
        // CB 57 02A2
        gbc.setState(0x16d5, 0xe852, 0x5570, 0x9ba4, 0x128f, 0x8cec, 0x0, 0x0);
        gbc.writeMem(0x16d5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe852, gbc.sp());
        EXPECT(0x16d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02A3
        gbc.setState(0x9fa9, 0xe13b, 0xcbf0, 0x7410, 0x639e, 0x11ec, 0x0, 0x0);
        gbc.writeMem(0x9fa9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe13b, gbc.sp());
        EXPECT(0x9fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa9));
        EXPECT(0x57, gbc.readMem(0x9faa));
        // CB 57 02A4
        gbc.setState(0x1725, 0x956f, 0x63e0, 0xbb32, 0x7551, 0x7105, 0x1, 0x0);
        gbc.writeMem(0x1725, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x956f, gbc.sp());
        EXPECT(0x1727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02A5
        gbc.setState(0x2355, 0xb44b, 0x7730, 0x5f4f, 0x9c8d, 0x6c00, 0x0, 0x1);
        gbc.writeMem(0x2355, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb44b, gbc.sp());
        EXPECT(0x2357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02A7
        gbc.setState(0x44a7, 0xe813, 0x4cf0, 0x697b, 0xc09b, 0x7b8, 0x1, 0x0);
        gbc.writeMem(0x44a7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe813, gbc.sp());
        EXPECT(0x44a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02A8
        gbc.setState(0x859e, 0xed4b, 0x3b20, 0x323d, 0xa9eb, 0xeb0, 0x1, 0x1);
        gbc.writeMem(0x859e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xed4b, gbc.sp());
        EXPECT(0x85a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859e));
        EXPECT(0x57, gbc.readMem(0x859f));
        // CB 57 02A9
        gbc.setState(0x98d5, 0xe637, 0xf8f0, 0xa981, 0x39c8, 0x6c51, 0x1, 0x1);
        gbc.writeMem(0x98d5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe637, gbc.sp());
        EXPECT(0x98d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d5));
        EXPECT(0x57, gbc.readMem(0x98d6));
        // CB 57 02AA
        gbc.setState(0x9e9f, 0xb3be, 0x5840, 0x5eab, 0xad14, 0x6085, 0x1, 0x0);
        gbc.writeMem(0x9e9f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb3be, gbc.sp());
        EXPECT(0x9ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9f));
        EXPECT(0x57, gbc.readMem(0x9ea0));
        // CB 57 02AB
        gbc.setState(0x7e0, 0xfbb9, 0x1cc0, 0x9761, 0x1703, 0x873d, 0x1, 0x1);
        gbc.writeMem(0x7e0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfbb9, gbc.sp());
        EXPECT(0x7e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02AC
        gbc.setState(0xad60, 0x325d, 0x45f0, 0x2ff2, 0x8a4e, 0x26bd, 0x0, 0x0);
        gbc.writeMem(0xad60, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x325d, gbc.sp());
        EXPECT(0xad62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad60));
        EXPECT(0x57, gbc.readMem(0xad61));
        // CB 57 02AD
        gbc.setState(0x891d, 0xb53a, 0x3880, 0x53d, 0x5452, 0xd0b3, 0x0, 0x1);
        gbc.writeMem(0x891d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb53a, gbc.sp());
        EXPECT(0x891f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891d));
        EXPECT(0x57, gbc.readMem(0x891e));
        // CB 57 02AE
        gbc.setState(0x4438, 0xc7b0, 0xb670, 0xb8c3, 0xe71c, 0x1cc7, 0x0, 0x1);
        gbc.writeMem(0x4438, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc7b0, gbc.sp());
        EXPECT(0x443a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02B0
        gbc.setState(0xece6, 0xbf4c, 0x9240, 0xb1ab, 0x7861, 0x4c20, 0x1, 0x0);
        gbc.writeMem(0xece6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbf4c, gbc.sp());
        EXPECT(0xece8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece6));
        EXPECT(0x57, gbc.readMem(0xece7));
        // CB 57 02B2
        gbc.setState(0xa7d8, 0xc17b, 0x40d0, 0x2de9, 0xf897, 0x89a, 0x0, 0x1);
        gbc.writeMem(0xa7d8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc17b, gbc.sp());
        EXPECT(0xa7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d8));
        EXPECT(0x57, gbc.readMem(0xa7d9));
        // CB 57 02B3
        gbc.setState(0x8bf3, 0xdb68, 0xae10, 0xeae9, 0x4eed, 0xfad0, 0x0, 0x0);
        gbc.writeMem(0x8bf3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdb68, gbc.sp());
        EXPECT(0x8bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf3));
        EXPECT(0x57, gbc.readMem(0x8bf4));
        // CB 57 02B4
        gbc.setState(0x4ba8, 0xcf48, 0xc590, 0x279b, 0xd4f1, 0xc0f0, 0x0, 0x1);
        gbc.writeMem(0x4ba8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcf48, gbc.sp());
        EXPECT(0x4baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02B5
        gbc.setState(0xa6f0, 0x4dc2, 0x5920, 0x6be2, 0x5513, 0x1035, 0x0, 0x0);
        gbc.writeMem(0xa6f0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4dc2, gbc.sp());
        EXPECT(0xa6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f0));
        EXPECT(0x57, gbc.readMem(0xa6f1));
        // CB 57 02B6
        gbc.setState(0x5fe8, 0x69cc, 0x5350, 0xfa48, 0x571e, 0x2818, 0x1, 0x1);
        gbc.writeMem(0x5fe8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x69cc, gbc.sp());
        EXPECT(0x5fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02B8
        gbc.setState(0x9b5f, 0x6c04, 0x8ce0, 0xb745, 0xd458, 0x6696, 0x1, 0x0);
        gbc.writeMem(0x9b5f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6c04, gbc.sp());
        EXPECT(0x9b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5f));
        EXPECT(0x57, gbc.readMem(0x9b60));
        // CB 57 02B9
        gbc.setState(0xf09, 0xb428, 0x7eb0, 0x8fef, 0xf641, 0x5412, 0x0, 0x0);
        gbc.writeMem(0xf09, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb428, gbc.sp());
        EXPECT(0xf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02BA
        gbc.setState(0xd04b, 0x5676, 0xd450, 0x20d5, 0x2052, 0x1213, 0x1, 0x0);
        gbc.writeMem(0xd04b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5676, gbc.sp());
        EXPECT(0xd04d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04b));
        EXPECT(0x57, gbc.readMem(0xd04c));
        // CB 57 02BC
        gbc.setState(0xb93, 0xc05a, 0x8d10, 0xf6a3, 0x3eb1, 0xbeb7, 0x1, 0x0);
        gbc.writeMem(0xb93, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc05a, gbc.sp());
        EXPECT(0xb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02BE
        gbc.setState(0x1ff2, 0x72a6, 0x50, 0x323f, 0xd5f7, 0x3a1b, 0x0, 0x1);
        gbc.writeMem(0x1ff2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x72a6, gbc.sp());
        EXPECT(0x1ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02BF
        gbc.setState(0x903b, 0xf0bc, 0xd860, 0xad29, 0x4445, 0x971, 0x0, 0x0);
        gbc.writeMem(0x903b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf0bc, gbc.sp());
        EXPECT(0x903d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903b));
        EXPECT(0x57, gbc.readMem(0x903c));
        // CB 57 02C1
        gbc.setState(0x9b71, 0x31ea, 0xc2d0, 0xd4a8, 0x1a26, 0xdb07, 0x1, 0x1);
        gbc.writeMem(0x9b71, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x31ea, gbc.sp());
        EXPECT(0x9b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b71));
        EXPECT(0x57, gbc.readMem(0x9b72));
        // CB 57 02C2
        gbc.setState(0xd9ee, 0x21cf, 0x4b70, 0x156f, 0x36f1, 0x93fd, 0x0, 0x0);
        gbc.writeMem(0xd9ee, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x21cf, gbc.sp());
        EXPECT(0xd9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ee));
        EXPECT(0x57, gbc.readMem(0xd9ef));
        // CB 57 02C3
        gbc.setState(0x6bd6, 0x620a, 0x14a0, 0x40df, 0x33e3, 0x9972, 0x1, 0x0);
        gbc.writeMem(0x6bd6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x620a, gbc.sp());
        EXPECT(0x6bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02C4
        gbc.setState(0x7e48, 0x8d8b, 0x5e20, 0x1496, 0x4dae, 0xfbc8, 0x1, 0x0);
        gbc.writeMem(0x7e48, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8d8b, gbc.sp());
        EXPECT(0x7e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02C5
        gbc.setState(0x8616, 0x8d61, 0x4110, 0x98b1, 0x7f7, 0xb909, 0x0, 0x0);
        gbc.writeMem(0x8616, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8d61, gbc.sp());
        EXPECT(0x8618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8616));
        EXPECT(0x57, gbc.readMem(0x8617));
        // CB 57 02C6
        gbc.setState(0xc977, 0x1eb1, 0xf6e0, 0xfb58, 0x10bf, 0xd118, 0x0, 0x0);
        gbc.writeMem(0xc977, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1eb1, gbc.sp());
        EXPECT(0xc979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc977));
        EXPECT(0x57, gbc.readMem(0xc978));
        // CB 57 02C7
        gbc.setState(0xd614, 0xcd68, 0x89c0, 0x981f, 0x66e2, 0xc917, 0x1, 0x0);
        gbc.writeMem(0xd614, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcd68, gbc.sp());
        EXPECT(0xd616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd614));
        EXPECT(0x57, gbc.readMem(0xd615));
        // CB 57 02C8
        gbc.setState(0x190, 0x3640, 0x6a10, 0x52b1, 0x2512, 0x40ee, 0x1, 0x1);
        gbc.writeMem(0x190, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3640, gbc.sp());
        EXPECT(0x192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02C9
        gbc.setState(0xa9c, 0x2f7d, 0x6a50, 0xe350, 0xa5c8, 0x203c, 0x0, 0x1);
        gbc.writeMem(0xa9c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2f7d, gbc.sp());
        EXPECT(0xa9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02CA
        gbc.setState(0x7c9e, 0x4b2b, 0x8a80, 0x83da, 0xe539, 0x3abc, 0x1, 0x1);
        gbc.writeMem(0x7c9e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4b2b, gbc.sp());
        EXPECT(0x7ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02CB
        gbc.setState(0x8d8f, 0x5957, 0x8850, 0x86ed, 0x937, 0xa374, 0x1, 0x1);
        gbc.writeMem(0x8d8f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5957, gbc.sp());
        EXPECT(0x8d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8f));
        EXPECT(0x57, gbc.readMem(0x8d90));
        // CB 57 02CC
        gbc.setState(0x66be, 0xb94f, 0x8510, 0xca0a, 0x7e88, 0xc03d, 0x0, 0x1);
        gbc.writeMem(0x66be, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb94f, gbc.sp());
        EXPECT(0x66c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02CD
        gbc.setState(0xc020, 0xbba9, 0x6870, 0xaf7a, 0x5ab6, 0x1b1b, 0x0, 0x0);
        gbc.writeMem(0xc020, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbba9, gbc.sp());
        EXPECT(0xc022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc020));
        EXPECT(0x57, gbc.readMem(0xc021));
        // CB 57 02CE
        gbc.setState(0x90ad, 0xde61, 0xe2e0, 0x8dfd, 0xbe8d, 0xd937, 0x0, 0x0);
        gbc.writeMem(0x90ad, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xde61, gbc.sp());
        EXPECT(0x90af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ad));
        EXPECT(0x57, gbc.readMem(0x90ae));
        // CB 57 02D0
        gbc.setState(0xc9a5, 0xde36, 0x9300, 0xefb8, 0xb72a, 0x5235, 0x1, 0x1);
        gbc.writeMem(0xc9a5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xde36, gbc.sp());
        EXPECT(0xc9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a5));
        EXPECT(0x57, gbc.readMem(0xc9a6));
        // CB 57 02D1
        gbc.setState(0xe116, 0xc052, 0x39e0, 0xbee, 0x3df7, 0x3c21, 0x1, 0x0);
        gbc.writeMem(0xe116, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc052, gbc.sp());
        EXPECT(0xe118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe116));
        EXPECT(0x57, gbc.readMem(0xe117));
        // CB 57 02D2
        gbc.setState(0x60f0, 0xa263, 0xbfc0, 0x5024, 0xe311, 0xb1dc, 0x0, 0x0);
        gbc.writeMem(0x60f0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa263, gbc.sp());
        EXPECT(0x60f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02D3
        gbc.setState(0xb802, 0x568f, 0x3100, 0x9bcf, 0xfff9, 0xe585, 0x0, 0x1);
        gbc.writeMem(0xb802, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x568f, gbc.sp());
        EXPECT(0xb804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb802));
        EXPECT(0x57, gbc.readMem(0xb803));
        // CB 57 02D4
        gbc.setState(0x823b, 0x35f3, 0x6190, 0x7a45, 0xa6bc, 0xb524, 0x1, 0x1);
        gbc.writeMem(0x823b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x35f3, gbc.sp());
        EXPECT(0x823d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823b));
        EXPECT(0x57, gbc.readMem(0x823c));
        // CB 57 02D5
        gbc.setState(0xd851, 0xbe1a, 0xda0, 0x613e, 0x23f4, 0x69d5, 0x1, 0x1);
        gbc.writeMem(0xd851, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbe1a, gbc.sp());
        EXPECT(0xd853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd851));
        EXPECT(0x57, gbc.readMem(0xd852));
        // CB 57 02D7
        gbc.setState(0x7a36, 0x1217, 0x1110, 0xda3d, 0x64ee, 0x2601, 0x0, 0x1);
        gbc.writeMem(0x7a36, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1217, gbc.sp());
        EXPECT(0x7a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02D8
        gbc.setState(0xd54e, 0xe90f, 0x6490, 0x8679, 0x2045, 0x4dc5, 0x1, 0x0);
        gbc.writeMem(0xd54e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe90f, gbc.sp());
        EXPECT(0xd550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54e));
        EXPECT(0x57, gbc.readMem(0xd54f));
        // CB 57 02D9
        gbc.setState(0x1945, 0x4e49, 0x97e0, 0xe1de, 0x92a, 0xccad, 0x0, 0x1);
        gbc.writeMem(0x1945, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4e49, gbc.sp());
        EXPECT(0x1947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02DA
        gbc.setState(0x27d4, 0x9ba3, 0x8340, 0xd6cf, 0xdde4, 0xb5b4, 0x1, 0x1);
        gbc.writeMem(0x27d4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9ba3, gbc.sp());
        EXPECT(0x27d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02DB
        gbc.setState(0x5a1d, 0x5cbd, 0x2560, 0x64ef, 0x5e5f, 0x8ac6, 0x0, 0x0);
        gbc.writeMem(0x5a1d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5cbd, gbc.sp());
        EXPECT(0x5a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02DC
        gbc.setState(0xc263, 0xcb4e, 0xff20, 0x86d4, 0xd0ed, 0xe03a, 0x1, 0x1);
        gbc.writeMem(0xc263, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcb4e, gbc.sp());
        EXPECT(0xc265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc263));
        EXPECT(0x57, gbc.readMem(0xc264));
        // CB 57 02DD
        gbc.setState(0x7f37, 0x27b0, 0xf7b0, 0x2814, 0x5688, 0x297, 0x0, 0x1);
        gbc.writeMem(0x7f37, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x27b0, gbc.sp());
        EXPECT(0x7f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02DE
        gbc.setState(0xe4d5, 0xdf29, 0xd420, 0x7ac3, 0xc95a, 0xf203, 0x1, 0x0);
        gbc.writeMem(0xe4d5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdf29, gbc.sp());
        EXPECT(0xe4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d5));
        EXPECT(0x57, gbc.readMem(0xe4d6));
        // CB 57 02DF
        gbc.setState(0x4015, 0xa1ad, 0x97f0, 0xff87, 0xdde5, 0xe189, 0x0, 0x0);
        gbc.writeMem(0x4015, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa1ad, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02E0
        gbc.setState(0x5742, 0xe15e, 0x8800, 0x4431, 0x7bcc, 0xb9ac, 0x0, 0x1);
        gbc.writeMem(0x5742, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe15e, gbc.sp());
        EXPECT(0x5744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02E1
        gbc.setState(0x219d, 0x9e7a, 0x1de0, 0x1b69, 0x9e1d, 0x7476, 0x1, 0x0);
        gbc.writeMem(0x219d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9e7a, gbc.sp());
        EXPECT(0x219f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02E2
        gbc.setState(0x232a, 0x224a, 0xceb0, 0xbc3a, 0x341b, 0x872a, 0x0, 0x0);
        gbc.writeMem(0x232a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x224a, gbc.sp());
        EXPECT(0x232c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02E4
        gbc.setState(0xb238, 0x502a, 0x9d60, 0x7767, 0xfea9, 0x2590, 0x0, 0x1);
        gbc.writeMem(0xb238, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x502a, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb238));
        EXPECT(0x57, gbc.readMem(0xb239));
        // CB 57 02E5
        gbc.setState(0x9e, 0x35c4, 0x4ed0, 0x98ad, 0xb39d, 0xef47, 0x0, 0x0);
        gbc.writeMem(0x9e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x35c4, gbc.sp());
        EXPECT(0xa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02E6
        gbc.setState(0x94ee, 0x9ac1, 0xed0, 0x149b, 0x725, 0xb2c0, 0x0, 0x0);
        gbc.writeMem(0x94ee, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9ac1, gbc.sp());
        EXPECT(0x94f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ee));
        EXPECT(0x57, gbc.readMem(0x94ef));
        // CB 57 02E7
        gbc.setState(0x9fe9, 0xd482, 0x9130, 0x3bea, 0x687c, 0xff62, 0x0, 0x1);
        gbc.writeMem(0x9fe9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd482, gbc.sp());
        EXPECT(0x9feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe9));
        EXPECT(0x57, gbc.readMem(0x9fea));
        // CB 57 02E8
        gbc.setState(0xcb31, 0xe15e, 0x3020, 0xcc07, 0xfd7f, 0xdb9, 0x0, 0x1);
        gbc.writeMem(0xcb31, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe15e, gbc.sp());
        EXPECT(0xcb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb31));
        EXPECT(0x57, gbc.readMem(0xcb32));
        // CB 57 02E9
        gbc.setState(0xda76, 0x3958, 0x17e0, 0x9386, 0xa877, 0xca6e, 0x1, 0x1);
        gbc.writeMem(0xda76, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3958, gbc.sp());
        EXPECT(0xda78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda76));
        EXPECT(0x57, gbc.readMem(0xda77));
        // CB 57 02EA
        gbc.setState(0x333f, 0x7604, 0x4260, 0xfa71, 0xd6ec, 0xce82, 0x0, 0x0);
        gbc.writeMem(0x333f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7604, gbc.sp());
        EXPECT(0x3341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02EB
        gbc.setState(0x5174, 0x8c8f, 0xd7b0, 0xd14a, 0x3b1d, 0x9e87, 0x0, 0x0);
        gbc.writeMem(0x5174, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8c8f, gbc.sp());
        EXPECT(0x5176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02EC
        gbc.setState(0x9017, 0xd1bd, 0x1620, 0x84e3, 0xc4ef, 0x44de, 0x0, 0x1);
        gbc.writeMem(0x9017, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd1bd, gbc.sp());
        EXPECT(0x9019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9017));
        EXPECT(0x57, gbc.readMem(0x9018));
        // CB 57 02ED
        gbc.setState(0x95fb, 0xf0d0, 0xa320, 0x3c5f, 0x6f43, 0xdb3c, 0x0, 0x1);
        gbc.writeMem(0x95fb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf0d0, gbc.sp());
        EXPECT(0x95fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fb));
        EXPECT(0x57, gbc.readMem(0x95fc));
        // CB 57 02EE
        gbc.setState(0xa9d0, 0x33bc, 0x61f0, 0xb1aa, 0xedf3, 0xa686, 0x1, 0x0);
        gbc.writeMem(0xa9d0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x33bc, gbc.sp());
        EXPECT(0xa9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d0));
        EXPECT(0x57, gbc.readMem(0xa9d1));
        // CB 57 02EF
        gbc.setState(0x86a4, 0x922f, 0xd9f0, 0xff82, 0xde92, 0x9cd5, 0x0, 0x1);
        gbc.writeMem(0x86a4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x922f, gbc.sp());
        EXPECT(0x86a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a4));
        EXPECT(0x57, gbc.readMem(0x86a5));
        // CB 57 02F0
        gbc.setState(0x40ab, 0x2249, 0xaad0, 0x68d0, 0x93aa, 0x1a95, 0x1, 0x0);
        gbc.writeMem(0x40ab, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2249, gbc.sp());
        EXPECT(0x40ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02F1
        gbc.setState(0xafd9, 0xb7ce, 0x7330, 0x7005, 0xc007, 0x83cd, 0x0, 0x1);
        gbc.writeMem(0xafd9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0xafdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd9));
        EXPECT(0x57, gbc.readMem(0xafda));
        // CB 57 02F2
        gbc.setState(0xb408, 0xf7e8, 0x5860, 0x2f83, 0xc260, 0x40ec, 0x1, 0x0);
        gbc.writeMem(0xb408, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf7e8, gbc.sp());
        EXPECT(0xb40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb408));
        EXPECT(0x57, gbc.readMem(0xb409));
        // CB 57 02F3
        gbc.setState(0xda7c, 0xcd6e, 0xd210, 0x8f04, 0xac1f, 0xe57, 0x0, 0x1);
        gbc.writeMem(0xda7c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcd6e, gbc.sp());
        EXPECT(0xda7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7c));
        EXPECT(0x57, gbc.readMem(0xda7d));
        // CB 57 02F4
        gbc.setState(0x1a32, 0xab50, 0x3c50, 0x34ea, 0x4066, 0xb413, 0x1, 0x1);
        gbc.writeMem(0x1a32, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xab50, gbc.sp());
        EXPECT(0x1a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02F5
        gbc.setState(0x2020, 0x7aa1, 0xb580, 0x8382, 0xd67a, 0x5184, 0x1, 0x0);
        gbc.writeMem(0x2020, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7aa1, gbc.sp());
        EXPECT(0x2022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02F6
        gbc.setState(0xd0c9, 0x4ee3, 0x7910, 0x733d, 0x159f, 0xf730, 0x0, 0x1);
        gbc.writeMem(0xd0c9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4ee3, gbc.sp());
        EXPECT(0xd0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c9));
        EXPECT(0x57, gbc.readMem(0xd0ca));
        // CB 57 02F7
        gbc.setState(0xc2eb, 0x6e4d, 0x62b0, 0x11be, 0x9d8d, 0x7435, 0x0, 0x0);
        gbc.writeMem(0xc2eb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6e4d, gbc.sp());
        EXPECT(0xc2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2eb));
        EXPECT(0x57, gbc.readMem(0xc2ec));
        // CB 57 02F8
        gbc.setState(0xa574, 0x153, 0xccc0, 0xd658, 0xe871, 0xc3ef, 0x1, 0x1);
        gbc.writeMem(0xa574, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x153, gbc.sp());
        EXPECT(0xa576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa574));
        EXPECT(0x57, gbc.readMem(0xa575));
        // CB 57 02F9
        gbc.setState(0x5f6a, 0xd44e, 0x6580, 0xea97, 0xeba, 0xd866, 0x1, 0x1);
        gbc.writeMem(0x5f6a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd44e, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02FA
        gbc.setState(0x4bec, 0xa88, 0x21b0, 0x991f, 0x2f05, 0xa90d, 0x1, 0x1);
        gbc.writeMem(0x4bec, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa88, gbc.sp());
        EXPECT(0x4bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 02FB
        gbc.setState(0x9a4, 0x522c, 0x7fc0, 0x3128, 0x8227, 0xcc89, 0x0, 0x0);
        gbc.writeMem(0x9a4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x522c, gbc.sp());
        EXPECT(0x9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02FC
        gbc.setState(0x1f31, 0x3e2, 0x6ea0, 0xbbb5, 0xd132, 0xa479, 0x0, 0x0);
        gbc.writeMem(0x1f31, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3e2, gbc.sp());
        EXPECT(0x1f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 02FD
        gbc.setState(0xe9be, 0x8010, 0xa5e0, 0xe1fb, 0xee1d, 0xf34c, 0x0, 0x0);
        gbc.writeMem(0xe9be, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8010, gbc.sp());
        EXPECT(0xe9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9be));
        EXPECT(0x57, gbc.readMem(0xe9bf));
        // CB 57 02FE
        gbc.setState(0x9f08, 0x6056, 0xd400, 0xea18, 0xda6e, 0x263e, 0x1, 0x1);
        gbc.writeMem(0x9f08, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6056, gbc.sp());
        EXPECT(0x9f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f08));
        EXPECT(0x57, gbc.readMem(0x9f09));
        // CB 57 02FF
        gbc.setState(0x3845, 0x151c, 0xa170, 0x99d5, 0x66c3, 0x80eb, 0x1, 0x0);
        gbc.writeMem(0x3845, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x151c, gbc.sp());
        EXPECT(0x3847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0300
        gbc.setState(0x54a8, 0xa460, 0xa5b0, 0xec84, 0x8fe5, 0x4112, 0x1, 0x1);
        gbc.writeMem(0x54a8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa460, gbc.sp());
        EXPECT(0x54aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0301
        gbc.setState(0xc062, 0xbb74, 0xf810, 0xfb08, 0x9154, 0xc640, 0x1, 0x1);
        gbc.writeMem(0xc062, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbb74, gbc.sp());
        EXPECT(0xc064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc062));
        EXPECT(0x57, gbc.readMem(0xc063));
        // CB 57 0303
        gbc.setState(0xc62d, 0xa05, 0x8ac0, 0x4964, 0x3288, 0x837e, 0x1, 0x1);
        gbc.writeMem(0xc62d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0xc62f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62d));
        EXPECT(0x57, gbc.readMem(0xc62e));
        // CB 57 0304
        gbc.setState(0x338d, 0xf0f9, 0x9860, 0x94b1, 0x2dbb, 0xc156, 0x1, 0x0);
        gbc.writeMem(0x338d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf0f9, gbc.sp());
        EXPECT(0x338f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0305
        gbc.setState(0xd520, 0x7c33, 0x6d60, 0x67ea, 0x2524, 0x8562, 0x1, 0x1);
        gbc.writeMem(0xd520, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7c33, gbc.sp());
        EXPECT(0xd522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd520));
        EXPECT(0x57, gbc.readMem(0xd521));
        // CB 57 0307
        gbc.setState(0x308, 0x719e, 0xc4a0, 0x7d63, 0x3015, 0xa3d8, 0x0, 0x1);
        gbc.writeMem(0x308, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x719e, gbc.sp());
        EXPECT(0x30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0308
        gbc.setState(0xc893, 0x8b3d, 0x7a90, 0xe243, 0xe7c9, 0x348f, 0x0, 0x0);
        gbc.writeMem(0xc893, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8b3d, gbc.sp());
        EXPECT(0xc895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc893));
        EXPECT(0x57, gbc.readMem(0xc894));
        // CB 57 0309
        gbc.setState(0xebee, 0x47ac, 0xa030, 0xd72b, 0x82ba, 0x48e2, 0x0, 0x0);
        gbc.writeMem(0xebee, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x47ac, gbc.sp());
        EXPECT(0xebf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebee));
        EXPECT(0x57, gbc.readMem(0xebef));
        // CB 57 030A
        gbc.setState(0x72fe, 0x9599, 0x37a0, 0x5efd, 0xb343, 0x963f, 0x1, 0x0);
        gbc.writeMem(0x72fe, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9599, gbc.sp());
        EXPECT(0x7300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 030B
        gbc.setState(0x43cf, 0x43a3, 0x3170, 0x2371, 0x5560, 0x65aa, 0x1, 0x0);
        gbc.writeMem(0x43cf, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x43a3, gbc.sp());
        EXPECT(0x43d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 030D
        gbc.setState(0xc317, 0x52ee, 0x2040, 0xcc12, 0xd33f, 0x1f46, 0x1, 0x0);
        gbc.writeMem(0xc317, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x52ee, gbc.sp());
        EXPECT(0xc319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc317));
        EXPECT(0x57, gbc.readMem(0xc318));
        // CB 57 030E
        gbc.setState(0xbfbe, 0xf1a0, 0x3d50, 0x4fad, 0x48e8, 0xf8da, 0x1, 0x0);
        gbc.writeMem(0xbfbe, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf1a0, gbc.sp());
        EXPECT(0xbfc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbe));
        EXPECT(0x57, gbc.readMem(0xbfbf));
        // CB 57 030F
        gbc.setState(0x37ca, 0x182b, 0x23c0, 0xd394, 0x3003, 0x73a4, 0x0, 0x0);
        gbc.writeMem(0x37ca, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x182b, gbc.sp());
        EXPECT(0x37cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0310
        gbc.setState(0x1c02, 0x1853, 0x9340, 0x2f17, 0x74c3, 0xc9f, 0x0, 0x0);
        gbc.writeMem(0x1c02, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1853, gbc.sp());
        EXPECT(0x1c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0311
        gbc.setState(0xc11b, 0x7517, 0xaa80, 0x5536, 0x5e9d, 0xbdff, 0x1, 0x0);
        gbc.writeMem(0xc11b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7517, gbc.sp());
        EXPECT(0xc11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11b));
        EXPECT(0x57, gbc.readMem(0xc11c));
        // CB 57 0312
        gbc.setState(0x4181, 0xe33c, 0x7310, 0xd2, 0x9823, 0xf6ac, 0x1, 0x0);
        gbc.writeMem(0x4181, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe33c, gbc.sp());
        EXPECT(0x4183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0313
        gbc.setState(0x5795, 0x978c, 0x69d0, 0x5deb, 0x5781, 0xc4ba, 0x0, 0x0);
        gbc.writeMem(0x5795, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x978c, gbc.sp());
        EXPECT(0x5797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0314
        gbc.setState(0x14c9, 0x9565, 0x18f0, 0x2f77, 0x3075, 0x6c88, 0x0, 0x1);
        gbc.writeMem(0x14c9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9565, gbc.sp());
        EXPECT(0x14cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0315
        gbc.setState(0x425a, 0x563e, 0xd330, 0x25d2, 0xa24e, 0xccf3, 0x1, 0x1);
        gbc.writeMem(0x425a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x563e, gbc.sp());
        EXPECT(0x425c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0316
        gbc.setState(0xe8c6, 0x4d6a, 0x7520, 0xcf3e, 0x6d24, 0x560d, 0x1, 0x1);
        gbc.writeMem(0xe8c6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4d6a, gbc.sp());
        EXPECT(0xe8c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c6));
        EXPECT(0x57, gbc.readMem(0xe8c7));
        // CB 57 0317
        gbc.setState(0x6c65, 0x684c, 0x3eb0, 0xb449, 0x5d31, 0xcdf4, 0x1, 0x0);
        gbc.writeMem(0x6c65, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x684c, gbc.sp());
        EXPECT(0x6c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0318
        gbc.setState(0xea18, 0x5e9c, 0x1020, 0xcd3a, 0xf228, 0x5cf9, 0x1, 0x0);
        gbc.writeMem(0xea18, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5e9c, gbc.sp());
        EXPECT(0xea1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea18));
        EXPECT(0x57, gbc.readMem(0xea19));
        // CB 57 0319
        gbc.setState(0xa4a2, 0xa2a2, 0xb50, 0xcec5, 0x1384, 0xbd70, 0x1, 0x1);
        gbc.writeMem(0xa4a2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa2a2, gbc.sp());
        EXPECT(0xa4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a2));
        EXPECT(0x57, gbc.readMem(0xa4a3));
        // CB 57 031A
        gbc.setState(0x9544, 0x561b, 0x85a0, 0x6393, 0xefba, 0x9244, 0x1, 0x0);
        gbc.writeMem(0x9544, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x561b, gbc.sp());
        EXPECT(0x9546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9544));
        EXPECT(0x57, gbc.readMem(0x9545));
        // CB 57 031B
        gbc.setState(0x5e6b, 0x49d, 0x7d70, 0x9ee4, 0x9299, 0x9473, 0x1, 0x1);
        gbc.writeMem(0x5e6b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x49d, gbc.sp());
        EXPECT(0x5e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 031C
        gbc.setState(0x7501, 0x308d, 0x3950, 0x61b4, 0xe323, 0x511b, 0x1, 0x1);
        gbc.writeMem(0x7501, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x308d, gbc.sp());
        EXPECT(0x7503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 031D
        gbc.setState(0x78fb, 0xfc07, 0x890, 0x824c, 0x3a04, 0xb218, 0x1, 0x0);
        gbc.writeMem(0x78fb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfc07, gbc.sp());
        EXPECT(0x78fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 031E
        gbc.setState(0x2eb9, 0x911e, 0xd050, 0x312c, 0x1694, 0x4f18, 0x1, 0x0);
        gbc.writeMem(0x2eb9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x911e, gbc.sp());
        EXPECT(0x2ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 031F
        gbc.setState(0x9fa9, 0x1ce, 0xf800, 0x8cdf, 0xa884, 0xd5c7, 0x0, 0x1);
        gbc.writeMem(0x9fa9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1ce, gbc.sp());
        EXPECT(0x9fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa9));
        EXPECT(0x57, gbc.readMem(0x9faa));
        // CB 57 0320
        gbc.setState(0x2c7c, 0x26ef, 0x2f30, 0x29a0, 0xaff4, 0x1efb, 0x1, 0x1);
        gbc.writeMem(0x2c7c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x26ef, gbc.sp());
        EXPECT(0x2c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0322
        gbc.setState(0xcbc1, 0x8fb0, 0x8ea0, 0x9ae3, 0x487d, 0x6a16, 0x0, 0x0);
        gbc.writeMem(0xcbc1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8fb0, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc1));
        EXPECT(0x57, gbc.readMem(0xcbc2));
        // CB 57 0323
        gbc.setState(0x55bd, 0xb8e7, 0xc6b0, 0x8144, 0xb097, 0x883f, 0x1, 0x1);
        gbc.writeMem(0x55bd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb8e7, gbc.sp());
        EXPECT(0x55bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0325
        gbc.setState(0xa0de, 0x566e, 0x73c0, 0xafe1, 0x37f8, 0x8d28, 0x1, 0x1);
        gbc.writeMem(0xa0de, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x566e, gbc.sp());
        EXPECT(0xa0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0de));
        EXPECT(0x57, gbc.readMem(0xa0df));
        // CB 57 0326
        gbc.setState(0x3b0b, 0xe90a, 0xbde0, 0x9312, 0x6298, 0xf3f4, 0x0, 0x1);
        gbc.writeMem(0x3b0b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe90a, gbc.sp());
        EXPECT(0x3b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0327
        gbc.setState(0xe89e, 0x45a4, 0x59d0, 0x8db3, 0x84a9, 0x1468, 0x0, 0x1);
        gbc.writeMem(0xe89e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x45a4, gbc.sp());
        EXPECT(0xe8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89e));
        EXPECT(0x57, gbc.readMem(0xe89f));
        // CB 57 0328
        gbc.setState(0xb839, 0xfe5d, 0xa760, 0xae0f, 0xf4fa, 0x56f0, 0x1, 0x0);
        gbc.writeMem(0xb839, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfe5d, gbc.sp());
        EXPECT(0xb83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb839));
        EXPECT(0x57, gbc.readMem(0xb83a));
        // CB 57 0329
        gbc.setState(0x7419, 0x9f0, 0x2f00, 0x1047, 0xfbb0, 0x31eb, 0x1, 0x0);
        gbc.writeMem(0x7419, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9f0, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 032A
        gbc.setState(0x8ab1, 0x946a, 0x53b0, 0x3b7e, 0x5af7, 0x9d46, 0x0, 0x1);
        gbc.writeMem(0x8ab1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x946a, gbc.sp());
        EXPECT(0x8ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab1));
        EXPECT(0x57, gbc.readMem(0x8ab2));
        // CB 57 032B
        gbc.setState(0xd4f9, 0x96d8, 0x3f0, 0x4d58, 0x94c0, 0xa120, 0x1, 0x0);
        gbc.writeMem(0xd4f9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x96d8, gbc.sp());
        EXPECT(0xd4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f9));
        EXPECT(0x57, gbc.readMem(0xd4fa));
        // CB 57 032C
        gbc.setState(0x34d4, 0x3879, 0x6a80, 0x9c5b, 0x8850, 0xa60c, 0x0, 0x0);
        gbc.writeMem(0x34d4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3879, gbc.sp());
        EXPECT(0x34d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 032D
        gbc.setState(0xdace, 0x3a1a, 0xe380, 0x1a32, 0x69bc, 0x5872, 0x0, 0x0);
        gbc.writeMem(0xdace, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3a1a, gbc.sp());
        EXPECT(0xdad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdace));
        EXPECT(0x57, gbc.readMem(0xdacf));
        // CB 57 032E
        gbc.setState(0x5d62, 0x12aa, 0x9580, 0x46b8, 0xd8cf, 0x9ef4, 0x0, 0x1);
        gbc.writeMem(0x5d62, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x12aa, gbc.sp());
        EXPECT(0x5d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 032F
        gbc.setState(0x3e69, 0xf5e6, 0xf0e0, 0xede6, 0x6d18, 0x8e90, 0x0, 0x0);
        gbc.writeMem(0x3e69, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf5e6, gbc.sp());
        EXPECT(0x3e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0331
        gbc.setState(0x865b, 0x1945, 0xd150, 0x6d03, 0x3ddc, 0x5f15, 0x1, 0x1);
        gbc.writeMem(0x865b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1945, gbc.sp());
        EXPECT(0x865d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865b));
        EXPECT(0x57, gbc.readMem(0x865c));
        // CB 57 0332
        gbc.setState(0xd391, 0xab9a, 0x3310, 0x3b3b, 0xb979, 0x1a49, 0x1, 0x0);
        gbc.writeMem(0xd391, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xab9a, gbc.sp());
        EXPECT(0xd393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd391));
        EXPECT(0x57, gbc.readMem(0xd392));
        // CB 57 0333
        gbc.setState(0x50d7, 0xdcdb, 0xc0f0, 0x441a, 0x88fb, 0x6984, 0x0, 0x0);
        gbc.writeMem(0x50d7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdcdb, gbc.sp());
        EXPECT(0x50d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0335
        gbc.setState(0x6388, 0xe942, 0xd00, 0x25e2, 0xf5b5, 0x66e9, 0x0, 0x1);
        gbc.writeMem(0x6388, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe942, gbc.sp());
        EXPECT(0x638a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0336
        gbc.setState(0x60ce, 0xcbb6, 0x4300, 0xda64, 0xfc09, 0x5d9f, 0x1, 0x1);
        gbc.writeMem(0x60ce, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcbb6, gbc.sp());
        EXPECT(0x60d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0337
        gbc.setState(0xdbf2, 0x207, 0xa9f0, 0x54c4, 0x1ac, 0x76e8, 0x1, 0x0);
        gbc.writeMem(0xdbf2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x207, gbc.sp());
        EXPECT(0xdbf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf2));
        EXPECT(0x57, gbc.readMem(0xdbf3));
        // CB 57 0338
        gbc.setState(0x9a1c, 0x3969, 0x6da0, 0x18c8, 0xbb82, 0xdae4, 0x1, 0x0);
        gbc.writeMem(0x9a1c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3969, gbc.sp());
        EXPECT(0x9a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1c));
        EXPECT(0x57, gbc.readMem(0x9a1d));
        // CB 57 0339
        gbc.setState(0xae33, 0x1174, 0xe100, 0x520f, 0x2424, 0x29b7, 0x1, 0x1);
        gbc.writeMem(0xae33, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1174, gbc.sp());
        EXPECT(0xae35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae33));
        EXPECT(0x57, gbc.readMem(0xae34));
        // CB 57 033A
        gbc.setState(0xb2d9, 0x927, 0x3190, 0x52ff, 0xac1c, 0x4195, 0x0, 0x0);
        gbc.writeMem(0xb2d9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x927, gbc.sp());
        EXPECT(0xb2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d9));
        EXPECT(0x57, gbc.readMem(0xb2da));
        // CB 57 033B
        gbc.setState(0x25ca, 0x651c, 0xea60, 0x9d9b, 0xb29d, 0x8a68, 0x0, 0x1);
        gbc.writeMem(0x25ca, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x651c, gbc.sp());
        EXPECT(0x25cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 033C
        gbc.setState(0x38a4, 0x47d9, 0x5870, 0x35a7, 0x773c, 0xc63c, 0x1, 0x1);
        gbc.writeMem(0x38a4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x47d9, gbc.sp());
        EXPECT(0x38a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 033D
        gbc.setState(0x2f9a, 0x3a8c, 0xa120, 0x41a6, 0xc25e, 0xf107, 0x1, 0x1);
        gbc.writeMem(0x2f9a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3a8c, gbc.sp());
        EXPECT(0x2f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 033F
        gbc.setState(0x2c47, 0xd136, 0xbb00, 0x3ba3, 0x3e9a, 0xddd4, 0x1, 0x0);
        gbc.writeMem(0x2c47, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd136, gbc.sp());
        EXPECT(0x2c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0340
        gbc.setState(0x51b0, 0xb354, 0xacb0, 0xc3f1, 0xc69e, 0xbe1c, 0x0, 0x1);
        gbc.writeMem(0x51b0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb354, gbc.sp());
        EXPECT(0x51b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0341
        gbc.setState(0xca4c, 0xb8de, 0x4130, 0xc62a, 0xed20, 0x493e, 0x0, 0x1);
        gbc.writeMem(0xca4c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb8de, gbc.sp());
        EXPECT(0xca4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4c));
        EXPECT(0x57, gbc.readMem(0xca4d));
        // CB 57 0342
        gbc.setState(0xd01, 0x69e3, 0x7f20, 0xaad, 0xc53, 0xf745, 0x1, 0x0);
        gbc.writeMem(0xd01, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x69e3, gbc.sp());
        EXPECT(0xd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0343
        gbc.setState(0x4b1e, 0x1999, 0x4c0, 0xbede, 0xa526, 0xf743, 0x1, 0x0);
        gbc.writeMem(0x4b1e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1999, gbc.sp());
        EXPECT(0x4b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0344
        gbc.setState(0x6439, 0xfe33, 0xa2a0, 0x91cd, 0x3814, 0xfcec, 0x0, 0x0);
        gbc.writeMem(0x6439, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfe33, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0345
        gbc.setState(0xcb56, 0xae12, 0xfd60, 0xf7cc, 0x9f4d, 0xf6af, 0x0, 0x0);
        gbc.writeMem(0xcb56, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xae12, gbc.sp());
        EXPECT(0xcb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb56));
        EXPECT(0x57, gbc.readMem(0xcb57));
        // CB 57 0346
        gbc.setState(0xa68e, 0x4f9a, 0x40c0, 0xbe74, 0x3905, 0xe590, 0x1, 0x0);
        gbc.writeMem(0xa68e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4f9a, gbc.sp());
        EXPECT(0xa690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68e));
        EXPECT(0x57, gbc.readMem(0xa68f));
        // CB 57 0347
        gbc.setState(0x813c, 0x4571, 0x7ef0, 0xd0ed, 0x34dc, 0xa13d, 0x1, 0x1);
        gbc.writeMem(0x813c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4571, gbc.sp());
        EXPECT(0x813e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813c));
        EXPECT(0x57, gbc.readMem(0x813d));
        // CB 57 0348
        gbc.setState(0x7acd, 0x9f4e, 0x1a80, 0x24fd, 0xa958, 0x2da0, 0x0, 0x0);
        gbc.writeMem(0x7acd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9f4e, gbc.sp());
        EXPECT(0x7acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0349
        gbc.setState(0xe078, 0x60aa, 0xc5a0, 0x7663, 0x2e8d, 0x799f, 0x1, 0x1);
        gbc.writeMem(0xe078, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x60aa, gbc.sp());
        EXPECT(0xe07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe078));
        EXPECT(0x57, gbc.readMem(0xe079));
        // CB 57 034A
        gbc.setState(0x3f4, 0xd55f, 0x4710, 0x3361, 0x6f05, 0x43bf, 0x0, 0x1);
        gbc.writeMem(0x3f4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd55f, gbc.sp());
        EXPECT(0x3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 034C
        gbc.setState(0x38f8, 0x946a, 0x15d0, 0x8e54, 0xe9c7, 0xea93, 0x0, 0x0);
        gbc.writeMem(0x38f8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x946a, gbc.sp());
        EXPECT(0x38fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 034D
        gbc.setState(0xf92, 0xdf19, 0x5600, 0x241b, 0x3f8b, 0x5b5d, 0x0, 0x0);
        gbc.writeMem(0xf92, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdf19, gbc.sp());
        EXPECT(0xf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 034E
        gbc.setState(0x7d0f, 0xc37, 0x67a0, 0xeefe, 0xca05, 0xdb26, 0x1, 0x0);
        gbc.writeMem(0x7d0f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc37, gbc.sp());
        EXPECT(0x7d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 034F
        gbc.setState(0xe2e7, 0x9c54, 0x4ec0, 0x1e38, 0xfd36, 0x263d, 0x0, 0x0);
        gbc.writeMem(0xe2e7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9c54, gbc.sp());
        EXPECT(0xe2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e7));
        EXPECT(0x57, gbc.readMem(0xe2e8));
        // CB 57 0351
        gbc.setState(0xbf72, 0xade4, 0xf600, 0x7aa7, 0x55ed, 0x148f, 0x1, 0x0);
        gbc.writeMem(0xbf72, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xade4, gbc.sp());
        EXPECT(0xbf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf72));
        EXPECT(0x57, gbc.readMem(0xbf73));
        // CB 57 0352
        gbc.setState(0x6070, 0x76c0, 0x1840, 0xdf63, 0xf307, 0xcfab, 0x0, 0x1);
        gbc.writeMem(0x6070, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x76c0, gbc.sp());
        EXPECT(0x6072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0353
        gbc.setState(0xd960, 0xa8b7, 0x4af0, 0xdb88, 0x4de3, 0xc137, 0x0, 0x0);
        gbc.writeMem(0xd960, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa8b7, gbc.sp());
        EXPECT(0xd962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd960));
        EXPECT(0x57, gbc.readMem(0xd961));
        // CB 57 0354
        gbc.setState(0xaaf9, 0xfea, 0x46e0, 0xd1cd, 0x9310, 0xa665, 0x1, 0x0);
        gbc.writeMem(0xaaf9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfea, gbc.sp());
        EXPECT(0xaafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf9));
        EXPECT(0x57, gbc.readMem(0xaafa));
        // CB 57 0356
        gbc.setState(0x64f0, 0xac13, 0xa8c0, 0x46c6, 0xf85, 0x7656, 0x0, 0x1);
        gbc.writeMem(0x64f0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xac13, gbc.sp());
        EXPECT(0x64f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0357
        gbc.setState(0x9ff5, 0xf12c, 0xd320, 0x2429, 0xb15a, 0x71aa, 0x0, 0x1);
        gbc.writeMem(0x9ff5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf12c, gbc.sp());
        EXPECT(0x9ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff5));
        EXPECT(0x57, gbc.readMem(0x9ff6));
        // CB 57 0358
        gbc.setState(0xdc3f, 0xaa69, 0xea50, 0x82cb, 0x1592, 0x708d, 0x0, 0x1);
        gbc.writeMem(0xdc3f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaa69, gbc.sp());
        EXPECT(0xdc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3f));
        EXPECT(0x57, gbc.readMem(0xdc40));
        // CB 57 0359
        gbc.setState(0xcdbb, 0x63d8, 0x6470, 0x2a3d, 0x2203, 0x1cd7, 0x0, 0x1);
        gbc.writeMem(0xcdbb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x63d8, gbc.sp());
        EXPECT(0xcdbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdbb));
        EXPECT(0x57, gbc.readMem(0xcdbc));
        // CB 57 035A
        gbc.setState(0x3ae3, 0xc5dc, 0x7370, 0x7608, 0x7954, 0x3a50, 0x1, 0x1);
        gbc.writeMem(0x3ae3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc5dc, gbc.sp());
        EXPECT(0x3ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 035B
        gbc.setState(0x2f76, 0xdbe2, 0xdd50, 0xa136, 0xb1e5, 0xd34d, 0x0, 0x0);
        gbc.writeMem(0x2f76, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdbe2, gbc.sp());
        EXPECT(0x2f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 035C
        gbc.setState(0x66c3, 0xfd8f, 0x44c0, 0xdac9, 0xe4de, 0xbacd, 0x0, 0x1);
        gbc.writeMem(0x66c3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfd8f, gbc.sp());
        EXPECT(0x66c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 035D
        gbc.setState(0x910d, 0xc6f, 0x3a0, 0x6dcd, 0xb502, 0x4f23, 0x0, 0x1);
        gbc.writeMem(0x910d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc6f, gbc.sp());
        EXPECT(0x910f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910d));
        EXPECT(0x57, gbc.readMem(0x910e));
        // CB 57 035E
        gbc.setState(0x3a06, 0x46de, 0xc90, 0xc32d, 0x815e, 0x1468, 0x1, 0x1);
        gbc.writeMem(0x3a06, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x46de, gbc.sp());
        EXPECT(0x3a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 035F
        gbc.setState(0xb2d0, 0x155b, 0xfb90, 0xb95f, 0xf45a, 0x2106, 0x1, 0x1);
        gbc.writeMem(0xb2d0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x155b, gbc.sp());
        EXPECT(0xb2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d0));
        EXPECT(0x57, gbc.readMem(0xb2d1));
        // CB 57 0360
        gbc.setState(0x69c5, 0xc20d, 0xab20, 0x74b, 0x7010, 0xf1a, 0x0, 0x0);
        gbc.writeMem(0x69c5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc20d, gbc.sp());
        EXPECT(0x69c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0361
        gbc.setState(0x63d7, 0x73c, 0xe90, 0x54a0, 0xa54c, 0x1e42, 0x1, 0x1);
        gbc.writeMem(0x63d7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x73c, gbc.sp());
        EXPECT(0x63d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0362
        gbc.setState(0x2047, 0x66c1, 0x80d0, 0x1ae9, 0x9567, 0xd8b1, 0x1, 0x1);
        gbc.writeMem(0x2047, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x66c1, gbc.sp());
        EXPECT(0x2049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0363
        gbc.setState(0x4d6d, 0x73d, 0xe340, 0x2979, 0xa142, 0x560, 0x1, 0x0);
        gbc.writeMem(0x4d6d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x73d, gbc.sp());
        EXPECT(0x4d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0364
        gbc.setState(0x14d9, 0x7a96, 0x8990, 0xd570, 0x7277, 0x9611, 0x0, 0x1);
        gbc.writeMem(0x14d9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7a96, gbc.sp());
        EXPECT(0x14db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0365
        gbc.setState(0x1bf3, 0xa4d9, 0xb9d0, 0x7c63, 0xf291, 0xa192, 0x0, 0x1);
        gbc.writeMem(0x1bf3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa4d9, gbc.sp());
        EXPECT(0x1bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0366
        gbc.setState(0xd63a, 0x83ca, 0x7450, 0xc592, 0x984e, 0xc6d8, 0x1, 0x1);
        gbc.writeMem(0xd63a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x83ca, gbc.sp());
        EXPECT(0xd63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd63a));
        EXPECT(0x57, gbc.readMem(0xd63b));
        // CB 57 0367
        gbc.setState(0x8581, 0xb22f, 0xa640, 0x21b, 0x1882, 0x72b0, 0x0, 0x0);
        gbc.writeMem(0x8581, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb22f, gbc.sp());
        EXPECT(0x8583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8581));
        EXPECT(0x57, gbc.readMem(0x8582));
        // CB 57 0368
        gbc.setState(0x22c1, 0x3bf0, 0x4050, 0x40ab, 0x2ffa, 0xe50c, 0x1, 0x1);
        gbc.writeMem(0x22c1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3bf0, gbc.sp());
        EXPECT(0x22c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0369
        gbc.setState(0x91d, 0x1c50, 0xb160, 0xf1fe, 0x27f0, 0xb3ba, 0x0, 0x1);
        gbc.writeMem(0x91d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1c50, gbc.sp());
        EXPECT(0x91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 036A
        gbc.setState(0xed5b, 0xf8e1, 0xaae0, 0x3ffa, 0x441, 0x15bc, 0x1, 0x0);
        gbc.writeMem(0xed5b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf8e1, gbc.sp());
        EXPECT(0xed5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed5b));
        EXPECT(0x57, gbc.readMem(0xed5c));
        // CB 57 036B
        gbc.setState(0x3928, 0x2034, 0x7400, 0x680b, 0x39d0, 0xe9e0, 0x1, 0x0);
        gbc.writeMem(0x3928, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2034, gbc.sp());
        EXPECT(0x392a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 036C
        gbc.setState(0x6f0f, 0x9cf6, 0x5240, 0x21c3, 0x2f86, 0x608f, 0x0, 0x1);
        gbc.writeMem(0x6f0f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9cf6, gbc.sp());
        EXPECT(0x6f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 036D
        gbc.setState(0x3985, 0x6e04, 0xf970, 0xc2e9, 0xdca5, 0x379a, 0x0, 0x1);
        gbc.writeMem(0x3985, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6e04, gbc.sp());
        EXPECT(0x3987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 036E
        gbc.setState(0xe9b0, 0x1fe4, 0xf1f0, 0x4a7e, 0x348e, 0x9fc, 0x1, 0x0);
        gbc.writeMem(0xe9b0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1fe4, gbc.sp());
        EXPECT(0xe9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b0));
        EXPECT(0x57, gbc.readMem(0xe9b1));
        // CB 57 036F
        gbc.setState(0x26ab, 0x8769, 0xd780, 0x836d, 0xb938, 0xd302, 0x0, 0x0);
        gbc.writeMem(0x26ab, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8769, gbc.sp());
        EXPECT(0x26ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0370
        gbc.setState(0x3dd5, 0xe7b1, 0xc6e0, 0xb045, 0x3e9, 0xa0fe, 0x1, 0x0);
        gbc.writeMem(0x3dd5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe7b1, gbc.sp());
        EXPECT(0x3dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0371
        gbc.setState(0x2b75, 0xa90, 0xfab0, 0xa741, 0x1029, 0xb092, 0x0, 0x0);
        gbc.writeMem(0x2b75, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa90, gbc.sp());
        EXPECT(0x2b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0372
        gbc.setState(0xc345, 0xe720, 0x6930, 0x23d6, 0xc4bd, 0x408f, 0x1, 0x0);
        gbc.writeMem(0xc345, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe720, gbc.sp());
        EXPECT(0xc347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc345));
        EXPECT(0x57, gbc.readMem(0xc346));
        // CB 57 0373
        gbc.setState(0x3366, 0xa23b, 0x3260, 0xf2c6, 0xc354, 0x958b, 0x1, 0x1);
        gbc.writeMem(0x3366, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa23b, gbc.sp());
        EXPECT(0x3368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0374
        gbc.setState(0x51ab, 0x3b3d, 0x1f70, 0xc7b5, 0x1a6e, 0xb5c1, 0x1, 0x1);
        gbc.writeMem(0x51ab, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3b3d, gbc.sp());
        EXPECT(0x51ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0375
        gbc.setState(0xd92a, 0x39b6, 0xc620, 0x9aa7, 0x2bf2, 0x6f54, 0x1, 0x0);
        gbc.writeMem(0xd92a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x39b6, gbc.sp());
        EXPECT(0xd92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92a));
        EXPECT(0x57, gbc.readMem(0xd92b));
        // CB 57 0376
        gbc.setState(0xaf44, 0x3bff, 0xedc0, 0xced4, 0x853a, 0xbb47, 0x1, 0x1);
        gbc.writeMem(0xaf44, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3bff, gbc.sp());
        EXPECT(0xaf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf44));
        EXPECT(0x57, gbc.readMem(0xaf45));
        // CB 57 0377
        gbc.setState(0xb3a3, 0x39d1, 0xd80, 0x9666, 0xd577, 0xf73d, 0x1, 0x1);
        gbc.writeMem(0xb3a3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x39d1, gbc.sp());
        EXPECT(0xb3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a3));
        EXPECT(0x57, gbc.readMem(0xb3a4));
        // CB 57 0378
        gbc.setState(0x6afa, 0xb0d2, 0x7cf0, 0x746, 0xb595, 0xd208, 0x0, 0x0);
        gbc.writeMem(0x6afa, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb0d2, gbc.sp());
        EXPECT(0x6afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0379
        gbc.setState(0x76ee, 0xaa64, 0x7a70, 0x8369, 0xc2f3, 0xd05c, 0x0, 0x0);
        gbc.writeMem(0x76ee, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xaa64, gbc.sp());
        EXPECT(0x76f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 037A
        gbc.setState(0x22fb, 0xcdd0, 0xd4b0, 0x3c5b, 0xaa5c, 0xc2b8, 0x1, 0x1);
        gbc.writeMem(0x22fb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcdd0, gbc.sp());
        EXPECT(0x22fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 037B
        gbc.setState(0x936, 0xb374, 0x5510, 0xf457, 0xa19, 0x1197, 0x0, 0x0);
        gbc.writeMem(0x936, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb374, gbc.sp());
        EXPECT(0x938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 037C
        gbc.setState(0xce24, 0x5f4a, 0x7070, 0x64af, 0x8ebc, 0x1e6b, 0x1, 0x1);
        gbc.writeMem(0xce24, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5f4a, gbc.sp());
        EXPECT(0xce26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce24));
        EXPECT(0x57, gbc.readMem(0xce25));
        // CB 57 037D
        gbc.setState(0xc94c, 0xde91, 0xb630, 0xa404, 0x98a3, 0x7097, 0x1, 0x1);
        gbc.writeMem(0xc94c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xde91, gbc.sp());
        EXPECT(0xc94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94c));
        EXPECT(0x57, gbc.readMem(0xc94d));
        // CB 57 037E
        gbc.setState(0x6d96, 0xc0d2, 0xd570, 0x45ae, 0x6e38, 0x1435, 0x1, 0x0);
        gbc.writeMem(0x6d96, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc0d2, gbc.sp());
        EXPECT(0x6d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 037F
        gbc.setState(0x5e47, 0x63b4, 0xdb10, 0x8b2c, 0xedb7, 0xb2af, 0x0, 0x1);
        gbc.writeMem(0x5e47, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x63b4, gbc.sp());
        EXPECT(0x5e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0380
        gbc.setState(0xb6aa, 0xdccb, 0xce00, 0x8ae, 0xae2d, 0x8ae3, 0x1, 0x0);
        gbc.writeMem(0xb6aa, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdccb, gbc.sp());
        EXPECT(0xb6ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6aa));
        EXPECT(0x57, gbc.readMem(0xb6ab));
        // CB 57 0381
        gbc.setState(0x6e17, 0x2772, 0x8860, 0x42a9, 0xbaa8, 0xec19, 0x1, 0x1);
        gbc.writeMem(0x6e17, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2772, gbc.sp());
        EXPECT(0x6e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0382
        gbc.setState(0xc38c, 0x2bce, 0x4c0, 0xe2f6, 0xb15d, 0x93b4, 0x0, 0x0);
        gbc.writeMem(0xc38c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2bce, gbc.sp());
        EXPECT(0xc38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38c));
        EXPECT(0x57, gbc.readMem(0xc38d));
        // CB 57 0383
        gbc.setState(0x7390, 0x42c6, 0x35d0, 0x604d, 0x98a2, 0x2f47, 0x0, 0x1);
        gbc.writeMem(0x7390, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x42c6, gbc.sp());
        EXPECT(0x7392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0384
        gbc.setState(0x410d, 0x1988, 0x5d0, 0xe7c, 0x31d0, 0x19b, 0x1, 0x0);
        gbc.writeMem(0x410d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1988, gbc.sp());
        EXPECT(0x410f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0385
        gbc.setState(0x7945, 0x3ffa, 0xfc20, 0x2f43, 0xd95e, 0x86ed, 0x1, 0x0);
        gbc.writeMem(0x7945, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3ffa, gbc.sp());
        EXPECT(0x7947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0386
        gbc.setState(0x6fc8, 0x32f2, 0x7e60, 0x4285, 0xd1c, 0x5528, 0x0, 0x0);
        gbc.writeMem(0x6fc8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x32f2, gbc.sp());
        EXPECT(0x6fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0387
        gbc.setState(0x4764, 0x50fe, 0xa1b0, 0xe3f, 0x8ad0, 0x5e2, 0x0, 0x0);
        gbc.writeMem(0x4764, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x50fe, gbc.sp());
        EXPECT(0x4766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0388
        gbc.setState(0x6fe8, 0x4bb7, 0xd830, 0xb7c5, 0x2c87, 0x16b, 0x0, 0x0);
        gbc.writeMem(0x6fe8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4bb7, gbc.sp());
        EXPECT(0x6fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0389
        gbc.setState(0x2be1, 0xf681, 0xc790, 0x134e, 0xb8f9, 0x6d1b, 0x0, 0x0);
        gbc.writeMem(0x2be1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf681, gbc.sp());
        EXPECT(0x2be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 038A
        gbc.setState(0x6f75, 0xfefb, 0x34a0, 0x7cc5, 0x1a54, 0xc62, 0x0, 0x0);
        gbc.writeMem(0x6f75, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfefb, gbc.sp());
        EXPECT(0x6f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 038B
        gbc.setState(0xd11e, 0x4632, 0x5cb0, 0xd447, 0xefd6, 0x52cd, 0x0, 0x1);
        gbc.writeMem(0xd11e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4632, gbc.sp());
        EXPECT(0xd120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11e));
        EXPECT(0x57, gbc.readMem(0xd11f));
        // CB 57 038C
        gbc.setState(0x660a, 0x42ee, 0x1420, 0x3d1f, 0x72b0, 0xa926, 0x1, 0x1);
        gbc.writeMem(0x660a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x42ee, gbc.sp());
        EXPECT(0x660c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 038D
        gbc.setState(0xcec4, 0x5d5e, 0xcb00, 0xd688, 0xcc5f, 0xfb78, 0x0, 0x1);
        gbc.writeMem(0xcec4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5d5e, gbc.sp());
        EXPECT(0xcec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec4));
        EXPECT(0x57, gbc.readMem(0xcec5));
        // CB 57 038E
        gbc.setState(0x16b5, 0xba7, 0x2680, 0xc44a, 0xd5ff, 0x9588, 0x1, 0x1);
        gbc.writeMem(0x16b5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xba7, gbc.sp());
        EXPECT(0x16b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 038F
        gbc.setState(0xb895, 0x487a, 0xb140, 0x2826, 0x41a3, 0xa0be, 0x1, 0x1);
        gbc.writeMem(0xb895, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x487a, gbc.sp());
        EXPECT(0xb897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb895));
        EXPECT(0x57, gbc.readMem(0xb896));
        // CB 57 0390
        gbc.setState(0x182b, 0x869c, 0xc040, 0x6776, 0xad86, 0xc47e, 0x1, 0x1);
        gbc.writeMem(0x182b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0x182d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0391
        gbc.setState(0x9e7c, 0x9fa6, 0x3f90, 0x4051, 0xc239, 0x6866, 0x0, 0x1);
        gbc.writeMem(0x9e7c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9fa6, gbc.sp());
        EXPECT(0x9e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7c));
        EXPECT(0x57, gbc.readMem(0x9e7d));
        // CB 57 0392
        gbc.setState(0x576c, 0x1f86, 0x8710, 0x7ac2, 0x31e6, 0x9b86, 0x0, 0x1);
        gbc.writeMem(0x576c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1f86, gbc.sp());
        EXPECT(0x576e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 0393
        gbc.setState(0x4057, 0xc2ac, 0xf860, 0x573a, 0xdeda, 0x454d, 0x0, 0x0);
        gbc.writeMem(0x4057, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0x4059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0394
        gbc.setState(0x886f, 0x72b7, 0xb480, 0x6507, 0xd0e1, 0x8b9a, 0x1, 0x1);
        gbc.writeMem(0x886f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x72b7, gbc.sp());
        EXPECT(0x8871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886f));
        EXPECT(0x57, gbc.readMem(0x8870));
        // CB 57 0395
        gbc.setState(0xcdf4, 0x473e, 0x8ef0, 0xe042, 0x5c6f, 0x31e8, 0x0, 0x0);
        gbc.writeMem(0xcdf4, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x473e, gbc.sp());
        EXPECT(0xcdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf4));
        EXPECT(0x57, gbc.readMem(0xcdf5));
        // CB 57 0396
        gbc.setState(0x4968, 0xbb4, 0xd160, 0x6739, 0x1a26, 0x68f2, 0x1, 0x0);
        gbc.writeMem(0x4968, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbb4, gbc.sp());
        EXPECT(0x496a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 0397
        gbc.setState(0x8aba, 0x4b8d, 0x5400, 0x9cdc, 0xbddf, 0x1d57, 0x0, 0x0);
        gbc.writeMem(0x8aba, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4b8d, gbc.sp());
        EXPECT(0x8abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aba));
        EXPECT(0x57, gbc.readMem(0x8abb));
        // CB 57 0398
        gbc.setState(0xc2a2, 0xc2f3, 0xc210, 0x57f8, 0xbc9c, 0xa4b1, 0x0, 0x1);
        gbc.writeMem(0xc2a2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc2f3, gbc.sp());
        EXPECT(0xc2a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a2));
        EXPECT(0x57, gbc.readMem(0xc2a3));
        // CB 57 0399
        gbc.setState(0xb49, 0xafcb, 0x99d0, 0xeccd, 0xf936, 0xe901, 0x1, 0x1);
        gbc.writeMem(0xb49, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xafcb, gbc.sp());
        EXPECT(0xb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 039A
        gbc.setState(0x7fed, 0x20be, 0xd760, 0xc116, 0x658e, 0x7aed, 0x0, 0x1);
        gbc.writeMem(0x7fed, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x20be, gbc.sp());
        EXPECT(0x7fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 039B
        gbc.setState(0xd77, 0xbca6, 0xd300, 0xc40a, 0xe2ab, 0xc49c, 0x0, 0x0);
        gbc.writeMem(0xd77, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbca6, gbc.sp());
        EXPECT(0xd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 039C
        gbc.setState(0xb31e, 0x7b8e, 0x5510, 0x332c, 0x655a, 0x6e2e, 0x0, 0x0);
        gbc.writeMem(0xb31e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7b8e, gbc.sp());
        EXPECT(0xb320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31e));
        EXPECT(0x57, gbc.readMem(0xb31f));
        // CB 57 039D
        gbc.setState(0x4a89, 0xf9f3, 0xcc0, 0x47b6, 0xb7d4, 0x438f, 0x0, 0x1);
        gbc.writeMem(0x4a89, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf9f3, gbc.sp());
        EXPECT(0x4a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 039E
        gbc.setState(0xc746, 0x2809, 0x2b00, 0xc082, 0x6312, 0xce50, 0x0, 0x0);
        gbc.writeMem(0xc746, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2809, gbc.sp());
        EXPECT(0xc748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc746));
        EXPECT(0x57, gbc.readMem(0xc747));
        // CB 57 039F
        gbc.setState(0xb165, 0xfcea, 0xffc0, 0x9717, 0xab71, 0x853a, 0x1, 0x1);
        gbc.writeMem(0xb165, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfcea, gbc.sp());
        EXPECT(0xb167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb165));
        EXPECT(0x57, gbc.readMem(0xb166));
        // CB 57 03A0
        gbc.setState(0x6de5, 0x1690, 0x3ba0, 0x6b47, 0x9301, 0xadf2, 0x0, 0x1);
        gbc.writeMem(0x6de5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1690, gbc.sp());
        EXPECT(0x6de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03A1
        gbc.setState(0xe9a3, 0x9ad4, 0xa870, 0x1ea, 0xd512, 0x276e, 0x0, 0x0);
        gbc.writeMem(0xe9a3, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0xe9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a3));
        EXPECT(0x57, gbc.readMem(0xe9a4));
        // CB 57 03A2
        gbc.setState(0x7350, 0xe729, 0x9d00, 0xd10a, 0x3497, 0xbe44, 0x1, 0x0);
        gbc.writeMem(0x7350, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe729, gbc.sp());
        EXPECT(0x7352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03A3
        gbc.setState(0x5a78, 0xab46, 0x9410, 0x40a2, 0x71ed, 0x10e6, 0x0, 0x1);
        gbc.writeMem(0x5a78, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xab46, gbc.sp());
        EXPECT(0x5a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03A4
        gbc.setState(0x7948, 0xe777, 0xe690, 0x2aaf, 0x2f6a, 0xee11, 0x0, 0x0);
        gbc.writeMem(0x7948, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0x794a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03A5
        gbc.setState(0xe66f, 0xd843, 0x7490, 0x45d7, 0x3975, 0x3a58, 0x1, 0x0);
        gbc.writeMem(0xe66f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd843, gbc.sp());
        EXPECT(0xe671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66f));
        EXPECT(0x57, gbc.readMem(0xe670));
        // CB 57 03A6
        gbc.setState(0x56b8, 0xf9ef, 0x3e40, 0x1658, 0x2010, 0x82f6, 0x0, 0x0);
        gbc.writeMem(0x56b8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0x56ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03A7
        gbc.setState(0x8e6c, 0x3e84, 0x1a60, 0xa55, 0x1700, 0xe2ec, 0x0, 0x0);
        gbc.writeMem(0x8e6c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3e84, gbc.sp());
        EXPECT(0x8e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6c));
        EXPECT(0x57, gbc.readMem(0x8e6d));
        // CB 57 03A8
        gbc.setState(0x123a, 0x7997, 0xe10, 0x9db3, 0x6c43, 0x8ce8, 0x0, 0x1);
        gbc.writeMem(0x123a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7997, gbc.sp());
        EXPECT(0x123c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03A9
        gbc.setState(0x3fad, 0x903b, 0x5ec0, 0x4a6a, 0x262, 0xc2cc, 0x0, 0x1);
        gbc.writeMem(0x3fad, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x903b, gbc.sp());
        EXPECT(0x3faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03AA
        gbc.setState(0xa7f7, 0xc30a, 0x220, 0x49a8, 0x26d5, 0xdf14, 0x0, 0x0);
        gbc.writeMem(0xa7f7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc30a, gbc.sp());
        EXPECT(0xa7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f7));
        EXPECT(0x57, gbc.readMem(0xa7f8));
        // CB 57 03AB
        gbc.setState(0x5df5, 0xc9ad, 0x17b0, 0x2c03, 0xea0e, 0x2551, 0x1, 0x0);
        gbc.writeMem(0x5df5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc9ad, gbc.sp());
        EXPECT(0x5df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03AC
        gbc.setState(0x5107, 0x9a1c, 0xa200, 0xb406, 0xa2e9, 0x4a2f, 0x1, 0x1);
        gbc.writeMem(0x5107, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9a1c, gbc.sp());
        EXPECT(0x5109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03AD
        gbc.setState(0x7924, 0xd4de, 0xdec0, 0x4f8c, 0x7067, 0x7683, 0x1, 0x1);
        gbc.writeMem(0x7924, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd4de, gbc.sp());
        EXPECT(0x7926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03AE
        gbc.setState(0x655c, 0x8099, 0xb4b0, 0xeb7d, 0x5fca, 0x9403, 0x1, 0x1);
        gbc.writeMem(0x655c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8099, gbc.sp());
        EXPECT(0x655e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03B0
        gbc.setState(0x6ba2, 0xa776, 0x8050, 0x89e3, 0xaf28, 0x8484, 0x0, 0x0);
        gbc.writeMem(0x6ba2, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa776, gbc.sp());
        EXPECT(0x6ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03B1
        gbc.setState(0x796a, 0x9095, 0x6370, 0x444d, 0x4c5e, 0xd4f, 0x1, 0x0);
        gbc.writeMem(0x796a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9095, gbc.sp());
        EXPECT(0x796c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03B2
        gbc.setState(0x65ee, 0x2946, 0xc50, 0x6479, 0x93ea, 0x7743, 0x0, 0x0);
        gbc.writeMem(0x65ee, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2946, gbc.sp());
        EXPECT(0x65f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03B3
        gbc.setState(0x9943, 0x240a, 0xe3c0, 0xf90b, 0x9ec4, 0x3668, 0x0, 0x1);
        gbc.writeMem(0x9943, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x240a, gbc.sp());
        EXPECT(0x9945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9943));
        EXPECT(0x57, gbc.readMem(0x9944));
        // CB 57 03B4
        gbc.setState(0x5cff, 0xb41a, 0x54f0, 0xdd96, 0x9e69, 0x71fa, 0x0, 0x1);
        gbc.writeMem(0x5cff, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb41a, gbc.sp());
        EXPECT(0x5d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03B5
        gbc.setState(0x902c, 0x6d45, 0xa830, 0x9a9c, 0xf814, 0x7946, 0x0, 0x0);
        gbc.writeMem(0x902c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6d45, gbc.sp());
        EXPECT(0x902e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x902c));
        EXPECT(0x57, gbc.readMem(0x902d));
        // CB 57 03B6
        gbc.setState(0xc75a, 0x4466, 0x6e90, 0xa346, 0xa073, 0x2e5, 0x0, 0x1);
        gbc.writeMem(0xc75a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4466, gbc.sp());
        EXPECT(0xc75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75a));
        EXPECT(0x57, gbc.readMem(0xc75b));
        // CB 57 03B7
        gbc.setState(0x7c5a, 0x2971, 0xfa30, 0xa14a, 0x206f, 0x76b, 0x0, 0x1);
        gbc.writeMem(0x7c5a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2971, gbc.sp());
        EXPECT(0x7c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03B8
        gbc.setState(0x6bdd, 0x4afc, 0xc7b0, 0x7c2b, 0x56e4, 0x2be9, 0x0, 0x1);
        gbc.writeMem(0x6bdd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4afc, gbc.sp());
        EXPECT(0x6bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03B9
        gbc.setState(0xc090, 0x9631, 0x7930, 0x611a, 0xf583, 0xb4e1, 0x0, 0x0);
        gbc.writeMem(0xc090, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9631, gbc.sp());
        EXPECT(0xc092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc090));
        EXPECT(0x57, gbc.readMem(0xc091));
        // CB 57 03BA
        gbc.setState(0x1b07, 0xc386, 0xe630, 0xe21e, 0x1769, 0x66ce, 0x1, 0x0);
        gbc.writeMem(0x1b07, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc386, gbc.sp());
        EXPECT(0x1b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03BB
        gbc.setState(0xa426, 0x973f, 0xb4c0, 0x8f16, 0xb29c, 0xee6c, 0x0, 0x0);
        gbc.writeMem(0xa426, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x973f, gbc.sp());
        EXPECT(0xa428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa426));
        EXPECT(0x57, gbc.readMem(0xa427));
        // CB 57 03BC
        gbc.setState(0x46e0, 0xec2d, 0x5670, 0xa38f, 0x2168, 0xc181, 0x1, 0x1);
        gbc.writeMem(0x46e0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xec2d, gbc.sp());
        EXPECT(0x46e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03BD
        gbc.setState(0x69f9, 0xc0ca, 0x2e80, 0x899, 0xa7f, 0xed68, 0x1, 0x0);
        gbc.writeMem(0x69f9, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc0ca, gbc.sp());
        EXPECT(0x69fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03BE
        gbc.setState(0x18, 0x8078, 0xbce0, 0xab3a, 0x23d1, 0xea02, 0x0, 0x0);
        gbc.writeMem(0x18, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8078, gbc.sp());
        EXPECT(0x1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03BF
        gbc.setState(0x95eb, 0xa4d1, 0xd890, 0x46fa, 0x94f, 0xccc5, 0x1, 0x0);
        gbc.writeMem(0x95eb, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa4d1, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95eb));
        EXPECT(0x57, gbc.readMem(0x95ec));
        // CB 57 03C0
        gbc.setState(0xdc66, 0x7471, 0xbdd0, 0xa088, 0xa057, 0xa968, 0x1, 0x0);
        gbc.writeMem(0xdc66, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7471, gbc.sp());
        EXPECT(0xdc68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc66));
        EXPECT(0x57, gbc.readMem(0xdc67));
        // CB 57 03C1
        gbc.setState(0x399, 0x709a, 0xe00, 0x90d1, 0x857f, 0xf550, 0x1, 0x0);
        gbc.writeMem(0x399, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x709a, gbc.sp());
        EXPECT(0x39b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03C2
        gbc.setState(0xc34b, 0xe2ff, 0x84e0, 0xc418, 0xd734, 0x34a6, 0x1, 0x1);
        gbc.writeMem(0xc34b, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe2ff, gbc.sp());
        EXPECT(0xc34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34b));
        EXPECT(0x57, gbc.readMem(0xc34c));
        // CB 57 03C3
        gbc.setState(0xd952, 0xc7d1, 0x52c0, 0x300, 0xb3ed, 0x5bcc, 0x1, 0x1);
        gbc.writeMem(0xd952, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc7d1, gbc.sp());
        EXPECT(0xd954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd952));
        EXPECT(0x57, gbc.readMem(0xd953));
        // CB 57 03C4
        gbc.setState(0xddf7, 0x46f0, 0xf5a0, 0xdf64, 0x9d18, 0x46dc, 0x1, 0x1);
        gbc.writeMem(0xddf7, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x46f0, gbc.sp());
        EXPECT(0xddf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf7));
        EXPECT(0x57, gbc.readMem(0xddf8));
        // CB 57 03C5
        gbc.setState(0x3bb0, 0x5b63, 0x7f20, 0xef77, 0x4172, 0xc941, 0x0, 0x1);
        gbc.writeMem(0x3bb0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5b63, gbc.sp());
        EXPECT(0x3bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03C6
        gbc.setState(0xee71, 0x7d1a, 0x3b70, 0xce4f, 0x4eb5, 0xdbf3, 0x1, 0x0);
        gbc.writeMem(0xee71, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7d1a, gbc.sp());
        EXPECT(0xee73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee71));
        EXPECT(0x57, gbc.readMem(0xee72));
        // CB 57 03C7
        gbc.setState(0x6561, 0x6a76, 0xc300, 0x6354, 0xe20e, 0x3576, 0x0, 0x1);
        gbc.writeMem(0x6561, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6a76, gbc.sp());
        EXPECT(0x6563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03C8
        gbc.setState(0x949e, 0xadef, 0xecc0, 0x846c, 0xd910, 0xa11a, 0x0, 0x0);
        gbc.writeMem(0x949e, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xadef, gbc.sp());
        EXPECT(0x94a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949e));
        EXPECT(0x57, gbc.readMem(0x949f));
        // CB 57 03C9
        gbc.setState(0xe329, 0x2cb3, 0xbf70, 0x4ad8, 0x25fa, 0xe46a, 0x0, 0x1);
        gbc.writeMem(0xe329, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2cb3, gbc.sp());
        EXPECT(0xe32b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe329));
        EXPECT(0x57, gbc.readMem(0xe32a));
        // CB 57 03CB
        gbc.setState(0xbf9d, 0x5595, 0x43d0, 0xfc6, 0x9d3b, 0xef83, 0x0, 0x1);
        gbc.writeMem(0xbf9d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0xbf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9d));
        EXPECT(0x57, gbc.readMem(0xbf9e));
        // CB 57 03CC
        gbc.setState(0x43bd, 0xdbf7, 0x80d0, 0xe518, 0xb4d6, 0x1600, 0x1, 0x0);
        gbc.writeMem(0x43bd, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdbf7, gbc.sp());
        EXPECT(0x43bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03CD
        gbc.setState(0xa17c, 0xe201, 0x29f0, 0x9ff7, 0xb0c, 0x54a5, 0x1, 0x1);
        gbc.writeMem(0xa17c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe201, gbc.sp());
        EXPECT(0xa17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa17c));
        EXPECT(0x57, gbc.readMem(0xa17d));
        // CB 57 03CE
        gbc.setState(0x9ede, 0x6058, 0x6c10, 0x7a4e, 0xaf3, 0x96b5, 0x0, 0x1);
        gbc.writeMem(0x9ede, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6058, gbc.sp());
        EXPECT(0x9ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ede));
        EXPECT(0x57, gbc.readMem(0x9edf));
        // CB 57 03CF
        gbc.setState(0xa89c, 0x4f1b, 0xa670, 0x3c95, 0xd19f, 0xea34, 0x0, 0x1);
        gbc.writeMem(0xa89c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4f1b, gbc.sp());
        EXPECT(0xa89e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89c));
        EXPECT(0x57, gbc.readMem(0xa89d));
        // CB 57 03D0
        gbc.setState(0x76a, 0x7f91, 0xb3a0, 0x749a, 0x5c04, 0xdc7, 0x1, 0x1);
        gbc.writeMem(0x76a, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7f91, gbc.sp());
        EXPECT(0x76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03D1
        gbc.setState(0x2fe1, 0xa92f, 0x5d80, 0x2dcb, 0xe7c3, 0xbbdc, 0x1, 0x0);
        gbc.writeMem(0x2fe1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa92f, gbc.sp());
        EXPECT(0x2fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03D2
        gbc.setState(0x9d9f, 0xc4d9, 0x1060, 0xd484, 0xa9f4, 0xc31c, 0x0, 0x0);
        gbc.writeMem(0x9d9f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc4d9, gbc.sp());
        EXPECT(0x9da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9f));
        EXPECT(0x57, gbc.readMem(0x9da0));
        // CB 57 03D3
        gbc.setState(0x87b0, 0xceec, 0x180, 0x8adb, 0xd194, 0xe8e7, 0x1, 0x0);
        gbc.writeMem(0x87b0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xceec, gbc.sp());
        EXPECT(0x87b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b0));
        EXPECT(0x57, gbc.readMem(0x87b1));
        // CB 57 03D4
        gbc.setState(0x7d29, 0x9ab5, 0x4630, 0xb649, 0xe25c, 0x89a3, 0x0, 0x1);
        gbc.writeMem(0x7d29, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9ab5, gbc.sp());
        EXPECT(0x7d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03D5
        gbc.setState(0xed, 0xdd8d, 0x7e20, 0xff15, 0x37a0, 0x2d0f, 0x0, 0x1);
        gbc.writeMem(0xed, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdd8d, gbc.sp());
        EXPECT(0xef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03D6
        gbc.setState(0xc66c, 0x5267, 0xa380, 0xfc1d, 0xe2ea, 0xeea8, 0x0, 0x0);
        gbc.writeMem(0xc66c, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5267, gbc.sp());
        EXPECT(0xc66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66c));
        EXPECT(0x57, gbc.readMem(0xc66d));
        // CB 57 03D7
        gbc.setState(0xdd0f, 0xbc95, 0x1f10, 0xad29, 0xb1e6, 0x6bc8, 0x1, 0x1);
        gbc.writeMem(0xdd0f, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbc95, gbc.sp());
        EXPECT(0xdd11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0f));
        EXPECT(0x57, gbc.readMem(0xdd10));
        // CB 57 03D8
        gbc.setState(0xd982, 0x90aa, 0x14c0, 0x825, 0x5151, 0xa2d8, 0x0, 0x1);
        gbc.writeMem(0xd982, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x90aa, gbc.sp());
        EXPECT(0xd984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd982));
        EXPECT(0x57, gbc.readMem(0xd983));
        // CB 57 03D9
        gbc.setState(0x29c8, 0x9fdf, 0x8360, 0x6e5a, 0x8ba0, 0xec74, 0x0, 0x0);
        gbc.writeMem(0x29c8, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9fdf, gbc.sp());
        EXPECT(0x29ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03DA
        gbc.setState(0x4d01, 0xce0e, 0x8a20, 0x82d9, 0x5f99, 0x15f5, 0x0, 0x0);
        gbc.writeMem(0x4d01, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xce0e, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03DB
        gbc.setState(0x1f5d, 0x1f9f, 0xfa60, 0xad78, 0x95f, 0x3bdd, 0x1, 0x1);
        gbc.writeMem(0x1f5d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1f9f, gbc.sp());
        EXPECT(0x1f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03DC
        gbc.setState(0xc3e6, 0xf074, 0x6b40, 0x3001, 0x34ea, 0xb76c, 0x1, 0x0);
        gbc.writeMem(0xc3e6, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf074, gbc.sp());
        EXPECT(0xc3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e6));
        EXPECT(0x57, gbc.readMem(0xc3e7));
        // CB 57 03DD
        gbc.setState(0x6374, 0x4817, 0x1140, 0x383f, 0x2fe0, 0x95fb, 0x0, 0x0);
        gbc.writeMem(0x6374, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4817, gbc.sp());
        EXPECT(0x6376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03DE
        gbc.setState(0xa5bc, 0x8071, 0x7ae0, 0x77af, 0x11ea, 0xaf2f, 0x0, 0x1);
        gbc.writeMem(0xa5bc, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8071, gbc.sp());
        EXPECT(0xa5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5bc));
        EXPECT(0x57, gbc.readMem(0xa5bd));
        // CB 57 03DF
        gbc.setState(0x89ad, 0xd53c, 0xb910, 0x5077, 0xd177, 0xb8e, 0x0, 0x0);
        gbc.writeMem(0x89ad, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd53c, gbc.sp());
        EXPECT(0x89af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ad));
        EXPECT(0x57, gbc.readMem(0x89ae));
        // CB 57 03E0
        gbc.setState(0xa3e5, 0x7622, 0x1b0, 0x4259, 0x9649, 0x976b, 0x1, 0x0);
        gbc.writeMem(0xa3e5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7622, gbc.sp());
        EXPECT(0xa3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e5));
        EXPECT(0x57, gbc.readMem(0xa3e6));
        // CB 57 03E1
        gbc.setState(0xd8d0, 0x1486, 0x5740, 0x2f6e, 0xa3c6, 0x73b4, 0x0, 0x0);
        gbc.writeMem(0xd8d0, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1486, gbc.sp());
        EXPECT(0xd8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d0));
        EXPECT(0x57, gbc.readMem(0xd8d1));
        // CB 57 03E2
        gbc.setState(0x56d5, 0x2212, 0x58e0, 0x1935, 0x4787, 0xd855, 0x1, 0x1);
        gbc.writeMem(0x56d5, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2212, gbc.sp());
        EXPECT(0x56d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03E3
        gbc.setState(0x6d75, 0x9678, 0x3f80, 0xa2b7, 0x6661, 0xb653, 0x0, 0x0);
        gbc.writeMem(0x6d75, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9678, gbc.sp());
        EXPECT(0x6d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 57 03E4
        gbc.setState(0x3096, 0x6218, 0x92b0, 0xea7d, 0xb92c, 0xbb4f, 0x0, 0x0);
        gbc.writeMem(0x3096, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6218, gbc.sp());
        EXPECT(0x3098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03E5
        gbc.setState(0xed0d, 0x4c69, 0x5840, 0xfb24, 0xb7f1, 0x5755, 0x0, 0x1);
        gbc.writeMem(0xed0d, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4c69, gbc.sp());
        EXPECT(0xed0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed0d));
        EXPECT(0x57, gbc.readMem(0xed0e));
        // CB 57 03E6
        gbc.setState(0x6911, 0x96a9, 0x9df0, 0xfcb2, 0x2709, 0x919c, 0x1, 0x1);
        gbc.writeMem(0x6911, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x96a9, gbc.sp());
        EXPECT(0x6913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 57 03E7
        gbc.setState(0xa9a1, 0x13cb, 0x44f0, 0x8336, 0x7390, 0x25d3, 0x0, 0x0);
        gbc.writeMem(0xa9a1, { 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x13cb, gbc.sp());
        EXPECT(0xa9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a1));
        EXPECT(0x57, gbc.readMem(0xa9a2));
    }
