    TEST(gbcemu, opcode_cb_9e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 9E 0000
        gbc.setState(0x459c, 0x5e4d, 0xd4e0, 0x679f, 0x6ddf, 0x98d8, 0x0, 0x1);
        gbc.writeMem(0x459c, { 0xcb, 0x9e });
        gbc.writeMem(0x98d8, { 0x97 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5e4d, gbc.sp());
        EXPECT(0x459e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x98d8));
        // CB 9E 0001
        gbc.setState(0xc412, 0x94c5, 0xb5d0, 0xd9fe, 0x46a2, 0x6f80, 0x1, 0x0);
        gbc.writeMem(0x6f80, { 0xd5 });
        gbc.writeMem(0xc412, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x94c5, gbc.sp());
        EXPECT(0xc414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc412));
        EXPECT(0x9e, gbc.readMem(0xc413));
        // CB 9E 0002
        gbc.setState(0xe910, 0x7eb6, 0x9f40, 0xe6ed, 0x53d, 0x597d, 0x0, 0x0);
        gbc.writeMem(0x597d, { 0xf2 });
        gbc.writeMem(0xe910, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7eb6, gbc.sp());
        EXPECT(0xe912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe910));
        EXPECT(0x9e, gbc.readMem(0xe911));
        // CB 9E 0003
        gbc.setState(0x635e, 0x7201, 0x4f0, 0x1337, 0x4f8, 0xab41, 0x1, 0x1);
        gbc.writeMem(0x635e, { 0xcb, 0x9e });
        gbc.writeMem(0xab41, { 0x23 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7201, gbc.sp());
        EXPECT(0x6360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xab41));
        // CB 9E 0004
        gbc.setState(0x10fb, 0x6649, 0x5450, 0xc45e, 0x95b9, 0xd107, 0x1, 0x0);
        gbc.writeMem(0x10fb, { 0xcb, 0x9e });
        gbc.writeMem(0xd107, { 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6649, gbc.sp());
        EXPECT(0x10fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd107));
        // CB 9E 0005
        gbc.setState(0xd4ef, 0xa78d, 0x5530, 0x39cb, 0x2351, 0x2616, 0x1, 0x0);
        gbc.writeMem(0x2616, { 0x95 });
        gbc.writeMem(0xd4ef, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa78d, gbc.sp());
        EXPECT(0xd4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ef));
        EXPECT(0x9e, gbc.readMem(0xd4f0));
        // CB 9E 0006
        gbc.setState(0xb34c, 0x6094, 0x25f0, 0x4df4, 0xda56, 0xa540, 0x0, 0x1);
        gbc.writeMem(0xa540, { 0xd1 });
        gbc.writeMem(0xb34c, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6094, gbc.sp());
        EXPECT(0xb34e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xa540));
        EXPECT(0xcb, gbc.readMem(0xb34c));
        EXPECT(0x9e, gbc.readMem(0xb34d));
        // CB 9E 0009
        gbc.setState(0xc2e7, 0x6d0c, 0x5790, 0x49ae, 0xaf4b, 0xc5dc, 0x1, 0x0);
        gbc.writeMem(0xc2e7, { 0xcb, 0x9e });
        gbc.writeMem(0xc5dc, { 0xf4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6d0c, gbc.sp());
        EXPECT(0xc2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e7));
        EXPECT(0x9e, gbc.readMem(0xc2e8));
        EXPECT(0xf4, gbc.readMem(0xc5dc));
        // CB 9E 000A
        gbc.setState(0x93a8, 0xa422, 0xd190, 0x1f7e, 0x3f00, 0x2ddc, 0x1, 0x1);
        gbc.writeMem(0x2ddc, { 0xa1 });
        gbc.writeMem(0x93a8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa422, gbc.sp());
        EXPECT(0x93aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a8));
        EXPECT(0x9e, gbc.readMem(0x93a9));
        // CB 9E 000C
        gbc.setState(0xdac8, 0xcbbc, 0xb0e0, 0x6b72, 0xc8c7, 0x1b39, 0x0, 0x1);
        gbc.writeMem(0x1b39, { 0xd1 });
        gbc.writeMem(0xdac8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcbbc, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac8));
        EXPECT(0x9e, gbc.readMem(0xdac9));
        // CB 9E 000D
        gbc.setState(0xef3b, 0xcf13, 0x6590, 0xfa2a, 0xc113, 0xcb91, 0x1, 0x0);
        gbc.writeMem(0xcb91, { 0x51 });
        gbc.writeMem(0xef3b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcf13, gbc.sp());
        EXPECT(0xef3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcb91));
        EXPECT(0xcb, gbc.readMem(0xef3b));
        EXPECT(0x9e, gbc.readMem(0xef3c));
        // CB 9E 000E
        gbc.setState(0xcada, 0x5cc9, 0x31b0, 0x7c59, 0xd3ea, 0xdeaf, 0x0, 0x0);
        gbc.writeMem(0xcada, { 0xcb, 0x9e });
        gbc.writeMem(0xdeaf, { 0xe5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5cc9, gbc.sp());
        EXPECT(0xcadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcada));
        EXPECT(0x9e, gbc.readMem(0xcadb));
        EXPECT(0xe5, gbc.readMem(0xdeaf));
        // CB 9E 000F
        gbc.setState(0xe5b3, 0x93bb, 0x7e0, 0x40a5, 0xb7ca, 0xcd52, 0x0, 0x1);
        gbc.writeMem(0xcd52, { 0x36 });
        gbc.writeMem(0xe5b3, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x93bb, gbc.sp());
        EXPECT(0xe5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xcd52));
        EXPECT(0xcb, gbc.readMem(0xe5b3));
        EXPECT(0x9e, gbc.readMem(0xe5b4));
        // CB 9E 0012
        gbc.setState(0x5058, 0x5058, 0x2350, 0xea91, 0xcb09, 0x9170, 0x0, 0x0);
        gbc.writeMem(0x5058, { 0xcb, 0x9e });
        gbc.writeMem(0x9170, { 0x45 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5058, gbc.sp());
        EXPECT(0x505a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9170));
        // CB 9E 0016
        gbc.setState(0x4ffe, 0x6f03, 0x8aa0, 0x1211, 0x638e, 0xd9d3, 0x1, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0x9e });
        gbc.writeMem(0xd9d3, { 0xab });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6f03, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd9d3));
        // CB 9E 0017
        gbc.setState(0x236c, 0x3e2e, 0x9fc0, 0x2233, 0xf0f, 0x702, 0x0, 0x1);
        gbc.writeMem(0x702, { 0x64 });
        gbc.writeMem(0x236c, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3e2e, gbc.sp());
        EXPECT(0x236e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0018
        gbc.setState(0x9bf6, 0xf4d6, 0x94f0, 0xbab2, 0x4fff, 0x9bef, 0x1, 0x1);
        gbc.writeMem(0x9bef, { 0x4e });
        gbc.writeMem(0x9bf6, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf4d6, gbc.sp());
        EXPECT(0x9bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x9bef));
        EXPECT(0xcb, gbc.readMem(0x9bf6));
        EXPECT(0x9e, gbc.readMem(0x9bf7));
        // CB 9E 001A
        gbc.setState(0x2ba2, 0xceaa, 0xd3c0, 0x9cdc, 0x68d4, 0x6dc5, 0x0, 0x1);
        gbc.writeMem(0x2ba2, { 0xcb, 0x9e });
        gbc.writeMem(0x6dc5, { 0xe5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xceaa, gbc.sp());
        EXPECT(0x2ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 001B
        gbc.setState(0x3685, 0x8d70, 0x3950, 0x3209, 0xddff, 0x217a, 0x0, 0x1);
        gbc.writeMem(0x217a, { 0x65 });
        gbc.writeMem(0x3685, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8d70, gbc.sp());
        EXPECT(0x3687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 001D
        gbc.setState(0x946e, 0x396d, 0x12c0, 0xabfa, 0x802d, 0x35a9, 0x1, 0x1);
        gbc.writeMem(0x35a9, { 0x64 });
        gbc.writeMem(0x946e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x396d, gbc.sp());
        EXPECT(0x9470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946e));
        EXPECT(0x9e, gbc.readMem(0x946f));
        // CB 9E 001E
        gbc.setState(0x454b, 0xac57, 0xc0b0, 0x3448, 0x363f, 0xb3c1, 0x0, 0x1);
        gbc.writeMem(0x454b, { 0xcb, 0x9e });
        gbc.writeMem(0xb3c1, { 0xba });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xac57, gbc.sp());
        EXPECT(0x454d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb3c1));
        // CB 9E 001F
        gbc.setState(0x9e97, 0x35c3, 0xcd80, 0x9192, 0x3769, 0x8fb6, 0x1, 0x0);
        gbc.writeMem(0x8fb6, { 0xf9 });
        gbc.writeMem(0x9e97, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x35c3, gbc.sp());
        EXPECT(0x9e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8fb6));
        EXPECT(0xcb, gbc.readMem(0x9e97));
        EXPECT(0x9e, gbc.readMem(0x9e98));
        // CB 9E 0020
        gbc.setState(0x5921, 0x8a20, 0x7ff0, 0xae3, 0x3c28, 0x804d, 0x1, 0x1);
        gbc.writeMem(0x5921, { 0xcb, 0x9e });
        gbc.writeMem(0x804d, { 0x69 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8a20, gbc.sp());
        EXPECT(0x5923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x804d));
        // CB 9E 0021
        gbc.setState(0x1ac3, 0xbdfd, 0x4550, 0x69e2, 0x826a, 0x4d70, 0x0, 0x0);
        gbc.writeMem(0x1ac3, { 0xcb, 0x9e });
        gbc.writeMem(0x4d70, { 0x24 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbdfd, gbc.sp());
        EXPECT(0x1ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0025
        gbc.setState(0x8329, 0xb6f3, 0x39e0, 0x5e35, 0x8da2, 0xc80e, 0x0, 0x0);
        gbc.writeMem(0x8329, { 0xcb, 0x9e });
        gbc.writeMem(0xc80e, { 0xd9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb6f3, gbc.sp());
        EXPECT(0x832b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8329));
        EXPECT(0x9e, gbc.readMem(0x832a));
        EXPECT(0xd1, gbc.readMem(0xc80e));
        // CB 9E 0026
        gbc.setState(0xa702, 0x5632, 0xb980, 0x4a52, 0xeec1, 0x2bab, 0x0, 0x0);
        gbc.writeMem(0x2bab, { 0xf4 });
        gbc.writeMem(0xa702, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5632, gbc.sp());
        EXPECT(0xa704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa702));
        EXPECT(0x9e, gbc.readMem(0xa703));
        // CB 9E 0027
        gbc.setState(0x45c1, 0x9300, 0xd680, 0x81a7, 0x2c40, 0x7421, 0x0, 0x1);
        gbc.writeMem(0x45c1, { 0xcb, 0x9e });
        gbc.writeMem(0x7421, { 0x36 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9300, gbc.sp());
        EXPECT(0x45c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0028
        gbc.setState(0xd329, 0xf91c, 0x2da0, 0xa1f3, 0xbd3c, 0x1ccd, 0x0, 0x1);
        gbc.writeMem(0x1ccd, { 0xc4 });
        gbc.writeMem(0xd329, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf91c, gbc.sp());
        EXPECT(0xd32b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd329));
        EXPECT(0x9e, gbc.readMem(0xd32a));
        // CB 9E 002B
        gbc.setState(0x4535, 0x145f, 0xea0, 0x82df, 0x1e8, 0x205c, 0x1, 0x0);
        gbc.writeMem(0x205c, { 0xa2 });
        gbc.writeMem(0x4535, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x145f, gbc.sp());
        EXPECT(0x4537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0030
        gbc.setState(0xb5db, 0x6007, 0xf970, 0xbeab, 0x2996, 0xfba3, 0x0, 0x1);
        gbc.writeMem(0xb5db, { 0xcb, 0x9e });
        gbc.writeMem(0xfba3, { 0x87 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6007, gbc.sp());
        EXPECT(0xb5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5db));
        EXPECT(0x9e, gbc.readMem(0xb5dc));
        EXPECT(0x87, gbc.readMem(0xfba3));
        // CB 9E 0031
        gbc.setState(0xcb, 0x80b9, 0x7d30, 0x4b1f, 0x7f23, 0x8b21, 0x0, 0x1);
        gbc.writeMem(0xcb, { 0xcb, 0x9e });
        gbc.writeMem(0x8b21, { 0x7f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x80b9, gbc.sp());
        EXPECT(0xcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8b21));
        // CB 9E 0032
        gbc.setState(0x7e64, 0x816a, 0x93e0, 0xdadf, 0x4007, 0x65c7, 0x0, 0x1);
        gbc.writeMem(0x65c7, { 0x55 });
        gbc.writeMem(0x7e64, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x816a, gbc.sp());
        EXPECT(0x7e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0033
        gbc.setState(0xb02e, 0x6fa6, 0x5c10, 0x5ee6, 0x3aa6, 0x6f1b, 0x1, 0x1);
        gbc.writeMem(0x6f1b, { 0xb6 });
        gbc.writeMem(0xb02e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6fa6, gbc.sp());
        EXPECT(0xb030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02e));
        EXPECT(0x9e, gbc.readMem(0xb02f));
        // CB 9E 0035
        gbc.setState(0x5a87, 0xfd77, 0x3540, 0xaea7, 0x5d9, 0x5c71, 0x0, 0x1);
        gbc.writeMem(0x5a87, { 0xcb, 0x9e });
        gbc.writeMem(0x5c71, { 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfd77, gbc.sp());
        EXPECT(0x5a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0036
        gbc.setState(0xdb86, 0xf08c, 0x56a0, 0x1ac1, 0xc648, 0x59c3, 0x0, 0x1);
        gbc.writeMem(0x59c3, { 0x51 });
        gbc.writeMem(0xdb86, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf08c, gbc.sp());
        EXPECT(0xdb88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb86));
        EXPECT(0x9e, gbc.readMem(0xdb87));
        // CB 9E 0037
        gbc.setState(0xee7d, 0xba13, 0x9080, 0xadfa, 0xe8b5, 0x86c8, 0x0, 0x0);
        gbc.writeMem(0x86c8, { 0x65 });
        gbc.writeMem(0xee7d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xba13, gbc.sp());
        EXPECT(0xee7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x86c8));
        EXPECT(0xcb, gbc.readMem(0xee7d));
        EXPECT(0x9e, gbc.readMem(0xee7e));
        // CB 9E 0038
        gbc.setState(0x9b0b, 0x226, 0xbc20, 0xae6f, 0xad7f, 0x21f0, 0x1, 0x0);
        gbc.writeMem(0x21f0, { 0x83 });
        gbc.writeMem(0x9b0b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x226, gbc.sp());
        EXPECT(0x9b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0b));
        EXPECT(0x9e, gbc.readMem(0x9b0c));
        // CB 9E 0039
        gbc.setState(0x598f, 0xe909, 0x7ff0, 0xdd3e, 0x547a, 0x1d9c, 0x1, 0x1);
        gbc.writeMem(0x1d9c, { 0xf6 });
        gbc.writeMem(0x598f, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe909, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 003A
        gbc.setState(0x6dbc, 0x38c0, 0x8490, 0xe165, 0x6b1d, 0x8b2d, 0x1, 0x1);
        gbc.writeMem(0x6dbc, { 0xcb, 0x9e });
        gbc.writeMem(0x8b2d, { 0x9b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x38c0, gbc.sp());
        EXPECT(0x6dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8b2d));
        // CB 9E 003D
        gbc.setState(0x7d74, 0x2c12, 0x4cc0, 0x43ac, 0xe9b, 0xe6ad, 0x1, 0x0);
        gbc.writeMem(0x7d74, { 0xcb, 0x9e });
        gbc.writeMem(0xe6ad, { 0xd3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2c12, gbc.sp());
        EXPECT(0x7d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xe6ad));
        // CB 9E 003E
        gbc.setState(0x33f6, 0x3ded, 0x80, 0x7fa, 0xc292, 0xa81b, 0x1, 0x0);
        gbc.writeMem(0x33f6, { 0xcb, 0x9e });
        gbc.writeMem(0xa81b, { 0x12 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3ded, gbc.sp());
        EXPECT(0x33f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa81b));
        // CB 9E 0040
        gbc.setState(0x6ecd, 0xb56f, 0xf150, 0xa13e, 0xf554, 0xd6c5, 0x0, 0x0);
        gbc.writeMem(0x6ecd, { 0xcb, 0x9e });
        gbc.writeMem(0xd6c5, { 0x44 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb56f, gbc.sp());
        EXPECT(0x6ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd6c5));
        // CB 9E 0041
        gbc.setState(0xce24, 0x4751, 0x48d0, 0x7eb8, 0xb5ae, 0x9130, 0x0, 0x1);
        gbc.writeMem(0x9130, { 0x82 });
        gbc.writeMem(0xce24, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4751, gbc.sp());
        EXPECT(0xce26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9130));
        EXPECT(0xcb, gbc.readMem(0xce24));
        EXPECT(0x9e, gbc.readMem(0xce25));
        // CB 9E 0042
        gbc.setState(0x53c4, 0x827d, 0xdc30, 0x58c2, 0x9b85, 0x9055, 0x0, 0x0);
        gbc.writeMem(0x53c4, { 0xcb, 0x9e });
        gbc.writeMem(0x9055, { 0x10 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x827d, gbc.sp());
        EXPECT(0x53c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9055));
        // CB 9E 0044
        gbc.setState(0x51fb, 0x5911, 0xa9c0, 0x457f, 0xd15b, 0xa5b5, 0x0, 0x1);
        gbc.writeMem(0x51fb, { 0xcb, 0x9e });
        gbc.writeMem(0xa5b5, { 0xc5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5911, gbc.sp());
        EXPECT(0x51fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa5b5));
        // CB 9E 0047
        gbc.setState(0xdaa6, 0xb5e6, 0xf40, 0xae73, 0xa772, 0x9026, 0x0, 0x0);
        gbc.writeMem(0x9026, { 0x36 });
        gbc.writeMem(0xdaa6, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb5e6, gbc.sp());
        EXPECT(0xdaa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9026));
        EXPECT(0xcb, gbc.readMem(0xdaa6));
        EXPECT(0x9e, gbc.readMem(0xdaa7));
        // CB 9E 0049
        gbc.setState(0x7ec0, 0x1a73, 0xb1d0, 0x4880, 0xfd15, 0x9ac5, 0x1, 0x0);
        gbc.writeMem(0x7ec0, { 0xcb, 0x9e });
        gbc.writeMem(0x9ac5, { 0x6e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1a73, gbc.sp());
        EXPECT(0x7ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9ac5));
        // CB 9E 004A
        gbc.setState(0x6d98, 0x956, 0x9a0, 0x8ab2, 0xa8eb, 0xdb97, 0x1, 0x1);
        gbc.writeMem(0x6d98, { 0xcb, 0x9e });
        gbc.writeMem(0xdb97, { 0x2b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x956, gbc.sp());
        EXPECT(0x6d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xdb97));
        // CB 9E 004C
        gbc.setState(0x8f73, 0xaf72, 0x7e70, 0x747d, 0x6f96, 0x3b36, 0x0, 0x0);
        gbc.writeMem(0x3b36, { 0x77 });
        gbc.writeMem(0x8f73, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaf72, gbc.sp());
        EXPECT(0x8f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f73));
        EXPECT(0x9e, gbc.readMem(0x8f74));
        // CB 9E 004D
        gbc.setState(0x5b32, 0x1ce1, 0xa4d0, 0x107, 0x32ac, 0x946d, 0x1, 0x0);
        gbc.writeMem(0x5b32, { 0xcb, 0x9e });
        gbc.writeMem(0x946d, { 0xf3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1ce1, gbc.sp());
        EXPECT(0x5b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x946d));
        // CB 9E 004E
        gbc.setState(0xe861, 0x760e, 0x64d0, 0xc6a7, 0xfba5, 0x773e, 0x0, 0x1);
        gbc.writeMem(0x773e, { 0x75 });
        gbc.writeMem(0xe861, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x760e, gbc.sp());
        EXPECT(0xe863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe861));
        EXPECT(0x9e, gbc.readMem(0xe862));
        // CB 9E 004F
        gbc.setState(0x7c93, 0x9804, 0x6af0, 0x6af4, 0x8bba, 0xcd56, 0x0, 0x0);
        gbc.writeMem(0x7c93, { 0xcb, 0x9e });
        gbc.writeMem(0xcd56, { 0x5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9804, gbc.sp());
        EXPECT(0x7c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcd56));
        // CB 9E 0051
        gbc.setState(0xc735, 0x86b5, 0x6eb0, 0x9d51, 0xf57a, 0x9c03, 0x1, 0x0);
        gbc.writeMem(0x9c03, { 0xb8 });
        gbc.writeMem(0xc735, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x86b5, gbc.sp());
        EXPECT(0xc737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9c03));
        EXPECT(0xcb, gbc.readMem(0xc735));
        EXPECT(0x9e, gbc.readMem(0xc736));
        // CB 9E 0052
        gbc.setState(0x1e3f, 0xb6f9, 0x88e0, 0x5b08, 0x42d0, 0x4e56, 0x0, 0x0);
        gbc.writeMem(0x1e3f, { 0xcb, 0x9e });
        gbc.writeMem(0x4e56, { 0xf0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb6f9, gbc.sp());
        EXPECT(0x1e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0053
        gbc.setState(0xd67e, 0xe010, 0x20d0, 0x6e66, 0x3986, 0xc024, 0x0, 0x0);
        gbc.writeMem(0xc024, { 0xff });
        gbc.writeMem(0xd67e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0xd680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xc024));
        EXPECT(0xcb, gbc.readMem(0xd67e));
        EXPECT(0x9e, gbc.readMem(0xd67f));
        // CB 9E 0055
        gbc.setState(0x7a84, 0xd785, 0x5750, 0xf900, 0x4fa7, 0xbef8, 0x0, 0x0);
        gbc.writeMem(0x7a84, { 0xcb, 0x9e });
        gbc.writeMem(0xbef8, { 0x58 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd785, gbc.sp());
        EXPECT(0x7a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbef8));
        // CB 9E 0056
        gbc.setState(0x98d8, 0xa61b, 0x4200, 0x826, 0xe88b, 0x9466, 0x1, 0x1);
        gbc.writeMem(0x9466, { 0x9f });
        gbc.writeMem(0x98d8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa61b, gbc.sp());
        EXPECT(0x98da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9466));
        EXPECT(0xcb, gbc.readMem(0x98d8));
        EXPECT(0x9e, gbc.readMem(0x98d9));
        // CB 9E 0058
        gbc.setState(0x64e4, 0x9dfc, 0xf410, 0x9af2, 0x9059, 0x233a, 0x0, 0x0);
        gbc.writeMem(0x233a, { 0xe1 });
        gbc.writeMem(0x64e4, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9dfc, gbc.sp());
        EXPECT(0x64e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0059
        gbc.setState(0x3464, 0xf7de, 0xff0, 0xcc93, 0x18d3, 0x5dc5, 0x1, 0x1);
        gbc.writeMem(0x3464, { 0xcb, 0x9e });
        gbc.writeMem(0x5dc5, { 0xd5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf7de, gbc.sp());
        EXPECT(0x3466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 005A
        gbc.setState(0xc6fe, 0xf9a, 0xec90, 0xe8ca, 0xccd8, 0xb354, 0x1, 0x0);
        gbc.writeMem(0xb354, { 0xae });
        gbc.writeMem(0xc6fe, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf9a, gbc.sp());
        EXPECT(0xc700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb354));
        EXPECT(0xcb, gbc.readMem(0xc6fe));
        EXPECT(0x9e, gbc.readMem(0xc6ff));
        // CB 9E 005B
        gbc.setState(0x1d4c, 0xdd4c, 0x94e0, 0x15a1, 0x5544, 0xa02c, 0x1, 0x1);
        gbc.writeMem(0x1d4c, { 0xcb, 0x9e });
        gbc.writeMem(0xa02c, { 0x25 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdd4c, gbc.sp());
        EXPECT(0x1d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa02c));
        // CB 9E 005C
        gbc.setState(0xe871, 0x1200, 0x47b0, 0x41eb, 0x30d8, 0x7323, 0x1, 0x1);
        gbc.writeMem(0x7323, { 0x52 });
        gbc.writeMem(0xe871, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1200, gbc.sp());
        EXPECT(0xe873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe871));
        EXPECT(0x9e, gbc.readMem(0xe872));
        // CB 9E 005E
        gbc.setState(0x12cf, 0x8fbb, 0xad40, 0x3932, 0xe837, 0xcc9e, 0x1, 0x1);
        gbc.writeMem(0x12cf, { 0xcb, 0x9e });
        gbc.writeMem(0xcc9e, { 0x41 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8fbb, gbc.sp());
        EXPECT(0x12d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xcc9e));
        // CB 9E 0061
        gbc.setState(0x3f6a, 0x163e, 0x9bf0, 0x1932, 0x247c, 0xddaf, 0x0, 0x0);
        gbc.writeMem(0x3f6a, { 0xcb, 0x9e });
        gbc.writeMem(0xddaf, { 0x41 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x163e, gbc.sp());
        EXPECT(0x3f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xddaf));
        // CB 9E 0064
        gbc.setState(0x326, 0xc50b, 0xd460, 0xe715, 0x908d, 0x47a1, 0x0, 0x1);
        gbc.writeMem(0x326, { 0xcb, 0x9e });
        gbc.writeMem(0x47a1, { 0x23 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc50b, gbc.sp());
        EXPECT(0x328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0065
        gbc.setState(0xb08a, 0x2d27, 0x99c0, 0x95e9, 0x15f9, 0xd70a, 0x1, 0x1);
        gbc.writeMem(0xb08a, { 0xcb, 0x9e });
        gbc.writeMem(0xd70a, { 0xfd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2d27, gbc.sp());
        EXPECT(0xb08c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08a));
        EXPECT(0x9e, gbc.readMem(0xb08b));
        EXPECT(0xf5, gbc.readMem(0xd70a));
        // CB 9E 0067
        gbc.setState(0xd8fe, 0x6c19, 0x6200, 0xd30, 0x9d38, 0xa951, 0x0, 0x1);
        gbc.writeMem(0xa951, { 0x29 });
        gbc.writeMem(0xd8fe, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6c19, gbc.sp());
        EXPECT(0xd900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa951));
        EXPECT(0xcb, gbc.readMem(0xd8fe));
        EXPECT(0x9e, gbc.readMem(0xd8ff));
        // CB 9E 0068
        gbc.setState(0x3857, 0xb478, 0xbd30, 0x5f1a, 0x6b0b, 0x515, 0x1, 0x1);
        gbc.writeMem(0x515, { 0xe2 });
        gbc.writeMem(0x3857, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb478, gbc.sp());
        EXPECT(0x3859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 006A
        gbc.setState(0x4993, 0x4c6f, 0x90c0, 0xd3ab, 0x24c1, 0x8e7e, 0x1, 0x1);
        gbc.writeMem(0x4993, { 0xcb, 0x9e });
        gbc.writeMem(0x8e7e, { 0x2f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4c6f, gbc.sp());
        EXPECT(0x4995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8e7e));
        // CB 9E 006B
        gbc.setState(0xc120, 0xcd57, 0x3d80, 0x7cfa, 0xc0e9, 0x257f, 0x1, 0x1);
        gbc.writeMem(0x257f, { 0x6 });
        gbc.writeMem(0xc120, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcd57, gbc.sp());
        EXPECT(0xc122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc120));
        EXPECT(0x9e, gbc.readMem(0xc121));
        // CB 9E 006C
        gbc.setState(0x5d0e, 0x6f66, 0xb460, 0x6c92, 0xbba1, 0x9aa4, 0x1, 0x1);
        gbc.writeMem(0x5d0e, { 0xcb, 0x9e });
        gbc.writeMem(0x9aa4, { 0xcf });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6f66, gbc.sp());
        EXPECT(0x5d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9aa4));
        // CB 9E 006E
        gbc.setState(0x2227, 0x91b5, 0xb500, 0x1b51, 0x89c0, 0xc9a3, 0x0, 0x0);
        gbc.writeMem(0x2227, { 0xcb, 0x9e });
        gbc.writeMem(0xc9a3, { 0x35 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0x2229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc9a3));
        // CB 9E 006F
        gbc.setState(0x582a, 0x674a, 0xa470, 0xd59a, 0x55ee, 0xb38f, 0x1, 0x0);
        gbc.writeMem(0x582a, { 0xcb, 0x9e });
        gbc.writeMem(0xb38f, { 0x31 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x674a, gbc.sp());
        EXPECT(0x582c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb38f));
        // CB 9E 0070
        gbc.setState(0x3224, 0xf5f, 0xa90, 0xaefd, 0xe457, 0xecd4, 0x1, 0x0);
        gbc.writeMem(0x3224, { 0xcb, 0x9e });
        gbc.writeMem(0xecd4, { 0x21 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf5f, gbc.sp());
        EXPECT(0x3226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xecd4));
        // CB 9E 0071
        gbc.setState(0x4631, 0x9af4, 0x540, 0x79a8, 0xfae5, 0x8c13, 0x1, 0x0);
        gbc.writeMem(0x4631, { 0xcb, 0x9e });
        gbc.writeMem(0x8c13, { 0x5a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9af4, gbc.sp());
        EXPECT(0x4633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8c13));
        // CB 9E 0072
        gbc.setState(0xc8d1, 0x434c, 0x4c90, 0xe43, 0x2b0f, 0x81bb, 0x1, 0x1);
        gbc.writeMem(0x81bb, { 0x2b });
        gbc.writeMem(0xc8d1, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x434c, gbc.sp());
        EXPECT(0xc8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x81bb));
        EXPECT(0xcb, gbc.readMem(0xc8d1));
        EXPECT(0x9e, gbc.readMem(0xc8d2));
        // CB 9E 0074
        gbc.setState(0x4d30, 0xb594, 0x4f40, 0x66a2, 0xc60a, 0x7756, 0x1, 0x0);
        gbc.writeMem(0x4d30, { 0xcb, 0x9e });
        gbc.writeMem(0x7756, { 0xa3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb594, gbc.sp());
        EXPECT(0x4d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0075
        gbc.setState(0x3648, 0x83b9, 0x2540, 0xbb7a, 0xa90f, 0x8015, 0x1, 0x1);
        gbc.writeMem(0x3648, { 0xcb, 0x9e });
        gbc.writeMem(0x8015, { 0x83 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x83b9, gbc.sp());
        EXPECT(0x364a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x8015));
        // CB 9E 0077
        gbc.setState(0x32b0, 0x5d91, 0x4720, 0x819b, 0xade3, 0x185c, 0x0, 0x0);
        gbc.writeMem(0x185c, { 0xf7 });
        gbc.writeMem(0x32b0, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5d91, gbc.sp());
        EXPECT(0x32b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 007A
        gbc.setState(0xded5, 0x15f3, 0xed60, 0xc8e8, 0x2c3b, 0x9bc4, 0x0, 0x0);
        gbc.writeMem(0x9bc4, { 0x69 });
        gbc.writeMem(0xded5, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x15f3, gbc.sp());
        EXPECT(0xded7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9bc4));
        EXPECT(0xcb, gbc.readMem(0xded5));
        EXPECT(0x9e, gbc.readMem(0xded6));
        // CB 9E 007B
        gbc.setState(0xd239, 0x3fdc, 0x1020, 0x1202, 0xedc7, 0xd25e, 0x1, 0x0);
        gbc.writeMem(0xd239, { 0xcb, 0x9e });
        gbc.writeMem(0xd25e, { 0x5b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3fdc, gbc.sp());
        EXPECT(0xd23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd239));
        EXPECT(0x9e, gbc.readMem(0xd23a));
        EXPECT(0x53, gbc.readMem(0xd25e));
        // CB 9E 007C
        gbc.setState(0x7f03, 0x66dc, 0xa390, 0x8486, 0x9e8, 0x9249, 0x1, 0x1);
        gbc.writeMem(0x7f03, { 0xcb, 0x9e });
        gbc.writeMem(0x9249, { 0x83 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x66dc, gbc.sp());
        EXPECT(0x7f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x9249));
        // CB 9E 007E
        gbc.setState(0xedc7, 0xb8fd, 0x21b0, 0xec53, 0x9123, 0x506e, 0x0, 0x0);
        gbc.writeMem(0x506e, { 0xd6 });
        gbc.writeMem(0xedc7, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb8fd, gbc.sp());
        EXPECT(0xedc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc7));
        EXPECT(0x9e, gbc.readMem(0xedc8));
        // CB 9E 0083
        gbc.setState(0x115e, 0x4b0b, 0x6fd0, 0x68a4, 0xf2a5, 0xf773, 0x0, 0x0);
        gbc.writeMem(0x115e, { 0xcb, 0x9e });
        gbc.writeMem(0xf773, { 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4b0b, gbc.sp());
        EXPECT(0x1160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xf773));
        // CB 9E 0084
        gbc.setState(0xa713, 0xf802, 0xb790, 0xade3, 0x616, 0x3207, 0x1, 0x1);
        gbc.writeMem(0x3207, { 0x45 });
        gbc.writeMem(0xa713, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf802, gbc.sp());
        EXPECT(0xa715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa713));
        EXPECT(0x9e, gbc.readMem(0xa714));
        // CB 9E 0085
        gbc.setState(0x7a24, 0xa20e, 0x2c70, 0x321c, 0xac5e, 0x107e, 0x1, 0x0);
        gbc.writeMem(0x107e, { 0x65 });
        gbc.writeMem(0x7a24, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa20e, gbc.sp());
        EXPECT(0x7a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0086
        gbc.setState(0xc8da, 0xd3fb, 0x3e90, 0xb3d, 0x4936, 0xc5e9, 0x1, 0x0);
        gbc.writeMem(0xc5e9, { 0xe2 });
        gbc.writeMem(0xc8da, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd3fb, gbc.sp());
        EXPECT(0xc8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc5e9));
        EXPECT(0xcb, gbc.readMem(0xc8da));
        EXPECT(0x9e, gbc.readMem(0xc8db));
        // CB 9E 0087
        gbc.setState(0x5d25, 0xcc3d, 0xc4c0, 0x2c83, 0xe8d, 0xbe25, 0x0, 0x1);
        gbc.writeMem(0x5d25, { 0xcb, 0x9e });
        gbc.writeMem(0xbe25, { 0xcb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcc3d, gbc.sp());
        EXPECT(0x5d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbe25));
        // CB 9E 0088
        gbc.setState(0xa9f3, 0x77f5, 0x22b0, 0x3485, 0x1b51, 0xd6cc, 0x1, 0x1);
        gbc.writeMem(0xa9f3, { 0xcb, 0x9e });
        gbc.writeMem(0xd6cc, { 0xb0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x77f5, gbc.sp());
        EXPECT(0xa9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f3));
        EXPECT(0x9e, gbc.readMem(0xa9f4));
        EXPECT(0xb0, gbc.readMem(0xd6cc));
        // CB 9E 0089
        gbc.setState(0x32dd, 0xbea6, 0x4e70, 0xe10b, 0x764, 0xec28, 0x1, 0x0);
        gbc.writeMem(0x32dd, { 0xcb, 0x9e });
        gbc.writeMem(0xec28, { 0x66 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbea6, gbc.sp());
        EXPECT(0x32df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xec28));
        // CB 9E 008A
        gbc.setState(0x8b7f, 0x82ef, 0xec30, 0xedfa, 0x6bd5, 0x1eab, 0x1, 0x0);
        gbc.writeMem(0x1eab, { 0x71 });
        gbc.writeMem(0x8b7f, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x82ef, gbc.sp());
        EXPECT(0x8b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7f));
        EXPECT(0x9e, gbc.readMem(0x8b80));
        // CB 9E 008D
        gbc.setState(0x5ded, 0xa3ba, 0x84e0, 0xe142, 0x671b, 0xfbb0, 0x0, 0x1);
        gbc.writeMem(0x5ded, { 0xcb, 0x9e });
        gbc.writeMem(0xfbb0, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0x5def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xfbb0));
        // CB 9E 008F
        gbc.setState(0x5146, 0x3b6f, 0xea50, 0xec45, 0xe1d9, 0xf6ef, 0x0, 0x1);
        gbc.writeMem(0x5146, { 0xcb, 0x9e });
        gbc.writeMem(0xf6ef, { 0x40 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3b6f, gbc.sp());
        EXPECT(0x5148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xf6ef));
        // CB 9E 0090
        gbc.setState(0xcd0d, 0xc6e8, 0x7b10, 0x52c4, 0x72f8, 0x8c20, 0x1, 0x0);
        gbc.writeMem(0x8c20, { 0x92 });
        gbc.writeMem(0xcd0d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc6e8, gbc.sp());
        EXPECT(0xcd0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8c20));
        EXPECT(0xcb, gbc.readMem(0xcd0d));
        EXPECT(0x9e, gbc.readMem(0xcd0e));
        // CB 9E 0091
        gbc.setState(0xcc5b, 0x17ee, 0x33d0, 0xa019, 0xedda, 0x9a9f, 0x1, 0x1);
        gbc.writeMem(0x9a9f, { 0x2a });
        gbc.writeMem(0xcc5b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x17ee, gbc.sp());
        EXPECT(0xcc5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9a9f));
        EXPECT(0xcb, gbc.readMem(0xcc5b));
        EXPECT(0x9e, gbc.readMem(0xcc5c));
        // CB 9E 0094
        gbc.setState(0xb62a, 0xdd62, 0x2240, 0x1849, 0x113d, 0x69b8, 0x0, 0x1);
        gbc.writeMem(0x69b8, { 0x82 });
        gbc.writeMem(0xb62a, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdd62, gbc.sp());
        EXPECT(0xb62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb62a));
        EXPECT(0x9e, gbc.readMem(0xb62b));
        // CB 9E 0096
        gbc.setState(0x3b86, 0xac81, 0xc760, 0x7fef, 0x75f6, 0x95d8, 0x0, 0x1);
        gbc.writeMem(0x3b86, { 0xcb, 0x9e });
        gbc.writeMem(0x95d8, { 0x6f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xac81, gbc.sp());
        EXPECT(0x3b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x95d8));
        // CB 9E 0097
        gbc.setState(0x9a94, 0x1173, 0xa460, 0xacf8, 0xcc05, 0xc07b, 0x0, 0x0);
        gbc.writeMem(0x9a94, { 0xcb, 0x9e });
        gbc.writeMem(0xc07b, { 0xda });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1173, gbc.sp());
        EXPECT(0x9a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a94));
        EXPECT(0x9e, gbc.readMem(0x9a95));
        EXPECT(0xd2, gbc.readMem(0xc07b));
        // CB 9E 0098
        gbc.setState(0x8261, 0xf28d, 0x95b0, 0xe3b8, 0xfcbb, 0x1ce3, 0x0, 0x0);
        gbc.writeMem(0x1ce3, { 0x24 });
        gbc.writeMem(0x8261, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf28d, gbc.sp());
        EXPECT(0x8263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8261));
        EXPECT(0x9e, gbc.readMem(0x8262));
        // CB 9E 0099
        gbc.setState(0x720f, 0x532, 0xd970, 0x724b, 0x477d, 0x78d1, 0x1, 0x1);
        gbc.writeMem(0x720f, { 0xcb, 0x9e });
        gbc.writeMem(0x78d1, { 0xb0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x532, gbc.sp());
        EXPECT(0x7211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 009A
        gbc.setState(0x1462, 0xe7e3, 0xb9d0, 0xb7f, 0x9b18, 0xe6d2, 0x0, 0x1);
        gbc.writeMem(0x1462, { 0xcb, 0x9e });
        gbc.writeMem(0xe6d2, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe7e3, gbc.sp());
        EXPECT(0x1464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe6d2));
        // CB 9E 009B
        gbc.setState(0xbcc4, 0x4062, 0x4380, 0x3adf, 0x1591, 0x8c39, 0x1, 0x1);
        gbc.writeMem(0x8c39, { 0x5b });
        gbc.writeMem(0xbcc4, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4062, gbc.sp());
        EXPECT(0xbcc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8c39));
        EXPECT(0xcb, gbc.readMem(0xbcc4));
        EXPECT(0x9e, gbc.readMem(0xbcc5));
        // CB 9E 009C
        gbc.setState(0x298e, 0xaea9, 0x14a0, 0x17d5, 0x148f, 0xea2a, 0x0, 0x1);
        gbc.writeMem(0x298e, { 0xcb, 0x9e });
        gbc.writeMem(0xea2a, { 0x8d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xaea9, gbc.sp());
        EXPECT(0x2990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xea2a));
        // CB 9E 009D
        gbc.setState(0xac3, 0x430d, 0x8b20, 0x5d9d, 0xbe22, 0x4ed4, 0x1, 0x1);
        gbc.writeMem(0xac3, { 0xcb, 0x9e });
        gbc.writeMem(0x4ed4, { 0xc1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x430d, gbc.sp());
        EXPECT(0xac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 009F
        gbc.setState(0x238e, 0x47a4, 0xb5d0, 0x54f2, 0x78f3, 0x6b2, 0x0, 0x1);
        gbc.writeMem(0x6b2, { 0xf4 });
        gbc.writeMem(0x238e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x47a4, gbc.sp());
        EXPECT(0x2390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 00A0
        gbc.setState(0xe228, 0xe6e3, 0xdd20, 0x8e2b, 0x48c6, 0x8265, 0x1, 0x0);
        gbc.writeMem(0x8265, { 0xbd });
        gbc.writeMem(0xe228, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe6e3, gbc.sp());
        EXPECT(0xe22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8265));
        EXPECT(0xcb, gbc.readMem(0xe228));
        EXPECT(0x9e, gbc.readMem(0xe229));
        // CB 9E 00A1
        gbc.setState(0x3d15, 0x723a, 0xd800, 0xb8bb, 0x7821, 0xba26, 0x0, 0x0);
        gbc.writeMem(0x3d15, { 0xcb, 0x9e });
        gbc.writeMem(0xba26, { 0xba });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x723a, gbc.sp());
        EXPECT(0x3d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xba26));
        // CB 9E 00A2
        gbc.setState(0x9e2c, 0x432, 0x62c0, 0xa8fe, 0x7d1d, 0x3cb7, 0x1, 0x1);
        gbc.writeMem(0x3cb7, { 0x96 });
        gbc.writeMem(0x9e2c, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x432, gbc.sp());
        EXPECT(0x9e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2c));
        EXPECT(0x9e, gbc.readMem(0x9e2d));
        // CB 9E 00A3
        gbc.setState(0x2ec8, 0x2475, 0x3ef0, 0x7dce, 0x97d4, 0xc6d3, 0x0, 0x1);
        gbc.writeMem(0x2ec8, { 0xcb, 0x9e });
        gbc.writeMem(0xc6d3, { 0x4d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2475, gbc.sp());
        EXPECT(0x2eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xc6d3));
        // CB 9E 00A4
        gbc.setState(0xbba2, 0x6e18, 0xb1d0, 0x16aa, 0xfcdd, 0xad8b, 0x1, 0x1);
        gbc.writeMem(0xad8b, { 0x49 });
        gbc.writeMem(0xbba2, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6e18, gbc.sp());
        EXPECT(0xbba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xad8b));
        EXPECT(0xcb, gbc.readMem(0xbba2));
        EXPECT(0x9e, gbc.readMem(0xbba3));
        // CB 9E 00A5
        gbc.setState(0x912c, 0xbe58, 0x27f0, 0xc79, 0x50f, 0x3ffc, 0x1, 0x0);
        gbc.writeMem(0x3ffc, { 0xf6 });
        gbc.writeMem(0x912c, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbe58, gbc.sp());
        EXPECT(0x912e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x912c));
        EXPECT(0x9e, gbc.readMem(0x912d));
        // CB 9E 00A7
        gbc.setState(0xdde3, 0xe655, 0x3700, 0x63d9, 0xdc51, 0xfd33, 0x0, 0x1);
        gbc.writeMem(0xdde3, { 0xcb, 0x9e });
        gbc.writeMem(0xfd33, { 0x49 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe655, gbc.sp());
        EXPECT(0xdde5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde3));
        EXPECT(0x9e, gbc.readMem(0xdde4));
        EXPECT(0x41, gbc.readMem(0xfd33));
        // CB 9E 00A8
        gbc.setState(0x29f5, 0x746d, 0x6b90, 0xd1c2, 0x3fd4, 0xaf37, 0x0, 0x0);
        gbc.writeMem(0x29f5, { 0xcb, 0x9e });
        gbc.writeMem(0xaf37, { 0x3b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x746d, gbc.sp());
        EXPECT(0x29f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaf37));
        // CB 9E 00A9
        gbc.setState(0xb530, 0x6098, 0x8370, 0xcb7b, 0x5f88, 0xb94b, 0x0, 0x0);
        gbc.writeMem(0xb530, { 0xcb, 0x9e });
        gbc.writeMem(0xb94b, { 0x1d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6098, gbc.sp());
        EXPECT(0xb532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb530));
        EXPECT(0x9e, gbc.readMem(0xb531));
        EXPECT(0x15, gbc.readMem(0xb94b));
        // CB 9E 00AA
        gbc.setState(0xba96, 0xd252, 0x2880, 0x5d49, 0x5443, 0xbbeb, 0x0, 0x1);
        gbc.writeMem(0xba96, { 0xcb, 0x9e });
        gbc.writeMem(0xbbeb, { 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd252, gbc.sp());
        EXPECT(0xba98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba96));
        EXPECT(0x9e, gbc.readMem(0xba97));
        EXPECT(0x62, gbc.readMem(0xbbeb));
        // CB 9E 00AB
        gbc.setState(0xb6d, 0x24f2, 0xce00, 0x1362, 0x78e2, 0xb1fc, 0x1, 0x0);
        gbc.writeMem(0xb6d, { 0xcb, 0x9e });
        gbc.writeMem(0xb1fc, { 0xb8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x24f2, gbc.sp());
        EXPECT(0xb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb1fc));
        // CB 9E 00AD
        gbc.setState(0x239a, 0x1384, 0x52f0, 0x8b0a, 0x3038, 0xb284, 0x0, 0x1);
        gbc.writeMem(0x239a, { 0xcb, 0x9e });
        gbc.writeMem(0xb284, { 0xdf });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1384, gbc.sp());
        EXPECT(0x239c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xb284));
        // CB 9E 00B3
        gbc.setState(0x57d6, 0xa92f, 0x7450, 0x57c6, 0xd1b5, 0xfb97, 0x0, 0x1);
        gbc.writeMem(0x57d6, { 0xcb, 0x9e });
        gbc.writeMem(0xfb97, { 0xe8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa92f, gbc.sp());
        EXPECT(0x57d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xfb97));
        // CB 9E 00B4
        gbc.setState(0xaa5e, 0xf866, 0xce70, 0x9ebc, 0xced1, 0x8881, 0x1, 0x0);
        gbc.writeMem(0x8881, { 0xd4 });
        gbc.writeMem(0xaa5e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf866, gbc.sp());
        EXPECT(0xaa60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8881));
        EXPECT(0xcb, gbc.readMem(0xaa5e));
        EXPECT(0x9e, gbc.readMem(0xaa5f));
        // CB 9E 00B5
        gbc.setState(0x5e6e, 0xce3f, 0xe440, 0x88cf, 0x38db, 0xc5d2, 0x1, 0x0);
        gbc.writeMem(0x5e6e, { 0xcb, 0x9e });
        gbc.writeMem(0xc5d2, { 0x98 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xce3f, gbc.sp());
        EXPECT(0x5e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xc5d2));
        // CB 9E 00B7
        gbc.setState(0x8497, 0xa983, 0xff70, 0xc178, 0xf1ee, 0x20d3, 0x1, 0x0);
        gbc.writeMem(0x20d3, { 0x70 });
        gbc.writeMem(0x8497, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa983, gbc.sp());
        EXPECT(0x8499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8497));
        EXPECT(0x9e, gbc.readMem(0x8498));
        // CB 9E 00B8
        gbc.setState(0xa946, 0x5203, 0x8250, 0x4021, 0xf8ad, 0x839, 0x1, 0x0);
        gbc.writeMem(0x839, { 0x33 });
        gbc.writeMem(0xa946, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5203, gbc.sp());
        EXPECT(0xa948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa946));
        EXPECT(0x9e, gbc.readMem(0xa947));
        // CB 9E 00BB
        gbc.setState(0x42a7, 0x9888, 0x3790, 0xa48f, 0xb039, 0xf661, 0x0, 0x0);
        gbc.writeMem(0x42a7, { 0xcb, 0x9e });
        gbc.writeMem(0xf661, { 0x85 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9888, gbc.sp());
        EXPECT(0x42a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xf661));
        // CB 9E 00BC
        gbc.setState(0xd371, 0x87f1, 0xfee0, 0xcdd6, 0x801c, 0xdfe5, 0x0, 0x1);
        gbc.writeMem(0xd371, { 0xcb, 0x9e });
        gbc.writeMem(0xdfe5, { 0xbf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x87f1, gbc.sp());
        EXPECT(0xd373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd371));
        EXPECT(0x9e, gbc.readMem(0xd372));
        EXPECT(0xb7, gbc.readMem(0xdfe5));
        // CB 9E 00BD
        gbc.setState(0x1e58, 0x8469, 0x41d0, 0x9914, 0x6c82, 0x6541, 0x0, 0x0);
        gbc.writeMem(0x1e58, { 0xcb, 0x9e });
        gbc.writeMem(0x6541, { 0x80 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8469, gbc.sp());
        EXPECT(0x1e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 00BE
        gbc.setState(0x247, 0x72e3, 0xff20, 0x1f37, 0x9026, 0xe790, 0x1, 0x0);
        gbc.writeMem(0x247, { 0xcb, 0x9e });
        gbc.writeMem(0xe790, { 0xca });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x72e3, gbc.sp());
        EXPECT(0x249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe790));
        // CB 9E 00BF
        gbc.setState(0xc6b5, 0x7d6b, 0x6c50, 0x81a6, 0xeed2, 0x3e14, 0x0, 0x0);
        gbc.writeMem(0x3e14, { 0xd0 });
        gbc.writeMem(0xc6b5, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7d6b, gbc.sp());
        EXPECT(0xc6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b5));
        EXPECT(0x9e, gbc.readMem(0xc6b6));
        // CB 9E 00C0
        gbc.setState(0xadd2, 0x660a, 0x5ed0, 0x6d74, 0x491a, 0xf367, 0x1, 0x1);
        gbc.writeMem(0xadd2, { 0xcb, 0x9e });
        gbc.writeMem(0xf367, { 0xcb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x660a, gbc.sp());
        EXPECT(0xadd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd2));
        EXPECT(0x9e, gbc.readMem(0xadd3));
        EXPECT(0xc3, gbc.readMem(0xf367));
        // CB 9E 00C1
        gbc.setState(0x542f, 0xce1c, 0xf620, 0xaf61, 0x8c1a, 0xaf30, 0x1, 0x0);
        gbc.writeMem(0x542f, { 0xcb, 0x9e });
        gbc.writeMem(0xaf30, { 0xd1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xce1c, gbc.sp());
        EXPECT(0x5431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xaf30));
        // CB 9E 00C2
        gbc.setState(0x35a7, 0xb25e, 0x3140, 0x7832, 0xc4f4, 0xff26, 0x1, 0x1);
        gbc.writeMem(0x35a7, { 0xcb, 0x9e });
        gbc.writeMem(0xff26, { 0x57 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb25e, gbc.sp());
        EXPECT(0x35a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xff26));
        // CB 9E 00C3
        gbc.setState(0xbfda, 0x7bda, 0x3ac0, 0xa0cb, 0xefb8, 0xa9a4, 0x0, 0x1);
        gbc.writeMem(0xa9a4, { 0x29 });
        gbc.writeMem(0xbfda, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7bda, gbc.sp());
        EXPECT(0xbfdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa9a4));
        EXPECT(0xcb, gbc.readMem(0xbfda));
        EXPECT(0x9e, gbc.readMem(0xbfdb));
        // CB 9E 00C4
        gbc.setState(0xc064, 0x3d1c, 0xe6a0, 0xa982, 0x7040, 0xf7a4, 0x0, 0x1);
        gbc.writeMem(0xc064, { 0xcb, 0x9e });
        gbc.writeMem(0xf7a4, { 0xd3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3d1c, gbc.sp());
        EXPECT(0xc066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc064));
        EXPECT(0x9e, gbc.readMem(0xc065));
        EXPECT(0xd3, gbc.readMem(0xf7a4));
        // CB 9E 00C7
        gbc.setState(0x907a, 0x6f75, 0xfcd0, 0xc99f, 0x3a80, 0xcac6, 0x0, 0x0);
        gbc.writeMem(0x907a, { 0xcb, 0x9e });
        gbc.writeMem(0xcac6, { 0xd6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6f75, gbc.sp());
        EXPECT(0x907c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x907a));
        EXPECT(0x9e, gbc.readMem(0x907b));
        EXPECT(0xd6, gbc.readMem(0xcac6));
        // CB 9E 00C8
        gbc.setState(0x2708, 0x3c6, 0x58c0, 0xd64, 0x7e8a, 0xb2be, 0x1, 0x1);
        gbc.writeMem(0x2708, { 0xcb, 0x9e });
        gbc.writeMem(0xb2be, { 0xc0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3c6, gbc.sp());
        EXPECT(0x270a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb2be));
        // CB 9E 00C9
        gbc.setState(0xe826, 0x7fb2, 0x4b20, 0xd57f, 0x33b1, 0xa75e, 0x1, 0x0);
        gbc.writeMem(0xa75e, { 0xc2 });
        gbc.writeMem(0xe826, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7fb2, gbc.sp());
        EXPECT(0xe828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa75e));
        EXPECT(0xcb, gbc.readMem(0xe826));
        EXPECT(0x9e, gbc.readMem(0xe827));
        // CB 9E 00CA
        gbc.setState(0x4172, 0x81ee, 0xc9a0, 0xe615, 0x547d, 0x5380, 0x1, 0x0);
        gbc.writeMem(0x4172, { 0xcb, 0x9e });
        gbc.writeMem(0x5380, { 0xc5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x81ee, gbc.sp());
        EXPECT(0x4174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 00CB
        gbc.setState(0xa719, 0x71e6, 0x4d40, 0x3c0b, 0x86bb, 0xf49e, 0x0, 0x0);
        gbc.writeMem(0xa719, { 0xcb, 0x9e });
        gbc.writeMem(0xf49e, { 0x2f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x71e6, gbc.sp());
        EXPECT(0xa71b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa719));
        EXPECT(0x9e, gbc.readMem(0xa71a));
        EXPECT(0x27, gbc.readMem(0xf49e));
        // CB 9E 00CC
        gbc.setState(0x8e63, 0x8ade, 0x7d70, 0x62b1, 0x9c2e, 0x1316, 0x0, 0x1);
        gbc.writeMem(0x1316, { 0xf0 });
        gbc.writeMem(0x8e63, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8ade, gbc.sp());
        EXPECT(0x8e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e63));
        EXPECT(0x9e, gbc.readMem(0x8e64));
        // CB 9E 00CF
        gbc.setState(0xe601, 0x1bf8, 0xa800, 0x11b6, 0x55d9, 0x2ae6, 0x1, 0x1);
        gbc.writeMem(0x2ae6, { 0xf0 });
        gbc.writeMem(0xe601, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1bf8, gbc.sp());
        EXPECT(0xe603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe601));
        EXPECT(0x9e, gbc.readMem(0xe602));
        // CB 9E 00D3
        gbc.setState(0xbddb, 0x7b77, 0xf410, 0xfed5, 0xde13, 0xd6cf, 0x1, 0x0);
        gbc.writeMem(0xbddb, { 0xcb, 0x9e });
        gbc.writeMem(0xd6cf, { 0xd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7b77, gbc.sp());
        EXPECT(0xbddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbddb));
        EXPECT(0x9e, gbc.readMem(0xbddc));
        EXPECT(0x5, gbc.readMem(0xd6cf));
        // CB 9E 00D4
        gbc.setState(0x42d8, 0xf755, 0x82f0, 0x7760, 0xfc95, 0x9e4a, 0x0, 0x1);
        gbc.writeMem(0x42d8, { 0xcb, 0x9e });
        gbc.writeMem(0x9e4a, { 0x94 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf755, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9e4a));
        // CB 9E 00D5
        gbc.setState(0xe940, 0xcb08, 0x6c50, 0xe59c, 0xc72b, 0x15a2, 0x0, 0x1);
        gbc.writeMem(0x15a2, { 0x1 });
        gbc.writeMem(0xe940, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcb08, gbc.sp());
        EXPECT(0xe942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe940));
        EXPECT(0x9e, gbc.readMem(0xe941));
        // CB 9E 00D7
        gbc.setState(0x707a, 0x78dd, 0x1f80, 0x64a3, 0x6098, 0x2822, 0x0, 0x1);
        gbc.writeMem(0x2822, { 0xf1 });
        gbc.writeMem(0x707a, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x78dd, gbc.sp());
        EXPECT(0x707c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 00D8
        gbc.setState(0x2202, 0x7aeb, 0xdc90, 0xc416, 0xaa42, 0xbce2, 0x1, 0x0);
        gbc.writeMem(0x2202, { 0xcb, 0x9e });
        gbc.writeMem(0xbce2, { 0x4f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7aeb, gbc.sp());
        EXPECT(0x2204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbce2));
        // CB 9E 00D9
        gbc.setState(0xecbd, 0x65d6, 0xcc0, 0x2aa, 0xd55f, 0x5a70, 0x0, 0x1);
        gbc.writeMem(0x5a70, { 0x7 });
        gbc.writeMem(0xecbd, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x65d6, gbc.sp());
        EXPECT(0xecbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbd));
        EXPECT(0x9e, gbc.readMem(0xecbe));
        // CB 9E 00DA
        gbc.setState(0xb072, 0xb30a, 0x7380, 0x2382, 0x10c1, 0xc58a, 0x1, 0x1);
        gbc.writeMem(0xb072, { 0xcb, 0x9e });
        gbc.writeMem(0xc58a, { 0xe });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb30a, gbc.sp());
        EXPECT(0xb074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb072));
        EXPECT(0x9e, gbc.readMem(0xb073));
        EXPECT(0x6, gbc.readMem(0xc58a));
        // CB 9E 00DB
        gbc.setState(0x4445, 0xd680, 0x3370, 0x72b5, 0x418, 0xeda5, 0x1, 0x0);
        gbc.writeMem(0x4445, { 0xcb, 0x9e });
        gbc.writeMem(0xeda5, { 0x96 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd680, gbc.sp());
        EXPECT(0x4447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xeda5));
        // CB 9E 00DC
        gbc.setState(0x1199, 0xfcf8, 0xcc10, 0x9a24, 0x8871, 0x1b9f, 0x1, 0x1);
        gbc.writeMem(0x1199, { 0xcb, 0x9e });
        gbc.writeMem(0x1b9f, { 0xb3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfcf8, gbc.sp());
        EXPECT(0x119b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 00DD
        gbc.setState(0xdb2c, 0x609f, 0xa740, 0xee02, 0x8f3, 0xc5a8, 0x0, 0x1);
        gbc.writeMem(0xc5a8, { 0x8d });
        gbc.writeMem(0xdb2c, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x609f, gbc.sp());
        EXPECT(0xdb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc5a8));
        EXPECT(0xcb, gbc.readMem(0xdb2c));
        EXPECT(0x9e, gbc.readMem(0xdb2d));
        // CB 9E 00DE
        gbc.setState(0x8b43, 0x741f, 0x7f70, 0xfb89, 0x5cff, 0xf326, 0x1, 0x1);
        gbc.writeMem(0x8b43, { 0xcb, 0x9e });
        gbc.writeMem(0xf326, { 0x9d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x741f, gbc.sp());
        EXPECT(0x8b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b43));
        EXPECT(0x9e, gbc.readMem(0x8b44));
        EXPECT(0x95, gbc.readMem(0xf326));
        // CB 9E 00DF
        gbc.setState(0x791b, 0x1c8d, 0x67d0, 0x9386, 0xc67c, 0xb54f, 0x0, 0x0);
        gbc.writeMem(0x791b, { 0xcb, 0x9e });
        gbc.writeMem(0xb54f, { 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1c8d, gbc.sp());
        EXPECT(0x791d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb54f));
        // CB 9E 00E2
        gbc.setState(0x1ec7, 0x2eb6, 0x12b0, 0xd2c9, 0xc315, 0x375f, 0x1, 0x1);
        gbc.writeMem(0x1ec7, { 0xcb, 0x9e });
        gbc.writeMem(0x375f, { 0x94 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2eb6, gbc.sp());
        EXPECT(0x1ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 00E3
        gbc.setState(0x9212, 0x3069, 0xbc20, 0x422e, 0xafc2, 0xee68, 0x1, 0x1);
        gbc.writeMem(0x9212, { 0xcb, 0x9e });
        gbc.writeMem(0xee68, { 0xa6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3069, gbc.sp());
        EXPECT(0x9214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9212));
        EXPECT(0x9e, gbc.readMem(0x9213));
        EXPECT(0xa6, gbc.readMem(0xee68));
        // CB 9E 00E4
        gbc.setState(0x67d9, 0x3e78, 0x5ff0, 0xa2ba, 0x5509, 0xb374, 0x0, 0x0);
        gbc.writeMem(0x67d9, { 0xcb, 0x9e });
        gbc.writeMem(0xb374, { 0x7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3e78, gbc.sp());
        EXPECT(0x67db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb374));
        // CB 9E 00E7
        gbc.setState(0xd448, 0xb011, 0xb580, 0xa069, 0x81fb, 0x9b87, 0x0, 0x0);
        gbc.writeMem(0x9b87, { 0x1f });
        gbc.writeMem(0xd448, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb011, gbc.sp());
        EXPECT(0xd44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x9b87));
        EXPECT(0xcb, gbc.readMem(0xd448));
        EXPECT(0x9e, gbc.readMem(0xd449));
        // CB 9E 00EB
        gbc.setState(0x6a3d, 0xec6f, 0xfe90, 0x5205, 0x7f9f, 0xec66, 0x1, 0x1);
        gbc.writeMem(0x6a3d, { 0xcb, 0x9e });
        gbc.writeMem(0xec66, { 0x66 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xec6f, gbc.sp());
        EXPECT(0x6a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xec66));
        // CB 9E 00EC
        gbc.setState(0xaff0, 0x7d4a, 0xde80, 0x1693, 0x2137, 0x9da4, 0x1, 0x1);
        gbc.writeMem(0x9da4, { 0x3b });
        gbc.writeMem(0xaff0, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7d4a, gbc.sp());
        EXPECT(0xaff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9da4));
        EXPECT(0xcb, gbc.readMem(0xaff0));
        EXPECT(0x9e, gbc.readMem(0xaff1));
        // CB 9E 00ED
        gbc.setState(0x2340, 0x3f8f, 0x63f0, 0x4125, 0xf8ca, 0xc5fa, 0x1, 0x1);
        gbc.writeMem(0x2340, { 0xcb, 0x9e });
        gbc.writeMem(0xc5fa, { 0x12 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3f8f, gbc.sp());
        EXPECT(0x2342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc5fa));
        // CB 9E 00EE
        gbc.setState(0x3c85, 0xa32a, 0xb850, 0x308d, 0x73df, 0xf048, 0x1, 0x0);
        gbc.writeMem(0x3c85, { 0xcb, 0x9e });
        gbc.writeMem(0xf048, { 0x67 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa32a, gbc.sp());
        EXPECT(0x3c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xf048));
        // CB 9E 00EF
        gbc.setState(0xd949, 0x79d2, 0x5630, 0xd6d8, 0x9dbd, 0x6fca, 0x0, 0x0);
        gbc.writeMem(0x6fca, { 0xe4 });
        gbc.writeMem(0xd949, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x79d2, gbc.sp());
        EXPECT(0xd94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd949));
        EXPECT(0x9e, gbc.readMem(0xd94a));
        // CB 9E 00F2
        gbc.setState(0x3b0a, 0x6fe9, 0xd7b0, 0xd5, 0x3e8a, 0x703f, 0x0, 0x1);
        gbc.writeMem(0x3b0a, { 0xcb, 0x9e });
        gbc.writeMem(0x703f, { 0x97 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6fe9, gbc.sp());
        EXPECT(0x3b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 00F3
        gbc.setState(0xdb71, 0x5c83, 0x2e10, 0x3cae, 0xd7c1, 0xe2a7, 0x0, 0x1);
        gbc.writeMem(0xdb71, { 0xcb, 0x9e });
        gbc.writeMem(0xe2a7, { 0xe8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5c83, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb71));
        EXPECT(0x9e, gbc.readMem(0xdb72));
        EXPECT(0xe0, gbc.readMem(0xe2a7));
        // CB 9E 00F6
        gbc.setState(0x43d3, 0xe2, 0xb5c0, 0x9656, 0x90b7, 0xb2da, 0x1, 0x1);
        gbc.writeMem(0x43d3, { 0xcb, 0x9e });
        gbc.writeMem(0xb2da, { 0x9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe2, gbc.sp());
        EXPECT(0x43d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xb2da));
        // CB 9E 00F7
        gbc.setState(0x87fd, 0xb2df, 0x9ee0, 0xd618, 0x36c, 0xfd05, 0x0, 0x1);
        gbc.writeMem(0x87fd, { 0xcb, 0x9e });
        gbc.writeMem(0xfd05, { 0x25 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb2df, gbc.sp());
        EXPECT(0x87ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fd));
        EXPECT(0x9e, gbc.readMem(0x87fe));
        EXPECT(0x25, gbc.readMem(0xfd05));
        // CB 9E 00F9
        gbc.setState(0x783d, 0x4f7d, 0x7740, 0x8acf, 0x212c, 0x2d04, 0x0, 0x0);
        gbc.writeMem(0x2d04, { 0x74 });
        gbc.writeMem(0x783d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4f7d, gbc.sp());
        EXPECT(0x783f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 00FB
        gbc.setState(0x5ea7, 0x6271, 0x88a0, 0xd73c, 0xf39b, 0xd176, 0x1, 0x1);
        gbc.writeMem(0x5ea7, { 0xcb, 0x9e });
        gbc.writeMem(0xd176, { 0x58 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6271, gbc.sp());
        EXPECT(0x5ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd176));
        // CB 9E 00FD
        gbc.setState(0x281d, 0x3e7f, 0x4e80, 0x8534, 0x4c4, 0x8b26, 0x1, 0x0);
        gbc.writeMem(0x281d, { 0xcb, 0x9e });
        gbc.writeMem(0x8b26, { 0x6c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3e7f, gbc.sp());
        EXPECT(0x281f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8b26));
        // CB 9E 0100
        gbc.setState(0x3e6e, 0x1b23, 0x17f0, 0x65c8, 0x9226, 0xeb2f, 0x0, 0x1);
        gbc.writeMem(0x3e6e, { 0xcb, 0x9e });
        gbc.writeMem(0xeb2f, { 0xdb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1b23, gbc.sp());
        EXPECT(0x3e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xeb2f));
        // CB 9E 0101
        gbc.setState(0x392d, 0xa8c4, 0x2aa0, 0x339c, 0x1f62, 0x1453, 0x1, 0x1);
        gbc.writeMem(0x1453, { 0x57 });
        gbc.writeMem(0x392d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa8c4, gbc.sp());
        EXPECT(0x392f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0102
        gbc.setState(0x3c8d, 0x9139, 0x8430, 0xc8f8, 0x918, 0x889, 0x1, 0x1);
        gbc.writeMem(0x889, { 0x36 });
        gbc.writeMem(0x3c8d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9139, gbc.sp());
        EXPECT(0x3c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0103
        gbc.setState(0x9707, 0x8b82, 0xd060, 0x288f, 0x328f, 0xd041, 0x0, 0x0);
        gbc.writeMem(0x9707, { 0xcb, 0x9e });
        gbc.writeMem(0xd041, { 0x69 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8b82, gbc.sp());
        EXPECT(0x9709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9707));
        EXPECT(0x9e, gbc.readMem(0x9708));
        EXPECT(0x61, gbc.readMem(0xd041));
        // CB 9E 0104
        gbc.setState(0x5f6, 0x4ff6, 0x8160, 0xf6ec, 0x780f, 0xd1d7, 0x0, 0x1);
        gbc.writeMem(0x5f6, { 0xcb, 0x9e });
        gbc.writeMem(0xd1d7, { 0x7f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4ff6, gbc.sp());
        EXPECT(0x5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd1d7));
        // CB 9E 0105
        gbc.setState(0xdbeb, 0xcff6, 0x13f0, 0x8b6b, 0x27d9, 0x96f1, 0x0, 0x0);
        gbc.writeMem(0x96f1, { 0x3e });
        gbc.writeMem(0xdbeb, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcff6, gbc.sp());
        EXPECT(0xdbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x96f1));
        EXPECT(0xcb, gbc.readMem(0xdbeb));
        EXPECT(0x9e, gbc.readMem(0xdbec));
        // CB 9E 0106
        gbc.setState(0x8948, 0xa85e, 0x63f0, 0x7816, 0xb4f6, 0xf0ec, 0x1, 0x0);
        gbc.writeMem(0x8948, { 0xcb, 0x9e });
        gbc.writeMem(0xf0ec, { 0xb5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa85e, gbc.sp());
        EXPECT(0x894a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8948));
        EXPECT(0x9e, gbc.readMem(0x8949));
        EXPECT(0xb5, gbc.readMem(0xf0ec));
        // CB 9E 0107
        gbc.setState(0xed3e, 0x5593, 0x3820, 0x2f5, 0x6dee, 0x8a7f, 0x0, 0x1);
        gbc.writeMem(0x8a7f, { 0x9b });
        gbc.writeMem(0xed3e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0xed40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8a7f));
        EXPECT(0xcb, gbc.readMem(0xed3e));
        EXPECT(0x9e, gbc.readMem(0xed3f));
        // CB 9E 0108
        gbc.setState(0x1f7e, 0x73dd, 0x5360, 0x1af2, 0xb671, 0xc001, 0x0, 0x0);
        gbc.writeMem(0x1f7e, { 0xcb, 0x9e });
        gbc.writeMem(0xc001, { 0x7e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x73dd, gbc.sp());
        EXPECT(0x1f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc001));
        // CB 9E 0109
        gbc.setState(0x1447, 0xfd2, 0xe5d0, 0x5c53, 0x3ef9, 0xb5f3, 0x0, 0x1);
        gbc.writeMem(0x1447, { 0xcb, 0x9e });
        gbc.writeMem(0xb5f3, { 0x47 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfd2, gbc.sp());
        EXPECT(0x1449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb5f3));
        // CB 9E 010A
        gbc.setState(0x597e, 0x7107, 0x6430, 0x44f8, 0x3b8, 0xb37f, 0x1, 0x0);
        gbc.writeMem(0x597e, { 0xcb, 0x9e });
        gbc.writeMem(0xb37f, { 0xb5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7107, gbc.sp());
        EXPECT(0x5980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb37f));
        // CB 9E 010C
        gbc.setState(0x73cd, 0x5cb4, 0x46e0, 0xfcd9, 0x4e04, 0xb8e4, 0x1, 0x1);
        gbc.writeMem(0x73cd, { 0xcb, 0x9e });
        gbc.writeMem(0xb8e4, { 0x5e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5cb4, gbc.sp());
        EXPECT(0x73cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb8e4));
        // CB 9E 010D
        gbc.setState(0x7f00, 0xc6b2, 0xa810, 0x46bf, 0x36e1, 0x9f78, 0x1, 0x1);
        gbc.writeMem(0x7f00, { 0xcb, 0x9e });
        gbc.writeMem(0x9f78, { 0xd0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc6b2, gbc.sp());
        EXPECT(0x7f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9f78));
        // CB 9E 010F
        gbc.setState(0x9802, 0x97c2, 0x3fd0, 0x3212, 0x3a5a, 0xe4c1, 0x1, 0x0);
        gbc.writeMem(0x9802, { 0xcb, 0x9e });
        gbc.writeMem(0xe4c1, { 0x2b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x97c2, gbc.sp());
        EXPECT(0x9804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9802));
        EXPECT(0x9e, gbc.readMem(0x9803));
        EXPECT(0x23, gbc.readMem(0xe4c1));
        // CB 9E 0111
        gbc.setState(0x2e7f, 0x341a, 0xe90, 0xc2b0, 0x1e5c, 0x9c78, 0x1, 0x1);
        gbc.writeMem(0x2e7f, { 0xcb, 0x9e });
        gbc.writeMem(0x9c78, { 0xf4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x341a, gbc.sp());
        EXPECT(0x2e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9c78));
        // CB 9E 0112
        gbc.setState(0x171b, 0xb949, 0x8da0, 0xe915, 0x556a, 0xc6da, 0x1, 0x1);
        gbc.writeMem(0x171b, { 0xcb, 0x9e });
        gbc.writeMem(0xc6da, { 0xe });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb949, gbc.sp());
        EXPECT(0x171d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc6da));
        // CB 9E 0113
        gbc.setState(0xb20f, 0x1806, 0x1530, 0xa54e, 0x3422, 0xe2dd, 0x0, 0x0);
        gbc.writeMem(0xb20f, { 0xcb, 0x9e });
        gbc.writeMem(0xe2dd, { 0x8b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1806, gbc.sp());
        EXPECT(0xb211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20f));
        EXPECT(0x9e, gbc.readMem(0xb210));
        EXPECT(0x83, gbc.readMem(0xe2dd));
        // CB 9E 0114
        gbc.setState(0x51ae, 0xde81, 0x1ff0, 0xd210, 0x62e1, 0xad06, 0x1, 0x0);
        gbc.writeMem(0x51ae, { 0xcb, 0x9e });
        gbc.writeMem(0xad06, { 0xa5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xde81, gbc.sp());
        EXPECT(0x51b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xad06));
        // CB 9E 0115
        gbc.setState(0xcac2, 0xd6e9, 0xb750, 0x8618, 0x988b, 0x383, 0x0, 0x1);
        gbc.writeMem(0x383, { 0xd0 });
        gbc.writeMem(0xcac2, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd6e9, gbc.sp());
        EXPECT(0xcac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac2));
        EXPECT(0x9e, gbc.readMem(0xcac3));
        // CB 9E 0118
        gbc.setState(0x38b1, 0xf628, 0x890, 0xba95, 0xd75, 0xab07, 0x1, 0x0);
        gbc.writeMem(0x38b1, { 0xcb, 0x9e });
        gbc.writeMem(0xab07, { 0x7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf628, gbc.sp());
        EXPECT(0x38b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xab07));
        // CB 9E 0119
        gbc.setState(0x1d26, 0x371e, 0x3e20, 0x6a19, 0x6955, 0x6670, 0x1, 0x0);
        gbc.writeMem(0x1d26, { 0xcb, 0x9e });
        gbc.writeMem(0x6670, { 0xc1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x371e, gbc.sp());
        EXPECT(0x1d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 011A
        gbc.setState(0x4134, 0xa947, 0xb8d0, 0xdc91, 0xe282, 0xc4a4, 0x0, 0x1);
        gbc.writeMem(0x4134, { 0xcb, 0x9e });
        gbc.writeMem(0xc4a4, { 0x7f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa947, gbc.sp());
        EXPECT(0x4136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc4a4));
        // CB 9E 011B
        gbc.setState(0x82b8, 0x6c52, 0x6f30, 0xf959, 0x75a8, 0x5948, 0x0, 0x1);
        gbc.writeMem(0x5948, { 0x74 });
        gbc.writeMem(0x82b8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6c52, gbc.sp());
        EXPECT(0x82ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b8));
        EXPECT(0x9e, gbc.readMem(0x82b9));
        // CB 9E 011C
        gbc.setState(0x4271, 0xd320, 0x3380, 0x3f5f, 0xce88, 0x6cc4, 0x1, 0x0);
        gbc.writeMem(0x4271, { 0xcb, 0x9e });
        gbc.writeMem(0x6cc4, { 0x91 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd320, gbc.sp());
        EXPECT(0x4273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 011D
        gbc.setState(0x7ff1, 0x24ab, 0xf360, 0x68d8, 0xb797, 0xfcc1, 0x0, 0x1);
        gbc.writeMem(0x7ff1, { 0xcb, 0x9e });
        gbc.writeMem(0xfcc1, { 0x7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x24ab, gbc.sp());
        EXPECT(0x7ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xfcc1));
        // CB 9E 011E
        gbc.setState(0xb59b, 0x60e3, 0x1c00, 0x24bb, 0x4d96, 0xd806, 0x0, 0x1);
        gbc.writeMem(0xb59b, { 0xcb, 0x9e });
        gbc.writeMem(0xd806, { 0x78 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x60e3, gbc.sp());
        EXPECT(0xb59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59b));
        EXPECT(0x9e, gbc.readMem(0xb59c));
        EXPECT(0x70, gbc.readMem(0xd806));
        // CB 9E 011F
        gbc.setState(0x72aa, 0xc3ec, 0xb080, 0xb17f, 0xee4f, 0x2913, 0x1, 0x1);
        gbc.writeMem(0x2913, { 0x80 });
        gbc.writeMem(0x72aa, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc3ec, gbc.sp());
        EXPECT(0x72ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0121
        gbc.setState(0x5166, 0x5c6a, 0xb580, 0xaf9a, 0x91f1, 0x5d37, 0x1, 0x0);
        gbc.writeMem(0x5166, { 0xcb, 0x9e });
        gbc.writeMem(0x5d37, { 0x54 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5c6a, gbc.sp());
        EXPECT(0x5168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0123
        gbc.setState(0x4648, 0xf007, 0x8f20, 0xa277, 0x182d, 0x482e, 0x0, 0x1);
        gbc.writeMem(0x4648, { 0xcb, 0x9e });
        gbc.writeMem(0x482e, { 0x91 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf007, gbc.sp());
        EXPECT(0x464a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0124
        gbc.setState(0x13ee, 0xa29e, 0xf1b0, 0xe385, 0xf3e, 0x45a4, 0x1, 0x1);
        gbc.writeMem(0x13ee, { 0xcb, 0x9e });
        gbc.writeMem(0x45a4, { 0x6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa29e, gbc.sp());
        EXPECT(0x13f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0125
        gbc.setState(0x7887, 0x62e9, 0xf9b0, 0xb9f, 0xb5d, 0x9a1, 0x0, 0x1);
        gbc.writeMem(0x9a1, { 0x47 });
        gbc.writeMem(0x7887, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x62e9, gbc.sp());
        EXPECT(0x7889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0127
        gbc.setState(0x6b36, 0x15d2, 0x4a50, 0xee87, 0xa2e7, 0x8df7, 0x1, 0x0);
        gbc.writeMem(0x6b36, { 0xcb, 0x9e });
        gbc.writeMem(0x8df7, { 0xe6 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x15d2, gbc.sp());
        EXPECT(0x6b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8df7));
        // CB 9E 0129
        gbc.setState(0x2bf6, 0xd052, 0x7ae0, 0x5afb, 0x8774, 0x3f9f, 0x1, 0x1);
        gbc.writeMem(0x2bf6, { 0xcb, 0x9e });
        gbc.writeMem(0x3f9f, { 0xd7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd052, gbc.sp());
        EXPECT(0x2bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 012B
        gbc.setState(0x10b4, 0xd160, 0xee20, 0x319, 0xb1c5, 0xfe94, 0x0, 0x1);
        gbc.writeMem(0x10b4, { 0xcb, 0x9e });
        gbc.writeMem(0xfe94, { 0xf2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd160, gbc.sp());
        EXPECT(0x10b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xfe94));
        // CB 9E 012C
        gbc.setState(0x7c7, 0x7604, 0xa0a0, 0xd29d, 0x9269, 0x7247, 0x0, 0x1);
        gbc.writeMem(0x7c7, { 0xcb, 0x9e });
        gbc.writeMem(0x7247, { 0xc4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7604, gbc.sp());
        EXPECT(0x7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 012D
        gbc.setState(0x3ea2, 0x18c1, 0x2d00, 0x85ae, 0xf9bb, 0x1ec7, 0x0, 0x1);
        gbc.writeMem(0x1ec7, { 0x43 });
        gbc.writeMem(0x3ea2, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x18c1, gbc.sp());
        EXPECT(0x3ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 012E
        gbc.setState(0x444d, 0xb70a, 0x4f90, 0x39fd, 0xe849, 0x163d, 0x0, 0x0);
        gbc.writeMem(0x163d, { 0x45 });
        gbc.writeMem(0x444d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb70a, gbc.sp());
        EXPECT(0x444f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 012F
        gbc.setState(0xd63c, 0x2364, 0x8080, 0x2aa7, 0xbcff, 0xd68b, 0x0, 0x0);
        gbc.writeMem(0xd63c, { 0xcb, 0x9e });
        gbc.writeMem(0xd68b, { 0x42 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2364, gbc.sp());
        EXPECT(0xd63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd63c));
        EXPECT(0x9e, gbc.readMem(0xd63d));
        EXPECT(0x42, gbc.readMem(0xd68b));
        // CB 9E 0130
        gbc.setState(0x92f8, 0x6a6, 0x3fc0, 0xee1c, 0x2102, 0xa001, 0x1, 0x0);
        gbc.writeMem(0x92f8, { 0xcb, 0x9e });
        gbc.writeMem(0xa001, { 0x14 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6a6, gbc.sp());
        EXPECT(0x92fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f8));
        EXPECT(0x9e, gbc.readMem(0x92f9));
        EXPECT(0x14, gbc.readMem(0xa001));
        // CB 9E 0131
        gbc.setState(0x553a, 0xc451, 0x4c70, 0x219, 0x61df, 0x5828, 0x0, 0x1);
        gbc.writeMem(0x553a, { 0xcb, 0x9e });
        gbc.writeMem(0x5828, { 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc451, gbc.sp());
        EXPECT(0x553c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0132
        gbc.setState(0x6085, 0xd4e7, 0x9090, 0xf972, 0x9dd3, 0x298c, 0x1, 0x0);
        gbc.writeMem(0x298c, { 0xc7 });
        gbc.writeMem(0x6085, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd4e7, gbc.sp());
        EXPECT(0x6087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0133
        gbc.setState(0x8865, 0xd205, 0x5e30, 0x402f, 0xe42e, 0x8e44, 0x0, 0x0);
        gbc.writeMem(0x8865, { 0xcb, 0x9e });
        gbc.writeMem(0x8e44, { 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd205, gbc.sp());
        EXPECT(0x8867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8865));
        EXPECT(0x9e, gbc.readMem(0x8866));
        EXPECT(0xd7, gbc.readMem(0x8e44));
        // CB 9E 0135
        gbc.setState(0x68b2, 0x8e15, 0x3990, 0xc710, 0x39be, 0xf5ff, 0x1, 0x0);
        gbc.writeMem(0x68b2, { 0xcb, 0x9e });
        gbc.writeMem(0xf5ff, { 0x3a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8e15, gbc.sp());
        EXPECT(0x68b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xf5ff));
        // CB 9E 0136
        gbc.setState(0x374d, 0x9a0d, 0x3060, 0x78c6, 0xac8b, 0xdca7, 0x1, 0x1);
        gbc.writeMem(0x374d, { 0xcb, 0x9e });
        gbc.writeMem(0xdca7, { 0x81 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9a0d, gbc.sp());
        EXPECT(0x374f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdca7));
        // CB 9E 0137
        gbc.setState(0xd5b2, 0x1dd4, 0x56f0, 0x481c, 0x4047, 0xee80, 0x1, 0x0);
        gbc.writeMem(0xd5b2, { 0xcb, 0x9e });
        gbc.writeMem(0xee80, { 0x30 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1dd4, gbc.sp());
        EXPECT(0xd5b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b2));
        EXPECT(0x9e, gbc.readMem(0xd5b3));
        EXPECT(0x30, gbc.readMem(0xee80));
        // CB 9E 0138
        gbc.setState(0x944e, 0x4a64, 0xf8b0, 0xf7fb, 0x7588, 0xb4a7, 0x0, 0x0);
        gbc.writeMem(0x944e, { 0xcb, 0x9e });
        gbc.writeMem(0xb4a7, { 0x79 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4a64, gbc.sp());
        EXPECT(0x9450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944e));
        EXPECT(0x9e, gbc.readMem(0x944f));
        EXPECT(0x71, gbc.readMem(0xb4a7));
        // CB 9E 0139
        gbc.setState(0x9f0, 0x267f, 0xeab0, 0x47f4, 0xfd8f, 0x5aaa, 0x1, 0x1);
        gbc.writeMem(0x9f0, { 0xcb, 0x9e });
        gbc.writeMem(0x5aaa, { 0xa4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x267f, gbc.sp());
        EXPECT(0x9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 013A
        gbc.setState(0x4527, 0x777e, 0xb3b0, 0xf451, 0xe089, 0xe763, 0x0, 0x1);
        gbc.writeMem(0x4527, { 0xcb, 0x9e });
        gbc.writeMem(0xe763, { 0xfa });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x777e, gbc.sp());
        EXPECT(0x4529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xe763));
        // CB 9E 013C
        gbc.setState(0xb092, 0x9cb6, 0xa0, 0xa7b8, 0x4c0, 0xf9ef, 0x1, 0x1);
        gbc.writeMem(0xb092, { 0xcb, 0x9e });
        gbc.writeMem(0xf9ef, { 0x13 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9cb6, gbc.sp());
        EXPECT(0xb094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb092));
        EXPECT(0x9e, gbc.readMem(0xb093));
        EXPECT(0x13, gbc.readMem(0xf9ef));
        // CB 9E 013D
        gbc.setState(0x5f, 0x457c, 0x2ba0, 0x12b3, 0x3e1a, 0xabd0, 0x0, 0x0);
        gbc.writeMem(0x5f, { 0xcb, 0x9e });
        gbc.writeMem(0xabd0, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x457c, gbc.sp());
        EXPECT(0x61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xabd0));
        // CB 9E 013F
        gbc.setState(0x6478, 0x9f14, 0x67e0, 0xf8d5, 0xa6cb, 0x4c88, 0x0, 0x0);
        gbc.writeMem(0x4c88, { 0x33 });
        gbc.writeMem(0x6478, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9f14, gbc.sp());
        EXPECT(0x647a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0141
        gbc.setState(0xd6a5, 0x85c1, 0x5e0, 0x501b, 0x6b40, 0xbe16, 0x1, 0x1);
        gbc.writeMem(0xbe16, { 0xf7 });
        gbc.writeMem(0xd6a5, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x85c1, gbc.sp());
        EXPECT(0xd6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbe16));
        EXPECT(0xcb, gbc.readMem(0xd6a5));
        EXPECT(0x9e, gbc.readMem(0xd6a6));
        // CB 9E 0142
        gbc.setState(0xda6a, 0x40fa, 0x8d70, 0xfe20, 0x885b, 0x8f5c, 0x1, 0x0);
        gbc.writeMem(0x8f5c, { 0x54 });
        gbc.writeMem(0xda6a, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x40fa, gbc.sp());
        EXPECT(0xda6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x8f5c));
        EXPECT(0xcb, gbc.readMem(0xda6a));
        EXPECT(0x9e, gbc.readMem(0xda6b));
        // CB 9E 0143
        gbc.setState(0x80f0, 0xc36f, 0xeab0, 0xecdd, 0x944a, 0x2edc, 0x1, 0x1);
        gbc.writeMem(0x2edc, { 0xc0 });
        gbc.writeMem(0x80f0, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc36f, gbc.sp());
        EXPECT(0x80f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f0));
        EXPECT(0x9e, gbc.readMem(0x80f1));
        // CB 9E 0144
        gbc.setState(0xdfff, 0x49be, 0x3c90, 0x8e7a, 0x5239, 0x5f16, 0x1, 0x1);
        gbc.writeMem(0x5f16, { 0x5 });
        gbc.writeMem(0xdfff, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x49be, gbc.sp());
        EXPECT(0xe001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfff));
        EXPECT(0x9e, gbc.readMem(0xe000));
        // CB 9E 0145
        gbc.setState(0x77e5, 0x77e8, 0x52f0, 0xbd55, 0x2da7, 0x741a, 0x0, 0x1);
        gbc.writeMem(0x741a, { 0x36 });
        gbc.writeMem(0x77e5, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x77e8, gbc.sp());
        EXPECT(0x77e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0146
        gbc.setState(0x7211, 0xfc8a, 0x4390, 0xa7a8, 0x6b98, 0x8dd0, 0x1, 0x0);
        gbc.writeMem(0x7211, { 0xcb, 0x9e });
        gbc.writeMem(0x8dd0, { 0x13 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfc8a, gbc.sp());
        EXPECT(0x7213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8dd0));
        // CB 9E 0147
        gbc.setState(0xbfb5, 0x3532, 0x3c50, 0x8c35, 0x845d, 0x8cf, 0x1, 0x0);
        gbc.writeMem(0x8cf, { 0x24 });
        gbc.writeMem(0xbfb5, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3532, gbc.sp());
        EXPECT(0xbfb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb5));
        EXPECT(0x9e, gbc.readMem(0xbfb6));
        // CB 9E 0148
        gbc.setState(0xd0e8, 0x2d54, 0xaa90, 0x552f, 0x4e6, 0x413a, 0x0, 0x1);
        gbc.writeMem(0x413a, { 0x42 });
        gbc.writeMem(0xd0e8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2d54, gbc.sp());
        EXPECT(0xd0ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e8));
        EXPECT(0x9e, gbc.readMem(0xd0e9));
        // CB 9E 0149
        gbc.setState(0xb94d, 0x2550, 0xadd0, 0xa9, 0xba89, 0x552b, 0x1, 0x0);
        gbc.writeMem(0x552b, { 0xa3 });
        gbc.writeMem(0xb94d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2550, gbc.sp());
        EXPECT(0xb94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94d));
        EXPECT(0x9e, gbc.readMem(0xb94e));
        // CB 9E 014A
        gbc.setState(0x3f37, 0x5248, 0x5d60, 0x8e41, 0x616c, 0xb37a, 0x1, 0x1);
        gbc.writeMem(0x3f37, { 0xcb, 0x9e });
        gbc.writeMem(0xb37a, { 0xd1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5248, gbc.sp());
        EXPECT(0x3f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xb37a));
        // CB 9E 014B
        gbc.setState(0xc069, 0x4b62, 0xe290, 0x879, 0x4c3, 0x7727, 0x1, 0x0);
        gbc.writeMem(0x7727, { 0xc5 });
        gbc.writeMem(0xc069, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4b62, gbc.sp());
        EXPECT(0xc06b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc069));
        EXPECT(0x9e, gbc.readMem(0xc06a));
        // CB 9E 014D
        gbc.setState(0x6311, 0x7055, 0xe540, 0x5a63, 0xdfdc, 0xdbf3, 0x0, 0x0);
        gbc.writeMem(0x6311, { 0xcb, 0x9e });
        gbc.writeMem(0xdbf3, { 0x67 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7055, gbc.sp());
        EXPECT(0x6313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xdbf3));
        // CB 9E 014E
        gbc.setState(0x4801, 0x4d8d, 0xaab0, 0x3456, 0x82ca, 0x4ec3, 0x0, 0x1);
        gbc.writeMem(0x4801, { 0xcb, 0x9e });
        gbc.writeMem(0x4ec3, { 0xb4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4d8d, gbc.sp());
        EXPECT(0x4803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 014F
        gbc.setState(0x8524, 0x9305, 0xde10, 0xbf81, 0x23ed, 0xaf3a, 0x0, 0x0);
        gbc.writeMem(0x8524, { 0xcb, 0x9e });
        gbc.writeMem(0xaf3a, { 0xf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9305, gbc.sp());
        EXPECT(0x8526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8524));
        EXPECT(0x9e, gbc.readMem(0x8525));
        EXPECT(0x7, gbc.readMem(0xaf3a));
        // CB 9E 0151
        gbc.setState(0x98b2, 0x8545, 0x22c0, 0x2c0, 0xd218, 0x6a68, 0x0, 0x1);
        gbc.writeMem(0x6a68, { 0x16 });
        gbc.writeMem(0x98b2, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8545, gbc.sp());
        EXPECT(0x98b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b2));
        EXPECT(0x9e, gbc.readMem(0x98b3));
        // CB 9E 0153
        gbc.setState(0x9ea8, 0x3cc, 0x7a80, 0xfb55, 0x2be3, 0xaac6, 0x1, 0x0);
        gbc.writeMem(0x9ea8, { 0xcb, 0x9e });
        gbc.writeMem(0xaac6, { 0x63 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3cc, gbc.sp());
        EXPECT(0x9eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea8));
        EXPECT(0x9e, gbc.readMem(0x9ea9));
        EXPECT(0x63, gbc.readMem(0xaac6));
        // CB 9E 0155
        gbc.setState(0x6b34, 0x5a60, 0xeb00, 0xfade, 0x89fe, 0xdf53, 0x1, 0x0);
        gbc.writeMem(0x6b34, { 0xcb, 0x9e });
        gbc.writeMem(0xdf53, { 0xc5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5a60, gbc.sp());
        EXPECT(0x6b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xdf53));
        // CB 9E 0156
        gbc.setState(0xa678, 0x1b88, 0x7400, 0x80fd, 0xd6c7, 0x2ba, 0x1, 0x0);
        gbc.writeMem(0x2ba, { 0xe4 });
        gbc.writeMem(0xa678, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1b88, gbc.sp());
        EXPECT(0xa67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa678));
        EXPECT(0x9e, gbc.readMem(0xa679));
        // CB 9E 015A
        gbc.setState(0x6cb6, 0x4f5a, 0x8040, 0x691f, 0x9588, 0xb194, 0x1, 0x0);
        gbc.writeMem(0x6cb6, { 0xcb, 0x9e });
        gbc.writeMem(0xb194, { 0xe5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4f5a, gbc.sp());
        EXPECT(0x6cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb194));
        // CB 9E 015B
        gbc.setState(0x4139, 0xd6ee, 0xfad0, 0xeea7, 0x5577, 0x273b, 0x0, 0x1);
        gbc.writeMem(0x273b, { 0x17 });
        gbc.writeMem(0x4139, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd6ee, gbc.sp());
        EXPECT(0x413b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 015C
        gbc.setState(0x4c97, 0x187c, 0x7470, 0x52c7, 0x7df8, 0xe3e3, 0x0, 0x1);
        gbc.writeMem(0x4c97, { 0xcb, 0x9e });
        gbc.writeMem(0xe3e3, { 0xbd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x187c, gbc.sp());
        EXPECT(0x4c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe3e3));
        // CB 9E 015D
        gbc.setState(0x1eb7, 0xe856, 0x8a20, 0x98cd, 0x217, 0x56f0, 0x0, 0x1);
        gbc.writeMem(0x1eb7, { 0xcb, 0x9e });
        gbc.writeMem(0x56f0, { 0x71 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe856, gbc.sp());
        EXPECT(0x1eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 015E
        gbc.setState(0xc2cb, 0x4bc1, 0xf350, 0xee20, 0xf609, 0x10d4, 0x1, 0x0);
        gbc.writeMem(0x10d4, { 0xe6 });
        gbc.writeMem(0xc2cb, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4bc1, gbc.sp());
        EXPECT(0xc2cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2cb));
        EXPECT(0x9e, gbc.readMem(0xc2cc));
        // CB 9E 015F
        gbc.setState(0x4b87, 0xc604, 0x2e50, 0xfcc0, 0x897e, 0xa5dc, 0x1, 0x1);
        gbc.writeMem(0x4b87, { 0xcb, 0x9e });
        gbc.writeMem(0xa5dc, { 0xe5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc604, gbc.sp());
        EXPECT(0x4b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa5dc));
        // CB 9E 0160
        gbc.setState(0xea35, 0xe09e, 0xbd90, 0x9b2b, 0x683b, 0xfbd5, 0x1, 0x0);
        gbc.writeMem(0xea35, { 0xcb, 0x9e });
        gbc.writeMem(0xfbd5, { 0x34 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe09e, gbc.sp());
        EXPECT(0xea37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea35));
        EXPECT(0x9e, gbc.readMem(0xea36));
        EXPECT(0x34, gbc.readMem(0xfbd5));
        // CB 9E 0162
        gbc.setState(0x2128, 0xaad0, 0x9150, 0xa67a, 0x308f, 0xe652, 0x1, 0x0);
        gbc.writeMem(0x2128, { 0xcb, 0x9e });
        gbc.writeMem(0xe652, { 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaad0, gbc.sp());
        EXPECT(0x212a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe652));
        // CB 9E 0163
        gbc.setState(0x83e2, 0x7c08, 0x25c0, 0x2a7a, 0x1546, 0x982f, 0x0, 0x0);
        gbc.writeMem(0x83e2, { 0xcb, 0x9e });
        gbc.writeMem(0x982f, { 0x61 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c08, gbc.sp());
        EXPECT(0x83e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e2));
        EXPECT(0x9e, gbc.readMem(0x83e3));
        EXPECT(0x61, gbc.readMem(0x982f));
        // CB 9E 0164
        gbc.setState(0x217e, 0xcc40, 0xb3c0, 0xf486, 0x6ed7, 0xe2c2, 0x1, 0x1);
        gbc.writeMem(0x217e, { 0xcb, 0x9e });
        gbc.writeMem(0xe2c2, { 0xe3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcc40, gbc.sp());
        EXPECT(0x2180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xe2c2));
        // CB 9E 0165
        gbc.setState(0x7d7a, 0x8aab, 0x5cf0, 0x1b68, 0xf3d4, 0xdbc3, 0x0, 0x0);
        gbc.writeMem(0x7d7a, { 0xcb, 0x9e });
        gbc.writeMem(0xdbc3, { 0xfd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8aab, gbc.sp());
        EXPECT(0x7d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xdbc3));
        // CB 9E 0167
        gbc.setState(0x863e, 0xa4c5, 0xeeb0, 0x3a22, 0xe2c6, 0x936d, 0x1, 0x0);
        gbc.writeMem(0x863e, { 0xcb, 0x9e });
        gbc.writeMem(0x936d, { 0x75 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa4c5, gbc.sp());
        EXPECT(0x8640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863e));
        EXPECT(0x9e, gbc.readMem(0x863f));
        EXPECT(0x75, gbc.readMem(0x936d));
        // CB 9E 0169
        gbc.setState(0xa8b5, 0x75f3, 0xbdb0, 0xb8ad, 0x9282, 0xcee1, 0x0, 0x1);
        gbc.writeMem(0xa8b5, { 0xcb, 0x9e });
        gbc.writeMem(0xcee1, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x75f3, gbc.sp());
        EXPECT(0xa8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b5));
        EXPECT(0x9e, gbc.readMem(0xa8b6));
        EXPECT(0xb0, gbc.readMem(0xcee1));
        // CB 9E 016A
        gbc.setState(0xa89e, 0x55d1, 0xaae0, 0xae87, 0xd199, 0x3dbc, 0x1, 0x0);
        gbc.writeMem(0x3dbc, { 0x3 });
        gbc.writeMem(0xa89e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x55d1, gbc.sp());
        EXPECT(0xa8a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89e));
        EXPECT(0x9e, gbc.readMem(0xa89f));
        // CB 9E 016B
        gbc.setState(0x8c48, 0x4ac9, 0x1e0, 0xa36e, 0x1a4, 0x877a, 0x1, 0x1);
        gbc.writeMem(0x877a, { 0x1f });
        gbc.writeMem(0x8c48, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4ac9, gbc.sp());
        EXPECT(0x8c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x877a));
        EXPECT(0xcb, gbc.readMem(0x8c48));
        EXPECT(0x9e, gbc.readMem(0x8c49));
        // CB 9E 016C
        gbc.setState(0x4b4c, 0x9450, 0xc420, 0xdf88, 0xd964, 0xff9c, 0x1, 0x1);
        gbc.writeMem(0x4b4c, { 0xcb, 0x9e });
        gbc.writeMem(0xff9c, { 0xb6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9450, gbc.sp());
        EXPECT(0x4b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xff9c));
        // CB 9E 016D
        gbc.setState(0x9704, 0xeec2, 0x1b00, 0x8e6d, 0x3caa, 0x5146, 0x1, 0x1);
        gbc.writeMem(0x5146, { 0x71 });
        gbc.writeMem(0x9704, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xeec2, gbc.sp());
        EXPECT(0x9706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9704));
        EXPECT(0x9e, gbc.readMem(0x9705));
        // CB 9E 016F
        gbc.setState(0x8151, 0xc84d, 0x25c0, 0x6268, 0xe785, 0xbe53, 0x1, 0x0);
        gbc.writeMem(0x8151, { 0xcb, 0x9e });
        gbc.writeMem(0xbe53, { 0x78 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc84d, gbc.sp());
        EXPECT(0x8153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8151));
        EXPECT(0x9e, gbc.readMem(0x8152));
        EXPECT(0x70, gbc.readMem(0xbe53));
        // CB 9E 0170
        gbc.setState(0xbdd4, 0x5068, 0xa100, 0x1d43, 0x147a, 0xf1f1, 0x0, 0x0);
        gbc.writeMem(0xbdd4, { 0xcb, 0x9e });
        gbc.writeMem(0xf1f1, { 0x4a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5068, gbc.sp());
        EXPECT(0xbdd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd4));
        EXPECT(0x9e, gbc.readMem(0xbdd5));
        EXPECT(0x42, gbc.readMem(0xf1f1));
        // CB 9E 0171
        gbc.setState(0x4564, 0xd6f, 0xeb60, 0x544b, 0xdc1a, 0xdd57, 0x0, 0x0);
        gbc.writeMem(0x4564, { 0xcb, 0x9e });
        gbc.writeMem(0xdd57, { 0x9a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd6f, gbc.sp());
        EXPECT(0x4566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdd57));
        // CB 9E 0172
        gbc.setState(0x7f53, 0xb5a, 0x8c60, 0x7e2f, 0x32da, 0xafee, 0x0, 0x0);
        gbc.writeMem(0x7f53, { 0xcb, 0x9e });
        gbc.writeMem(0xafee, { 0x81 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb5a, gbc.sp());
        EXPECT(0x7f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xafee));
        // CB 9E 0173
        gbc.setState(0xd2cf, 0xac16, 0xb5e0, 0x6ae5, 0x6539, 0x93d2, 0x1, 0x0);
        gbc.writeMem(0x93d2, { 0xbb });
        gbc.writeMem(0xd2cf, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xac16, gbc.sp());
        EXPECT(0xd2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x93d2));
        EXPECT(0xcb, gbc.readMem(0xd2cf));
        EXPECT(0x9e, gbc.readMem(0xd2d0));
        // CB 9E 0174
        gbc.setState(0xdcd4, 0xc5b3, 0xe2c0, 0x11f0, 0x8362, 0xb3d4, 0x1, 0x0);
        gbc.writeMem(0xb3d4, { 0xa8 });
        gbc.writeMem(0xdcd4, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc5b3, gbc.sp());
        EXPECT(0xdcd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb3d4));
        EXPECT(0xcb, gbc.readMem(0xdcd4));
        EXPECT(0x9e, gbc.readMem(0xdcd5));
        // CB 9E 0177
        gbc.setState(0xa0ac, 0x44b7, 0x14d0, 0x30c0, 0x8fec, 0x5232, 0x0, 0x0);
        gbc.writeMem(0x5232, { 0xd4 });
        gbc.writeMem(0xa0ac, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x44b7, gbc.sp());
        EXPECT(0xa0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ac));
        EXPECT(0x9e, gbc.readMem(0xa0ad));
        // CB 9E 0179
        gbc.setState(0x4707, 0xe530, 0xa360, 0xfb03, 0x5a82, 0x24af, 0x0, 0x0);
        gbc.writeMem(0x24af, { 0xf7 });
        gbc.writeMem(0x4707, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe530, gbc.sp());
        EXPECT(0x4709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 017A
        gbc.setState(0x9174, 0x5b1e, 0x5ae0, 0x8951, 0xd560, 0x243d, 0x1, 0x0);
        gbc.writeMem(0x243d, { 0x51 });
        gbc.writeMem(0x9174, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5b1e, gbc.sp());
        EXPECT(0x9176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9174));
        EXPECT(0x9e, gbc.readMem(0x9175));
        // CB 9E 017B
        gbc.setState(0xd407, 0xb67d, 0x60b0, 0xe097, 0xcb77, 0xe251, 0x1, 0x1);
        gbc.writeMem(0xd407, { 0xcb, 0x9e });
        gbc.writeMem(0xe251, { 0x39 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb67d, gbc.sp());
        EXPECT(0xd409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd407));
        EXPECT(0x9e, gbc.readMem(0xd408));
        EXPECT(0x31, gbc.readMem(0xe251));
        // CB 9E 017D
        gbc.setState(0x939a, 0xb30, 0xa5a0, 0x1fd3, 0xc19, 0x5501, 0x0, 0x1);
        gbc.writeMem(0x5501, { 0xc4 });
        gbc.writeMem(0x939a, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb30, gbc.sp());
        EXPECT(0x939c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939a));
        EXPECT(0x9e, gbc.readMem(0x939b));
        // CB 9E 017E
        gbc.setState(0xe53e, 0xce67, 0xe920, 0x9a6c, 0xed2, 0x710e, 0x0, 0x0);
        gbc.writeMem(0x710e, { 0xf6 });
        gbc.writeMem(0xe53e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xce67, gbc.sp());
        EXPECT(0xe540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53e));
        EXPECT(0x9e, gbc.readMem(0xe53f));
        // CB 9E 0180
        gbc.setState(0xd1f8, 0x471f, 0xd250, 0xf7e6, 0xfa99, 0xbb34, 0x1, 0x0);
        gbc.writeMem(0xbb34, { 0x3d });
        gbc.writeMem(0xd1f8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x471f, gbc.sp());
        EXPECT(0xd1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbb34));
        EXPECT(0xcb, gbc.readMem(0xd1f8));
        EXPECT(0x9e, gbc.readMem(0xd1f9));
        // CB 9E 0183
        gbc.setState(0x2bee, 0x797b, 0xb1d0, 0xee02, 0x7e23, 0x31b3, 0x0, 0x0);
        gbc.writeMem(0x2bee, { 0xcb, 0x9e });
        gbc.writeMem(0x31b3, { 0xd1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x797b, gbc.sp());
        EXPECT(0x2bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0184
        gbc.setState(0xb510, 0xbe5e, 0x13a0, 0x7c01, 0xda, 0x6f7e, 0x1, 0x1);
        gbc.writeMem(0x6f7e, { 0x66 });
        gbc.writeMem(0xb510, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbe5e, gbc.sp());
        EXPECT(0xb512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb510));
        EXPECT(0x9e, gbc.readMem(0xb511));
        // CB 9E 0185
        gbc.setState(0xafd8, 0xfbd4, 0x9ba0, 0xf3d7, 0x2a80, 0x7781, 0x0, 0x1);
        gbc.writeMem(0x7781, { 0x37 });
        gbc.writeMem(0xafd8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfbd4, gbc.sp());
        EXPECT(0xafda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd8));
        EXPECT(0x9e, gbc.readMem(0xafd9));
        // CB 9E 0186
        gbc.setState(0x3584, 0x6b32, 0x1b10, 0xbcbd, 0x9bfe, 0x8a3c, 0x1, 0x1);
        gbc.writeMem(0x3584, { 0xcb, 0x9e });
        gbc.writeMem(0x8a3c, { 0xd6 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6b32, gbc.sp());
        EXPECT(0x3586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8a3c));
        // CB 9E 0187
        gbc.setState(0x7435, 0xa9eb, 0x3e50, 0x620f, 0x8408, 0x2f35, 0x1, 0x1);
        gbc.writeMem(0x2f35, { 0x22 });
        gbc.writeMem(0x7435, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa9eb, gbc.sp());
        EXPECT(0x7437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0188
        gbc.setState(0x81eb, 0x19ea, 0x15e0, 0x2db, 0x1c9e, 0x26e9, 0x1, 0x0);
        gbc.writeMem(0x26e9, { 0x16 });
        gbc.writeMem(0x81eb, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x19ea, gbc.sp());
        EXPECT(0x81ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81eb));
        EXPECT(0x9e, gbc.readMem(0x81ec));
        // CB 9E 018B
        gbc.setState(0x180d, 0xcd86, 0xf4a0, 0x97b4, 0xad23, 0xc451, 0x0, 0x1);
        gbc.writeMem(0x180d, { 0xcb, 0x9e });
        gbc.writeMem(0xc451, { 0x16 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcd86, gbc.sp());
        EXPECT(0x180f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc451));
        // CB 9E 018D
        gbc.setState(0x114f, 0x90f0, 0xecd0, 0xfa8a, 0x2bfb, 0x461, 0x0, 0x0);
        gbc.writeMem(0x461, { 0x17 });
        gbc.writeMem(0x114f, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x90f0, gbc.sp());
        EXPECT(0x1151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 018E
        gbc.setState(0xdf67, 0x6f38, 0x56b0, 0xca14, 0x61a, 0xfcd5, 0x1, 0x0);
        gbc.writeMem(0xdf67, { 0xcb, 0x9e });
        gbc.writeMem(0xfcd5, { 0xc5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6f38, gbc.sp());
        EXPECT(0xdf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf67));
        EXPECT(0x9e, gbc.readMem(0xdf68));
        EXPECT(0xc5, gbc.readMem(0xfcd5));
        // CB 9E 018F
        gbc.setState(0x9260, 0x7cf5, 0xe7a0, 0xe81f, 0x20bf, 0xa5dd, 0x0, 0x0);
        gbc.writeMem(0x9260, { 0xcb, 0x9e });
        gbc.writeMem(0xa5dd, { 0x9e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7cf5, gbc.sp());
        EXPECT(0x9262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9260));
        EXPECT(0x9e, gbc.readMem(0x9261));
        EXPECT(0x96, gbc.readMem(0xa5dd));
        // CB 9E 0190
        gbc.setState(0x13f4, 0x75a5, 0xe540, 0x7f42, 0x1aa7, 0x2056, 0x0, 0x0);
        gbc.writeMem(0x13f4, { 0xcb, 0x9e });
        gbc.writeMem(0x2056, { 0xe3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x75a5, gbc.sp());
        EXPECT(0x13f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0191
        gbc.setState(0xbf69, 0x24fc, 0x6c30, 0x35b0, 0xd8bb, 0xa0ff, 0x0, 0x0);
        gbc.writeMem(0xa0ff, { 0x7 });
        gbc.writeMem(0xbf69, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x24fc, gbc.sp());
        EXPECT(0xbf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa0ff));
        EXPECT(0xcb, gbc.readMem(0xbf69));
        EXPECT(0x9e, gbc.readMem(0xbf6a));
        // CB 9E 0194
        gbc.setState(0x3a7b, 0x4f1e, 0x160, 0xda25, 0x1f2a, 0xff1e, 0x0, 0x0);
        gbc.writeMem(0x3a7b, { 0xcb, 0x9e });
        gbc.writeMem(0xff1e, { 0x73 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4f1e, gbc.sp());
        EXPECT(0x3a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xff1e));
        // CB 9E 0196
        gbc.setState(0xe561, 0x65df, 0xe00, 0x15f4, 0x62a6, 0x8920, 0x1, 0x0);
        gbc.writeMem(0x8920, { 0xa5 });
        gbc.writeMem(0xe561, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x65df, gbc.sp());
        EXPECT(0xe563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x8920));
        EXPECT(0xcb, gbc.readMem(0xe561));
        EXPECT(0x9e, gbc.readMem(0xe562));
        // CB 9E 0197
        gbc.setState(0x7751, 0xc875, 0xc780, 0xc8e9, 0x9f2b, 0xa425, 0x0, 0x0);
        gbc.writeMem(0x7751, { 0xcb, 0x9e });
        gbc.writeMem(0xa425, { 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc875, gbc.sp());
        EXPECT(0x7753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa425));
        // CB 9E 0198
        gbc.setState(0x6206, 0xe7f9, 0x7a70, 0xcf1, 0xc57d, 0xc7ec, 0x0, 0x0);
        gbc.writeMem(0x6206, { 0xcb, 0x9e });
        gbc.writeMem(0xc7ec, { 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe7f9, gbc.sp());
        EXPECT(0x6208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc7ec));
        // CB 9E 0199
        gbc.setState(0xec6e, 0xa71e, 0x67e0, 0x371d, 0xeee4, 0xb2bd, 0x1, 0x1);
        gbc.writeMem(0xb2bd, { 0xbc });
        gbc.writeMem(0xec6e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa71e, gbc.sp());
        EXPECT(0xec70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xb2bd));
        EXPECT(0xcb, gbc.readMem(0xec6e));
        EXPECT(0x9e, gbc.readMem(0xec6f));
        // CB 9E 019B
        gbc.setState(0xc9a3, 0x52f4, 0x75f0, 0x35eb, 0x6398, 0xec56, 0x1, 0x1);
        gbc.writeMem(0xc9a3, { 0xcb, 0x9e });
        gbc.writeMem(0xec56, { 0x6 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x52f4, gbc.sp());
        EXPECT(0xc9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a3));
        EXPECT(0x9e, gbc.readMem(0xc9a4));
        EXPECT(0x6, gbc.readMem(0xec56));
        // CB 9E 019C
        gbc.setState(0xeee4, 0x8a53, 0xde70, 0xb536, 0x1c16, 0xa110, 0x1, 0x0);
        gbc.writeMem(0xa110, { 0x6f });
        gbc.writeMem(0xeee4, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8a53, gbc.sp());
        EXPECT(0xeee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa110));
        EXPECT(0xcb, gbc.readMem(0xeee4));
        EXPECT(0x9e, gbc.readMem(0xeee5));
        // CB 9E 019D
        gbc.setState(0x2f94, 0x8ca6, 0xc880, 0xec0c, 0xf9e7, 0x20b5, 0x0, 0x1);
        gbc.writeMem(0x20b5, { 0x73 });
        gbc.writeMem(0x2f94, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8ca6, gbc.sp());
        EXPECT(0x2f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 019F
        gbc.setState(0xd087, 0xca4d, 0x3180, 0xea94, 0x63a7, 0xfd77, 0x0, 0x1);
        gbc.writeMem(0xd087, { 0xcb, 0x9e });
        gbc.writeMem(0xfd77, { 0x40 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xca4d, gbc.sp());
        EXPECT(0xd089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd087));
        EXPECT(0x9e, gbc.readMem(0xd088));
        EXPECT(0x40, gbc.readMem(0xfd77));
        // CB 9E 01A0
        gbc.setState(0x2847, 0xab50, 0xfe60, 0xa7b2, 0xc1e3, 0xd289, 0x0, 0x1);
        gbc.writeMem(0x2847, { 0xcb, 0x9e });
        gbc.writeMem(0xd289, { 0x49 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xab50, gbc.sp());
        EXPECT(0x2849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xd289));
        // CB 9E 01A2
        gbc.setState(0xeefc, 0xa09f, 0x7700, 0xa918, 0x191f, 0x6de2, 0x1, 0x1);
        gbc.writeMem(0x6de2, { 0x56 });
        gbc.writeMem(0xeefc, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa09f, gbc.sp());
        EXPECT(0xeefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefc));
        EXPECT(0x9e, gbc.readMem(0xeefd));
        // CB 9E 01A3
        gbc.setState(0x8bbb, 0xd08b, 0xee0, 0x2a9e, 0x38ec, 0xe536, 0x1, 0x0);
        gbc.writeMem(0x8bbb, { 0xcb, 0x9e });
        gbc.writeMem(0xe536, { 0xf0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd08b, gbc.sp());
        EXPECT(0x8bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bbb));
        EXPECT(0x9e, gbc.readMem(0x8bbc));
        EXPECT(0xf0, gbc.readMem(0xe536));
        // CB 9E 01A6
        gbc.setState(0x438, 0x7ab4, 0xfe10, 0xe73c, 0x8918, 0x3ff0, 0x0, 0x0);
        gbc.writeMem(0x438, { 0xcb, 0x9e });
        gbc.writeMem(0x3ff0, { 0x94 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7ab4, gbc.sp());
        EXPECT(0x43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 01A9
        gbc.setState(0x12dd, 0x67c0, 0x9e40, 0x2cfd, 0xd8a7, 0x92f8, 0x1, 0x0);
        gbc.writeMem(0x12dd, { 0xcb, 0x9e });
        gbc.writeMem(0x92f8, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x67c0, gbc.sp());
        EXPECT(0x12df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x92f8));
        // CB 9E 01AA
        gbc.setState(0xc631, 0x8bbd, 0xbb40, 0x8937, 0x8884, 0xd5ed, 0x1, 0x0);
        gbc.writeMem(0xc631, { 0xcb, 0x9e });
        gbc.writeMem(0xd5ed, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8bbd, gbc.sp());
        EXPECT(0xc633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc631));
        EXPECT(0x9e, gbc.readMem(0xc632));
        EXPECT(0xb3, gbc.readMem(0xd5ed));
        // CB 9E 01AB
        gbc.setState(0x2f4e, 0xef98, 0xa0c0, 0x6063, 0xea5c, 0xefe8, 0x1, 0x0);
        gbc.writeMem(0x2f4e, { 0xcb, 0x9e });
        gbc.writeMem(0xefe8, { 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xef98, gbc.sp());
        EXPECT(0x2f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xefe8));
        // CB 9E 01AD
        gbc.setState(0xeb06, 0xec7e, 0x9bb0, 0x2611, 0xcf6f, 0x8df3, 0x1, 0x1);
        gbc.writeMem(0x8df3, { 0xca });
        gbc.writeMem(0xeb06, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xec7e, gbc.sp());
        EXPECT(0xeb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8df3));
        EXPECT(0xcb, gbc.readMem(0xeb06));
        EXPECT(0x9e, gbc.readMem(0xeb07));
        // CB 9E 01B1
        gbc.setState(0xafa3, 0x940a, 0x8360, 0x664b, 0x7aec, 0xc89, 0x0, 0x0);
        gbc.writeMem(0xc89, { 0x61 });
        gbc.writeMem(0xafa3, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x940a, gbc.sp());
        EXPECT(0xafa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa3));
        EXPECT(0x9e, gbc.readMem(0xafa4));
        // CB 9E 01B2
        gbc.setState(0x7711, 0xa324, 0x3f90, 0xfaeb, 0x35fe, 0x425, 0x1, 0x0);
        gbc.writeMem(0x425, { 0xc2 });
        gbc.writeMem(0x7711, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa324, gbc.sp());
        EXPECT(0x7713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 01B3
        gbc.setState(0x60fe, 0x9b4c, 0xa930, 0x611d, 0x923a, 0xc1f2, 0x1, 0x0);
        gbc.writeMem(0x60fe, { 0xcb, 0x9e });
        gbc.writeMem(0xc1f2, { 0xa });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9b4c, gbc.sp());
        EXPECT(0x6100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xc1f2));
        // CB 9E 01B6
        gbc.setState(0xd854, 0x49ae, 0x490, 0x2921, 0xae8b, 0xc3a1, 0x0, 0x0);
        gbc.writeMem(0xc3a1, { 0x57 });
        gbc.writeMem(0xd854, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x49ae, gbc.sp());
        EXPECT(0xd856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc3a1));
        EXPECT(0xcb, gbc.readMem(0xd854));
        EXPECT(0x9e, gbc.readMem(0xd855));
        // CB 9E 01B7
        gbc.setState(0x381b, 0x726b, 0xe380, 0x15ed, 0x939c, 0x809b, 0x0, 0x0);
        gbc.writeMem(0x381b, { 0xcb, 0x9e });
        gbc.writeMem(0x809b, { 0x22 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x726b, gbc.sp());
        EXPECT(0x381d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x809b));
        // CB 9E 01B8
        gbc.setState(0xd2cc, 0x909f, 0x3f30, 0xdb02, 0x3d63, 0xc94d, 0x1, 0x1);
        gbc.writeMem(0xc94d, { 0xa8 });
        gbc.writeMem(0xd2cc, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x909f, gbc.sp());
        EXPECT(0xd2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc94d));
        EXPECT(0xcb, gbc.readMem(0xd2cc));
        EXPECT(0x9e, gbc.readMem(0xd2cd));
        // CB 9E 01B9
        gbc.setState(0xcb8b, 0xf172, 0x78b0, 0xb01d, 0xe48f, 0xbdd5, 0x0, 0x0);
        gbc.writeMem(0xbdd5, { 0xe2 });
        gbc.writeMem(0xcb8b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf172, gbc.sp());
        EXPECT(0xcb8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbdd5));
        EXPECT(0xcb, gbc.readMem(0xcb8b));
        EXPECT(0x9e, gbc.readMem(0xcb8c));
        // CB 9E 01BA
        gbc.setState(0x87d9, 0x5ea9, 0xa6a0, 0xb293, 0x65fc, 0xf5ae, 0x1, 0x0);
        gbc.writeMem(0x87d9, { 0xcb, 0x9e });
        gbc.writeMem(0xf5ae, { 0x52 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5ea9, gbc.sp());
        EXPECT(0x87db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d9));
        EXPECT(0x9e, gbc.readMem(0x87da));
        EXPECT(0x52, gbc.readMem(0xf5ae));
        // CB 9E 01BB
        gbc.setState(0x129c, 0x4bb8, 0x4570, 0x2a25, 0x6705, 0xd138, 0x1, 0x0);
        gbc.writeMem(0x129c, { 0xcb, 0x9e });
        gbc.writeMem(0xd138, { 0x7e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4bb8, gbc.sp());
        EXPECT(0x129e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd138));
        // CB 9E 01BC
        gbc.setState(0x3e39, 0xae2a, 0xf750, 0x9eaa, 0x80dd, 0x1d3e, 0x1, 0x0);
        gbc.writeMem(0x1d3e, { 0x85 });
        gbc.writeMem(0x3e39, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xae2a, gbc.sp());
        EXPECT(0x3e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 01BD
        gbc.setState(0x7af7, 0x2d95, 0xe640, 0x37c6, 0xe171, 0xbb1a, 0x1, 0x0);
        gbc.writeMem(0x7af7, { 0xcb, 0x9e });
        gbc.writeMem(0xbb1a, { 0x90 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2d95, gbc.sp());
        EXPECT(0x7af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xbb1a));
        // CB 9E 01BF
        gbc.setState(0x53d1, 0xb90a, 0x5f30, 0xa221, 0x3e2f, 0x7995, 0x1, 0x0);
        gbc.writeMem(0x53d1, { 0xcb, 0x9e });
        gbc.writeMem(0x7995, { 0x81 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb90a, gbc.sp());
        EXPECT(0x53d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 01C1
        gbc.setState(0xe1b3, 0x3093, 0x3070, 0x6b68, 0x8bb2, 0xd52f, 0x1, 0x1);
        gbc.writeMem(0xd52f, { 0xfe });
        gbc.writeMem(0xe1b3, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3093, gbc.sp());
        EXPECT(0xe1b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xd52f));
        EXPECT(0xcb, gbc.readMem(0xe1b3));
        EXPECT(0x9e, gbc.readMem(0xe1b4));
        // CB 9E 01C2
        gbc.setState(0x7af1, 0xfc15, 0x8910, 0x6f9e, 0x1cd5, 0xe75a, 0x0, 0x0);
        gbc.writeMem(0x7af1, { 0xcb, 0x9e });
        gbc.writeMem(0xe75a, { 0x43 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfc15, gbc.sp());
        EXPECT(0x7af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe75a));
        // CB 9E 01C3
        gbc.setState(0x186a, 0x2f9d, 0x98a0, 0x2523, 0xd992, 0xd99d, 0x1, 0x1);
        gbc.writeMem(0x186a, { 0xcb, 0x9e });
        gbc.writeMem(0xd99d, { 0x75 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2f9d, gbc.sp());
        EXPECT(0x186c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xd99d));
        // CB 9E 01C4
        gbc.setState(0xac73, 0xfab0, 0x48c0, 0xf1a6, 0x4b2e, 0x3af5, 0x1, 0x0);
        gbc.writeMem(0x3af5, { 0x12 });
        gbc.writeMem(0xac73, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfab0, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac73));
        EXPECT(0x9e, gbc.readMem(0xac74));
        // CB 9E 01C6
        gbc.setState(0x1438, 0xbb81, 0x8f50, 0x5761, 0xf452, 0x83df, 0x0, 0x0);
        gbc.writeMem(0x1438, { 0xcb, 0x9e });
        gbc.writeMem(0x83df, { 0x9c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbb81, gbc.sp());
        EXPECT(0x143a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x83df));
        // CB 9E 01C7
        gbc.setState(0x6f2b, 0xc6f, 0xb960, 0x35c4, 0xd2f, 0x65c9, 0x1, 0x1);
        gbc.writeMem(0x65c9, { 0xe0 });
        gbc.writeMem(0x6f2b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc6f, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 01C8
        gbc.setState(0x6a66, 0x9da6, 0xf390, 0x1efd, 0x1fd7, 0x2882, 0x0, 0x0);
        gbc.writeMem(0x2882, { 0xb6 });
        gbc.writeMem(0x6a66, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9da6, gbc.sp());
        EXPECT(0x6a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 01CA
        gbc.setState(0xe428, 0x9630, 0xcb70, 0xe466, 0x9526, 0x73be, 0x0, 0x0);
        gbc.writeMem(0x73be, { 0x74 });
        gbc.writeMem(0xe428, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9630, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe428));
        EXPECT(0x9e, gbc.readMem(0xe429));
        // CB 9E 01CB
        gbc.setState(0x35a3, 0x5282, 0xbe20, 0x4561, 0xc23c, 0x4cc4, 0x1, 0x0);
        gbc.writeMem(0x35a3, { 0xcb, 0x9e });
        gbc.writeMem(0x4cc4, { 0xc7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5282, gbc.sp());
        EXPECT(0x35a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 01CE
        gbc.setState(0xb19f, 0x9b15, 0x64d0, 0xfebb, 0x7b61, 0xf476, 0x0, 0x1);
        gbc.writeMem(0xb19f, { 0xcb, 0x9e });
        gbc.writeMem(0xf476, { 0x6c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9b15, gbc.sp());
        EXPECT(0xb1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19f));
        EXPECT(0x9e, gbc.readMem(0xb1a0));
        EXPECT(0x64, gbc.readMem(0xf476));
        // CB 9E 01D0
        gbc.setState(0xc0b8, 0xf0b4, 0x3ae0, 0xb590, 0xab72, 0xc1bc, 0x0, 0x1);
        gbc.writeMem(0xc0b8, { 0xcb, 0x9e });
        gbc.writeMem(0xc1bc, { 0x24 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf0b4, gbc.sp());
        EXPECT(0xc0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b8));
        EXPECT(0x9e, gbc.readMem(0xc0b9));
        EXPECT(0x24, gbc.readMem(0xc1bc));
        // CB 9E 01D1
        gbc.setState(0x628e, 0x397a, 0xb090, 0x9e32, 0x5022, 0xe19e, 0x0, 0x0);
        gbc.writeMem(0x628e, { 0xcb, 0x9e });
        gbc.writeMem(0xe19e, { 0xc1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x397a, gbc.sp());
        EXPECT(0x6290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe19e));
        // CB 9E 01D2
        gbc.setState(0x8deb, 0xb4aa, 0xa520, 0xe798, 0xe781, 0x3519, 0x1, 0x0);
        gbc.writeMem(0x3519, { 0x32 });
        gbc.writeMem(0x8deb, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb4aa, gbc.sp());
        EXPECT(0x8ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8deb));
        EXPECT(0x9e, gbc.readMem(0x8dec));
        // CB 9E 01D3
        gbc.setState(0x5a93, 0xd9d1, 0x5890, 0x41a0, 0xd963, 0x91e8, 0x1, 0x0);
        gbc.writeMem(0x5a93, { 0xcb, 0x9e });
        gbc.writeMem(0x91e8, { 0x1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd9d1, gbc.sp());
        EXPECT(0x5a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x91e8));
        // CB 9E 01D4
        gbc.setState(0xa996, 0x6ef, 0x3000, 0xb940, 0x4361, 0xd6da, 0x1, 0x0);
        gbc.writeMem(0xa996, { 0xcb, 0x9e });
        gbc.writeMem(0xd6da, { 0xb2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6ef, gbc.sp());
        EXPECT(0xa998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa996));
        EXPECT(0x9e, gbc.readMem(0xa997));
        EXPECT(0xb2, gbc.readMem(0xd6da));
        // CB 9E 01D5
        gbc.setState(0x91bb, 0xf9c6, 0xc690, 0x352e, 0xcc13, 0x3675, 0x1, 0x1);
        gbc.writeMem(0x3675, { 0xb1 });
        gbc.writeMem(0x91bb, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf9c6, gbc.sp());
        EXPECT(0x91bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91bb));
        EXPECT(0x9e, gbc.readMem(0x91bc));
        // CB 9E 01D6
        gbc.setState(0xd37e, 0xe526, 0x7080, 0x6b35, 0x427e, 0xfb70, 0x1, 0x0);
        gbc.writeMem(0xd37e, { 0xcb, 0x9e });
        gbc.writeMem(0xfb70, { 0x4b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe526, gbc.sp());
        EXPECT(0xd380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37e));
        EXPECT(0x9e, gbc.readMem(0xd37f));
        EXPECT(0x43, gbc.readMem(0xfb70));
        // CB 9E 01DA
        gbc.setState(0x1c57, 0xd356, 0xa3e0, 0x685f, 0xdeb9, 0xc064, 0x1, 0x1);
        gbc.writeMem(0x1c57, { 0xcb, 0x9e });
        gbc.writeMem(0xc064, { 0x3b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd356, gbc.sp());
        EXPECT(0x1c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc064));
        // CB 9E 01DC
        gbc.setState(0x88c5, 0x2998, 0xbc60, 0xe678, 0x3f1b, 0xc0fa, 0x1, 0x0);
        gbc.writeMem(0x88c5, { 0xcb, 0x9e });
        gbc.writeMem(0xc0fa, { 0xbe });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2998, gbc.sp());
        EXPECT(0x88c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c5));
        EXPECT(0x9e, gbc.readMem(0x88c6));
        EXPECT(0xb6, gbc.readMem(0xc0fa));
        // CB 9E 01DE
        gbc.setState(0x9175, 0x77d8, 0xbc70, 0x8059, 0x20da, 0xd9e7, 0x1, 0x1);
        gbc.writeMem(0x9175, { 0xcb, 0x9e });
        gbc.writeMem(0xd9e7, { 0xd6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x77d8, gbc.sp());
        EXPECT(0x9177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9175));
        EXPECT(0x9e, gbc.readMem(0x9176));
        EXPECT(0xd6, gbc.readMem(0xd9e7));
        // CB 9E 01DF
        gbc.setState(0x6898, 0x5f89, 0x84b0, 0xcd0d, 0x5343, 0xfca1, 0x1, 0x1);
        gbc.writeMem(0x6898, { 0xcb, 0x9e });
        gbc.writeMem(0xfca1, { 0x67 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5f89, gbc.sp());
        EXPECT(0x689a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xfca1));
        // CB 9E 01E0
        gbc.setState(0x38e0, 0x5da7, 0x3c10, 0xeebf, 0x7cf5, 0xeee5, 0x0, 0x1);
        gbc.writeMem(0x38e0, { 0xcb, 0x9e });
        gbc.writeMem(0xeee5, { 0xd0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5da7, gbc.sp());
        EXPECT(0x38e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xeee5));
        // CB 9E 01E2
        gbc.setState(0xa2ec, 0xd65f, 0x5630, 0xdd67, 0x81ba, 0x9ef7, 0x0, 0x0);
        gbc.writeMem(0x9ef7, { 0xc });
        gbc.writeMem(0xa2ec, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd65f, gbc.sp());
        EXPECT(0xa2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9ef7));
        EXPECT(0xcb, gbc.readMem(0xa2ec));
        EXPECT(0x9e, gbc.readMem(0xa2ed));
        // CB 9E 01E3
        gbc.setState(0xae2b, 0x56bc, 0x9f40, 0x3f30, 0x1998, 0x9d7b, 0x1, 0x0);
        gbc.writeMem(0x9d7b, { 0x80 });
        gbc.writeMem(0xae2b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x56bc, gbc.sp());
        EXPECT(0xae2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9d7b));
        EXPECT(0xcb, gbc.readMem(0xae2b));
        EXPECT(0x9e, gbc.readMem(0xae2c));
        // CB 9E 01E4
        gbc.setState(0xbca, 0x947, 0x2730, 0xd1fe, 0x8f3, 0x9d58, 0x0, 0x1);
        gbc.writeMem(0xbca, { 0xcb, 0x9e });
        gbc.writeMem(0x9d58, { 0xa });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x947, gbc.sp());
        EXPECT(0xbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9d58));
        // CB 9E 01E6
        gbc.setState(0x9f58, 0x6b76, 0xba50, 0x665e, 0x4ada, 0x7e3c, 0x0, 0x0);
        gbc.writeMem(0x7e3c, { 0xc0 });
        gbc.writeMem(0x9f58, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6b76, gbc.sp());
        EXPECT(0x9f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f58));
        EXPECT(0x9e, gbc.readMem(0x9f59));
        // CB 9E 01E7
        gbc.setState(0xdaff, 0x2e85, 0x8ce0, 0x1cad, 0x60e7, 0x3b20, 0x0, 0x1);
        gbc.writeMem(0x3b20, { 0x36 });
        gbc.writeMem(0xdaff, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2e85, gbc.sp());
        EXPECT(0xdb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaff));
        EXPECT(0x9e, gbc.readMem(0xdb00));
        // CB 9E 01E8
        gbc.setState(0x997d, 0xed7c, 0xada0, 0x563c, 0x8f6a, 0x9236, 0x1, 0x1);
        gbc.writeMem(0x9236, { 0x4 });
        gbc.writeMem(0x997d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xed7c, gbc.sp());
        EXPECT(0x997f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9236));
        EXPECT(0xcb, gbc.readMem(0x997d));
        EXPECT(0x9e, gbc.readMem(0x997e));
        // CB 9E 01EB
        gbc.setState(0x8d4e, 0xd2ea, 0xa8e0, 0xec45, 0x3b0c, 0x927b, 0x0, 0x1);
        gbc.writeMem(0x8d4e, { 0xcb, 0x9e });
        gbc.writeMem(0x927b, { 0xd4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd2ea, gbc.sp());
        EXPECT(0x8d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4e));
        EXPECT(0x9e, gbc.readMem(0x8d4f));
        EXPECT(0xd4, gbc.readMem(0x927b));
        // CB 9E 01EC
        gbc.setState(0x76f, 0x8cbd, 0xdee0, 0x146a, 0xd108, 0x6e75, 0x1, 0x1);
        gbc.writeMem(0x76f, { 0xcb, 0x9e });
        gbc.writeMem(0x6e75, { 0xf5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8cbd, gbc.sp());
        EXPECT(0x771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 01ED
        gbc.setState(0x863e, 0x7057, 0x3e80, 0x9f39, 0xb6d5, 0xc193, 0x1, 0x1);
        gbc.writeMem(0x863e, { 0xcb, 0x9e });
        gbc.writeMem(0xc193, { 0xc0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7057, gbc.sp());
        EXPECT(0x8640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863e));
        EXPECT(0x9e, gbc.readMem(0x863f));
        EXPECT(0xc0, gbc.readMem(0xc193));
        // CB 9E 01EE
        gbc.setState(0x4559, 0x9598, 0x99f0, 0x53df, 0x1c16, 0xaa8a, 0x0, 0x0);
        gbc.writeMem(0x4559, { 0xcb, 0x9e });
        gbc.writeMem(0xaa8a, { 0x72 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9598, gbc.sp());
        EXPECT(0x455b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xaa8a));
        // CB 9E 01F1
        gbc.setState(0xe2dd, 0xdf55, 0xa210, 0x9c7f, 0x3187, 0xaae1, 0x0, 0x0);
        gbc.writeMem(0xaae1, { 0x9c });
        gbc.writeMem(0xe2dd, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdf55, gbc.sp());
        EXPECT(0xe2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaae1));
        EXPECT(0xcb, gbc.readMem(0xe2dd));
        EXPECT(0x9e, gbc.readMem(0xe2de));
        // CB 9E 01F2
        gbc.setState(0x686d, 0xeebe, 0xe3c0, 0x98b3, 0xea76, 0xaa47, 0x0, 0x0);
        gbc.writeMem(0x686d, { 0xcb, 0x9e });
        gbc.writeMem(0xaa47, { 0x56 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xeebe, gbc.sp());
        EXPECT(0x686f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xaa47));
        // CB 9E 01F4
        gbc.setState(0x6ef3, 0xaadc, 0xae70, 0x86c9, 0x5ae0, 0x99a3, 0x1, 0x1);
        gbc.writeMem(0x6ef3, { 0xcb, 0x9e });
        gbc.writeMem(0x99a3, { 0x54 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaadc, gbc.sp());
        EXPECT(0x6ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x99a3));
        // CB 9E 01F5
        gbc.setState(0xd8e2, 0x9357, 0xd8e0, 0x81b5, 0x3c27, 0xc8a1, 0x0, 0x1);
        gbc.writeMem(0xc8a1, { 0x42 });
        gbc.writeMem(0xd8e2, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9357, gbc.sp());
        EXPECT(0xd8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc8a1));
        EXPECT(0xcb, gbc.readMem(0xd8e2));
        EXPECT(0x9e, gbc.readMem(0xd8e3));
        // CB 9E 01F8
        gbc.setState(0xaa9e, 0xf904, 0xf0f0, 0x1ecc, 0x4bf9, 0x7897, 0x1, 0x0);
        gbc.writeMem(0x7897, { 0xa5 });
        gbc.writeMem(0xaa9e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf904, gbc.sp());
        EXPECT(0xaaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9e));
        EXPECT(0x9e, gbc.readMem(0xaa9f));
        // CB 9E 01FA
        gbc.setState(0x9b1d, 0x40e9, 0xb810, 0xaa18, 0xfb83, 0xdfb7, 0x1, 0x1);
        gbc.writeMem(0x9b1d, { 0xcb, 0x9e });
        gbc.writeMem(0xdfb7, { 0x16 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x40e9, gbc.sp());
        EXPECT(0x9b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1d));
        EXPECT(0x9e, gbc.readMem(0x9b1e));
        EXPECT(0x16, gbc.readMem(0xdfb7));
        // CB 9E 01FB
        gbc.setState(0x52bf, 0xd69a, 0xa7a0, 0xf679, 0xe1f5, 0x7f6c, 0x1, 0x1);
        gbc.writeMem(0x52bf, { 0xcb, 0x9e });
        gbc.writeMem(0x7f6c, { 0x51 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd69a, gbc.sp());
        EXPECT(0x52c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 01FC
        gbc.setState(0x9833, 0xc8d3, 0x3510, 0xc590, 0xc53, 0xef22, 0x0, 0x1);
        gbc.writeMem(0x9833, { 0xcb, 0x9e });
        gbc.writeMem(0xef22, { 0xa6 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc8d3, gbc.sp());
        EXPECT(0x9835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9833));
        EXPECT(0x9e, gbc.readMem(0x9834));
        EXPECT(0xa6, gbc.readMem(0xef22));
        // CB 9E 01FD
        gbc.setState(0x8c73, 0x6a3d, 0xc990, 0x6020, 0xdbc6, 0x4806, 0x1, 0x1);
        gbc.writeMem(0x4806, { 0xb0 });
        gbc.writeMem(0x8c73, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6a3d, gbc.sp());
        EXPECT(0x8c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c73));
        EXPECT(0x9e, gbc.readMem(0x8c74));
        // CB 9E 01FE
        gbc.setState(0xaeab, 0x88f9, 0xc00, 0x4a47, 0xadbb, 0xab1d, 0x0, 0x0);
        gbc.writeMem(0xab1d, { 0x90 });
        gbc.writeMem(0xaeab, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x88f9, gbc.sp());
        EXPECT(0xaead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xab1d));
        EXPECT(0xcb, gbc.readMem(0xaeab));
        EXPECT(0x9e, gbc.readMem(0xaeac));
        // CB 9E 01FF
        gbc.setState(0x159b, 0x4f00, 0xb440, 0xa471, 0x5b79, 0x4b84, 0x0, 0x1);
        gbc.writeMem(0x159b, { 0xcb, 0x9e });
        gbc.writeMem(0x4b84, { 0x86 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4f00, gbc.sp());
        EXPECT(0x159d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0200
        gbc.setState(0xca84, 0x8b4e, 0x56d0, 0xe8d6, 0x5455, 0xfde7, 0x0, 0x1);
        gbc.writeMem(0xca84, { 0xcb, 0x9e });
        gbc.writeMem(0xfde7, { 0x69 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8b4e, gbc.sp());
        EXPECT(0xca86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca84));
        EXPECT(0x9e, gbc.readMem(0xca85));
        EXPECT(0x61, gbc.readMem(0xfde7));
        // CB 9E 0202
        gbc.setState(0x9973, 0x1d36, 0xc30, 0xc4db, 0xb822, 0x766, 0x0, 0x1);
        gbc.writeMem(0x766, { 0x84 });
        gbc.writeMem(0x9973, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1d36, gbc.sp());
        EXPECT(0x9975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9973));
        EXPECT(0x9e, gbc.readMem(0x9974));
        // CB 9E 0203
        gbc.setState(0x8a80, 0xc571, 0xa240, 0xed9b, 0xee5a, 0xf5a7, 0x0, 0x1);
        gbc.writeMem(0x8a80, { 0xcb, 0x9e });
        gbc.writeMem(0xf5a7, { 0x1f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc571, gbc.sp());
        EXPECT(0x8a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a80));
        EXPECT(0x9e, gbc.readMem(0x8a81));
        EXPECT(0x17, gbc.readMem(0xf5a7));
        // CB 9E 0204
        gbc.setState(0x3c76, 0xcf64, 0x2e80, 0x6a8f, 0x9321, 0x4169, 0x1, 0x0);
        gbc.writeMem(0x3c76, { 0xcb, 0x9e });
        gbc.writeMem(0x4169, { 0xa1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcf64, gbc.sp());
        EXPECT(0x3c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0205
        gbc.setState(0xcff0, 0xa55a, 0x970, 0x496c, 0x91bb, 0x94aa, 0x0, 0x1);
        gbc.writeMem(0x94aa, { 0x6f });
        gbc.writeMem(0xcff0, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa55a, gbc.sp());
        EXPECT(0xcff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x94aa));
        EXPECT(0xcb, gbc.readMem(0xcff0));
        EXPECT(0x9e, gbc.readMem(0xcff1));
        // CB 9E 0208
        gbc.setState(0x3f7f, 0x2223, 0xff60, 0xfb9b, 0x937f, 0xaa63, 0x1, 0x1);
        gbc.writeMem(0x3f7f, { 0xcb, 0x9e });
        gbc.writeMem(0xaa63, { 0xde });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2223, gbc.sp());
        EXPECT(0x3f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xaa63));
        // CB 9E 0209
        gbc.setState(0xe4ed, 0xdbe4, 0x4510, 0x724d, 0xc8d5, 0x72d1, 0x0, 0x0);
        gbc.writeMem(0x72d1, { 0x17 });
        gbc.writeMem(0xe4ed, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdbe4, gbc.sp());
        EXPECT(0xe4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ed));
        EXPECT(0x9e, gbc.readMem(0xe4ee));
        // CB 9E 020B
        gbc.setState(0x175, 0xd2b5, 0x4560, 0x4a96, 0x8d5e, 0xd26c, 0x1, 0x0);
        gbc.writeMem(0x175, { 0xcb, 0x9e });
        gbc.writeMem(0xd26c, { 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd2b5, gbc.sp());
        EXPECT(0x177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd26c));
        // CB 9E 020D
        gbc.setState(0x790d, 0x865d, 0xf3b0, 0xb05b, 0x9c1a, 0xb2e9, 0x1, 0x0);
        gbc.writeMem(0x790d, { 0xcb, 0x9e });
        gbc.writeMem(0xb2e9, { 0xdb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x865d, gbc.sp());
        EXPECT(0x790f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xb2e9));
        // CB 9E 020E
        gbc.setState(0x9886, 0xe035, 0x7a30, 0x90d4, 0x3573, 0x8cba, 0x0, 0x0);
        gbc.writeMem(0x8cba, { 0x1 });
        gbc.writeMem(0x9886, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0x9888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x8cba));
        EXPECT(0xcb, gbc.readMem(0x9886));
        EXPECT(0x9e, gbc.readMem(0x9887));
        // CB 9E 0210
        gbc.setState(0x70ed, 0x458a, 0xa590, 0x2c10, 0x2b42, 0x3c3a, 0x0, 0x0);
        gbc.writeMem(0x3c3a, { 0x4 });
        gbc.writeMem(0x70ed, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x458a, gbc.sp());
        EXPECT(0x70ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0211
        gbc.setState(0x483d, 0x8d49, 0x8a30, 0xadfd, 0xda59, 0x9638, 0x1, 0x1);
        gbc.writeMem(0x483d, { 0xcb, 0x9e });
        gbc.writeMem(0x9638, { 0xe7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8d49, gbc.sp());
        EXPECT(0x483f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9638));
        // CB 9E 0212
        gbc.setState(0xa875, 0xf653, 0xa920, 0xe314, 0x34d8, 0xbf0a, 0x0, 0x1);
        gbc.writeMem(0xa875, { 0xcb, 0x9e });
        gbc.writeMem(0xbf0a, { 0xa4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf653, gbc.sp());
        EXPECT(0xa877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa875));
        EXPECT(0x9e, gbc.readMem(0xa876));
        EXPECT(0xa4, gbc.readMem(0xbf0a));
        // CB 9E 0213
        gbc.setState(0xd220, 0x6047, 0x8140, 0xe4d4, 0x5e42, 0xee9a, 0x1, 0x1);
        gbc.writeMem(0xd220, { 0xcb, 0x9e });
        gbc.writeMem(0xee9a, { 0xed });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6047, gbc.sp());
        EXPECT(0xd222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd220));
        EXPECT(0x9e, gbc.readMem(0xd221));
        EXPECT(0xe5, gbc.readMem(0xee9a));
        // CB 9E 0215
        gbc.setState(0x66ce, 0xb532, 0x5de0, 0xf22a, 0x94a4, 0x5ee8, 0x0, 0x0);
        gbc.writeMem(0x5ee8, { 0x1 });
        gbc.writeMem(0x66ce, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb532, gbc.sp());
        EXPECT(0x66d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0216
        gbc.setState(0xe04e, 0x1772, 0xb90, 0x3c54, 0xe280, 0x8e7, 0x0, 0x0);
        gbc.writeMem(0x8e7, { 0xb6 });
        gbc.writeMem(0xe04e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1772, gbc.sp());
        EXPECT(0xe050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04e));
        EXPECT(0x9e, gbc.readMem(0xe04f));
        // CB 9E 0217
        gbc.setState(0xded, 0x3980, 0xcad0, 0x8a4d, 0xc0db, 0x3cff, 0x0, 0x0);
        gbc.writeMem(0xded, { 0xcb, 0x9e });
        gbc.writeMem(0x3cff, { 0xd7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3980, gbc.sp());
        EXPECT(0xdef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0218
        gbc.setState(0x737d, 0x6e41, 0xc9a0, 0x7061, 0xc639, 0xe120, 0x1, 0x1);
        gbc.writeMem(0x737d, { 0xcb, 0x9e });
        gbc.writeMem(0xe120, { 0x1f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6e41, gbc.sp());
        EXPECT(0x737f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xe120));
        // CB 9E 0219
        gbc.setState(0xbcda, 0xbc0a, 0xd9a0, 0xbdc0, 0x749b, 0xfecb, 0x0, 0x0);
        gbc.writeMem(0xbcda, { 0xcb, 0x9e });
        gbc.writeMem(0xfecb, { 0xbe });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbc0a, gbc.sp());
        EXPECT(0xbcdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcda));
        EXPECT(0x9e, gbc.readMem(0xbcdb));
        EXPECT(0xb6, gbc.readMem(0xfecb));
        // CB 9E 021A
        gbc.setState(0xcda6, 0x6e98, 0xd4f0, 0x41de, 0x2100, 0xe1d5, 0x1, 0x0);
        gbc.writeMem(0xcda6, { 0xcb, 0x9e });
        gbc.writeMem(0xe1d5, { 0xf4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6e98, gbc.sp());
        EXPECT(0xcda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda6));
        EXPECT(0x9e, gbc.readMem(0xcda7));
        EXPECT(0xf4, gbc.readMem(0xe1d5));
        // CB 9E 021B
        gbc.setState(0x3ef2, 0x5029, 0xf580, 0xbab, 0xc641, 0x24e0, 0x0, 0x0);
        gbc.writeMem(0x24e0, { 0xc6 });
        gbc.writeMem(0x3ef2, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5029, gbc.sp());
        EXPECT(0x3ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 021C
        gbc.setState(0x2e2c, 0x4ad7, 0x1fd0, 0xf677, 0x5def, 0x1f8c, 0x1, 0x0);
        gbc.writeMem(0x1f8c, { 0x0 });
        gbc.writeMem(0x2e2c, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4ad7, gbc.sp());
        EXPECT(0x2e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 021E
        gbc.setState(0xec55, 0xcb19, 0x4460, 0xaa9f, 0x24, 0x1cb6, 0x0, 0x1);
        gbc.writeMem(0x1cb6, { 0xa5 });
        gbc.writeMem(0xec55, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcb19, gbc.sp());
        EXPECT(0xec57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec55));
        EXPECT(0x9e, gbc.readMem(0xec56));
        // CB 9E 021F
        gbc.setState(0x7195, 0xc01e, 0x46e0, 0x4156, 0xdad8, 0x728, 0x1, 0x1);
        gbc.writeMem(0x728, { 0xa4 });
        gbc.writeMem(0x7195, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc01e, gbc.sp());
        EXPECT(0x7197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0221
        gbc.setState(0x9008, 0x73c0, 0xa7a0, 0x61d4, 0x66f0, 0xb278, 0x0, 0x1);
        gbc.writeMem(0x9008, { 0xcb, 0x9e });
        gbc.writeMem(0xb278, { 0xcc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x73c0, gbc.sp());
        EXPECT(0x900a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9008));
        EXPECT(0x9e, gbc.readMem(0x9009));
        EXPECT(0xc4, gbc.readMem(0xb278));
        // CB 9E 0224
        gbc.setState(0xcb80, 0xc713, 0xc50, 0xb2f0, 0xd807, 0xa22e, 0x1, 0x1);
        gbc.writeMem(0xa22e, { 0xc9 });
        gbc.writeMem(0xcb80, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc713, gbc.sp());
        EXPECT(0xcb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa22e));
        EXPECT(0xcb, gbc.readMem(0xcb80));
        EXPECT(0x9e, gbc.readMem(0xcb81));
        // CB 9E 0226
        gbc.setState(0xa493, 0x6bba, 0x650, 0x7da, 0x7f28, 0x731c, 0x1, 0x0);
        gbc.writeMem(0x731c, { 0x62 });
        gbc.writeMem(0xa493, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6bba, gbc.sp());
        EXPECT(0xa495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa493));
        EXPECT(0x9e, gbc.readMem(0xa494));
        // CB 9E 0227
        gbc.setState(0x6398, 0xdeec, 0x8fe0, 0xa8dd, 0x6b1e, 0x8905, 0x1, 0x0);
        gbc.writeMem(0x6398, { 0xcb, 0x9e });
        gbc.writeMem(0x8905, { 0x19 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdeec, gbc.sp());
        EXPECT(0x639a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8905));
        // CB 9E 0228
        gbc.setState(0x27d, 0x8324, 0x6050, 0xbcd4, 0x649e, 0x4397, 0x1, 0x0);
        gbc.writeMem(0x27d, { 0xcb, 0x9e });
        gbc.writeMem(0x4397, { 0xd2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8324, gbc.sp());
        EXPECT(0x27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0229
        gbc.setState(0xbafb, 0xa9d2, 0x3780, 0x28bb, 0x3d0, 0xa024, 0x1, 0x1);
        gbc.writeMem(0xa024, { 0x5b });
        gbc.writeMem(0xbafb, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa9d2, gbc.sp());
        EXPECT(0xbafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa024));
        EXPECT(0xcb, gbc.readMem(0xbafb));
        EXPECT(0x9e, gbc.readMem(0xbafc));
        // CB 9E 022A
        gbc.setState(0x6548, 0xf04f, 0x2880, 0x331d, 0x668d, 0x43d6, 0x1, 0x1);
        gbc.writeMem(0x43d6, { 0xc1 });
        gbc.writeMem(0x6548, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf04f, gbc.sp());
        EXPECT(0x654a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 022C
        gbc.setState(0x94d8, 0x7d09, 0xffe0, 0x476b, 0x394b, 0xa73, 0x0, 0x0);
        gbc.writeMem(0xa73, { 0xc3 });
        gbc.writeMem(0x94d8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7d09, gbc.sp());
        EXPECT(0x94da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d8));
        EXPECT(0x9e, gbc.readMem(0x94d9));
        // CB 9E 022D
        gbc.setState(0x3b48, 0xc731, 0x7910, 0xec5d, 0x20fb, 0x24e0, 0x1, 0x0);
        gbc.writeMem(0x24e0, { 0xc6 });
        gbc.writeMem(0x3b48, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc731, gbc.sp());
        EXPECT(0x3b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 022E
        gbc.setState(0xa344, 0x6816, 0xd240, 0x610b, 0x652, 0xf7aa, 0x0, 0x0);
        gbc.writeMem(0xa344, { 0xcb, 0x9e });
        gbc.writeMem(0xf7aa, { 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6816, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa344));
        EXPECT(0x9e, gbc.readMem(0xa345));
        EXPECT(0x94, gbc.readMem(0xf7aa));
        // CB 9E 0230
        gbc.setState(0x62de, 0xb71, 0x7e00, 0x7820, 0xcf7c, 0x2f39, 0x0, 0x1);
        gbc.writeMem(0x2f39, { 0xb6 });
        gbc.writeMem(0x62de, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb71, gbc.sp());
        EXPECT(0x62e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0231
        gbc.setState(0x8651, 0xee4e, 0x2770, 0xf1ea, 0x330a, 0x2076, 0x0, 0x0);
        gbc.writeMem(0x2076, { 0x24 });
        gbc.writeMem(0x8651, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xee4e, gbc.sp());
        EXPECT(0x8653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8651));
        EXPECT(0x9e, gbc.readMem(0x8652));
        // CB 9E 0233
        gbc.setState(0x21ee, 0x9404, 0xf800, 0xc9bc, 0xb5d5, 0x3f7b, 0x0, 0x0);
        gbc.writeMem(0x21ee, { 0xcb, 0x9e });
        gbc.writeMem(0x3f7b, { 0x42 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9404, gbc.sp());
        EXPECT(0x21f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0236
        gbc.setState(0xa94a, 0x53ee, 0xe260, 0x58a2, 0xebea, 0xc84f, 0x0, 0x1);
        gbc.writeMem(0xa94a, { 0xcb, 0x9e });
        gbc.writeMem(0xc84f, { 0x31 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x53ee, gbc.sp());
        EXPECT(0xa94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94a));
        EXPECT(0x9e, gbc.readMem(0xa94b));
        EXPECT(0x31, gbc.readMem(0xc84f));
        // CB 9E 0237
        gbc.setState(0x5789, 0x3982, 0x2a40, 0xb00, 0x7573, 0x67a, 0x1, 0x0);
        gbc.writeMem(0x67a, { 0x7 });
        gbc.writeMem(0x5789, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3982, gbc.sp());
        EXPECT(0x578b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0238
        gbc.setState(0x8292, 0xb7c9, 0x6210, 0x5c53, 0x992a, 0xd58e, 0x0, 0x1);
        gbc.writeMem(0x8292, { 0xcb, 0x9e });
        gbc.writeMem(0xd58e, { 0xb5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb7c9, gbc.sp());
        EXPECT(0x8294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8292));
        EXPECT(0x9e, gbc.readMem(0x8293));
        EXPECT(0xb5, gbc.readMem(0xd58e));
        // CB 9E 0239
        gbc.setState(0x3a29, 0x8f69, 0x58d0, 0xb411, 0x9e63, 0xcd4, 0x0, 0x0);
        gbc.writeMem(0xcd4, { 0xf4 });
        gbc.writeMem(0x3a29, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8f69, gbc.sp());
        EXPECT(0x3a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 023B
        gbc.setState(0x8df, 0x29ab, 0xa0f0, 0xd753, 0xaae3, 0x6918, 0x1, 0x0);
        gbc.writeMem(0x8df, { 0xcb, 0x9e });
        gbc.writeMem(0x6918, { 0xa5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x29ab, gbc.sp());
        EXPECT(0x8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 023C
        gbc.setState(0xe5e7, 0x4b53, 0x5d30, 0xa858, 0x94f8, 0xab62, 0x1, 0x0);
        gbc.writeMem(0xab62, { 0x3e });
        gbc.writeMem(0xe5e7, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4b53, gbc.sp());
        EXPECT(0xe5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xab62));
        EXPECT(0xcb, gbc.readMem(0xe5e7));
        EXPECT(0x9e, gbc.readMem(0xe5e8));
        // CB 9E 0240
        gbc.setState(0x6ad0, 0x6542, 0xa0c0, 0x822d, 0x4377, 0xe95b, 0x1, 0x0);
        gbc.writeMem(0x6ad0, { 0xcb, 0x9e });
        gbc.writeMem(0xe95b, { 0x2e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6542, gbc.sp());
        EXPECT(0x6ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe95b));
        // CB 9E 0241
        gbc.setState(0x22c5, 0x465c, 0x60b0, 0xba61, 0xd929, 0x90d5, 0x1, 0x0);
        gbc.writeMem(0x22c5, { 0xcb, 0x9e });
        gbc.writeMem(0x90d5, { 0x4a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0x22c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x90d5));
        // CB 9E 0243
        gbc.setState(0xc66b, 0x8f7e, 0xa980, 0x9731, 0xd34a, 0xab5d, 0x0, 0x0);
        gbc.writeMem(0xab5d, { 0x55 });
        gbc.writeMem(0xc66b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8f7e, gbc.sp());
        EXPECT(0xc66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xab5d));
        EXPECT(0xcb, gbc.readMem(0xc66b));
        EXPECT(0x9e, gbc.readMem(0xc66c));
        // CB 9E 0245
        gbc.setState(0x835d, 0xbfc0, 0x4d10, 0x1ed2, 0xea57, 0xf8af, 0x0, 0x1);
        gbc.writeMem(0x835d, { 0xcb, 0x9e });
        gbc.writeMem(0xf8af, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbfc0, gbc.sp());
        EXPECT(0x835f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835d));
        EXPECT(0x9e, gbc.readMem(0x835e));
        EXPECT(0x0, gbc.readMem(0xf8af));
        // CB 9E 0247
        gbc.setState(0x3384, 0x2d2b, 0x5120, 0x6789, 0x6275, 0x7bf, 0x1, 0x0);
        gbc.writeMem(0x7bf, { 0x85 });
        gbc.writeMem(0x3384, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2d2b, gbc.sp());
        EXPECT(0x3386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0248
        gbc.setState(0x2b81, 0x68e4, 0xe6b0, 0x414a, 0x58c0, 0x118b, 0x0, 0x1);
        gbc.writeMem(0x118b, { 0x81 });
        gbc.writeMem(0x2b81, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x68e4, gbc.sp());
        EXPECT(0x2b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0249
        gbc.setState(0x7e84, 0x67d5, 0xf110, 0xa201, 0x573d, 0x17ab, 0x0, 0x0);
        gbc.writeMem(0x17ab, { 0xa0 });
        gbc.writeMem(0x7e84, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x67d5, gbc.sp());
        EXPECT(0x7e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 024B
        gbc.setState(0xd0db, 0xc228, 0x4150, 0xcf63, 0xecd5, 0xc01f, 0x1, 0x0);
        gbc.writeMem(0xc01f, { 0xe3 });
        gbc.writeMem(0xd0db, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc228, gbc.sp());
        EXPECT(0xd0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xc01f));
        EXPECT(0xcb, gbc.readMem(0xd0db));
        EXPECT(0x9e, gbc.readMem(0xd0dc));
        // CB 9E 024C
        gbc.setState(0x5d43, 0xf027, 0xcdb0, 0xd5d0, 0x7a06, 0x86a0, 0x0, 0x1);
        gbc.writeMem(0x5d43, { 0xcb, 0x9e });
        gbc.writeMem(0x86a0, { 0x71 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf027, gbc.sp());
        EXPECT(0x5d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x86a0));
        // CB 9E 024E
        gbc.setState(0x732d, 0x80a2, 0x4b70, 0x2413, 0xfeca, 0x42e2, 0x1, 0x0);
        gbc.writeMem(0x42e2, { 0x86 });
        gbc.writeMem(0x732d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x80a2, gbc.sp());
        EXPECT(0x732f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 024F
        gbc.setState(0x633, 0xaa26, 0x7560, 0x961b, 0xd0e, 0x8fb, 0x1, 0x1);
        gbc.writeMem(0x633, { 0xcb, 0x9e });
        gbc.writeMem(0x8fb, { 0xa1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0x635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0250
        gbc.setState(0x6839, 0x3d21, 0x5840, 0xbf42, 0x4fc3, 0xbcbb, 0x1, 0x1);
        gbc.writeMem(0x6839, { 0xcb, 0x9e });
        gbc.writeMem(0xbcbb, { 0xa5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3d21, gbc.sp());
        EXPECT(0x683b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xbcbb));
        // CB 9E 0255
        gbc.setState(0xaa81, 0xbc4b, 0x6880, 0xb3e8, 0x7f46, 0x17a2, 0x0, 0x0);
        gbc.writeMem(0x17a2, { 0xe2 });
        gbc.writeMem(0xaa81, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbc4b, gbc.sp());
        EXPECT(0xaa83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa81));
        EXPECT(0x9e, gbc.readMem(0xaa82));
        // CB 9E 0257
        gbc.setState(0xce6b, 0xbd35, 0xeab0, 0x27d7, 0x5c4e, 0x86c2, 0x0, 0x1);
        gbc.writeMem(0x86c2, { 0xec });
        gbc.writeMem(0xce6b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0xce6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x86c2));
        EXPECT(0xcb, gbc.readMem(0xce6b));
        EXPECT(0x9e, gbc.readMem(0xce6c));
        // CB 9E 0259
        gbc.setState(0x2bd8, 0x633a, 0x4780, 0x8e32, 0x3935, 0x9dd7, 0x1, 0x0);
        gbc.writeMem(0x2bd8, { 0xcb, 0x9e });
        gbc.writeMem(0x9dd7, { 0x4c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x633a, gbc.sp());
        EXPECT(0x2bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9dd7));
        // CB 9E 025A
        gbc.setState(0x368, 0x4788, 0x4080, 0xd612, 0x703a, 0x5df2, 0x0, 0x0);
        gbc.writeMem(0x368, { 0xcb, 0x9e });
        gbc.writeMem(0x5df2, { 0xf0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4788, gbc.sp());
        EXPECT(0x36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 025B
        gbc.setState(0xed4a, 0x2800, 0xf470, 0x9dbe, 0x2cbe, 0x9d06, 0x0, 0x1);
        gbc.writeMem(0x9d06, { 0x42 });
        gbc.writeMem(0xed4a, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2800, gbc.sp());
        EXPECT(0xed4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9d06));
        EXPECT(0xcb, gbc.readMem(0xed4a));
        EXPECT(0x9e, gbc.readMem(0xed4b));
        // CB 9E 025C
        gbc.setState(0x72c8, 0x8952, 0xcf90, 0x9192, 0x10fc, 0xe235, 0x1, 0x0);
        gbc.writeMem(0x72c8, { 0xcb, 0x9e });
        gbc.writeMem(0xe235, { 0xe6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8952, gbc.sp());
        EXPECT(0x72ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe235));
        // CB 9E 025D
        gbc.setState(0xb5f1, 0xdf, 0xc40, 0xd226, 0x2ee2, 0xcfe2, 0x1, 0x1);
        gbc.writeMem(0xb5f1, { 0xcb, 0x9e });
        gbc.writeMem(0xcfe2, { 0x73 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdf, gbc.sp());
        EXPECT(0xb5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f1));
        EXPECT(0x9e, gbc.readMem(0xb5f2));
        EXPECT(0x73, gbc.readMem(0xcfe2));
        // CB 9E 025E
        gbc.setState(0x80b5, 0x745d, 0x35b0, 0x28d4, 0x467c, 0xba34, 0x0, 0x1);
        gbc.writeMem(0x80b5, { 0xcb, 0x9e });
        gbc.writeMem(0xba34, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x745d, gbc.sp());
        EXPECT(0x80b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b5));
        EXPECT(0x9e, gbc.readMem(0x80b6));
        EXPECT(0x35, gbc.readMem(0xba34));
        // CB 9E 025F
        gbc.setState(0x259d, 0xde14, 0x5120, 0xde25, 0x8324, 0x1ba7, 0x1, 0x0);
        gbc.writeMem(0x1ba7, { 0xd1 });
        gbc.writeMem(0x259d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xde14, gbc.sp());
        EXPECT(0x259f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0262
        gbc.setState(0x2af, 0x11b8, 0xc170, 0x4ecd, 0xefda, 0x993c, 0x1, 0x0);
        gbc.writeMem(0x2af, { 0xcb, 0x9e });
        gbc.writeMem(0x993c, { 0x70 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x11b8, gbc.sp());
        EXPECT(0x2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x993c));
        // CB 9E 0264
        gbc.setState(0x1a8b, 0x459e, 0xd9d0, 0x9773, 0xb8a1, 0xe1bc, 0x0, 0x1);
        gbc.writeMem(0x1a8b, { 0xcb, 0x9e });
        gbc.writeMem(0xe1bc, { 0x8f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x459e, gbc.sp());
        EXPECT(0x1a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe1bc));
        // CB 9E 0265
        gbc.setState(0x9946, 0x1123, 0xae80, 0xc93c, 0xf062, 0xd650, 0x1, 0x0);
        gbc.writeMem(0x9946, { 0xcb, 0x9e });
        gbc.writeMem(0xd650, { 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1123, gbc.sp());
        EXPECT(0x9948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9946));
        EXPECT(0x9e, gbc.readMem(0x9947));
        EXPECT(0x3, gbc.readMem(0xd650));
        // CB 9E 0266
        gbc.setState(0x4ef8, 0xeccd, 0x5810, 0xb732, 0xb01e, 0x8813, 0x0, 0x0);
        gbc.writeMem(0x4ef8, { 0xcb, 0x9e });
        gbc.writeMem(0x8813, { 0x36 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xeccd, gbc.sp());
        EXPECT(0x4efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8813));
        // CB 9E 0268
        gbc.setState(0x171e, 0xf192, 0xa1f0, 0xa2ef, 0x7450, 0xb30a, 0x0, 0x0);
        gbc.writeMem(0x171e, { 0xcb, 0x9e });
        gbc.writeMem(0xb30a, { 0xea });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf192, gbc.sp());
        EXPECT(0x1720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb30a));
        // CB 9E 0269
        gbc.setState(0x8ae6, 0x59f0, 0x2f60, 0x134e, 0x57ba, 0xa7dd, 0x1, 0x1);
        gbc.writeMem(0x8ae6, { 0xcb, 0x9e });
        gbc.writeMem(0xa7dd, { 0xca });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x59f0, gbc.sp());
        EXPECT(0x8ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae6));
        EXPECT(0x9e, gbc.readMem(0x8ae7));
        EXPECT(0xc2, gbc.readMem(0xa7dd));
        // CB 9E 026A
        gbc.setState(0xafa1, 0x1238, 0x87f0, 0xcfdb, 0x768f, 0xddd8, 0x0, 0x1);
        gbc.writeMem(0xafa1, { 0xcb, 0x9e });
        gbc.writeMem(0xddd8, { 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1238, gbc.sp());
        EXPECT(0xafa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa1));
        EXPECT(0x9e, gbc.readMem(0xafa2));
        EXPECT(0x53, gbc.readMem(0xddd8));
        // CB 9E 026B
        gbc.setState(0x228a, 0x6eea, 0xc790, 0xd579, 0x5c3e, 0xc522, 0x1, 0x1);
        gbc.writeMem(0x228a, { 0xcb, 0x9e });
        gbc.writeMem(0xc522, { 0x27 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6eea, gbc.sp());
        EXPECT(0x228c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc522));
        // CB 9E 026C
        gbc.setState(0x9802, 0x2b86, 0x1500, 0xc846, 0xd9cb, 0xff4e, 0x1, 0x0);
        gbc.writeMem(0x9802, { 0xcb, 0x9e });
        gbc.writeMem(0xff4e, { 0xf });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2b86, gbc.sp());
        EXPECT(0x9804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9802));
        EXPECT(0x9e, gbc.readMem(0x9803));
        EXPECT(0x7, gbc.readMem(0xff4e));
        // CB 9E 026D
        gbc.setState(0x7e28, 0x23d, 0xc360, 0xd67c, 0xe7ff, 0xa384, 0x0, 0x1);
        gbc.writeMem(0x7e28, { 0xcb, 0x9e });
        gbc.writeMem(0xa384, { 0x10 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x23d, gbc.sp());
        EXPECT(0x7e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa384));
        // CB 9E 026F
        gbc.setState(0x2e7b, 0xec9c, 0xc940, 0x95ee, 0xd482, 0xfcda, 0x0, 0x1);
        gbc.writeMem(0x2e7b, { 0xcb, 0x9e });
        gbc.writeMem(0xfcda, { 0xc6 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xec9c, gbc.sp());
        EXPECT(0x2e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xfcda));
        // CB 9E 0270
        gbc.setState(0x30d8, 0x16a, 0x8390, 0xe45e, 0xf021, 0xb4eb, 0x1, 0x0);
        gbc.writeMem(0x30d8, { 0xcb, 0x9e });
        gbc.writeMem(0xb4eb, { 0x62 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x16a, gbc.sp());
        EXPECT(0x30da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb4eb));
        // CB 9E 0271
        gbc.setState(0x50fa, 0x530d, 0xad70, 0xf8a1, 0x75c8, 0x8a5e, 0x0, 0x1);
        gbc.writeMem(0x50fa, { 0xcb, 0x9e });
        gbc.writeMem(0x8a5e, { 0x41 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x530d, gbc.sp());
        EXPECT(0x50fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x8a5e));
        // CB 9E 0272
        gbc.setState(0x9f73, 0x4778, 0xe370, 0xb9fa, 0x4836, 0xb128, 0x1, 0x1);
        gbc.writeMem(0x9f73, { 0xcb, 0x9e });
        gbc.writeMem(0xb128, { 0x81 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4778, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f73));
        EXPECT(0x9e, gbc.readMem(0x9f74));
        EXPECT(0x81, gbc.readMem(0xb128));
        // CB 9E 0275
        gbc.setState(0xa949, 0xb218, 0x5c50, 0x86c2, 0xa65a, 0x9188, 0x1, 0x0);
        gbc.writeMem(0x9188, { 0xc1 });
        gbc.writeMem(0xa949, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb218, gbc.sp());
        EXPECT(0xa94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9188));
        EXPECT(0xcb, gbc.readMem(0xa949));
        EXPECT(0x9e, gbc.readMem(0xa94a));
        // CB 9E 0276
        gbc.setState(0x5cbb, 0xde32, 0xa470, 0xa8e7, 0x2dc0, 0xcbdd, 0x0, 0x0);
        gbc.writeMem(0x5cbb, { 0xcb, 0x9e });
        gbc.writeMem(0xcbdd, { 0xaa });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xde32, gbc.sp());
        EXPECT(0x5cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcbdd));
        // CB 9E 0278
        gbc.setState(0x1e95, 0x8fa7, 0xc220, 0xe9f7, 0xf264, 0xdf60, 0x1, 0x0);
        gbc.writeMem(0x1e95, { 0xcb, 0x9e });
        gbc.writeMem(0xdf60, { 0x8e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8fa7, gbc.sp());
        EXPECT(0x1e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdf60));
        // CB 9E 0279
        gbc.setState(0x862f, 0xd152, 0x78a0, 0x4110, 0xc515, 0xb55e, 0x0, 0x1);
        gbc.writeMem(0x862f, { 0xcb, 0x9e });
        gbc.writeMem(0xb55e, { 0xfc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd152, gbc.sp());
        EXPECT(0x8631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862f));
        EXPECT(0x9e, gbc.readMem(0x8630));
        EXPECT(0xf4, gbc.readMem(0xb55e));
        // CB 9E 027B
        gbc.setState(0xd289, 0x72f4, 0x6790, 0xa134, 0x3da2, 0xd3b5, 0x0, 0x0);
        gbc.writeMem(0xd289, { 0xcb, 0x9e });
        gbc.writeMem(0xd3b5, { 0x27 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x72f4, gbc.sp());
        EXPECT(0xd28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd289));
        EXPECT(0x9e, gbc.readMem(0xd28a));
        EXPECT(0x27, gbc.readMem(0xd3b5));
        // CB 9E 027C
        gbc.setState(0x8f1e, 0x1edb, 0xa480, 0x489a, 0x5e7c, 0x2fbb, 0x1, 0x0);
        gbc.writeMem(0x2fbb, { 0x52 });
        gbc.writeMem(0x8f1e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1edb, gbc.sp());
        EXPECT(0x8f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1e));
        EXPECT(0x9e, gbc.readMem(0x8f1f));
        // CB 9E 027F
        gbc.setState(0xb552, 0x6636, 0xb570, 0x25b2, 0xab96, 0xb785, 0x1, 0x1);
        gbc.writeMem(0xb552, { 0xcb, 0x9e });
        gbc.writeMem(0xb785, { 0x75 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6636, gbc.sp());
        EXPECT(0xb554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb552));
        EXPECT(0x9e, gbc.readMem(0xb553));
        EXPECT(0x75, gbc.readMem(0xb785));
        // CB 9E 0280
        gbc.setState(0x9f0d, 0x3d6b, 0xa250, 0x8b06, 0x28ce, 0x43eb, 0x0, 0x0);
        gbc.writeMem(0x43eb, { 0xa2 });
        gbc.writeMem(0x9f0d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3d6b, gbc.sp());
        EXPECT(0x9f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0d));
        EXPECT(0x9e, gbc.readMem(0x9f0e));
        // CB 9E 0281
        gbc.setState(0x5917, 0x908, 0xfc40, 0xcd74, 0x6584, 0xe86f, 0x1, 0x1);
        gbc.writeMem(0x5917, { 0xcb, 0x9e });
        gbc.writeMem(0xe86f, { 0xc3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x908, gbc.sp());
        EXPECT(0x5919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe86f));
        // CB 9E 0283
        gbc.setState(0x7513, 0x2f2d, 0xdc10, 0x5c5, 0xe86e, 0xd098, 0x1, 0x0);
        gbc.writeMem(0x7513, { 0xcb, 0x9e });
        gbc.writeMem(0xd098, { 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2f2d, gbc.sp());
        EXPECT(0x7515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd098));
        // CB 9E 0285
        gbc.setState(0xce27, 0xe999, 0x8aa0, 0xe154, 0xf206, 0x3988, 0x1, 0x0);
        gbc.writeMem(0x3988, { 0xf4 });
        gbc.writeMem(0xce27, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe999, gbc.sp());
        EXPECT(0xce29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce27));
        EXPECT(0x9e, gbc.readMem(0xce28));
        // CB 9E 0286
        gbc.setState(0xa0ee, 0xa6df, 0x3dc0, 0x1ec2, 0x4ba4, 0x1f17, 0x1, 0x0);
        gbc.writeMem(0x1f17, { 0x71 });
        gbc.writeMem(0xa0ee, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa6df, gbc.sp());
        EXPECT(0xa0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ee));
        EXPECT(0x9e, gbc.readMem(0xa0ef));
        // CB 9E 0287
        gbc.setState(0x666f, 0x329, 0xa160, 0x157d, 0xdac1, 0xf276, 0x0, 0x1);
        gbc.writeMem(0x666f, { 0xcb, 0x9e });
        gbc.writeMem(0xf276, { 0xa3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x329, gbc.sp());
        EXPECT(0x6671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xf276));
        // CB 9E 0288
        gbc.setState(0x747a, 0xbac5, 0xe360, 0xcaf9, 0x4f6e, 0xc92a, 0x0, 0x1);
        gbc.writeMem(0x747a, { 0xcb, 0x9e });
        gbc.writeMem(0xc92a, { 0xab });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbac5, gbc.sp());
        EXPECT(0x747c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc92a));
        // CB 9E 0289
        gbc.setState(0x4580, 0xfa30, 0x4fd0, 0x75a7, 0x47b8, 0x2e33, 0x0, 0x1);
        gbc.writeMem(0x2e33, { 0x16 });
        gbc.writeMem(0x4580, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfa30, gbc.sp());
        EXPECT(0x4582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 028A
        gbc.setState(0x2c7a, 0xbe35, 0xc070, 0xe32f, 0x5069, 0x9786, 0x1, 0x0);
        gbc.writeMem(0x2c7a, { 0xcb, 0x9e });
        gbc.writeMem(0x9786, { 0xdc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbe35, gbc.sp());
        EXPECT(0x2c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9786));
        // CB 9E 028B
        gbc.setState(0x9070, 0xda41, 0x2f10, 0x6b3b, 0xa246, 0xff5f, 0x1, 0x1);
        gbc.writeMem(0x9070, { 0xcb, 0x9e });
        gbc.writeMem(0xff5f, { 0x11 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xda41, gbc.sp());
        EXPECT(0x9072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9070));
        EXPECT(0x9e, gbc.readMem(0x9071));
        EXPECT(0x11, gbc.readMem(0xff5f));
        // CB 9E 028D
        gbc.setState(0x9bc5, 0x6ec3, 0xf530, 0x8db8, 0x369a, 0x6f75, 0x0, 0x1);
        gbc.writeMem(0x6f75, { 0x55 });
        gbc.writeMem(0x9bc5, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6ec3, gbc.sp());
        EXPECT(0x9bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc5));
        EXPECT(0x9e, gbc.readMem(0x9bc6));
        // CB 9E 028E
        gbc.setState(0xb6cf, 0xffeb, 0x4cf0, 0x7b19, 0x1e90, 0xb1fa, 0x0, 0x0);
        gbc.writeMem(0xb1fa, { 0x49 });
        gbc.writeMem(0xb6cf, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xffeb, gbc.sp());
        EXPECT(0xb6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xb1fa));
        EXPECT(0xcb, gbc.readMem(0xb6cf));
        EXPECT(0x9e, gbc.readMem(0xb6d0));
        // CB 9E 028F
        gbc.setState(0x7ea9, 0xa94e, 0x3220, 0xe567, 0x3148, 0x2aa3, 0x0, 0x0);
        gbc.writeMem(0x2aa3, { 0x25 });
        gbc.writeMem(0x7ea9, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa94e, gbc.sp());
        EXPECT(0x7eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0290
        gbc.setState(0xb6c6, 0xfcec, 0x2040, 0x829f, 0x5ff2, 0x70be, 0x0, 0x0);
        gbc.writeMem(0x70be, { 0x10 });
        gbc.writeMem(0xb6c6, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfcec, gbc.sp());
        EXPECT(0xb6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c6));
        EXPECT(0x9e, gbc.readMem(0xb6c7));
        // CB 9E 0292
        gbc.setState(0x3765, 0xe646, 0x37f0, 0xc731, 0xf04f, 0xed70, 0x0, 0x1);
        gbc.writeMem(0x3765, { 0xcb, 0x9e });
        gbc.writeMem(0xed70, { 0x51 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe646, gbc.sp());
        EXPECT(0x3767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xed70));
        // CB 9E 0296
        gbc.setState(0x45c7, 0x90c4, 0x3f70, 0x703e, 0x9aa8, 0x7d1f, 0x1, 0x1);
        gbc.writeMem(0x45c7, { 0xcb, 0x9e });
        gbc.writeMem(0x7d1f, { 0x51 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x90c4, gbc.sp());
        EXPECT(0x45c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0297
        gbc.setState(0xc73f, 0xd0db, 0x5d60, 0xd2c6, 0x6c61, 0xf3d1, 0x1, 0x1);
        gbc.writeMem(0xc73f, { 0xcb, 0x9e });
        gbc.writeMem(0xf3d1, { 0x1f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd0db, gbc.sp());
        EXPECT(0xc741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc73f));
        EXPECT(0x9e, gbc.readMem(0xc740));
        EXPECT(0x17, gbc.readMem(0xf3d1));
        // CB 9E 0299
        gbc.setState(0x7a89, 0x3283, 0x310, 0xda1c, 0xb459, 0x8e72, 0x1, 0x0);
        gbc.writeMem(0x7a89, { 0xcb, 0x9e });
        gbc.writeMem(0x8e72, { 0x1f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3283, gbc.sp());
        EXPECT(0x7a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x8e72));
        // CB 9E 029A
        gbc.setState(0x4bb0, 0xf381, 0x630, 0xe3ab, 0xb8f5, 0xde3b, 0x0, 0x1);
        gbc.writeMem(0x4bb0, { 0xcb, 0x9e });
        gbc.writeMem(0xde3b, { 0x4e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf381, gbc.sp());
        EXPECT(0x4bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xde3b));
        // CB 9E 029B
        gbc.setState(0xa36b, 0xaf4, 0x3e40, 0x9eb3, 0xd6a7, 0x43ba, 0x0, 0x1);
        gbc.writeMem(0x43ba, { 0x13 });
        gbc.writeMem(0xa36b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xaf4, gbc.sp());
        EXPECT(0xa36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36b));
        EXPECT(0x9e, gbc.readMem(0xa36c));
        // CB 9E 029C
        gbc.setState(0xe209, 0xc40a, 0xf520, 0x3941, 0x7c42, 0xfd9c, 0x1, 0x1);
        gbc.writeMem(0xe209, { 0xcb, 0x9e });
        gbc.writeMem(0xfd9c, { 0x14 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc40a, gbc.sp());
        EXPECT(0xe20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe209));
        EXPECT(0x9e, gbc.readMem(0xe20a));
        EXPECT(0x14, gbc.readMem(0xfd9c));
        // CB 9E 029D
        gbc.setState(0x1f4a, 0x9782, 0xdbd0, 0xd93e, 0x311c, 0xb5a4, 0x1, 0x1);
        gbc.writeMem(0x1f4a, { 0xcb, 0x9e });
        gbc.writeMem(0xb5a4, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9782, gbc.sp());
        EXPECT(0x1f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb5a4));
        // CB 9E 029E
        gbc.setState(0x6c44, 0x29dd, 0x28d0, 0x116f, 0x6057, 0x55ae, 0x0, 0x1);
        gbc.writeMem(0x55ae, { 0xc5 });
        gbc.writeMem(0x6c44, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x29dd, gbc.sp());
        EXPECT(0x6c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 02A0
        gbc.setState(0x8b56, 0x1ddf, 0xe7d0, 0x878a, 0x9809, 0xc95c, 0x1, 0x0);
        gbc.writeMem(0x8b56, { 0xcb, 0x9e });
        gbc.writeMem(0xc95c, { 0x58 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1ddf, gbc.sp());
        EXPECT(0x8b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b56));
        EXPECT(0x9e, gbc.readMem(0x8b57));
        EXPECT(0x50, gbc.readMem(0xc95c));
        // CB 9E 02A2
        gbc.setState(0x79a7, 0xa6cc, 0x7140, 0xb343, 0x9194, 0xf35f, 0x0, 0x1);
        gbc.writeMem(0x79a7, { 0xcb, 0x9e });
        gbc.writeMem(0xf35f, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa6cc, gbc.sp());
        EXPECT(0x79a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xf35f));
        // CB 9E 02A5
        gbc.setState(0xa3ff, 0x54a8, 0xec50, 0x2706, 0xa353, 0xa25d, 0x0, 0x0);
        gbc.writeMem(0xa25d, { 0x96 });
        gbc.writeMem(0xa3ff, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x54a8, gbc.sp());
        EXPECT(0xa401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xa25d));
        EXPECT(0xcb, gbc.readMem(0xa3ff));
        EXPECT(0x9e, gbc.readMem(0xa400));
        // CB 9E 02A7
        gbc.setState(0xded4, 0xc082, 0x1d90, 0x243f, 0xdf9, 0xcd92, 0x1, 0x1);
        gbc.writeMem(0xcd92, { 0x56 });
        gbc.writeMem(0xded4, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc082, gbc.sp());
        EXPECT(0xded6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcd92));
        EXPECT(0xcb, gbc.readMem(0xded4));
        EXPECT(0x9e, gbc.readMem(0xded5));
        // CB 9E 02A9
        gbc.setState(0x10f, 0x9776, 0xcf30, 0xe06b, 0xd0b3, 0xdb20, 0x0, 0x0);
        gbc.writeMem(0x10f, { 0xcb, 0x9e });
        gbc.writeMem(0xdb20, { 0x3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9776, gbc.sp());
        EXPECT(0x111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdb20));
        // CB 9E 02AA
        gbc.setState(0x5c5, 0x7953, 0x1c20, 0x99d8, 0xf2e7, 0x8483, 0x1, 0x1);
        gbc.writeMem(0x5c5, { 0xcb, 0x9e });
        gbc.writeMem(0x8483, { 0x7f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7953, gbc.sp());
        EXPECT(0x5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8483));
        // CB 9E 02AB
        gbc.setState(0x8861, 0x9076, 0x38c0, 0xbdef, 0xc5f8, 0xdce8, 0x0, 0x1);
        gbc.writeMem(0x8861, { 0xcb, 0x9e });
        gbc.writeMem(0xdce8, { 0x69 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9076, gbc.sp());
        EXPECT(0x8863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8861));
        EXPECT(0x9e, gbc.readMem(0x8862));
        EXPECT(0x61, gbc.readMem(0xdce8));
        // CB 9E 02AE
        gbc.setState(0xec0c, 0xa94, 0x2140, 0x13af, 0x468d, 0x9aad, 0x0, 0x0);
        gbc.writeMem(0x9aad, { 0x94 });
        gbc.writeMem(0xec0c, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa94, gbc.sp());
        EXPECT(0xec0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9aad));
        EXPECT(0xcb, gbc.readMem(0xec0c));
        EXPECT(0x9e, gbc.readMem(0xec0d));
        // CB 9E 02B0
        gbc.setState(0x899d, 0x8a3e, 0x3770, 0x35e7, 0xc843, 0x81d, 0x0, 0x0);
        gbc.writeMem(0x81d, { 0x65 });
        gbc.writeMem(0x899d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8a3e, gbc.sp());
        EXPECT(0x899f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x899d));
        EXPECT(0x9e, gbc.readMem(0x899e));
        // CB 9E 02B1
        gbc.setState(0x1547, 0x3616, 0x9020, 0x934d, 0x849d, 0x7d70, 0x1, 0x1);
        gbc.writeMem(0x1547, { 0xcb, 0x9e });
        gbc.writeMem(0x7d70, { 0x1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3616, gbc.sp());
        EXPECT(0x1549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 02B4
        gbc.setState(0x5940, 0xf49c, 0x42a0, 0xa7b5, 0xcf55, 0xd842, 0x0, 0x1);
        gbc.writeMem(0x5940, { 0xcb, 0x9e });
        gbc.writeMem(0xd842, { 0xc5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf49c, gbc.sp());
        EXPECT(0x5942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd842));
        // CB 9E 02B5
        gbc.setState(0x2f4e, 0x5eb0, 0x8140, 0x8635, 0x2af7, 0xa1, 0x0, 0x1);
        gbc.writeMem(0xa1, { 0xf7 });
        gbc.writeMem(0x2f4e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5eb0, gbc.sp());
        EXPECT(0x2f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 02B6
        gbc.setState(0x4ae3, 0x3ad6, 0xd380, 0x9d45, 0xde7b, 0xce8e, 0x1, 0x0);
        gbc.writeMem(0x4ae3, { 0xcb, 0x9e });
        gbc.writeMem(0xce8e, { 0xab });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3ad6, gbc.sp());
        EXPECT(0x4ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xce8e));
        // CB 9E 02B7
        gbc.setState(0x7b93, 0x1c02, 0x7810, 0x4f60, 0x8bcc, 0xb84e, 0x0, 0x0);
        gbc.writeMem(0x7b93, { 0xcb, 0x9e });
        gbc.writeMem(0xb84e, { 0x7b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1c02, gbc.sp());
        EXPECT(0x7b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb84e));
        // CB 9E 02B8
        gbc.setState(0x9d78, 0x27e3, 0x6670, 0xa68a, 0xb814, 0x8445, 0x0, 0x1);
        gbc.writeMem(0x8445, { 0xfa });
        gbc.writeMem(0x9d78, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x27e3, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x8445));
        EXPECT(0xcb, gbc.readMem(0x9d78));
        EXPECT(0x9e, gbc.readMem(0x9d79));
        // CB 9E 02B9
        gbc.setState(0xd060, 0x6554, 0xb7b0, 0xa86d, 0xbac8, 0xfdd5, 0x0, 0x1);
        gbc.writeMem(0xd060, { 0xcb, 0x9e });
        gbc.writeMem(0xfdd5, { 0x51 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6554, gbc.sp());
        EXPECT(0xd062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd060));
        EXPECT(0x9e, gbc.readMem(0xd061));
        EXPECT(0x51, gbc.readMem(0xfdd5));
        // CB 9E 02BE
        gbc.setState(0xe0a1, 0xcd99, 0xa960, 0x2452, 0x3982, 0x18c3, 0x0, 0x1);
        gbc.writeMem(0x18c3, { 0xd3 });
        gbc.writeMem(0xe0a1, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcd99, gbc.sp());
        EXPECT(0xe0a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a1));
        EXPECT(0x9e, gbc.readMem(0xe0a2));
        // CB 9E 02BF
        gbc.setState(0x2452, 0x9a42, 0xb270, 0x7486, 0xc629, 0x7f83, 0x0, 0x0);
        gbc.writeMem(0x2452, { 0xcb, 0x9e });
        gbc.writeMem(0x7f83, { 0xf7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9a42, gbc.sp());
        EXPECT(0x2454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 02C0
        gbc.setState(0x33a4, 0xd654, 0xfc60, 0xae96, 0x126f, 0x65b1, 0x0, 0x0);
        gbc.writeMem(0x33a4, { 0xcb, 0x9e });
        gbc.writeMem(0x65b1, { 0x61 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd654, gbc.sp());
        EXPECT(0x33a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 02C2
        gbc.setState(0x1a32, 0x28c1, 0xf8a0, 0x88cc, 0x6606, 0xef5d, 0x0, 0x1);
        gbc.writeMem(0x1a32, { 0xcb, 0x9e });
        gbc.writeMem(0xef5d, { 0x15 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x28c1, gbc.sp());
        EXPECT(0x1a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xef5d));
        // CB 9E 02C3
        gbc.setState(0x33ee, 0xe8a8, 0x6a50, 0xad50, 0x8a26, 0x97c5, 0x1, 0x0);
        gbc.writeMem(0x33ee, { 0xcb, 0x9e });
        gbc.writeMem(0x97c5, { 0xbf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe8a8, gbc.sp());
        EXPECT(0x33f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x97c5));
        // CB 9E 02C4
        gbc.setState(0xa215, 0x4f84, 0x6c50, 0xd999, 0x3220, 0xd25f, 0x1, 0x0);
        gbc.writeMem(0xa215, { 0xcb, 0x9e });
        gbc.writeMem(0xd25f, { 0x26 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4f84, gbc.sp());
        EXPECT(0xa217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa215));
        EXPECT(0x9e, gbc.readMem(0xa216));
        EXPECT(0x26, gbc.readMem(0xd25f));
        // CB 9E 02C6
        gbc.setState(0xeaec, 0x1250, 0x3920, 0xa68b, 0x655a, 0x2fce, 0x1, 0x0);
        gbc.writeMem(0x2fce, { 0xf7 });
        gbc.writeMem(0xeaec, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1250, gbc.sp());
        EXPECT(0xeaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaec));
        EXPECT(0x9e, gbc.readMem(0xeaed));
        // CB 9E 02C7
        gbc.setState(0x9693, 0xbdde, 0xbc30, 0xf0f8, 0x7ce6, 0x2ea8, 0x1, 0x1);
        gbc.writeMem(0x2ea8, { 0x37 });
        gbc.writeMem(0x9693, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbdde, gbc.sp());
        EXPECT(0x9695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9693));
        EXPECT(0x9e, gbc.readMem(0x9694));
        // CB 9E 02C8
        gbc.setState(0x163b, 0x998b, 0xd000, 0x65bc, 0x9045, 0xc161, 0x1, 0x1);
        gbc.writeMem(0x163b, { 0xcb, 0x9e });
        gbc.writeMem(0xc161, { 0x8b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x998b, gbc.sp());
        EXPECT(0x163d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xc161));
        // CB 9E 02CA
        gbc.setState(0x8fc8, 0xf3a6, 0x3970, 0xd433, 0xb03b, 0x8387, 0x0, 0x1);
        gbc.writeMem(0x8387, { 0x67 });
        gbc.writeMem(0x8fc8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf3a6, gbc.sp());
        EXPECT(0x8fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8387));
        EXPECT(0xcb, gbc.readMem(0x8fc8));
        EXPECT(0x9e, gbc.readMem(0x8fc9));
        // CB 9E 02CC
        gbc.setState(0xb9bb, 0x4b2f, 0x6380, 0xaee1, 0xff4c, 0xcaac, 0x0, 0x1);
        gbc.writeMem(0xb9bb, { 0xcb, 0x9e });
        gbc.writeMem(0xcaac, { 0x56 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4b2f, gbc.sp());
        EXPECT(0xb9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bb));
        EXPECT(0x9e, gbc.readMem(0xb9bc));
        EXPECT(0x56, gbc.readMem(0xcaac));
        // CB 9E 02CD
        gbc.setState(0xaec8, 0xc888, 0x23e0, 0xea46, 0xfae4, 0x529f, 0x0, 0x1);
        gbc.writeMem(0x529f, { 0x81 });
        gbc.writeMem(0xaec8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc888, gbc.sp());
        EXPECT(0xaeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec8));
        EXPECT(0x9e, gbc.readMem(0xaec9));
        // CB 9E 02CE
        gbc.setState(0x807f, 0xa086, 0x2750, 0x97e3, 0x6aa1, 0x7b07, 0x0, 0x1);
        gbc.writeMem(0x7b07, { 0xb1 });
        gbc.writeMem(0x807f, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa086, gbc.sp());
        EXPECT(0x8081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807f));
        EXPECT(0x9e, gbc.readMem(0x8080));
        // CB 9E 02D0
        gbc.setState(0xd0c9, 0xd43c, 0xc3f0, 0x675f, 0xbe4, 0x8809, 0x0, 0x0);
        gbc.writeMem(0x8809, { 0xa6 });
        gbc.writeMem(0xd0c9, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd43c, gbc.sp());
        EXPECT(0xd0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8809));
        EXPECT(0xcb, gbc.readMem(0xd0c9));
        EXPECT(0x9e, gbc.readMem(0xd0ca));
        // CB 9E 02D1
        gbc.setState(0x9cbc, 0x518c, 0x6740, 0x509a, 0xc079, 0xd2fa, 0x0, 0x1);
        gbc.writeMem(0x9cbc, { 0xcb, 0x9e });
        gbc.writeMem(0xd2fa, { 0x29 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x518c, gbc.sp());
        EXPECT(0x9cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbc));
        EXPECT(0x9e, gbc.readMem(0x9cbd));
        EXPECT(0x21, gbc.readMem(0xd2fa));
        // CB 9E 02D2
        gbc.setState(0x418a, 0x3d5f, 0x1e10, 0xea94, 0xe666, 0xffd8, 0x1, 0x0);
        gbc.writeMem(0x418a, { 0xcb, 0x9e });
        gbc.writeMem(0xffd8, { 0x3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3d5f, gbc.sp());
        EXPECT(0x418c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xffd8));
        // CB 9E 02D3
        gbc.setState(0xc504, 0x69d3, 0xaf40, 0x407b, 0xedc2, 0x1f58, 0x1, 0x1);
        gbc.writeMem(0x1f58, { 0xc1 });
        gbc.writeMem(0xc504, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x69d3, gbc.sp());
        EXPECT(0xc506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc504));
        EXPECT(0x9e, gbc.readMem(0xc505));
        // CB 9E 02D4
        gbc.setState(0x76d6, 0xb08a, 0xba30, 0x9dac, 0x525, 0x77f3, 0x1, 0x0);
        gbc.writeMem(0x76d6, { 0xcb, 0x9e });
        gbc.writeMem(0x77f3, { 0x84 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb08a, gbc.sp());
        EXPECT(0x76d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 02D5
        gbc.setState(0xa699, 0x5ea7, 0x1c50, 0xe38b, 0xb59e, 0xec4a, 0x0, 0x0);
        gbc.writeMem(0xa699, { 0xcb, 0x9e });
        gbc.writeMem(0xec4a, { 0x7b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5ea7, gbc.sp());
        EXPECT(0xa69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa699));
        EXPECT(0x9e, gbc.readMem(0xa69a));
        EXPECT(0x73, gbc.readMem(0xec4a));
        // CB 9E 02D6
        gbc.setState(0x7d75, 0x7a3, 0xe740, 0x824d, 0x31a1, 0xe2e3, 0x1, 0x0);
        gbc.writeMem(0x7d75, { 0xcb, 0x9e });
        gbc.writeMem(0xe2e3, { 0xd9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7a3, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe2e3));
        // CB 9E 02D8
        gbc.setState(0x2c1f, 0x4e2d, 0xd480, 0x9116, 0x3feb, 0x4921, 0x1, 0x1);
        gbc.writeMem(0x2c1f, { 0xcb, 0x9e });
        gbc.writeMem(0x4921, { 0x22 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0x2c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 02D9
        gbc.setState(0x683f, 0xa95f, 0x4880, 0x1675, 0x74b7, 0xd2c8, 0x0, 0x1);
        gbc.writeMem(0x683f, { 0xcb, 0x9e });
        gbc.writeMem(0xd2c8, { 0x4e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa95f, gbc.sp());
        EXPECT(0x6841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xd2c8));
        // CB 9E 02DB
        gbc.setState(0x5ea4, 0x4325, 0x4420, 0xf654, 0x3b66, 0x9f5e, 0x0, 0x1);
        gbc.writeMem(0x5ea4, { 0xcb, 0x9e });
        gbc.writeMem(0x9f5e, { 0x12 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4325, gbc.sp());
        EXPECT(0x5ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9f5e));
        // CB 9E 02DD
        gbc.setState(0x8ca3, 0xcf21, 0xde70, 0xd395, 0xcb33, 0x81ca, 0x1, 0x1);
        gbc.writeMem(0x81ca, { 0xa3 });
        gbc.writeMem(0x8ca3, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcf21, gbc.sp());
        EXPECT(0x8ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x81ca));
        EXPECT(0xcb, gbc.readMem(0x8ca3));
        EXPECT(0x9e, gbc.readMem(0x8ca4));
        // CB 9E 02E0
        gbc.setState(0x23a4, 0x4bbf, 0x1ac0, 0xdcaa, 0x8a9a, 0x5826, 0x0, 0x1);
        gbc.writeMem(0x23a4, { 0xcb, 0x9e });
        gbc.writeMem(0x5826, { 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4bbf, gbc.sp());
        EXPECT(0x23a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 02E1
        gbc.setState(0xbab6, 0xf2e, 0x36a0, 0xccf0, 0xed9, 0xb41c, 0x0, 0x1);
        gbc.writeMem(0xb41c, { 0x58 });
        gbc.writeMem(0xbab6, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf2e, gbc.sp());
        EXPECT(0xbab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb41c));
        EXPECT(0xcb, gbc.readMem(0xbab6));
        EXPECT(0x9e, gbc.readMem(0xbab7));
        // CB 9E 02E2
        gbc.setState(0x53a8, 0xc848, 0x1810, 0xe147, 0x9b8c, 0x29ed, 0x1, 0x1);
        gbc.writeMem(0x29ed, { 0x90 });
        gbc.writeMem(0x53a8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc848, gbc.sp());
        EXPECT(0x53aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 02E5
        gbc.setState(0x29c3, 0x9cdc, 0x2e90, 0xb35e, 0xdb3c, 0xff9b, 0x1, 0x1);
        gbc.writeMem(0x29c3, { 0xcb, 0x9e });
        gbc.writeMem(0xff9b, { 0xfb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9cdc, gbc.sp());
        EXPECT(0x29c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xff9b));
        // CB 9E 02E6
        gbc.setState(0xe1f2, 0x8ac5, 0x8580, 0xda7, 0xde1c, 0xd664, 0x0, 0x0);
        gbc.writeMem(0xd664, { 0x75 });
        gbc.writeMem(0xe1f2, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8ac5, gbc.sp());
        EXPECT(0xe1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xd664));
        EXPECT(0xcb, gbc.readMem(0xe1f2));
        EXPECT(0x9e, gbc.readMem(0xe1f3));
        // CB 9E 02E7
        gbc.setState(0xb1c4, 0x6460, 0x3b50, 0xb900, 0xb03f, 0xacc3, 0x0, 0x1);
        gbc.writeMem(0xacc3, { 0x7f });
        gbc.writeMem(0xb1c4, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6460, gbc.sp());
        EXPECT(0xb1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xacc3));
        EXPECT(0xcb, gbc.readMem(0xb1c4));
        EXPECT(0x9e, gbc.readMem(0xb1c5));
        // CB 9E 02E8
        gbc.setState(0x77ea, 0xce38, 0x82d0, 0xa3cb, 0xe435, 0x9217, 0x0, 0x1);
        gbc.writeMem(0x77ea, { 0xcb, 0x9e });
        gbc.writeMem(0x9217, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xce38, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9217));
        // CB 9E 02EA
        gbc.setState(0x5478, 0xaa8f, 0x36d0, 0x9189, 0xdd00, 0xa484, 0x1, 0x0);
        gbc.writeMem(0x5478, { 0xcb, 0x9e });
        gbc.writeMem(0xa484, { 0xac });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xaa8f, gbc.sp());
        EXPECT(0x547a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa484));
        // CB 9E 02EB
        gbc.setState(0xd537, 0x19b0, 0x9b0, 0xa741, 0xb9f4, 0x47c6, 0x0, 0x0);
        gbc.writeMem(0x47c6, { 0xf5 });
        gbc.writeMem(0xd537, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x19b0, gbc.sp());
        EXPECT(0xd539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd537));
        EXPECT(0x9e, gbc.readMem(0xd538));
        // CB 9E 02EC
        gbc.setState(0xe949, 0xa38c, 0x42a0, 0x3dd, 0xcc94, 0x227c, 0x0, 0x1);
        gbc.writeMem(0x227c, { 0x10 });
        gbc.writeMem(0xe949, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa38c, gbc.sp());
        EXPECT(0xe94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe949));
        EXPECT(0x9e, gbc.readMem(0xe94a));
        // CB 9E 02ED
        gbc.setState(0xabfc, 0xd11e, 0x490, 0x742f, 0xa856, 0xb2d9, 0x0, 0x0);
        gbc.writeMem(0xabfc, { 0xcb, 0x9e });
        gbc.writeMem(0xb2d9, { 0x92 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd11e, gbc.sp());
        EXPECT(0xabfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfc));
        EXPECT(0x9e, gbc.readMem(0xabfd));
        EXPECT(0x92, gbc.readMem(0xb2d9));
        // CB 9E 02EE
        gbc.setState(0x5a9c, 0xfb82, 0x9a60, 0x30b8, 0x4c88, 0x6601, 0x0, 0x0);
        gbc.writeMem(0x5a9c, { 0xcb, 0x9e });
        gbc.writeMem(0x6601, { 0x60 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfb82, gbc.sp());
        EXPECT(0x5a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 02F0
        gbc.setState(0xb515, 0xa836, 0x3760, 0x6ab1, 0xa744, 0x6bb9, 0x1, 0x0);
        gbc.writeMem(0x6bb9, { 0x14 });
        gbc.writeMem(0xb515, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa836, gbc.sp());
        EXPECT(0xb517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb515));
        EXPECT(0x9e, gbc.readMem(0xb516));
        // CB 9E 02F3
        gbc.setState(0x7e3, 0x207e, 0x7170, 0xd593, 0x2b75, 0xea8, 0x1, 0x0);
        gbc.writeMem(0x7e3, { 0xcb, 0x9e });
        gbc.writeMem(0xea8, { 0xf5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x207e, gbc.sp());
        EXPECT(0x7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 02F4
        gbc.setState(0x2f46, 0x3d9e, 0x61c0, 0xd7be, 0x39b1, 0x8a1b, 0x1, 0x0);
        gbc.writeMem(0x2f46, { 0xcb, 0x9e });
        gbc.writeMem(0x8a1b, { 0xc1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3d9e, gbc.sp());
        EXPECT(0x2f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8a1b));
        // CB 9E 02F5
        gbc.setState(0xcb03, 0x2a30, 0x44c0, 0x8a33, 0x2799, 0xe500, 0x1, 0x1);
        gbc.writeMem(0xcb03, { 0xcb, 0x9e });
        gbc.writeMem(0xe500, { 0x75 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2a30, gbc.sp());
        EXPECT(0xcb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb03));
        EXPECT(0x9e, gbc.readMem(0xcb04));
        EXPECT(0x75, gbc.readMem(0xe500));
        // CB 9E 02F6
        gbc.setState(0xb732, 0x1db1, 0xc00, 0xf227, 0x755e, 0xf9d6, 0x0, 0x1);
        gbc.writeMem(0xb732, { 0xcb, 0x9e });
        gbc.writeMem(0xf9d6, { 0x91 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1db1, gbc.sp());
        EXPECT(0xb734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb732));
        EXPECT(0x9e, gbc.readMem(0xb733));
        EXPECT(0x91, gbc.readMem(0xf9d6));
        // CB 9E 02F8
        gbc.setState(0x36c, 0xabde, 0xcb0, 0xed47, 0x6bf8, 0xe7bb, 0x1, 0x1);
        gbc.writeMem(0x36c, { 0xcb, 0x9e });
        gbc.writeMem(0xe7bb, { 0x19 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xabde, gbc.sp());
        EXPECT(0x36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe7bb));
        // CB 9E 02F9
        gbc.setState(0xc113, 0x70c5, 0x3180, 0x10b6, 0x25e6, 0x1931, 0x0, 0x1);
        gbc.writeMem(0x1931, { 0x63 });
        gbc.writeMem(0xc113, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x70c5, gbc.sp());
        EXPECT(0xc115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc113));
        EXPECT(0x9e, gbc.readMem(0xc114));
        // CB 9E 02FA
        gbc.setState(0xde61, 0xf1da, 0xe3e0, 0xf9cd, 0xc37b, 0xb0a5, 0x1, 0x0);
        gbc.writeMem(0xb0a5, { 0xc0 });
        gbc.writeMem(0xde61, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf1da, gbc.sp());
        EXPECT(0xde63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb0a5));
        EXPECT(0xcb, gbc.readMem(0xde61));
        EXPECT(0x9e, gbc.readMem(0xde62));
        // CB 9E 02FD
        gbc.setState(0xbcb, 0xe175, 0x73f0, 0x35da, 0xaf75, 0x8305, 0x0, 0x0);
        gbc.writeMem(0xbcb, { 0xcb, 0x9e });
        gbc.writeMem(0x8305, { 0x96 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe175, gbc.sp());
        EXPECT(0xbcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8305));
        // CB 9E 02FE
        gbc.setState(0x7572, 0x6bf1, 0x47d0, 0x88c5, 0xb669, 0x9558, 0x0, 0x0);
        gbc.writeMem(0x7572, { 0xcb, 0x9e });
        gbc.writeMem(0x9558, { 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6bf1, gbc.sp());
        EXPECT(0x7574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9558));
        // CB 9E 0300
        gbc.setState(0xd0b3, 0x65b1, 0xff80, 0xf7d3, 0x9c75, 0xa165, 0x0, 0x0);
        gbc.writeMem(0xa165, { 0x55 });
        gbc.writeMem(0xd0b3, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x65b1, gbc.sp());
        EXPECT(0xd0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa165));
        EXPECT(0xcb, gbc.readMem(0xd0b3));
        EXPECT(0x9e, gbc.readMem(0xd0b4));
        // CB 9E 0301
        gbc.setState(0x3e30, 0x30e7, 0x4550, 0x7b2f, 0xd793, 0x6c91, 0x1, 0x0);
        gbc.writeMem(0x3e30, { 0xcb, 0x9e });
        gbc.writeMem(0x6c91, { 0x37 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x30e7, gbc.sp());
        EXPECT(0x3e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0302
        gbc.setState(0x871e, 0xcf6c, 0xb8d0, 0x7763, 0xaa16, 0xe1ed, 0x1, 0x0);
        gbc.writeMem(0x871e, { 0xcb, 0x9e });
        gbc.writeMem(0xe1ed, { 0x64 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcf6c, gbc.sp());
        EXPECT(0x8720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871e));
        EXPECT(0x9e, gbc.readMem(0x871f));
        EXPECT(0x64, gbc.readMem(0xe1ed));
        // CB 9E 0303
        gbc.setState(0xd67d, 0x474e, 0x7160, 0x5797, 0x53d3, 0xa8f8, 0x0, 0x0);
        gbc.writeMem(0xa8f8, { 0xd9 });
        gbc.writeMem(0xd67d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x474e, gbc.sp());
        EXPECT(0xd67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xa8f8));
        EXPECT(0xcb, gbc.readMem(0xd67d));
        EXPECT(0x9e, gbc.readMem(0xd67e));
        // CB 9E 0304
        gbc.setState(0xa6a8, 0x28a6, 0x12d0, 0xe6a1, 0xe9f7, 0x2fce, 0x0, 0x0);
        gbc.writeMem(0x2fce, { 0xf7 });
        gbc.writeMem(0xa6a8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x28a6, gbc.sp());
        EXPECT(0xa6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a8));
        EXPECT(0x9e, gbc.readMem(0xa6a9));
        // CB 9E 0305
        gbc.setState(0x1a1a, 0x9f85, 0xbb70, 0x49f1, 0xea0d, 0xce53, 0x1, 0x1);
        gbc.writeMem(0x1a1a, { 0xcb, 0x9e });
        gbc.writeMem(0xce53, { 0x9d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9f85, gbc.sp());
        EXPECT(0x1a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xce53));
        // CB 9E 0307
        gbc.setState(0x4586, 0x5444, 0x5560, 0xb11c, 0x19e1, 0xb3c0, 0x1, 0x0);
        gbc.writeMem(0x4586, { 0xcb, 0x9e });
        gbc.writeMem(0xb3c0, { 0xb6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5444, gbc.sp());
        EXPECT(0x4588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb3c0));
        // CB 9E 0309
        gbc.setState(0xa03d, 0xa9d4, 0x12b0, 0xcc4c, 0x1c7b, 0x821c, 0x1, 0x0);
        gbc.writeMem(0x821c, { 0x94 });
        gbc.writeMem(0xa03d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa9d4, gbc.sp());
        EXPECT(0xa03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x821c));
        EXPECT(0xcb, gbc.readMem(0xa03d));
        EXPECT(0x9e, gbc.readMem(0xa03e));
        // CB 9E 030A
        gbc.setState(0x125a, 0xc65c, 0x9900, 0x2961, 0x5ff, 0x4640, 0x1, 0x0);
        gbc.writeMem(0x125a, { 0xcb, 0x9e });
        gbc.writeMem(0x4640, { 0x21 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc65c, gbc.sp());
        EXPECT(0x125c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 030B
        gbc.setState(0xca4a, 0x3866, 0x3000, 0x9df0, 0x5f9, 0xb41f, 0x1, 0x0);
        gbc.writeMem(0xb41f, { 0x7a });
        gbc.writeMem(0xca4a, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3866, gbc.sp());
        EXPECT(0xca4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb41f));
        EXPECT(0xcb, gbc.readMem(0xca4a));
        EXPECT(0x9e, gbc.readMem(0xca4b));
        // CB 9E 030D
        gbc.setState(0x1db1, 0xa3e, 0x7720, 0xb54f, 0x6c3c, 0xf451, 0x1, 0x1);
        gbc.writeMem(0x1db1, { 0xcb, 0x9e });
        gbc.writeMem(0xf451, { 0x50 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa3e, gbc.sp());
        EXPECT(0x1db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xf451));
        // CB 9E 030E
        gbc.setState(0xaccd, 0x2262, 0x2be0, 0x8e7a, 0xe9f0, 0x8a3f, 0x0, 0x0);
        gbc.writeMem(0x8a3f, { 0x79 });
        gbc.writeMem(0xaccd, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2262, gbc.sp());
        EXPECT(0xaccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8a3f));
        EXPECT(0xcb, gbc.readMem(0xaccd));
        EXPECT(0x9e, gbc.readMem(0xacce));
        // CB 9E 030F
        gbc.setState(0x7204, 0x6792, 0x5cb0, 0x2d77, 0xe33c, 0x1d5e, 0x0, 0x0);
        gbc.writeMem(0x1d5e, { 0x47 });
        gbc.writeMem(0x7204, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6792, gbc.sp());
        EXPECT(0x7206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0311
        gbc.setState(0xab54, 0xa42d, 0xb1f0, 0x1d40, 0x5f46, 0x70b, 0x1, 0x1);
        gbc.writeMem(0x70b, { 0x4 });
        gbc.writeMem(0xab54, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa42d, gbc.sp());
        EXPECT(0xab56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab54));
        EXPECT(0x9e, gbc.readMem(0xab55));
        // CB 9E 0312
        gbc.setState(0xc016, 0x7059, 0xda20, 0x8f89, 0xdad2, 0xdbe6, 0x0, 0x0);
        gbc.writeMem(0xc016, { 0xcb, 0x9e });
        gbc.writeMem(0xdbe6, { 0x5f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7059, gbc.sp());
        EXPECT(0xc018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc016));
        EXPECT(0x9e, gbc.readMem(0xc017));
        EXPECT(0x57, gbc.readMem(0xdbe6));
        // CB 9E 0313
        gbc.setState(0x81cb, 0x5301, 0x6540, 0xac3b, 0x6c6, 0x78bf, 0x1, 0x1);
        gbc.writeMem(0x78bf, { 0xb7 });
        gbc.writeMem(0x81cb, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5301, gbc.sp());
        EXPECT(0x81cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cb));
        EXPECT(0x9e, gbc.readMem(0x81cc));
        // CB 9E 0315
        gbc.setState(0xd28b, 0xbe56, 0x5820, 0x9300, 0x51ea, 0x5f54, 0x0, 0x0);
        gbc.writeMem(0x5f54, { 0x83 });
        gbc.writeMem(0xd28b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbe56, gbc.sp());
        EXPECT(0xd28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28b));
        EXPECT(0x9e, gbc.readMem(0xd28c));
        // CB 9E 0317
        gbc.setState(0x55ea, 0xca2, 0xa00, 0xa7a3, 0x11de, 0x5c29, 0x0, 0x1);
        gbc.writeMem(0x55ea, { 0xcb, 0x9e });
        gbc.writeMem(0x5c29, { 0x75 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xca2, gbc.sp());
        EXPECT(0x55ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0319
        gbc.setState(0x2085, 0xc698, 0xb5c0, 0x20eb, 0x5518, 0xc491, 0x1, 0x1);
        gbc.writeMem(0x2085, { 0xcb, 0x9e });
        gbc.writeMem(0xc491, { 0x20 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc698, gbc.sp());
        EXPECT(0x2087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc491));
        // CB 9E 031A
        gbc.setState(0xa3f0, 0x6f4e, 0x1a10, 0xcf75, 0x2bb8, 0x560a, 0x1, 0x1);
        gbc.writeMem(0x560a, { 0xc5 });
        gbc.writeMem(0xa3f0, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6f4e, gbc.sp());
        EXPECT(0xa3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f0));
        EXPECT(0x9e, gbc.readMem(0xa3f1));
        // CB 9E 031B
        gbc.setState(0xc72d, 0x940b, 0xaff0, 0x3616, 0x8ae8, 0x7fca, 0x0, 0x0);
        gbc.writeMem(0x7fca, { 0x14 });
        gbc.writeMem(0xc72d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x940b, gbc.sp());
        EXPECT(0xc72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc72d));
        EXPECT(0x9e, gbc.readMem(0xc72e));
        // CB 9E 031C
        gbc.setState(0x486, 0x4c59, 0xb5e0, 0x5992, 0xa288, 0x4c7c, 0x1, 0x1);
        gbc.writeMem(0x486, { 0xcb, 0x9e });
        gbc.writeMem(0x4c7c, { 0xb3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4c59, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 031F
        gbc.setState(0xbbd8, 0x671d, 0x39e0, 0xf2eb, 0xdaf1, 0xb24d, 0x1, 0x1);
        gbc.writeMem(0xb24d, { 0xdb });
        gbc.writeMem(0xbbd8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x671d, gbc.sp());
        EXPECT(0xbbda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xb24d));
        EXPECT(0xcb, gbc.readMem(0xbbd8));
        EXPECT(0x9e, gbc.readMem(0xbbd9));
        // CB 9E 0320
        gbc.setState(0x46b6, 0xaaf9, 0x3d00, 0x3c6b, 0x712d, 0xccfb, 0x1, 0x1);
        gbc.writeMem(0x46b6, { 0xcb, 0x9e });
        gbc.writeMem(0xccfb, { 0x31 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaaf9, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xccfb));
        // CB 9E 0321
        gbc.setState(0xa287, 0xf36e, 0x9750, 0x738b, 0xf723, 0xda75, 0x1, 0x1);
        gbc.writeMem(0xa287, { 0xcb, 0x9e });
        gbc.writeMem(0xda75, { 0x65 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf36e, gbc.sp());
        EXPECT(0xa289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa287));
        EXPECT(0x9e, gbc.readMem(0xa288));
        EXPECT(0x65, gbc.readMem(0xda75));
        // CB 9E 0322
        gbc.setState(0x9038, 0xab95, 0xe3c0, 0xc05a, 0xb134, 0x5a81, 0x0, 0x1);
        gbc.writeMem(0x5a81, { 0xd6 });
        gbc.writeMem(0x9038, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xab95, gbc.sp());
        EXPECT(0x903a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9038));
        EXPECT(0x9e, gbc.readMem(0x9039));
        // CB 9E 0324
        gbc.setState(0x573a, 0xd698, 0x42b0, 0x5f04, 0xf2e9, 0xc705, 0x1, 0x0);
        gbc.writeMem(0x573a, { 0xcb, 0x9e });
        gbc.writeMem(0xc705, { 0x8e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd698, gbc.sp());
        EXPECT(0x573c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc705));
        // CB 9E 0326
        gbc.setState(0xbdb0, 0x350c, 0x58f0, 0x288, 0xb229, 0x63d9, 0x1, 0x1);
        gbc.writeMem(0x63d9, { 0x80 });
        gbc.writeMem(0xbdb0, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x350c, gbc.sp());
        EXPECT(0xbdb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb0));
        EXPECT(0x9e, gbc.readMem(0xbdb1));
        // CB 9E 0327
        gbc.setState(0x183b, 0x6a55, 0x6500, 0x2cbe, 0x8e4c, 0xedf4, 0x0, 0x0);
        gbc.writeMem(0x183b, { 0xcb, 0x9e });
        gbc.writeMem(0xedf4, { 0x2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6a55, gbc.sp());
        EXPECT(0x183d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xedf4));
        // CB 9E 032A
        gbc.setState(0x6cd3, 0x7b5d, 0xc530, 0xb87f, 0x7c39, 0xac40, 0x1, 0x0);
        gbc.writeMem(0x6cd3, { 0xcb, 0x9e });
        gbc.writeMem(0xac40, { 0x89 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7b5d, gbc.sp());
        EXPECT(0x6cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xac40));
        // CB 9E 032B
        gbc.setState(0x4a06, 0x5504, 0xdf80, 0xa340, 0x41bf, 0x30d2, 0x0, 0x1);
        gbc.writeMem(0x30d2, { 0x16 });
        gbc.writeMem(0x4a06, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5504, gbc.sp());
        EXPECT(0x4a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 032C
        gbc.setState(0xa6e1, 0x88bf, 0xd990, 0xf4bf, 0x879a, 0xea54, 0x0, 0x1);
        gbc.writeMem(0xa6e1, { 0xcb, 0x9e });
        gbc.writeMem(0xea54, { 0x29 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x88bf, gbc.sp());
        EXPECT(0xa6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e1));
        EXPECT(0x9e, gbc.readMem(0xa6e2));
        EXPECT(0x21, gbc.readMem(0xea54));
        // CB 9E 032D
        gbc.setState(0xea68, 0xe61b, 0xb900, 0x88c, 0xc3e6, 0xd793, 0x1, 0x1);
        gbc.writeMem(0xd793, { 0xaf });
        gbc.writeMem(0xea68, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe61b, gbc.sp());
        EXPECT(0xea6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd793));
        EXPECT(0xcb, gbc.readMem(0xea68));
        EXPECT(0x9e, gbc.readMem(0xea69));
        // CB 9E 032E
        gbc.setState(0xdc49, 0x1438, 0x140, 0x3e2c, 0xa934, 0x1db0, 0x1, 0x1);
        gbc.writeMem(0x1db0, { 0xe6 });
        gbc.writeMem(0xdc49, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1438, gbc.sp());
        EXPECT(0xdc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc49));
        EXPECT(0x9e, gbc.readMem(0xdc4a));
        // CB 9E 032F
        gbc.setState(0xbf39, 0x6918, 0xe250, 0x1cad, 0x89bf, 0xed6c, 0x0, 0x1);
        gbc.writeMem(0xbf39, { 0xcb, 0x9e });
        gbc.writeMem(0xed6c, { 0x1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6918, gbc.sp());
        EXPECT(0xbf3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf39));
        EXPECT(0x9e, gbc.readMem(0xbf3a));
        EXPECT(0x1, gbc.readMem(0xed6c));
        // CB 9E 0331
        gbc.setState(0x5dad, 0x86e, 0xd40, 0x4d39, 0x139, 0x4391, 0x1, 0x0);
        gbc.writeMem(0x4391, { 0x25 });
        gbc.writeMem(0x5dad, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x86e, gbc.sp());
        EXPECT(0x5daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0332
        gbc.setState(0x5d6f, 0x45e9, 0xbb00, 0xd907, 0x7a1a, 0xefe3, 0x1, 0x1);
        gbc.writeMem(0x5d6f, { 0xcb, 0x9e });
        gbc.writeMem(0xefe3, { 0x8f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x45e9, gbc.sp());
        EXPECT(0x5d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xefe3));
        // CB 9E 0333
        gbc.setState(0xcd08, 0x58f6, 0x63f0, 0x7e91, 0x2a1d, 0xa67d, 0x0, 0x1);
        gbc.writeMem(0xa67d, { 0xdd });
        gbc.writeMem(0xcd08, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x58f6, gbc.sp());
        EXPECT(0xcd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa67d));
        EXPECT(0xcb, gbc.readMem(0xcd08));
        EXPECT(0x9e, gbc.readMem(0xcd09));
        // CB 9E 0336
        gbc.setState(0xc2e8, 0x994f, 0xc3f0, 0x4d09, 0x31e2, 0xa8f2, 0x1, 0x0);
        gbc.writeMem(0xa8f2, { 0xbc });
        gbc.writeMem(0xc2e8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x994f, gbc.sp());
        EXPECT(0xc2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xa8f2));
        EXPECT(0xcb, gbc.readMem(0xc2e8));
        EXPECT(0x9e, gbc.readMem(0xc2e9));
        // CB 9E 0338
        gbc.setState(0x3a30, 0x4f6a, 0x84f0, 0x6992, 0xac72, 0x68cc, 0x0, 0x1);
        gbc.writeMem(0x3a30, { 0xcb, 0x9e });
        gbc.writeMem(0x68cc, { 0x67 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4f6a, gbc.sp());
        EXPECT(0x3a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0339
        gbc.setState(0xc814, 0x2fe5, 0x5260, 0x29e8, 0x41db, 0x6893, 0x0, 0x1);
        gbc.writeMem(0x6893, { 0x21 });
        gbc.writeMem(0xc814, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2fe5, gbc.sp());
        EXPECT(0xc816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc814));
        EXPECT(0x9e, gbc.readMem(0xc815));
        // CB 9E 033A
        gbc.setState(0x1155, 0x2f28, 0x6e80, 0x93c, 0x716c, 0xdf0e, 0x1, 0x0);
        gbc.writeMem(0x1155, { 0xcb, 0x9e });
        gbc.writeMem(0xdf0e, { 0xab });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2f28, gbc.sp());
        EXPECT(0x1157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdf0e));
        // CB 9E 033B
        gbc.setState(0x8cdc, 0xc975, 0x3310, 0x4f25, 0x7843, 0xe534, 0x0, 0x1);
        gbc.writeMem(0x8cdc, { 0xcb, 0x9e });
        gbc.writeMem(0xe534, { 0xf3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc975, gbc.sp());
        EXPECT(0x8cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cdc));
        EXPECT(0x9e, gbc.readMem(0x8cdd));
        EXPECT(0xf3, gbc.readMem(0xe534));
        // CB 9E 033C
        gbc.setState(0x8ab2, 0x7c1, 0x3a50, 0xb953, 0xe585, 0x8ff0, 0x1, 0x0);
        gbc.writeMem(0x8ab2, { 0xcb, 0x9e });
        gbc.writeMem(0x8ff0, { 0x18 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7c1, gbc.sp());
        EXPECT(0x8ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab2));
        EXPECT(0x9e, gbc.readMem(0x8ab3));
        EXPECT(0x10, gbc.readMem(0x8ff0));
        // CB 9E 033E
        gbc.setState(0xa670, 0x43c1, 0xe270, 0x9359, 0xb1d6, 0x1b56, 0x0, 0x0);
        gbc.writeMem(0x1b56, { 0x97 });
        gbc.writeMem(0xa670, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x43c1, gbc.sp());
        EXPECT(0xa672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa670));
        EXPECT(0x9e, gbc.readMem(0xa671));
        // CB 9E 0340
        gbc.setState(0xea40, 0x6d48, 0xde80, 0xaf48, 0x79ed, 0xb1fc, 0x1, 0x1);
        gbc.writeMem(0xb1fc, { 0xb8 });
        gbc.writeMem(0xea40, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6d48, gbc.sp());
        EXPECT(0xea42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb1fc));
        EXPECT(0xcb, gbc.readMem(0xea40));
        EXPECT(0x9e, gbc.readMem(0xea41));
        // CB 9E 0341
        gbc.setState(0xb052, 0xcb1e, 0x9870, 0x9851, 0xf1ac, 0x82de, 0x0, 0x1);
        gbc.writeMem(0x82de, { 0x5d });
        gbc.writeMem(0xb052, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcb1e, gbc.sp());
        EXPECT(0xb054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x82de));
        EXPECT(0xcb, gbc.readMem(0xb052));
        EXPECT(0x9e, gbc.readMem(0xb053));
        // CB 9E 0342
        gbc.setState(0x4b73, 0x11a, 0xe6b0, 0x4185, 0x1b2b, 0x8e5b, 0x1, 0x1);
        gbc.writeMem(0x4b73, { 0xcb, 0x9e });
        gbc.writeMem(0x8e5b, { 0x49 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x11a, gbc.sp());
        EXPECT(0x4b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x8e5b));
        // CB 9E 0343
        gbc.setState(0x3404, 0x7a18, 0xc570, 0xb9e3, 0xad03, 0xe133, 0x0, 0x0);
        gbc.writeMem(0x3404, { 0xcb, 0x9e });
        gbc.writeMem(0xe133, { 0x5b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7a18, gbc.sp());
        EXPECT(0x3406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe133));
        // CB 9E 0345
        gbc.setState(0xc67f, 0xed7f, 0x22b0, 0x3fa1, 0xe428, 0x60d1, 0x0, 0x0);
        gbc.writeMem(0x60d1, { 0xc5 });
        gbc.writeMem(0xc67f, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xed7f, gbc.sp());
        EXPECT(0xc681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67f));
        EXPECT(0x9e, gbc.readMem(0xc680));
        // CB 9E 0346
        gbc.setState(0x6c8, 0xf96b, 0x7fc0, 0x85a4, 0x4b79, 0x188d, 0x0, 0x0);
        gbc.writeMem(0x6c8, { 0xcb, 0x9e });
        gbc.writeMem(0x188d, { 0x16 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf96b, gbc.sp());
        EXPECT(0x6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0347
        gbc.setState(0x3d04, 0x1fb8, 0x8930, 0x215d, 0x3313, 0xf122, 0x0, 0x0);
        gbc.writeMem(0x3d04, { 0xcb, 0x9e });
        gbc.writeMem(0xf122, { 0xd6 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1fb8, gbc.sp());
        EXPECT(0x3d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xf122));
        // CB 9E 0348
        gbc.setState(0xe78b, 0x8314, 0x5cf0, 0x4fce, 0xeb41, 0xa8b3, 0x0, 0x1);
        gbc.writeMem(0xa8b3, { 0x64 });
        gbc.writeMem(0xe78b, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0xe78d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa8b3));
        EXPECT(0xcb, gbc.readMem(0xe78b));
        EXPECT(0x9e, gbc.readMem(0xe78c));
        // CB 9E 034A
        gbc.setState(0x3a5d, 0xcdc9, 0xe700, 0xec3e, 0xb307, 0xb797, 0x0, 0x1);
        gbc.writeMem(0x3a5d, { 0xcb, 0x9e });
        gbc.writeMem(0xb797, { 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcdc9, gbc.sp());
        EXPECT(0x3a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb797));
        // CB 9E 034C
        gbc.setState(0x6473, 0xd5dd, 0x560, 0x48bc, 0xedb9, 0xa140, 0x1, 0x0);
        gbc.writeMem(0x6473, { 0xcb, 0x9e });
        gbc.writeMem(0xa140, { 0xd3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd5dd, gbc.sp());
        EXPECT(0x6475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xa140));
        // CB 9E 034E
        gbc.setState(0x259e, 0x1349, 0x4610, 0xe4a1, 0x23cb, 0xa2a9, 0x1, 0x1);
        gbc.writeMem(0x259e, { 0xcb, 0x9e });
        gbc.writeMem(0xa2a9, { 0xfb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1349, gbc.sp());
        EXPECT(0x25a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xa2a9));
        // CB 9E 034F
        gbc.setState(0x7880, 0xc805, 0xd980, 0x227e, 0x7312, 0x40cd, 0x1, 0x0);
        gbc.writeMem(0x40cd, { 0xf4 });
        gbc.writeMem(0x7880, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc805, gbc.sp());
        EXPECT(0x7882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0350
        gbc.setState(0x5fc8, 0xaabe, 0xf9f0, 0x1039, 0x7bbc, 0x1aa3, 0x0, 0x0);
        gbc.writeMem(0x1aa3, { 0xf3 });
        gbc.writeMem(0x5fc8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaabe, gbc.sp());
        EXPECT(0x5fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0351
        gbc.setState(0xbf3, 0x5b2, 0xdfb0, 0xfd62, 0x82c3, 0xfbcf, 0x0, 0x0);
        gbc.writeMem(0xbf3, { 0xcb, 0x9e });
        gbc.writeMem(0xfbcf, { 0xcd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5b2, gbc.sp());
        EXPECT(0xbf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xfbcf));
        // CB 9E 0352
        gbc.setState(0xcfe7, 0xfb69, 0x5430, 0x9fe6, 0x353c, 0x73e7, 0x0, 0x0);
        gbc.writeMem(0x73e7, { 0xb1 });
        gbc.writeMem(0xcfe7, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfb69, gbc.sp());
        EXPECT(0xcfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe7));
        EXPECT(0x9e, gbc.readMem(0xcfe8));
        // CB 9E 0353
        gbc.setState(0x5ec3, 0xd7e9, 0x8100, 0xdc7b, 0x415e, 0x5f71, 0x0, 0x0);
        gbc.writeMem(0x5ec3, { 0xcb, 0x9e });
        gbc.writeMem(0x5f71, { 0x95 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd7e9, gbc.sp());
        EXPECT(0x5ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0358
        gbc.setState(0x9459, 0x719d, 0x8910, 0xfd38, 0x126e, 0xa0ba, 0x1, 0x1);
        gbc.writeMem(0x9459, { 0xcb, 0x9e });
        gbc.writeMem(0xa0ba, { 0xc5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x719d, gbc.sp());
        EXPECT(0x945b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9459));
        EXPECT(0x9e, gbc.readMem(0x945a));
        EXPECT(0xc5, gbc.readMem(0xa0ba));
        // CB 9E 0359
        gbc.setState(0x55d, 0x9483, 0x62e0, 0x9e6a, 0xe4af, 0x4bf6, 0x1, 0x0);
        gbc.writeMem(0x55d, { 0xcb, 0x9e });
        gbc.writeMem(0x4bf6, { 0xc0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9483, gbc.sp());
        EXPECT(0x55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 035A
        gbc.setState(0x6f5c, 0x9107, 0x7090, 0xa4a0, 0xb946, 0xdabf, 0x1, 0x0);
        gbc.writeMem(0x6f5c, { 0xcb, 0x9e });
        gbc.writeMem(0xdabf, { 0x49 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9107, gbc.sp());
        EXPECT(0x6f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xdabf));
        // CB 9E 035C
        gbc.setState(0x9794, 0xa73d, 0x430, 0xe3b9, 0xe50e, 0x44dd, 0x1, 0x0);
        gbc.writeMem(0x44dd, { 0x11 });
        gbc.writeMem(0x9794, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa73d, gbc.sp());
        EXPECT(0x9796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9794));
        EXPECT(0x9e, gbc.readMem(0x9795));
        // CB 9E 035D
        gbc.setState(0x3766, 0xe405, 0xb170, 0x620d, 0x46d2, 0xb533, 0x0, 0x0);
        gbc.writeMem(0x3766, { 0xcb, 0x9e });
        gbc.writeMem(0xb533, { 0xe1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe405, gbc.sp());
        EXPECT(0x3768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb533));
        // CB 9E 035F
        gbc.setState(0xcff3, 0xfe3b, 0xbfe0, 0x58c1, 0xb98a, 0xcbfe, 0x1, 0x0);
        gbc.writeMem(0xcbfe, { 0x20 });
        gbc.writeMem(0xcff3, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfe3b, gbc.sp());
        EXPECT(0xcff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcbfe));
        EXPECT(0xcb, gbc.readMem(0xcff3));
        EXPECT(0x9e, gbc.readMem(0xcff4));
        // CB 9E 0360
        gbc.setState(0xaed3, 0x986c, 0xc320, 0x93f5, 0xf266, 0x3825, 0x0, 0x1);
        gbc.writeMem(0x3825, { 0x83 });
        gbc.writeMem(0xaed3, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x986c, gbc.sp());
        EXPECT(0xaed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed3));
        EXPECT(0x9e, gbc.readMem(0xaed4));
        // CB 9E 0361
        gbc.setState(0x3a17, 0x4a25, 0x7dc0, 0x2cf7, 0xf575, 0xd214, 0x0, 0x0);
        gbc.writeMem(0x3a17, { 0xcb, 0x9e });
        gbc.writeMem(0xd214, { 0xd8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4a25, gbc.sp());
        EXPECT(0x3a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd214));
        // CB 9E 0362
        gbc.setState(0x7a7f, 0x8bfd, 0x6c90, 0x7f5b, 0xd356, 0x78d8, 0x1, 0x1);
        gbc.writeMem(0x78d8, { 0x56 });
        gbc.writeMem(0x7a7f, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8bfd, gbc.sp());
        EXPECT(0x7a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0363
        gbc.setState(0x9334, 0xe968, 0x4900, 0xa472, 0x4e1a, 0x9740, 0x0, 0x0);
        gbc.writeMem(0x9334, { 0xcb, 0x9e });
        gbc.writeMem(0x9740, { 0x92 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe968, gbc.sp());
        EXPECT(0x9336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9334));
        EXPECT(0x9e, gbc.readMem(0x9335));
        EXPECT(0x92, gbc.readMem(0x9740));
        // CB 9E 0364
        gbc.setState(0xcb29, 0xf29, 0xc730, 0xee5d, 0x2588, 0x5ba7, 0x0, 0x0);
        gbc.writeMem(0x5ba7, { 0xc0 });
        gbc.writeMem(0xcb29, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf29, gbc.sp());
        EXPECT(0xcb2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb29));
        EXPECT(0x9e, gbc.readMem(0xcb2a));
        // CB 9E 0365
        gbc.setState(0x8e10, 0x5b10, 0xd8f0, 0x59a7, 0x7e86, 0x62a9, 0x0, 0x0);
        gbc.writeMem(0x62a9, { 0x50 });
        gbc.writeMem(0x8e10, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5b10, gbc.sp());
        EXPECT(0x8e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e10));
        EXPECT(0x9e, gbc.readMem(0x8e11));
        // CB 9E 0366
        gbc.setState(0x8ef, 0x36fb, 0x26a0, 0xd233, 0x964c, 0x3b24, 0x0, 0x1);
        gbc.writeMem(0x8ef, { 0xcb, 0x9e });
        gbc.writeMem(0x3b24, { 0xf7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x36fb, gbc.sp());
        EXPECT(0x8f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0369
        gbc.setState(0xb85b, 0x10e0, 0x98f0, 0x1540, 0x6673, 0xca80, 0x1, 0x0);
        gbc.writeMem(0xb85b, { 0xcb, 0x9e });
        gbc.writeMem(0xca80, { 0x3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x10e0, gbc.sp());
        EXPECT(0xb85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85b));
        EXPECT(0x9e, gbc.readMem(0xb85c));
        EXPECT(0x3, gbc.readMem(0xca80));
        // CB 9E 036A
        gbc.setState(0x8237, 0x2a11, 0x6dc0, 0x354d, 0x38a2, 0x70d5, 0x0, 0x1);
        gbc.writeMem(0x70d5, { 0xf2 });
        gbc.writeMem(0x8237, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2a11, gbc.sp());
        EXPECT(0x8239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8237));
        EXPECT(0x9e, gbc.readMem(0x8238));
        // CB 9E 036C
        gbc.setState(0x9eca, 0x1ecc, 0x2500, 0x271c, 0x40ee, 0xf62f, 0x1, 0x0);
        gbc.writeMem(0x9eca, { 0xcb, 0x9e });
        gbc.writeMem(0xf62f, { 0x5b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1ecc, gbc.sp());
        EXPECT(0x9ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eca));
        EXPECT(0x9e, gbc.readMem(0x9ecb));
        EXPECT(0x53, gbc.readMem(0xf62f));
        // CB 9E 036D
        gbc.setState(0x80dd, 0x66ac, 0xd270, 0x17a6, 0x515e, 0xebc9, 0x1, 0x0);
        gbc.writeMem(0x80dd, { 0xcb, 0x9e });
        gbc.writeMem(0xebc9, { 0xac });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x66ac, gbc.sp());
        EXPECT(0x80df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80dd));
        EXPECT(0x9e, gbc.readMem(0x80de));
        EXPECT(0xa4, gbc.readMem(0xebc9));
        // CB 9E 036F
        gbc.setState(0x19de, 0x1ef4, 0x98e0, 0x4575, 0xfccf, 0xacc9, 0x1, 0x1);
        gbc.writeMem(0x19de, { 0xcb, 0x9e });
        gbc.writeMem(0xacc9, { 0x2c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1ef4, gbc.sp());
        EXPECT(0x19e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xacc9));
        // CB 9E 0370
        gbc.setState(0xe81a, 0x9fbc, 0xb8c0, 0xafc0, 0xa494, 0x13a1, 0x1, 0x0);
        gbc.writeMem(0x13a1, { 0xc0 });
        gbc.writeMem(0xe81a, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9fbc, gbc.sp());
        EXPECT(0xe81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81a));
        EXPECT(0x9e, gbc.readMem(0xe81b));
        // CB 9E 0371
        gbc.setState(0xc7b0, 0xcd48, 0x9b0, 0xa9a4, 0x1b11, 0x1608, 0x0, 0x1);
        gbc.writeMem(0x1608, { 0xc1 });
        gbc.writeMem(0xc7b0, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcd48, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b0));
        EXPECT(0x9e, gbc.readMem(0xc7b1));
        // CB 9E 0375
        gbc.setState(0x1473, 0x141a, 0x2fa0, 0x3075, 0x68b6, 0xf1df, 0x0, 0x1);
        gbc.writeMem(0x1473, { 0xcb, 0x9e });
        gbc.writeMem(0xf1df, { 0x53 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x141a, gbc.sp());
        EXPECT(0x1475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xf1df));
        // CB 9E 0376
        gbc.setState(0x6bae, 0x53e0, 0xb990, 0xe08e, 0xb550, 0xe68b, 0x1, 0x0);
        gbc.writeMem(0x6bae, { 0xcb, 0x9e });
        gbc.writeMem(0xe68b, { 0xf9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x53e0, gbc.sp());
        EXPECT(0x6bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe68b));
        // CB 9E 0377
        gbc.setState(0x428a, 0xa2bd, 0xc7f0, 0xcedd, 0x7796, 0x3c8f, 0x1, 0x1);
        gbc.writeMem(0x3c8f, { 0xa1 });
        gbc.writeMem(0x428a, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa2bd, gbc.sp());
        EXPECT(0x428c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0378
        gbc.setState(0x60ea, 0x4f4f, 0xab0, 0x88da, 0xe51b, 0x5525, 0x1, 0x0);
        gbc.writeMem(0x5525, { 0xc6 });
        gbc.writeMem(0x60ea, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4f4f, gbc.sp());
        EXPECT(0x60ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0379
        gbc.setState(0x488c, 0xf892, 0x5f60, 0xd842, 0x3c73, 0xee42, 0x1, 0x1);
        gbc.writeMem(0x488c, { 0xcb, 0x9e });
        gbc.writeMem(0xee42, { 0x7c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf892, gbc.sp());
        EXPECT(0x488e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xee42));
        // CB 9E 037A
        gbc.setState(0x30f3, 0xb030, 0xc20, 0x9245, 0x2bf3, 0xb99b, 0x0, 0x0);
        gbc.writeMem(0x30f3, { 0xcb, 0x9e });
        gbc.writeMem(0xb99b, { 0xb5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb030, gbc.sp());
        EXPECT(0x30f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb99b));
        // CB 9E 037C
        gbc.setState(0xbd5a, 0x6fc6, 0x9f10, 0xf180, 0x56f9, 0xf, 0x1, 0x0);
        gbc.writeMem(0xf, { 0xf5 });
        gbc.writeMem(0xbd5a, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6fc6, gbc.sp());
        EXPECT(0xbd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5a));
        EXPECT(0x9e, gbc.readMem(0xbd5b));
        // CB 9E 037E
        gbc.setState(0xb37f, 0x6573, 0xbe60, 0xa654, 0xc3ff, 0xdd51, 0x1, 0x0);
        gbc.writeMem(0xb37f, { 0xcb, 0x9e });
        gbc.writeMem(0xdd51, { 0xec });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6573, gbc.sp());
        EXPECT(0xb381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb37f));
        EXPECT(0x9e, gbc.readMem(0xb380));
        EXPECT(0xe4, gbc.readMem(0xdd51));
        // CB 9E 0380
        gbc.setState(0x5335, 0x89c, 0xab50, 0x8571, 0x67b1, 0xc416, 0x1, 0x1);
        gbc.writeMem(0x5335, { 0xcb, 0x9e });
        gbc.writeMem(0xc416, { 0x90 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x89c, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xc416));
        // CB 9E 0381
        gbc.setState(0x6abe, 0xd7bc, 0xd5c0, 0x9198, 0x2bc3, 0xc283, 0x1, 0x1);
        gbc.writeMem(0x6abe, { 0xcb, 0x9e });
        gbc.writeMem(0xc283, { 0xb2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0x6ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc283));
        // CB 9E 0382
        gbc.setState(0x2852, 0xebf4, 0x39f0, 0x66ba, 0x3048, 0x11da, 0x1, 0x1);
        gbc.writeMem(0x11da, { 0x96 });
        gbc.writeMem(0x2852, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xebf4, gbc.sp());
        EXPECT(0x2854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 0383
        gbc.setState(0x455d, 0x3508, 0xd620, 0x8f93, 0xe78c, 0xf939, 0x0, 0x1);
        gbc.writeMem(0x455d, { 0xcb, 0x9e });
        gbc.writeMem(0xf939, { 0x54 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3508, gbc.sp());
        EXPECT(0x455f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xf939));
        // CB 9E 0384
        gbc.setState(0x8f71, 0x9ed7, 0x54c0, 0xc4aa, 0xcde2, 0xd16a, 0x0, 0x1);
        gbc.writeMem(0x8f71, { 0xcb, 0x9e });
        gbc.writeMem(0xd16a, { 0xd3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9ed7, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f71));
        EXPECT(0x9e, gbc.readMem(0x8f72));
        EXPECT(0xd3, gbc.readMem(0xd16a));
        // CB 9E 0386
        gbc.setState(0x7590, 0x1283, 0xa1b0, 0xfc7f, 0x8c25, 0x9510, 0x0, 0x0);
        gbc.writeMem(0x7590, { 0xcb, 0x9e });
        gbc.writeMem(0x9510, { 0xe0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1283, gbc.sp());
        EXPECT(0x7592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9510));
        // CB 9E 0388
        gbc.setState(0xdbfb, 0xe7eb, 0xf520, 0x91d5, 0x3cb2, 0x4fc8, 0x1, 0x0);
        gbc.writeMem(0x4fc8, { 0xd2 });
        gbc.writeMem(0xdbfb, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0xdbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbfb));
        EXPECT(0x9e, gbc.readMem(0xdbfc));
        // CB 9E 038A
        gbc.setState(0xb6cf, 0x7a37, 0xdf40, 0x4b4d, 0x3e08, 0xf565, 0x0, 0x1);
        gbc.writeMem(0xb6cf, { 0xcb, 0x9e });
        gbc.writeMem(0xf565, { 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7a37, gbc.sp());
        EXPECT(0xb6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6cf));
        EXPECT(0x9e, gbc.readMem(0xb6d0));
        EXPECT(0x33, gbc.readMem(0xf565));
        // CB 9E 038C
        gbc.setState(0x82b0, 0xf9e9, 0x70b0, 0xc65a, 0x6e44, 0xa6dd, 0x1, 0x1);
        gbc.writeMem(0x82b0, { 0xcb, 0x9e });
        gbc.writeMem(0xa6dd, { 0x5b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf9e9, gbc.sp());
        EXPECT(0x82b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b0));
        EXPECT(0x9e, gbc.readMem(0x82b1));
        EXPECT(0x53, gbc.readMem(0xa6dd));
        // CB 9E 038D
        gbc.setState(0x2632, 0x8bac, 0x8f00, 0x219b, 0x9152, 0xe3bc, 0x0, 0x0);
        gbc.writeMem(0x2632, { 0xcb, 0x9e });
        gbc.writeMem(0xe3bc, { 0x82 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8bac, gbc.sp());
        EXPECT(0x2634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe3bc));
        // CB 9E 038E
        gbc.setState(0x64ca, 0x9ee6, 0x80e0, 0x2a73, 0x7a8f, 0x1f27, 0x0, 0x1);
        gbc.writeMem(0x1f27, { 0x55 });
        gbc.writeMem(0x64ca, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9ee6, gbc.sp());
        EXPECT(0x64cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 038F
        gbc.setState(0x6594, 0x8b33, 0xd5e0, 0x7043, 0xc011, 0x4e48, 0x0, 0x0);
        gbc.writeMem(0x4e48, { 0xa1 });
        gbc.writeMem(0x6594, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8b33, gbc.sp());
        EXPECT(0x6596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 0390
        gbc.setState(0xe4da, 0x7e06, 0xcd30, 0x7884, 0xd923, 0xe900, 0x1, 0x0);
        gbc.writeMem(0xe4da, { 0xcb, 0x9e });
        gbc.writeMem(0xe900, { 0x29 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7e06, gbc.sp());
        EXPECT(0xe4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4da));
        EXPECT(0x9e, gbc.readMem(0xe4db));
        EXPECT(0x21, gbc.readMem(0xe900));
        // CB 9E 0392
        gbc.setState(0x783e, 0x15ad, 0x3470, 0xf8b9, 0xc665, 0xfbb8, 0x0, 0x0);
        gbc.writeMem(0x783e, { 0xcb, 0x9e });
        gbc.writeMem(0xfbb8, { 0x52 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x15ad, gbc.sp());
        EXPECT(0x7840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xfbb8));
        // CB 9E 0393
        gbc.setState(0x9d1f, 0x7dc, 0xf920, 0x763c, 0xc38b, 0x2d22, 0x1, 0x1);
        gbc.writeMem(0x2d22, { 0xb6 });
        gbc.writeMem(0x9d1f, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7dc, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1f));
        EXPECT(0x9e, gbc.readMem(0x9d20));
        // CB 9E 0394
        gbc.setState(0x4480, 0x70ba, 0x4120, 0xc3b7, 0x64fb, 0x8172, 0x0, 0x1);
        gbc.writeMem(0x4480, { 0xcb, 0x9e });
        gbc.writeMem(0x8172, { 0x68 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x70ba, gbc.sp());
        EXPECT(0x4482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8172));
        // CB 9E 0395
        gbc.setState(0x90f8, 0xb978, 0xf5b0, 0x7754, 0x7b91, 0xd254, 0x0, 0x1);
        gbc.writeMem(0x90f8, { 0xcb, 0x9e });
        gbc.writeMem(0xd254, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb978, gbc.sp());
        EXPECT(0x90fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f8));
        EXPECT(0x9e, gbc.readMem(0x90f9));
        EXPECT(0x0, gbc.readMem(0xd254));
        // CB 9E 0397
        gbc.setState(0x16f6, 0x5f87, 0x5d40, 0x372e, 0x5222, 0xa3eb, 0x0, 0x0);
        gbc.writeMem(0x16f6, { 0xcb, 0x9e });
        gbc.writeMem(0xa3eb, { 0xc1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5f87, gbc.sp());
        EXPECT(0x16f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa3eb));
        // CB 9E 0398
        gbc.setState(0xaf84, 0xda0c, 0xcce0, 0xdf55, 0x8298, 0x9dcd, 0x0, 0x0);
        gbc.writeMem(0x9dcd, { 0xf0 });
        gbc.writeMem(0xaf84, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xda0c, gbc.sp());
        EXPECT(0xaf86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9dcd));
        EXPECT(0xcb, gbc.readMem(0xaf84));
        EXPECT(0x9e, gbc.readMem(0xaf85));
        // CB 9E 039B
        gbc.setState(0x7a58, 0x7316, 0xe6a0, 0x8ff7, 0x9305, 0x906c, 0x1, 0x1);
        gbc.writeMem(0x7a58, { 0xcb, 0x9e });
        gbc.writeMem(0x906c, { 0x84 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7316, gbc.sp());
        EXPECT(0x7a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x906c));
        // CB 9E 039C
        gbc.setState(0xc693, 0x3f1f, 0x2f40, 0xa7a8, 0x3eff, 0x2c47, 0x0, 0x1);
        gbc.writeMem(0x2c47, { 0x82 });
        gbc.writeMem(0xc693, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3f1f, gbc.sp());
        EXPECT(0xc695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc693));
        EXPECT(0x9e, gbc.readMem(0xc694));
        // CB 9E 039D
        gbc.setState(0xab27, 0x34a9, 0xc5e0, 0x6834, 0x62b1, 0x17f3, 0x0, 0x1);
        gbc.writeMem(0x17f3, { 0x41 });
        gbc.writeMem(0xab27, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x34a9, gbc.sp());
        EXPECT(0xab29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab27));
        EXPECT(0x9e, gbc.readMem(0xab28));
        // CB 9E 039E
        gbc.setState(0x9f19, 0xabda, 0x96b0, 0x7e71, 0x2040, 0x9cf8, 0x0, 0x1);
        gbc.writeMem(0x9cf8, { 0x5f });
        gbc.writeMem(0x9f19, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xabda, gbc.sp());
        EXPECT(0x9f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9cf8));
        EXPECT(0xcb, gbc.readMem(0x9f19));
        EXPECT(0x9e, gbc.readMem(0x9f1a));
        // CB 9E 039F
        gbc.setState(0xea35, 0x7336, 0x73c0, 0xce08, 0xebc4, 0xcf13, 0x1, 0x0);
        gbc.writeMem(0xcf13, { 0x34 });
        gbc.writeMem(0xea35, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7336, gbc.sp());
        EXPECT(0xea37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xcf13));
        EXPECT(0xcb, gbc.readMem(0xea35));
        EXPECT(0x9e, gbc.readMem(0xea36));
        // CB 9E 03A1
        gbc.setState(0xc39, 0x5e42, 0x3140, 0xb3c6, 0xc843, 0xa40, 0x0, 0x1);
        gbc.writeMem(0xa40, { 0x81 });
        gbc.writeMem(0xc39, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5e42, gbc.sp());
        EXPECT(0xc3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 03A2
        gbc.setState(0x9f4f, 0x5ef1, 0xcef0, 0xb1d2, 0x4025, 0x5454, 0x0, 0x1);
        gbc.writeMem(0x5454, { 0xf7 });
        gbc.writeMem(0x9f4f, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5ef1, gbc.sp());
        EXPECT(0x9f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4f));
        EXPECT(0x9e, gbc.readMem(0x9f50));
        // CB 9E 03A3
        gbc.setState(0x1dc5, 0xd7da, 0x730, 0x70e8, 0xa2f3, 0xf525, 0x1, 0x1);
        gbc.writeMem(0x1dc5, { 0xcb, 0x9e });
        gbc.writeMem(0xf525, { 0x23 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd7da, gbc.sp());
        EXPECT(0x1dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xf525));
        // CB 9E 03A4
        gbc.setState(0x7c5f, 0x85d5, 0x6650, 0x1292, 0xbb32, 0xf1b4, 0x0, 0x0);
        gbc.writeMem(0x7c5f, { 0xcb, 0x9e });
        gbc.writeMem(0xf1b4, { 0xe6 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x85d5, gbc.sp());
        EXPECT(0x7c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xf1b4));
        // CB 9E 03A5
        gbc.setState(0x4b24, 0xd51e, 0xb3a0, 0xc315, 0x93ff, 0xb7cb, 0x1, 0x1);
        gbc.writeMem(0x4b24, { 0xcb, 0x9e });
        gbc.writeMem(0xb7cb, { 0x93 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd51e, gbc.sp());
        EXPECT(0x4b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb7cb));
        // CB 9E 03A7
        gbc.setState(0x329e, 0xdd31, 0xd8e0, 0x325e, 0x1b1b, 0xd791, 0x1, 0x0);
        gbc.writeMem(0x329e, { 0xcb, 0x9e });
        gbc.writeMem(0xd791, { 0xa7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdd31, gbc.sp());
        EXPECT(0x32a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd791));
        // CB 9E 03AB
        gbc.setState(0xa812, 0x21d8, 0xcdf0, 0x9ab2, 0xb3b9, 0x89c9, 0x1, 0x0);
        gbc.writeMem(0x89c9, { 0x48 });
        gbc.writeMem(0xa812, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x21d8, gbc.sp());
        EXPECT(0xa814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x89c9));
        EXPECT(0xcb, gbc.readMem(0xa812));
        EXPECT(0x9e, gbc.readMem(0xa813));
        // CB 9E 03AC
        gbc.setState(0x97dd, 0x380a, 0x3be0, 0xc457, 0x35d0, 0x23cc, 0x1, 0x0);
        gbc.writeMem(0x23cc, { 0x95 });
        gbc.writeMem(0x97dd, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x380a, gbc.sp());
        EXPECT(0x97df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97dd));
        EXPECT(0x9e, gbc.readMem(0x97de));
        // CB 9E 03AD
        gbc.setState(0x71, 0xfcca, 0x2c0, 0x167c, 0x6b85, 0xe827, 0x1, 0x0);
        gbc.writeMem(0x71, { 0xcb, 0x9e });
        gbc.writeMem(0xe827, { 0x44 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfcca, gbc.sp());
        EXPECT(0x73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe827));
        // CB 9E 03AE
        gbc.setState(0x5944, 0x5bf4, 0x6010, 0x186a, 0x5f52, 0xe4bb, 0x1, 0x1);
        gbc.writeMem(0x5944, { 0xcb, 0x9e });
        gbc.writeMem(0xe4bb, { 0x3b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5bf4, gbc.sp());
        EXPECT(0x5946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe4bb));
        // CB 9E 03B0
        gbc.setState(0x3ec8, 0x5571, 0xbb40, 0x5b91, 0x8291, 0xca4f, 0x1, 0x1);
        gbc.writeMem(0x3ec8, { 0xcb, 0x9e });
        gbc.writeMem(0xca4f, { 0xc6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5571, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xca4f));
        // CB 9E 03B1
        gbc.setState(0x1c9, 0x4693, 0xf0a0, 0x3c3b, 0xe275, 0xe538, 0x0, 0x1);
        gbc.writeMem(0x1c9, { 0xcb, 0x9e });
        gbc.writeMem(0xe538, { 0x35 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4693, gbc.sp());
        EXPECT(0x1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe538));
        // CB 9E 03B3
        gbc.setState(0x61da, 0xaa31, 0x20e0, 0x55a, 0x5b06, 0xf394, 0x0, 0x0);
        gbc.writeMem(0x61da, { 0xcb, 0x9e });
        gbc.writeMem(0xf394, { 0xa5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaa31, gbc.sp());
        EXPECT(0x61dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xf394));
        // CB 9E 03B5
        gbc.setState(0x6fbf, 0x2dc2, 0xd750, 0x8394, 0xd72a, 0xc7c1, 0x1, 0x0);
        gbc.writeMem(0x6fbf, { 0xcb, 0x9e });
        gbc.writeMem(0xc7c1, { 0xa3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2dc2, gbc.sp());
        EXPECT(0x6fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc7c1));
        // CB 9E 03B8
        gbc.setState(0xe0ec, 0x2415, 0x71e0, 0x1092, 0x574e, 0x5462, 0x1, 0x0);
        gbc.writeMem(0x5462, { 0x27 });
        gbc.writeMem(0xe0ec, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2415, gbc.sp());
        EXPECT(0xe0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ec));
        EXPECT(0x9e, gbc.readMem(0xe0ed));
        // CB 9E 03B9
        gbc.setState(0x1ee5, 0x79c6, 0xc480, 0x38f1, 0x4068, 0xb1a8, 0x1, 0x0);
        gbc.writeMem(0x1ee5, { 0xcb, 0x9e });
        gbc.writeMem(0xb1a8, { 0x6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x79c6, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb1a8));
        // CB 9E 03BA
        gbc.setState(0x7001, 0x7b8, 0xb40, 0x19d, 0xdbaf, 0x749c, 0x0, 0x1);
        gbc.writeMem(0x7001, { 0xcb, 0x9e });
        gbc.writeMem(0x749c, { 0xe0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7b8, gbc.sp());
        EXPECT(0x7003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 03BC
        gbc.setState(0x3219, 0xca7d, 0xcdf0, 0xac7b, 0xefb0, 0xcbed, 0x1, 0x1);
        gbc.writeMem(0x3219, { 0xcb, 0x9e });
        gbc.writeMem(0xcbed, { 0x8b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xca7d, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xcbed));
        // CB 9E 03BD
        gbc.setState(0xd92d, 0x360f, 0xb4c0, 0x4ea, 0x69c5, 0x5895, 0x0, 0x0);
        gbc.writeMem(0x5895, { 0x16 });
        gbc.writeMem(0xd92d, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x360f, gbc.sp());
        EXPECT(0xd92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92d));
        EXPECT(0x9e, gbc.readMem(0xd92e));
        // CB 9E 03BE
        gbc.setState(0x2e1d, 0xcf83, 0x1880, 0x7634, 0xeac, 0x981e, 0x0, 0x0);
        gbc.writeMem(0x2e1d, { 0xcb, 0x9e });
        gbc.writeMem(0x981e, { 0x56 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcf83, gbc.sp());
        EXPECT(0x2e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x981e));
        // CB 9E 03BF
        gbc.setState(0xe4a7, 0x3d03, 0xd970, 0xb773, 0x61c7, 0xd75, 0x1, 0x1);
        gbc.writeMem(0xd75, { 0xe6 });
        gbc.writeMem(0xe4a7, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3d03, gbc.sp());
        EXPECT(0xe4a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a7));
        EXPECT(0x9e, gbc.readMem(0xe4a8));
        // CB 9E 03C1
        gbc.setState(0x6795, 0xce0a, 0xf190, 0xb86f, 0xc238, 0xbb6, 0x1, 0x1);
        gbc.writeMem(0xbb6, { 0x57 });
        gbc.writeMem(0x6795, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xce0a, gbc.sp());
        EXPECT(0x6797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 03C2
        gbc.setState(0x3999, 0x4ac3, 0x1720, 0x5033, 0xb11b, 0x22c7, 0x0, 0x1);
        gbc.writeMem(0x22c7, { 0x55 });
        gbc.writeMem(0x3999, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4ac3, gbc.sp());
        EXPECT(0x399b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 03C3
        gbc.setState(0x1a2c, 0xff64, 0x7fb0, 0x2ea0, 0x4982, 0xc9a0, 0x1, 0x1);
        gbc.writeMem(0x1a2c, { 0xcb, 0x9e });
        gbc.writeMem(0xc9a0, { 0xdd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xff64, gbc.sp());
        EXPECT(0x1a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc9a0));
        // CB 9E 03C4
        gbc.setState(0xe19, 0x9a04, 0xc580, 0x37b7, 0x5f12, 0x9b99, 0x1, 0x1);
        gbc.writeMem(0xe19, { 0xcb, 0x9e });
        gbc.writeMem(0x9b99, { 0xc8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9a04, gbc.sp());
        EXPECT(0xe1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9b99));
        // CB 9E 03C7
        gbc.setState(0xd69a, 0xc879, 0x92a0, 0x8b6a, 0x7bd9, 0x1988, 0x1, 0x1);
        gbc.writeMem(0x1988, { 0x24 });
        gbc.writeMem(0xd69a, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc879, gbc.sp());
        EXPECT(0xd69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69a));
        EXPECT(0x9e, gbc.readMem(0xd69b));
        // CB 9E 03C9
        gbc.setState(0x1ff7, 0xca9c, 0x5ef0, 0x3b64, 0xa80c, 0xb394, 0x0, 0x1);
        gbc.writeMem(0x1ff7, { 0xcb, 0x9e });
        gbc.writeMem(0xb394, { 0xd6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xca9c, gbc.sp());
        EXPECT(0x1ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb394));
        // CB 9E 03CB
        gbc.setState(0x6544, 0x9358, 0x6b90, 0x60f, 0x71ba, 0x8a93, 0x1, 0x1);
        gbc.writeMem(0x6544, { 0xcb, 0x9e });
        gbc.writeMem(0x8a93, { 0x54 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9358, gbc.sp());
        EXPECT(0x6546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x8a93));
        // CB 9E 03CC
        gbc.setState(0x4d7c, 0x93cc, 0x7e0, 0x7786, 0xf8aa, 0xa2fd, 0x1, 0x0);
        gbc.writeMem(0x4d7c, { 0xcb, 0x9e });
        gbc.writeMem(0xa2fd, { 0x44 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x93cc, gbc.sp());
        EXPECT(0x4d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa2fd));
        // CB 9E 03CE
        gbc.setState(0x6623, 0xc718, 0xdf40, 0x29ea, 0x1081, 0x767e, 0x1, 0x1);
        gbc.writeMem(0x6623, { 0xcb, 0x9e });
        gbc.writeMem(0x767e, { 0x91 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc718, gbc.sp());
        EXPECT(0x6625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 03D0
        gbc.setState(0x43c7, 0x9aad, 0x8320, 0xe7d8, 0x32d6, 0x78ae, 0x0, 0x1);
        gbc.writeMem(0x43c7, { 0xcb, 0x9e });
        gbc.writeMem(0x78ae, { 0xd3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9aad, gbc.sp());
        EXPECT(0x43c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 03D1
        gbc.setState(0x3a14, 0xcf6b, 0xa560, 0x7a49, 0xb3e9, 0xb5eb, 0x0, 0x0);
        gbc.writeMem(0x3a14, { 0xcb, 0x9e });
        gbc.writeMem(0xb5eb, { 0x73 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcf6b, gbc.sp());
        EXPECT(0x3a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb5eb));
        // CB 9E 03D2
        gbc.setState(0x4870, 0x6764, 0xae50, 0xbf11, 0xa38f, 0xb63c, 0x0, 0x0);
        gbc.writeMem(0x4870, { 0xcb, 0x9e });
        gbc.writeMem(0xb63c, { 0x6a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6764, gbc.sp());
        EXPECT(0x4872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb63c));
        // CB 9E 03D5
        gbc.setState(0x5e98, 0xe1c, 0x35f0, 0x3a1f, 0x1eb0, 0xa1cc, 0x0, 0x1);
        gbc.writeMem(0x5e98, { 0xcb, 0x9e });
        gbc.writeMem(0xa1cc, { 0xd5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe1c, gbc.sp());
        EXPECT(0x5e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa1cc));
        // CB 9E 03D7
        gbc.setState(0xb2f8, 0x12c0, 0xad80, 0x3afa, 0x678c, 0x19ca, 0x1, 0x1);
        gbc.writeMem(0x19ca, { 0xc1 });
        gbc.writeMem(0xb2f8, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x12c0, gbc.sp());
        EXPECT(0xb2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f8));
        EXPECT(0x9e, gbc.readMem(0xb2f9));
        // CB 9E 03D9
        gbc.setState(0x1ba0, 0xa3d, 0xb9d0, 0xd682, 0x4927, 0xaae, 0x0, 0x0);
        gbc.writeMem(0xaae, { 0xc0 });
        gbc.writeMem(0x1ba0, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa3d, gbc.sp());
        EXPECT(0x1ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 03DA
        gbc.setState(0x9884, 0xa51b, 0xfa50, 0xbaa0, 0x7afc, 0xb8f4, 0x0, 0x1);
        gbc.writeMem(0x9884, { 0xcb, 0x9e });
        gbc.writeMem(0xb8f4, { 0x9a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa51b, gbc.sp());
        EXPECT(0x9886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9884));
        EXPECT(0x9e, gbc.readMem(0x9885));
        EXPECT(0x92, gbc.readMem(0xb8f4));
        // CB 9E 03DB
        gbc.setState(0x83c7, 0x7bb2, 0xa8b0, 0x3f49, 0xb653, 0x8082, 0x1, 0x1);
        gbc.writeMem(0x8082, { 0xc4 });
        gbc.writeMem(0x83c7, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7bb2, gbc.sp());
        EXPECT(0x83c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8082));
        EXPECT(0xcb, gbc.readMem(0x83c7));
        EXPECT(0x9e, gbc.readMem(0x83c8));
        // CB 9E 03DE
        gbc.setState(0x4971, 0x2f68, 0xc8c0, 0xee6c, 0xc341, 0x5ff5, 0x1, 0x1);
        gbc.writeMem(0x4971, { 0xcb, 0x9e });
        gbc.writeMem(0x5ff5, { 0x71 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2f68, gbc.sp());
        EXPECT(0x4973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 03DF
        gbc.setState(0xa2a2, 0x93c2, 0xed50, 0xb31f, 0x35ce, 0xdd9a, 0x0, 0x0);
        gbc.writeMem(0xa2a2, { 0xcb, 0x9e });
        gbc.writeMem(0xdd9a, { 0x9c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x93c2, gbc.sp());
        EXPECT(0xa2a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a2));
        EXPECT(0x9e, gbc.readMem(0xa2a3));
        EXPECT(0x94, gbc.readMem(0xdd9a));
        // CB 9E 03E1
        gbc.setState(0x25f3, 0x7db0, 0x6bf0, 0x3f13, 0x3551, 0x9d2d, 0x1, 0x0);
        gbc.writeMem(0x25f3, { 0xcb, 0x9e });
        gbc.writeMem(0x9d2d, { 0xf4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7db0, gbc.sp());
        EXPECT(0x25f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9d2d));
        // CB 9E 03E2
        gbc.setState(0x1b8e, 0x27f0, 0xcb70, 0x6d74, 0x128, 0x567b, 0x1, 0x0);
        gbc.writeMem(0x1b8e, { 0xcb, 0x9e });
        gbc.writeMem(0x567b, { 0xe7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x27f0, gbc.sp());
        EXPECT(0x1b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9E 03E4
        gbc.setState(0xcd78, 0xc2ce, 0x6170, 0xbdee, 0x1516, 0xf86b, 0x1, 0x1);
        gbc.writeMem(0xcd78, { 0xcb, 0x9e });
        gbc.writeMem(0xf86b, { 0xbe });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc2ce, gbc.sp());
        EXPECT(0xcd7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd78));
        EXPECT(0x9e, gbc.readMem(0xcd79));
        EXPECT(0xb6, gbc.readMem(0xf86b));
        // CB 9E 03E5
        gbc.setState(0xbba1, 0x389d, 0x4770, 0x1d58, 0x822, 0xd999, 0x1, 0x1);
        gbc.writeMem(0xbba1, { 0xcb, 0x9e });
        gbc.writeMem(0xd999, { 0xfc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x389d, gbc.sp());
        EXPECT(0xbba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba1));
        EXPECT(0x9e, gbc.readMem(0xbba2));
        EXPECT(0xf4, gbc.readMem(0xd999));
        // CB 9E 03E6
        gbc.setState(0x482e, 0xc7b5, 0x8ac0, 0x29e1, 0xfb4, 0x3e62, 0x1, 0x1);
        gbc.writeMem(0x3e62, { 0x10 });
        gbc.writeMem(0x482e, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc7b5, gbc.sp());
        EXPECT(0x4830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9E 03E7
        gbc.setState(0xccfc, 0x8360, 0x4610, 0x5d12, 0x2508, 0x8526, 0x0, 0x0);
        gbc.writeMem(0x8526, { 0x44 });
        gbc.writeMem(0xccfc, { 0xcb, 0x9e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8360, gbc.sp());
        EXPECT(0xccfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8526));
        EXPECT(0xcb, gbc.readMem(0xccfc));
        EXPECT(0x9e, gbc.readMem(0xccfd));
    }
