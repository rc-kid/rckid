    TEST(gbcemu, opcode_cb_5d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 5D 0000
        gbc.setState(0x1493, 0xdaee, 0x3f30, 0x1dd3, 0xc2c6, 0xbaeb, 0x1, 0x0);
        gbc.writeMem(0x1493, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdaee, gbc.sp());
        EXPECT(0x1495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0001
        gbc.setState(0x90e3, 0x1d4b, 0xdb60, 0xa3de, 0xa03b, 0xbc15, 0x0, 0x0);
        gbc.writeMem(0x90e3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1d4b, gbc.sp());
        EXPECT(0x90e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e3));
        EXPECT(0x5d, gbc.readMem(0x90e4));
        // CB 5D 0002
        gbc.setState(0xafa, 0xfb2a, 0xba10, 0xec24, 0x5005, 0x9832, 0x1, 0x0);
        gbc.writeMem(0xafa, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfb2a, gbc.sp());
        EXPECT(0xafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0003
        gbc.setState(0xc038, 0xbd72, 0x11b0, 0xc10, 0xb953, 0x57b1, 0x1, 0x1);
        gbc.writeMem(0xc038, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbd72, gbc.sp());
        EXPECT(0xc03a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc038));
        EXPECT(0x5d, gbc.readMem(0xc039));
        // CB 5D 0004
        gbc.setState(0xd19e, 0x41f6, 0xf70, 0xd6b7, 0xa7f5, 0xb78b, 0x1, 0x1);
        gbc.writeMem(0xd19e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x41f6, gbc.sp());
        EXPECT(0xd1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19e));
        EXPECT(0x5d, gbc.readMem(0xd19f));
        // CB 5D 0005
        gbc.setState(0x97e7, 0xa372, 0x7530, 0xf4b3, 0xa031, 0xcda2, 0x1, 0x1);
        gbc.writeMem(0x97e7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa372, gbc.sp());
        EXPECT(0x97e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e7));
        EXPECT(0x5d, gbc.readMem(0x97e8));
        // CB 5D 0006
        gbc.setState(0xb402, 0x373c, 0xc7b0, 0x40cc, 0x64e5, 0x6c90, 0x0, 0x0);
        gbc.writeMem(0xb402, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x373c, gbc.sp());
        EXPECT(0xb404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb402));
        EXPECT(0x5d, gbc.readMem(0xb403));
        // CB 5D 0007
        gbc.setState(0x7e1a, 0x202f, 0xf3a0, 0x2124, 0x6308, 0x7f9a, 0x1, 0x0);
        gbc.writeMem(0x7e1a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x202f, gbc.sp());
        EXPECT(0x7e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0008
        gbc.setState(0x18e7, 0xc56a, 0x3cb0, 0x1ee5, 0x9448, 0x8d9f, 0x1, 0x0);
        gbc.writeMem(0x18e7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc56a, gbc.sp());
        EXPECT(0x18e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0009
        gbc.setState(0xe51f, 0x3825, 0x7790, 0xefcb, 0xa758, 0x28b9, 0x1, 0x1);
        gbc.writeMem(0xe51f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3825, gbc.sp());
        EXPECT(0xe521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51f));
        EXPECT(0x5d, gbc.readMem(0xe520));
        // CB 5D 000A
        gbc.setState(0x49ba, 0x909b, 0x8460, 0xe3c3, 0x863d, 0xc56e, 0x1, 0x0);
        gbc.writeMem(0x49ba, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x909b, gbc.sp());
        EXPECT(0x49bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 000B
        gbc.setState(0xa025, 0xf222, 0x84f0, 0xe674, 0x4570, 0xd8e7, 0x0, 0x0);
        gbc.writeMem(0xa025, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf222, gbc.sp());
        EXPECT(0xa027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa025));
        EXPECT(0x5d, gbc.readMem(0xa026));
        // CB 5D 000C
        gbc.setState(0xeacc, 0x3a31, 0xcc10, 0xefc3, 0x3efb, 0x65cd, 0x1, 0x1);
        gbc.writeMem(0xeacc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3a31, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacc));
        EXPECT(0x5d, gbc.readMem(0xeacd));
        // CB 5D 000D
        gbc.setState(0x933c, 0x7fb0, 0xbf00, 0xfeec, 0x376e, 0x884a, 0x0, 0x1);
        gbc.writeMem(0x933c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7fb0, gbc.sp());
        EXPECT(0x933e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933c));
        EXPECT(0x5d, gbc.readMem(0x933d));
        // CB 5D 000E
        gbc.setState(0x7f2, 0xf534, 0xde30, 0xea51, 0x94d4, 0x5306, 0x0, 0x1);
        gbc.writeMem(0x7f2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf534, gbc.sp());
        EXPECT(0x7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 000F
        gbc.setState(0x1d8f, 0xd6b7, 0x2210, 0x2ea0, 0xdd97, 0xc3f4, 0x0, 0x0);
        gbc.writeMem(0x1d8f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd6b7, gbc.sp());
        EXPECT(0x1d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0010
        gbc.setState(0x25ec, 0xfc18, 0xd830, 0xddbb, 0x3fac, 0xe425, 0x1, 0x1);
        gbc.writeMem(0x25ec, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfc18, gbc.sp());
        EXPECT(0x25ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0011
        gbc.setState(0xe57e, 0x363c, 0xa90, 0xb1b7, 0x8487, 0x9f45, 0x0, 0x0);
        gbc.writeMem(0xe57e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x363c, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57e));
        EXPECT(0x5d, gbc.readMem(0xe57f));
        // CB 5D 0012
        gbc.setState(0xed2b, 0xb8a5, 0x4ee0, 0x936f, 0x3c1d, 0x9c28, 0x1, 0x0);
        gbc.writeMem(0xed2b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb8a5, gbc.sp());
        EXPECT(0xed2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2b));
        EXPECT(0x5d, gbc.readMem(0xed2c));
        // CB 5D 0013
        gbc.setState(0x7181, 0xf156, 0xe8c0, 0xb5fd, 0xf14b, 0x6781, 0x1, 0x0);
        gbc.writeMem(0x7181, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf156, gbc.sp());
        EXPECT(0x7183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0014
        gbc.setState(0x681b, 0xa28e, 0x5bc0, 0x8277, 0x4da0, 0x95f5, 0x0, 0x0);
        gbc.writeMem(0x681b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa28e, gbc.sp());
        EXPECT(0x681d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0015
        gbc.setState(0x73d9, 0x95bb, 0xd9a0, 0x5623, 0xf187, 0x97f7, 0x0, 0x0);
        gbc.writeMem(0x73d9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x95bb, gbc.sp());
        EXPECT(0x73db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0017
        gbc.setState(0x7181, 0xcfae, 0x31e0, 0x5392, 0x38ca, 0x27bb, 0x0, 0x1);
        gbc.writeMem(0x7181, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcfae, gbc.sp());
        EXPECT(0x7183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0018
        gbc.setState(0xeec1, 0x79d0, 0xb550, 0x1d49, 0x60e1, 0xa7b7, 0x1, 0x1);
        gbc.writeMem(0xeec1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x79d0, gbc.sp());
        EXPECT(0xeec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec1));
        EXPECT(0x5d, gbc.readMem(0xeec2));
        // CB 5D 0019
        gbc.setState(0x75f9, 0xca53, 0x5300, 0xdb9e, 0x8161, 0xc3c8, 0x0, 0x1);
        gbc.writeMem(0x75f9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xca53, gbc.sp());
        EXPECT(0x75fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 001A
        gbc.setState(0xeaa5, 0xd2d7, 0x93c0, 0x7a77, 0x9370, 0x1eae, 0x0, 0x0);
        gbc.writeMem(0xeaa5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd2d7, gbc.sp());
        EXPECT(0xeaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa5));
        EXPECT(0x5d, gbc.readMem(0xeaa6));
        // CB 5D 001B
        gbc.setState(0x15c5, 0x7fb9, 0x1490, 0x8f80, 0xe8ca, 0x3ebb, 0x0, 0x0);
        gbc.writeMem(0x15c5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7fb9, gbc.sp());
        EXPECT(0x15c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 001C
        gbc.setState(0xd897, 0x7722, 0xf490, 0xb6c, 0x76d9, 0xda51, 0x0, 0x0);
        gbc.writeMem(0xd897, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7722, gbc.sp());
        EXPECT(0xd899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd897));
        EXPECT(0x5d, gbc.readMem(0xd898));
        // CB 5D 001D
        gbc.setState(0x4d92, 0x3935, 0x6270, 0x5ed3, 0x546c, 0xdd03, 0x1, 0x0);
        gbc.writeMem(0x4d92, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3935, gbc.sp());
        EXPECT(0x4d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 001E
        gbc.setState(0x829, 0xe814, 0xa570, 0xc0a6, 0xe909, 0x98f8, 0x1, 0x0);
        gbc.writeMem(0x829, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe814, gbc.sp());
        EXPECT(0x82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 001F
        gbc.setState(0x4c21, 0xc049, 0xa120, 0xd4b6, 0x66ad, 0x63, 0x1, 0x0);
        gbc.writeMem(0x4c21, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc049, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0020
        gbc.setState(0x99db, 0x3110, 0xc610, 0x2b9d, 0xeee8, 0xc38, 0x0, 0x0);
        gbc.writeMem(0x99db, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3110, gbc.sp());
        EXPECT(0x99dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99db));
        EXPECT(0x5d, gbc.readMem(0x99dc));
        // CB 5D 0021
        gbc.setState(0x62db, 0x5454, 0xe2b0, 0x6534, 0x9150, 0x564e, 0x0, 0x0);
        gbc.writeMem(0x62db, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5454, gbc.sp());
        EXPECT(0x62dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0022
        gbc.setState(0x3745, 0xca6e, 0x7f80, 0xc76a, 0x3d42, 0x5791, 0x1, 0x0);
        gbc.writeMem(0x3745, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xca6e, gbc.sp());
        EXPECT(0x3747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0023
        gbc.setState(0x3a18, 0x27b6, 0x3f90, 0xffe4, 0xba98, 0xf722, 0x0, 0x1);
        gbc.writeMem(0x3a18, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x27b6, gbc.sp());
        EXPECT(0x3a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0025
        gbc.setState(0x1485, 0x763f, 0x8d30, 0xebb3, 0x72c, 0x6b79, 0x1, 0x1);
        gbc.writeMem(0x1485, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x763f, gbc.sp());
        EXPECT(0x1487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0026
        gbc.setState(0xa95e, 0x3688, 0x2200, 0xed61, 0x57fb, 0x3687, 0x0, 0x0);
        gbc.writeMem(0xa95e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3688, gbc.sp());
        EXPECT(0xa960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95e));
        EXPECT(0x5d, gbc.readMem(0xa95f));
        // CB 5D 0027
        gbc.setState(0x3848, 0xce85, 0x7bb0, 0xc, 0x434, 0xc8d, 0x0, 0x0);
        gbc.writeMem(0x3848, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xce85, gbc.sp());
        EXPECT(0x384a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0028
        gbc.setState(0xd89, 0xb946, 0x27b0, 0x8c39, 0x1739, 0x4a9e, 0x1, 0x0);
        gbc.writeMem(0xd89, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb946, gbc.sp());
        EXPECT(0xd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 002A
        gbc.setState(0xaa7a, 0x3cbf, 0x2ed0, 0x6c05, 0x1ff0, 0x3e36, 0x0, 0x0);
        gbc.writeMem(0xaa7a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3cbf, gbc.sp());
        EXPECT(0xaa7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7a));
        EXPECT(0x5d, gbc.readMem(0xaa7b));
        // CB 5D 002B
        gbc.setState(0xf55, 0x24d3, 0xeaf0, 0xd32c, 0xa368, 0xf21f, 0x0, 0x1);
        gbc.writeMem(0xf55, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x24d3, gbc.sp());
        EXPECT(0xf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 002C
        gbc.setState(0x77a3, 0x5584, 0x84d0, 0xdaad, 0xd1bf, 0x45a6, 0x1, 0x1);
        gbc.writeMem(0x77a3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5584, gbc.sp());
        EXPECT(0x77a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 002D
        gbc.setState(0xde55, 0x3cbe, 0x2020, 0x3f0c, 0xffa0, 0x83c5, 0x1, 0x0);
        gbc.writeMem(0xde55, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3cbe, gbc.sp());
        EXPECT(0xde57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde55));
        EXPECT(0x5d, gbc.readMem(0xde56));
        // CB 5D 002E
        gbc.setState(0x8b54, 0x5cb, 0xa350, 0x5741, 0x48ae, 0x26f6, 0x1, 0x1);
        gbc.writeMem(0x8b54, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5cb, gbc.sp());
        EXPECT(0x8b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b54));
        EXPECT(0x5d, gbc.readMem(0x8b55));
        // CB 5D 002F
        gbc.setState(0xdc00, 0xbb41, 0x2b20, 0x5e9e, 0x684c, 0x30f6, 0x1, 0x1);
        gbc.writeMem(0xdc00, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbb41, gbc.sp());
        EXPECT(0xdc02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc00));
        EXPECT(0x5d, gbc.readMem(0xdc01));
        // CB 5D 0030
        gbc.setState(0x52bc, 0x1ca4, 0x5ff0, 0x991f, 0x3304, 0xc6b2, 0x1, 0x1);
        gbc.writeMem(0x52bc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1ca4, gbc.sp());
        EXPECT(0x52be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0031
        gbc.setState(0xdb3d, 0xff47, 0x9ee0, 0x9197, 0x89df, 0xa3f5, 0x1, 0x1);
        gbc.writeMem(0xdb3d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xff47, gbc.sp());
        EXPECT(0xdb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3d));
        EXPECT(0x5d, gbc.readMem(0xdb3e));
        // CB 5D 0032
        gbc.setState(0x9bc2, 0x165, 0x5c60, 0x1a6c, 0x273a, 0x3e2f, 0x1, 0x1);
        gbc.writeMem(0x9bc2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x165, gbc.sp());
        EXPECT(0x9bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc2));
        EXPECT(0x5d, gbc.readMem(0x9bc3));
        // CB 5D 0033
        gbc.setState(0xe3ea, 0xde25, 0x31a0, 0x1a69, 0x3d8b, 0x524d, 0x0, 0x0);
        gbc.writeMem(0xe3ea, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xde25, gbc.sp());
        EXPECT(0xe3ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ea));
        EXPECT(0x5d, gbc.readMem(0xe3eb));
        // CB 5D 0034
        gbc.setState(0xcf45, 0xedeb, 0xa810, 0xd23f, 0x4a2, 0x114d, 0x0, 0x0);
        gbc.writeMem(0xcf45, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xedeb, gbc.sp());
        EXPECT(0xcf47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf45));
        EXPECT(0x5d, gbc.readMem(0xcf46));
        // CB 5D 0035
        gbc.setState(0x56fb, 0xf04d, 0xc370, 0x37b4, 0x4a5, 0x605c, 0x0, 0x0);
        gbc.writeMem(0x56fb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf04d, gbc.sp());
        EXPECT(0x56fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0036
        gbc.setState(0xba21, 0xd575, 0x4ea0, 0x7955, 0x45d8, 0xdf89, 0x1, 0x1);
        gbc.writeMem(0xba21, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd575, gbc.sp());
        EXPECT(0xba23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba21));
        EXPECT(0x5d, gbc.readMem(0xba22));
        // CB 5D 0037
        gbc.setState(0xe61a, 0xe7b9, 0xb3a0, 0xcd40, 0x7b32, 0xaafc, 0x0, 0x0);
        gbc.writeMem(0xe61a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe7b9, gbc.sp());
        EXPECT(0xe61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61a));
        EXPECT(0x5d, gbc.readMem(0xe61b));
        // CB 5D 0038
        gbc.setState(0x3299, 0xb94f, 0x6630, 0x59e3, 0xdebc, 0x23c3, 0x1, 0x0);
        gbc.writeMem(0x3299, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb94f, gbc.sp());
        EXPECT(0x329b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0039
        gbc.setState(0xbffb, 0x8ecc, 0x2ed0, 0xfdd8, 0x147f, 0x6ec5, 0x0, 0x0);
        gbc.writeMem(0xbffb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8ecc, gbc.sp());
        EXPECT(0xbffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffb));
        EXPECT(0x5d, gbc.readMem(0xbffc));
        // CB 5D 003A
        gbc.setState(0xafe7, 0x5551, 0x6cb0, 0xdac5, 0x5cdb, 0x7d82, 0x0, 0x1);
        gbc.writeMem(0xafe7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5551, gbc.sp());
        EXPECT(0xafe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe7));
        EXPECT(0x5d, gbc.readMem(0xafe8));
        // CB 5D 003B
        gbc.setState(0x8639, 0xdc2a, 0x6f00, 0x912f, 0x4340, 0x9e29, 0x0, 0x1);
        gbc.writeMem(0x8639, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdc2a, gbc.sp());
        EXPECT(0x863b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8639));
        EXPECT(0x5d, gbc.readMem(0x863a));
        // CB 5D 003C
        gbc.setState(0x67f8, 0xc36f, 0x4750, 0xcf2a, 0x3de8, 0x57a, 0x1, 0x1);
        gbc.writeMem(0x67f8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc36f, gbc.sp());
        EXPECT(0x67fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 003D
        gbc.setState(0x43a6, 0x865a, 0xd310, 0x553f, 0xa5c0, 0xb882, 0x1, 0x1);
        gbc.writeMem(0x43a6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x865a, gbc.sp());
        EXPECT(0x43a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 003E
        gbc.setState(0xac20, 0xed43, 0x50, 0x6673, 0x61b0, 0xcf66, 0x1, 0x0);
        gbc.writeMem(0xac20, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xed43, gbc.sp());
        EXPECT(0xac22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac20));
        EXPECT(0x5d, gbc.readMem(0xac21));
        // CB 5D 003F
        gbc.setState(0xd18a, 0xdbe7, 0x93f0, 0xcec3, 0xd2ab, 0x5331, 0x0, 0x1);
        gbc.writeMem(0xd18a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdbe7, gbc.sp());
        EXPECT(0xd18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18a));
        EXPECT(0x5d, gbc.readMem(0xd18b));
        // CB 5D 0040
        gbc.setState(0x82a5, 0xc296, 0x2a50, 0x6cda, 0xd967, 0x4b59, 0x0, 0x0);
        gbc.writeMem(0x82a5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc296, gbc.sp());
        EXPECT(0x82a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a5));
        EXPECT(0x5d, gbc.readMem(0x82a6));
        // CB 5D 0041
        gbc.setState(0xded9, 0x88d7, 0xceb0, 0xeaa1, 0x73bb, 0xb193, 0x1, 0x1);
        gbc.writeMem(0xded9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x88d7, gbc.sp());
        EXPECT(0xdedb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded9));
        EXPECT(0x5d, gbc.readMem(0xdeda));
        // CB 5D 0042
        gbc.setState(0x7abe, 0xce06, 0xed00, 0x5033, 0x9fc, 0x7b37, 0x1, 0x1);
        gbc.writeMem(0x7abe, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xce06, gbc.sp());
        EXPECT(0x7ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0043
        gbc.setState(0xbecd, 0x1da1, 0x9140, 0x96a3, 0x16d6, 0xd67d, 0x0, 0x0);
        gbc.writeMem(0xbecd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1da1, gbc.sp());
        EXPECT(0xbecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecd));
        EXPECT(0x5d, gbc.readMem(0xbece));
        // CB 5D 0044
        gbc.setState(0x4391, 0xea3a, 0x35f0, 0x228b, 0xbcf7, 0xa597, 0x1, 0x0);
        gbc.writeMem(0x4391, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xea3a, gbc.sp());
        EXPECT(0x4393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0045
        gbc.setState(0x39de, 0xf4d8, 0xf800, 0x8194, 0x28ed, 0x1afa, 0x1, 0x1);
        gbc.writeMem(0x39de, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf4d8, gbc.sp());
        EXPECT(0x39e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0046
        gbc.setState(0xd18f, 0xe4eb, 0x85f0, 0xfa7a, 0x6316, 0x9424, 0x1, 0x0);
        gbc.writeMem(0xd18f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe4eb, gbc.sp());
        EXPECT(0xd191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18f));
        EXPECT(0x5d, gbc.readMem(0xd190));
        // CB 5D 0047
        gbc.setState(0x40af, 0xeeef, 0x85b0, 0xfac3, 0xede0, 0xcf08, 0x0, 0x0);
        gbc.writeMem(0x40af, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xeeef, gbc.sp());
        EXPECT(0x40b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0048
        gbc.setState(0xabde, 0x4ce4, 0x85f0, 0x6586, 0xa7b8, 0x9c3f, 0x0, 0x0);
        gbc.writeMem(0xabde, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4ce4, gbc.sp());
        EXPECT(0xabe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabde));
        EXPECT(0x5d, gbc.readMem(0xabdf));
        // CB 5D 0049
        gbc.setState(0x68bf, 0x10b2, 0x9cb0, 0xa9fc, 0x557a, 0x5568, 0x0, 0x0);
        gbc.writeMem(0x68bf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x10b2, gbc.sp());
        EXPECT(0x68c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 004A
        gbc.setState(0xbd30, 0x3987, 0xbc60, 0xf5ac, 0x8c95, 0x70bf, 0x0, 0x0);
        gbc.writeMem(0xbd30, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3987, gbc.sp());
        EXPECT(0xbd32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd30));
        EXPECT(0x5d, gbc.readMem(0xbd31));
        // CB 5D 004B
        gbc.setState(0xa183, 0xa305, 0xc9f0, 0xe205, 0xbf76, 0x880a, 0x1, 0x1);
        gbc.writeMem(0xa183, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa305, gbc.sp());
        EXPECT(0xa185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa183));
        EXPECT(0x5d, gbc.readMem(0xa184));
        // CB 5D 004D
        gbc.setState(0x1fc2, 0xe19f, 0x4ef0, 0x43ad, 0xa6a1, 0x5a48, 0x0, 0x1);
        gbc.writeMem(0x1fc2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe19f, gbc.sp());
        EXPECT(0x1fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 004E
        gbc.setState(0xc741, 0x1d88, 0x6600, 0xbc50, 0x7e60, 0xb390, 0x0, 0x0);
        gbc.writeMem(0xc741, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1d88, gbc.sp());
        EXPECT(0xc743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc741));
        EXPECT(0x5d, gbc.readMem(0xc742));
        // CB 5D 004F
        gbc.setState(0xa096, 0xafce, 0x5050, 0xcce5, 0xdd17, 0x1ece, 0x1, 0x1);
        gbc.writeMem(0xa096, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xafce, gbc.sp());
        EXPECT(0xa098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa096));
        EXPECT(0x5d, gbc.readMem(0xa097));
        // CB 5D 0050
        gbc.setState(0xe46d, 0xf7a9, 0xc650, 0x628e, 0x660, 0xca5e, 0x0, 0x0);
        gbc.writeMem(0xe46d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf7a9, gbc.sp());
        EXPECT(0xe46f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46d));
        EXPECT(0x5d, gbc.readMem(0xe46e));
        // CB 5D 0051
        gbc.setState(0xbf5e, 0x5898, 0xec00, 0xcbe7, 0xac2, 0xaedc, 0x1, 0x1);
        gbc.writeMem(0xbf5e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5898, gbc.sp());
        EXPECT(0xbf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5e));
        EXPECT(0x5d, gbc.readMem(0xbf5f));
        // CB 5D 0053
        gbc.setState(0xbbf3, 0xef39, 0x16e0, 0x62d4, 0x7d34, 0xdebb, 0x1, 0x0);
        gbc.writeMem(0xbbf3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xef39, gbc.sp());
        EXPECT(0xbbf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf3));
        EXPECT(0x5d, gbc.readMem(0xbbf4));
        // CB 5D 0055
        gbc.setState(0x61f6, 0x7e56, 0x7130, 0xa6e7, 0x64ce, 0x6923, 0x0, 0x1);
        gbc.writeMem(0x61f6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7e56, gbc.sp());
        EXPECT(0x61f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0056
        gbc.setState(0x7ab7, 0x221, 0x3c80, 0x2b80, 0xba56, 0x5cc7, 0x0, 0x0);
        gbc.writeMem(0x7ab7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x221, gbc.sp());
        EXPECT(0x7ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0057
        gbc.setState(0xb2aa, 0xc997, 0xf090, 0xa7c6, 0x6274, 0x8702, 0x0, 0x1);
        gbc.writeMem(0xb2aa, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc997, gbc.sp());
        EXPECT(0xb2ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2aa));
        EXPECT(0x5d, gbc.readMem(0xb2ab));
        // CB 5D 0058
        gbc.setState(0x2d5f, 0xffc8, 0x9750, 0xa37f, 0x8822, 0xef7b, 0x1, 0x0);
        gbc.writeMem(0x2d5f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xffc8, gbc.sp());
        EXPECT(0x2d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0059
        gbc.setState(0x6bb3, 0xd6a5, 0x57d0, 0x65da, 0xcf36, 0x3c5d, 0x1, 0x0);
        gbc.writeMem(0x6bb3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd6a5, gbc.sp());
        EXPECT(0x6bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 005A
        gbc.setState(0xefce, 0xd5a5, 0xa480, 0x8eef, 0xf8ac, 0x11ef, 0x0, 0x0);
        gbc.writeMem(0xefce, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd5a5, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefce));
        EXPECT(0x5d, gbc.readMem(0xefcf));
        // CB 5D 005B
        gbc.setState(0x5739, 0x1c26, 0x7190, 0x371c, 0xd967, 0x7157, 0x0, 0x1);
        gbc.writeMem(0x5739, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1c26, gbc.sp());
        EXPECT(0x573b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 005C
        gbc.setState(0x67ae, 0x9bd9, 0x1d30, 0x70ee, 0x98c8, 0x4fa6, 0x1, 0x0);
        gbc.writeMem(0x67ae, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9bd9, gbc.sp());
        EXPECT(0x67b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 005D
        gbc.setState(0x4579, 0x8d4b, 0x8540, 0xef2, 0x2d29, 0x1e63, 0x0, 0x1);
        gbc.writeMem(0x4579, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8d4b, gbc.sp());
        EXPECT(0x457b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 005E
        gbc.setState(0x3887, 0x2e2b, 0x4ab0, 0x91dc, 0x86c5, 0xdf65, 0x1, 0x1);
        gbc.writeMem(0x3887, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2e2b, gbc.sp());
        EXPECT(0x3889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 005F
        gbc.setState(0x84c2, 0x4239, 0xd070, 0xfae4, 0x611c, 0x54c2, 0x0, 0x0);
        gbc.writeMem(0x84c2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4239, gbc.sp());
        EXPECT(0x84c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c2));
        EXPECT(0x5d, gbc.readMem(0x84c3));
        // CB 5D 0060
        gbc.setState(0x680a, 0x14a8, 0xc380, 0xd1e8, 0x9f9d, 0x50d9, 0x0, 0x1);
        gbc.writeMem(0x680a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x14a8, gbc.sp());
        EXPECT(0x680c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0061
        gbc.setState(0xa704, 0xc7b0, 0xed0, 0xae3, 0xc8d1, 0xf1c1, 0x0, 0x0);
        gbc.writeMem(0xa704, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc7b0, gbc.sp());
        EXPECT(0xa706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa704));
        EXPECT(0x5d, gbc.readMem(0xa705));
        // CB 5D 0062
        gbc.setState(0xeb78, 0x7694, 0x7230, 0x52c8, 0x9c4c, 0xe32d, 0x1, 0x1);
        gbc.writeMem(0xeb78, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7694, gbc.sp());
        EXPECT(0xeb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb78));
        EXPECT(0x5d, gbc.readMem(0xeb79));
        // CB 5D 0063
        gbc.setState(0x6630, 0xad2d, 0xaab0, 0xdf75, 0x7ca1, 0x8e51, 0x0, 0x1);
        gbc.writeMem(0x6630, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xad2d, gbc.sp());
        EXPECT(0x6632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0064
        gbc.setState(0x6599, 0x4107, 0x98f0, 0x4157, 0xb439, 0x84eb, 0x0, 0x1);
        gbc.writeMem(0x6599, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4107, gbc.sp());
        EXPECT(0x659b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0065
        gbc.setState(0xcd88, 0xf139, 0xd270, 0xc0a4, 0x81d8, 0x6ac6, 0x1, 0x0);
        gbc.writeMem(0xcd88, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf139, gbc.sp());
        EXPECT(0xcd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd88));
        EXPECT(0x5d, gbc.readMem(0xcd89));
        // CB 5D 0066
        gbc.setState(0x70cc, 0xadd, 0xd70, 0xbea1, 0xb146, 0x1735, 0x1, 0x0);
        gbc.writeMem(0x70cc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xadd, gbc.sp());
        EXPECT(0x70ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0067
        gbc.setState(0x3d1a, 0x8a36, 0x120, 0xdb23, 0xe6e6, 0x4726, 0x1, 0x0);
        gbc.writeMem(0x3d1a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8a36, gbc.sp());
        EXPECT(0x3d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0068
        gbc.setState(0x99d4, 0x37c7, 0xc980, 0x38be, 0x2b41, 0x188, 0x0, 0x0);
        gbc.writeMem(0x99d4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x37c7, gbc.sp());
        EXPECT(0x99d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d4));
        EXPECT(0x5d, gbc.readMem(0x99d5));
        // CB 5D 0069
        gbc.setState(0x32c8, 0x4425, 0x3350, 0xcd0c, 0xac61, 0x82a3, 0x0, 0x1);
        gbc.writeMem(0x32c8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4425, gbc.sp());
        EXPECT(0x32ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 006A
        gbc.setState(0xd1f5, 0x4169, 0x4770, 0x1dbb, 0x263c, 0xe04c, 0x1, 0x0);
        gbc.writeMem(0xd1f5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4169, gbc.sp());
        EXPECT(0xd1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f5));
        EXPECT(0x5d, gbc.readMem(0xd1f6));
        // CB 5D 006B
        gbc.setState(0x6e1c, 0x48f5, 0xb6e0, 0x404e, 0x2301, 0xd860, 0x1, 0x1);
        gbc.writeMem(0x6e1c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x48f5, gbc.sp());
        EXPECT(0x6e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 006C
        gbc.setState(0x6ca3, 0x181, 0x4810, 0x4b2d, 0xfd52, 0x73e5, 0x1, 0x1);
        gbc.writeMem(0x6ca3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x181, gbc.sp());
        EXPECT(0x6ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 006D
        gbc.setState(0x39c0, 0xf966, 0xd090, 0x732b, 0x4fa7, 0x8c30, 0x0, 0x1);
        gbc.writeMem(0x39c0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf966, gbc.sp());
        EXPECT(0x39c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 006E
        gbc.setState(0x7992, 0x1830, 0xf450, 0x5544, 0x7ff2, 0xa1c9, 0x1, 0x1);
        gbc.writeMem(0x7992, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1830, gbc.sp());
        EXPECT(0x7994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 006F
        gbc.setState(0x8ea3, 0xea4c, 0x7770, 0xe50b, 0x23c2, 0xc467, 0x0, 0x1);
        gbc.writeMem(0x8ea3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xea4c, gbc.sp());
        EXPECT(0x8ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea3));
        EXPECT(0x5d, gbc.readMem(0x8ea4));
        // CB 5D 0070
        gbc.setState(0xc946, 0x9993, 0xefe0, 0x5939, 0xe4dc, 0xbbdd, 0x0, 0x0);
        gbc.writeMem(0xc946, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9993, gbc.sp());
        EXPECT(0xc948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc946));
        EXPECT(0x5d, gbc.readMem(0xc947));
        // CB 5D 0071
        gbc.setState(0x2cec, 0x7360, 0xab40, 0x359f, 0x5f9f, 0xe389, 0x0, 0x1);
        gbc.writeMem(0x2cec, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7360, gbc.sp());
        EXPECT(0x2cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0072
        gbc.setState(0xa74e, 0xa07, 0xe520, 0xb1bf, 0xd084, 0x8157, 0x0, 0x0);
        gbc.writeMem(0xa74e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa07, gbc.sp());
        EXPECT(0xa750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74e));
        EXPECT(0x5d, gbc.readMem(0xa74f));
        // CB 5D 0073
        gbc.setState(0x2a6b, 0xfdb, 0x3ff0, 0xf105, 0xa37d, 0xef36, 0x1, 0x1);
        gbc.writeMem(0x2a6b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfdb, gbc.sp());
        EXPECT(0x2a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0074
        gbc.setState(0x457f, 0xe4ff, 0xb60, 0x20e5, 0xffc3, 0xfc04, 0x0, 0x1);
        gbc.writeMem(0x457f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe4ff, gbc.sp());
        EXPECT(0x4581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0075
        gbc.setState(0x58ad, 0xbe25, 0x4790, 0xa44f, 0xb63e, 0xeff5, 0x1, 0x0);
        gbc.writeMem(0x58ad, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbe25, gbc.sp());
        EXPECT(0x58af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0076
        gbc.setState(0xe2ca, 0xff0d, 0x3020, 0x3aeb, 0xf050, 0xc73c, 0x0, 0x0);
        gbc.writeMem(0xe2ca, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xff0d, gbc.sp());
        EXPECT(0xe2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ca));
        EXPECT(0x5d, gbc.readMem(0xe2cb));
        // CB 5D 0077
        gbc.setState(0xc891, 0xdc61, 0x15a0, 0x9802, 0x449c, 0x344, 0x0, 0x0);
        gbc.writeMem(0xc891, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdc61, gbc.sp());
        EXPECT(0xc893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc891));
        EXPECT(0x5d, gbc.readMem(0xc892));
        // CB 5D 0078
        gbc.setState(0x2254, 0xdf03, 0xfd40, 0x9180, 0xdc2c, 0x963e, 0x0, 0x0);
        gbc.writeMem(0x2254, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdf03, gbc.sp());
        EXPECT(0x2256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0079
        gbc.setState(0xae2b, 0xd352, 0x2040, 0xb286, 0x9564, 0x8415, 0x0, 0x0);
        gbc.writeMem(0xae2b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd352, gbc.sp());
        EXPECT(0xae2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae2b));
        EXPECT(0x5d, gbc.readMem(0xae2c));
        // CB 5D 007A
        gbc.setState(0x445f, 0x3253, 0x4e80, 0xc647, 0xd1c6, 0x86d6, 0x0, 0x0);
        gbc.writeMem(0x445f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3253, gbc.sp());
        EXPECT(0x4461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 007B
        gbc.setState(0xb55, 0x7d53, 0x8610, 0x82c3, 0xdb0e, 0x5749, 0x0, 0x1);
        gbc.writeMem(0xb55, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7d53, gbc.sp());
        EXPECT(0xb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 007C
        gbc.setState(0xc68, 0x30b9, 0xb6e0, 0x833e, 0xdd04, 0xae69, 0x1, 0x1);
        gbc.writeMem(0xc68, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x30b9, gbc.sp());
        EXPECT(0xc6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 007D
        gbc.setState(0x72b8, 0x296f, 0x2ad0, 0xc6ef, 0x2bd8, 0x376, 0x0, 0x1);
        gbc.writeMem(0x72b8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x296f, gbc.sp());
        EXPECT(0x72ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 007E
        gbc.setState(0xbf63, 0xb429, 0x5610, 0x3f27, 0xfac4, 0x64e3, 0x0, 0x1);
        gbc.writeMem(0xbf63, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb429, gbc.sp());
        EXPECT(0xbf65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf63));
        EXPECT(0x5d, gbc.readMem(0xbf64));
        // CB 5D 007F
        gbc.setState(0xbb02, 0x9547, 0x59c0, 0x6b3c, 0xe62, 0x8d42, 0x0, 0x1);
        gbc.writeMem(0xbb02, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9547, gbc.sp());
        EXPECT(0xbb04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb02));
        EXPECT(0x5d, gbc.readMem(0xbb03));
        // CB 5D 0080
        gbc.setState(0xdb1a, 0x51fc, 0x64d0, 0xd5d3, 0xd472, 0xaddf, 0x0, 0x0);
        gbc.writeMem(0xdb1a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x51fc, gbc.sp());
        EXPECT(0xdb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1a));
        EXPECT(0x5d, gbc.readMem(0xdb1b));
        // CB 5D 0081
        gbc.setState(0x1f7e, 0xb2f8, 0x200, 0xc6df, 0x1859, 0xced5, 0x1, 0x0);
        gbc.writeMem(0x1f7e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb2f8, gbc.sp());
        EXPECT(0x1f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0082
        gbc.setState(0x1442, 0xf9e5, 0xb660, 0xc3dd, 0x5ea0, 0x5fda, 0x1, 0x1);
        gbc.writeMem(0x1442, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf9e5, gbc.sp());
        EXPECT(0x1444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0083
        gbc.setState(0x196e, 0x3853, 0x9b90, 0x2570, 0x1453, 0xa57e, 0x1, 0x1);
        gbc.writeMem(0x196e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3853, gbc.sp());
        EXPECT(0x1970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0084
        gbc.setState(0xed9b, 0x614e, 0xa100, 0x9f9f, 0x2c69, 0x7699, 0x1, 0x0);
        gbc.writeMem(0xed9b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x614e, gbc.sp());
        EXPECT(0xed9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9b));
        EXPECT(0x5d, gbc.readMem(0xed9c));
        // CB 5D 0085
        gbc.setState(0xa93b, 0xa2a2, 0x43c0, 0x9b96, 0x8162, 0x44a7, 0x1, 0x1);
        gbc.writeMem(0xa93b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa2a2, gbc.sp());
        EXPECT(0xa93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93b));
        EXPECT(0x5d, gbc.readMem(0xa93c));
        // CB 5D 0086
        gbc.setState(0x5a75, 0xbac6, 0x1680, 0x2787, 0xbce1, 0x5af9, 0x0, 0x1);
        gbc.writeMem(0x5a75, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbac6, gbc.sp());
        EXPECT(0x5a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0087
        gbc.setState(0xb011, 0xc1f4, 0xc580, 0x8d26, 0x8f0b, 0xa0be, 0x1, 0x1);
        gbc.writeMem(0xb011, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc1f4, gbc.sp());
        EXPECT(0xb013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb011));
        EXPECT(0x5d, gbc.readMem(0xb012));
        // CB 5D 0088
        gbc.setState(0xab08, 0xaa3c, 0xeeb0, 0x3e2d, 0x6e39, 0xb71c, 0x0, 0x1);
        gbc.writeMem(0xab08, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaa3c, gbc.sp());
        EXPECT(0xab0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab08));
        EXPECT(0x5d, gbc.readMem(0xab09));
        // CB 5D 0089
        gbc.setState(0xed44, 0x8435, 0xa320, 0x806a, 0x705f, 0x6708, 0x1, 0x0);
        gbc.writeMem(0xed44, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8435, gbc.sp());
        EXPECT(0xed46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed44));
        EXPECT(0x5d, gbc.readMem(0xed45));
        // CB 5D 008A
        gbc.setState(0x11f9, 0xa0f4, 0xb60, 0xe01d, 0x3a91, 0x752d, 0x0, 0x1);
        gbc.writeMem(0x11f9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa0f4, gbc.sp());
        EXPECT(0x11fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 008C
        gbc.setState(0x7f1e, 0xac8a, 0xddc0, 0x75c2, 0x72e2, 0x710, 0x0, 0x0);
        gbc.writeMem(0x7f1e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xac8a, gbc.sp());
        EXPECT(0x7f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 008E
        gbc.setState(0xb17b, 0xe8f4, 0x8480, 0xeca2, 0x4757, 0x1cba, 0x0, 0x0);
        gbc.writeMem(0xb17b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe8f4, gbc.sp());
        EXPECT(0xb17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17b));
        EXPECT(0x5d, gbc.readMem(0xb17c));
        // CB 5D 008F
        gbc.setState(0xfbf, 0xdb7d, 0x80e0, 0x723, 0x791e, 0xe322, 0x1, 0x0);
        gbc.writeMem(0xfbf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdb7d, gbc.sp());
        EXPECT(0xfc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0090
        gbc.setState(0x52e3, 0x4327, 0x1a10, 0x35f, 0x333e, 0xdd94, 0x0, 0x1);
        gbc.writeMem(0x52e3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4327, gbc.sp());
        EXPECT(0x52e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0091
        gbc.setState(0x8ec4, 0x32fb, 0x5e90, 0xa82, 0x86bd, 0xf000, 0x0, 0x1);
        gbc.writeMem(0x8ec4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x32fb, gbc.sp());
        EXPECT(0x8ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec4));
        EXPECT(0x5d, gbc.readMem(0x8ec5));
        // CB 5D 0092
        gbc.setState(0xe902, 0x5c10, 0xc390, 0xa44, 0x5b2c, 0x7194, 0x0, 0x0);
        gbc.writeMem(0xe902, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5c10, gbc.sp());
        EXPECT(0xe904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe902));
        EXPECT(0x5d, gbc.readMem(0xe903));
        // CB 5D 0093
        gbc.setState(0x8df8, 0x54b7, 0x6da0, 0xee99, 0x417c, 0x83be, 0x0, 0x0);
        gbc.writeMem(0x8df8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x54b7, gbc.sp());
        EXPECT(0x8dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df8));
        EXPECT(0x5d, gbc.readMem(0x8df9));
        // CB 5D 0094
        gbc.setState(0x7b02, 0x3e0, 0xb020, 0x50ce, 0xadff, 0xb8fe, 0x0, 0x1);
        gbc.writeMem(0x7b02, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3e0, gbc.sp());
        EXPECT(0x7b04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0095
        gbc.setState(0x2662, 0x983, 0xafb0, 0xad2a, 0xfac8, 0xa726, 0x1, 0x0);
        gbc.writeMem(0x2662, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x983, gbc.sp());
        EXPECT(0x2664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0096
        gbc.setState(0xc918, 0xca7, 0xb280, 0xa926, 0xe548, 0x1863, 0x1, 0x1);
        gbc.writeMem(0xc918, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xca7, gbc.sp());
        EXPECT(0xc91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc918));
        EXPECT(0x5d, gbc.readMem(0xc919));
        // CB 5D 0097
        gbc.setState(0xe2c3, 0x3e09, 0xc060, 0xb782, 0x4dd7, 0x3830, 0x0, 0x1);
        gbc.writeMem(0xe2c3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3e09, gbc.sp());
        EXPECT(0xe2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c3));
        EXPECT(0x5d, gbc.readMem(0xe2c4));
        // CB 5D 0098
        gbc.setState(0x9bbe, 0x7b59, 0x1cf0, 0xb0b9, 0xb1be, 0x7ba5, 0x0, 0x0);
        gbc.writeMem(0x9bbe, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7b59, gbc.sp());
        EXPECT(0x9bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbe));
        EXPECT(0x5d, gbc.readMem(0x9bbf));
        // CB 5D 0099
        gbc.setState(0x28e6, 0x3cae, 0x8d90, 0x15dc, 0x702b, 0xcefa, 0x1, 0x1);
        gbc.writeMem(0x28e6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3cae, gbc.sp());
        EXPECT(0x28e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 009A
        gbc.setState(0x6221, 0xff00, 0xe080, 0xb15e, 0x1a2a, 0x2884, 0x0, 0x0);
        gbc.writeMem(0x6221, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xff00, gbc.sp());
        EXPECT(0x6223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 009B
        gbc.setState(0x233d, 0x5640, 0xb6b0, 0xe5ff, 0x701e, 0x3b92, 0x0, 0x0);
        gbc.writeMem(0x233d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5640, gbc.sp());
        EXPECT(0x233f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 009C
        gbc.setState(0x9624, 0xd66c, 0x10a0, 0x776f, 0x8356, 0x25f2, 0x0, 0x0);
        gbc.writeMem(0x9624, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd66c, gbc.sp());
        EXPECT(0x9626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9624));
        EXPECT(0x5d, gbc.readMem(0x9625));
        // CB 5D 009D
        gbc.setState(0x52c8, 0xb87f, 0x10e0, 0x9dc6, 0xe868, 0xcb60, 0x0, 0x1);
        gbc.writeMem(0x52c8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb87f, gbc.sp());
        EXPECT(0x52ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 009E
        gbc.setState(0x251f, 0xe158, 0x3420, 0x388a, 0xa13b, 0x1a77, 0x0, 0x1);
        gbc.writeMem(0x251f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe158, gbc.sp());
        EXPECT(0x2521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 009F
        gbc.setState(0xa0e6, 0x6c59, 0x1b80, 0xf06e, 0x7538, 0x7f97, 0x0, 0x0);
        gbc.writeMem(0xa0e6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6c59, gbc.sp());
        EXPECT(0xa0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e6));
        EXPECT(0x5d, gbc.readMem(0xa0e7));
        // CB 5D 00A0
        gbc.setState(0x7050, 0x5bb7, 0xe70, 0x41e0, 0x8b84, 0x17b6, 0x0, 0x1);
        gbc.writeMem(0x7050, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5bb7, gbc.sp());
        EXPECT(0x7052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00A1
        gbc.setState(0xcfdf, 0xf5cf, 0xbfc0, 0x86c1, 0x2f28, 0xb116, 0x0, 0x1);
        gbc.writeMem(0xcfdf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf5cf, gbc.sp());
        EXPECT(0xcfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdf));
        EXPECT(0x5d, gbc.readMem(0xcfe0));
        // CB 5D 00A2
        gbc.setState(0x359c, 0xab06, 0x13b0, 0x8098, 0x4cb3, 0x67d5, 0x1, 0x0);
        gbc.writeMem(0x359c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xab06, gbc.sp());
        EXPECT(0x359e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00A4
        gbc.setState(0x61e4, 0x472c, 0xf1a0, 0xe57f, 0xec06, 0x7ffb, 0x0, 0x1);
        gbc.writeMem(0x61e4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x472c, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00A5
        gbc.setState(0x778, 0xcba6, 0xfd20, 0xd653, 0x4dba, 0x9248, 0x1, 0x1);
        gbc.writeMem(0x778, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcba6, gbc.sp());
        EXPECT(0x77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00A6
        gbc.setState(0xe4a9, 0x3f1e, 0x89d0, 0x339b, 0x5311, 0xf0a8, 0x0, 0x1);
        gbc.writeMem(0xe4a9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3f1e, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a9));
        EXPECT(0x5d, gbc.readMem(0xe4aa));
        // CB 5D 00A7
        gbc.setState(0x2, 0xf143, 0x3bf0, 0x1868, 0xce4e, 0xe152, 0x1, 0x0);
        gbc.writeMem(0x2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf143, gbc.sp());
        EXPECT(0x4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00A8
        gbc.setState(0xe88b, 0xb6ac, 0x2890, 0x2fae, 0x9f56, 0xbc08, 0x1, 0x0);
        gbc.writeMem(0xe88b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb6ac, gbc.sp());
        EXPECT(0xe88d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88b));
        EXPECT(0x5d, gbc.readMem(0xe88c));
        // CB 5D 00A9
        gbc.setState(0xcaf, 0x276e, 0x6cf0, 0x1181, 0x37aa, 0x38c6, 0x1, 0x0);
        gbc.writeMem(0xcaf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x276e, gbc.sp());
        EXPECT(0xcb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00AA
        gbc.setState(0x632c, 0x1c82, 0xd140, 0xed64, 0x2bc6, 0x5a23, 0x1, 0x0);
        gbc.writeMem(0x632c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1c82, gbc.sp());
        EXPECT(0x632e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00AB
        gbc.setState(0x828a, 0xccf8, 0x9f00, 0x10bb, 0x4717, 0x1fdc, 0x0, 0x0);
        gbc.writeMem(0x828a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xccf8, gbc.sp());
        EXPECT(0x828c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x828a));
        EXPECT(0x5d, gbc.readMem(0x828b));
        // CB 5D 00AC
        gbc.setState(0x8679, 0xa6db, 0xb870, 0x190a, 0x653b, 0xb326, 0x1, 0x1);
        gbc.writeMem(0x8679, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa6db, gbc.sp());
        EXPECT(0x867b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8679));
        EXPECT(0x5d, gbc.readMem(0x867a));
        // CB 5D 00AD
        gbc.setState(0x2bb8, 0xf889, 0xdf40, 0xc1e3, 0x7cd3, 0x794e, 0x0, 0x1);
        gbc.writeMem(0x2bb8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf889, gbc.sp());
        EXPECT(0x2bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00AE
        gbc.setState(0x2b32, 0xa0df, 0x3f0, 0xfa88, 0x712c, 0xbb17, 0x0, 0x1);
        gbc.writeMem(0x2b32, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa0df, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00B0
        gbc.setState(0x8ebe, 0xb5d6, 0x7b80, 0xd9bf, 0xdb6e, 0x2e0b, 0x0, 0x0);
        gbc.writeMem(0x8ebe, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb5d6, gbc.sp());
        EXPECT(0x8ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ebe));
        EXPECT(0x5d, gbc.readMem(0x8ebf));
        // CB 5D 00B1
        gbc.setState(0x8baf, 0xfc88, 0xc6c0, 0xc6f2, 0x424e, 0x886c, 0x0, 0x1);
        gbc.writeMem(0x8baf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfc88, gbc.sp());
        EXPECT(0x8bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8baf));
        EXPECT(0x5d, gbc.readMem(0x8bb0));
        // CB 5D 00B2
        gbc.setState(0xaadd, 0x6ecf, 0xa90, 0x4c9b, 0xdd87, 0xbc3d, 0x1, 0x1);
        gbc.writeMem(0xaadd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6ecf, gbc.sp());
        EXPECT(0xaadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaadd));
        EXPECT(0x5d, gbc.readMem(0xaade));
        // CB 5D 00B3
        gbc.setState(0x66e5, 0xd04c, 0xb010, 0x5ec2, 0x71eb, 0xcdad, 0x1, 0x1);
        gbc.writeMem(0x66e5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd04c, gbc.sp());
        EXPECT(0x66e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00B4
        gbc.setState(0x3ef7, 0xde94, 0x2ba0, 0xc81e, 0xeb68, 0x219d, 0x0, 0x1);
        gbc.writeMem(0x3ef7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xde94, gbc.sp());
        EXPECT(0x3ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00B5
        gbc.setState(0xbc26, 0x1322, 0x7850, 0x156e, 0xe112, 0xb43a, 0x0, 0x0);
        gbc.writeMem(0xbc26, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1322, gbc.sp());
        EXPECT(0xbc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc26));
        EXPECT(0x5d, gbc.readMem(0xbc27));
        // CB 5D 00B7
        gbc.setState(0x517b, 0xf0b5, 0xdf80, 0xda14, 0x80a1, 0x69b, 0x0, 0x1);
        gbc.writeMem(0x517b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf0b5, gbc.sp());
        EXPECT(0x517d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00B8
        gbc.setState(0x4cbb, 0x9c8b, 0xbfe0, 0x2177, 0x3998, 0x8fe8, 0x0, 0x1);
        gbc.writeMem(0x4cbb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9c8b, gbc.sp());
        EXPECT(0x4cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00B9
        gbc.setState(0x2a51, 0xbc58, 0x35f0, 0x5b49, 0xab92, 0x33e, 0x1, 0x0);
        gbc.writeMem(0x2a51, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbc58, gbc.sp());
        EXPECT(0x2a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00BA
        gbc.setState(0x262d, 0xcbfd, 0x6650, 0x5db3, 0x52db, 0x6233, 0x0, 0x1);
        gbc.writeMem(0x262d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcbfd, gbc.sp());
        EXPECT(0x262f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00BB
        gbc.setState(0x3a86, 0x4e90, 0xd480, 0x613e, 0x8e94, 0x8f73, 0x0, 0x0);
        gbc.writeMem(0x3a86, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4e90, gbc.sp());
        EXPECT(0x3a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00BC
        gbc.setState(0xed1f, 0x5419, 0xe970, 0xcb85, 0xf03f, 0xb890, 0x1, 0x0);
        gbc.writeMem(0xed1f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5419, gbc.sp());
        EXPECT(0xed21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1f));
        EXPECT(0x5d, gbc.readMem(0xed20));
        // CB 5D 00BD
        gbc.setState(0x5ee1, 0x898e, 0x1b90, 0x18f3, 0x18d3, 0x5fde, 0x1, 0x1);
        gbc.writeMem(0x5ee1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x898e, gbc.sp());
        EXPECT(0x5ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00BE
        gbc.setState(0x40cc, 0xb085, 0xdd10, 0x33ec, 0xe4d4, 0x1d59, 0x0, 0x0);
        gbc.writeMem(0x40cc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb085, gbc.sp());
        EXPECT(0x40ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00BF
        gbc.setState(0xdaa1, 0x3307, 0xe580, 0x640, 0xe603, 0xb2b2, 0x1, 0x1);
        gbc.writeMem(0xdaa1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3307, gbc.sp());
        EXPECT(0xdaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa1));
        EXPECT(0x5d, gbc.readMem(0xdaa2));
        // CB 5D 00C0
        gbc.setState(0x1baf, 0xad4f, 0x2220, 0x883f, 0xffb6, 0x98b2, 0x1, 0x0);
        gbc.writeMem(0x1baf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xad4f, gbc.sp());
        EXPECT(0x1bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00C1
        gbc.setState(0xbf01, 0x8f3d, 0x4540, 0xe967, 0x4521, 0x268c, 0x0, 0x1);
        gbc.writeMem(0xbf01, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8f3d, gbc.sp());
        EXPECT(0xbf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf01));
        EXPECT(0x5d, gbc.readMem(0xbf02));
        // CB 5D 00C2
        gbc.setState(0xb187, 0x8180, 0xc990, 0xe652, 0x3d55, 0xb92a, 0x1, 0x0);
        gbc.writeMem(0xb187, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8180, gbc.sp());
        EXPECT(0xb189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb187));
        EXPECT(0x5d, gbc.readMem(0xb188));
        // CB 5D 00C3
        gbc.setState(0x76ca, 0xb7ef, 0x1f30, 0x61af, 0x559b, 0x41f0, 0x0, 0x0);
        gbc.writeMem(0x76ca, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb7ef, gbc.sp());
        EXPECT(0x76cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00C4
        gbc.setState(0x7949, 0xf69f, 0x7550, 0xf67a, 0xd836, 0x6218, 0x1, 0x1);
        gbc.writeMem(0x7949, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf69f, gbc.sp());
        EXPECT(0x794b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00C5
        gbc.setState(0x7bf5, 0xa6eb, 0xd700, 0x6d37, 0x529, 0xe295, 0x0, 0x1);
        gbc.writeMem(0x7bf5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa6eb, gbc.sp());
        EXPECT(0x7bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00C6
        gbc.setState(0xc506, 0x2670, 0x37c0, 0x8139, 0x3361, 0x923c, 0x1, 0x1);
        gbc.writeMem(0xc506, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2670, gbc.sp());
        EXPECT(0xc508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc506));
        EXPECT(0x5d, gbc.readMem(0xc507));
        // CB 5D 00C7
        gbc.setState(0xabd2, 0x3084, 0x1350, 0x1e58, 0x7585, 0x9fbb, 0x0, 0x0);
        gbc.writeMem(0xabd2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3084, gbc.sp());
        EXPECT(0xabd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd2));
        EXPECT(0x5d, gbc.readMem(0xabd3));
        // CB 5D 00C8
        gbc.setState(0x2dd2, 0xaf87, 0x8670, 0x3a43, 0x55f7, 0x6678, 0x1, 0x1);
        gbc.writeMem(0x2dd2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xaf87, gbc.sp());
        EXPECT(0x2dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00CC
        gbc.setState(0x4063, 0x7a3e, 0xabe0, 0x8065, 0xa81b, 0xeb9f, 0x1, 0x0);
        gbc.writeMem(0x4063, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7a3e, gbc.sp());
        EXPECT(0x4065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00CD
        gbc.setState(0x4f3a, 0xb09b, 0x2ae0, 0x9924, 0x7ced, 0xf7db, 0x1, 0x0);
        gbc.writeMem(0x4f3a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb09b, gbc.sp());
        EXPECT(0x4f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00CE
        gbc.setState(0xc772, 0x7e66, 0xb50, 0xb78e, 0x429a, 0xb317, 0x1, 0x0);
        gbc.writeMem(0xc772, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7e66, gbc.sp());
        EXPECT(0xc774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc772));
        EXPECT(0x5d, gbc.readMem(0xc773));
        // CB 5D 00CF
        gbc.setState(0xc43c, 0xb939, 0x2060, 0x38c2, 0x4f3e, 0xa296, 0x1, 0x0);
        gbc.writeMem(0xc43c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb939, gbc.sp());
        EXPECT(0xc43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43c));
        EXPECT(0x5d, gbc.readMem(0xc43d));
        // CB 5D 00D0
        gbc.setState(0x20bc, 0x59c3, 0xd490, 0x2655, 0x3320, 0x4fed, 0x0, 0x0);
        gbc.writeMem(0x20bc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x59c3, gbc.sp());
        EXPECT(0x20be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00D1
        gbc.setState(0xb826, 0x776e, 0x4330, 0xac9, 0xa2d5, 0xe823, 0x0, 0x0);
        gbc.writeMem(0xb826, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x776e, gbc.sp());
        EXPECT(0xb828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb826));
        EXPECT(0x5d, gbc.readMem(0xb827));
        // CB 5D 00D2
        gbc.setState(0x74ab, 0x1461, 0x680, 0x5bb5, 0xdee8, 0x79e, 0x1, 0x1);
        gbc.writeMem(0x74ab, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1461, gbc.sp());
        EXPECT(0x74ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00D3
        gbc.setState(0x4f4f, 0x127e, 0x9110, 0x5074, 0x884f, 0x3724, 0x0, 0x0);
        gbc.writeMem(0x4f4f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x127e, gbc.sp());
        EXPECT(0x4f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00D4
        gbc.setState(0x1e79, 0xd3da, 0x4630, 0xebd9, 0xb163, 0x6509, 0x1, 0x1);
        gbc.writeMem(0x1e79, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd3da, gbc.sp());
        EXPECT(0x1e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00D5
        gbc.setState(0x4bfd, 0x2a15, 0x6770, 0x5537, 0x6c82, 0x2018, 0x0, 0x1);
        gbc.writeMem(0x4bfd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2a15, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00D6
        gbc.setState(0x3122, 0xd4eb, 0x5e70, 0xf80, 0xfef3, 0x43a6, 0x1, 0x0);
        gbc.writeMem(0x3122, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd4eb, gbc.sp());
        EXPECT(0x3124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00D7
        gbc.setState(0x4bf3, 0xc9f6, 0x37f0, 0xeb79, 0x6043, 0xdc62, 0x0, 0x0);
        gbc.writeMem(0x4bf3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc9f6, gbc.sp());
        EXPECT(0x4bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00D8
        gbc.setState(0x85d6, 0x817c, 0xffb0, 0x356d, 0x3d2e, 0x841b, 0x0, 0x0);
        gbc.writeMem(0x85d6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x817c, gbc.sp());
        EXPECT(0x85d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d6));
        EXPECT(0x5d, gbc.readMem(0x85d7));
        // CB 5D 00D9
        gbc.setState(0x2b15, 0x9d, 0xfe90, 0xab46, 0xe65d, 0xfd36, 0x0, 0x1);
        gbc.writeMem(0x2b15, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9d, gbc.sp());
        EXPECT(0x2b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00DA
        gbc.setState(0xd087, 0xbb69, 0x4820, 0x830, 0x661f, 0x5fa6, 0x0, 0x0);
        gbc.writeMem(0xd087, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbb69, gbc.sp());
        EXPECT(0xd089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd087));
        EXPECT(0x5d, gbc.readMem(0xd088));
        // CB 5D 00DB
        gbc.setState(0xa6a7, 0x9a39, 0xf800, 0x3d3b, 0x1c14, 0xf116, 0x1, 0x1);
        gbc.writeMem(0xa6a7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9a39, gbc.sp());
        EXPECT(0xa6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a7));
        EXPECT(0x5d, gbc.readMem(0xa6a8));
        // CB 5D 00DC
        gbc.setState(0x544c, 0x3ad8, 0xa520, 0x18, 0x16ea, 0x20a, 0x0, 0x1);
        gbc.writeMem(0x544c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3ad8, gbc.sp());
        EXPECT(0x544e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00DD
        gbc.setState(0x40f, 0x8421, 0x9a30, 0x50b6, 0x1bae, 0x25d3, 0x0, 0x0);
        gbc.writeMem(0x40f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8421, gbc.sp());
        EXPECT(0x411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00DE
        gbc.setState(0x767a, 0xe592, 0xb870, 0xff7f, 0xe4f4, 0x5c6b, 0x0, 0x0);
        gbc.writeMem(0x767a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe592, gbc.sp());
        EXPECT(0x767c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00DF
        gbc.setState(0x4d0, 0x36a3, 0xc760, 0x7672, 0x2c2, 0xd4f7, 0x1, 0x1);
        gbc.writeMem(0x4d0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x36a3, gbc.sp());
        EXPECT(0x4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00E0
        gbc.setState(0xacec, 0x2d31, 0xce10, 0x16e5, 0x36e5, 0x6ce4, 0x1, 0x1);
        gbc.writeMem(0xacec, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2d31, gbc.sp());
        EXPECT(0xacee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacec));
        EXPECT(0x5d, gbc.readMem(0xaced));
        // CB 5D 00E1
        gbc.setState(0x6d1d, 0x36e9, 0x7cd0, 0x5c47, 0xad22, 0x4bed, 0x0, 0x1);
        gbc.writeMem(0x6d1d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x36e9, gbc.sp());
        EXPECT(0x6d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00E2
        gbc.setState(0xacfa, 0x651b, 0x7360, 0xe46b, 0x85a7, 0xb333, 0x1, 0x1);
        gbc.writeMem(0xacfa, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x651b, gbc.sp());
        EXPECT(0xacfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfa));
        EXPECT(0x5d, gbc.readMem(0xacfb));
        // CB 5D 00E3
        gbc.setState(0x38d7, 0x43e4, 0x2e00, 0x8f68, 0x26c9, 0xcfc9, 0x1, 0x1);
        gbc.writeMem(0x38d7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x43e4, gbc.sp());
        EXPECT(0x38d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00E4
        gbc.setState(0xdfab, 0xb1d, 0x2510, 0xd264, 0x226b, 0xcf08, 0x0, 0x0);
        gbc.writeMem(0xdfab, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb1d, gbc.sp());
        EXPECT(0xdfad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfab));
        EXPECT(0x5d, gbc.readMem(0xdfac));
        // CB 5D 00E5
        gbc.setState(0x788a, 0x998, 0xac20, 0xa77a, 0x11b7, 0x211c, 0x0, 0x0);
        gbc.writeMem(0x788a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x998, gbc.sp());
        EXPECT(0x788c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00E6
        gbc.setState(0x4515, 0x8349, 0x4da0, 0x1b83, 0xea37, 0xc1b, 0x1, 0x0);
        gbc.writeMem(0x4515, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8349, gbc.sp());
        EXPECT(0x4517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00E8
        gbc.setState(0x3dee, 0x4d6d, 0x1df0, 0x3811, 0xadd8, 0x7a9e, 0x0, 0x1);
        gbc.writeMem(0x3dee, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4d6d, gbc.sp());
        EXPECT(0x3df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00E9
        gbc.setState(0x7374, 0xbcdb, 0x6f70, 0xfae8, 0x493d, 0xd484, 0x0, 0x1);
        gbc.writeMem(0x7374, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbcdb, gbc.sp());
        EXPECT(0x7376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00EA
        gbc.setState(0xe039, 0xacb, 0xd350, 0x9172, 0xfa10, 0x51f7, 0x1, 0x1);
        gbc.writeMem(0xe039, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xacb, gbc.sp());
        EXPECT(0xe03b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe039));
        EXPECT(0x5d, gbc.readMem(0xe03a));
        // CB 5D 00EB
        gbc.setState(0xb0b7, 0x5857, 0x4c10, 0xc701, 0x4775, 0x471f, 0x1, 0x1);
        gbc.writeMem(0xb0b7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5857, gbc.sp());
        EXPECT(0xb0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b7));
        EXPECT(0x5d, gbc.readMem(0xb0b8));
        // CB 5D 00EC
        gbc.setState(0x38ee, 0x80ac, 0x6430, 0x9697, 0x528f, 0xc1f2, 0x1, 0x0);
        gbc.writeMem(0x38ee, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x80ac, gbc.sp());
        EXPECT(0x38f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00ED
        gbc.setState(0x469a, 0xf5ab, 0xeee0, 0x7c60, 0xa09f, 0x34cb, 0x1, 0x0);
        gbc.writeMem(0x469a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf5ab, gbc.sp());
        EXPECT(0x469c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00EE
        gbc.setState(0x46ad, 0x70b4, 0xd020, 0x37ec, 0x835d, 0x2347, 0x1, 0x0);
        gbc.writeMem(0x46ad, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x70b4, gbc.sp());
        EXPECT(0x46af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00EF
        gbc.setState(0xb35, 0x5bbc, 0xa210, 0x59fc, 0xff3a, 0x74f5, 0x1, 0x0);
        gbc.writeMem(0xb35, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5bbc, gbc.sp());
        EXPECT(0xb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00F0
        gbc.setState(0x1b61, 0x65c0, 0xb130, 0x1021, 0x6d4f, 0xed6, 0x0, 0x0);
        gbc.writeMem(0x1b61, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x65c0, gbc.sp());
        EXPECT(0x1b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00F2
        gbc.setState(0x49e0, 0x14ee, 0x8eb0, 0x1d88, 0x11f7, 0x57b9, 0x0, 0x1);
        gbc.writeMem(0x49e0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x14ee, gbc.sp());
        EXPECT(0x49e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00F3
        gbc.setState(0xc601, 0x23a4, 0xf170, 0x31f2, 0xcb7, 0x9a5c, 0x0, 0x1);
        gbc.writeMem(0xc601, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x23a4, gbc.sp());
        EXPECT(0xc603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc601));
        EXPECT(0x5d, gbc.readMem(0xc602));
        // CB 5D 00F4
        gbc.setState(0x95e9, 0x3e8b, 0xf480, 0xf2b1, 0x2525, 0x6700, 0x0, 0x1);
        gbc.writeMem(0x95e9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3e8b, gbc.sp());
        EXPECT(0x95eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e9));
        EXPECT(0x5d, gbc.readMem(0x95ea));
        // CB 5D 00F5
        gbc.setState(0xc65d, 0x22dc, 0xee30, 0x4353, 0xb7e9, 0x98e6, 0x1, 0x1);
        gbc.writeMem(0xc65d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x22dc, gbc.sp());
        EXPECT(0xc65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc65d));
        EXPECT(0x5d, gbc.readMem(0xc65e));
        // CB 5D 00F6
        gbc.setState(0x901e, 0x5ef2, 0x31a0, 0x94c, 0xa056, 0x5873, 0x1, 0x1);
        gbc.writeMem(0x901e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5ef2, gbc.sp());
        EXPECT(0x9020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901e));
        EXPECT(0x5d, gbc.readMem(0x901f));
        // CB 5D 00F7
        gbc.setState(0x5c80, 0x85ff, 0x4760, 0x2d99, 0x92d1, 0xb44, 0x0, 0x0);
        gbc.writeMem(0x5c80, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x85ff, gbc.sp());
        EXPECT(0x5c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00F8
        gbc.setState(0x18b4, 0xfaab, 0xbb30, 0xc25, 0x9fea, 0xbbb4, 0x1, 0x0);
        gbc.writeMem(0x18b4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfaab, gbc.sp());
        EXPECT(0x18b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00F9
        gbc.setState(0x6316, 0xf5cf, 0x37c0, 0x2166, 0x154c, 0x4e05, 0x1, 0x1);
        gbc.writeMem(0x6316, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf5cf, gbc.sp());
        EXPECT(0x6318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 00FA
        gbc.setState(0x8461, 0x4dc6, 0x3bf0, 0x4a07, 0x20ce, 0x5bff, 0x0, 0x1);
        gbc.writeMem(0x8461, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4dc6, gbc.sp());
        EXPECT(0x8463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8461));
        EXPECT(0x5d, gbc.readMem(0x8462));
        // CB 5D 00FB
        gbc.setState(0xd848, 0x795c, 0xfd00, 0xaf01, 0xa043, 0x1517, 0x0, 0x0);
        gbc.writeMem(0xd848, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x795c, gbc.sp());
        EXPECT(0xd84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd848));
        EXPECT(0x5d, gbc.readMem(0xd849));
        // CB 5D 00FC
        gbc.setState(0x92a1, 0xbfee, 0x3840, 0xa86, 0x460d, 0x977d, 0x0, 0x0);
        gbc.writeMem(0x92a1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbfee, gbc.sp());
        EXPECT(0x92a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a1));
        EXPECT(0x5d, gbc.readMem(0x92a2));
        // CB 5D 00FD
        gbc.setState(0x8f50, 0xbda3, 0xe470, 0x70b3, 0xc05e, 0x8c49, 0x1, 0x1);
        gbc.writeMem(0x8f50, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbda3, gbc.sp());
        EXPECT(0x8f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f50));
        EXPECT(0x5d, gbc.readMem(0x8f51));
        // CB 5D 00FE
        gbc.setState(0x32ea, 0x86fa, 0x5770, 0xf2c6, 0x3c3c, 0x551d, 0x0, 0x0);
        gbc.writeMem(0x32ea, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x86fa, gbc.sp());
        EXPECT(0x32ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 00FF
        gbc.setState(0x73d, 0x56c5, 0x95b0, 0xe401, 0x3b70, 0xa3bd, 0x0, 0x0);
        gbc.writeMem(0x73d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x56c5, gbc.sp());
        EXPECT(0x73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0101
        gbc.setState(0x2c3b, 0x457f, 0x3260, 0x98a0, 0x2d06, 0x469e, 0x1, 0x1);
        gbc.writeMem(0x2c3b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x457f, gbc.sp());
        EXPECT(0x2c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0102
        gbc.setState(0x5aa8, 0xa89c, 0xdcc0, 0x6f60, 0x5cda, 0x9fc6, 0x0, 0x0);
        gbc.writeMem(0x5aa8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa89c, gbc.sp());
        EXPECT(0x5aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0103
        gbc.setState(0x2925, 0x828c, 0x1090, 0x79dc, 0xd108, 0xbaed, 0x0, 0x0);
        gbc.writeMem(0x2925, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x828c, gbc.sp());
        EXPECT(0x2927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0104
        gbc.setState(0xa47b, 0xbe4d, 0xa1d0, 0xe864, 0xad32, 0x117a, 0x0, 0x1);
        gbc.writeMem(0xa47b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbe4d, gbc.sp());
        EXPECT(0xa47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47b));
        EXPECT(0x5d, gbc.readMem(0xa47c));
        // CB 5D 0105
        gbc.setState(0x6d47, 0x4381, 0xa330, 0xd03, 0x6672, 0x9220, 0x0, 0x1);
        gbc.writeMem(0x6d47, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4381, gbc.sp());
        EXPECT(0x6d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0106
        gbc.setState(0x903d, 0x21b4, 0x5020, 0xaefa, 0x7ad, 0xf04c, 0x0, 0x0);
        gbc.writeMem(0x903d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x21b4, gbc.sp());
        EXPECT(0x903f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903d));
        EXPECT(0x5d, gbc.readMem(0x903e));
        // CB 5D 0107
        gbc.setState(0x1fcd, 0xcd7f, 0x6210, 0x7fde, 0x4521, 0x353a, 0x1, 0x0);
        gbc.writeMem(0x1fcd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcd7f, gbc.sp());
        EXPECT(0x1fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0108
        gbc.setState(0xbac6, 0x8a7a, 0x61a0, 0x552a, 0x41ac, 0xee0e, 0x0, 0x0);
        gbc.writeMem(0xbac6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8a7a, gbc.sp());
        EXPECT(0xbac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac6));
        EXPECT(0x5d, gbc.readMem(0xbac7));
        // CB 5D 0109
        gbc.setState(0xeb95, 0x58b3, 0x52f0, 0x942c, 0xa3c3, 0x9064, 0x1, 0x1);
        gbc.writeMem(0xeb95, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x58b3, gbc.sp());
        EXPECT(0xeb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb95));
        EXPECT(0x5d, gbc.readMem(0xeb96));
        // CB 5D 010A
        gbc.setState(0x2b0e, 0x63e5, 0x35d0, 0x57b5, 0x87f0, 0x6ce4, 0x0, 0x1);
        gbc.writeMem(0x2b0e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x63e5, gbc.sp());
        EXPECT(0x2b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 010B
        gbc.setState(0xadd1, 0x90f6, 0x1c40, 0x8ac8, 0x1f68, 0x5224, 0x0, 0x0);
        gbc.writeMem(0xadd1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x90f6, gbc.sp());
        EXPECT(0xadd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd1));
        EXPECT(0x5d, gbc.readMem(0xadd2));
        // CB 5D 010C
        gbc.setState(0x58ce, 0x4739, 0xe850, 0xf4e7, 0x9598, 0x92ec, 0x0, 0x0);
        gbc.writeMem(0x58ce, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4739, gbc.sp());
        EXPECT(0x58d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 010D
        gbc.setState(0x1dd5, 0x9dbb, 0xcf50, 0xba08, 0x162b, 0x9767, 0x1, 0x0);
        gbc.writeMem(0x1dd5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9dbb, gbc.sp());
        EXPECT(0x1dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 010E
        gbc.setState(0x1041, 0xda34, 0x4120, 0x85b5, 0x9077, 0x65bf, 0x0, 0x0);
        gbc.writeMem(0x1041, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xda34, gbc.sp());
        EXPECT(0x1043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 010F
        gbc.setState(0x53b6, 0x219d, 0x6cc0, 0xad50, 0x169c, 0x503e, 0x0, 0x1);
        gbc.writeMem(0x53b6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x219d, gbc.sp());
        EXPECT(0x53b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0110
        gbc.setState(0x7822, 0x7cb0, 0x1a10, 0xe938, 0xfbf7, 0x67a2, 0x0, 0x0);
        gbc.writeMem(0x7822, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7cb0, gbc.sp());
        EXPECT(0x7824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0111
        gbc.setState(0x12b0, 0xa1fd, 0xd460, 0xcb9c, 0x4e25, 0x6c5a, 0x0, 0x0);
        gbc.writeMem(0x12b0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa1fd, gbc.sp());
        EXPECT(0x12b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0112
        gbc.setState(0x4e3, 0xc9b9, 0x3660, 0x7d6d, 0x32aa, 0x374f, 0x1, 0x1);
        gbc.writeMem(0x4e3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc9b9, gbc.sp());
        EXPECT(0x4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0113
        gbc.setState(0x7949, 0x6684, 0xec80, 0xb809, 0x6ea1, 0x7eea, 0x0, 0x1);
        gbc.writeMem(0x7949, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6684, gbc.sp());
        EXPECT(0x794b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0114
        gbc.setState(0x8315, 0x9fcc, 0xcc40, 0x29ee, 0xf9d, 0x18f, 0x1, 0x1);
        gbc.writeMem(0x8315, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9fcc, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8315));
        EXPECT(0x5d, gbc.readMem(0x8316));
        // CB 5D 0115
        gbc.setState(0x9ccc, 0x63ca, 0xdbc0, 0x69be, 0x499a, 0x4f9, 0x1, 0x1);
        gbc.writeMem(0x9ccc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x63ca, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccc));
        EXPECT(0x5d, gbc.readMem(0x9ccd));
        // CB 5D 0116
        gbc.setState(0x80bf, 0x8e79, 0x78c0, 0x2eb6, 0x4fa4, 0x966, 0x1, 0x0);
        gbc.writeMem(0x80bf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8e79, gbc.sp());
        EXPECT(0x80c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bf));
        EXPECT(0x5d, gbc.readMem(0x80c0));
        // CB 5D 0117
        gbc.setState(0x1e54, 0x50e3, 0x3780, 0x4bd6, 0x4f6e, 0x5b06, 0x0, 0x1);
        gbc.writeMem(0x1e54, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x50e3, gbc.sp());
        EXPECT(0x1e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0118
        gbc.setState(0xdc11, 0xb4f6, 0x1f60, 0xdd3a, 0xde9f, 0x7a39, 0x0, 0x1);
        gbc.writeMem(0xdc11, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb4f6, gbc.sp());
        EXPECT(0xdc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc11));
        EXPECT(0x5d, gbc.readMem(0xdc12));
        // CB 5D 0119
        gbc.setState(0x7638, 0x367, 0x4e60, 0xf7cb, 0xb0cd, 0x5fc4, 0x0, 0x1);
        gbc.writeMem(0x7638, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x367, gbc.sp());
        EXPECT(0x763a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 011A
        gbc.setState(0x6b12, 0xceff, 0x5d0, 0x1964, 0xca6d, 0xb84e, 0x0, 0x0);
        gbc.writeMem(0x6b12, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xceff, gbc.sp());
        EXPECT(0x6b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 011B
        gbc.setState(0x40e5, 0xa002, 0x6f60, 0xbbe4, 0xf67d, 0x6a34, 0x0, 0x0);
        gbc.writeMem(0x40e5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa002, gbc.sp());
        EXPECT(0x40e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 011C
        gbc.setState(0x42dc, 0x576f, 0x82c0, 0x9094, 0xf92, 0xfa79, 0x1, 0x1);
        gbc.writeMem(0x42dc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x576f, gbc.sp());
        EXPECT(0x42de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 011D
        gbc.setState(0xc855, 0x54df, 0x5700, 0xaf9b, 0xa6d5, 0x3f9d, 0x1, 0x1);
        gbc.writeMem(0xc855, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x54df, gbc.sp());
        EXPECT(0xc857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc855));
        EXPECT(0x5d, gbc.readMem(0xc856));
        // CB 5D 011F
        gbc.setState(0x131b, 0x75b8, 0x8650, 0x68e8, 0x568e, 0x725e, 0x0, 0x0);
        gbc.writeMem(0x131b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x75b8, gbc.sp());
        EXPECT(0x131d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0120
        gbc.setState(0x431, 0xb39d, 0x3340, 0x7260, 0xfc0c, 0x3235, 0x1, 0x0);
        gbc.writeMem(0x431, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb39d, gbc.sp());
        EXPECT(0x433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0121
        gbc.setState(0xb8a5, 0xbb66, 0xdbb0, 0xc305, 0xca11, 0x692, 0x1, 0x0);
        gbc.writeMem(0xb8a5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbb66, gbc.sp());
        EXPECT(0xb8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a5));
        EXPECT(0x5d, gbc.readMem(0xb8a6));
        // CB 5D 0122
        gbc.setState(0x108e, 0xad81, 0xfef0, 0xa15a, 0x62af, 0xcbe2, 0x0, 0x1);
        gbc.writeMem(0x108e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xad81, gbc.sp());
        EXPECT(0x1090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0123
        gbc.setState(0xb95f, 0x8b08, 0x51e0, 0x6450, 0xb08e, 0xcfb0, 0x1, 0x1);
        gbc.writeMem(0xb95f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8b08, gbc.sp());
        EXPECT(0xb961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb95f));
        EXPECT(0x5d, gbc.readMem(0xb960));
        // CB 5D 0124
        gbc.setState(0x9e0b, 0xc0f2, 0x20c0, 0xcd28, 0x91ae, 0x25e0, 0x1, 0x1);
        gbc.writeMem(0x9e0b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc0f2, gbc.sp());
        EXPECT(0x9e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0b));
        EXPECT(0x5d, gbc.readMem(0x9e0c));
        // CB 5D 0125
        gbc.setState(0x888b, 0xf072, 0xc580, 0x7993, 0xbaa3, 0x5200, 0x1, 0x1);
        gbc.writeMem(0x888b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf072, gbc.sp());
        EXPECT(0x888d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888b));
        EXPECT(0x5d, gbc.readMem(0x888c));
        // CB 5D 0127
        gbc.setState(0x2bce, 0xd07c, 0xfa90, 0x27ab, 0x724f, 0xab35, 0x1, 0x0);
        gbc.writeMem(0x2bce, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd07c, gbc.sp());
        EXPECT(0x2bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0128
        gbc.setState(0xd9c5, 0xb8d8, 0x1060, 0x3f8d, 0x784a, 0xf65f, 0x1, 0x0);
        gbc.writeMem(0xd9c5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb8d8, gbc.sp());
        EXPECT(0xd9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c5));
        EXPECT(0x5d, gbc.readMem(0xd9c6));
        // CB 5D 0129
        gbc.setState(0x3c38, 0x3767, 0x8510, 0x35ca, 0x2cb0, 0x26bd, 0x0, 0x1);
        gbc.writeMem(0x3c38, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3767, gbc.sp());
        EXPECT(0x3c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 012A
        gbc.setState(0xc036, 0x1e2c, 0x2da0, 0xd4b7, 0x6221, 0xcfae, 0x1, 0x0);
        gbc.writeMem(0xc036, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1e2c, gbc.sp());
        EXPECT(0xc038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc036));
        EXPECT(0x5d, gbc.readMem(0xc037));
        // CB 5D 012B
        gbc.setState(0xd2fa, 0xdd30, 0x2a80, 0x146c, 0x8b6a, 0x3683, 0x0, 0x0);
        gbc.writeMem(0xd2fa, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdd30, gbc.sp());
        EXPECT(0xd2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fa));
        EXPECT(0x5d, gbc.readMem(0xd2fb));
        // CB 5D 012C
        gbc.setState(0x23e3, 0xf032, 0x7fb0, 0xca75, 0xdacc, 0x94c5, 0x0, 0x1);
        gbc.writeMem(0x23e3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf032, gbc.sp());
        EXPECT(0x23e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 012D
        gbc.setState(0xa4db, 0xb32e, 0x2f30, 0x348f, 0x106d, 0x50d2, 0x0, 0x0);
        gbc.writeMem(0xa4db, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb32e, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4db));
        EXPECT(0x5d, gbc.readMem(0xa4dc));
        // CB 5D 012E
        gbc.setState(0x666c, 0x8876, 0x7f00, 0xf8fb, 0x8f23, 0x70ea, 0x1, 0x1);
        gbc.writeMem(0x666c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8876, gbc.sp());
        EXPECT(0x666e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 012F
        gbc.setState(0x7832, 0x63f8, 0xb7c0, 0x1064, 0x893c, 0x297f, 0x1, 0x1);
        gbc.writeMem(0x7832, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x63f8, gbc.sp());
        EXPECT(0x7834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0130
        gbc.setState(0x138c, 0x918e, 0xa30, 0xa619, 0xc28, 0xc96e, 0x1, 0x1);
        gbc.writeMem(0x138c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x918e, gbc.sp());
        EXPECT(0x138e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0131
        gbc.setState(0x49a5, 0x2e42, 0xb4e0, 0x47e3, 0x5275, 0xf14d, 0x1, 0x1);
        gbc.writeMem(0x49a5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2e42, gbc.sp());
        EXPECT(0x49a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0133
        gbc.setState(0x22c8, 0x50cb, 0x70a0, 0xb8c5, 0xb52, 0x8ea3, 0x0, 0x0);
        gbc.writeMem(0x22c8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x50cb, gbc.sp());
        EXPECT(0x22ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0134
        gbc.setState(0x6a4e, 0x965, 0xf650, 0xdb24, 0x9b81, 0x8a07, 0x0, 0x0);
        gbc.writeMem(0x6a4e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x965, gbc.sp());
        EXPECT(0x6a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0135
        gbc.setState(0xa060, 0x301d, 0xec20, 0xaf10, 0x664c, 0x1732, 0x0, 0x1);
        gbc.writeMem(0xa060, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x301d, gbc.sp());
        EXPECT(0xa062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa060));
        EXPECT(0x5d, gbc.readMem(0xa061));
        // CB 5D 0136
        gbc.setState(0xde5c, 0xba68, 0x3800, 0x28d8, 0xba, 0x1988, 0x0, 0x0);
        gbc.writeMem(0xde5c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xba68, gbc.sp());
        EXPECT(0xde5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5c));
        EXPECT(0x5d, gbc.readMem(0xde5d));
        // CB 5D 0138
        gbc.setState(0xd065, 0xe051, 0xe3f0, 0x4def, 0x5be, 0x698d, 0x1, 0x1);
        gbc.writeMem(0xd065, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe051, gbc.sp());
        EXPECT(0xd067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd065));
        EXPECT(0x5d, gbc.readMem(0xd066));
        // CB 5D 0139
        gbc.setState(0x6e73, 0x54fa, 0x6d0, 0x16b9, 0xcdec, 0x9ca3, 0x0, 0x1);
        gbc.writeMem(0x6e73, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x54fa, gbc.sp());
        EXPECT(0x6e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 013A
        gbc.setState(0x2e3c, 0x57f0, 0xb90, 0x68c6, 0x40d7, 0xdb0b, 0x0, 0x0);
        gbc.writeMem(0x2e3c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x57f0, gbc.sp());
        EXPECT(0x2e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 013B
        gbc.setState(0x1d9e, 0x6b1, 0x5760, 0xf80c, 0xf134, 0x9044, 0x1, 0x0);
        gbc.writeMem(0x1d9e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6b1, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 013C
        gbc.setState(0x9850, 0x4ef2, 0x39f0, 0xfa85, 0x53fe, 0xad23, 0x1, 0x1);
        gbc.writeMem(0x9850, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4ef2, gbc.sp());
        EXPECT(0x9852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9850));
        EXPECT(0x5d, gbc.readMem(0x9851));
        // CB 5D 013D
        gbc.setState(0xecfd, 0xce6e, 0xeb60, 0xc5c5, 0xccab, 0x39a, 0x0, 0x0);
        gbc.writeMem(0xecfd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xce6e, gbc.sp());
        EXPECT(0xecff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfd));
        EXPECT(0x5d, gbc.readMem(0xecfe));
        // CB 5D 013F
        gbc.setState(0x9c01, 0xc6c9, 0x2ee0, 0x802c, 0x51db, 0x84a6, 0x1, 0x0);
        gbc.writeMem(0x9c01, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc6c9, gbc.sp());
        EXPECT(0x9c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c01));
        EXPECT(0x5d, gbc.readMem(0x9c02));
        // CB 5D 0140
        gbc.setState(0xecea, 0x9d3b, 0x7c70, 0x67a5, 0xfd0f, 0xebb3, 0x0, 0x0);
        gbc.writeMem(0xecea, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9d3b, gbc.sp());
        EXPECT(0xecec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecea));
        EXPECT(0x5d, gbc.readMem(0xeceb));
        // CB 5D 0141
        gbc.setState(0xddbe, 0x19cf, 0x8d20, 0xea0e, 0x4f7e, 0x9c6a, 0x1, 0x1);
        gbc.writeMem(0xddbe, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x19cf, gbc.sp());
        EXPECT(0xddc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbe));
        EXPECT(0x5d, gbc.readMem(0xddbf));
        // CB 5D 0142
        gbc.setState(0xc805, 0x29c0, 0x7970, 0x9ea2, 0x5a2b, 0x5398, 0x0, 0x0);
        gbc.writeMem(0xc805, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x29c0, gbc.sp());
        EXPECT(0xc807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc805));
        EXPECT(0x5d, gbc.readMem(0xc806));
        // CB 5D 0143
        gbc.setState(0xeffc, 0xff34, 0xeb00, 0x794d, 0x7cb3, 0x22da, 0x1, 0x0);
        gbc.writeMem(0xeffc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xff34, gbc.sp());
        EXPECT(0xeffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeffc));
        EXPECT(0x5d, gbc.readMem(0xeffd));
        // CB 5D 0144
        gbc.setState(0xdab6, 0x4a09, 0xef90, 0xe17d, 0xd834, 0x6ec1, 0x0, 0x0);
        gbc.writeMem(0xdab6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4a09, gbc.sp());
        EXPECT(0xdab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab6));
        EXPECT(0x5d, gbc.readMem(0xdab7));
        // CB 5D 0145
        gbc.setState(0x4564, 0x383b, 0x930, 0x4c88, 0xeb5b, 0xf123, 0x1, 0x0);
        gbc.writeMem(0x4564, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x383b, gbc.sp());
        EXPECT(0x4566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0146
        gbc.setState(0x359b, 0xaef5, 0x9e20, 0x2188, 0x79c2, 0x3fb0, 0x0, 0x0);
        gbc.writeMem(0x359b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaef5, gbc.sp());
        EXPECT(0x359d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0148
        gbc.setState(0x244e, 0x99e5, 0xbd40, 0x5f0d, 0x900d, 0x69ca, 0x0, 0x0);
        gbc.writeMem(0x244e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x99e5, gbc.sp());
        EXPECT(0x2450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0149
        gbc.setState(0xd5d7, 0xdf5b, 0xd2d0, 0xeb83, 0xbd8a, 0xd6b2, 0x1, 0x1);
        gbc.writeMem(0xd5d7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdf5b, gbc.sp());
        EXPECT(0xd5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d7));
        EXPECT(0x5d, gbc.readMem(0xd5d8));
        // CB 5D 014B
        gbc.setState(0x6635, 0xf78d, 0xe9c0, 0xa201, 0xf0ba, 0xa2ef, 0x1, 0x1);
        gbc.writeMem(0x6635, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf78d, gbc.sp());
        EXPECT(0x6637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 014C
        gbc.setState(0xb665, 0x4d22, 0xd280, 0x49b8, 0x5336, 0xaa4, 0x1, 0x0);
        gbc.writeMem(0xb665, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4d22, gbc.sp());
        EXPECT(0xb667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb665));
        EXPECT(0x5d, gbc.readMem(0xb666));
        // CB 5D 014D
        gbc.setState(0x6d94, 0x92a5, 0x6da0, 0xc2b0, 0xac77, 0x75ce, 0x0, 0x1);
        gbc.writeMem(0x6d94, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x92a5, gbc.sp());
        EXPECT(0x6d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 014E
        gbc.setState(0x9bef, 0x3de9, 0x7a10, 0x7de5, 0x7424, 0xda9b, 0x0, 0x0);
        gbc.writeMem(0x9bef, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3de9, gbc.sp());
        EXPECT(0x9bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bef));
        EXPECT(0x5d, gbc.readMem(0x9bf0));
        // CB 5D 014F
        gbc.setState(0x5d10, 0xba52, 0xca40, 0x3fd, 0x626d, 0x2181, 0x1, 0x1);
        gbc.writeMem(0x5d10, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xba52, gbc.sp());
        EXPECT(0x5d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0150
        gbc.setState(0x8026, 0xbeb7, 0x16e0, 0x323d, 0xa7ef, 0xa8b, 0x1, 0x1);
        gbc.writeMem(0x8026, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbeb7, gbc.sp());
        EXPECT(0x8028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8026));
        EXPECT(0x5d, gbc.readMem(0x8027));
        // CB 5D 0152
        gbc.setState(0x4538, 0x78d7, 0xbb0, 0xd2e2, 0x6c6f, 0xa04a, 0x1, 0x1);
        gbc.writeMem(0x4538, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x78d7, gbc.sp());
        EXPECT(0x453a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0154
        gbc.setState(0xaff4, 0xe8d8, 0x70d0, 0x5170, 0x12a5, 0x8f07, 0x0, 0x0);
        gbc.writeMem(0xaff4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe8d8, gbc.sp());
        EXPECT(0xaff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff4));
        EXPECT(0x5d, gbc.readMem(0xaff5));
        // CB 5D 0155
        gbc.setState(0x3553, 0xe59e, 0x8920, 0x9a7a, 0xdcbe, 0x4343, 0x1, 0x0);
        gbc.writeMem(0x3553, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe59e, gbc.sp());
        EXPECT(0x3555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0156
        gbc.setState(0x726e, 0x8d59, 0xdd0, 0x7502, 0xae2b, 0x586d, 0x0, 0x1);
        gbc.writeMem(0x726e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8d59, gbc.sp());
        EXPECT(0x7270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0157
        gbc.setState(0xb603, 0x1bf8, 0x3d90, 0xd4d4, 0x3349, 0xec15, 0x0, 0x1);
        gbc.writeMem(0xb603, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1bf8, gbc.sp());
        EXPECT(0xb605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb603));
        EXPECT(0x5d, gbc.readMem(0xb604));
        // CB 5D 0158
        gbc.setState(0x352, 0x751, 0xa30, 0xb1da, 0x9098, 0x61d1, 0x0, 0x0);
        gbc.writeMem(0x352, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x751, gbc.sp());
        EXPECT(0x354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0159
        gbc.setState(0x31ba, 0xec5c, 0xfdd0, 0x2a2d, 0x4bdb, 0x5947, 0x0, 0x1);
        gbc.writeMem(0x31ba, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xec5c, gbc.sp());
        EXPECT(0x31bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 015A
        gbc.setState(0x719f, 0x5ee4, 0xf9b0, 0x60e9, 0xde03, 0xd403, 0x1, 0x0);
        gbc.writeMem(0x719f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5ee4, gbc.sp());
        EXPECT(0x71a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 015B
        gbc.setState(0x672f, 0x2e5c, 0xb860, 0xbd6c, 0x2fc8, 0xc145, 0x1, 0x1);
        gbc.writeMem(0x672f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2e5c, gbc.sp());
        EXPECT(0x6731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 015C
        gbc.setState(0x3494, 0xa455, 0x4150, 0xb232, 0x7251, 0xbcf5, 0x0, 0x0);
        gbc.writeMem(0x3494, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa455, gbc.sp());
        EXPECT(0x3496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 015D
        gbc.setState(0x504a, 0x3d65, 0x71f0, 0xbd84, 0x5af6, 0xbf15, 0x1, 0x1);
        gbc.writeMem(0x504a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3d65, gbc.sp());
        EXPECT(0x504c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 015E
        gbc.setState(0x7da1, 0xcbc9, 0x9bf0, 0x8e84, 0x3dec, 0xb8d0, 0x1, 0x1);
        gbc.writeMem(0x7da1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcbc9, gbc.sp());
        EXPECT(0x7da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 015F
        gbc.setState(0x7268, 0x72d, 0xc850, 0xa840, 0x219c, 0x4581, 0x0, 0x0);
        gbc.writeMem(0x7268, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x72d, gbc.sp());
        EXPECT(0x726a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0160
        gbc.setState(0x40b9, 0x3ef0, 0xf750, 0x8391, 0xf929, 0x1036, 0x1, 0x1);
        gbc.writeMem(0x40b9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3ef0, gbc.sp());
        EXPECT(0x40bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0161
        gbc.setState(0xe6a8, 0x12c6, 0xb1f0, 0x2610, 0xb228, 0xd199, 0x0, 0x1);
        gbc.writeMem(0xe6a8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x12c6, gbc.sp());
        EXPECT(0xe6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a8));
        EXPECT(0x5d, gbc.readMem(0xe6a9));
        // CB 5D 0162
        gbc.setState(0x6d37, 0x4c10, 0xff20, 0xdb3d, 0x415, 0xcf8, 0x1, 0x1);
        gbc.writeMem(0x6d37, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4c10, gbc.sp());
        EXPECT(0x6d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0163
        gbc.setState(0x635, 0x35a3, 0x36e0, 0xfbf2, 0x1e38, 0x85ec, 0x0, 0x1);
        gbc.writeMem(0x635, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x35a3, gbc.sp());
        EXPECT(0x637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0164
        gbc.setState(0xe8ba, 0xe75, 0x6bc0, 0x9a2d, 0x6b07, 0x4126, 0x0, 0x0);
        gbc.writeMem(0xe8ba, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe75, gbc.sp());
        EXPECT(0xe8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ba));
        EXPECT(0x5d, gbc.readMem(0xe8bb));
        // CB 5D 0165
        gbc.setState(0x4a12, 0x8dfd, 0x80c0, 0x3d48, 0x8a22, 0x3b55, 0x1, 0x0);
        gbc.writeMem(0x4a12, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8dfd, gbc.sp());
        EXPECT(0x4a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0166
        gbc.setState(0x4eb, 0x900e, 0xb550, 0x3a2, 0xb02, 0x9b3d, 0x1, 0x1);
        gbc.writeMem(0x4eb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x900e, gbc.sp());
        EXPECT(0x4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0167
        gbc.setState(0xc028, 0xcd92, 0x2b30, 0x55f0, 0xe564, 0xc38a, 0x0, 0x0);
        gbc.writeMem(0xc028, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcd92, gbc.sp());
        EXPECT(0xc02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc028));
        EXPECT(0x5d, gbc.readMem(0xc029));
        // CB 5D 0168
        gbc.setState(0x4d98, 0x5aa7, 0x8140, 0x7773, 0x5e5d, 0xcc25, 0x0, 0x0);
        gbc.writeMem(0x4d98, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5aa7, gbc.sp());
        EXPECT(0x4d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 016A
        gbc.setState(0xc5ea, 0x6c41, 0xd810, 0x16f3, 0x75f1, 0x3f2c, 0x1, 0x0);
        gbc.writeMem(0xc5ea, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6c41, gbc.sp());
        EXPECT(0xc5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ea));
        EXPECT(0x5d, gbc.readMem(0xc5eb));
        // CB 5D 016B
        gbc.setState(0xc9ad, 0x3711, 0xab60, 0x8373, 0xa27a, 0xd8ff, 0x0, 0x1);
        gbc.writeMem(0xc9ad, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3711, gbc.sp());
        EXPECT(0xc9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ad));
        EXPECT(0x5d, gbc.readMem(0xc9ae));
        // CB 5D 016D
        gbc.setState(0xd607, 0xf687, 0xb380, 0xfc77, 0x1ee1, 0x1fa5, 0x1, 0x0);
        gbc.writeMem(0xd607, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf687, gbc.sp());
        EXPECT(0xd609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd607));
        EXPECT(0x5d, gbc.readMem(0xd608));
        // CB 5D 016E
        gbc.setState(0x5b38, 0xd623, 0x83b0, 0x378, 0x6c55, 0xc533, 0x0, 0x1);
        gbc.writeMem(0x5b38, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd623, gbc.sp());
        EXPECT(0x5b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 016F
        gbc.setState(0xbb2b, 0x2a33, 0xc530, 0xbbd2, 0x50a7, 0x8b1a, 0x1, 0x0);
        gbc.writeMem(0xbb2b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2a33, gbc.sp());
        EXPECT(0xbb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2b));
        EXPECT(0x5d, gbc.readMem(0xbb2c));
        // CB 5D 0170
        gbc.setState(0x4d6c, 0x7e52, 0xa320, 0x8f99, 0x707f, 0x11c0, 0x1, 0x0);
        gbc.writeMem(0x4d6c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7e52, gbc.sp());
        EXPECT(0x4d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0172
        gbc.setState(0xde4a, 0xf042, 0x3030, 0xd793, 0xb964, 0x7b76, 0x0, 0x1);
        gbc.writeMem(0xde4a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf042, gbc.sp());
        EXPECT(0xde4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4a));
        EXPECT(0x5d, gbc.readMem(0xde4b));
        // CB 5D 0173
        gbc.setState(0xca64, 0x6c6b, 0xfc10, 0xa0cd, 0xdac8, 0x1299, 0x0, 0x1);
        gbc.writeMem(0xca64, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6c6b, gbc.sp());
        EXPECT(0xca66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca64));
        EXPECT(0x5d, gbc.readMem(0xca65));
        // CB 5D 0174
        gbc.setState(0x8df0, 0x8f94, 0xa480, 0x319f, 0x6196, 0x94a0, 0x1, 0x0);
        gbc.writeMem(0x8df0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8f94, gbc.sp());
        EXPECT(0x8df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df0));
        EXPECT(0x5d, gbc.readMem(0x8df1));
        // CB 5D 0175
        gbc.setState(0xdb81, 0x7bfc, 0x92b0, 0xa051, 0x12cc, 0x2ce1, 0x1, 0x1);
        gbc.writeMem(0xdb81, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7bfc, gbc.sp());
        EXPECT(0xdb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb81));
        EXPECT(0x5d, gbc.readMem(0xdb82));
        // CB 5D 0176
        gbc.setState(0x82c5, 0xe5a, 0xf910, 0x6e39, 0x946, 0x90bd, 0x0, 0x0);
        gbc.writeMem(0x82c5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe5a, gbc.sp());
        EXPECT(0x82c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c5));
        EXPECT(0x5d, gbc.readMem(0x82c6));
        // CB 5D 0177
        gbc.setState(0x2f2b, 0x209f, 0xc340, 0xff91, 0x8912, 0x15b6, 0x0, 0x1);
        gbc.writeMem(0x2f2b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x209f, gbc.sp());
        EXPECT(0x2f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0178
        gbc.setState(0x7317, 0x13b0, 0x5880, 0xd900, 0x213a, 0x1ada, 0x0, 0x1);
        gbc.writeMem(0x7317, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x13b0, gbc.sp());
        EXPECT(0x7319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0179
        gbc.setState(0x7512, 0x6c8, 0x4b70, 0xd0eb, 0xbe59, 0xae5, 0x0, 0x1);
        gbc.writeMem(0x7512, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6c8, gbc.sp());
        EXPECT(0x7514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 017A
        gbc.setState(0xb143, 0x1a1f, 0x6d50, 0x99b8, 0x1be7, 0xb5cb, 0x0, 0x0);
        gbc.writeMem(0xb143, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1a1f, gbc.sp());
        EXPECT(0xb145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb143));
        EXPECT(0x5d, gbc.readMem(0xb144));
        // CB 5D 017B
        gbc.setState(0x5199, 0xff66, 0x6950, 0x5598, 0x448f, 0xf509, 0x0, 0x0);
        gbc.writeMem(0x5199, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xff66, gbc.sp());
        EXPECT(0x519b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 017C
        gbc.setState(0xa990, 0x9172, 0x9560, 0x303, 0x302b, 0x8f02, 0x0, 0x1);
        gbc.writeMem(0xa990, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9172, gbc.sp());
        EXPECT(0xa992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa990));
        EXPECT(0x5d, gbc.readMem(0xa991));
        // CB 5D 017D
        gbc.setState(0x391a, 0xe492, 0x3850, 0x7a01, 0x6d93, 0xc10, 0x1, 0x0);
        gbc.writeMem(0x391a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe492, gbc.sp());
        EXPECT(0x391c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 017E
        gbc.setState(0xdab8, 0xd17, 0xc740, 0xeea2, 0xe001, 0xcfd7, 0x1, 0x0);
        gbc.writeMem(0xdab8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd17, gbc.sp());
        EXPECT(0xdaba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab8));
        EXPECT(0x5d, gbc.readMem(0xdab9));
        // CB 5D 017F
        gbc.setState(0xaabf, 0x95a5, 0x500, 0x235c, 0x8c80, 0x1cd3, 0x1, 0x1);
        gbc.writeMem(0xaabf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x95a5, gbc.sp());
        EXPECT(0xaac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabf));
        EXPECT(0x5d, gbc.readMem(0xaac0));
        // CB 5D 0180
        gbc.setState(0xa0e1, 0xb859, 0xa370, 0x17fa, 0x573, 0x2f75, 0x1, 0x0);
        gbc.writeMem(0xa0e1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb859, gbc.sp());
        EXPECT(0xa0e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e1));
        EXPECT(0x5d, gbc.readMem(0xa0e2));
        // CB 5D 0181
        gbc.setState(0xd97f, 0x4e5d, 0xca60, 0xe565, 0x12c, 0x607e, 0x0, 0x0);
        gbc.writeMem(0xd97f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4e5d, gbc.sp());
        EXPECT(0xd981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97f));
        EXPECT(0x5d, gbc.readMem(0xd980));
        // CB 5D 0182
        gbc.setState(0x2d04, 0xdde5, 0x4770, 0x21b9, 0x5012, 0x7f91, 0x1, 0x1);
        gbc.writeMem(0x2d04, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdde5, gbc.sp());
        EXPECT(0x2d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0183
        gbc.setState(0x485f, 0x7fef, 0xf9d0, 0x89be, 0x7d70, 0xd8d5, 0x0, 0x1);
        gbc.writeMem(0x485f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7fef, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0184
        gbc.setState(0x90be, 0x9108, 0xf6a0, 0x6420, 0xdf9c, 0x666c, 0x1, 0x1);
        gbc.writeMem(0x90be, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9108, gbc.sp());
        EXPECT(0x90c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90be));
        EXPECT(0x5d, gbc.readMem(0x90bf));
        // CB 5D 0185
        gbc.setState(0x4df7, 0xc29c, 0xd530, 0xd6ac, 0xa4be, 0x2b2a, 0x0, 0x1);
        gbc.writeMem(0x4df7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc29c, gbc.sp());
        EXPECT(0x4df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0186
        gbc.setState(0x1239, 0x77f8, 0x3a90, 0x16af, 0xbad4, 0x92cf, 0x1, 0x1);
        gbc.writeMem(0x1239, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x77f8, gbc.sp());
        EXPECT(0x123b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0187
        gbc.setState(0x120e, 0xd4f8, 0x82e0, 0x887c, 0x6277, 0xbb81, 0x0, 0x1);
        gbc.writeMem(0x120e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd4f8, gbc.sp());
        EXPECT(0x1210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0188
        gbc.setState(0xaccb, 0x7f5b, 0x8150, 0x7adf, 0x8689, 0x77c0, 0x0, 0x0);
        gbc.writeMem(0xaccb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7f5b, gbc.sp());
        EXPECT(0xaccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaccb));
        EXPECT(0x5d, gbc.readMem(0xaccc));
        // CB 5D 0189
        gbc.setState(0x42d3, 0x22c2, 0x5fe0, 0xe58, 0xee2e, 0x1a9, 0x1, 0x0);
        gbc.writeMem(0x42d3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x22c2, gbc.sp());
        EXPECT(0x42d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 018A
        gbc.setState(0x7ff, 0xb9cb, 0x74c0, 0x27df, 0x2799, 0x7627, 0x1, 0x0);
        gbc.writeMem(0x7ff, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb9cb, gbc.sp());
        EXPECT(0x801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 018C
        gbc.setState(0xc161, 0x507d, 0x770, 0xf12f, 0x84e1, 0x204f, 0x0, 0x1);
        gbc.writeMem(0xc161, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x507d, gbc.sp());
        EXPECT(0xc163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc161));
        EXPECT(0x5d, gbc.readMem(0xc162));
        // CB 5D 018D
        gbc.setState(0x74e7, 0x4cd0, 0x1000, 0xc19, 0x277, 0xdea9, 0x0, 0x0);
        gbc.writeMem(0x74e7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4cd0, gbc.sp());
        EXPECT(0x74e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 018E
        gbc.setState(0x4fbd, 0x87d2, 0x2ba0, 0xa42d, 0x1d3d, 0xc9ed, 0x0, 0x1);
        gbc.writeMem(0x4fbd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x87d2, gbc.sp());
        EXPECT(0x4fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 018F
        gbc.setState(0x458e, 0xcd17, 0xcd00, 0x4417, 0xfa42, 0x904, 0x1, 0x0);
        gbc.writeMem(0x458e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcd17, gbc.sp());
        EXPECT(0x4590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0190
        gbc.setState(0xd7d2, 0xd1d9, 0xbb90, 0x19f2, 0x1d9a, 0x7d78, 0x0, 0x0);
        gbc.writeMem(0xd7d2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd1d9, gbc.sp());
        EXPECT(0xd7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d2));
        EXPECT(0x5d, gbc.readMem(0xd7d3));
        // CB 5D 0191
        gbc.setState(0x5787, 0x4179, 0xfd20, 0xdce6, 0xe50e, 0x869, 0x1, 0x1);
        gbc.writeMem(0x5787, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4179, gbc.sp());
        EXPECT(0x5789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0192
        gbc.setState(0xd94b, 0xa811, 0xb920, 0xbe60, 0x80b3, 0xacd9, 0x0, 0x1);
        gbc.writeMem(0xd94b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa811, gbc.sp());
        EXPECT(0xd94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94b));
        EXPECT(0x5d, gbc.readMem(0xd94c));
        // CB 5D 0193
        gbc.setState(0x3f95, 0x496, 0xf180, 0xdc2d, 0x9c2, 0xb44e, 0x1, 0x1);
        gbc.writeMem(0x3f95, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x496, gbc.sp());
        EXPECT(0x3f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0194
        gbc.setState(0x3072, 0x8681, 0xce50, 0xb86f, 0x31d8, 0x3cb5, 0x0, 0x0);
        gbc.writeMem(0x3072, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8681, gbc.sp());
        EXPECT(0x3074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0195
        gbc.setState(0xeec2, 0x6cb5, 0xed50, 0x7c40, 0x746d, 0x48f5, 0x1, 0x0);
        gbc.writeMem(0xeec2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6cb5, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec2));
        EXPECT(0x5d, gbc.readMem(0xeec3));
        // CB 5D 0196
        gbc.setState(0xcc99, 0x29ee, 0xdd70, 0x6eec, 0x3aa3, 0xda3c, 0x0, 0x0);
        gbc.writeMem(0xcc99, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x29ee, gbc.sp());
        EXPECT(0xcc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc99));
        EXPECT(0x5d, gbc.readMem(0xcc9a));
        // CB 5D 0197
        gbc.setState(0xe629, 0xc78e, 0x1410, 0xa832, 0xb1e9, 0x46f2, 0x1, 0x1);
        gbc.writeMem(0xe629, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc78e, gbc.sp());
        EXPECT(0xe62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe629));
        EXPECT(0x5d, gbc.readMem(0xe62a));
        // CB 5D 0198
        gbc.setState(0x72e4, 0x800c, 0x3c20, 0xd319, 0x1a30, 0x746f, 0x0, 0x1);
        gbc.writeMem(0x72e4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x800c, gbc.sp());
        EXPECT(0x72e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0199
        gbc.setState(0x959, 0x4524, 0x7610, 0xa7c3, 0xa523, 0xf21a, 0x1, 0x1);
        gbc.writeMem(0x959, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4524, gbc.sp());
        EXPECT(0x95b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 019A
        gbc.setState(0xeca8, 0xce33, 0xeb70, 0xb4c3, 0x891e, 0x3767, 0x0, 0x1);
        gbc.writeMem(0xeca8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xce33, gbc.sp());
        EXPECT(0xecaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca8));
        EXPECT(0x5d, gbc.readMem(0xeca9));
        // CB 5D 019B
        gbc.setState(0xca77, 0xc720, 0x1c20, 0xe275, 0xacc3, 0x2413, 0x0, 0x1);
        gbc.writeMem(0xca77, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc720, gbc.sp());
        EXPECT(0xca79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca77));
        EXPECT(0x5d, gbc.readMem(0xca78));
        // CB 5D 019C
        gbc.setState(0x492a, 0xc56b, 0x7150, 0x8a07, 0x58d4, 0xd5c0, 0x0, 0x0);
        gbc.writeMem(0x492a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc56b, gbc.sp());
        EXPECT(0x492c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 019D
        gbc.setState(0xbcdd, 0x6c61, 0xd9d0, 0x29d5, 0x12a2, 0x988, 0x1, 0x0);
        gbc.writeMem(0xbcdd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6c61, gbc.sp());
        EXPECT(0xbcdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdd));
        EXPECT(0x5d, gbc.readMem(0xbcde));
        // CB 5D 019E
        gbc.setState(0xec00, 0x8358, 0xc320, 0xfd4, 0x1365, 0x336a, 0x0, 0x1);
        gbc.writeMem(0xec00, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8358, gbc.sp());
        EXPECT(0xec02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec00));
        EXPECT(0x5d, gbc.readMem(0xec01));
        // CB 5D 019F
        gbc.setState(0xbed8, 0xaafb, 0x7270, 0xc4d7, 0x4cdc, 0xad97, 0x1, 0x0);
        gbc.writeMem(0xbed8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaafb, gbc.sp());
        EXPECT(0xbeda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed8));
        EXPECT(0x5d, gbc.readMem(0xbed9));
        // CB 5D 01A0
        gbc.setState(0xd9d4, 0xe4b0, 0x67f0, 0xae09, 0x97db, 0xd38f, 0x0, 0x1);
        gbc.writeMem(0xd9d4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe4b0, gbc.sp());
        EXPECT(0xd9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d4));
        EXPECT(0x5d, gbc.readMem(0xd9d5));
        // CB 5D 01A1
        gbc.setState(0x8222, 0xcd5f, 0xda50, 0x42cf, 0xb791, 0xe298, 0x1, 0x1);
        gbc.writeMem(0x8222, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcd5f, gbc.sp());
        EXPECT(0x8224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8222));
        EXPECT(0x5d, gbc.readMem(0x8223));
        // CB 5D 01A2
        gbc.setState(0xd38d, 0xfa1b, 0x9d20, 0xe741, 0x6f1f, 0x6bc0, 0x0, 0x1);
        gbc.writeMem(0xd38d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfa1b, gbc.sp());
        EXPECT(0xd38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38d));
        EXPECT(0x5d, gbc.readMem(0xd38e));
        // CB 5D 01A3
        gbc.setState(0xc8cf, 0xad53, 0x9430, 0xfd07, 0x16e, 0xa53b, 0x0, 0x1);
        gbc.writeMem(0xc8cf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xad53, gbc.sp());
        EXPECT(0xc8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cf));
        EXPECT(0x5d, gbc.readMem(0xc8d0));
        // CB 5D 01A5
        gbc.setState(0x8295, 0xbec4, 0xdb00, 0xb6db, 0x9a92, 0xdf2c, 0x1, 0x1);
        gbc.writeMem(0x8295, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbec4, gbc.sp());
        EXPECT(0x8297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8295));
        EXPECT(0x5d, gbc.readMem(0x8296));
        // CB 5D 01A6
        gbc.setState(0xb07, 0x586c, 0x90f0, 0x3c59, 0x827d, 0xcfb5, 0x0, 0x1);
        gbc.writeMem(0xb07, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x586c, gbc.sp());
        EXPECT(0xb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01A7
        gbc.setState(0x5553, 0xfeef, 0x4780, 0xa041, 0x63ab, 0x346d, 0x0, 0x0);
        gbc.writeMem(0x5553, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfeef, gbc.sp());
        EXPECT(0x5555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01A8
        gbc.setState(0x16a0, 0x338b, 0x53a0, 0x59e2, 0x724f, 0x1cf5, 0x1, 0x1);
        gbc.writeMem(0x16a0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x338b, gbc.sp());
        EXPECT(0x16a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01A9
        gbc.setState(0xbb95, 0x7e5e, 0x38d0, 0xafec, 0x63f3, 0x9230, 0x1, 0x0);
        gbc.writeMem(0xbb95, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7e5e, gbc.sp());
        EXPECT(0xbb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb95));
        EXPECT(0x5d, gbc.readMem(0xbb96));
        // CB 5D 01AA
        gbc.setState(0xb014, 0xabfd, 0xad0, 0x1106, 0x7c1b, 0xbb67, 0x0, 0x0);
        gbc.writeMem(0xb014, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xabfd, gbc.sp());
        EXPECT(0xb016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb014));
        EXPECT(0x5d, gbc.readMem(0xb015));
        // CB 5D 01AC
        gbc.setState(0x553d, 0x6190, 0x9500, 0x35a9, 0xb5a0, 0xb901, 0x0, 0x0);
        gbc.writeMem(0x553d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6190, gbc.sp());
        EXPECT(0x553f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01AD
        gbc.setState(0x6598, 0xa525, 0xc300, 0xae62, 0x1fee, 0xd898, 0x0, 0x0);
        gbc.writeMem(0x6598, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa525, gbc.sp());
        EXPECT(0x659a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01AE
        gbc.setState(0x4f3e, 0x85d5, 0x8510, 0xa6e8, 0x539a, 0x5786, 0x1, 0x1);
        gbc.writeMem(0x4f3e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x85d5, gbc.sp());
        EXPECT(0x4f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01AF
        gbc.setState(0xc323, 0x13ce, 0x74d0, 0xebe, 0x18eb, 0xf183, 0x0, 0x1);
        gbc.writeMem(0xc323, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x13ce, gbc.sp());
        EXPECT(0xc325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc323));
        EXPECT(0x5d, gbc.readMem(0xc324));
        // CB 5D 01B0
        gbc.setState(0xc832, 0x26c6, 0x1d50, 0x2727, 0x9f20, 0x1a17, 0x1, 0x0);
        gbc.writeMem(0xc832, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x26c6, gbc.sp());
        EXPECT(0xc834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc832));
        EXPECT(0x5d, gbc.readMem(0xc833));
        // CB 5D 01B1
        gbc.setState(0xa352, 0xe2e, 0x7e90, 0x5a9c, 0xe7a8, 0xa95b, 0x0, 0x0);
        gbc.writeMem(0xa352, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe2e, gbc.sp());
        EXPECT(0xa354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa352));
        EXPECT(0x5d, gbc.readMem(0xa353));
        // CB 5D 01B2
        gbc.setState(0x1844, 0x3e21, 0x5f0, 0x3a4d, 0x605, 0xab69, 0x0, 0x0);
        gbc.writeMem(0x1844, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3e21, gbc.sp());
        EXPECT(0x1846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01B3
        gbc.setState(0xead8, 0xafc0, 0xf490, 0xaf4d, 0x6a70, 0xb0db, 0x0, 0x1);
        gbc.writeMem(0xead8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xafc0, gbc.sp());
        EXPECT(0xeada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead8));
        EXPECT(0x5d, gbc.readMem(0xead9));
        // CB 5D 01B4
        gbc.setState(0x3a3a, 0xbab, 0x3ba0, 0xf1a8, 0x969f, 0x2de6, 0x1, 0x1);
        gbc.writeMem(0x3a3a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbab, gbc.sp());
        EXPECT(0x3a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01B5
        gbc.setState(0x27a5, 0xee8d, 0xfb50, 0xa692, 0x6538, 0x58ab, 0x0, 0x0);
        gbc.writeMem(0x27a5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xee8d, gbc.sp());
        EXPECT(0x27a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01B6
        gbc.setState(0xf53, 0x7614, 0x1a50, 0x231e, 0x1c1f, 0x91ee, 0x1, 0x1);
        gbc.writeMem(0xf53, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7614, gbc.sp());
        EXPECT(0xf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01B7
        gbc.setState(0x75d2, 0x5c4b, 0x8e50, 0x64df, 0x6b15, 0xd7f2, 0x0, 0x1);
        gbc.writeMem(0x75d2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5c4b, gbc.sp());
        EXPECT(0x75d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01B8
        gbc.setState(0x72, 0x837, 0x5120, 0x746b, 0x1802, 0x506, 0x0, 0x0);
        gbc.writeMem(0x72, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x837, gbc.sp());
        EXPECT(0x74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01B9
        gbc.setState(0x8172, 0xe085, 0xbc70, 0x9252, 0x29d8, 0x6326, 0x1, 0x1);
        gbc.writeMem(0x8172, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe085, gbc.sp());
        EXPECT(0x8174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8172));
        EXPECT(0x5d, gbc.readMem(0x8173));
        // CB 5D 01BA
        gbc.setState(0x8b33, 0xa261, 0x9ee0, 0x723d, 0x6521, 0x3126, 0x1, 0x0);
        gbc.writeMem(0x8b33, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa261, gbc.sp());
        EXPECT(0x8b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b33));
        EXPECT(0x5d, gbc.readMem(0x8b34));
        // CB 5D 01BB
        gbc.setState(0xd908, 0x251d, 0xd770, 0x226a, 0x5a10, 0x8c98, 0x0, 0x0);
        gbc.writeMem(0xd908, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x251d, gbc.sp());
        EXPECT(0xd90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd908));
        EXPECT(0x5d, gbc.readMem(0xd909));
        // CB 5D 01BC
        gbc.setState(0x6345, 0x188a, 0x1a40, 0xdbea, 0x44c7, 0xd833, 0x1, 0x0);
        gbc.writeMem(0x6345, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x188a, gbc.sp());
        EXPECT(0x6347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01BD
        gbc.setState(0xe84b, 0x16c1, 0x5590, 0x6ed5, 0xf0fe, 0xb9d9, 0x1, 0x1);
        gbc.writeMem(0xe84b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x16c1, gbc.sp());
        EXPECT(0xe84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe84b));
        EXPECT(0x5d, gbc.readMem(0xe84c));
        // CB 5D 01BE
        gbc.setState(0x2694, 0x903c, 0x8820, 0x1517, 0x6fb7, 0x2b7c, 0x0, 0x0);
        gbc.writeMem(0x2694, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x903c, gbc.sp());
        EXPECT(0x2696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01BF
        gbc.setState(0x9234, 0xd826, 0x7760, 0xb42e, 0xf61d, 0x51f4, 0x1, 0x0);
        gbc.writeMem(0x9234, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd826, gbc.sp());
        EXPECT(0x9236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9234));
        EXPECT(0x5d, gbc.readMem(0x9235));
        // CB 5D 01C0
        gbc.setState(0xe259, 0xe1e4, 0x2650, 0xd526, 0x328e, 0x2a1b, 0x0, 0x1);
        gbc.writeMem(0xe259, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe1e4, gbc.sp());
        EXPECT(0xe25b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe259));
        EXPECT(0x5d, gbc.readMem(0xe25a));
        // CB 5D 01C1
        gbc.setState(0xc172, 0xccec, 0x2f0, 0x4049, 0x29e7, 0x3599, 0x0, 0x0);
        gbc.writeMem(0xc172, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xccec, gbc.sp());
        EXPECT(0xc174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc172));
        EXPECT(0x5d, gbc.readMem(0xc173));
        // CB 5D 01C2
        gbc.setState(0x8095, 0xa2e8, 0xee50, 0x4845, 0x41e0, 0x5e3e, 0x1, 0x1);
        gbc.writeMem(0x8095, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa2e8, gbc.sp());
        EXPECT(0x8097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8095));
        EXPECT(0x5d, gbc.readMem(0x8096));
        // CB 5D 01C3
        gbc.setState(0xbbf3, 0xab71, 0x6660, 0xa5c4, 0xeeb8, 0x8c84, 0x1, 0x1);
        gbc.writeMem(0xbbf3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xab71, gbc.sp());
        EXPECT(0xbbf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf3));
        EXPECT(0x5d, gbc.readMem(0xbbf4));
        // CB 5D 01C4
        gbc.setState(0x9319, 0x7f7a, 0x2370, 0x37d2, 0x9c08, 0x3eed, 0x0, 0x1);
        gbc.writeMem(0x9319, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7f7a, gbc.sp());
        EXPECT(0x931b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9319));
        EXPECT(0x5d, gbc.readMem(0x931a));
        // CB 5D 01C5
        gbc.setState(0x5607, 0x21f5, 0xbbb0, 0x8d3, 0xe7be, 0x7b9e, 0x1, 0x1);
        gbc.writeMem(0x5607, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x21f5, gbc.sp());
        EXPECT(0x5609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01C7
        gbc.setState(0xc367, 0x886c, 0x3b10, 0x74b2, 0x47a9, 0x248c, 0x1, 0x0);
        gbc.writeMem(0xc367, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x886c, gbc.sp());
        EXPECT(0xc369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc367));
        EXPECT(0x5d, gbc.readMem(0xc368));
        // CB 5D 01C8
        gbc.setState(0x881c, 0x98a3, 0x2b90, 0x321e, 0x6a4b, 0x53e6, 0x0, 0x1);
        gbc.writeMem(0x881c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x98a3, gbc.sp());
        EXPECT(0x881e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881c));
        EXPECT(0x5d, gbc.readMem(0x881d));
        // CB 5D 01C9
        gbc.setState(0x6d8e, 0xe4fa, 0xb2d0, 0xcfca, 0xc59e, 0x5495, 0x0, 0x1);
        gbc.writeMem(0x6d8e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe4fa, gbc.sp());
        EXPECT(0x6d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01CB
        gbc.setState(0x3870, 0xe728, 0x6630, 0xd925, 0x1387, 0x65ca, 0x0, 0x0);
        gbc.writeMem(0x3870, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe728, gbc.sp());
        EXPECT(0x3872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01CC
        gbc.setState(0x9735, 0xa722, 0x2610, 0xee8, 0x33c9, 0x23b7, 0x0, 0x1);
        gbc.writeMem(0x9735, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x9737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9735));
        EXPECT(0x5d, gbc.readMem(0x9736));
        // CB 5D 01CD
        gbc.setState(0xd502, 0xe1cb, 0xaa30, 0xe684, 0x9ef3, 0xb895, 0x1, 0x1);
        gbc.writeMem(0xd502, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe1cb, gbc.sp());
        EXPECT(0xd504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd502));
        EXPECT(0x5d, gbc.readMem(0xd503));
        // CB 5D 01CE
        gbc.setState(0x93f0, 0x5fd, 0x8c80, 0x2d07, 0x6e7d, 0x87bb, 0x1, 0x1);
        gbc.writeMem(0x93f0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5fd, gbc.sp());
        EXPECT(0x93f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f0));
        EXPECT(0x5d, gbc.readMem(0x93f1));
        // CB 5D 01CF
        gbc.setState(0x1d2b, 0x779a, 0x3830, 0x6632, 0x43d4, 0x308d, 0x1, 0x1);
        gbc.writeMem(0x1d2b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x779a, gbc.sp());
        EXPECT(0x1d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01D0
        gbc.setState(0x11f0, 0x1900, 0x4890, 0x3212, 0x4efb, 0x6633, 0x1, 0x1);
        gbc.writeMem(0x11f0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1900, gbc.sp());
        EXPECT(0x11f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01D1
        gbc.setState(0x35c5, 0xda39, 0x30, 0xdd90, 0x99f, 0x4a9a, 0x1, 0x1);
        gbc.writeMem(0x35c5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xda39, gbc.sp());
        EXPECT(0x35c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01D2
        gbc.setState(0x4c37, 0xe489, 0x8ad0, 0x4015, 0x791, 0x4994, 0x0, 0x0);
        gbc.writeMem(0x4c37, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe489, gbc.sp());
        EXPECT(0x4c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01D3
        gbc.setState(0x207b, 0x19d, 0xbfa0, 0x890d, 0x62f0, 0x5c36, 0x0, 0x0);
        gbc.writeMem(0x207b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x19d, gbc.sp());
        EXPECT(0x207d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01D4
        gbc.setState(0xd470, 0x4c1e, 0xbfd0, 0x4ece, 0x6643, 0x6c3b, 0x1, 0x1);
        gbc.writeMem(0xd470, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4c1e, gbc.sp());
        EXPECT(0xd472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd470));
        EXPECT(0x5d, gbc.readMem(0xd471));
        // CB 5D 01D5
        gbc.setState(0x543b, 0xa532, 0xd990, 0x4c5c, 0x17d9, 0x7a0f, 0x0, 0x1);
        gbc.writeMem(0x543b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa532, gbc.sp());
        EXPECT(0x543d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01D6
        gbc.setState(0x63a1, 0x79c, 0x6a00, 0x5620, 0xef55, 0x23e9, 0x0, 0x1);
        gbc.writeMem(0x63a1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x79c, gbc.sp());
        EXPECT(0x63a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01D7
        gbc.setState(0x5026, 0xd87f, 0xc590, 0x9c31, 0x6595, 0xc29b, 0x1, 0x1);
        gbc.writeMem(0x5026, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd87f, gbc.sp());
        EXPECT(0x5028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01D8
        gbc.setState(0x73c4, 0x12e, 0xc0e0, 0xbcb5, 0x8892, 0xd1e, 0x1, 0x1);
        gbc.writeMem(0x73c4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x12e, gbc.sp());
        EXPECT(0x73c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01D9
        gbc.setState(0x9a95, 0xec61, 0xe370, 0x9fec, 0x1d36, 0x3471, 0x0, 0x1);
        gbc.writeMem(0x9a95, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xec61, gbc.sp());
        EXPECT(0x9a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a95));
        EXPECT(0x5d, gbc.readMem(0x9a96));
        // CB 5D 01DA
        gbc.setState(0x5a33, 0xa57a, 0xa770, 0x7ba4, 0x5f9d, 0x9412, 0x1, 0x1);
        gbc.writeMem(0x5a33, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa57a, gbc.sp());
        EXPECT(0x5a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01DB
        gbc.setState(0x6723, 0x1172, 0xa2c0, 0x5645, 0x3a7c, 0xabad, 0x0, 0x0);
        gbc.writeMem(0x6723, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1172, gbc.sp());
        EXPECT(0x6725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01DD
        gbc.setState(0x58b5, 0x6611, 0x99e0, 0x71b9, 0xb0fe, 0xe045, 0x0, 0x1);
        gbc.writeMem(0x58b5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6611, gbc.sp());
        EXPECT(0x58b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01DE
        gbc.setState(0x68ce, 0x5b62, 0x6480, 0x9a37, 0xe0b4, 0x7352, 0x0, 0x1);
        gbc.writeMem(0x68ce, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5b62, gbc.sp());
        EXPECT(0x68d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01DF
        gbc.setState(0x6b2c, 0xab3f, 0x8bf0, 0xe283, 0xa0e4, 0xbbe7, 0x1, 0x1);
        gbc.writeMem(0x6b2c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xab3f, gbc.sp());
        EXPECT(0x6b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01E0
        gbc.setState(0xd220, 0x8076, 0xe5c0, 0x7664, 0xd25f, 0x5637, 0x1, 0x0);
        gbc.writeMem(0xd220, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8076, gbc.sp());
        EXPECT(0xd222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd220));
        EXPECT(0x5d, gbc.readMem(0xd221));
        // CB 5D 01E1
        gbc.setState(0x119a, 0xdd04, 0xc590, 0xe451, 0x42cd, 0xe95c, 0x1, 0x0);
        gbc.writeMem(0x119a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdd04, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01E2
        gbc.setState(0xdab8, 0xf284, 0x1ae0, 0xb6d7, 0xfdd6, 0x4e30, 0x0, 0x0);
        gbc.writeMem(0xdab8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf284, gbc.sp());
        EXPECT(0xdaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab8));
        EXPECT(0x5d, gbc.readMem(0xdab9));
        // CB 5D 01E3
        gbc.setState(0x2ab1, 0x3be0, 0x46c0, 0xd602, 0xcdf9, 0x930a, 0x0, 0x1);
        gbc.writeMem(0x2ab1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3be0, gbc.sp());
        EXPECT(0x2ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01E4
        gbc.setState(0x565, 0xf3a8, 0xd930, 0xc909, 0x5829, 0x6302, 0x0, 0x0);
        gbc.writeMem(0x565, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf3a8, gbc.sp());
        EXPECT(0x567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01E5
        gbc.setState(0xccd9, 0xe6ae, 0x9c40, 0xbd23, 0xbbda, 0xdaeb, 0x0, 0x1);
        gbc.writeMem(0xccd9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe6ae, gbc.sp());
        EXPECT(0xccdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd9));
        EXPECT(0x5d, gbc.readMem(0xccda));
        // CB 5D 01E6
        gbc.setState(0xa2a2, 0x4409, 0x6b0, 0xa197, 0xf8fb, 0xf0dc, 0x1, 0x1);
        gbc.writeMem(0xa2a2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4409, gbc.sp());
        EXPECT(0xa2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a2));
        EXPECT(0x5d, gbc.readMem(0xa2a3));
        // CB 5D 01E7
        gbc.setState(0x5ce, 0x2ec9, 0x8310, 0x51b6, 0xfb6d, 0x4226, 0x1, 0x0);
        gbc.writeMem(0x5ce, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2ec9, gbc.sp());
        EXPECT(0x5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01E8
        gbc.setState(0xb430, 0x367b, 0x9be0, 0xb47, 0x9701, 0x3d2d, 0x1, 0x1);
        gbc.writeMem(0xb430, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x367b, gbc.sp());
        EXPECT(0xb432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb430));
        EXPECT(0x5d, gbc.readMem(0xb431));
        // CB 5D 01E9
        gbc.setState(0x7f6a, 0x493b, 0x4870, 0x5139, 0x83ad, 0xbf86, 0x1, 0x0);
        gbc.writeMem(0x7f6a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x493b, gbc.sp());
        EXPECT(0x7f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01EA
        gbc.setState(0x7808, 0xb1e9, 0xdd00, 0xdaa8, 0x483b, 0xa3ee, 0x0, 0x0);
        gbc.writeMem(0x7808, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb1e9, gbc.sp());
        EXPECT(0x780a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01EB
        gbc.setState(0x556b, 0xb79, 0x9c40, 0x2786, 0xc746, 0x625e, 0x1, 0x1);
        gbc.writeMem(0x556b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb79, gbc.sp());
        EXPECT(0x556d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01EC
        gbc.setState(0x6b29, 0x79a3, 0x67e0, 0x1d25, 0x7acd, 0x2a89, 0x1, 0x0);
        gbc.writeMem(0x6b29, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x79a3, gbc.sp());
        EXPECT(0x6b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01ED
        gbc.setState(0xbe31, 0x4264, 0xe230, 0x6e08, 0xe1e0, 0xfe59, 0x0, 0x0);
        gbc.writeMem(0xbe31, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4264, gbc.sp());
        EXPECT(0xbe33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe31));
        EXPECT(0x5d, gbc.readMem(0xbe32));
        // CB 5D 01EE
        gbc.setState(0x4da, 0xd015, 0xac40, 0x2b4a, 0xfc5, 0xbff, 0x0, 0x0);
        gbc.writeMem(0x4da, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd015, gbc.sp());
        EXPECT(0x4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01EF
        gbc.setState(0xda37, 0x7a30, 0x9c90, 0xd5cd, 0x4b0a, 0x9eb3, 0x1, 0x1);
        gbc.writeMem(0xda37, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7a30, gbc.sp());
        EXPECT(0xda39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda37));
        EXPECT(0x5d, gbc.readMem(0xda38));
        // CB 5D 01F0
        gbc.setState(0xb740, 0x667c, 0x56e0, 0xaec3, 0x1579, 0x42d5, 0x1, 0x1);
        gbc.writeMem(0xb740, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x667c, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb740));
        EXPECT(0x5d, gbc.readMem(0xb741));
        // CB 5D 01F1
        gbc.setState(0xb200, 0x765, 0x5950, 0x23f5, 0x1b8, 0xc896, 0x1, 0x1);
        gbc.writeMem(0xb200, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x765, gbc.sp());
        EXPECT(0xb202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb200));
        EXPECT(0x5d, gbc.readMem(0xb201));
        // CB 5D 01F2
        gbc.setState(0xc27, 0x72b5, 0x1990, 0xaf5b, 0xff00, 0x3d72, 0x1, 0x1);
        gbc.writeMem(0xc27, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x72b5, gbc.sp());
        EXPECT(0xc29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 01F3
        gbc.setState(0xdb31, 0x3602, 0x1e80, 0xe5a0, 0xaee6, 0xbb40, 0x1, 0x1);
        gbc.writeMem(0xdb31, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3602, gbc.sp());
        EXPECT(0xdb33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb31));
        EXPECT(0x5d, gbc.readMem(0xdb32));
        // CB 5D 01F4
        gbc.setState(0xa33b, 0xe569, 0xbde0, 0xcb37, 0xff, 0x9edd, 0x0, 0x1);
        gbc.writeMem(0xa33b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe569, gbc.sp());
        EXPECT(0xa33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33b));
        EXPECT(0x5d, gbc.readMem(0xa33c));
        // CB 5D 01F5
        gbc.setState(0xbeb7, 0x135, 0xc60, 0x2501, 0x3091, 0x77ac, 0x1, 0x1);
        gbc.writeMem(0xbeb7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x135, gbc.sp());
        EXPECT(0xbeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb7));
        EXPECT(0x5d, gbc.readMem(0xbeb8));
        // CB 5D 01F6
        gbc.setState(0xbe, 0x7b0, 0xe5e0, 0xff60, 0x6db1, 0xb75d, 0x1, 0x1);
        gbc.writeMem(0xbe, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7b0, gbc.sp());
        EXPECT(0xc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01F7
        gbc.setState(0x9a16, 0xe0b7, 0x8e50, 0xe3a8, 0x99b0, 0x1f10, 0x0, 0x0);
        gbc.writeMem(0x9a16, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe0b7, gbc.sp());
        EXPECT(0x9a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a16));
        EXPECT(0x5d, gbc.readMem(0x9a17));
        // CB 5D 01F8
        gbc.setState(0xb463, 0x73d0, 0xed0, 0x7db5, 0x544, 0x527d, 0x0, 0x0);
        gbc.writeMem(0xb463, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x73d0, gbc.sp());
        EXPECT(0xb465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb463));
        EXPECT(0x5d, gbc.readMem(0xb464));
        // CB 5D 01F9
        gbc.setState(0xb147, 0x1fcf, 0xca90, 0xc033, 0xde2e, 0xe5bb, 0x1, 0x0);
        gbc.writeMem(0xb147, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1fcf, gbc.sp());
        EXPECT(0xb149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb147));
        EXPECT(0x5d, gbc.readMem(0xb148));
        // CB 5D 01FA
        gbc.setState(0x889f, 0x41b6, 0xd70, 0xa683, 0x46b0, 0x48eb, 0x1, 0x0);
        gbc.writeMem(0x889f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x41b6, gbc.sp());
        EXPECT(0x88a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889f));
        EXPECT(0x5d, gbc.readMem(0x88a0));
        // CB 5D 01FB
        gbc.setState(0x3051, 0xd6c9, 0xf40, 0x92ee, 0x25ea, 0x1436, 0x0, 0x0);
        gbc.writeMem(0x3051, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd6c9, gbc.sp());
        EXPECT(0x3053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01FC
        gbc.setState(0xc263, 0x3bfa, 0xa040, 0xe155, 0x6f2e, 0xaeb4, 0x1, 0x0);
        gbc.writeMem(0xc263, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3bfa, gbc.sp());
        EXPECT(0xc265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc263));
        EXPECT(0x5d, gbc.readMem(0xc264));
        // CB 5D 01FD
        gbc.setState(0x628c, 0x1e8e, 0xdae0, 0x1be0, 0x60df, 0xbb92, 0x1, 0x1);
        gbc.writeMem(0x628c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1e8e, gbc.sp());
        EXPECT(0x628e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01FE
        gbc.setState(0x2e39, 0xbc38, 0xba80, 0x8f24, 0xe394, 0x903a, 0x0, 0x0);
        gbc.writeMem(0x2e39, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbc38, gbc.sp());
        EXPECT(0x2e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 01FF
        gbc.setState(0x2a7f, 0xd94c, 0x220, 0xa20a, 0xf007, 0xa2f5, 0x1, 0x0);
        gbc.writeMem(0x2a7f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd94c, gbc.sp());
        EXPECT(0x2a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0200
        gbc.setState(0x7ebb, 0x1b9f, 0xf3b0, 0x782d, 0xc48e, 0x25b4, 0x0, 0x1);
        gbc.writeMem(0x7ebb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1b9f, gbc.sp());
        EXPECT(0x7ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0201
        gbc.setState(0xda7c, 0x5c99, 0x9570, 0x6e92, 0xa67a, 0x80d8, 0x1, 0x0);
        gbc.writeMem(0xda7c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5c99, gbc.sp());
        EXPECT(0xda7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7c));
        EXPECT(0x5d, gbc.readMem(0xda7d));
        // CB 5D 0202
        gbc.setState(0xe5f9, 0xcd99, 0x8ec0, 0xf311, 0xe1a7, 0xaf84, 0x1, 0x0);
        gbc.writeMem(0xe5f9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcd99, gbc.sp());
        EXPECT(0xe5fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f9));
        EXPECT(0x5d, gbc.readMem(0xe5fa));
        // CB 5D 0203
        gbc.setState(0x6aa, 0xbfa0, 0x7d80, 0xaf59, 0x6d7e, 0xc57c, 0x0, 0x0);
        gbc.writeMem(0x6aa, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbfa0, gbc.sp());
        EXPECT(0x6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0204
        gbc.setState(0xc854, 0x8d8b, 0x9390, 0x3d1d, 0xb493, 0x4a52, 0x1, 0x0);
        gbc.writeMem(0xc854, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8d8b, gbc.sp());
        EXPECT(0xc856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc854));
        EXPECT(0x5d, gbc.readMem(0xc855));
        // CB 5D 0205
        gbc.setState(0x5782, 0xcf5, 0x7420, 0xb7bc, 0x915c, 0x81fc, 0x0, 0x1);
        gbc.writeMem(0x5782, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcf5, gbc.sp());
        EXPECT(0x5784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0206
        gbc.setState(0x4982, 0x6e19, 0xb260, 0x2aa7, 0x867f, 0xf4ef, 0x0, 0x1);
        gbc.writeMem(0x4982, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6e19, gbc.sp());
        EXPECT(0x4984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0207
        gbc.setState(0x77e1, 0xf5ba, 0x2700, 0x6bd0, 0x34de, 0x410d, 0x1, 0x0);
        gbc.writeMem(0x77e1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf5ba, gbc.sp());
        EXPECT(0x77e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0209
        gbc.setState(0x4797, 0x317c, 0xc3b0, 0x6eb4, 0xf8a1, 0xe42, 0x1, 0x0);
        gbc.writeMem(0x4797, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x317c, gbc.sp());
        EXPECT(0x4799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 020A
        gbc.setState(0x5743, 0x7265, 0x12e0, 0x11ad, 0xf359, 0xcc2, 0x0, 0x1);
        gbc.writeMem(0x5743, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7265, gbc.sp());
        EXPECT(0x5745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 020B
        gbc.setState(0xb63e, 0x4381, 0x55d0, 0x24e3, 0x421e, 0xa75a, 0x0, 0x0);
        gbc.writeMem(0xb63e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4381, gbc.sp());
        EXPECT(0xb640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63e));
        EXPECT(0x5d, gbc.readMem(0xb63f));
        // CB 5D 020C
        gbc.setState(0x35f0, 0x167d, 0xc1a0, 0xbdbd, 0xc8f9, 0xc469, 0x0, 0x1);
        gbc.writeMem(0x35f0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x167d, gbc.sp());
        EXPECT(0x35f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 020D
        gbc.setState(0x37ee, 0xb8ef, 0x1470, 0x1675, 0xa485, 0x302f, 0x1, 0x1);
        gbc.writeMem(0x37ee, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb8ef, gbc.sp());
        EXPECT(0x37f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 020E
        gbc.setState(0xdc5c, 0x18b5, 0x3c0, 0x14ef, 0xd7a7, 0xcfa8, 0x0, 0x1);
        gbc.writeMem(0xdc5c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x18b5, gbc.sp());
        EXPECT(0xdc5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc5c));
        EXPECT(0x5d, gbc.readMem(0xdc5d));
        // CB 5D 020F
        gbc.setState(0x9914, 0x5f1f, 0xb890, 0xf24d, 0x9450, 0xe207, 0x0, 0x0);
        gbc.writeMem(0x9914, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5f1f, gbc.sp());
        EXPECT(0x9916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9914));
        EXPECT(0x5d, gbc.readMem(0x9915));
        // CB 5D 0210
        gbc.setState(0x8bd7, 0x3d50, 0x1f90, 0xcd4f, 0x57d6, 0xcabc, 0x1, 0x0);
        gbc.writeMem(0x8bd7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3d50, gbc.sp());
        EXPECT(0x8bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd7));
        EXPECT(0x5d, gbc.readMem(0x8bd8));
        // CB 5D 0211
        gbc.setState(0x4099, 0xecc1, 0xbf70, 0x47ef, 0x5535, 0x41c8, 0x1, 0x0);
        gbc.writeMem(0x4099, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xecc1, gbc.sp());
        EXPECT(0x409b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0212
        gbc.setState(0x27ff, 0xa8b8, 0xcc70, 0x40f4, 0x2ddf, 0x65b2, 0x1, 0x0);
        gbc.writeMem(0x27ff, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa8b8, gbc.sp());
        EXPECT(0x2801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0213
        gbc.setState(0x3b45, 0x7bd8, 0x74d0, 0x20f5, 0xc9d1, 0x82f7, 0x0, 0x1);
        gbc.writeMem(0x3b45, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7bd8, gbc.sp());
        EXPECT(0x3b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0214
        gbc.setState(0x5c4c, 0x7fb2, 0xa4d0, 0x4ee2, 0xad00, 0x9462, 0x1, 0x0);
        gbc.writeMem(0x5c4c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7fb2, gbc.sp());
        EXPECT(0x5c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0215
        gbc.setState(0xb245, 0x820c, 0x6050, 0x1e3b, 0x596, 0xffb7, 0x1, 0x0);
        gbc.writeMem(0xb245, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x820c, gbc.sp());
        EXPECT(0xb247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb245));
        EXPECT(0x5d, gbc.readMem(0xb246));
        // CB 5D 0216
        gbc.setState(0x9db, 0x10a4, 0x1ef0, 0xa6a9, 0x84e8, 0x78b6, 0x1, 0x0);
        gbc.writeMem(0x9db, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x10a4, gbc.sp());
        EXPECT(0x9dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0217
        gbc.setState(0x8408, 0xf25d, 0xefd0, 0xaacc, 0xd8e6, 0x38a3, 0x1, 0x1);
        gbc.writeMem(0x8408, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf25d, gbc.sp());
        EXPECT(0x840a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8408));
        EXPECT(0x5d, gbc.readMem(0x8409));
        // CB 5D 0218
        gbc.setState(0x3a74, 0xd664, 0x3d10, 0x4fca, 0x2b33, 0x8316, 0x0, 0x1);
        gbc.writeMem(0x3a74, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd664, gbc.sp());
        EXPECT(0x3a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0219
        gbc.setState(0x687f, 0x79a9, 0x8700, 0x9fc6, 0xcbaa, 0xe4c6, 0x1, 0x1);
        gbc.writeMem(0x687f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x79a9, gbc.sp());
        EXPECT(0x6881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 021A
        gbc.setState(0xa7, 0x22c3, 0x3ae0, 0xd9d9, 0xcac, 0x2220, 0x0, 0x1);
        gbc.writeMem(0xa7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x22c3, gbc.sp());
        EXPECT(0xa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 021B
        gbc.setState(0x447f, 0x7802, 0x7a80, 0xc97, 0x3944, 0xc785, 0x0, 0x0);
        gbc.writeMem(0x447f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7802, gbc.sp());
        EXPECT(0x4481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 021C
        gbc.setState(0x4996, 0xd783, 0x10c0, 0x6fc8, 0xef54, 0xe37c, 0x1, 0x0);
        gbc.writeMem(0x4996, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd783, gbc.sp());
        EXPECT(0x4998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 021D
        gbc.setState(0x2ee1, 0x40c2, 0xecf0, 0x951a, 0xa1bf, 0x72b8, 0x0, 0x1);
        gbc.writeMem(0x2ee1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x40c2, gbc.sp());
        EXPECT(0x2ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 021E
        gbc.setState(0x47dc, 0x5b89, 0x9640, 0x9b0c, 0x4613, 0xc401, 0x0, 0x0);
        gbc.writeMem(0x47dc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5b89, gbc.sp());
        EXPECT(0x47de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 021F
        gbc.setState(0xa8e7, 0x6883, 0xab50, 0xdb25, 0xb10b, 0x747b, 0x1, 0x1);
        gbc.writeMem(0xa8e7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6883, gbc.sp());
        EXPECT(0xa8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e7));
        EXPECT(0x5d, gbc.readMem(0xa8e8));
        // CB 5D 0220
        gbc.setState(0x43e7, 0x9e46, 0x4e80, 0xf74, 0xf73a, 0x3c2b, 0x1, 0x1);
        gbc.writeMem(0x43e7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9e46, gbc.sp());
        EXPECT(0x43e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0221
        gbc.setState(0xc77d, 0xc44, 0xb8d0, 0x1a55, 0x8320, 0x661e, 0x0, 0x1);
        gbc.writeMem(0xc77d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc44, gbc.sp());
        EXPECT(0xc77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77d));
        EXPECT(0x5d, gbc.readMem(0xc77e));
        // CB 5D 0222
        gbc.setState(0x24f0, 0xe92, 0xc50, 0xff74, 0xed4a, 0x1847, 0x1, 0x1);
        gbc.writeMem(0x24f0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe92, gbc.sp());
        EXPECT(0x24f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0223
        gbc.setState(0xcd46, 0x77e5, 0x1d90, 0x5657, 0xbf47, 0x621, 0x0, 0x1);
        gbc.writeMem(0xcd46, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x77e5, gbc.sp());
        EXPECT(0xcd48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd46));
        EXPECT(0x5d, gbc.readMem(0xcd47));
        // CB 5D 0224
        gbc.setState(0xd75c, 0x7ec3, 0x7110, 0x7b5e, 0xbd33, 0x66eb, 0x1, 0x0);
        gbc.writeMem(0xd75c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7ec3, gbc.sp());
        EXPECT(0xd75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75c));
        EXPECT(0x5d, gbc.readMem(0xd75d));
        // CB 5D 0225
        gbc.setState(0x54d0, 0xb5e5, 0xda0, 0xe222, 0xceec, 0x15a9, 0x0, 0x0);
        gbc.writeMem(0x54d0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb5e5, gbc.sp());
        EXPECT(0x54d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0226
        gbc.setState(0x1385, 0xcd8a, 0xd1a0, 0xc913, 0x160e, 0xe7c3, 0x1, 0x0);
        gbc.writeMem(0x1385, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcd8a, gbc.sp());
        EXPECT(0x1387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0227
        gbc.setState(0x427a, 0xbf5d, 0xa810, 0xf434, 0x120e, 0x6c04, 0x1, 0x1);
        gbc.writeMem(0x427a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbf5d, gbc.sp());
        EXPECT(0x427c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0228
        gbc.setState(0xd85a, 0x5273, 0xa6b0, 0x5e8a, 0xc966, 0x447b, 0x0, 0x1);
        gbc.writeMem(0xd85a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5273, gbc.sp());
        EXPECT(0xd85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85a));
        EXPECT(0x5d, gbc.readMem(0xd85b));
        // CB 5D 0229
        gbc.setState(0x8435, 0xa3af, 0xda40, 0x37a6, 0x7825, 0x6427, 0x1, 0x1);
        gbc.writeMem(0x8435, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa3af, gbc.sp());
        EXPECT(0x8437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8435));
        EXPECT(0x5d, gbc.readMem(0x8436));
        // CB 5D 022A
        gbc.setState(0xd1, 0x6bc6, 0x7f30, 0x15a8, 0x61e7, 0x26d1, 0x0, 0x1);
        gbc.writeMem(0xd1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6bc6, gbc.sp());
        EXPECT(0xd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 022B
        gbc.setState(0xdcc, 0x64aa, 0x4fb0, 0xde00, 0xeadb, 0xe9cc, 0x0, 0x1);
        gbc.writeMem(0xdcc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x64aa, gbc.sp());
        EXPECT(0xdce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 022C
        gbc.setState(0x7419, 0xc449, 0xd290, 0x6c7d, 0x4efb, 0x7820, 0x1, 0x1);
        gbc.writeMem(0x7419, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc449, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 022D
        gbc.setState(0xac6d, 0xe39a, 0xe2c0, 0x93eb, 0x7283, 0x3df7, 0x0, 0x1);
        gbc.writeMem(0xac6d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe39a, gbc.sp());
        EXPECT(0xac6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac6d));
        EXPECT(0x5d, gbc.readMem(0xac6e));
        // CB 5D 022E
        gbc.setState(0xbb47, 0xa692, 0xca10, 0x541d, 0x5773, 0xec18, 0x1, 0x0);
        gbc.writeMem(0xbb47, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa692, gbc.sp());
        EXPECT(0xbb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb47));
        EXPECT(0x5d, gbc.readMem(0xbb48));
        // CB 5D 022F
        gbc.setState(0x694c, 0x8187, 0xa2d0, 0x2bed, 0x26e9, 0xf2f9, 0x1, 0x1);
        gbc.writeMem(0x694c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8187, gbc.sp());
        EXPECT(0x694e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0230
        gbc.setState(0x7efe, 0x1574, 0x5500, 0x478e, 0xc988, 0x423b, 0x0, 0x1);
        gbc.writeMem(0x7efe, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1574, gbc.sp());
        EXPECT(0x7f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0231
        gbc.setState(0x6eaf, 0xcda7, 0x3790, 0xa070, 0x4d24, 0x1ded, 0x0, 0x1);
        gbc.writeMem(0x6eaf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcda7, gbc.sp());
        EXPECT(0x6eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0232
        gbc.setState(0xbdab, 0xd4c4, 0x5070, 0xba37, 0x82b6, 0x65b1, 0x1, 0x1);
        gbc.writeMem(0xbdab, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd4c4, gbc.sp());
        EXPECT(0xbdad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdab));
        EXPECT(0x5d, gbc.readMem(0xbdac));
        // CB 5D 0233
        gbc.setState(0xddaf, 0x95ad, 0xab30, 0x4495, 0xbe57, 0xe8d3, 0x0, 0x0);
        gbc.writeMem(0xddaf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x95ad, gbc.sp());
        EXPECT(0xddb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddaf));
        EXPECT(0x5d, gbc.readMem(0xddb0));
        // CB 5D 0234
        gbc.setState(0x4bf0, 0x8abb, 0x6d80, 0xf2d1, 0xc927, 0x1bb6, 0x0, 0x0);
        gbc.writeMem(0x4bf0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8abb, gbc.sp());
        EXPECT(0x4bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0235
        gbc.setState(0x6313, 0x58e8, 0x6dd0, 0x59a, 0xb2d5, 0x7a67, 0x1, 0x0);
        gbc.writeMem(0x6313, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x58e8, gbc.sp());
        EXPECT(0x6315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0236
        gbc.setState(0xa75, 0x161e, 0xd690, 0xc8ce, 0x3955, 0x75d3, 0x1, 0x0);
        gbc.writeMem(0xa75, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x161e, gbc.sp());
        EXPECT(0xa77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0237
        gbc.setState(0xc8f1, 0xb278, 0xad0, 0x44ca, 0x20b, 0x6244, 0x1, 0x1);
        gbc.writeMem(0xc8f1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb278, gbc.sp());
        EXPECT(0xc8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f1));
        EXPECT(0x5d, gbc.readMem(0xc8f2));
        // CB 5D 0238
        gbc.setState(0x5f2d, 0xe57, 0x2200, 0x8a94, 0xe54a, 0x6bbf, 0x1, 0x0);
        gbc.writeMem(0x5f2d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe57, gbc.sp());
        EXPECT(0x5f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0239
        gbc.setState(0x172c, 0xbbcd, 0x6330, 0x3aa5, 0xad1b, 0x55a3, 0x0, 0x0);
        gbc.writeMem(0x172c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbbcd, gbc.sp());
        EXPECT(0x172e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 023A
        gbc.setState(0x50ee, 0xeaa0, 0x1ea0, 0xb757, 0xf9c9, 0x153d, 0x1, 0x1);
        gbc.writeMem(0x50ee, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xeaa0, gbc.sp());
        EXPECT(0x50f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 023B
        gbc.setState(0xa386, 0x28a5, 0xee90, 0xacbe, 0x4568, 0x17a1, 0x1, 0x1);
        gbc.writeMem(0xa386, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x28a5, gbc.sp());
        EXPECT(0xa388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa386));
        EXPECT(0x5d, gbc.readMem(0xa387));
        // CB 5D 023C
        gbc.setState(0xd778, 0x7d04, 0x8270, 0xaae2, 0xda59, 0x4620, 0x1, 0x0);
        gbc.writeMem(0xd778, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7d04, gbc.sp());
        EXPECT(0xd77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd778));
        EXPECT(0x5d, gbc.readMem(0xd779));
        // CB 5D 023D
        gbc.setState(0x7e6d, 0xb5e2, 0xbb0, 0x198a, 0xf875, 0x369e, 0x1, 0x0);
        gbc.writeMem(0x7e6d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb5e2, gbc.sp());
        EXPECT(0x7e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 023E
        gbc.setState(0x138d, 0x602c, 0x39c0, 0x53f0, 0xbd7b, 0xa25b, 0x1, 0x0);
        gbc.writeMem(0x138d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x602c, gbc.sp());
        EXPECT(0x138f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 023F
        gbc.setState(0x6c17, 0xd934, 0xeee0, 0xfa6f, 0xbfe2, 0xb294, 0x1, 0x0);
        gbc.writeMem(0x6c17, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd934, gbc.sp());
        EXPECT(0x6c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0240
        gbc.setState(0xc658, 0x2f03, 0x7140, 0x6347, 0x28ce, 0xd20b, 0x1, 0x1);
        gbc.writeMem(0xc658, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2f03, gbc.sp());
        EXPECT(0xc65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc658));
        EXPECT(0x5d, gbc.readMem(0xc659));
        // CB 5D 0241
        gbc.setState(0xcd2f, 0xad5e, 0x8ab0, 0x3e64, 0x4319, 0x7362, 0x1, 0x1);
        gbc.writeMem(0xcd2f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xad5e, gbc.sp());
        EXPECT(0xcd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2f));
        EXPECT(0x5d, gbc.readMem(0xcd30));
        // CB 5D 0242
        gbc.setState(0xa5f, 0xc3f7, 0xe760, 0xd55f, 0x5755, 0x29f, 0x1, 0x1);
        gbc.writeMem(0xa5f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc3f7, gbc.sp());
        EXPECT(0xa61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0243
        gbc.setState(0xd69b, 0x4985, 0x4880, 0xec6b, 0xbd36, 0x6bbb, 0x1, 0x1);
        gbc.writeMem(0xd69b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4985, gbc.sp());
        EXPECT(0xd69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69b));
        EXPECT(0x5d, gbc.readMem(0xd69c));
        // CB 5D 0244
        gbc.setState(0x306b, 0x45dd, 0xdee0, 0xf883, 0x6680, 0x9013, 0x1, 0x0);
        gbc.writeMem(0x306b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x45dd, gbc.sp());
        EXPECT(0x306d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0245
        gbc.setState(0xe41f, 0xdf19, 0xf580, 0xded, 0x79ec, 0x916c, 0x0, 0x1);
        gbc.writeMem(0xe41f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdf19, gbc.sp());
        EXPECT(0xe421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41f));
        EXPECT(0x5d, gbc.readMem(0xe420));
        // CB 5D 0246
        gbc.setState(0x1afb, 0x8fba, 0x6400, 0xad7d, 0x51db, 0xa3bc, 0x0, 0x0);
        gbc.writeMem(0x1afb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8fba, gbc.sp());
        EXPECT(0x1afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0247
        gbc.setState(0xa7a1, 0xf526, 0xb960, 0xdf6, 0x8b31, 0x45c7, 0x0, 0x1);
        gbc.writeMem(0xa7a1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf526, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a1));
        EXPECT(0x5d, gbc.readMem(0xa7a2));
        // CB 5D 0248
        gbc.setState(0x5a, 0xbc43, 0xbeb0, 0x3140, 0x513e, 0x9dc6, 0x1, 0x0);
        gbc.writeMem(0x5a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbc43, gbc.sp());
        EXPECT(0x5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0249
        gbc.setState(0xbff8, 0x3e22, 0xdd50, 0xa957, 0x5aba, 0xe8b, 0x0, 0x0);
        gbc.writeMem(0xbff8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3e22, gbc.sp());
        EXPECT(0xbffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff8));
        EXPECT(0x5d, gbc.readMem(0xbff9));
        // CB 5D 024B
        gbc.setState(0xa63f, 0x5933, 0xf680, 0xa0d7, 0x581, 0xec1, 0x1, 0x1);
        gbc.writeMem(0xa63f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5933, gbc.sp());
        EXPECT(0xa641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63f));
        EXPECT(0x5d, gbc.readMem(0xa640));
        // CB 5D 024C
        gbc.setState(0x9fb5, 0x13bb, 0xf5a0, 0x582, 0x40e2, 0x9b31, 0x0, 0x1);
        gbc.writeMem(0x9fb5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x13bb, gbc.sp());
        EXPECT(0x9fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb5));
        EXPECT(0x5d, gbc.readMem(0x9fb6));
        // CB 5D 024E
        gbc.setState(0x85f, 0xd5c2, 0xc9a0, 0x4083, 0x7e46, 0x9e66, 0x0, 0x1);
        gbc.writeMem(0x85f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd5c2, gbc.sp());
        EXPECT(0x861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 024F
        gbc.setState(0xa757, 0x265b, 0xba10, 0x902d, 0xfcc0, 0x63cb, 0x1, 0x1);
        gbc.writeMem(0xa757, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x265b, gbc.sp());
        EXPECT(0xa759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa757));
        EXPECT(0x5d, gbc.readMem(0xa758));
        // CB 5D 0250
        gbc.setState(0x1868, 0xc286, 0x8fa0, 0xc672, 0xbff, 0x8562, 0x1, 0x0);
        gbc.writeMem(0x1868, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc286, gbc.sp());
        EXPECT(0x186a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0251
        gbc.setState(0x22ef, 0x81a6, 0x3570, 0x29a3, 0xa766, 0xbee3, 0x0, 0x1);
        gbc.writeMem(0x22ef, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x81a6, gbc.sp());
        EXPECT(0x22f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0252
        gbc.setState(0xae47, 0xdb78, 0x39c0, 0xaf60, 0xd145, 0x13ab, 0x1, 0x0);
        gbc.writeMem(0xae47, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdb78, gbc.sp());
        EXPECT(0xae49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae47));
        EXPECT(0x5d, gbc.readMem(0xae48));
        // CB 5D 0253
        gbc.setState(0x48e6, 0x7120, 0xe3c0, 0xeba9, 0xda38, 0xe50a, 0x0, 0x0);
        gbc.writeMem(0x48e6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7120, gbc.sp());
        EXPECT(0x48e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0254
        gbc.setState(0xd793, 0xda1f, 0x82d0, 0xed9b, 0xd800, 0xd7ba, 0x1, 0x1);
        gbc.writeMem(0xd793, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xda1f, gbc.sp());
        EXPECT(0xd795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd793));
        EXPECT(0x5d, gbc.readMem(0xd794));
        // CB 5D 0256
        gbc.setState(0xc6b7, 0xeea2, 0x3340, 0x3cc5, 0x374c, 0xc41e, 0x1, 0x1);
        gbc.writeMem(0xc6b7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xeea2, gbc.sp());
        EXPECT(0xc6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b7));
        EXPECT(0x5d, gbc.readMem(0xc6b8));
        // CB 5D 0257
        gbc.setState(0xc4e6, 0x530b, 0x7180, 0x507a, 0xde42, 0x733f, 0x0, 0x0);
        gbc.writeMem(0xc4e6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x530b, gbc.sp());
        EXPECT(0xc4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e6));
        EXPECT(0x5d, gbc.readMem(0xc4e7));
        // CB 5D 0259
        gbc.setState(0x50d9, 0x464f, 0xebe0, 0xc192, 0x1e74, 0x95d, 0x0, 0x1);
        gbc.writeMem(0x50d9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x464f, gbc.sp());
        EXPECT(0x50db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 025A
        gbc.setState(0xc135, 0xd42a, 0x9a30, 0x5134, 0xe486, 0xfe62, 0x0, 0x0);
        gbc.writeMem(0xc135, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd42a, gbc.sp());
        EXPECT(0xc137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc135));
        EXPECT(0x5d, gbc.readMem(0xc136));
        // CB 5D 025B
        gbc.setState(0x744, 0xff62, 0x7860, 0xbd6f, 0x48db, 0x4bfb, 0x1, 0x0);
        gbc.writeMem(0x744, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xff62, gbc.sp());
        EXPECT(0x746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 025C
        gbc.setState(0xe6b1, 0x47ae, 0xa710, 0x3624, 0x7a22, 0xfc6, 0x0, 0x0);
        gbc.writeMem(0xe6b1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x47ae, gbc.sp());
        EXPECT(0xe6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b1));
        EXPECT(0x5d, gbc.readMem(0xe6b2));
        // CB 5D 025D
        gbc.setState(0x3a59, 0x8073, 0x6e30, 0x7880, 0x32bf, 0xe55c, 0x0, 0x0);
        gbc.writeMem(0x3a59, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8073, gbc.sp());
        EXPECT(0x3a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 025E
        gbc.setState(0x88c5, 0x847c, 0x6420, 0x5fb6, 0xd18, 0x1de, 0x0, 0x1);
        gbc.writeMem(0x88c5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x847c, gbc.sp());
        EXPECT(0x88c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c5));
        EXPECT(0x5d, gbc.readMem(0x88c6));
        // CB 5D 025F
        gbc.setState(0x77bd, 0xf7e6, 0x71f0, 0x3445, 0x2517, 0x1df, 0x1, 0x1);
        gbc.writeMem(0x77bd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf7e6, gbc.sp());
        EXPECT(0x77bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0260
        gbc.setState(0xdd31, 0x19c, 0x8020, 0x710b, 0xed68, 0xd6e0, 0x0, 0x1);
        gbc.writeMem(0xdd31, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x19c, gbc.sp());
        EXPECT(0xdd33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd31));
        EXPECT(0x5d, gbc.readMem(0xdd32));
        // CB 5D 0261
        gbc.setState(0xbe5f, 0x7384, 0x3190, 0xef14, 0x3006, 0xe3be, 0x1, 0x0);
        gbc.writeMem(0xbe5f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7384, gbc.sp());
        EXPECT(0xbe61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5f));
        EXPECT(0x5d, gbc.readMem(0xbe60));
        // CB 5D 0262
        gbc.setState(0xc372, 0x1494, 0x860, 0xf8c9, 0x35de, 0xf23a, 0x1, 0x0);
        gbc.writeMem(0xc372, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1494, gbc.sp());
        EXPECT(0xc374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc372));
        EXPECT(0x5d, gbc.readMem(0xc373));
        // CB 5D 0264
        gbc.setState(0x940d, 0x4565, 0x4b30, 0xb616, 0x1857, 0x6858, 0x1, 0x0);
        gbc.writeMem(0x940d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4565, gbc.sp());
        EXPECT(0x940f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940d));
        EXPECT(0x5d, gbc.readMem(0x940e));
        // CB 5D 0265
        gbc.setState(0x3b38, 0x24ce, 0x1030, 0x4db6, 0x5fa4, 0x32dd, 0x1, 0x1);
        gbc.writeMem(0x3b38, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x24ce, gbc.sp());
        EXPECT(0x3b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0266
        gbc.setState(0xb6f7, 0xc1dd, 0x9fe0, 0x82e5, 0xd2ba, 0xc8d2, 0x1, 0x0);
        gbc.writeMem(0xb6f7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc1dd, gbc.sp());
        EXPECT(0xb6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f7));
        EXPECT(0x5d, gbc.readMem(0xb6f8));
        // CB 5D 0267
        gbc.setState(0xae6c, 0xc7a, 0xab60, 0x2b30, 0xe518, 0xe88d, 0x1, 0x0);
        gbc.writeMem(0xae6c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc7a, gbc.sp());
        EXPECT(0xae6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6c));
        EXPECT(0x5d, gbc.readMem(0xae6d));
        // CB 5D 0268
        gbc.setState(0x2c76, 0xacd1, 0x9090, 0x8451, 0xdf7b, 0x7b79, 0x1, 0x0);
        gbc.writeMem(0x2c76, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xacd1, gbc.sp());
        EXPECT(0x2c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 026A
        gbc.setState(0x643b, 0x6f2d, 0x9e60, 0x2872, 0x7f65, 0xdf15, 0x1, 0x1);
        gbc.writeMem(0x643b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6f2d, gbc.sp());
        EXPECT(0x643d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 026B
        gbc.setState(0xca93, 0xda91, 0x61f0, 0xb699, 0x20ca, 0x8854, 0x0, 0x0);
        gbc.writeMem(0xca93, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xda91, gbc.sp());
        EXPECT(0xca95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca93));
        EXPECT(0x5d, gbc.readMem(0xca94));
        // CB 5D 026C
        gbc.setState(0x5d88, 0xce73, 0xd5d0, 0x55ac, 0x9f36, 0x7487, 0x1, 0x0);
        gbc.writeMem(0x5d88, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xce73, gbc.sp());
        EXPECT(0x5d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 026D
        gbc.setState(0x9a5e, 0x5474, 0xcb90, 0xf61d, 0x7613, 0x953, 0x0, 0x1);
        gbc.writeMem(0x9a5e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5474, gbc.sp());
        EXPECT(0x9a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5e));
        EXPECT(0x5d, gbc.readMem(0x9a5f));
        // CB 5D 026E
        gbc.setState(0x4594, 0x8eb2, 0x8020, 0x62b8, 0x38eb, 0xa03c, 0x0, 0x0);
        gbc.writeMem(0x4594, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8eb2, gbc.sp());
        EXPECT(0x4596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 026F
        gbc.setState(0x61f7, 0xbb10, 0xcd30, 0xc01d, 0xf3f3, 0x8d45, 0x1, 0x0);
        gbc.writeMem(0x61f7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbb10, gbc.sp());
        EXPECT(0x61f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0270
        gbc.setState(0xb1ac, 0x95d3, 0x53d0, 0xed29, 0xa574, 0x876c, 0x0, 0x1);
        gbc.writeMem(0xb1ac, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x95d3, gbc.sp());
        EXPECT(0xb1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ac));
        EXPECT(0x5d, gbc.readMem(0xb1ad));
        // CB 5D 0271
        gbc.setState(0x1dee, 0x9540, 0x7380, 0xe650, 0x8524, 0x9c71, 0x1, 0x0);
        gbc.writeMem(0x1dee, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9540, gbc.sp());
        EXPECT(0x1df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0272
        gbc.setState(0x3f36, 0x886b, 0xf0b0, 0x420f, 0xe2b7, 0x64c, 0x1, 0x1);
        gbc.writeMem(0x3f36, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x886b, gbc.sp());
        EXPECT(0x3f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0273
        gbc.setState(0x5bad, 0x5bf7, 0x30d0, 0x8776, 0xb820, 0xed7a, 0x1, 0x1);
        gbc.writeMem(0x5bad, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5bf7, gbc.sp());
        EXPECT(0x5baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0274
        gbc.setState(0xedfe, 0xd880, 0xa9a0, 0x257a, 0x9a5, 0x3403, 0x1, 0x1);
        gbc.writeMem(0xedfe, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd880, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfe));
        EXPECT(0x5d, gbc.readMem(0xedff));
        // CB 5D 0275
        gbc.setState(0x770a, 0x56c4, 0x9300, 0x9397, 0xb55b, 0xb1dc, 0x0, 0x1);
        gbc.writeMem(0x770a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x56c4, gbc.sp());
        EXPECT(0x770c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0276
        gbc.setState(0xe4bd, 0x8abe, 0xd1f0, 0xac31, 0x938a, 0xa9e8, 0x1, 0x0);
        gbc.writeMem(0xe4bd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8abe, gbc.sp());
        EXPECT(0xe4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bd));
        EXPECT(0x5d, gbc.readMem(0xe4be));
        // CB 5D 0277
        gbc.setState(0x2dcc, 0xec45, 0x7e50, 0xaed2, 0x83d1, 0xeb4e, 0x1, 0x0);
        gbc.writeMem(0x2dcc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xec45, gbc.sp());
        EXPECT(0x2dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0278
        gbc.setState(0x5fc5, 0xecee, 0xe20, 0x54e5, 0x4432, 0xee5d, 0x0, 0x0);
        gbc.writeMem(0x5fc5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xecee, gbc.sp());
        EXPECT(0x5fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0279
        gbc.setState(0x6691, 0x40c7, 0xd400, 0x8bb7, 0x8fcd, 0xa3ff, 0x0, 0x0);
        gbc.writeMem(0x6691, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x40c7, gbc.sp());
        EXPECT(0x6693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 027A
        gbc.setState(0xa15, 0x2b65, 0x9000, 0xe8ba, 0x1afc, 0x95c0, 0x1, 0x1);
        gbc.writeMem(0xa15, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2b65, gbc.sp());
        EXPECT(0xa17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 027B
        gbc.setState(0x2b6f, 0x5f4e, 0xc8f0, 0xd38e, 0xe884, 0x94e3, 0x1, 0x0);
        gbc.writeMem(0x2b6f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5f4e, gbc.sp());
        EXPECT(0x2b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 027C
        gbc.setState(0xe6bc, 0x3c62, 0x2860, 0x84f6, 0x1b52, 0x7ae9, 0x1, 0x0);
        gbc.writeMem(0xe6bc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3c62, gbc.sp());
        EXPECT(0xe6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6bc));
        EXPECT(0x5d, gbc.readMem(0xe6bd));
        // CB 5D 027D
        gbc.setState(0xe54, 0x6d8e, 0xfb90, 0x6c87, 0x2adc, 0x6a98, 0x1, 0x1);
        gbc.writeMem(0xe54, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6d8e, gbc.sp());
        EXPECT(0xe56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 027E
        gbc.setState(0xa5cc, 0x68cc, 0x7210, 0x7f79, 0xf1c8, 0x9e11, 0x0, 0x0);
        gbc.writeMem(0xa5cc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x68cc, gbc.sp());
        EXPECT(0xa5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5cc));
        EXPECT(0x5d, gbc.readMem(0xa5cd));
        // CB 5D 027F
        gbc.setState(0x1d35, 0xd9d0, 0x99a0, 0x1ba4, 0x282e, 0xed74, 0x0, 0x1);
        gbc.writeMem(0x1d35, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd9d0, gbc.sp());
        EXPECT(0x1d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0280
        gbc.setState(0xd142, 0xc73e, 0xf7f0, 0x437c, 0xf2cd, 0x3819, 0x1, 0x0);
        gbc.writeMem(0xd142, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc73e, gbc.sp());
        EXPECT(0xd144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd142));
        EXPECT(0x5d, gbc.readMem(0xd143));
        // CB 5D 0281
        gbc.setState(0xe253, 0x80c0, 0x2d80, 0xa41d, 0xdce2, 0xce73, 0x1, 0x0);
        gbc.writeMem(0xe253, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x80c0, gbc.sp());
        EXPECT(0xe255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe253));
        EXPECT(0x5d, gbc.readMem(0xe254));
        // CB 5D 0282
        gbc.setState(0x6b91, 0xd423, 0x2140, 0x602b, 0xe675, 0xff86, 0x1, 0x1);
        gbc.writeMem(0x6b91, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd423, gbc.sp());
        EXPECT(0x6b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0283
        gbc.setState(0x1d05, 0xb316, 0xd700, 0x3864, 0x923b, 0xc35a, 0x1, 0x0);
        gbc.writeMem(0x1d05, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb316, gbc.sp());
        EXPECT(0x1d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0284
        gbc.setState(0x27b1, 0xb96b, 0x5600, 0x453a, 0x20d, 0x16ca, 0x1, 0x1);
        gbc.writeMem(0x27b1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb96b, gbc.sp());
        EXPECT(0x27b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0285
        gbc.setState(0x66ec, 0x2751, 0x89d0, 0xfe2b, 0xb029, 0x4b97, 0x1, 0x0);
        gbc.writeMem(0x66ec, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2751, gbc.sp());
        EXPECT(0x66ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0286
        gbc.setState(0x8126, 0x2e99, 0xca20, 0xa21b, 0x166c, 0xedb2, 0x0, 0x0);
        gbc.writeMem(0x8126, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2e99, gbc.sp());
        EXPECT(0x8128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8126));
        EXPECT(0x5d, gbc.readMem(0x8127));
        // CB 5D 0287
        gbc.setState(0x2bd6, 0xc6a0, 0xcc50, 0xd3dd, 0xaaff, 0x210e, 0x1, 0x0);
        gbc.writeMem(0x2bd6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc6a0, gbc.sp());
        EXPECT(0x2bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0288
        gbc.setState(0x136, 0xc3a1, 0xd800, 0x4457, 0x97c, 0xa82c, 0x1, 0x1);
        gbc.writeMem(0x136, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc3a1, gbc.sp());
        EXPECT(0x138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0289
        gbc.setState(0xb1b7, 0xee4, 0x78c0, 0x54f6, 0xad2, 0x6df3, 0x1, 0x1);
        gbc.writeMem(0xb1b7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xee4, gbc.sp());
        EXPECT(0xb1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b7));
        EXPECT(0x5d, gbc.readMem(0xb1b8));
        // CB 5D 028A
        gbc.setState(0x5e59, 0x6aaf, 0x4610, 0x84d3, 0xcbb3, 0x48f4, 0x1, 0x1);
        gbc.writeMem(0x5e59, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6aaf, gbc.sp());
        EXPECT(0x5e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 028B
        gbc.setState(0x8a08, 0x794a, 0xf350, 0xa94c, 0xcc50, 0xae7f, 0x0, 0x1);
        gbc.writeMem(0x8a08, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x794a, gbc.sp());
        EXPECT(0x8a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a08));
        EXPECT(0x5d, gbc.readMem(0x8a09));
        // CB 5D 028C
        gbc.setState(0x6309, 0x538, 0x7300, 0xcbef, 0x95fe, 0x2e89, 0x1, 0x0);
        gbc.writeMem(0x6309, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x538, gbc.sp());
        EXPECT(0x630b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 028D
        gbc.setState(0x5795, 0x534c, 0xa0d0, 0xc874, 0xc1a3, 0xb95, 0x1, 0x0);
        gbc.writeMem(0x5795, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x534c, gbc.sp());
        EXPECT(0x5797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 028E
        gbc.setState(0xa13, 0x8ba3, 0x1460, 0xcf9e, 0x559d, 0x4770, 0x0, 0x1);
        gbc.writeMem(0xa13, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8ba3, gbc.sp());
        EXPECT(0xa15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 028F
        gbc.setState(0xc393, 0xb422, 0x2cf0, 0xad29, 0xddab, 0x766c, 0x1, 0x1);
        gbc.writeMem(0xc393, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb422, gbc.sp());
        EXPECT(0xc395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc393));
        EXPECT(0x5d, gbc.readMem(0xc394));
        // CB 5D 0290
        gbc.setState(0xbab4, 0xbae, 0x4520, 0x164c, 0x9202, 0x4e1e, 0x0, 0x1);
        gbc.writeMem(0xbab4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbae, gbc.sp());
        EXPECT(0xbab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab4));
        EXPECT(0x5d, gbc.readMem(0xbab5));
        // CB 5D 0292
        gbc.setState(0xc4c4, 0xd2bc, 0x8360, 0x9bd2, 0xdf1b, 0x9ba9, 0x0, 0x0);
        gbc.writeMem(0xc4c4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd2bc, gbc.sp());
        EXPECT(0xc4c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c4));
        EXPECT(0x5d, gbc.readMem(0xc4c5));
        // CB 5D 0293
        gbc.setState(0xdbb6, 0xb7e1, 0xae00, 0x64d9, 0xec5d, 0xf4d8, 0x0, 0x0);
        gbc.writeMem(0xdbb6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb7e1, gbc.sp());
        EXPECT(0xdbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb6));
        EXPECT(0x5d, gbc.readMem(0xdbb7));
        // CB 5D 0294
        gbc.setState(0x796a, 0xf093, 0x4690, 0xaf66, 0xe134, 0xe46a, 0x1, 0x0);
        gbc.writeMem(0x796a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf093, gbc.sp());
        EXPECT(0x796c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0295
        gbc.setState(0xa4b8, 0x46d8, 0x7b80, 0xca02, 0xc80a, 0x6781, 0x0, 0x0);
        gbc.writeMem(0xa4b8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x46d8, gbc.sp());
        EXPECT(0xa4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b8));
        EXPECT(0x5d, gbc.readMem(0xa4b9));
        // CB 5D 0296
        gbc.setState(0x62e5, 0xd204, 0x3680, 0xd436, 0x5f1b, 0x8cfe, 0x0, 0x0);
        gbc.writeMem(0x62e5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd204, gbc.sp());
        EXPECT(0x62e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0297
        gbc.setState(0xa4e9, 0x6a33, 0x5770, 0x309, 0x49e3, 0x9fcf, 0x1, 0x0);
        gbc.writeMem(0xa4e9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6a33, gbc.sp());
        EXPECT(0xa4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e9));
        EXPECT(0x5d, gbc.readMem(0xa4ea));
        // CB 5D 0298
        gbc.setState(0xb891, 0x65ac, 0x3710, 0x4cd8, 0x7ff3, 0x35bf, 0x1, 0x0);
        gbc.writeMem(0xb891, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x65ac, gbc.sp());
        EXPECT(0xb893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb891));
        EXPECT(0x5d, gbc.readMem(0xb892));
        // CB 5D 0299
        gbc.setState(0x3a24, 0xb435, 0x8a0, 0x639, 0x464, 0xd995, 0x1, 0x0);
        gbc.writeMem(0x3a24, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb435, gbc.sp());
        EXPECT(0x3a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 029A
        gbc.setState(0x95f1, 0x2c19, 0x7260, 0xed0a, 0xda9d, 0xeb8c, 0x1, 0x0);
        gbc.writeMem(0x95f1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2c19, gbc.sp());
        EXPECT(0x95f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f1));
        EXPECT(0x5d, gbc.readMem(0x95f2));
        // CB 5D 029B
        gbc.setState(0x7640, 0xbf8a, 0xffa0, 0x59da, 0xc9df, 0x8ac4, 0x1, 0x0);
        gbc.writeMem(0x7640, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbf8a, gbc.sp());
        EXPECT(0x7642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 029C
        gbc.setState(0xdfe9, 0xdeca, 0x83c0, 0x4fb4, 0xcecd, 0x120d, 0x1, 0x0);
        gbc.writeMem(0xdfe9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdeca, gbc.sp());
        EXPECT(0xdfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe9));
        EXPECT(0x5d, gbc.readMem(0xdfea));
        // CB 5D 029D
        gbc.setState(0x28b, 0xe7f1, 0xcab0, 0x629b, 0x8158, 0xbf9d, 0x0, 0x1);
        gbc.writeMem(0x28b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0x28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 029E
        gbc.setState(0x7643, 0xcd57, 0xb390, 0x81fe, 0x3f31, 0x53c0, 0x0, 0x0);
        gbc.writeMem(0x7643, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcd57, gbc.sp());
        EXPECT(0x7645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 029F
        gbc.setState(0xbedb, 0x8cc4, 0x7540, 0xca85, 0x6f85, 0x6d41, 0x0, 0x1);
        gbc.writeMem(0xbedb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8cc4, gbc.sp());
        EXPECT(0xbedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbedb));
        EXPECT(0x5d, gbc.readMem(0xbedc));
        // CB 5D 02A0
        gbc.setState(0x2d84, 0xc6eb, 0x3b50, 0x465, 0xd400, 0xc6f6, 0x0, 0x1);
        gbc.writeMem(0x2d84, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc6eb, gbc.sp());
        EXPECT(0x2d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02A1
        gbc.setState(0x4c50, 0x5107, 0x4920, 0x8f90, 0xd0f6, 0x38ae, 0x0, 0x1);
        gbc.writeMem(0x4c50, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5107, gbc.sp());
        EXPECT(0x4c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02A2
        gbc.setState(0x3dae, 0x5f65, 0xeb30, 0x47d, 0xa46, 0x387d, 0x1, 0x0);
        gbc.writeMem(0x3dae, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5f65, gbc.sp());
        EXPECT(0x3db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02A3
        gbc.setState(0x12fb, 0x8efc, 0xc770, 0x237, 0xf0d9, 0x2198, 0x1, 0x1);
        gbc.writeMem(0x12fb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8efc, gbc.sp());
        EXPECT(0x12fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02A4
        gbc.setState(0x3c02, 0xbed0, 0x3710, 0x2876, 0xa502, 0x298f, 0x1, 0x1);
        gbc.writeMem(0x3c02, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbed0, gbc.sp());
        EXPECT(0x3c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02A5
        gbc.setState(0x351d, 0x491e, 0x3170, 0xec1f, 0xd3b3, 0x8a18, 0x0, 0x0);
        gbc.writeMem(0x351d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x491e, gbc.sp());
        EXPECT(0x351f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02A6
        gbc.setState(0x1801, 0xad17, 0xc6c0, 0x873f, 0x1ec, 0xe46b, 0x0, 0x0);
        gbc.writeMem(0x1801, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xad17, gbc.sp());
        EXPECT(0x1803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02A7
        gbc.setState(0x7bef, 0x6384, 0x80a0, 0xf7bc, 0xefed, 0xf1d3, 0x0, 0x0);
        gbc.writeMem(0x7bef, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6384, gbc.sp());
        EXPECT(0x7bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02A8
        gbc.setState(0xb7af, 0xc023, 0x6900, 0xc752, 0x9b81, 0xdd12, 0x1, 0x0);
        gbc.writeMem(0xb7af, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc023, gbc.sp());
        EXPECT(0xb7b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7af));
        EXPECT(0x5d, gbc.readMem(0xb7b0));
        // CB 5D 02AA
        gbc.setState(0x10cd, 0xc3a4, 0x7b90, 0x171, 0x9b83, 0x18ee, 0x1, 0x1);
        gbc.writeMem(0x10cd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc3a4, gbc.sp());
        EXPECT(0x10cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02AB
        gbc.setState(0x3fad, 0x6443, 0xd2f0, 0xad9c, 0xf939, 0xdd17, 0x0, 0x1);
        gbc.writeMem(0x3fad, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6443, gbc.sp());
        EXPECT(0x3faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02AC
        gbc.setState(0xa4ab, 0x4e79, 0x97f0, 0x908c, 0xb403, 0xd0b1, 0x0, 0x0);
        gbc.writeMem(0xa4ab, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4e79, gbc.sp());
        EXPECT(0xa4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ab));
        EXPECT(0x5d, gbc.readMem(0xa4ac));
        // CB 5D 02AD
        gbc.setState(0x5182, 0xc1b9, 0x7c60, 0x1aed, 0x4b7f, 0xda17, 0x0, 0x1);
        gbc.writeMem(0x5182, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc1b9, gbc.sp());
        EXPECT(0x5184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02AE
        gbc.setState(0x4755, 0x9256, 0x4440, 0xa367, 0x5959, 0xc868, 0x1, 0x0);
        gbc.writeMem(0x4755, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9256, gbc.sp());
        EXPECT(0x4757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02AF
        gbc.setState(0x38b3, 0x5b26, 0x6b00, 0x8114, 0xc970, 0x49f4, 0x0, 0x1);
        gbc.writeMem(0x38b3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5b26, gbc.sp());
        EXPECT(0x38b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02B0
        gbc.setState(0xae7c, 0xa2fa, 0xef00, 0x2731, 0x643f, 0xaa00, 0x0, 0x0);
        gbc.writeMem(0xae7c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa2fa, gbc.sp());
        EXPECT(0xae7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7c));
        EXPECT(0x5d, gbc.readMem(0xae7d));
        // CB 5D 02B1
        gbc.setState(0xbcf7, 0x8f82, 0x8670, 0xa7f5, 0x4c, 0xb570, 0x0, 0x1);
        gbc.writeMem(0xbcf7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8f82, gbc.sp());
        EXPECT(0xbcf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf7));
        EXPECT(0x5d, gbc.readMem(0xbcf8));
        // CB 5D 02B2
        gbc.setState(0x5c8e, 0xc006, 0xeb10, 0x23a2, 0x6ec6, 0x1d1c, 0x1, 0x1);
        gbc.writeMem(0x5c8e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc006, gbc.sp());
        EXPECT(0x5c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02B3
        gbc.setState(0x79b9, 0x7965, 0x5450, 0x3979, 0x67d1, 0x6301, 0x0, 0x0);
        gbc.writeMem(0x79b9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7965, gbc.sp());
        EXPECT(0x79bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02B4
        gbc.setState(0x216c, 0x88b, 0x1330, 0x6bcc, 0xe921, 0xc8b5, 0x0, 0x0);
        gbc.writeMem(0x216c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x88b, gbc.sp());
        EXPECT(0x216e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02B5
        gbc.setState(0xef2e, 0x59c0, 0x8960, 0xaace, 0x24ba, 0x80d3, 0x0, 0x1);
        gbc.writeMem(0xef2e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x59c0, gbc.sp());
        EXPECT(0xef30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2e));
        EXPECT(0x5d, gbc.readMem(0xef2f));
        // CB 5D 02B6
        gbc.setState(0x87f7, 0x8a37, 0x79d0, 0x541b, 0x51c4, 0x5f6, 0x0, 0x1);
        gbc.writeMem(0x87f7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8a37, gbc.sp());
        EXPECT(0x87f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f7));
        EXPECT(0x5d, gbc.readMem(0x87f8));
        // CB 5D 02B7
        gbc.setState(0x33c6, 0xf1b, 0xa000, 0x5fb0, 0x6002, 0x232b, 0x1, 0x1);
        gbc.writeMem(0x33c6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf1b, gbc.sp());
        EXPECT(0x33c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02B8
        gbc.setState(0x792c, 0xa0cb, 0x130, 0x6c18, 0xc5a1, 0x3a0c, 0x0, 0x1);
        gbc.writeMem(0x792c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa0cb, gbc.sp());
        EXPECT(0x792e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02BA
        gbc.setState(0x46d8, 0xbcb3, 0x6080, 0x44e5, 0x7b7e, 0xf943, 0x0, 0x0);
        gbc.writeMem(0x46d8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbcb3, gbc.sp());
        EXPECT(0x46da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02BB
        gbc.setState(0xc46, 0xe690, 0x4a90, 0xe46b, 0x6611, 0xbcb0, 0x1, 0x1);
        gbc.writeMem(0xc46, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe690, gbc.sp());
        EXPECT(0xc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02BC
        gbc.setState(0x4a3f, 0xda8f, 0xd0f0, 0x1ac0, 0x3e68, 0x3bcb, 0x0, 0x0);
        gbc.writeMem(0x4a3f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xda8f, gbc.sp());
        EXPECT(0x4a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02BD
        gbc.setState(0xf3a, 0xc5bc, 0x52f0, 0x130c, 0xb452, 0x8b81, 0x1, 0x1);
        gbc.writeMem(0xf3a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc5bc, gbc.sp());
        EXPECT(0xf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02BE
        gbc.setState(0xa7f4, 0x5a9, 0x5780, 0xb97a, 0xd204, 0xbde4, 0x1, 0x0);
        gbc.writeMem(0xa7f4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5a9, gbc.sp());
        EXPECT(0xa7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f4));
        EXPECT(0x5d, gbc.readMem(0xa7f5));
        // CB 5D 02BF
        gbc.setState(0xe3d8, 0x20dd, 0xf310, 0xe56, 0xf82b, 0x317d, 0x0, 0x1);
        gbc.writeMem(0xe3d8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x20dd, gbc.sp());
        EXPECT(0xe3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d8));
        EXPECT(0x5d, gbc.readMem(0xe3d9));
        // CB 5D 02C0
        gbc.setState(0x33, 0xb25b, 0x3c20, 0x129, 0x7a4f, 0xf22f, 0x1, 0x1);
        gbc.writeMem(0x33, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb25b, gbc.sp());
        EXPECT(0x35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02C1
        gbc.setState(0x2e7, 0x6c2a, 0xc740, 0xa0a2, 0x526c, 0xaae2, 0x1, 0x0);
        gbc.writeMem(0x2e7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6c2a, gbc.sp());
        EXPECT(0x2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02C2
        gbc.setState(0x9224, 0xbb17, 0x8500, 0x2054, 0xb636, 0xfc92, 0x0, 0x1);
        gbc.writeMem(0x9224, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbb17, gbc.sp());
        EXPECT(0x9226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9224));
        EXPECT(0x5d, gbc.readMem(0x9225));
        // CB 5D 02C3
        gbc.setState(0x80e, 0xf3b, 0x9880, 0x8103, 0x38e6, 0x3317, 0x1, 0x0);
        gbc.writeMem(0x80e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf3b, gbc.sp());
        EXPECT(0x810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02C4
        gbc.setState(0x301e, 0x3a0a, 0xa030, 0x3dd4, 0x9da8, 0xaf91, 0x0, 0x0);
        gbc.writeMem(0x301e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3a0a, gbc.sp());
        EXPECT(0x3020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02C5
        gbc.setState(0x9590, 0xeb80, 0xfc20, 0xe916, 0x4532, 0x3537, 0x1, 0x0);
        gbc.writeMem(0x9590, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xeb80, gbc.sp());
        EXPECT(0x9592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9590));
        EXPECT(0x5d, gbc.readMem(0x9591));
        // CB 5D 02C6
        gbc.setState(0xddd7, 0xd430, 0x2340, 0x9400, 0x7d20, 0x8237, 0x1, 0x1);
        gbc.writeMem(0xddd7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd430, gbc.sp());
        EXPECT(0xddd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd7));
        EXPECT(0x5d, gbc.readMem(0xddd8));
        // CB 5D 02C7
        gbc.setState(0xabb2, 0xa100, 0xcb00, 0x69ba, 0xa29c, 0xbe9b, 0x0, 0x1);
        gbc.writeMem(0xabb2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa100, gbc.sp());
        EXPECT(0xabb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb2));
        EXPECT(0x5d, gbc.readMem(0xabb3));
        // CB 5D 02C8
        gbc.setState(0x2ae9, 0x21a4, 0x43f0, 0xf62, 0x4ccd, 0xe857, 0x0, 0x0);
        gbc.writeMem(0x2ae9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x21a4, gbc.sp());
        EXPECT(0x2aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02C9
        gbc.setState(0x4d8, 0xfb13, 0x4ad0, 0xde8c, 0xa9d7, 0xdfb0, 0x1, 0x0);
        gbc.writeMem(0x4d8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfb13, gbc.sp());
        EXPECT(0x4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02CA
        gbc.setState(0xef0c, 0x6188, 0x6ce0, 0xda94, 0x1d48, 0x382c, 0x1, 0x0);
        gbc.writeMem(0xef0c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6188, gbc.sp());
        EXPECT(0xef0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0c));
        EXPECT(0x5d, gbc.readMem(0xef0d));
        // CB 5D 02CB
        gbc.setState(0x3e56, 0x3f51, 0xc320, 0x9eba, 0x9343, 0x6a1f, 0x1, 0x1);
        gbc.writeMem(0x3e56, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3f51, gbc.sp());
        EXPECT(0x3e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02CC
        gbc.setState(0x263b, 0xddf1, 0x6950, 0x128, 0x48b2, 0xa05f, 0x1, 0x0);
        gbc.writeMem(0x263b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xddf1, gbc.sp());
        EXPECT(0x263d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02CD
        gbc.setState(0x50a, 0x6646, 0xd70, 0x1b48, 0xc204, 0x9d5c, 0x0, 0x1);
        gbc.writeMem(0x50a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6646, gbc.sp());
        EXPECT(0x50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02CF
        gbc.setState(0xb3c3, 0x254b, 0x6fd0, 0x4182, 0x3a62, 0xc164, 0x0, 0x1);
        gbc.writeMem(0xb3c3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0xb3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c3));
        EXPECT(0x5d, gbc.readMem(0xb3c4));
        // CB 5D 02D0
        gbc.setState(0x3376, 0x3b22, 0xae30, 0xcecf, 0x7fed, 0x78c, 0x1, 0x1);
        gbc.writeMem(0x3376, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3b22, gbc.sp());
        EXPECT(0x3378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02D2
        gbc.setState(0xac84, 0xf15b, 0xb7e0, 0x496d, 0x6e58, 0x116e, 0x0, 0x0);
        gbc.writeMem(0xac84, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf15b, gbc.sp());
        EXPECT(0xac86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac84));
        EXPECT(0x5d, gbc.readMem(0xac85));
        // CB 5D 02D3
        gbc.setState(0x73a0, 0x870d, 0xcd20, 0x4a7, 0x4f9, 0x13d8, 0x0, 0x1);
        gbc.writeMem(0x73a0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x870d, gbc.sp());
        EXPECT(0x73a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02D4
        gbc.setState(0x387b, 0x2e98, 0xb2f0, 0xbdc0, 0x274e, 0x5b89, 0x1, 0x0);
        gbc.writeMem(0x387b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2e98, gbc.sp());
        EXPECT(0x387d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02D5
        gbc.setState(0xeec0, 0x8253, 0xa030, 0x2e8a, 0x89ce, 0xdd05, 0x1, 0x0);
        gbc.writeMem(0xeec0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8253, gbc.sp());
        EXPECT(0xeec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec0));
        EXPECT(0x5d, gbc.readMem(0xeec1));
        // CB 5D 02D6
        gbc.setState(0xe1f3, 0xfc1b, 0xc6a0, 0x7cf8, 0x8544, 0xd8ab, 0x0, 0x1);
        gbc.writeMem(0xe1f3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfc1b, gbc.sp());
        EXPECT(0xe1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f3));
        EXPECT(0x5d, gbc.readMem(0xe1f4));
        // CB 5D 02D7
        gbc.setState(0x7b06, 0x6fd8, 0xee0, 0xec3b, 0x8cf9, 0x1a, 0x1, 0x1);
        gbc.writeMem(0x7b06, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6fd8, gbc.sp());
        EXPECT(0x7b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02D8
        gbc.setState(0xcb8f, 0xae34, 0x71b0, 0xb997, 0xbd3, 0x577, 0x0, 0x1);
        gbc.writeMem(0xcb8f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xae34, gbc.sp());
        EXPECT(0xcb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8f));
        EXPECT(0x5d, gbc.readMem(0xcb90));
        // CB 5D 02D9
        gbc.setState(0xe005, 0xee58, 0xd1c0, 0x42e9, 0x2895, 0xd0be, 0x0, 0x0);
        gbc.writeMem(0xe005, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xee58, gbc.sp());
        EXPECT(0xe007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe005));
        EXPECT(0x5d, gbc.readMem(0xe006));
        // CB 5D 02DA
        gbc.setState(0x4423, 0x9bb5, 0x78b0, 0x9bf2, 0x8069, 0x63eb, 0x0, 0x1);
        gbc.writeMem(0x4423, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9bb5, gbc.sp());
        EXPECT(0x4425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02DB
        gbc.setState(0xeade, 0xb10, 0x9900, 0x6c1b, 0x39c3, 0x5ee0, 0x1, 0x1);
        gbc.writeMem(0xeade, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0xeae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeade));
        EXPECT(0x5d, gbc.readMem(0xeadf));
        // CB 5D 02DC
        gbc.setState(0x4f8a, 0x5b0, 0xf560, 0x4da8, 0x1ee1, 0x2e04, 0x1, 0x0);
        gbc.writeMem(0x4f8a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5b0, gbc.sp());
        EXPECT(0x4f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02DD
        gbc.setState(0x48df, 0x6455, 0x910, 0xaa70, 0xf7e, 0xa655, 0x0, 0x0);
        gbc.writeMem(0x48df, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6455, gbc.sp());
        EXPECT(0x48e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02DE
        gbc.setState(0x198, 0xeb42, 0x1d80, 0xf7c2, 0x81f3, 0xaee1, 0x0, 0x1);
        gbc.writeMem(0x198, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xeb42, gbc.sp());
        EXPECT(0x19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02DF
        gbc.setState(0x4df5, 0x3eba, 0x1eb0, 0x334f, 0xbafe, 0x73fd, 0x1, 0x1);
        gbc.writeMem(0x4df5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3eba, gbc.sp());
        EXPECT(0x4df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02E0
        gbc.setState(0xb27b, 0xf582, 0x6ad0, 0xac67, 0x51c9, 0x7e91, 0x0, 0x0);
        gbc.writeMem(0xb27b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf582, gbc.sp());
        EXPECT(0xb27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27b));
        EXPECT(0x5d, gbc.readMem(0xb27c));
        // CB 5D 02E1
        gbc.setState(0x700d, 0x91fa, 0x4b90, 0x5b47, 0x9d7d, 0xd6b1, 0x0, 0x1);
        gbc.writeMem(0x700d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x91fa, gbc.sp());
        EXPECT(0x700f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02E2
        gbc.setState(0xb7f9, 0xe0cb, 0x8430, 0xa7fe, 0x18e, 0x2877, 0x1, 0x0);
        gbc.writeMem(0xb7f9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe0cb, gbc.sp());
        EXPECT(0xb7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f9));
        EXPECT(0x5d, gbc.readMem(0xb7fa));
        // CB 5D 02E3
        gbc.setState(0xddfb, 0x1d16, 0xecb0, 0x1473, 0xd90c, 0x85fe, 0x1, 0x1);
        gbc.writeMem(0xddfb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1d16, gbc.sp());
        EXPECT(0xddfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddfb));
        EXPECT(0x5d, gbc.readMem(0xddfc));
        // CB 5D 02E4
        gbc.setState(0xa362, 0x802d, 0x19d0, 0x6dd3, 0xe27e, 0xe3db, 0x1, 0x1);
        gbc.writeMem(0xa362, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x802d, gbc.sp());
        EXPECT(0xa364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa362));
        EXPECT(0x5d, gbc.readMem(0xa363));
        // CB 5D 02E7
        gbc.setState(0x4d4a, 0x2c37, 0x43c0, 0x2975, 0x17f6, 0xfbe2, 0x1, 0x0);
        gbc.writeMem(0x4d4a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2c37, gbc.sp());
        EXPECT(0x4d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02E8
        gbc.setState(0x6df3, 0x8c9c, 0xee0, 0x2db3, 0xc33, 0xc05a, 0x0, 0x1);
        gbc.writeMem(0x6df3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8c9c, gbc.sp());
        EXPECT(0x6df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02E9
        gbc.setState(0x3c56, 0xcaff, 0x1040, 0x3dbc, 0x12eb, 0x7e27, 0x0, 0x1);
        gbc.writeMem(0x3c56, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcaff, gbc.sp());
        EXPECT(0x3c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02EA
        gbc.setState(0x8ffa, 0x6e45, 0xf840, 0x8334, 0xc45f, 0xa03c, 0x1, 0x1);
        gbc.writeMem(0x8ffa, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6e45, gbc.sp());
        EXPECT(0x8ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffa));
        EXPECT(0x5d, gbc.readMem(0x8ffb));
        // CB 5D 02EB
        gbc.setState(0x90e0, 0xa163, 0xf6b0, 0xf051, 0xcb01, 0xa1e9, 0x0, 0x1);
        gbc.writeMem(0x90e0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa163, gbc.sp());
        EXPECT(0x90e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e0));
        EXPECT(0x5d, gbc.readMem(0x90e1));
        // CB 5D 02EC
        gbc.setState(0x4342, 0xcef6, 0x4b10, 0x26f2, 0xf224, 0x3273, 0x1, 0x0);
        gbc.writeMem(0x4342, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcef6, gbc.sp());
        EXPECT(0x4344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02ED
        gbc.setState(0x615, 0x4c95, 0x470, 0x5bca, 0x68e8, 0x9c25, 0x1, 0x1);
        gbc.writeMem(0x615, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4c95, gbc.sp());
        EXPECT(0x617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02EE
        gbc.setState(0x156b, 0x5b66, 0x4560, 0x6c7d, 0x8781, 0xd034, 0x0, 0x1);
        gbc.writeMem(0x156b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5b66, gbc.sp());
        EXPECT(0x156d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02EF
        gbc.setState(0x679a, 0x369a, 0xd480, 0x46fa, 0xc29c, 0xcce2, 0x0, 0x1);
        gbc.writeMem(0x679a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x369a, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02F0
        gbc.setState(0x288d, 0x82db, 0x7fa0, 0xad90, 0xdbbf, 0x4646, 0x0, 0x1);
        gbc.writeMem(0x288d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x82db, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02F1
        gbc.setState(0x712, 0x1227, 0xc600, 0xd2dd, 0xabdf, 0x6c31, 0x0, 0x0);
        gbc.writeMem(0x712, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1227, gbc.sp());
        EXPECT(0x714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02F2
        gbc.setState(0xa11f, 0x2456, 0x7bc0, 0x3991, 0x9981, 0x75c2, 0x1, 0x0);
        gbc.writeMem(0xa11f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2456, gbc.sp());
        EXPECT(0xa121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11f));
        EXPECT(0x5d, gbc.readMem(0xa120));
        // CB 5D 02F3
        gbc.setState(0xff9, 0xcf72, 0x9110, 0xa0e, 0x4902, 0x24f2, 0x0, 0x1);
        gbc.writeMem(0xff9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcf72, gbc.sp());
        EXPECT(0xffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02F4
        gbc.setState(0x3d93, 0x8498, 0x1f30, 0xcfda, 0x3311, 0x1698, 0x0, 0x0);
        gbc.writeMem(0x3d93, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8498, gbc.sp());
        EXPECT(0x3d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02F5
        gbc.setState(0x1ef2, 0x7740, 0x9340, 0x929b, 0xaad3, 0x4d1, 0x1, 0x0);
        gbc.writeMem(0x1ef2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7740, gbc.sp());
        EXPECT(0x1ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02F6
        gbc.setState(0x1feb, 0x26c6, 0x5980, 0xf228, 0xfff6, 0x513e, 0x0, 0x0);
        gbc.writeMem(0x1feb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x26c6, gbc.sp());
        EXPECT(0x1fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02F7
        gbc.setState(0x468a, 0x7955, 0x21c0, 0xac95, 0x4a3c, 0xe393, 0x1, 0x1);
        gbc.writeMem(0x468a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7955, gbc.sp());
        EXPECT(0x468c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02F8
        gbc.setState(0x5c23, 0x73bc, 0x9300, 0xc980, 0xa1c7, 0xc394, 0x0, 0x1);
        gbc.writeMem(0x5c23, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x73bc, gbc.sp());
        EXPECT(0x5c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02F9
        gbc.setState(0x7770, 0xeb19, 0x9360, 0x18de, 0xd7db, 0x6a8a, 0x0, 0x1);
        gbc.writeMem(0x7770, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xeb19, gbc.sp());
        EXPECT(0x7772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02FA
        gbc.setState(0x90e4, 0xa11a, 0xfb30, 0xfdc6, 0xe9bb, 0xb469, 0x0, 0x0);
        gbc.writeMem(0x90e4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa11a, gbc.sp());
        EXPECT(0x90e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e4));
        EXPECT(0x5d, gbc.readMem(0x90e5));
        // CB 5D 02FB
        gbc.setState(0x8e7b, 0x5dce, 0xc400, 0x5b9d, 0xbeac, 0x59e9, 0x0, 0x0);
        gbc.writeMem(0x8e7b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5dce, gbc.sp());
        EXPECT(0x8e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7b));
        EXPECT(0x5d, gbc.readMem(0x8e7c));
        // CB 5D 02FC
        gbc.setState(0x24c6, 0x907e, 0x6120, 0x637d, 0x8a41, 0xa1b6, 0x0, 0x0);
        gbc.writeMem(0x24c6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x907e, gbc.sp());
        EXPECT(0x24c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 02FD
        gbc.setState(0x9806, 0xb9d7, 0x85d0, 0x7449, 0x8093, 0x3567, 0x1, 0x1);
        gbc.writeMem(0x9806, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb9d7, gbc.sp());
        EXPECT(0x9808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9806));
        EXPECT(0x5d, gbc.readMem(0x9807));
        // CB 5D 02FE
        gbc.setState(0x4d3b, 0xba74, 0x6710, 0x1ca5, 0x2868, 0x17fe, 0x0, 0x1);
        gbc.writeMem(0x4d3b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xba74, gbc.sp());
        EXPECT(0x4d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 02FF
        gbc.setState(0xcf92, 0x710f, 0xd560, 0x163a, 0xf889, 0x977d, 0x0, 0x0);
        gbc.writeMem(0xcf92, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x710f, gbc.sp());
        EXPECT(0xcf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf92));
        EXPECT(0x5d, gbc.readMem(0xcf93));
        // CB 5D 0300
        gbc.setState(0x76cd, 0x2aa8, 0x9590, 0xf6fe, 0xf525, 0x22a2, 0x0, 0x1);
        gbc.writeMem(0x76cd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2aa8, gbc.sp());
        EXPECT(0x76cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0301
        gbc.setState(0x9979, 0x8151, 0xbd80, 0x25d0, 0x7c0e, 0x53d3, 0x1, 0x0);
        gbc.writeMem(0x9979, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8151, gbc.sp());
        EXPECT(0x997b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9979));
        EXPECT(0x5d, gbc.readMem(0x997a));
        // CB 5D 0302
        gbc.setState(0xdbf4, 0xafd7, 0x8b0, 0xdefd, 0x85a1, 0xdca, 0x0, 0x1);
        gbc.writeMem(0xdbf4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xafd7, gbc.sp());
        EXPECT(0xdbf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf4));
        EXPECT(0x5d, gbc.readMem(0xdbf5));
        // CB 5D 0303
        gbc.setState(0x14ab, 0x354, 0x8280, 0xead3, 0x7d51, 0x64f4, 0x0, 0x1);
        gbc.writeMem(0x14ab, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x354, gbc.sp());
        EXPECT(0x14ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0304
        gbc.setState(0x7f96, 0x5a94, 0x8730, 0x500, 0xd8ef, 0x50fa, 0x0, 0x0);
        gbc.writeMem(0x7f96, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5a94, gbc.sp());
        EXPECT(0x7f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0305
        gbc.setState(0xc333, 0x9a41, 0xe3b0, 0xefe, 0xa5c1, 0x236a, 0x1, 0x1);
        gbc.writeMem(0xc333, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9a41, gbc.sp());
        EXPECT(0xc335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc333));
        EXPECT(0x5d, gbc.readMem(0xc334));
        // CB 5D 0306
        gbc.setState(0xd28b, 0x139c, 0x7610, 0xdac5, 0x5a24, 0xaae2, 0x1, 0x1);
        gbc.writeMem(0xd28b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x139c, gbc.sp());
        EXPECT(0xd28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28b));
        EXPECT(0x5d, gbc.readMem(0xd28c));
        // CB 5D 0307
        gbc.setState(0x8657, 0x129e, 0x7a70, 0xeb5a, 0x4a6f, 0x9d5c, 0x1, 0x0);
        gbc.writeMem(0x8657, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x129e, gbc.sp());
        EXPECT(0x8659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8657));
        EXPECT(0x5d, gbc.readMem(0x8658));
        // CB 5D 0308
        gbc.setState(0x9ee, 0xf061, 0xc6f0, 0x6ff4, 0x9522, 0x3c4a, 0x1, 0x1);
        gbc.writeMem(0x9ee, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf061, gbc.sp());
        EXPECT(0x9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0309
        gbc.setState(0x4faf, 0x5616, 0x4900, 0x3168, 0x830c, 0x6a88, 0x1, 0x1);
        gbc.writeMem(0x4faf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5616, gbc.sp());
        EXPECT(0x4fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 030A
        gbc.setState(0x57a7, 0xe04f, 0xab60, 0x4063, 0xf2e7, 0xe979, 0x1, 0x0);
        gbc.writeMem(0x57a7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe04f, gbc.sp());
        EXPECT(0x57a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 030B
        gbc.setState(0x994e, 0x129c, 0x6320, 0x3d3d, 0x2bee, 0x3e9b, 0x0, 0x1);
        gbc.writeMem(0x994e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x129c, gbc.sp());
        EXPECT(0x9950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994e));
        EXPECT(0x5d, gbc.readMem(0x994f));
        // CB 5D 030C
        gbc.setState(0x3068, 0x20b6, 0xaf10, 0xf8f6, 0x47d8, 0x317b, 0x0, 0x0);
        gbc.writeMem(0x3068, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x20b6, gbc.sp());
        EXPECT(0x306a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 030D
        gbc.setState(0x5884, 0xbf6b, 0x58a0, 0xcdfe, 0xc05a, 0x45c9, 0x1, 0x1);
        gbc.writeMem(0x5884, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbf6b, gbc.sp());
        EXPECT(0x5886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 030E
        gbc.setState(0x45d, 0x2e6f, 0xf320, 0x7ba, 0x4282, 0xa050, 0x1, 0x0);
        gbc.writeMem(0x45d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2e6f, gbc.sp());
        EXPECT(0x45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 030F
        gbc.setState(0x47b8, 0x4c5a, 0xe280, 0xfcc2, 0x8827, 0x4107, 0x1, 0x1);
        gbc.writeMem(0x47b8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4c5a, gbc.sp());
        EXPECT(0x47ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0310
        gbc.setState(0x6ecb, 0xa575, 0xe690, 0xb6cf, 0x3b43, 0x77c1, 0x1, 0x0);
        gbc.writeMem(0x6ecb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa575, gbc.sp());
        EXPECT(0x6ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0311
        gbc.setState(0x6ed6, 0x8574, 0xcbe0, 0x2c62, 0x5af1, 0x874e, 0x0, 0x0);
        gbc.writeMem(0x6ed6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8574, gbc.sp());
        EXPECT(0x6ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0312
        gbc.setState(0x4a17, 0x295, 0x36a0, 0x8e34, 0x1367, 0x289c, 0x0, 0x1);
        gbc.writeMem(0x4a17, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x295, gbc.sp());
        EXPECT(0x4a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0313
        gbc.setState(0xc22e, 0x91b2, 0x7d00, 0x2db1, 0xb21d, 0x274d, 0x1, 0x0);
        gbc.writeMem(0xc22e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x91b2, gbc.sp());
        EXPECT(0xc230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22e));
        EXPECT(0x5d, gbc.readMem(0xc22f));
        // CB 5D 0314
        gbc.setState(0xc3b2, 0x1539, 0x1ff0, 0xb118, 0x751c, 0x1ca8, 0x0, 0x0);
        gbc.writeMem(0xc3b2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1539, gbc.sp());
        EXPECT(0xc3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b2));
        EXPECT(0x5d, gbc.readMem(0xc3b3));
        // CB 5D 0315
        gbc.setState(0x3b24, 0x400e, 0xd990, 0xb7cc, 0x84fd, 0xadcd, 0x0, 0x0);
        gbc.writeMem(0x3b24, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x400e, gbc.sp());
        EXPECT(0x3b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0316
        gbc.setState(0x1505, 0xb120, 0x60b0, 0x24b, 0x8af0, 0xc4bc, 0x1, 0x1);
        gbc.writeMem(0x1505, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb120, gbc.sp());
        EXPECT(0x1507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0318
        gbc.setState(0xa945, 0x6e86, 0x9a40, 0xa7d2, 0x7c41, 0x8bfb, 0x1, 0x0);
        gbc.writeMem(0xa945, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6e86, gbc.sp());
        EXPECT(0xa947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa945));
        EXPECT(0x5d, gbc.readMem(0xa946));
        // CB 5D 0319
        gbc.setState(0xfdd, 0xb62b, 0xeff0, 0x5824, 0xf9b8, 0x627b, 0x0, 0x1);
        gbc.writeMem(0xfdd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb62b, gbc.sp());
        EXPECT(0xfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 031B
        gbc.setState(0x8ee3, 0xccfe, 0x74c0, 0x234, 0x5410, 0x8028, 0x1, 0x1);
        gbc.writeMem(0x8ee3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xccfe, gbc.sp());
        EXPECT(0x8ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee3));
        EXPECT(0x5d, gbc.readMem(0x8ee4));
        // CB 5D 031C
        gbc.setState(0xd43b, 0x164b, 0xbe0, 0xdc6d, 0x5026, 0xf8cb, 0x1, 0x1);
        gbc.writeMem(0xd43b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x164b, gbc.sp());
        EXPECT(0xd43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43b));
        EXPECT(0x5d, gbc.readMem(0xd43c));
        // CB 5D 031D
        gbc.setState(0x2efe, 0xabcc, 0x5d70, 0xcffe, 0x2f78, 0x61c6, 0x0, 0x1);
        gbc.writeMem(0x2efe, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xabcc, gbc.sp());
        EXPECT(0x2f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 031E
        gbc.setState(0x7e53, 0x9d9f, 0x9b20, 0xfe3a, 0x7065, 0x5286, 0x1, 0x0);
        gbc.writeMem(0x7e53, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9d9f, gbc.sp());
        EXPECT(0x7e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 031F
        gbc.setState(0x7a13, 0xbda5, 0x4b40, 0x24a6, 0xf465, 0xa7d, 0x1, 0x0);
        gbc.writeMem(0x7a13, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbda5, gbc.sp());
        EXPECT(0x7a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0320
        gbc.setState(0x7994, 0x23e7, 0x9060, 0x1f47, 0x2e43, 0x5f8e, 0x0, 0x0);
        gbc.writeMem(0x7994, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x23e7, gbc.sp());
        EXPECT(0x7996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0321
        gbc.setState(0x8102, 0x674d, 0xfca0, 0x3afc, 0x2a8a, 0xf25c, 0x0, 0x1);
        gbc.writeMem(0x8102, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x674d, gbc.sp());
        EXPECT(0x8104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8102));
        EXPECT(0x5d, gbc.readMem(0x8103));
        // CB 5D 0322
        gbc.setState(0x355d, 0x10cb, 0x7dd0, 0xb168, 0xdd6d, 0x3645, 0x0, 0x0);
        gbc.writeMem(0x355d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x10cb, gbc.sp());
        EXPECT(0x355f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0323
        gbc.setState(0x84ff, 0x3a9f, 0x2ac0, 0x5fe4, 0x96cc, 0xeb5, 0x1, 0x1);
        gbc.writeMem(0x84ff, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3a9f, gbc.sp());
        EXPECT(0x8501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ff));
        EXPECT(0x5d, gbc.readMem(0x8500));
        // CB 5D 0324
        gbc.setState(0x4721, 0x8a20, 0x2030, 0xd5fc, 0x40b2, 0x8e3, 0x0, 0x1);
        gbc.writeMem(0x4721, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8a20, gbc.sp());
        EXPECT(0x4723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0325
        gbc.setState(0x13a0, 0xf22a, 0x1da0, 0x4613, 0xbc4f, 0x495b, 0x1, 0x0);
        gbc.writeMem(0x13a0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf22a, gbc.sp());
        EXPECT(0x13a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0326
        gbc.setState(0x5f36, 0x714a, 0xbae0, 0x89bd, 0x8faa, 0x8715, 0x0, 0x0);
        gbc.writeMem(0x5f36, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x714a, gbc.sp());
        EXPECT(0x5f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0327
        gbc.setState(0x78ee, 0x9d64, 0x6450, 0x2527, 0x4388, 0x95ab, 0x1, 0x0);
        gbc.writeMem(0x78ee, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9d64, gbc.sp());
        EXPECT(0x78f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0328
        gbc.setState(0xa548, 0xfacd, 0x4980, 0x2e0a, 0xe772, 0xdb3a, 0x0, 0x1);
        gbc.writeMem(0xa548, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfacd, gbc.sp());
        EXPECT(0xa54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa548));
        EXPECT(0x5d, gbc.readMem(0xa549));
        // CB 5D 0329
        gbc.setState(0x5d2f, 0xe8c1, 0x6d30, 0xc39e, 0x820e, 0x533f, 0x0, 0x0);
        gbc.writeMem(0x5d2f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe8c1, gbc.sp());
        EXPECT(0x5d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 032A
        gbc.setState(0x4bb3, 0xad50, 0x1c0, 0xc4c1, 0x40ff, 0x4efa, 0x0, 0x1);
        gbc.writeMem(0x4bb3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xad50, gbc.sp());
        EXPECT(0x4bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 032B
        gbc.setState(0x6c91, 0xfd39, 0xad0, 0xa9c9, 0x4e32, 0x9817, 0x0, 0x0);
        gbc.writeMem(0x6c91, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfd39, gbc.sp());
        EXPECT(0x6c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 032C
        gbc.setState(0xd92d, 0x4c88, 0xca60, 0x7c0f, 0x1b8b, 0x5f7f, 0x0, 0x0);
        gbc.writeMem(0xd92d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4c88, gbc.sp());
        EXPECT(0xd92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92d));
        EXPECT(0x5d, gbc.readMem(0xd92e));
        // CB 5D 032E
        gbc.setState(0x8a4b, 0xda57, 0x84b0, 0x8d8d, 0xdb44, 0xe506, 0x1, 0x1);
        gbc.writeMem(0x8a4b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xda57, gbc.sp());
        EXPECT(0x8a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4b));
        EXPECT(0x5d, gbc.readMem(0x8a4c));
        // CB 5D 032F
        gbc.setState(0x18c8, 0xac10, 0x5620, 0x377f, 0xa9f5, 0xc873, 0x1, 0x1);
        gbc.writeMem(0x18c8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xac10, gbc.sp());
        EXPECT(0x18ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0330
        gbc.setState(0x89fb, 0x1340, 0xf300, 0x8ad3, 0xb642, 0x4bfa, 0x1, 0x1);
        gbc.writeMem(0x89fb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1340, gbc.sp());
        EXPECT(0x89fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fb));
        EXPECT(0x5d, gbc.readMem(0x89fc));
        // CB 5D 0331
        gbc.setState(0x5c37, 0x2461, 0x6e90, 0x1cc4, 0x3dda, 0x825f, 0x1, 0x0);
        gbc.writeMem(0x5c37, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2461, gbc.sp());
        EXPECT(0x5c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0332
        gbc.setState(0x7860, 0xe9d3, 0x1840, 0x49d, 0xe85a, 0x152b, 0x1, 0x1);
        gbc.writeMem(0x7860, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe9d3, gbc.sp());
        EXPECT(0x7862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0333
        gbc.setState(0x3853, 0x7b6, 0xe9c0, 0xd1f0, 0x7ce1, 0x8420, 0x0, 0x1);
        gbc.writeMem(0x3853, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7b6, gbc.sp());
        EXPECT(0x3855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0334
        gbc.setState(0x6388, 0x857, 0xccf0, 0x8c5b, 0x5d7a, 0x96c8, 0x1, 0x1);
        gbc.writeMem(0x6388, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x857, gbc.sp());
        EXPECT(0x638a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0335
        gbc.setState(0x58f2, 0xfd34, 0xf270, 0x3b28, 0x856a, 0xf005, 0x1, 0x0);
        gbc.writeMem(0x58f2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfd34, gbc.sp());
        EXPECT(0x58f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0336
        gbc.setState(0x9bed, 0x7024, 0xea00, 0x2c5d, 0xbb0e, 0x2474, 0x0, 0x0);
        gbc.writeMem(0x9bed, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7024, gbc.sp());
        EXPECT(0x9bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bed));
        EXPECT(0x5d, gbc.readMem(0x9bee));
        // CB 5D 0338
        gbc.setState(0xe43d, 0xa73d, 0x1e10, 0x110d, 0x3383, 0x1a7c, 0x1, 0x1);
        gbc.writeMem(0xe43d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa73d, gbc.sp());
        EXPECT(0xe43f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43d));
        EXPECT(0x5d, gbc.readMem(0xe43e));
        // CB 5D 0339
        gbc.setState(0x188f, 0xa980, 0x5600, 0x9c1f, 0xd97c, 0xc513, 0x0, 0x1);
        gbc.writeMem(0x188f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa980, gbc.sp());
        EXPECT(0x1891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 033A
        gbc.setState(0xac26, 0xc175, 0x2850, 0xee72, 0x6dd0, 0x7007, 0x1, 0x1);
        gbc.writeMem(0xac26, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc175, gbc.sp());
        EXPECT(0xac28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac26));
        EXPECT(0x5d, gbc.readMem(0xac27));
        // CB 5D 033B
        gbc.setState(0x74b2, 0x45fb, 0xbca0, 0x73f3, 0xde1d, 0x8c51, 0x0, 0x0);
        gbc.writeMem(0x74b2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x45fb, gbc.sp());
        EXPECT(0x74b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 033C
        gbc.setState(0x3922, 0x679e, 0x3250, 0x57fe, 0x446d, 0xf5f6, 0x1, 0x0);
        gbc.writeMem(0x3922, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x679e, gbc.sp());
        EXPECT(0x3924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 033D
        gbc.setState(0x6af9, 0x41c, 0x3f40, 0x31e9, 0x971f, 0xd230, 0x1, 0x0);
        gbc.writeMem(0x6af9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x41c, gbc.sp());
        EXPECT(0x6afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 033E
        gbc.setState(0x1ae2, 0x89de, 0x2b40, 0xd46e, 0x68d1, 0xaa07, 0x1, 0x0);
        gbc.writeMem(0x1ae2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x89de, gbc.sp());
        EXPECT(0x1ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 033F
        gbc.setState(0xcd35, 0x9951, 0xac50, 0x6423, 0xefbb, 0x9fc6, 0x0, 0x0);
        gbc.writeMem(0xcd35, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9951, gbc.sp());
        EXPECT(0xcd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd35));
        EXPECT(0x5d, gbc.readMem(0xcd36));
        // CB 5D 0340
        gbc.setState(0x15f9, 0xa6c5, 0xefc0, 0x6eed, 0x9c5d, 0x1f3f, 0x1, 0x1);
        gbc.writeMem(0x15f9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa6c5, gbc.sp());
        EXPECT(0x15fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0341
        gbc.setState(0xb097, 0x3bab, 0x38f0, 0x2fcc, 0x60b1, 0x22ca, 0x0, 0x0);
        gbc.writeMem(0xb097, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0xb099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb097));
        EXPECT(0x5d, gbc.readMem(0xb098));
        // CB 5D 0342
        gbc.setState(0xee25, 0x1e2b, 0x9270, 0xdaea, 0xc2b, 0x105a, 0x0, 0x1);
        gbc.writeMem(0xee25, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1e2b, gbc.sp());
        EXPECT(0xee27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee25));
        EXPECT(0x5d, gbc.readMem(0xee26));
        // CB 5D 0343
        gbc.setState(0xd290, 0xa2fb, 0x5f80, 0xdba3, 0x9de7, 0x4a9f, 0x1, 0x0);
        gbc.writeMem(0xd290, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa2fb, gbc.sp());
        EXPECT(0xd292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd290));
        EXPECT(0x5d, gbc.readMem(0xd291));
        // CB 5D 0344
        gbc.setState(0xce7c, 0x94ed, 0xe6b0, 0x2e2c, 0x40f7, 0xc43, 0x1, 0x0);
        gbc.writeMem(0xce7c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x94ed, gbc.sp());
        EXPECT(0xce7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7c));
        EXPECT(0x5d, gbc.readMem(0xce7d));
        // CB 5D 0345
        gbc.setState(0x5c30, 0x1656, 0x7e30, 0xde52, 0xb44e, 0x1ce3, 0x0, 0x0);
        gbc.writeMem(0x5c30, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1656, gbc.sp());
        EXPECT(0x5c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0346
        gbc.setState(0x5892, 0xd29, 0x3a90, 0xdf78, 0x44c6, 0x3f5d, 0x1, 0x1);
        gbc.writeMem(0x5892, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd29, gbc.sp());
        EXPECT(0x5894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0347
        gbc.setState(0x57, 0x7b7f, 0x1430, 0xb1d4, 0xf9de, 0x816b, 0x0, 0x0);
        gbc.writeMem(0x57, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7b7f, gbc.sp());
        EXPECT(0x59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0348
        gbc.setState(0x4504, 0x57e0, 0x4540, 0xf42f, 0xaf18, 0xbf58, 0x1, 0x0);
        gbc.writeMem(0x4504, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x57e0, gbc.sp());
        EXPECT(0x4506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0349
        gbc.setState(0xa8a4, 0xe13e, 0x29e0, 0xec53, 0xf85c, 0x231b, 0x1, 0x1);
        gbc.writeMem(0xa8a4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0xa8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a4));
        EXPECT(0x5d, gbc.readMem(0xa8a5));
        // CB 5D 034A
        gbc.setState(0xb48, 0x39dc, 0xcfe0, 0xd3a0, 0x7796, 0x64a9, 0x0, 0x0);
        gbc.writeMem(0xb48, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x39dc, gbc.sp());
        EXPECT(0xb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 034B
        gbc.setState(0x4780, 0x7d41, 0x4860, 0x66d0, 0xc973, 0xac2d, 0x1, 0x1);
        gbc.writeMem(0x4780, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7d41, gbc.sp());
        EXPECT(0x4782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 034C
        gbc.setState(0xa3d4, 0xb20d, 0x8f0, 0x543b, 0x652d, 0x691, 0x0, 0x0);
        gbc.writeMem(0xa3d4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb20d, gbc.sp());
        EXPECT(0xa3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d4));
        EXPECT(0x5d, gbc.readMem(0xa3d5));
        // CB 5D 034D
        gbc.setState(0xd2fd, 0x9ca, 0xc2c0, 0xf387, 0x4861, 0xb98a, 0x0, 0x1);
        gbc.writeMem(0xd2fd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9ca, gbc.sp());
        EXPECT(0xd2ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fd));
        EXPECT(0x5d, gbc.readMem(0xd2fe));
        // CB 5D 034E
        gbc.setState(0x6119, 0x53a5, 0xfc0, 0x4173, 0x5b4f, 0x3104, 0x0, 0x0);
        gbc.writeMem(0x6119, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x53a5, gbc.sp());
        EXPECT(0x611b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 034F
        gbc.setState(0xea3e, 0x8290, 0xd3f0, 0x74c3, 0xae72, 0x4efa, 0x0, 0x0);
        gbc.writeMem(0xea3e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8290, gbc.sp());
        EXPECT(0xea40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3e));
        EXPECT(0x5d, gbc.readMem(0xea3f));
        // CB 5D 0350
        gbc.setState(0x8cde, 0x5589, 0x1c20, 0xec31, 0x969c, 0x469c, 0x1, 0x0);
        gbc.writeMem(0x8cde, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5589, gbc.sp());
        EXPECT(0x8ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cde));
        EXPECT(0x5d, gbc.readMem(0x8cdf));
        // CB 5D 0351
        gbc.setState(0xa552, 0x50f9, 0x60d0, 0x3799, 0x54d4, 0x1c4b, 0x0, 0x0);
        gbc.writeMem(0xa552, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x50f9, gbc.sp());
        EXPECT(0xa554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa552));
        EXPECT(0x5d, gbc.readMem(0xa553));
        // CB 5D 0352
        gbc.setState(0x6e0, 0xcfb, 0xc220, 0x19ad, 0xb7ab, 0x274a, 0x0, 0x1);
        gbc.writeMem(0x6e0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcfb, gbc.sp());
        EXPECT(0x6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0353
        gbc.setState(0x6079, 0x3f28, 0xa750, 0x3dd3, 0x1bc6, 0xc4d5, 0x0, 0x0);
        gbc.writeMem(0x6079, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3f28, gbc.sp());
        EXPECT(0x607b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0354
        gbc.setState(0xb994, 0x64fe, 0x2820, 0xf3ef, 0xce8d, 0x548d, 0x0, 0x1);
        gbc.writeMem(0xb994, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x64fe, gbc.sp());
        EXPECT(0xb996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb994));
        EXPECT(0x5d, gbc.readMem(0xb995));
        // CB 5D 0355
        gbc.setState(0x99cc, 0xf451, 0xe5d0, 0x65ae, 0x9ed, 0xb1bc, 0x1, 0x1);
        gbc.writeMem(0x99cc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0x99ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99cc));
        EXPECT(0x5d, gbc.readMem(0x99cd));
        // CB 5D 0356
        gbc.setState(0xa620, 0xc52, 0xf940, 0x71cb, 0x42d5, 0x7707, 0x1, 0x0);
        gbc.writeMem(0xa620, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc52, gbc.sp());
        EXPECT(0xa622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa620));
        EXPECT(0x5d, gbc.readMem(0xa621));
        // CB 5D 0357
        gbc.setState(0x83fa, 0xcbcf, 0xdab0, 0xf730, 0x8aff, 0x8a68, 0x0, 0x1);
        gbc.writeMem(0x83fa, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcbcf, gbc.sp());
        EXPECT(0x83fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fa));
        EXPECT(0x5d, gbc.readMem(0x83fb));
        // CB 5D 0358
        gbc.setState(0x542c, 0x405d, 0x8930, 0xfd71, 0xef99, 0xb4e8, 0x1, 0x0);
        gbc.writeMem(0x542c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x405d, gbc.sp());
        EXPECT(0x542e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0359
        gbc.setState(0xd754, 0x9f3e, 0x5a10, 0xef2, 0xe700, 0xfa69, 0x1, 0x1);
        gbc.writeMem(0xd754, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9f3e, gbc.sp());
        EXPECT(0xd756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd754));
        EXPECT(0x5d, gbc.readMem(0xd755));
        // CB 5D 035A
        gbc.setState(0x2b1c, 0xcdd9, 0xb90, 0xcc7f, 0x3da3, 0x17f2, 0x0, 0x1);
        gbc.writeMem(0x2b1c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcdd9, gbc.sp());
        EXPECT(0x2b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 035B
        gbc.setState(0xe8b7, 0xb32b, 0x7980, 0xd660, 0x5ea, 0x72e7, 0x1, 0x0);
        gbc.writeMem(0xe8b7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb32b, gbc.sp());
        EXPECT(0xe8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b7));
        EXPECT(0x5d, gbc.readMem(0xe8b8));
        // CB 5D 035C
        gbc.setState(0xaa3, 0x520b, 0x21c0, 0x1350, 0x3f3d, 0xcef7, 0x1, 0x0);
        gbc.writeMem(0xaa3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x520b, gbc.sp());
        EXPECT(0xaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 035D
        gbc.setState(0xdde2, 0xdc67, 0x4140, 0xbf6b, 0xd860, 0xf79d, 0x0, 0x1);
        gbc.writeMem(0xdde2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdc67, gbc.sp());
        EXPECT(0xdde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde2));
        EXPECT(0x5d, gbc.readMem(0xdde3));
        // CB 5D 035E
        gbc.setState(0xd1e4, 0xdc63, 0xbf70, 0xe252, 0xb2aa, 0xf788, 0x1, 0x0);
        gbc.writeMem(0xd1e4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdc63, gbc.sp());
        EXPECT(0xd1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e4));
        EXPECT(0x5d, gbc.readMem(0xd1e5));
        // CB 5D 035F
        gbc.setState(0x5dab, 0xa0bc, 0xe070, 0xe7e3, 0xc8b3, 0x960e, 0x1, 0x1);
        gbc.writeMem(0x5dab, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa0bc, gbc.sp());
        EXPECT(0x5dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0360
        gbc.setState(0x9ef0, 0xa442, 0x3980, 0xdcb3, 0xf74e, 0xe7bf, 0x0, 0x1);
        gbc.writeMem(0x9ef0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa442, gbc.sp());
        EXPECT(0x9ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef0));
        EXPECT(0x5d, gbc.readMem(0x9ef1));
        // CB 5D 0361
        gbc.setState(0xad5e, 0x9d6c, 0xe320, 0xec95, 0x1df, 0xb0e5, 0x1, 0x0);
        gbc.writeMem(0xad5e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9d6c, gbc.sp());
        EXPECT(0xad60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5e));
        EXPECT(0x5d, gbc.readMem(0xad5f));
        // CB 5D 0362
        gbc.setState(0x2a97, 0x7000, 0x50c0, 0xcb16, 0x12a8, 0xc4da, 0x0, 0x1);
        gbc.writeMem(0x2a97, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7000, gbc.sp());
        EXPECT(0x2a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0363
        gbc.setState(0x3533, 0xd9, 0x9f20, 0x19a0, 0xe65d, 0x1ad1, 0x0, 0x1);
        gbc.writeMem(0x3533, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd9, gbc.sp());
        EXPECT(0x3535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0364
        gbc.setState(0xa42b, 0x2e8c, 0x9580, 0xc50d, 0x860e, 0x46cc, 0x0, 0x1);
        gbc.writeMem(0xa42b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2e8c, gbc.sp());
        EXPECT(0xa42d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42b));
        EXPECT(0x5d, gbc.readMem(0xa42c));
        // CB 5D 0365
        gbc.setState(0x5a0c, 0x3773, 0xa9c0, 0xcca9, 0x7434, 0x894c, 0x1, 0x0);
        gbc.writeMem(0x5a0c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3773, gbc.sp());
        EXPECT(0x5a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0367
        gbc.setState(0xaee5, 0x2cf1, 0xb780, 0x46f6, 0xd56d, 0xf7dc, 0x0, 0x1);
        gbc.writeMem(0xaee5, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2cf1, gbc.sp());
        EXPECT(0xaee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee5));
        EXPECT(0x5d, gbc.readMem(0xaee6));
        // CB 5D 0368
        gbc.setState(0x3056, 0x4811, 0x82a0, 0xd6a1, 0x6dc3, 0xe97c, 0x1, 0x1);
        gbc.writeMem(0x3056, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4811, gbc.sp());
        EXPECT(0x3058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0369
        gbc.setState(0x8f81, 0xe949, 0xcae0, 0x4c94, 0x2393, 0x1aa9, 0x1, 0x1);
        gbc.writeMem(0x8f81, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe949, gbc.sp());
        EXPECT(0x8f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f81));
        EXPECT(0x5d, gbc.readMem(0x8f82));
        // CB 5D 036A
        gbc.setState(0xd38e, 0x2a42, 0x31a0, 0xc640, 0xdaf1, 0x99dd, 0x0, 0x1);
        gbc.writeMem(0xd38e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2a42, gbc.sp());
        EXPECT(0xd390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38e));
        EXPECT(0x5d, gbc.readMem(0xd38f));
        // CB 5D 036B
        gbc.setState(0xde5a, 0x7fca, 0x88b0, 0x40d, 0x972b, 0x3224, 0x1, 0x1);
        gbc.writeMem(0xde5a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7fca, gbc.sp());
        EXPECT(0xde5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5a));
        EXPECT(0x5d, gbc.readMem(0xde5b));
        // CB 5D 036C
        gbc.setState(0xccff, 0xd228, 0xea00, 0xa6cb, 0x584d, 0xfbc7, 0x0, 0x1);
        gbc.writeMem(0xccff, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd228, gbc.sp());
        EXPECT(0xcd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccff));
        EXPECT(0x5d, gbc.readMem(0xcd00));
        // CB 5D 036D
        gbc.setState(0x67e7, 0x979d, 0xb880, 0xca28, 0xe4a1, 0x1edb, 0x0, 0x0);
        gbc.writeMem(0x67e7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x979d, gbc.sp());
        EXPECT(0x67e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 036E
        gbc.setState(0xbf3f, 0xc3d6, 0xa830, 0x48dd, 0xc37c, 0xa8d0, 0x0, 0x1);
        gbc.writeMem(0xbf3f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc3d6, gbc.sp());
        EXPECT(0xbf41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf3f));
        EXPECT(0x5d, gbc.readMem(0xbf40));
        // CB 5D 036F
        gbc.setState(0x75bb, 0xb2a2, 0xeec0, 0x97b6, 0xf2d5, 0x6d85, 0x0, 0x0);
        gbc.writeMem(0x75bb, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb2a2, gbc.sp());
        EXPECT(0x75bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0370
        gbc.setState(0xa526, 0xdd04, 0xc0b0, 0x4976, 0x60, 0xd05a, 0x0, 0x1);
        gbc.writeMem(0xa526, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdd04, gbc.sp());
        EXPECT(0xa528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa526));
        EXPECT(0x5d, gbc.readMem(0xa527));
        // CB 5D 0371
        gbc.setState(0x152, 0xfbad, 0xc1b0, 0xa9ae, 0x7a7b, 0xbd58, 0x0, 0x1);
        gbc.writeMem(0x152, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfbad, gbc.sp());
        EXPECT(0x154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0372
        gbc.setState(0xe3b1, 0x5078, 0x1030, 0xf33a, 0x44f, 0x1286, 0x0, 0x0);
        gbc.writeMem(0xe3b1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5078, gbc.sp());
        EXPECT(0xe3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b1));
        EXPECT(0x5d, gbc.readMem(0xe3b2));
        // CB 5D 0373
        gbc.setState(0x6106, 0x657b, 0xa070, 0x32ca, 0x4af9, 0x470c, 0x0, 0x1);
        gbc.writeMem(0x6106, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x657b, gbc.sp());
        EXPECT(0x6108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0374
        gbc.setState(0xecdc, 0xc5c0, 0xc60, 0x8a02, 0x680, 0x1380, 0x0, 0x1);
        gbc.writeMem(0xecdc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc5c0, gbc.sp());
        EXPECT(0xecde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecdc));
        EXPECT(0x5d, gbc.readMem(0xecdd));
        // CB 5D 0375
        gbc.setState(0xccb4, 0xe456, 0x91a0, 0xd84, 0xf18c, 0x8fb2, 0x0, 0x1);
        gbc.writeMem(0xccb4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe456, gbc.sp());
        EXPECT(0xccb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb4));
        EXPECT(0x5d, gbc.readMem(0xccb5));
        // CB 5D 0376
        gbc.setState(0x63c3, 0x5aab, 0x9310, 0x70f5, 0xa40d, 0x99e8, 0x1, 0x1);
        gbc.writeMem(0x63c3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5aab, gbc.sp());
        EXPECT(0x63c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0377
        gbc.setState(0x5019, 0x8b17, 0x11c0, 0xa5eb, 0x612a, 0x4e92, 0x1, 0x1);
        gbc.writeMem(0x5019, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8b17, gbc.sp());
        EXPECT(0x501b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0378
        gbc.setState(0xac73, 0x2bf5, 0xe6f0, 0x4f0c, 0x3423, 0x8a9b, 0x1, 0x0);
        gbc.writeMem(0xac73, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2bf5, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac73));
        EXPECT(0x5d, gbc.readMem(0xac74));
        // CB 5D 0379
        gbc.setState(0x180e, 0xedc5, 0xf8c0, 0xec19, 0x7675, 0xc116, 0x1, 0x1);
        gbc.writeMem(0x180e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xedc5, gbc.sp());
        EXPECT(0x1810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 037C
        gbc.setState(0xcc85, 0x21b5, 0x2990, 0x3730, 0x74fe, 0x7701, 0x1, 0x0);
        gbc.writeMem(0xcc85, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x21b5, gbc.sp());
        EXPECT(0xcc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc85));
        EXPECT(0x5d, gbc.readMem(0xcc86));
        // CB 5D 037D
        gbc.setState(0xed7a, 0x809a, 0x2060, 0x4a64, 0x1f9c, 0xded2, 0x0, 0x0);
        gbc.writeMem(0xed7a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x809a, gbc.sp());
        EXPECT(0xed7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7a));
        EXPECT(0x5d, gbc.readMem(0xed7b));
        // CB 5D 037E
        gbc.setState(0xbf72, 0xbf4b, 0xa2e0, 0xd447, 0x2200, 0x4318, 0x0, 0x1);
        gbc.writeMem(0xbf72, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbf4b, gbc.sp());
        EXPECT(0xbf74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf72));
        EXPECT(0x5d, gbc.readMem(0xbf73));
        // CB 5D 037F
        gbc.setState(0x93ea, 0x6384, 0xfd90, 0xf1c2, 0x42af, 0xc6ec, 0x1, 0x1);
        gbc.writeMem(0x93ea, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6384, gbc.sp());
        EXPECT(0x93ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ea));
        EXPECT(0x5d, gbc.readMem(0x93eb));
        // CB 5D 0380
        gbc.setState(0x1597, 0xae53, 0xde70, 0xcdb7, 0xb31d, 0x950, 0x0, 0x0);
        gbc.writeMem(0x1597, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xae53, gbc.sp());
        EXPECT(0x1599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0381
        gbc.setState(0x5cb6, 0x1c07, 0x6d30, 0x595, 0x18d6, 0xe106, 0x1, 0x0);
        gbc.writeMem(0x5cb6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1c07, gbc.sp());
        EXPECT(0x5cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0382
        gbc.setState(0x5731, 0xc2da, 0x4960, 0x8064, 0xda96, 0x47b4, 0x1, 0x1);
        gbc.writeMem(0x5731, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc2da, gbc.sp());
        EXPECT(0x5733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0383
        gbc.setState(0x2000, 0xe344, 0x77a0, 0x8528, 0x235c, 0xd8b1, 0x1, 0x1);
        gbc.writeMem(0x2000, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe344, gbc.sp());
        EXPECT(0x2002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0384
        gbc.setState(0x0, 0x6bd0, 0xf960, 0x9aa1, 0x6577, 0x8434, 0x1, 0x0);
        gbc.writeMem(0x0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6bd0, gbc.sp());
        EXPECT(0x2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0385
        gbc.setState(0x24da, 0x8bee, 0xefc0, 0x5897, 0xf33c, 0xbf16, 0x1, 0x0);
        gbc.writeMem(0x24da, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8bee, gbc.sp());
        EXPECT(0x24dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0386
        gbc.setState(0xe063, 0xeb32, 0x6d70, 0xf0b3, 0x6416, 0x4f31, 0x0, 0x0);
        gbc.writeMem(0xe063, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xeb32, gbc.sp());
        EXPECT(0xe065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe063));
        EXPECT(0x5d, gbc.readMem(0xe064));
        // CB 5D 0387
        gbc.setState(0xab29, 0x7d30, 0x7610, 0x8eb3, 0xad20, 0x9d09, 0x1, 0x0);
        gbc.writeMem(0xab29, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7d30, gbc.sp());
        EXPECT(0xab2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab29));
        EXPECT(0x5d, gbc.readMem(0xab2a));
        // CB 5D 0388
        gbc.setState(0xa5ba, 0xff3e, 0xb00, 0x2aa0, 0x74cd, 0xb375, 0x1, 0x1);
        gbc.writeMem(0xa5ba, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xff3e, gbc.sp());
        EXPECT(0xa5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ba));
        EXPECT(0x5d, gbc.readMem(0xa5bb));
        // CB 5D 0389
        gbc.setState(0xd681, 0xc52d, 0x3030, 0x57c4, 0xf4b6, 0x1e65, 0x0, 0x0);
        gbc.writeMem(0xd681, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc52d, gbc.sp());
        EXPECT(0xd683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd681));
        EXPECT(0x5d, gbc.readMem(0xd682));
        // CB 5D 038A
        gbc.setState(0x18a1, 0x9067, 0x5a70, 0x6eb, 0xd04f, 0x50ad, 0x0, 0x0);
        gbc.writeMem(0x18a1, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9067, gbc.sp());
        EXPECT(0x18a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 038B
        gbc.setState(0x5c65, 0xeaa, 0x2960, 0x761, 0x61fb, 0x6e2, 0x1, 0x0);
        gbc.writeMem(0x5c65, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0x5c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 038C
        gbc.setState(0x2a4, 0xe3f0, 0x47f0, 0x6544, 0x8d9d, 0xbf5b, 0x0, 0x0);
        gbc.writeMem(0x2a4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe3f0, gbc.sp());
        EXPECT(0x2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 038D
        gbc.setState(0x5897, 0x8324, 0xf7b0, 0x63e2, 0xbe40, 0xe2e3, 0x0, 0x1);
        gbc.writeMem(0x5897, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8324, gbc.sp());
        EXPECT(0x5899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 038E
        gbc.setState(0xe5d4, 0x5530, 0x1e00, 0x4f60, 0xb439, 0xca2f, 0x0, 0x0);
        gbc.writeMem(0xe5d4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5530, gbc.sp());
        EXPECT(0xe5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d4));
        EXPECT(0x5d, gbc.readMem(0xe5d5));
        // CB 5D 0390
        gbc.setState(0x9a53, 0xc5c5, 0x7880, 0x19f2, 0xec94, 0x725f, 0x0, 0x1);
        gbc.writeMem(0x9a53, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc5c5, gbc.sp());
        EXPECT(0x9a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a53));
        EXPECT(0x5d, gbc.readMem(0x9a54));
        // CB 5D 0391
        gbc.setState(0xedea, 0x706a, 0x5880, 0xe2d1, 0xf55c, 0xdbda, 0x1, 0x0);
        gbc.writeMem(0xedea, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x706a, gbc.sp());
        EXPECT(0xedec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedea));
        EXPECT(0x5d, gbc.readMem(0xedeb));
        // CB 5D 0392
        gbc.setState(0xa6e9, 0xeec4, 0x6290, 0xed6c, 0x863b, 0xf7c2, 0x0, 0x0);
        gbc.writeMem(0xa6e9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xeec4, gbc.sp());
        EXPECT(0xa6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e9));
        EXPECT(0x5d, gbc.readMem(0xa6ea));
        // CB 5D 0393
        gbc.setState(0x64c6, 0xca22, 0xe8d0, 0x5053, 0xe8bd, 0xa696, 0x0, 0x1);
        gbc.writeMem(0x64c6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xca22, gbc.sp());
        EXPECT(0x64c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 0394
        gbc.setState(0xe130, 0xd1fe, 0x4910, 0x8dd5, 0x5f11, 0x3196, 0x1, 0x0);
        gbc.writeMem(0xe130, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd1fe, gbc.sp());
        EXPECT(0xe132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe130));
        EXPECT(0x5d, gbc.readMem(0xe131));
        // CB 5D 0395
        gbc.setState(0x8d08, 0xa545, 0x3c00, 0xebc5, 0x6f7d, 0xc1f1, 0x0, 0x1);
        gbc.writeMem(0x8d08, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa545, gbc.sp());
        EXPECT(0x8d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d08));
        EXPECT(0x5d, gbc.readMem(0x8d09));
        // CB 5D 0396
        gbc.setState(0x4d66, 0x21f5, 0x3ea0, 0xfc58, 0x1195, 0x71e6, 0x0, 0x1);
        gbc.writeMem(0x4d66, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x21f5, gbc.sp());
        EXPECT(0x4d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 0397
        gbc.setState(0xa281, 0x8bc1, 0xebf0, 0x64ed, 0xe244, 0x6153, 0x1, 0x0);
        gbc.writeMem(0xa281, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8bc1, gbc.sp());
        EXPECT(0xa283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa281));
        EXPECT(0x5d, gbc.readMem(0xa282));
        // CB 5D 0398
        gbc.setState(0x8706, 0x304a, 0x84f0, 0xf272, 0xaddc, 0x5b21, 0x1, 0x1);
        gbc.writeMem(0x8706, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x304a, gbc.sp());
        EXPECT(0x8708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8706));
        EXPECT(0x5d, gbc.readMem(0x8707));
        // CB 5D 0399
        gbc.setState(0x6cb0, 0x9159, 0x46a0, 0xc14, 0x1b52, 0x4e78, 0x0, 0x1);
        gbc.writeMem(0x6cb0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9159, gbc.sp());
        EXPECT(0x6cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 039A
        gbc.setState(0x865, 0x5b3, 0x62a0, 0x7094, 0x89ad, 0x9c8, 0x0, 0x0);
        gbc.writeMem(0x865, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5b3, gbc.sp());
        EXPECT(0x867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 039B
        gbc.setState(0x641f, 0x965d, 0x2030, 0x3fe0, 0x1ade, 0xe0fe, 0x1, 0x0);
        gbc.writeMem(0x641f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x965d, gbc.sp());
        EXPECT(0x6421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 039C
        gbc.setState(0xee9c, 0xcfcc, 0xa840, 0x839c, 0x11b9, 0xea57, 0x1, 0x1);
        gbc.writeMem(0xee9c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcfcc, gbc.sp());
        EXPECT(0xee9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9c));
        EXPECT(0x5d, gbc.readMem(0xee9d));
        // CB 5D 039D
        gbc.setState(0xcf6f, 0x2c52, 0x2ac0, 0xa2b6, 0x1d62, 0x732d, 0x0, 0x1);
        gbc.writeMem(0xcf6f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2c52, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6f));
        EXPECT(0x5d, gbc.readMem(0xcf70));
        // CB 5D 039E
        gbc.setState(0x8667, 0xb3ba, 0x6ac0, 0x8b3a, 0x915e, 0xc0d, 0x1, 0x1);
        gbc.writeMem(0x8667, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb3ba, gbc.sp());
        EXPECT(0x8669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8667));
        EXPECT(0x5d, gbc.readMem(0x8668));
        // CB 5D 039F
        gbc.setState(0x48dc, 0xf707, 0xcd0, 0xcf83, 0x9de7, 0x47c6, 0x1, 0x1);
        gbc.writeMem(0x48dc, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf707, gbc.sp());
        EXPECT(0x48de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03A0
        gbc.setState(0xea6b, 0x4abf, 0xdc30, 0x445d, 0xdc18, 0x463a, 0x1, 0x1);
        gbc.writeMem(0xea6b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4abf, gbc.sp());
        EXPECT(0xea6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6b));
        EXPECT(0x5d, gbc.readMem(0xea6c));
        // CB 5D 03A1
        gbc.setState(0x2aae, 0xd961, 0xa470, 0x46de, 0x223e, 0x4c0b, 0x1, 0x1);
        gbc.writeMem(0x2aae, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd961, gbc.sp());
        EXPECT(0x2ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03A2
        gbc.setState(0x910f, 0xf52b, 0xcb10, 0x8293, 0xa34b, 0x4471, 0x1, 0x1);
        gbc.writeMem(0x910f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf52b, gbc.sp());
        EXPECT(0x9111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910f));
        EXPECT(0x5d, gbc.readMem(0x9110));
        // CB 5D 03A3
        gbc.setState(0x8969, 0x41e, 0xb180, 0x42d5, 0xff4d, 0x8dad, 0x0, 0x0);
        gbc.writeMem(0x8969, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x41e, gbc.sp());
        EXPECT(0x896b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8969));
        EXPECT(0x5d, gbc.readMem(0x896a));
        // CB 5D 03A5
        gbc.setState(0x7dc9, 0x4b96, 0x60d0, 0x6fec, 0x6e44, 0x1cab, 0x0, 0x1);
        gbc.writeMem(0x7dc9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4b96, gbc.sp());
        EXPECT(0x7dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03A6
        gbc.setState(0x73d6, 0xea28, 0x8480, 0xf144, 0x8875, 0x3c68, 0x0, 0x0);
        gbc.writeMem(0x73d6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0x73d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03A7
        gbc.setState(0xa2e2, 0x875c, 0x6b30, 0x90a7, 0x6818, 0xa345, 0x1, 0x0);
        gbc.writeMem(0xa2e2, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x875c, gbc.sp());
        EXPECT(0xa2e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e2));
        EXPECT(0x5d, gbc.readMem(0xa2e3));
        // CB 5D 03A8
        gbc.setState(0x9722, 0x1178, 0x9430, 0x1f86, 0x830, 0x7c0e, 0x0, 0x0);
        gbc.writeMem(0x9722, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1178, gbc.sp());
        EXPECT(0x9724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9722));
        EXPECT(0x5d, gbc.readMem(0x9723));
        // CB 5D 03A9
        gbc.setState(0xcf3f, 0x861d, 0x78f0, 0x72b0, 0x50bc, 0x4181, 0x1, 0x1);
        gbc.writeMem(0xcf3f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x861d, gbc.sp());
        EXPECT(0xcf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf3f));
        EXPECT(0x5d, gbc.readMem(0xcf40));
        // CB 5D 03AA
        gbc.setState(0x881c, 0xb15b, 0x6da0, 0xeb8, 0xeff, 0x9fb3, 0x0, 0x1);
        gbc.writeMem(0x881c, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0x881e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881c));
        EXPECT(0x5d, gbc.readMem(0x881d));
        // CB 5D 03AC
        gbc.setState(0x3111, 0xf467, 0x9740, 0xdd7a, 0xb9b7, 0x7f5b, 0x0, 0x0);
        gbc.writeMem(0x3111, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf467, gbc.sp());
        EXPECT(0x3113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03AE
        gbc.setState(0xe02b, 0x1012, 0x3570, 0x5416, 0xa7e4, 0x19c8, 0x0, 0x1);
        gbc.writeMem(0xe02b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1012, gbc.sp());
        EXPECT(0xe02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02b));
        EXPECT(0x5d, gbc.readMem(0xe02c));
        // CB 5D 03B0
        gbc.setState(0xa38a, 0xbcf9, 0x5710, 0x7dc1, 0x6d8c, 0xa494, 0x0, 0x0);
        gbc.writeMem(0xa38a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbcf9, gbc.sp());
        EXPECT(0xa38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38a));
        EXPECT(0x5d, gbc.readMem(0xa38b));
        // CB 5D 03B1
        gbc.setState(0xad4, 0x1644, 0x2600, 0x16b6, 0xe4d3, 0x1e7, 0x0, 0x1);
        gbc.writeMem(0xad4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1644, gbc.sp());
        EXPECT(0xad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03B2
        gbc.setState(0x4833, 0xbf5c, 0x5360, 0x6c24, 0xca34, 0x86d5, 0x0, 0x1);
        gbc.writeMem(0x4833, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbf5c, gbc.sp());
        EXPECT(0x4835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03B3
        gbc.setState(0xfd4, 0x7b7, 0xcae0, 0x918e, 0xdb9f, 0x897d, 0x0, 0x1);
        gbc.writeMem(0xfd4, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7b7, gbc.sp());
        EXPECT(0xfd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03B4
        gbc.setState(0xe631, 0xbe90, 0xf160, 0x79a0, 0x9c64, 0xb473, 0x0, 0x1);
        gbc.writeMem(0xe631, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbe90, gbc.sp());
        EXPECT(0xe633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe631));
        EXPECT(0x5d, gbc.readMem(0xe632));
        // CB 5D 03B5
        gbc.setState(0x8e63, 0x693b, 0xf3e0, 0x1242, 0xa194, 0x252, 0x1, 0x1);
        gbc.writeMem(0x8e63, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x693b, gbc.sp());
        EXPECT(0x8e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e63));
        EXPECT(0x5d, gbc.readMem(0x8e64));
        // CB 5D 03B6
        gbc.setState(0x9e0f, 0xd3ed, 0xfd20, 0xc36a, 0xfb64, 0x496b, 0x1, 0x0);
        gbc.writeMem(0x9e0f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd3ed, gbc.sp());
        EXPECT(0x9e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0f));
        EXPECT(0x5d, gbc.readMem(0x9e10));
        // CB 5D 03B7
        gbc.setState(0x7261, 0xae8c, 0x8610, 0xde44, 0x381f, 0x4ade, 0x0, 0x0);
        gbc.writeMem(0x7261, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0x7263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03B8
        gbc.setState(0xd8, 0x127b, 0x6b80, 0x3fc8, 0x192d, 0x9928, 0x0, 0x1);
        gbc.writeMem(0xd8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x127b, gbc.sp());
        EXPECT(0xda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03B9
        gbc.setState(0xa6cf, 0x54d2, 0xf150, 0x76e3, 0xd8c0, 0x60a2, 0x0, 0x1);
        gbc.writeMem(0xa6cf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x54d2, gbc.sp());
        EXPECT(0xa6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6cf));
        EXPECT(0x5d, gbc.readMem(0xa6d0));
        // CB 5D 03BA
        gbc.setState(0x864e, 0x4118, 0x9840, 0xcbf0, 0x7b88, 0xe096, 0x0, 0x0);
        gbc.writeMem(0x864e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4118, gbc.sp());
        EXPECT(0x8650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864e));
        EXPECT(0x5d, gbc.readMem(0x864f));
        // CB 5D 03BB
        gbc.setState(0x1465, 0xdba7, 0x7d20, 0x19c8, 0x634a, 0x6648, 0x1, 0x1);
        gbc.writeMem(0x1465, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdba7, gbc.sp());
        EXPECT(0x1467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03BC
        gbc.setState(0xdb3d, 0xd526, 0x96c0, 0x8f4, 0x8e40, 0x5a45, 0x1, 0x1);
        gbc.writeMem(0xdb3d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd526, gbc.sp());
        EXPECT(0xdb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3d));
        EXPECT(0x5d, gbc.readMem(0xdb3e));
        // CB 5D 03BE
        gbc.setState(0x4a04, 0xd65, 0xaa30, 0xaee8, 0xd891, 0xb8cd, 0x1, 0x0);
        gbc.writeMem(0x4a04, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd65, gbc.sp());
        EXPECT(0x4a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03BF
        gbc.setState(0xb9dd, 0x1fc0, 0x4a60, 0x1379, 0x2da3, 0x42c8, 0x1, 0x0);
        gbc.writeMem(0xb9dd, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1fc0, gbc.sp());
        EXPECT(0xb9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9dd));
        EXPECT(0x5d, gbc.readMem(0xb9de));
        // CB 5D 03C0
        gbc.setState(0x3b82, 0x6115, 0xe150, 0xc9ca, 0x90d6, 0x878b, 0x0, 0x1);
        gbc.writeMem(0x3b82, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0x3b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03C1
        gbc.setState(0xb470, 0x7a68, 0x4fb0, 0xd72c, 0xfe0a, 0x9dee, 0x1, 0x1);
        gbc.writeMem(0xb470, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7a68, gbc.sp());
        EXPECT(0xb472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb470));
        EXPECT(0x5d, gbc.readMem(0xb471));
        // CB 5D 03C2
        gbc.setState(0x82d7, 0x170e, 0xe750, 0xdcd1, 0xafc3, 0xdcad, 0x1, 0x1);
        gbc.writeMem(0x82d7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x170e, gbc.sp());
        EXPECT(0x82d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d7));
        EXPECT(0x5d, gbc.readMem(0x82d8));
        // CB 5D 03C3
        gbc.setState(0x82f8, 0x4709, 0x8b60, 0x84c8, 0x1b9, 0xfaae, 0x0, 0x1);
        gbc.writeMem(0x82f8, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4709, gbc.sp());
        EXPECT(0x82fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f8));
        EXPECT(0x5d, gbc.readMem(0x82f9));
        // CB 5D 03C4
        gbc.setState(0x53f3, 0x5ccb, 0xd000, 0xf3fb, 0xb431, 0xa318, 0x0, 0x0);
        gbc.writeMem(0x53f3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5ccb, gbc.sp());
        EXPECT(0x53f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03C5
        gbc.setState(0xd170, 0xe579, 0xaf10, 0x4014, 0xaad3, 0xf3a9, 0x1, 0x1);
        gbc.writeMem(0xd170, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe579, gbc.sp());
        EXPECT(0xd172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd170));
        EXPECT(0x5d, gbc.readMem(0xd171));
        // CB 5D 03C6
        gbc.setState(0xa1ea, 0xb21c, 0x6f00, 0x85ab, 0x94bf, 0xdced, 0x1, 0x1);
        gbc.writeMem(0xa1ea, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb21c, gbc.sp());
        EXPECT(0xa1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ea));
        EXPECT(0x5d, gbc.readMem(0xa1eb));
        // CB 5D 03C7
        gbc.setState(0xf53, 0x7b2e, 0xc4e0, 0x42e, 0x82d6, 0x1402, 0x1, 0x1);
        gbc.writeMem(0xf53, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7b2e, gbc.sp());
        EXPECT(0xf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03C8
        gbc.setState(0x7aa3, 0x51e1, 0x1d60, 0x25c8, 0x2c2e, 0x1595, 0x0, 0x1);
        gbc.writeMem(0x7aa3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x51e1, gbc.sp());
        EXPECT(0x7aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03C9
        gbc.setState(0x7490, 0xdedb, 0x36e0, 0x6e3c, 0xf9d3, 0x34b4, 0x1, 0x0);
        gbc.writeMem(0x7490, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdedb, gbc.sp());
        EXPECT(0x7492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03CB
        gbc.setState(0x94e0, 0xbf50, 0x6550, 0x973b, 0xa513, 0x8bc7, 0x0, 0x1);
        gbc.writeMem(0x94e0, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0x94e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e0));
        EXPECT(0x5d, gbc.readMem(0x94e1));
        // CB 5D 03CC
        gbc.setState(0x8b79, 0x2dce, 0x1c50, 0xfa03, 0xa736, 0x4735, 0x0, 0x0);
        gbc.writeMem(0x8b79, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2dce, gbc.sp());
        EXPECT(0x8b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b79));
        EXPECT(0x5d, gbc.readMem(0x8b7a));
        // CB 5D 03CD
        gbc.setState(0x9873, 0x51bb, 0xb120, 0x4975, 0xc565, 0xb59e, 0x0, 0x1);
        gbc.writeMem(0x9873, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x51bb, gbc.sp());
        EXPECT(0x9875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9873));
        EXPECT(0x5d, gbc.readMem(0x9874));
        // CB 5D 03CE
        gbc.setState(0x5b61, 0x7187, 0x7200, 0x43c0, 0xefb2, 0x2e00, 0x0, 0x1);
        gbc.writeMem(0x5b61, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7187, gbc.sp());
        EXPECT(0x5b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03CF
        gbc.setState(0xe971, 0x9072, 0xc2d0, 0x6fd2, 0x5df1, 0x3240, 0x1, 0x0);
        gbc.writeMem(0xe971, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9072, gbc.sp());
        EXPECT(0xe973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe971));
        EXPECT(0x5d, gbc.readMem(0xe972));
        // CB 5D 03D0
        gbc.setState(0xb06a, 0xfdff, 0x40b0, 0x1c2f, 0xc0da, 0xbb34, 0x1, 0x0);
        gbc.writeMem(0xb06a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfdff, gbc.sp());
        EXPECT(0xb06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06a));
        EXPECT(0x5d, gbc.readMem(0xb06b));
        // CB 5D 03D1
        gbc.setState(0x404e, 0xed66, 0x17f0, 0x572d, 0x2edb, 0xe9e3, 0x0, 0x0);
        gbc.writeMem(0x404e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xed66, gbc.sp());
        EXPECT(0x4050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03D2
        gbc.setState(0x723e, 0xf560, 0x7f40, 0xbe13, 0x6213, 0x4c86, 0x0, 0x1);
        gbc.writeMem(0x723e, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf560, gbc.sp());
        EXPECT(0x7240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03D3
        gbc.setState(0xbb87, 0x362f, 0x3e70, 0x5bf5, 0xaa5e, 0x7fcd, 0x1, 0x0);
        gbc.writeMem(0xbb87, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x362f, gbc.sp());
        EXPECT(0xbb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb87));
        EXPECT(0x5d, gbc.readMem(0xbb88));
        // CB 5D 03D4
        gbc.setState(0x5cd7, 0xf14f, 0x32e0, 0xf4aa, 0x9ca3, 0xac8a, 0x1, 0x0);
        gbc.writeMem(0x5cd7, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf14f, gbc.sp());
        EXPECT(0x5cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03D5
        gbc.setState(0x920d, 0x8b67, 0xb070, 0xbe34, 0x9eba, 0x96bd, 0x1, 0x0);
        gbc.writeMem(0x920d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8b67, gbc.sp());
        EXPECT(0x920f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920d));
        EXPECT(0x5d, gbc.readMem(0x920e));
        // CB 5D 03D6
        gbc.setState(0x9d8d, 0xa0f5, 0xb340, 0xe1d3, 0x88d3, 0x174a, 0x1, 0x0);
        gbc.writeMem(0x9d8d, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa0f5, gbc.sp());
        EXPECT(0x9d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8d));
        EXPECT(0x5d, gbc.readMem(0x9d8e));
        // CB 5D 03D7
        gbc.setState(0xdc3f, 0x918b, 0xef70, 0x1e5e, 0x5877, 0x2876, 0x1, 0x1);
        gbc.writeMem(0xdc3f, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x918b, gbc.sp());
        EXPECT(0xdc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3f));
        EXPECT(0x5d, gbc.readMem(0xdc40));
        // CB 5D 03D9
        gbc.setState(0x4a44, 0x8227, 0x8000, 0xd4c6, 0x3148, 0xe16f, 0x0, 0x0);
        gbc.writeMem(0x4a44, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8227, gbc.sp());
        EXPECT(0x4a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03DA
        gbc.setState(0x5cbf, 0x37be, 0xa0, 0x608b, 0x4e82, 0x1ef3, 0x0, 0x1);
        gbc.writeMem(0x5cbf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x37be, gbc.sp());
        EXPECT(0x5cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03DB
        gbc.setState(0xa8e9, 0x18dd, 0x6930, 0x13f1, 0x1bdc, 0x1c8e, 0x0, 0x1);
        gbc.writeMem(0xa8e9, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x18dd, gbc.sp());
        EXPECT(0xa8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e9));
        EXPECT(0x5d, gbc.readMem(0xa8ea));
        // CB 5D 03DC
        gbc.setState(0x12e6, 0x9b94, 0x99e0, 0x544, 0x34f8, 0x84d7, 0x0, 0x0);
        gbc.writeMem(0x12e6, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9b94, gbc.sp());
        EXPECT(0x12e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03DD
        gbc.setState(0x2eaf, 0x53de, 0xc850, 0x276b, 0x79b3, 0x7fcf, 0x1, 0x0);
        gbc.writeMem(0x2eaf, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x53de, gbc.sp());
        EXPECT(0x2eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03DE
        gbc.setState(0x780b, 0xe7cd, 0xad70, 0x8c46, 0x935d, 0xa959, 0x0, 0x0);
        gbc.writeMem(0x780b, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe7cd, gbc.sp());
        EXPECT(0x780d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03DF
        gbc.setState(0x3c4a, 0x14d2, 0x2070, 0xfdfe, 0x65b2, 0x3426, 0x1, 0x0);
        gbc.writeMem(0x3c4a, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x14d2, gbc.sp());
        EXPECT(0x3c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03E0
        gbc.setState(0x9039, 0x7f07, 0x7590, 0xc7de, 0x53d8, 0x20b9, 0x0, 0x1);
        gbc.writeMem(0x9039, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7f07, gbc.sp());
        EXPECT(0x903b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9039));
        EXPECT(0x5d, gbc.readMem(0x903a));
        // CB 5D 03E1
        gbc.setState(0xb928, 0x90e4, 0x6640, 0x79a7, 0xff7b, 0x7151, 0x0, 0x0);
        gbc.writeMem(0xb928, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x90e4, gbc.sp());
        EXPECT(0xb92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb928));
        EXPECT(0x5d, gbc.readMem(0xb929));
        // CB 5D 03E2
        gbc.setState(0x2f32, 0xa4df, 0x3820, 0x8376, 0xcd35, 0x50a0, 0x1, 0x1);
        gbc.writeMem(0x2f32, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa4df, gbc.sp());
        EXPECT(0x2f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5D 03E3
        gbc.setState(0x6cb3, 0x3d49, 0x61d0, 0xba81, 0x15c1, 0x6fdb, 0x0, 0x0);
        gbc.writeMem(0x6cb3, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3d49, gbc.sp());
        EXPECT(0x6cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5D 03E4
        gbc.setState(0x85da, 0x3dfb, 0x8050, 0x2f67, 0x2a28, 0x13e6, 0x0, 0x0);
        gbc.writeMem(0x85da, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3dfb, gbc.sp());
        EXPECT(0x85dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85da));
        EXPECT(0x5d, gbc.readMem(0x85db));
        // CB 5D 03E6
        gbc.setState(0x9920, 0xa69d, 0x3e80, 0xa81, 0x9f6d, 0xa9db, 0x1, 0x0);
        gbc.writeMem(0x9920, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa69d, gbc.sp());
        EXPECT(0x9922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9920));
        EXPECT(0x5d, gbc.readMem(0x9921));
        // CB 5D 03E7
        gbc.setState(0xc85, 0x285d, 0x1cf0, 0xd31f, 0x29da, 0xa002, 0x0, 0x0);
        gbc.writeMem(0xc85, { 0xcb, 0x5d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x285d, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
