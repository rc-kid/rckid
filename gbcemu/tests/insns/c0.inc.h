    TEST(gbcemu, opcode_c0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // C0 0000
        gbc.setState(0xa0c8, 0x2f1e, 0x8ec0, 0xf997, 0xfc10, 0xa054, 0x1, 0x1);
        gbc.writeMem(0xa0c8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2f1e);
        EXPECT(gbc.pc(), 0xa0c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c8), 0xc0);
        // C0 0002
        gbc.setState(0x6335, 0x3243, 0x2c40, 0x13e, 0x6838, 0x83a7, 0x0, 0x1);
        gbc.writeMem(0x3243, { 0x61, 0x16 });
        gbc.writeMem(0x6335, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3245);
        EXPECT(gbc.pc(), 0x1661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0003
        gbc.setState(0x8d31, 0xb3d9, 0x3ed0, 0x3759, 0x976f, 0x37f7, 0x1, 0x0);
        gbc.writeMem(0x8d31, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb3d9);
        EXPECT(gbc.pc(), 0x8d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d31), 0xc0);
        // C0 0004
        gbc.setState(0x82dd, 0xcce, 0xd3a0, 0xc621, 0x12dc, 0xe2fd, 0x1, 0x1);
        gbc.writeMem(0x82dd, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcce);
        EXPECT(gbc.pc(), 0x82de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82dd), 0xc0);
        // C0 0005
        gbc.setState(0x7408, 0x7adf, 0xba20, 0xbcc5, 0x1568, 0x6fc6, 0x1, 0x0);
        gbc.writeMem(0x7408, { 0xc0 });
        gbc.writeMem(0x7adf, { 0xb6, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7ae1);
        EXPECT(gbc.pc(), 0xd0b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0006
        gbc.setState(0x175e, 0xa6d7, 0x5890, 0xf87f, 0xc774, 0x8099, 0x1, 0x1);
        gbc.writeMem(0x175e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa6d7);
        EXPECT(gbc.pc(), 0x175f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0007
        gbc.setState(0xaba8, 0x103, 0x5b30, 0xe86, 0x24c5, 0x4949, 0x0, 0x1);
        gbc.writeMem(0x103, { 0xb6, 0x2d });
        gbc.writeMem(0xaba8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x105);
        EXPECT(gbc.pc(), 0x2db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba8), 0xc0);
        // C0 0008
        gbc.setState(0x3d93, 0x7978, 0xdf10, 0x31d7, 0xbf42, 0x9f5, 0x0, 0x1);
        gbc.writeMem(0x3d93, { 0xc0 });
        gbc.writeMem(0x7978, { 0x79, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x797a);
        EXPECT(gbc.pc(), 0x8a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0009
        gbc.setState(0x693, 0xeb55, 0x7e0, 0xbc8, 0xb986, 0x436e, 0x0, 0x1);
        gbc.writeMem(0x693, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xeb55);
        EXPECT(gbc.pc(), 0x694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 000A
        gbc.setState(0xc44c, 0xe0ca, 0x6380, 0x9907, 0x9d12, 0xba0c, 0x1, 0x0);
        gbc.writeMem(0xc44c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe0ca);
        EXPECT(gbc.pc(), 0xc44d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc44c), 0xc0);
        // C0 000B
        gbc.setState(0x8488, 0x4c77, 0xacf0, 0x45ad, 0xda2c, 0x9fbb, 0x0, 0x1);
        gbc.writeMem(0x8488, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4c77);
        EXPECT(gbc.pc(), 0x8489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8488), 0xc0);
        // C0 000C
        gbc.setState(0x43b1, 0xabc8, 0x44f0, 0x9d5c, 0x8635, 0xb2fc, 0x1, 0x0);
        gbc.writeMem(0x43b1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xabc8);
        EXPECT(gbc.pc(), 0x43b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 000D
        gbc.setState(0x8edb, 0x75f1, 0x35f0, 0xda75, 0x18b5, 0x5b3c, 0x1, 0x1);
        gbc.writeMem(0x8edb, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x75f1);
        EXPECT(gbc.pc(), 0x8edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8edb), 0xc0);
        // C0 000E
        gbc.setState(0xe000, 0x199b, 0xd3c0, 0xc4e, 0x8e79, 0xf899, 0x0, 0x0);
        gbc.writeMem(0xe000, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x199b);
        EXPECT(gbc.pc(), 0xe001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe000), 0xc0);
        // C0 000F
        gbc.setState(0x4f4f, 0x5cdb, 0xf8f0, 0x8a10, 0xf39f, 0xed25, 0x0, 0x1);
        gbc.writeMem(0x4f4f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5cdb);
        EXPECT(gbc.pc(), 0x4f50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0010
        gbc.setState(0x8281, 0x5feb, 0xd70, 0xa01e, 0xe26f, 0x3e9a, 0x0, 0x0);
        gbc.writeMem(0x5feb, { 0xa, 0xb3 });
        gbc.writeMem(0x8281, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5fed);
        EXPECT(gbc.pc(), 0xb30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8281), 0xc0);
        // C0 0011
        gbc.setState(0x1fe1, 0x243c, 0x5380, 0x12f5, 0x66e8, 0xcb67, 0x0, 0x1);
        gbc.writeMem(0x1fe1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x243c);
        EXPECT(gbc.pc(), 0x1fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0012
        gbc.setState(0xd721, 0x7fd, 0xbfc0, 0x885b, 0xc1e7, 0x832e, 0x1, 0x0);
        gbc.writeMem(0xd721, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7fd);
        EXPECT(gbc.pc(), 0xd722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd721), 0xc0);
        // C0 0013
        gbc.setState(0x7843, 0x98b2, 0x4400, 0xa607, 0x7a8, 0xd58b, 0x1, 0x1);
        gbc.writeMem(0x7843, { 0xc0 });
        gbc.writeMem(0x98b2, { 0x1f, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x98b4);
        EXPECT(gbc.pc(), 0x881f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b2), 0x1f);
        EXPECT(gbc.readMem(0x98b3), 0x88);
        // C0 0015
        gbc.setState(0xd379, 0x739d, 0x20a0, 0x2ca2, 0x235e, 0x804d, 0x1, 0x0);
        gbc.writeMem(0xd379, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x739d);
        EXPECT(gbc.pc(), 0xd37a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd379), 0xc0);
        // C0 0016
        gbc.setState(0xa4c5, 0x6869, 0x8ab0, 0xcaf8, 0x39e0, 0x492e, 0x1, 0x1);
        gbc.writeMem(0xa4c5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6869);
        EXPECT(gbc.pc(), 0xa4c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c5), 0xc0);
        // C0 0017
        gbc.setState(0xb4d3, 0xcbad, 0xc920, 0xfc56, 0x6ebb, 0x71b, 0x1, 0x0);
        gbc.writeMem(0xb4d3, { 0xc0 });
        gbc.writeMem(0xcbad, { 0xfc, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcbaf);
        EXPECT(gbc.pc(), 0x20fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4d3), 0xc0);
        EXPECT(gbc.readMem(0xcbad), 0xfc);
        EXPECT(gbc.readMem(0xcbae), 0x20);
        // C0 0018
        gbc.setState(0x4b2c, 0xa517, 0xa390, 0xb6cf, 0x426b, 0xe32, 0x0, 0x1);
        gbc.writeMem(0x4b2c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa517);
        EXPECT(gbc.pc(), 0x4b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0019
        gbc.setState(0x75a0, 0x8740, 0x7f10, 0xfcc2, 0x70a9, 0x2355, 0x0, 0x1);
        gbc.writeMem(0x75a0, { 0xc0 });
        gbc.writeMem(0x8740, { 0xc7, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8742);
        EXPECT(gbc.pc(), 0xcbc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8740), 0xc7);
        EXPECT(gbc.readMem(0x8741), 0xcb);
        // C0 001A
        gbc.setState(0xeeb9, 0x7ed6, 0xc5d0, 0xf4bd, 0x1af8, 0x4151, 0x0, 0x0);
        gbc.writeMem(0xeeb9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7ed6);
        EXPECT(gbc.pc(), 0xeeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb9), 0xc0);
        // C0 001B
        gbc.setState(0xb077, 0xc6fd, 0xe610, 0x166, 0xbcf6, 0x8252, 0x0, 0x0);
        gbc.writeMem(0xb077, { 0xc0 });
        gbc.writeMem(0xc6fd, { 0x21, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc6ff);
        EXPECT(gbc.pc(), 0x8021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb077), 0xc0);
        EXPECT(gbc.readMem(0xc6fd), 0x21);
        EXPECT(gbc.readMem(0xc6fe), 0x80);
        // C0 001C
        gbc.setState(0xcdf6, 0x6ed2, 0x41b0, 0xda05, 0x8486, 0xb64d, 0x1, 0x0);
        gbc.writeMem(0xcdf6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6ed2);
        EXPECT(gbc.pc(), 0xcdf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf6), 0xc0);
        // C0 001D
        gbc.setState(0x5c2d, 0x8f2f, 0x9de0, 0x346c, 0x62b4, 0xdbc, 0x1, 0x1);
        gbc.writeMem(0x5c2d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8f2f);
        EXPECT(gbc.pc(), 0x5c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 001E
        gbc.setState(0xd917, 0xdda6, 0x9690, 0xa812, 0xb763, 0x3b5, 0x0, 0x1);
        gbc.writeMem(0xd917, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdda6);
        EXPECT(gbc.pc(), 0xd918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd917), 0xc0);
        // C0 001F
        gbc.setState(0x6252, 0xe586, 0xa7b0, 0x8354, 0x9caa, 0xd47, 0x1, 0x1);
        gbc.writeMem(0x6252, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe586);
        EXPECT(gbc.pc(), 0x6253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0020
        gbc.setState(0x5cfe, 0xab96, 0x6d80, 0xfbea, 0xdf77, 0x27d8, 0x1, 0x1);
        gbc.writeMem(0x5cfe, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xab96);
        EXPECT(gbc.pc(), 0x5cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0021
        gbc.setState(0xb081, 0x5342, 0x5d60, 0xf377, 0x9dc2, 0x732f, 0x0, 0x0);
        gbc.writeMem(0x5342, { 0x79, 0xa });
        gbc.writeMem(0xb081, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5344);
        EXPECT(gbc.pc(), 0xa79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb081), 0xc0);
        // C0 0023
        gbc.setState(0x2cf5, 0x8e22, 0xc6f0, 0x707b, 0xc0b5, 0xb196, 0x0, 0x0);
        gbc.writeMem(0x2cf5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8e22);
        EXPECT(gbc.pc(), 0x2cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0024
        gbc.setState(0x71b5, 0x78e2, 0x49d0, 0x8fef, 0xd594, 0x7e36, 0x0, 0x0);
        gbc.writeMem(0x71b5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x78e2);
        EXPECT(gbc.pc(), 0x71b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0025
        gbc.setState(0x2542, 0x58cf, 0x1150, 0x2a72, 0xeb06, 0x66bc, 0x0, 0x0);
        gbc.writeMem(0x2542, { 0xc0 });
        gbc.writeMem(0x58cf, { 0x9, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x58d1);
        EXPECT(gbc.pc(), 0x2609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0026
        gbc.setState(0xc85, 0x3100, 0x2980, 0x9e16, 0x95c9, 0x87a1, 0x0, 0x0);
        gbc.writeMem(0xc85, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3100);
        EXPECT(gbc.pc(), 0xc86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0027
        gbc.setState(0x17e3, 0x9738, 0x87b0, 0x8f17, 0xeef2, 0x812, 0x1, 0x1);
        gbc.writeMem(0x17e3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9738);
        EXPECT(gbc.pc(), 0x17e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0028
        gbc.setState(0xc455, 0xaec0, 0x4dd0, 0xfeab, 0x78f2, 0x77e4, 0x0, 0x0);
        gbc.writeMem(0xc455, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xaec0);
        EXPECT(gbc.pc(), 0xc456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc455), 0xc0);
        // C0 0029
        gbc.setState(0xd774, 0xebbb, 0x7ba0, 0x2a0b, 0xdf9c, 0x146, 0x0, 0x0);
        gbc.writeMem(0xd774, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xebbb);
        EXPECT(gbc.pc(), 0xd775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd774), 0xc0);
        // C0 002A
        gbc.setState(0x38ed, 0x4778, 0x63b0, 0x4c99, 0x455b, 0x5bb6, 0x0, 0x1);
        gbc.writeMem(0x38ed, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4778);
        EXPECT(gbc.pc(), 0x38ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 002B
        gbc.setState(0x54e5, 0x29e6, 0x75a0, 0x4e71, 0xe78c, 0x5569, 0x1, 0x0);
        gbc.writeMem(0x54e5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x29e6);
        EXPECT(gbc.pc(), 0x54e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 002C
        gbc.setState(0x94c4, 0xe51f, 0x560, 0x99af, 0x630a, 0xbf49, 0x1, 0x0);
        gbc.writeMem(0x94c4, { 0xc0 });
        gbc.writeMem(0xe51f, { 0x4a, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe521);
        EXPECT(gbc.pc(), 0x14a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c4), 0xc0);
        EXPECT(gbc.readMem(0xe51f), 0x4a);
        EXPECT(gbc.readMem(0xe520), 0x1);
        // C0 002D
        gbc.setState(0xaf0d, 0x16f9, 0xf4c0, 0xc09, 0x5049, 0xb505, 0x1, 0x0);
        gbc.writeMem(0xaf0d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x16f9);
        EXPECT(gbc.pc(), 0xaf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0d), 0xc0);
        // C0 002E
        gbc.setState(0x15bc, 0x68b, 0x55c0, 0x17eb, 0x3139, 0x88d0, 0x0, 0x0);
        gbc.writeMem(0x15bc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x68b);
        EXPECT(gbc.pc(), 0x15bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 002F
        gbc.setState(0x5d90, 0xbc93, 0x9010, 0x3377, 0x13b1, 0x5d25, 0x1, 0x1);
        gbc.writeMem(0x5d90, { 0xc0 });
        gbc.writeMem(0xbc93, { 0x6d, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbc95);
        EXPECT(gbc.pc(), 0xb06d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc93), 0x6d);
        EXPECT(gbc.readMem(0xbc94), 0xb0);
        // C0 0030
        gbc.setState(0xd72c, 0xca36, 0xbcd0, 0xbb61, 0xaf4a, 0xd8ea, 0x1, 0x0);
        gbc.writeMem(0xd72c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xca36);
        EXPECT(gbc.pc(), 0xd72d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd72c), 0xc0);
        // C0 0031
        gbc.setState(0x1fa1, 0xb2b5, 0xdd90, 0xf8cf, 0x59ff, 0xc93f, 0x1, 0x1);
        gbc.writeMem(0x1fa1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb2b5);
        EXPECT(gbc.pc(), 0x1fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0033
        gbc.setState(0xa4, 0x7e7b, 0x4a60, 0xd7fa, 0xa92a, 0xa33e, 0x0, 0x1);
        gbc.writeMem(0xa4, { 0xc0 });
        gbc.writeMem(0x7e7b, { 0x51, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7e7d);
        EXPECT(gbc.pc(), 0x6651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0034
        gbc.setState(0x742a, 0xc303, 0x1410, 0x6a98, 0xd380, 0xdbfc, 0x1, 0x0);
        gbc.writeMem(0x742a, { 0xc0 });
        gbc.writeMem(0xc303, { 0x31, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc305);
        EXPECT(gbc.pc(), 0xd131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc303), 0x31);
        EXPECT(gbc.readMem(0xc304), 0xd1);
        // C0 0035
        gbc.setState(0x3651, 0x90c8, 0x39f0, 0x90c5, 0x1de7, 0x17d4, 0x1, 0x0);
        gbc.writeMem(0x3651, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x90c8);
        EXPECT(gbc.pc(), 0x3652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0036
        gbc.setState(0xbfd5, 0x66c8, 0xf180, 0x4cc3, 0x2800, 0xba4a, 0x0, 0x1);
        gbc.writeMem(0xbfd5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x66c8);
        EXPECT(gbc.pc(), 0xbfd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd5), 0xc0);
        // C0 0037
        gbc.setState(0xcf92, 0x2b87, 0xb100, 0x3a3f, 0xa135, 0x7b79, 0x1, 0x1);
        gbc.writeMem(0x2b87, { 0xb3, 0xa1 });
        gbc.writeMem(0xcf92, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2b89);
        EXPECT(gbc.pc(), 0xa1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf92), 0xc0);
        // C0 0039
        gbc.setState(0x2d58, 0xe817, 0x5be0, 0x9ee6, 0xc77a, 0x7900, 0x0, 0x1);
        gbc.writeMem(0x2d58, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe817);
        EXPECT(gbc.pc(), 0x2d59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 003A
        gbc.setState(0xd1a6, 0x18f1, 0x35c0, 0xa36c, 0x225e, 0x1c60, 0x0, 0x1);
        gbc.writeMem(0xd1a6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x18f1);
        EXPECT(gbc.pc(), 0xd1a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a6), 0xc0);
        // C0 003B
        gbc.setState(0x958, 0xa50a, 0xc8c0, 0x44f7, 0x5429, 0x369f, 0x1, 0x0);
        gbc.writeMem(0x958, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa50a);
        EXPECT(gbc.pc(), 0x959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 003C
        gbc.setState(0x922e, 0x5800, 0xb2b0, 0x764a, 0x5f8a, 0x3872, 0x0, 0x0);
        gbc.writeMem(0x922e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5800);
        EXPECT(gbc.pc(), 0x922f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922e), 0xc0);
        // C0 003D
        gbc.setState(0xd841, 0x1408, 0x8150, 0x8c32, 0xed06, 0xffcf, 0x0, 0x1);
        gbc.writeMem(0x1408, { 0xf9, 0x83 });
        gbc.writeMem(0xd841, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x140a);
        EXPECT(gbc.pc(), 0x83f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd841), 0xc0);
        // C0 003E
        gbc.setState(0xb2aa, 0xf808, 0x63b0, 0x23ac, 0xce6b, 0x3c61, 0x1, 0x1);
        gbc.writeMem(0xb2aa, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf808);
        EXPECT(gbc.pc(), 0xb2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2aa), 0xc0);
        // C0 003F
        gbc.setState(0xbf21, 0x8c2a, 0xa700, 0xd911, 0x9f92, 0xfdd6, 0x1, 0x0);
        gbc.writeMem(0x8c2a, { 0x97, 0xd4 });
        gbc.writeMem(0xbf21, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8c2c);
        EXPECT(gbc.pc(), 0xd497);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2a), 0x97);
        EXPECT(gbc.readMem(0x8c2b), 0xd4);
        EXPECT(gbc.readMem(0xbf21), 0xc0);
        // C0 0040
        gbc.setState(0x31e1, 0xd3b2, 0xd930, 0x883e, 0xd7e4, 0x390d, 0x1, 0x0);
        gbc.writeMem(0x31e1, { 0xc0 });
        gbc.writeMem(0xd3b2, { 0x42, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd3b4);
        EXPECT(gbc.pc(), 0x6042);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b2), 0x42);
        EXPECT(gbc.readMem(0xd3b3), 0x60);
        // C0 0041
        gbc.setState(0xc05a, 0x285c, 0xcb90, 0x28d, 0x1fec, 0xcc67, 0x0, 0x0);
        gbc.writeMem(0xc05a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x285c);
        EXPECT(gbc.pc(), 0xc05b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc05a), 0xc0);
        // C0 0042
        gbc.setState(0xb966, 0xfd2f, 0x5f70, 0xe846, 0x130b, 0x1762, 0x0, 0x0);
        gbc.writeMem(0xb966, { 0xc0 });
        gbc.writeMem(0xfd2f, { 0x8a, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfd31);
        EXPECT(gbc.pc(), 0x258a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb966), 0xc0);
        EXPECT(gbc.readMem(0xfd2f), 0x8a);
        EXPECT(gbc.readMem(0xfd30), 0x25);
        // C0 0043
        gbc.setState(0xd680, 0xaf6d, 0x31a0, 0x46b5, 0x637e, 0x822a, 0x1, 0x1);
        gbc.writeMem(0xd680, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xaf6d);
        EXPECT(gbc.pc(), 0xd681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd680), 0xc0);
        // C0 0044
        gbc.setState(0xdaa8, 0x8306, 0xf30, 0xdc14, 0x9b3e, 0x6e03, 0x0, 0x1);
        gbc.writeMem(0x8306, { 0x67, 0x6a });
        gbc.writeMem(0xdaa8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8308);
        EXPECT(gbc.pc(), 0x6a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8306), 0x67);
        EXPECT(gbc.readMem(0x8307), 0x6a);
        EXPECT(gbc.readMem(0xdaa8), 0xc0);
        // C0 0045
        gbc.setState(0xb517, 0xa9cb, 0x5110, 0x330a, 0xa189, 0x8a6, 0x1, 0x0);
        gbc.writeMem(0xa9cb, { 0x82, 0x19 });
        gbc.writeMem(0xb517, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa9cd);
        EXPECT(gbc.pc(), 0x1982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9cb), 0x82);
        EXPECT(gbc.readMem(0xa9cc), 0x19);
        EXPECT(gbc.readMem(0xb517), 0xc0);
        // C0 0046
        gbc.setState(0x3b17, 0x7f2b, 0xe560, 0xb503, 0xb256, 0x403f, 0x0, 0x0);
        gbc.writeMem(0x3b17, { 0xc0 });
        gbc.writeMem(0x7f2b, { 0xfb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7f2d);
        EXPECT(gbc.pc(), 0x99fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0047
        gbc.setState(0x49b9, 0x3536, 0xa550, 0xfc8, 0xad0e, 0xfe86, 0x1, 0x0);
        gbc.writeMem(0x3536, { 0xea, 0xe6 });
        gbc.writeMem(0x49b9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3538);
        EXPECT(gbc.pc(), 0xe6ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0048
        gbc.setState(0xeeca, 0x454d, 0xf200, 0xbeb7, 0x11c, 0xda11, 0x0, 0x1);
        gbc.writeMem(0x454d, { 0x6c, 0xaa });
        gbc.writeMem(0xeeca, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x454f);
        EXPECT(gbc.pc(), 0xaa6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeca), 0xc0);
        // C0 0049
        gbc.setState(0x9887, 0xea3a, 0x71b0, 0x2304, 0x401b, 0x49d8, 0x1, 0x1);
        gbc.writeMem(0x9887, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xea3a);
        EXPECT(gbc.pc(), 0x9888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9887), 0xc0);
        // C0 004A
        gbc.setState(0x46df, 0x8fa7, 0x8d90, 0xcef1, 0x9810, 0xccaf, 0x0, 0x1);
        gbc.writeMem(0x46df, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8fa7);
        EXPECT(gbc.pc(), 0x46e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 004B
        gbc.setState(0x31a6, 0xbc54, 0x8c00, 0xcc09, 0x333, 0x723e, 0x1, 0x1);
        gbc.writeMem(0x31a6, { 0xc0 });
        gbc.writeMem(0xbc54, { 0x37, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbc56);
        EXPECT(gbc.pc(), 0xec37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc54), 0x37);
        EXPECT(gbc.readMem(0xbc55), 0xec);
        // C0 004C
        gbc.setState(0x30c2, 0x1892, 0x2ff0, 0xce08, 0x7d53, 0x7af7, 0x0, 0x1);
        gbc.writeMem(0x30c2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1892);
        EXPECT(gbc.pc(), 0x30c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 004D
        gbc.setState(0xca82, 0x328a, 0x7c00, 0x9c06, 0xc22a, 0x6091, 0x0, 0x1);
        gbc.writeMem(0x328a, { 0x83, 0x5c });
        gbc.writeMem(0xca82, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x328c);
        EXPECT(gbc.pc(), 0x5c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca82), 0xc0);
        // C0 004F
        gbc.setState(0x8940, 0x9574, 0x2a0, 0x13f7, 0x2041, 0x70a1, 0x0, 0x1);
        gbc.writeMem(0x8940, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9574);
        EXPECT(gbc.pc(), 0x8941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8940), 0xc0);
        // C0 0050
        gbc.setState(0x5090, 0xbb0a, 0xe10, 0x80af, 0x644d, 0x5295, 0x0, 0x1);
        gbc.writeMem(0x5090, { 0xc0 });
        gbc.writeMem(0xbb0a, { 0x73, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbb0c);
        EXPECT(gbc.pc(), 0xb873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb0a), 0x73);
        EXPECT(gbc.readMem(0xbb0b), 0xb8);
        // C0 0051
        gbc.setState(0xb55e, 0xcdc1, 0x4d0, 0xb216, 0xd677, 0x3fcb, 0x1, 0x0);
        gbc.writeMem(0xb55e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcdc1);
        EXPECT(gbc.pc(), 0xb55f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55e), 0xc0);
        // C0 0052
        gbc.setState(0xa0d6, 0x1ca, 0x8530, 0xea, 0x20a8, 0xf8e8, 0x0, 0x0);
        gbc.writeMem(0x1ca, { 0x91, 0x98 });
        gbc.writeMem(0xa0d6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1cc);
        EXPECT(gbc.pc(), 0x9891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d6), 0xc0);
        // C0 0053
        gbc.setState(0x4018, 0x792d, 0x3cd0, 0x2a3d, 0xaaae, 0x752b, 0x0, 0x0);
        gbc.writeMem(0x4018, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x792d);
        EXPECT(gbc.pc(), 0x4019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0054
        gbc.setState(0xdfdb, 0x70e3, 0x72e0, 0x4f8e, 0xf59, 0xe25e, 0x0, 0x1);
        gbc.writeMem(0xdfdb, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x70e3);
        EXPECT(gbc.pc(), 0xdfdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfdb), 0xc0);
        // C0 0055
        gbc.setState(0xac66, 0xaf01, 0x8280, 0x5f34, 0x9bf1, 0x2624, 0x1, 0x1);
        gbc.writeMem(0xac66, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xaf01);
        EXPECT(gbc.pc(), 0xac67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac66), 0xc0);
        // C0 0056
        gbc.setState(0x4ef2, 0x360e, 0xa3f0, 0xca1e, 0xf8e9, 0x5a7d, 0x0, 0x1);
        gbc.writeMem(0x4ef2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x360e);
        EXPECT(gbc.pc(), 0x4ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0057
        gbc.setState(0x9774, 0xc72, 0xd320, 0xe590, 0x4525, 0x5e2c, 0x0, 0x1);
        gbc.writeMem(0xc72, { 0x9a, 0xf3 });
        gbc.writeMem(0x9774, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc74);
        EXPECT(gbc.pc(), 0xf39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9774), 0xc0);
        // C0 0059
        gbc.setState(0x427e, 0xf17a, 0xf9d0, 0xdeac, 0xf62c, 0xc46f, 0x0, 0x0);
        gbc.writeMem(0x427e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf17a);
        EXPECT(gbc.pc(), 0x427f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 005A
        gbc.setState(0x873b, 0x97f2, 0x7450, 0xe87b, 0xa066, 0x1af4, 0x1, 0x0);
        gbc.writeMem(0x873b, { 0xc0 });
        gbc.writeMem(0x97f2, { 0xc6, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x97f4);
        EXPECT(gbc.pc(), 0x8ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873b), 0xc0);
        EXPECT(gbc.readMem(0x97f2), 0xc6);
        EXPECT(gbc.readMem(0x97f3), 0x8e);
        // C0 005B
        gbc.setState(0x8fce, 0xc680, 0x7ca0, 0x766b, 0x373, 0xd6cd, 0x0, 0x0);
        gbc.writeMem(0x8fce, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc680);
        EXPECT(gbc.pc(), 0x8fcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fce), 0xc0);
        // C0 005C
        gbc.setState(0xa0f8, 0x148, 0x2410, 0x4548, 0x2aa7, 0x6393, 0x1, 0x1);
        gbc.writeMem(0x148, { 0x4d, 0x14 });
        gbc.writeMem(0xa0f8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x14a);
        EXPECT(gbc.pc(), 0x144d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f8), 0xc0);
        // C0 005D
        gbc.setState(0x7586, 0x6969, 0xe8a0, 0xa3fc, 0x50b6, 0xbc5b, 0x1, 0x0);
        gbc.writeMem(0x7586, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6969);
        EXPECT(gbc.pc(), 0x7587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 005E
        gbc.setState(0x6ab3, 0xf44d, 0x9df0, 0xa211, 0x1b23, 0x395b, 0x1, 0x0);
        gbc.writeMem(0x6ab3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf44d);
        EXPECT(gbc.pc(), 0x6ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 005F
        gbc.setState(0x94df, 0x3f24, 0xc690, 0x52de, 0xee65, 0x2ada, 0x1, 0x1);
        gbc.writeMem(0x94df, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3f24);
        EXPECT(gbc.pc(), 0x94e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94df), 0xc0);
        // C0 0060
        gbc.setState(0x1b5, 0x39a4, 0xed60, 0xda7c, 0x7b, 0x10c8, 0x1, 0x1);
        gbc.writeMem(0x1b5, { 0xc0 });
        gbc.writeMem(0x39a4, { 0xe8, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x39a6);
        EXPECT(gbc.pc(), 0x4ee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0061
        gbc.setState(0xe66c, 0xaeb1, 0xf0b0, 0x9be2, 0x1084, 0xda5c, 0x0, 0x1);
        gbc.writeMem(0xe66c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xaeb1);
        EXPECT(gbc.pc(), 0xe66d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe66c), 0xc0);
        // C0 0062
        gbc.setState(0x4a6d, 0xcb32, 0xd100, 0x9e5d, 0x355f, 0xcf2e, 0x0, 0x1);
        gbc.writeMem(0x4a6d, { 0xc0 });
        gbc.writeMem(0xcb32, { 0xc3, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xcb34);
        EXPECT(gbc.pc(), 0x5fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb32), 0xc3);
        EXPECT(gbc.readMem(0xcb33), 0x5f);
        // C0 0063
        gbc.setState(0xea3c, 0x509, 0x9610, 0xb074, 0x1ed4, 0x10f2, 0x1, 0x1);
        gbc.writeMem(0x509, { 0xba, 0x5a });
        gbc.writeMem(0xea3c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x50b);
        EXPECT(gbc.pc(), 0x5aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea3c), 0xc0);
        // C0 0064
        gbc.setState(0x5249, 0xd85, 0x4130, 0xe35d, 0xc64a, 0x8401, 0x1, 0x0);
        gbc.writeMem(0xd85, { 0xe4, 0xd0 });
        gbc.writeMem(0x5249, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd87);
        EXPECT(gbc.pc(), 0xd0e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0065
        gbc.setState(0x7a96, 0x9609, 0xce70, 0x6835, 0x90e1, 0x5ff4, 0x0, 0x0);
        gbc.writeMem(0x7a96, { 0xc0 });
        gbc.writeMem(0x9609, { 0xb8, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x960b);
        EXPECT(gbc.pc(), 0x4cb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9609), 0xb8);
        EXPECT(gbc.readMem(0x960a), 0x4c);
        // C0 0066
        gbc.setState(0xb1f9, 0x6c12, 0x8200, 0x67b8, 0xeee2, 0x4db4, 0x0, 0x1);
        gbc.writeMem(0x6c12, { 0x58, 0x48 });
        gbc.writeMem(0xb1f9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6c14);
        EXPECT(gbc.pc(), 0x4858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f9), 0xc0);
        // C0 0067
        gbc.setState(0x6a29, 0xdba, 0x3c10, 0xd6f0, 0xbc1b, 0x16fd, 0x0, 0x1);
        gbc.writeMem(0xdba, { 0x95, 0x30 });
        gbc.writeMem(0x6a29, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdbc);
        EXPECT(gbc.pc(), 0x3095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0068
        gbc.setState(0x916c, 0x5678, 0x7880, 0xe339, 0x3a2, 0xaca4, 0x1, 0x1);
        gbc.writeMem(0x916c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5678);
        EXPECT(gbc.pc(), 0x916d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x916c), 0xc0);
        // C0 0069
        gbc.setState(0xc05c, 0x48b8, 0x4970, 0xb196, 0xb72a, 0xdd6f, 0x1, 0x0);
        gbc.writeMem(0x48b8, { 0x49, 0x66 });
        gbc.writeMem(0xc05c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x48ba);
        EXPECT(gbc.pc(), 0x6649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc05c), 0xc0);
        // C0 006A
        gbc.setState(0x47a8, 0x2c7b, 0xca30, 0xf803, 0xd352, 0x5438, 0x1, 0x1);
        gbc.writeMem(0x2c7b, { 0x8, 0x2 });
        gbc.writeMem(0x47a8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2c7d);
        EXPECT(gbc.pc(), 0x208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 006B
        gbc.setState(0x9ca, 0xf71f, 0x5180, 0xd9af, 0x7a00, 0xb4a0, 0x0, 0x1);
        gbc.writeMem(0x9ca, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf71f);
        EXPECT(gbc.pc(), 0x9cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 006C
        gbc.setState(0xb121, 0x1e66, 0xdec0, 0x9bf4, 0xe252, 0xfd6c, 0x1, 0x0);
        gbc.writeMem(0xb121, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1e66);
        EXPECT(gbc.pc(), 0xb122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb121), 0xc0);
        // C0 006D
        gbc.setState(0xb4ef, 0x6ad, 0xcf70, 0x1a1, 0xf87a, 0xe6e9, 0x1, 0x0);
        gbc.writeMem(0x6ad, { 0x85, 0x30 });
        gbc.writeMem(0xb4ef, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6af);
        EXPECT(gbc.pc(), 0x3085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ef), 0xc0);
        // C0 006E
        gbc.setState(0x2b6b, 0xf43f, 0xe480, 0x8c5e, 0xd12c, 0x3d81, 0x1, 0x0);
        gbc.writeMem(0x2b6b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf43f);
        EXPECT(gbc.pc(), 0x2b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 006F
        gbc.setState(0xbea4, 0x67c6, 0xdaf0, 0x9de0, 0x80ab, 0x200, 0x1, 0x0);
        gbc.writeMem(0xbea4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x67c6);
        EXPECT(gbc.pc(), 0xbea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea4), 0xc0);
        // C0 0070
        gbc.setState(0xb7a6, 0x586b, 0x5fc0, 0xf845, 0xbb00, 0x5921, 0x1, 0x1);
        gbc.writeMem(0xb7a6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x586b);
        EXPECT(gbc.pc(), 0xb7a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a6), 0xc0);
        // C0 0071
        gbc.setState(0x466e, 0x61f5, 0x2680, 0x38e4, 0x9fa9, 0xe2da, 0x1, 0x1);
        gbc.writeMem(0x466e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x61f5);
        EXPECT(gbc.pc(), 0x466f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0072
        gbc.setState(0xdebf, 0x7b50, 0xa780, 0x7ef2, 0xd5aa, 0x4419, 0x0, 0x1);
        gbc.writeMem(0xdebf, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7b50);
        EXPECT(gbc.pc(), 0xdec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdebf), 0xc0);
        // C0 0073
        gbc.setState(0x154b, 0x77b, 0xac10, 0xeae0, 0x6fcc, 0xd018, 0x1, 0x1);
        gbc.writeMem(0x77b, { 0x2e, 0x1c });
        gbc.writeMem(0x154b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x77d);
        EXPECT(gbc.pc(), 0x1c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0074
        gbc.setState(0x6e3b, 0xbf58, 0x7280, 0x677b, 0x58b7, 0xd107, 0x0, 0x0);
        gbc.writeMem(0x6e3b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbf58);
        EXPECT(gbc.pc(), 0x6e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0075
        gbc.setState(0x60a8, 0x6660, 0x9b70, 0xca71, 0x25b0, 0x9a84, 0x0, 0x1);
        gbc.writeMem(0x60a8, { 0xc0 });
        gbc.writeMem(0x6660, { 0x4c, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6662);
        EXPECT(gbc.pc(), 0x584c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0076
        gbc.setState(0x4929, 0xa410, 0x9970, 0xd436, 0xd513, 0xce8f, 0x1, 0x1);
        gbc.writeMem(0x4929, { 0xc0 });
        gbc.writeMem(0xa410, { 0x9c, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa412);
        EXPECT(gbc.pc(), 0x749c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa410), 0x9c);
        EXPECT(gbc.readMem(0xa411), 0x74);
        // C0 0077
        gbc.setState(0x4b22, 0x3dfd, 0x2750, 0x8429, 0x67bb, 0x997a, 0x1, 0x0);
        gbc.writeMem(0x3dfd, { 0xb4, 0x97 });
        gbc.writeMem(0x4b22, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3dff);
        EXPECT(gbc.pc(), 0x97b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0078
        gbc.setState(0x7196, 0xd03c, 0xedc0, 0xb8e4, 0x737a, 0xd9d, 0x0, 0x0);
        gbc.writeMem(0x7196, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd03c);
        EXPECT(gbc.pc(), 0x7197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0079
        gbc.setState(0x3de7, 0xb231, 0x9cc0, 0x4fb9, 0x61ea, 0x27df, 0x1, 0x0);
        gbc.writeMem(0x3de7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb231);
        EXPECT(gbc.pc(), 0x3de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 007A
        gbc.setState(0x5457, 0xd6e1, 0x5320, 0x7cd, 0xa1ca, 0x63a4, 0x0, 0x1);
        gbc.writeMem(0x5457, { 0xc0 });
        gbc.writeMem(0xd6e1, { 0x7a, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd6e3);
        EXPECT(gbc.pc(), 0x377a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e1), 0x7a);
        EXPECT(gbc.readMem(0xd6e2), 0x37);
        // C0 007B
        gbc.setState(0xa88c, 0x8fa2, 0x2fd0, 0xbd9c, 0x8a13, 0xafb4, 0x0, 0x1);
        gbc.writeMem(0xa88c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8fa2);
        EXPECT(gbc.pc(), 0xa88d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88c), 0xc0);
        // C0 007C
        gbc.setState(0xe764, 0x7e8, 0xc4a0, 0x5d2c, 0x9f1a, 0x6268, 0x1, 0x0);
        gbc.writeMem(0xe764, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7e8);
        EXPECT(gbc.pc(), 0xe765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe764), 0xc0);
        // C0 007D
        gbc.setState(0x6414, 0xd078, 0x970, 0x52d8, 0xd023, 0xfd77, 0x0, 0x0);
        gbc.writeMem(0x6414, { 0xc0 });
        gbc.writeMem(0xd078, { 0x6e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd07a);
        EXPECT(gbc.pc(), 0x3b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd078), 0x6e);
        EXPECT(gbc.readMem(0xd079), 0x3b);
        // C0 007E
        gbc.setState(0xda72, 0x5bc3, 0xfed0, 0x16d2, 0x6432, 0x81d9, 0x1, 0x1);
        gbc.writeMem(0xda72, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5bc3);
        EXPECT(gbc.pc(), 0xda73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda72), 0xc0);
        // C0 0081
        gbc.setState(0x635d, 0x8d03, 0x5b60, 0x7d2b, 0x501f, 0x439a, 0x1, 0x0);
        gbc.writeMem(0x635d, { 0xc0 });
        gbc.writeMem(0x8d03, { 0x9b, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8d05);
        EXPECT(gbc.pc(), 0x439b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d03), 0x9b);
        EXPECT(gbc.readMem(0x8d04), 0x43);
        // C0 0082
        gbc.setState(0x6192, 0x991c, 0x1620, 0xc9e8, 0xea15, 0xd9cb, 0x1, 0x0);
        gbc.writeMem(0x6192, { 0xc0 });
        gbc.writeMem(0x991c, { 0x15, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x991e);
        EXPECT(gbc.pc(), 0xf815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x991c), 0x15);
        EXPECT(gbc.readMem(0x991d), 0xf8);
        // C0 0083
        gbc.setState(0xad97, 0xc9a3, 0x1f60, 0x6db0, 0xf6a8, 0xea23, 0x0, 0x0);
        gbc.writeMem(0xad97, { 0xc0 });
        gbc.writeMem(0xc9a3, { 0x35, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc9a5);
        EXPECT(gbc.pc(), 0x7b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad97), 0xc0);
        EXPECT(gbc.readMem(0xc9a3), 0x35);
        EXPECT(gbc.readMem(0xc9a4), 0x7b);
        // C0 0084
        gbc.setState(0x7368, 0x997e, 0x6980, 0x799c, 0xd01c, 0x188d, 0x1, 0x0);
        gbc.writeMem(0x7368, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x997e);
        EXPECT(gbc.pc(), 0x7369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0085
        gbc.setState(0x26ff, 0xb7a7, 0x6bd0, 0xf243, 0xafa0, 0xf547, 0x1, 0x0);
        gbc.writeMem(0x26ff, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb7a7);
        EXPECT(gbc.pc(), 0x2700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0086
        gbc.setState(0x9d30, 0x13b2, 0x83e0, 0xc341, 0x5790, 0x1a3, 0x0, 0x1);
        gbc.writeMem(0x9d30, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x13b2);
        EXPECT(gbc.pc(), 0x9d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d30), 0xc0);
        // C0 0087
        gbc.setState(0x4078, 0xa208, 0x1d10, 0x7c55, 0xc903, 0x6a62, 0x0, 0x0);
        gbc.writeMem(0x4078, { 0xc0 });
        gbc.writeMem(0xa208, { 0x82, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa20a);
        EXPECT(gbc.pc(), 0x8e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa208), 0x82);
        EXPECT(gbc.readMem(0xa209), 0x8e);
        // C0 0088
        gbc.setState(0x48a4, 0x6559, 0xe040, 0x76c, 0x3a30, 0x54a7, 0x1, 0x0);
        gbc.writeMem(0x48a4, { 0xc0 });
        gbc.writeMem(0x6559, { 0xa2, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x655b);
        EXPECT(gbc.pc(), 0xf5a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0089
        gbc.setState(0x2b4c, 0xf688, 0x4720, 0x6e0f, 0x11ba, 0xe060, 0x1, 0x1);
        gbc.writeMem(0x2b4c, { 0xc0 });
        gbc.writeMem(0xf688, { 0x22, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf68a);
        EXPECT(gbc.pc(), 0x9122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf688), 0x22);
        EXPECT(gbc.readMem(0xf689), 0x91);
        // C0 008B
        gbc.setState(0x1a5d, 0x18d3, 0x6760, 0xad20, 0xcf58, 0x87fe, 0x0, 0x0);
        gbc.writeMem(0x18d3, { 0xc7, 0xfa });
        gbc.writeMem(0x1a5d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x18d5);
        EXPECT(gbc.pc(), 0xfac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 008C
        gbc.setState(0x854e, 0x2a38, 0xbf20, 0xc4ee, 0x915f, 0xa87e, 0x1, 0x1);
        gbc.writeMem(0x2a38, { 0xef, 0x69 });
        gbc.writeMem(0x854e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2a3a);
        EXPECT(gbc.pc(), 0x69ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854e), 0xc0);
        // C0 008D
        gbc.setState(0xe09c, 0x3dfa, 0xd2b0, 0x8bdd, 0xde74, 0x7498, 0x0, 0x0);
        gbc.writeMem(0xe09c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3dfa);
        EXPECT(gbc.pc(), 0xe09d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe09c), 0xc0);
        // C0 008E
        gbc.setState(0xaf12, 0x1afd, 0xa90, 0x21ee, 0xba95, 0x1834, 0x1, 0x0);
        gbc.writeMem(0xaf12, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1afd);
        EXPECT(gbc.pc(), 0xaf13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf12), 0xc0);
        // C0 008F
        gbc.setState(0xd545, 0x29fd, 0xa200, 0xd4ce, 0x1cac, 0x9415, 0x1, 0x0);
        gbc.writeMem(0x29fd, { 0x43, 0xc3 });
        gbc.writeMem(0xd545, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x29ff);
        EXPECT(gbc.pc(), 0xc343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd545), 0xc0);
        // C0 0090
        gbc.setState(0x8c73, 0xa1cd, 0x2c30, 0x3a54, 0xdc8a, 0x815b, 0x1, 0x0);
        gbc.writeMem(0x8c73, { 0xc0 });
        gbc.writeMem(0xa1cd, { 0xd4, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa1cf);
        EXPECT(gbc.pc(), 0xe5d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c73), 0xc0);
        EXPECT(gbc.readMem(0xa1cd), 0xd4);
        EXPECT(gbc.readMem(0xa1ce), 0xe5);
        // C0 0091
        gbc.setState(0xe608, 0x4d02, 0x1e00, 0x27c0, 0x5dca, 0x628a, 0x0, 0x0);
        gbc.writeMem(0x4d02, { 0xf, 0xe7 });
        gbc.writeMem(0xe608, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4d04);
        EXPECT(gbc.pc(), 0xe70f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe608), 0xc0);
        // C0 0092
        gbc.setState(0xbce5, 0xe78c, 0x5200, 0x6a26, 0x5a1c, 0x50d1, 0x0, 0x1);
        gbc.writeMem(0xbce5, { 0xc0 });
        gbc.writeMem(0xe78c, { 0x2d, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe78e);
        EXPECT(gbc.pc(), 0xe02d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce5), 0xc0);
        EXPECT(gbc.readMem(0xe78c), 0x2d);
        EXPECT(gbc.readMem(0xe78d), 0xe0);
        // C0 0093
        gbc.setState(0xaac7, 0x6f22, 0x6660, 0x19c9, 0x73cf, 0xd1b4, 0x0, 0x0);
        gbc.writeMem(0x6f22, { 0xf8, 0xad });
        gbc.writeMem(0xaac7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6f24);
        EXPECT(gbc.pc(), 0xadf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac7), 0xc0);
        // C0 0095
        gbc.setState(0x772b, 0xa9c, 0x3e10, 0xf86a, 0x6c06, 0x1f3, 0x1, 0x1);
        gbc.writeMem(0xa9c, { 0xd8, 0x43 });
        gbc.writeMem(0x772b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa9e);
        EXPECT(gbc.pc(), 0x43d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0096
        gbc.setState(0xee15, 0x6c9f, 0x6eb0, 0xfc29, 0x350e, 0xf193, 0x0, 0x1);
        gbc.writeMem(0xee15, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6c9f);
        EXPECT(gbc.pc(), 0xee16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee15), 0xc0);
        // C0 0097
        gbc.setState(0x4497, 0x7fe5, 0xdc30, 0x6e4a, 0x2e95, 0x78df, 0x0, 0x0);
        gbc.writeMem(0x4497, { 0xc0 });
        gbc.writeMem(0x7fe5, { 0xef, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7fe7);
        EXPECT(gbc.pc(), 0x61ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0098
        gbc.setState(0xc4a5, 0x380e, 0x6fe0, 0x9bc9, 0x8e4e, 0x3bce, 0x1, 0x1);
        gbc.writeMem(0xc4a5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x380e);
        EXPECT(gbc.pc(), 0xc4a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a5), 0xc0);
        // C0 0099
        gbc.setState(0xc224, 0xd115, 0xfd00, 0x7817, 0x30b9, 0x69ab, 0x1, 0x1);
        gbc.writeMem(0xc224, { 0xc0 });
        gbc.writeMem(0xd115, { 0x96, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd117);
        EXPECT(gbc.pc(), 0x4d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc224), 0xc0);
        EXPECT(gbc.readMem(0xd115), 0x96);
        EXPECT(gbc.readMem(0xd116), 0x4d);
        // C0 009A
        gbc.setState(0x6a78, 0x4935, 0xf80, 0xa49d, 0x3afe, 0xc760, 0x0, 0x1);
        gbc.writeMem(0x6a78, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4935);
        EXPECT(gbc.pc(), 0x6a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 009B
        gbc.setState(0x7549, 0xb449, 0x1530, 0xa2c8, 0x9e8b, 0x410, 0x1, 0x0);
        gbc.writeMem(0x7549, { 0xc0 });
        gbc.writeMem(0xb449, { 0xb5, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb44b);
        EXPECT(gbc.pc(), 0xcbb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb449), 0xb5);
        EXPECT(gbc.readMem(0xb44a), 0xcb);
        // C0 009C
        gbc.setState(0xcfda, 0x4daf, 0xa240, 0x9d89, 0x5acb, 0x5249, 0x0, 0x1);
        gbc.writeMem(0x4daf, { 0xbd, 0xcf });
        gbc.writeMem(0xcfda, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4db1);
        EXPECT(gbc.pc(), 0xcfbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfda), 0xc0);
        // C0 009D
        gbc.setState(0x15bd, 0x8af, 0x9060, 0xce8e, 0xd294, 0x4ced, 0x0, 0x1);
        gbc.writeMem(0x8af, { 0xf1, 0xba });
        gbc.writeMem(0x15bd, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8b1);
        EXPECT(gbc.pc(), 0xbaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 009E
        gbc.setState(0x5e29, 0xe7bf, 0x36d0, 0x8054, 0xb969, 0x1a10, 0x1, 0x0);
        gbc.writeMem(0x5e29, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe7bf);
        EXPECT(gbc.pc(), 0x5e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 009F
        gbc.setState(0xf37, 0x4098, 0x17c0, 0xd20a, 0x505c, 0x4c77, 0x0, 0x0);
        gbc.writeMem(0xf37, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4098);
        EXPECT(gbc.pc(), 0xf38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00A0
        gbc.setState(0x79b5, 0xd0b8, 0x3670, 0x5c51, 0x6130, 0xe441, 0x0, 0x1);
        gbc.writeMem(0x79b5, { 0xc0 });
        gbc.writeMem(0xd0b8, { 0x8a, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd0ba);
        EXPECT(gbc.pc(), 0xa68a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b8), 0x8a);
        EXPECT(gbc.readMem(0xd0b9), 0xa6);
        // C0 00A2
        gbc.setState(0x1bb8, 0x4be3, 0xfd00, 0x30d4, 0x6c81, 0x4374, 0x0, 0x1);
        gbc.writeMem(0x1bb8, { 0xc0 });
        gbc.writeMem(0x4be3, { 0xf7, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4be5);
        EXPECT(gbc.pc(), 0xfdf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00A3
        gbc.setState(0x98e0, 0xa26a, 0xee80, 0x6ef3, 0x7849, 0x12f5, 0x1, 0x1);
        gbc.writeMem(0x98e0, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa26a);
        EXPECT(gbc.pc(), 0x98e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e0), 0xc0);
        // C0 00A4
        gbc.setState(0x597, 0x960d, 0x8180, 0xf0f4, 0xdf21, 0x6c41, 0x0, 0x0);
        gbc.writeMem(0x597, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x960d);
        EXPECT(gbc.pc(), 0x598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00A5
        gbc.setState(0x695e, 0x3148, 0x9410, 0xddc4, 0xfb44, 0x8fab, 0x0, 0x1);
        gbc.writeMem(0x3148, { 0x29, 0xc3 });
        gbc.writeMem(0x695e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x314a);
        EXPECT(gbc.pc(), 0xc329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00A6
        gbc.setState(0x9e3, 0x39f1, 0xa050, 0x14ae, 0xf0d7, 0x4bc8, 0x0, 0x1);
        gbc.writeMem(0x9e3, { 0xc0 });
        gbc.writeMem(0x39f1, { 0x72, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x39f3);
        EXPECT(gbc.pc(), 0xa472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00A7
        gbc.setState(0xa88c, 0xec37, 0x2180, 0x69c, 0xea05, 0x8cfc, 0x0, 0x0);
        gbc.writeMem(0xa88c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xec37);
        EXPECT(gbc.pc(), 0xa88d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88c), 0xc0);
        // C0 00A8
        gbc.setState(0xb0e4, 0x9739, 0x2fd0, 0xe172, 0xae9b, 0x38f6, 0x1, 0x0);
        gbc.writeMem(0xb0e4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9739);
        EXPECT(gbc.pc(), 0xb0e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e4), 0xc0);
        // C0 00A9
        gbc.setState(0xe0cd, 0x46f5, 0x48f0, 0x1837, 0x8352, 0x3383, 0x0, 0x1);
        gbc.writeMem(0xe0cd, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x46f5);
        EXPECT(gbc.pc(), 0xe0ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0cd), 0xc0);
        // C0 00AA
        gbc.setState(0x29a5, 0x2d9f, 0x8070, 0x91e9, 0x1798, 0x71a4, 0x0, 0x1);
        gbc.writeMem(0x29a5, { 0xc0 });
        gbc.writeMem(0x2d9f, { 0x91, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2da1);
        EXPECT(gbc.pc(), 0x91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 00AB
        gbc.setState(0x8dd9, 0x89be, 0xd310, 0x14e3, 0xfd84, 0x69e5, 0x0, 0x0);
        gbc.writeMem(0x89be, { 0xa2, 0x47 });
        gbc.writeMem(0x8dd9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x89c0);
        EXPECT(gbc.pc(), 0x47a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89be), 0xa2);
        EXPECT(gbc.readMem(0x89bf), 0x47);
        EXPECT(gbc.readMem(0x8dd9), 0xc0);
        // C0 00AC
        gbc.setState(0x5ab0, 0xfbda, 0x1440, 0x463c, 0x72de, 0x46dc, 0x0, 0x1);
        gbc.writeMem(0x5ab0, { 0xc0 });
        gbc.writeMem(0xfbda, { 0xf4, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfbdc);
        EXPECT(gbc.pc(), 0x67f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfbda), 0xf4);
        EXPECT(gbc.readMem(0xfbdb), 0x67);
        // C0 00AD
        gbc.setState(0x1e7d, 0xc1d9, 0x8f20, 0x29ea, 0x5f64, 0x550d, 0x1, 0x0);
        gbc.writeMem(0x1e7d, { 0xc0 });
        gbc.writeMem(0xc1d9, { 0x4d, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc1db);
        EXPECT(gbc.pc(), 0x7c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d9), 0x4d);
        EXPECT(gbc.readMem(0xc1da), 0x7c);
        // C0 00AE
        gbc.setState(0x638e, 0xe7fc, 0xb860, 0xf9bf, 0xca9c, 0x3cdd, 0x1, 0x0);
        gbc.writeMem(0x638e, { 0xc0 });
        gbc.writeMem(0xe7fc, { 0x1b, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe7fe);
        EXPECT(gbc.pc(), 0xd51b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7fc), 0x1b);
        EXPECT(gbc.readMem(0xe7fd), 0xd5);
        // C0 00AF
        gbc.setState(0x6659, 0x59a5, 0x8c60, 0xf91a, 0x3614, 0xc36, 0x1, 0x0);
        gbc.writeMem(0x59a5, { 0xcc, 0xad });
        gbc.writeMem(0x6659, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x59a7);
        EXPECT(gbc.pc(), 0xadcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 00B0
        gbc.setState(0x40a1, 0x8031, 0xeae0, 0xb22b, 0xf8b2, 0xd382, 0x0, 0x1);
        gbc.writeMem(0x40a1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8031);
        EXPECT(gbc.pc(), 0x40a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 00B1
        gbc.setState(0xb072, 0xed0d, 0x40a0, 0xb69f, 0x3903, 0xce3e, 0x0, 0x1);
        gbc.writeMem(0xb072, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xed0d);
        EXPECT(gbc.pc(), 0xb073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb072), 0xc0);
        // C0 00B2
        gbc.setState(0x5b2b, 0x4a2c, 0xcc90, 0xd15f, 0xc7eb, 0xc569, 0x1, 0x0);
        gbc.writeMem(0x5b2b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4a2c);
        EXPECT(gbc.pc(), 0x5b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00B3
        gbc.setState(0x9b01, 0x499, 0x8210, 0x36ea, 0xa3b, 0xebe1, 0x0, 0x1);
        gbc.writeMem(0x499, { 0xf4, 0xdd });
        gbc.writeMem(0x9b01, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x49b);
        EXPECT(gbc.pc(), 0xddf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b01), 0xc0);
        // C0 00B4
        gbc.setState(0x8096, 0x6c4c, 0x1c90, 0xaa5c, 0xb3d1, 0xe6df, 0x1, 0x1);
        gbc.writeMem(0x8096, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6c4c);
        EXPECT(gbc.pc(), 0x8097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8096), 0xc0);
        // C0 00B5
        gbc.setState(0xd0a5, 0x7d3c, 0xcad0, 0x98e1, 0xebf3, 0xb9a3, 0x1, 0x1);
        gbc.writeMem(0xd0a5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7d3c);
        EXPECT(gbc.pc(), 0xd0a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a5), 0xc0);
        // C0 00B6
        gbc.setState(0x249c, 0x67ef, 0xef50, 0xfdf5, 0x4733, 0xa1ae, 0x0, 0x0);
        gbc.writeMem(0x249c, { 0xc0 });
        gbc.writeMem(0x67ef, { 0x0, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x67f1);
        EXPECT(gbc.pc(), 0x8700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00B7
        gbc.setState(0x82d8, 0x34c3, 0x3e70, 0x5e3a, 0xedb5, 0x87f9, 0x1, 0x1);
        gbc.writeMem(0x34c3, { 0x3e, 0xa6 });
        gbc.writeMem(0x82d8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x34c5);
        EXPECT(gbc.pc(), 0xa63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d8), 0xc0);
        // C0 00B8
        gbc.setState(0xe422, 0xf07d, 0xc020, 0x99e8, 0x6e53, 0x193, 0x1, 0x1);
        gbc.writeMem(0xe422, { 0xc0 });
        gbc.writeMem(0xf07d, { 0x92, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf07f);
        EXPECT(gbc.pc(), 0xd92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe422), 0xc0);
        EXPECT(gbc.readMem(0xf07d), 0x92);
        EXPECT(gbc.readMem(0xf07e), 0xd);
        // C0 00B9
        gbc.setState(0x6f4c, 0x2ea3, 0x1070, 0xbca4, 0x92b1, 0x9bc4, 0x1, 0x0);
        gbc.writeMem(0x2ea3, { 0xbd, 0x21 });
        gbc.writeMem(0x6f4c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2ea5);
        EXPECT(gbc.pc(), 0x21bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 00BA
        gbc.setState(0x9975, 0x98b2, 0x46d0, 0x9bd9, 0x20f1, 0x73c0, 0x0, 0x1);
        gbc.writeMem(0x9975, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x98b2);
        EXPECT(gbc.pc(), 0x9976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9975), 0xc0);
        // C0 00BB
        gbc.setState(0x78b0, 0x2994, 0xdab0, 0xdce1, 0x7cdd, 0x19ab, 0x1, 0x0);
        gbc.writeMem(0x78b0, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2994);
        EXPECT(gbc.pc(), 0x78b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 00BC
        gbc.setState(0x6fd4, 0x772f, 0x5870, 0x2b9c, 0x2e78, 0xa25b, 0x1, 0x0);
        gbc.writeMem(0x6fd4, { 0xc0 });
        gbc.writeMem(0x772f, { 0x8b, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7731);
        EXPECT(gbc.pc(), 0xec8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 00BD
        gbc.setState(0x8590, 0x3131, 0x480, 0x69d3, 0x4c5b, 0xba2c, 0x0, 0x0);
        gbc.writeMem(0x8590, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3131);
        EXPECT(gbc.pc(), 0x8591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8590), 0xc0);
        // C0 00BE
        gbc.setState(0x5769, 0x8441, 0xdd40, 0xca2f, 0x9dd2, 0x3668, 0x1, 0x1);
        gbc.writeMem(0x5769, { 0xc0 });
        gbc.writeMem(0x8441, { 0x45, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8443);
        EXPECT(gbc.pc(), 0x4345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8441), 0x45);
        EXPECT(gbc.readMem(0x8442), 0x43);
        // C0 00BF
        gbc.setState(0xcdf8, 0xfd12, 0x4bc0, 0xcdc6, 0x76f5, 0x94f9, 0x1, 0x0);
        gbc.writeMem(0xcdf8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfd12);
        EXPECT(gbc.pc(), 0xcdf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf8), 0xc0);
        // C0 00C0
        gbc.setState(0x1f90, 0xf58, 0xbba0, 0x442d, 0x6eb5, 0xfdc6, 0x1, 0x1);
        gbc.writeMem(0x1f90, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf58);
        EXPECT(gbc.pc(), 0x1f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 00C1
        gbc.setState(0xb431, 0xb12a, 0x4910, 0xdda5, 0x9dff, 0xb5c4, 0x0, 0x0);
        gbc.writeMem(0xb12a, { 0x43, 0xe6 });
        gbc.writeMem(0xb431, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb12c);
        EXPECT(gbc.pc(), 0xe643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb12a), 0x43);
        EXPECT(gbc.readMem(0xb12b), 0xe6);
        EXPECT(gbc.readMem(0xb431), 0xc0);
        // C0 00C2
        gbc.setState(0x4e01, 0xdb57, 0xedc0, 0x9e69, 0xa17d, 0x812f, 0x1, 0x1);
        gbc.writeMem(0x4e01, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdb57);
        EXPECT(gbc.pc(), 0x4e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00C3
        gbc.setState(0x2487, 0x7ae7, 0x2b90, 0xb53e, 0xbb00, 0x6230, 0x1, 0x0);
        gbc.writeMem(0x2487, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7ae7);
        EXPECT(gbc.pc(), 0x2488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00C4
        gbc.setState(0xca48, 0x49f0, 0x7120, 0xf2dd, 0x154a, 0x3dbe, 0x0, 0x1);
        gbc.writeMem(0x49f0, { 0xae, 0x39 });
        gbc.writeMem(0xca48, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x49f2);
        EXPECT(gbc.pc(), 0x39ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca48), 0xc0);
        // C0 00C5
        gbc.setState(0x8724, 0xeb7e, 0xec90, 0x365c, 0xa16f, 0xbf31, 0x0, 0x1);
        gbc.writeMem(0x8724, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xeb7e);
        EXPECT(gbc.pc(), 0x8725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8724), 0xc0);
        // C0 00C6
        gbc.setState(0x63c5, 0xbdeb, 0xd340, 0x31c3, 0x8304, 0x9745, 0x1, 0x0);
        gbc.writeMem(0x63c5, { 0xc0 });
        gbc.writeMem(0xbdeb, { 0xe6, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbded);
        EXPECT(gbc.pc(), 0x8de6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdeb), 0xe6);
        EXPECT(gbc.readMem(0xbdec), 0x8d);
        // C0 00C8
        gbc.setState(0xa45a, 0x26d9, 0x1380, 0x4362, 0xc073, 0x39d9, 0x0, 0x1);
        gbc.writeMem(0xa45a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x26d9);
        EXPECT(gbc.pc(), 0xa45b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa45a), 0xc0);
        // C0 00CB
        gbc.setState(0x7197, 0x6e43, 0x61c0, 0xcea2, 0x4ca8, 0xfd38, 0x1, 0x0);
        gbc.writeMem(0x7197, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6e43);
        EXPECT(gbc.pc(), 0x7198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00CC
        gbc.setState(0x9152, 0x633b, 0x29a0, 0x9a7d, 0xe12d, 0x1507, 0x0, 0x1);
        gbc.writeMem(0x9152, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x633b);
        EXPECT(gbc.pc(), 0x9153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9152), 0xc0);
        // C0 00CE
        gbc.setState(0x2405, 0x21e1, 0xc0, 0xb785, 0xae27, 0x3bcf, 0x0, 0x0);
        gbc.writeMem(0x2405, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x21e1);
        EXPECT(gbc.pc(), 0x2406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00CF
        gbc.setState(0xbd73, 0x1a42, 0xc3a0, 0x485a, 0xdeb2, 0xe800, 0x1, 0x1);
        gbc.writeMem(0xbd73, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1a42);
        EXPECT(gbc.pc(), 0xbd74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd73), 0xc0);
        // C0 00D0
        gbc.setState(0x918c, 0x9519, 0xe140, 0x62dc, 0x8f1b, 0x7c03, 0x1, 0x1);
        gbc.writeMem(0x918c, { 0xc0 });
        gbc.writeMem(0x9519, { 0xdb, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x951b);
        EXPECT(gbc.pc(), 0x1adb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918c), 0xc0);
        EXPECT(gbc.readMem(0x9519), 0xdb);
        EXPECT(gbc.readMem(0x951a), 0x1a);
        // C0 00D1
        gbc.setState(0x159a, 0xfaed, 0x2a10, 0xdf88, 0xf0b8, 0xc355, 0x0, 0x0);
        gbc.writeMem(0x159a, { 0xc0 });
        gbc.writeMem(0xfaed, { 0x41, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfaef);
        EXPECT(gbc.pc(), 0xe341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfaed), 0x41);
        EXPECT(gbc.readMem(0xfaee), 0xe3);
        // C0 00D2
        gbc.setState(0x5bbf, 0x4a19, 0x2250, 0xafc8, 0x7ad5, 0x986, 0x1, 0x0);
        gbc.writeMem(0x4a19, { 0x84, 0x17 });
        gbc.writeMem(0x5bbf, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4a1b);
        EXPECT(gbc.pc(), 0x1784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00D3
        gbc.setState(0x2151, 0x7910, 0xf160, 0xd9b5, 0x7a7, 0xa63e, 0x0, 0x0);
        gbc.writeMem(0x2151, { 0xc0 });
        gbc.writeMem(0x7910, { 0x15, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7912);
        EXPECT(gbc.pc(), 0x1015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 00D4
        gbc.setState(0xeae3, 0xb081, 0x6c60, 0xb94, 0xc77e, 0x2142, 0x0, 0x1);
        gbc.writeMem(0xb081, { 0x61, 0x31 });
        gbc.writeMem(0xeae3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb083);
        EXPECT(gbc.pc(), 0x3161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb081), 0x61);
        EXPECT(gbc.readMem(0xb082), 0x31);
        EXPECT(gbc.readMem(0xeae3), 0xc0);
        // C0 00D5
        gbc.setState(0x5299, 0x1825, 0x2480, 0x5dbd, 0xd0f5, 0x423d, 0x0, 0x0);
        gbc.writeMem(0x5299, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1825);
        EXPECT(gbc.pc(), 0x529a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00D6
        gbc.setState(0xd476, 0x6e17, 0x56b0, 0x3d9b, 0x8bfb, 0x71be, 0x1, 0x1);
        gbc.writeMem(0xd476, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6e17);
        EXPECT(gbc.pc(), 0xd477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd476), 0xc0);
        // C0 00D7
        gbc.setState(0x7f09, 0x9dd5, 0xcf0, 0x4868, 0xd038, 0x8a6d, 0x1, 0x0);
        gbc.writeMem(0x7f09, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9dd5);
        EXPECT(gbc.pc(), 0x7f0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 00D8
        gbc.setState(0x6e05, 0x8cc4, 0x2610, 0x7156, 0x37ac, 0xdf0a, 0x0, 0x0);
        gbc.writeMem(0x6e05, { 0xc0 });
        gbc.writeMem(0x8cc4, { 0xbc, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8cc6);
        EXPECT(gbc.pc(), 0xbebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc4), 0xbc);
        EXPECT(gbc.readMem(0x8cc5), 0xbe);
        // C0 00D9
        gbc.setState(0x2bef, 0x6881, 0x6c10, 0xfe53, 0xe3a6, 0x2b0b, 0x1, 0x0);
        gbc.writeMem(0x2bef, { 0xc0 });
        gbc.writeMem(0x6881, { 0x5e, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6883);
        EXPECT(gbc.pc(), 0x7e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00DA
        gbc.setState(0x8614, 0x4e36, 0xcd20, 0x70a2, 0x4f71, 0xc31, 0x0, 0x1);
        gbc.writeMem(0x4e36, { 0x74, 0x77 });
        gbc.writeMem(0x8614, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4e38);
        EXPECT(gbc.pc(), 0x7774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8614), 0xc0);
        // C0 00DB
        gbc.setState(0x791c, 0x627c, 0x3070, 0x64d8, 0xcf97, 0xcbd3, 0x0, 0x0);
        gbc.writeMem(0x627c, { 0x8e, 0xc });
        gbc.writeMem(0x791c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x627e);
        EXPECT(gbc.pc(), 0xc8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 00DC
        gbc.setState(0x48c, 0x2555, 0x1b30, 0x99ed, 0x8ddf, 0x4ac5, 0x1, 0x0);
        gbc.writeMem(0x48c, { 0xc0 });
        gbc.writeMem(0x2555, { 0x45, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2557);
        EXPECT(gbc.pc(), 0x7845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 00DD
        gbc.setState(0x9978, 0xe67, 0xc970, 0x26cc, 0xc53, 0x8ba4, 0x0, 0x1);
        gbc.writeMem(0xe67, { 0x89, 0x5a });
        gbc.writeMem(0x9978, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe69);
        EXPECT(gbc.pc(), 0x5a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9978), 0xc0);
        // C0 00DE
        gbc.setState(0x45cd, 0x5034, 0x3440, 0x7536, 0xf0e, 0xbce1, 0x0, 0x1);
        gbc.writeMem(0x45cd, { 0xc0 });
        gbc.writeMem(0x5034, { 0xfe, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5036);
        EXPECT(gbc.pc(), 0xd3fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00DF
        gbc.setState(0x8fb7, 0x2622, 0x97d0, 0xe22d, 0x30d8, 0x8ca0, 0x0, 0x1);
        gbc.writeMem(0x8fb7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2622);
        EXPECT(gbc.pc(), 0x8fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb7), 0xc0);
        // C0 00E0
        gbc.setState(0x737c, 0x4e12, 0x9a40, 0x2d17, 0xf5a9, 0xe092, 0x1, 0x1);
        gbc.writeMem(0x4e12, { 0x9e, 0xc1 });
        gbc.writeMem(0x737c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4e14);
        EXPECT(gbc.pc(), 0xc19e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00E2
        gbc.setState(0x64bd, 0x91f0, 0x2130, 0xad48, 0x6363, 0x94c, 0x0, 0x1);
        gbc.writeMem(0x64bd, { 0xc0 });
        gbc.writeMem(0x91f0, { 0xf8, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x91f2);
        EXPECT(gbc.pc(), 0x10f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f0), 0xf8);
        EXPECT(gbc.readMem(0x91f1), 0x10);
        // C0 00E3
        gbc.setState(0xb171, 0x34b8, 0x75f0, 0x967b, 0xb506, 0xb5d, 0x0, 0x1);
        gbc.writeMem(0xb171, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x34b8);
        EXPECT(gbc.pc(), 0xb172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb171), 0xc0);
        // C0 00E4
        gbc.setState(0x5992, 0xb87d, 0x85c0, 0xb1f9, 0x890e, 0x5cdf, 0x0, 0x0);
        gbc.writeMem(0x5992, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb87d);
        EXPECT(gbc.pc(), 0x5993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00E5
        gbc.setState(0x2cbd, 0x4872, 0xebc0, 0xb4b0, 0x70b8, 0x8316, 0x1, 0x1);
        gbc.writeMem(0x2cbd, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4872);
        EXPECT(gbc.pc(), 0x2cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00E6
        gbc.setState(0x4112, 0x2b6e, 0xbb90, 0x7eea, 0x274f, 0xfbb5, 0x1, 0x0);
        gbc.writeMem(0x4112, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2b6e);
        EXPECT(gbc.pc(), 0x4113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00E7
        gbc.setState(0xeeb8, 0xa2b4, 0x78a0, 0xd06, 0x4d32, 0xa701, 0x0, 0x0);
        gbc.writeMem(0xeeb8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa2b4);
        EXPECT(gbc.pc(), 0xeeb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb8), 0xc0);
        // C0 00E8
        gbc.setState(0x966b, 0x2870, 0x13e0, 0x81a1, 0xa079, 0x8713, 0x1, 0x1);
        gbc.writeMem(0x966b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2870);
        EXPECT(gbc.pc(), 0x966c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x966b), 0xc0);
        // C0 00E9
        gbc.setState(0x51a2, 0xdd65, 0x5aa0, 0xb4cf, 0xdfd2, 0x5c13, 0x1, 0x0);
        gbc.writeMem(0x51a2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdd65);
        EXPECT(gbc.pc(), 0x51a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 00EA
        gbc.setState(0x2599, 0xc539, 0xdc70, 0xd969, 0x2d5b, 0xef4c, 0x1, 0x1);
        gbc.writeMem(0x2599, { 0xc0 });
        gbc.writeMem(0xc539, { 0xdd, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc53b);
        EXPECT(gbc.pc(), 0x60dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc539), 0xdd);
        EXPECT(gbc.readMem(0xc53a), 0x60);
        // C0 00EB
        gbc.setState(0xcf4c, 0x1daa, 0xe6a0, 0x2566, 0xc0c7, 0x72f1, 0x0, 0x1);
        gbc.writeMem(0xcf4c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1daa);
        EXPECT(gbc.pc(), 0xcf4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4c), 0xc0);
        // C0 00EC
        gbc.setState(0x8e7f, 0x4b8d, 0xd300, 0x6987, 0x88f1, 0xf9bd, 0x0, 0x1);
        gbc.writeMem(0x4b8d, { 0x28, 0x41 });
        gbc.writeMem(0x8e7f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4b8f);
        EXPECT(gbc.pc(), 0x4128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e7f), 0xc0);
        // C0 00ED
        gbc.setState(0x4034, 0x8dca, 0x57c0, 0x470e, 0x1b6f, 0x4003, 0x1, 0x0);
        gbc.writeMem(0x4034, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8dca);
        EXPECT(gbc.pc(), 0x4035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00EE
        gbc.setState(0x36e1, 0xd01b, 0xa6a0, 0xd5e9, 0x6de6, 0x7bbb, 0x0, 0x0);
        gbc.writeMem(0x36e1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd01b);
        EXPECT(gbc.pc(), 0x36e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 00EF
        gbc.setState(0x5e7d, 0x728b, 0x7410, 0xedce, 0x3a0c, 0x4bb8, 0x1, 0x0);
        gbc.writeMem(0x5e7d, { 0xc0 });
        gbc.writeMem(0x728b, { 0x98, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x728d);
        EXPECT(gbc.pc(), 0xf098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00F0
        gbc.setState(0xc67c, 0xc330, 0x3da0, 0xaee5, 0x2070, 0x39bc, 0x1, 0x0);
        gbc.writeMem(0xc67c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc330);
        EXPECT(gbc.pc(), 0xc67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67c), 0xc0);
        // C0 00F1
        gbc.setState(0x1af4, 0x7db, 0xab60, 0x2532, 0xd15f, 0xf0a1, 0x0, 0x1);
        gbc.writeMem(0x7db, { 0x38, 0x73 });
        gbc.writeMem(0x1af4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7dd);
        EXPECT(gbc.pc(), 0x7338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 00F2
        gbc.setState(0xef8c, 0x7999, 0xe7d0, 0x9c3c, 0xb4c7, 0xae42, 0x0, 0x0);
        gbc.writeMem(0xef8c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7999);
        EXPECT(gbc.pc(), 0xef8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8c), 0xc0);
        // C0 00F3
        gbc.setState(0x838f, 0x94a0, 0xea60, 0x579d, 0xc1bb, 0xbbb3, 0x0, 0x0);
        gbc.writeMem(0x838f, { 0xc0 });
        gbc.writeMem(0x94a0, { 0x37, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x94a2);
        EXPECT(gbc.pc(), 0xe837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x838f), 0xc0);
        EXPECT(gbc.readMem(0x94a0), 0x37);
        EXPECT(gbc.readMem(0x94a1), 0xe8);
        // C0 00F4
        gbc.setState(0x7527, 0x1647, 0x5fa0, 0x985, 0x33b0, 0xb103, 0x0, 0x1);
        gbc.writeMem(0x7527, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1647);
        EXPECT(gbc.pc(), 0x7528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 00F5
        gbc.setState(0x97ed, 0x1adb, 0x5140, 0xe4b8, 0xe39b, 0xe6fc, 0x0, 0x1);
        gbc.writeMem(0x1adb, { 0x47, 0xa9 });
        gbc.writeMem(0x97ed, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1add);
        EXPECT(gbc.pc(), 0xa947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97ed), 0xc0);
        // C0 00F6
        gbc.setState(0x6116, 0xf667, 0xbed0, 0xd21e, 0x4aaa, 0xa616, 0x0, 0x1);
        gbc.writeMem(0x6116, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf667);
        EXPECT(gbc.pc(), 0x6117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00F7
        gbc.setState(0x2665, 0x21fe, 0xf9c0, 0x1134, 0xd675, 0x7b5e, 0x1, 0x1);
        gbc.writeMem(0x2665, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x21fe);
        EXPECT(gbc.pc(), 0x2666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 00F8
        gbc.setState(0x13a, 0xed0a, 0xee60, 0x3189, 0x71f9, 0xf4a7, 0x1, 0x1);
        gbc.writeMem(0x13a, { 0xc0 });
        gbc.writeMem(0xed0a, { 0x4e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xed0c);
        EXPECT(gbc.pc(), 0x414e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed0a), 0x4e);
        EXPECT(gbc.readMem(0xed0b), 0x41);
        // C0 00F9
        gbc.setState(0xdd49, 0x2811, 0xa270, 0xa051, 0x1ee, 0xc2d2, 0x1, 0x1);
        gbc.writeMem(0x2811, { 0x65, 0xc4 });
        gbc.writeMem(0xdd49, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2813);
        EXPECT(gbc.pc(), 0xc465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd49), 0xc0);
        // C0 00FA
        gbc.setState(0x1547, 0xae8d, 0x95d0, 0xe674, 0xbdc1, 0x17, 0x0, 0x1);
        gbc.writeMem(0x1547, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xae8d);
        EXPECT(gbc.pc(), 0x1548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 00FB
        gbc.setState(0xac6b, 0xef61, 0x9400, 0xeb8a, 0xf541, 0xdda5, 0x1, 0x0);
        gbc.writeMem(0xac6b, { 0xc0 });
        gbc.writeMem(0xef61, { 0x1f, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xef63);
        EXPECT(gbc.pc(), 0x721f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac6b), 0xc0);
        EXPECT(gbc.readMem(0xef61), 0x1f);
        EXPECT(gbc.readMem(0xef62), 0x72);
        // C0 00FC
        gbc.setState(0xcb46, 0x8ea, 0x9de0, 0x7411, 0x6eb7, 0x232d, 0x1, 0x0);
        gbc.writeMem(0xcb46, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8ea);
        EXPECT(gbc.pc(), 0xcb47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb46), 0xc0);
        // C0 00FD
        gbc.setState(0xb19e, 0x7fa8, 0x15a0, 0xecaf, 0x4e2f, 0xbf01, 0x0, 0x0);
        gbc.writeMem(0xb19e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7fa8);
        EXPECT(gbc.pc(), 0xb19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb19e), 0xc0);
        // C0 0100
        gbc.setState(0xddd2, 0x4ef3, 0xf2b0, 0xe690, 0xcf52, 0x80c2, 0x1, 0x1);
        gbc.writeMem(0xddd2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4ef3);
        EXPECT(gbc.pc(), 0xddd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd2), 0xc0);
        // C0 0101
        gbc.setState(0xceb3, 0xb488, 0xfc30, 0x985f, 0x2f04, 0x3b29, 0x0, 0x0);
        gbc.writeMem(0xb488, { 0xde, 0xe2 });
        gbc.writeMem(0xceb3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb48a);
        EXPECT(gbc.pc(), 0xe2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb488), 0xde);
        EXPECT(gbc.readMem(0xb489), 0xe2);
        EXPECT(gbc.readMem(0xceb3), 0xc0);
        // C0 0102
        gbc.setState(0x557f, 0x3789, 0x1f00, 0xf59c, 0x221b, 0xcb2c, 0x0, 0x1);
        gbc.writeMem(0x3789, { 0xe6, 0xe1 });
        gbc.writeMem(0x557f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x378b);
        EXPECT(gbc.pc(), 0xe1e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0103
        gbc.setState(0xa60, 0x1c1d, 0x16d0, 0x33cf, 0x9e2c, 0xd0b4, 0x1, 0x0);
        gbc.writeMem(0xa60, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1c1d);
        EXPECT(gbc.pc(), 0xa61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0104
        gbc.setState(0x7ec5, 0xc881, 0xf530, 0xd5e2, 0x1ff4, 0x455e, 0x1, 0x1);
        gbc.writeMem(0x7ec5, { 0xc0 });
        gbc.writeMem(0xc881, { 0x1f, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc883);
        EXPECT(gbc.pc(), 0x981f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc881), 0x1f);
        EXPECT(gbc.readMem(0xc882), 0x98);
        // C0 0105
        gbc.setState(0x61cb, 0xd42f, 0xb3d0, 0xf14e, 0xd32e, 0x42d, 0x0, 0x0);
        gbc.writeMem(0x61cb, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd42f);
        EXPECT(gbc.pc(), 0x61cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0106
        gbc.setState(0x645, 0xb9ad, 0x8e00, 0x4394, 0x23d9, 0x2b45, 0x0, 0x0);
        gbc.writeMem(0x645, { 0xc0 });
        gbc.writeMem(0xb9ad, { 0xb6, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb9af);
        EXPECT(gbc.pc(), 0x69b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ad), 0xb6);
        EXPECT(gbc.readMem(0xb9ae), 0x69);
        // C0 0107
        gbc.setState(0xecfc, 0x6397, 0x2a20, 0xc924, 0x5862, 0x7217, 0x1, 0x1);
        gbc.writeMem(0x6397, { 0x6b, 0xd });
        gbc.writeMem(0xecfc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6399);
        EXPECT(gbc.pc(), 0xd6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfc), 0xc0);
        // C0 0108
        gbc.setState(0xb33b, 0xbc61, 0x920, 0x5585, 0x58f3, 0xd9cf, 0x0, 0x0);
        gbc.writeMem(0xb33b, { 0xc0 });
        gbc.writeMem(0xbc61, { 0x32, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbc63);
        EXPECT(gbc.pc(), 0x6232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33b), 0xc0);
        EXPECT(gbc.readMem(0xbc61), 0x32);
        EXPECT(gbc.readMem(0xbc62), 0x62);
        // C0 0109
        gbc.setState(0x16f4, 0xe21, 0xbee0, 0xb8e3, 0xb9d4, 0x2dd9, 0x1, 0x0);
        gbc.writeMem(0x16f4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe21);
        EXPECT(gbc.pc(), 0x16f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 010A
        gbc.setState(0x1146, 0xae54, 0x8720, 0x2920, 0xbe38, 0x58b, 0x0, 0x1);
        gbc.writeMem(0x1146, { 0xc0 });
        gbc.writeMem(0xae54, { 0x36, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xae56);
        EXPECT(gbc.pc(), 0xa36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae54), 0x36);
        EXPECT(gbc.readMem(0xae55), 0xa);
        // C0 010B
        gbc.setState(0x66c7, 0xd10c, 0xd720, 0x6404, 0xe37, 0xac7b, 0x1, 0x0);
        gbc.writeMem(0x66c7, { 0xc0 });
        gbc.writeMem(0xd10c, { 0x91, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd10e);
        EXPECT(gbc.pc(), 0x3891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10c), 0x91);
        EXPECT(gbc.readMem(0xd10d), 0x38);
        // C0 010C
        gbc.setState(0xa78c, 0x2b54, 0x9480, 0x2ff2, 0x2bce, 0xe6e1, 0x1, 0x1);
        gbc.writeMem(0xa78c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2b54);
        EXPECT(gbc.pc(), 0xa78d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa78c), 0xc0);
        // C0 010D
        gbc.setState(0x7389, 0x8c44, 0xa800, 0x847f, 0x51b7, 0x53c5, 0x1, 0x0);
        gbc.writeMem(0x7389, { 0xc0 });
        gbc.writeMem(0x8c44, { 0x4b, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8c46);
        EXPECT(gbc.pc(), 0x724b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c44), 0x4b);
        EXPECT(gbc.readMem(0x8c45), 0x72);
        // C0 010E
        gbc.setState(0x6cbb, 0xdf23, 0x6f0, 0x57d9, 0x912a, 0x4e60, 0x1, 0x0);
        gbc.writeMem(0x6cbb, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdf23);
        EXPECT(gbc.pc(), 0x6cbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 010F
        gbc.setState(0x8edd, 0x2c97, 0xa840, 0xa6de, 0x5d3c, 0xd3d3, 0x0, 0x1);
        gbc.writeMem(0x2c97, { 0xa6, 0x29 });
        gbc.writeMem(0x8edd, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2c99);
        EXPECT(gbc.pc(), 0x29a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8edd), 0xc0);
        // C0 0110
        gbc.setState(0x5726, 0x64fe, 0xdc30, 0xfea9, 0xfaf6, 0x66fc, 0x1, 0x0);
        gbc.writeMem(0x5726, { 0xc0 });
        gbc.writeMem(0x64fe, { 0x1b, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6500);
        EXPECT(gbc.pc(), 0xaf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0112
        gbc.setState(0x4bd6, 0x25c1, 0x1ce0, 0xefe7, 0x5824, 0xdbc, 0x0, 0x1);
        gbc.writeMem(0x4bd6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x25c1);
        EXPECT(gbc.pc(), 0x4bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0113
        gbc.setState(0xd563, 0xe742, 0xb810, 0xcecc, 0x20af, 0x342d, 0x0, 0x0);
        gbc.writeMem(0xd563, { 0xc0 });
        gbc.writeMem(0xe742, { 0xf9, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe744);
        EXPECT(gbc.pc(), 0xaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd563), 0xc0);
        EXPECT(gbc.readMem(0xe742), 0xf9);
        EXPECT(gbc.readMem(0xe743), 0xa);
        // C0 0114
        gbc.setState(0xbd75, 0xfe58, 0x8ab0, 0x1f69, 0xd796, 0xaacc, 0x0, 0x1);
        gbc.writeMem(0xbd75, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xfe58);
        EXPECT(gbc.pc(), 0xbd76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd75), 0xc0);
        // C0 0116
        gbc.setState(0xed0a, 0x91de, 0xcc00, 0x46c3, 0x6b3c, 0xa110, 0x0, 0x1);
        gbc.writeMem(0x91de, { 0x66, 0xa1 });
        gbc.writeMem(0xed0a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x91e0);
        EXPECT(gbc.pc(), 0xa166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91de), 0x66);
        EXPECT(gbc.readMem(0x91df), 0xa1);
        EXPECT(gbc.readMem(0xed0a), 0xc0);
        // C0 0117
        gbc.setState(0x8fe4, 0x2e3, 0xf270, 0xc051, 0x8d5f, 0x2534, 0x1, 0x1);
        gbc.writeMem(0x2e3, { 0x2, 0x4c });
        gbc.writeMem(0x8fe4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2e5);
        EXPECT(gbc.pc(), 0x4c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fe4), 0xc0);
        // C0 0118
        gbc.setState(0x9ca2, 0x551b, 0x5c50, 0x66fc, 0x3ecb, 0xbac6, 0x1, 0x0);
        gbc.writeMem(0x551b, { 0xb2, 0x1a });
        gbc.writeMem(0x9ca2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x551d);
        EXPECT(gbc.pc(), 0x1ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca2), 0xc0);
        // C0 011A
        gbc.setState(0xc92e, 0x4e8f, 0xe6f0, 0x73e3, 0x76c4, 0x9111, 0x1, 0x1);
        gbc.writeMem(0xc92e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4e8f);
        EXPECT(gbc.pc(), 0xc92f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92e), 0xc0);
        // C0 011C
        gbc.setState(0x9f4f, 0x37d9, 0xd320, 0x38ff, 0x274f, 0xdc68, 0x1, 0x0);
        gbc.writeMem(0x37d9, { 0x59, 0xf3 });
        gbc.writeMem(0x9f4f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x37db);
        EXPECT(gbc.pc(), 0xf359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4f), 0xc0);
        // C0 011E
        gbc.setState(0xeeee, 0x56ff, 0x38e0, 0x166a, 0x16cf, 0x39ed, 0x0, 0x1);
        gbc.writeMem(0xeeee, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x56ff);
        EXPECT(gbc.pc(), 0xeeef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeee), 0xc0);
        // C0 011F
        gbc.setState(0x76b2, 0x5dcc, 0xd500, 0x3623, 0x48ac, 0x1b6a, 0x0, 0x0);
        gbc.writeMem(0x5dcc, { 0xe6, 0x3a });
        gbc.writeMem(0x76b2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5dce);
        EXPECT(gbc.pc(), 0x3ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0120
        gbc.setState(0x65bd, 0x691a, 0x3820, 0xbf36, 0x908f, 0x2d28, 0x1, 0x1);
        gbc.writeMem(0x65bd, { 0xc0 });
        gbc.writeMem(0x691a, { 0x48, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x691c);
        EXPECT(gbc.pc(), 0x948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0122
        gbc.setState(0x4f8f, 0xfb4d, 0x2290, 0x8225, 0xa6eb, 0xaec4, 0x0, 0x1);
        gbc.writeMem(0x4f8f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfb4d);
        EXPECT(gbc.pc(), 0x4f90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0123
        gbc.setState(0xe8d7, 0x3ab0, 0x11a0, 0xceec, 0xbbc3, 0x3721, 0x1, 0x0);
        gbc.writeMem(0xe8d7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3ab0);
        EXPECT(gbc.pc(), 0xe8d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d7), 0xc0);
        // C0 0124
        gbc.setState(0x4d7b, 0x2a2e, 0xdf70, 0x2ba4, 0x18b, 0x246e, 0x0, 0x0);
        gbc.writeMem(0x2a2e, { 0xf3, 0x19 });
        gbc.writeMem(0x4d7b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2a30);
        EXPECT(gbc.pc(), 0x19f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0125
        gbc.setState(0x606c, 0x8049, 0x1ae0, 0x5728, 0x81e6, 0x628b, 0x0, 0x0);
        gbc.writeMem(0x606c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8049);
        EXPECT(gbc.pc(), 0x606d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0126
        gbc.setState(0x865a, 0xd8de, 0x2a0, 0x7094, 0xed12, 0xe1e0, 0x0, 0x1);
        gbc.writeMem(0x865a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd8de);
        EXPECT(gbc.pc(), 0x865b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865a), 0xc0);
        // C0 0127
        gbc.setState(0xca24, 0x60ef, 0x5830, 0xd7df, 0xde9a, 0x78f5, 0x0, 0x1);
        gbc.writeMem(0x60ef, { 0x69, 0xb4 });
        gbc.writeMem(0xca24, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x60f1);
        EXPECT(gbc.pc(), 0xb469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca24), 0xc0);
        // C0 0128
        gbc.setState(0x5df0, 0x5b34, 0x2b40, 0x1b92, 0xcf74, 0x9d1a, 0x0, 0x1);
        gbc.writeMem(0x5b34, { 0x76, 0xf6 });
        gbc.writeMem(0x5df0, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5b36);
        EXPECT(gbc.pc(), 0xf676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0129
        gbc.setState(0xf28, 0xec7f, 0xa4c0, 0xe948, 0x532, 0xec5, 0x0, 0x0);
        gbc.writeMem(0xf28, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xec7f);
        EXPECT(gbc.pc(), 0xf29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 012A
        gbc.setState(0xbb7a, 0x7a3a, 0x1a0, 0x799a, 0xd835, 0xba1, 0x1, 0x0);
        gbc.writeMem(0xbb7a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7a3a);
        EXPECT(gbc.pc(), 0xbb7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb7a), 0xc0);
        // C0 012B
        gbc.setState(0xb83, 0x6474, 0xe120, 0xb915, 0x7f06, 0x24be, 0x0, 0x1);
        gbc.writeMem(0xb83, { 0xc0 });
        gbc.writeMem(0x6474, { 0x1, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6476);
        EXPECT(gbc.pc(), 0xa101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 012D
        gbc.setState(0x6d63, 0x772a, 0x7b00, 0x147a, 0xf59c, 0x95fe, 0x1, 0x1);
        gbc.writeMem(0x6d63, { 0xc0 });
        gbc.writeMem(0x772a, { 0x7b, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x772c);
        EXPECT(gbc.pc(), 0xc87b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 012E
        gbc.setState(0x9924, 0xe014, 0xc200, 0x5ca7, 0x4b65, 0x3454, 0x1, 0x1);
        gbc.writeMem(0x9924, { 0xc0 });
        gbc.writeMem(0xe014, { 0x6d, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe016);
        EXPECT(gbc.pc(), 0x7a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9924), 0xc0);
        EXPECT(gbc.readMem(0xe014), 0x6d);
        EXPECT(gbc.readMem(0xe015), 0x7a);
        // C0 012F
        gbc.setState(0x4078, 0x2afc, 0x9280, 0x82d0, 0x765f, 0x5049, 0x1, 0x0);
        gbc.writeMem(0x4078, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2afc);
        EXPECT(gbc.pc(), 0x4079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0130
        gbc.setState(0x49da, 0x66c2, 0xa900, 0x4842, 0x66d7, 0x4169, 0x0, 0x1);
        gbc.writeMem(0x49da, { 0xc0 });
        gbc.writeMem(0x66c2, { 0x71, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x66c4);
        EXPECT(gbc.pc(), 0x2a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0131
        gbc.setState(0x8be7, 0xfc6e, 0x4a0, 0x96e5, 0x581e, 0x96dc, 0x1, 0x0);
        gbc.writeMem(0x8be7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfc6e);
        EXPECT(gbc.pc(), 0x8be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be7), 0xc0);
        // C0 0132
        gbc.setState(0x8164, 0xfe58, 0x5880, 0x8a61, 0x8179, 0xd771, 0x0, 0x0);
        gbc.writeMem(0x8164, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfe58);
        EXPECT(gbc.pc(), 0x8165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8164), 0xc0);
        // C0 0133
        gbc.setState(0x32b6, 0x6e74, 0xf000, 0xea9f, 0x4ea4, 0xc510, 0x0, 0x1);
        gbc.writeMem(0x32b6, { 0xc0 });
        gbc.writeMem(0x6e74, { 0x37, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6e76);
        EXPECT(gbc.pc(), 0xf537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0134
        gbc.setState(0x63b1, 0xf3ea, 0xa8f0, 0x6411, 0xbc0a, 0x1b30, 0x0, 0x1);
        gbc.writeMem(0x63b1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf3ea);
        EXPECT(gbc.pc(), 0x63b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0135
        gbc.setState(0x1b49, 0x2e80, 0xa5b0, 0xf19c, 0x6d32, 0xb469, 0x0, 0x0);
        gbc.writeMem(0x1b49, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2e80);
        EXPECT(gbc.pc(), 0x1b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0136
        gbc.setState(0xa2f5, 0x4afc, 0xc80, 0xd395, 0x7e2e, 0xb4a8, 0x0, 0x0);
        gbc.writeMem(0xa2f5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4afc);
        EXPECT(gbc.pc(), 0xa2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2f5), 0xc0);
        // C0 0137
        gbc.setState(0x5692, 0x148, 0x17d0, 0x55de, 0xb3b5, 0x3d83, 0x1, 0x0);
        gbc.writeMem(0x5692, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x148);
        EXPECT(gbc.pc(), 0x5693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0138
        gbc.setState(0x766b, 0xa2d1, 0x6bb0, 0x6ca, 0xedb5, 0x9e84, 0x1, 0x0);
        gbc.writeMem(0x766b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa2d1);
        EXPECT(gbc.pc(), 0x766c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0139
        gbc.setState(0x83af, 0xc285, 0x9eb0, 0xb995, 0xd4bf, 0xf5da, 0x1, 0x1);
        gbc.writeMem(0x83af, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc285);
        EXPECT(gbc.pc(), 0x83b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83af), 0xc0);
        // C0 013A
        gbc.setState(0xbd1c, 0x6995, 0x1120, 0x19ef, 0x242f, 0x9d1, 0x0, 0x0);
        gbc.writeMem(0x6995, { 0xa2, 0x99 });
        gbc.writeMem(0xbd1c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6997);
        EXPECT(gbc.pc(), 0x99a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd1c), 0xc0);
        // C0 013B
        gbc.setState(0xa350, 0x1aa9, 0xf940, 0x2f3e, 0xeaa7, 0x771b, 0x0, 0x1);
        gbc.writeMem(0x1aa9, { 0xd7, 0x6c });
        gbc.writeMem(0xa350, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1aab);
        EXPECT(gbc.pc(), 0x6cd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa350), 0xc0);
        // C0 013C
        gbc.setState(0xbfc6, 0xcd5c, 0x17c0, 0x1b58, 0xdfa3, 0x467a, 0x1, 0x1);
        gbc.writeMem(0xbfc6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcd5c);
        EXPECT(gbc.pc(), 0xbfc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc6), 0xc0);
        // C0 013D
        gbc.setState(0x29eb, 0x5385, 0xfaf0, 0x4cea, 0x3f7c, 0xada0, 0x0, 0x1);
        gbc.writeMem(0x29eb, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5385);
        EXPECT(gbc.pc(), 0x29ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 013E
        gbc.setState(0x227c, 0xbd3e, 0xa190, 0xbe3f, 0x2a9c, 0x3ba5, 0x0, 0x1);
        gbc.writeMem(0x227c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbd3e);
        EXPECT(gbc.pc(), 0x227d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 013F
        gbc.setState(0xb6cc, 0x4a94, 0x9960, 0x233d, 0xc1f7, 0x4c8a, 0x0, 0x1);
        gbc.writeMem(0x4a94, { 0xb0, 0x1a });
        gbc.writeMem(0xb6cc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4a96);
        EXPECT(gbc.pc(), 0x1ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6cc), 0xc0);
        // C0 0140
        gbc.setState(0x24d5, 0xe645, 0xeee0, 0x722d, 0xef54, 0xbd90, 0x1, 0x0);
        gbc.writeMem(0x24d5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe645);
        EXPECT(gbc.pc(), 0x24d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0141
        gbc.setState(0xa834, 0x7213, 0x4050, 0x10e2, 0x4505, 0x9926, 0x0, 0x0);
        gbc.writeMem(0x7213, { 0x9d, 0xa9 });
        gbc.writeMem(0xa834, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7215);
        EXPECT(gbc.pc(), 0xa99d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa834), 0xc0);
        // C0 0142
        gbc.setState(0xd8f8, 0x9a5b, 0x7050, 0x8e38, 0x1b0, 0x87e3, 0x0, 0x1);
        gbc.writeMem(0x9a5b, { 0xd9, 0xd4 });
        gbc.writeMem(0xd8f8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9a5d);
        EXPECT(gbc.pc(), 0xd4d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a5b), 0xd9);
        EXPECT(gbc.readMem(0x9a5c), 0xd4);
        EXPECT(gbc.readMem(0xd8f8), 0xc0);
        // C0 0143
        gbc.setState(0xb467, 0x7234, 0x29c0, 0x1a9c, 0x133f, 0x89c2, 0x0, 0x0);
        gbc.writeMem(0xb467, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7234);
        EXPECT(gbc.pc(), 0xb468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb467), 0xc0);
        // C0 0144
        gbc.setState(0xc24d, 0x1c12, 0x5320, 0x622d, 0x2396, 0x2c2c, 0x0, 0x0);
        gbc.writeMem(0x1c12, { 0xc7, 0x7 });
        gbc.writeMem(0xc24d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1c14);
        EXPECT(gbc.pc(), 0x7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc24d), 0xc0);
        // C0 0145
        gbc.setState(0x32e8, 0xee45, 0x6610, 0x56dc, 0xaf1d, 0x7102, 0x1, 0x1);
        gbc.writeMem(0x32e8, { 0xc0 });
        gbc.writeMem(0xee45, { 0x73, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xee47);
        EXPECT(gbc.pc(), 0x6973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee45), 0x73);
        EXPECT(gbc.readMem(0xee46), 0x69);
        // C0 0146
        gbc.setState(0x1ada, 0x8a53, 0x7bd0, 0x8114, 0xdd50, 0x8bd1, 0x0, 0x0);
        gbc.writeMem(0x1ada, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8a53);
        EXPECT(gbc.pc(), 0x1adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0147
        gbc.setState(0xc713, 0xd8b4, 0x6710, 0x3d35, 0xf418, 0x3e1b, 0x1, 0x0);
        gbc.writeMem(0xc713, { 0xc0 });
        gbc.writeMem(0xd8b4, { 0x3f, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd8b6);
        EXPECT(gbc.pc(), 0x3c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc713), 0xc0);
        EXPECT(gbc.readMem(0xd8b4), 0x3f);
        EXPECT(gbc.readMem(0xd8b5), 0x3c);
        // C0 0148
        gbc.setState(0xa2bc, 0x773e, 0xbb40, 0xf30c, 0x7338, 0x35e6, 0x0, 0x1);
        gbc.writeMem(0x773e, { 0x75, 0x47 });
        gbc.writeMem(0xa2bc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7740);
        EXPECT(gbc.pc(), 0x4775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2bc), 0xc0);
        // C0 0149
        gbc.setState(0xae82, 0xcde1, 0xc0e0, 0x91be, 0xf5c, 0x75c, 0x0, 0x0);
        gbc.writeMem(0xae82, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcde1);
        EXPECT(gbc.pc(), 0xae83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae82), 0xc0);
        // C0 014A
        gbc.setState(0x8d8a, 0x50e, 0x2170, 0x1c40, 0xfc6, 0xd051, 0x1, 0x0);
        gbc.writeMem(0x50e, { 0xe5, 0xd2 });
        gbc.writeMem(0x8d8a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x510);
        EXPECT(gbc.pc(), 0xd2e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d8a), 0xc0);
        // C0 014B
        gbc.setState(0x9f0, 0xf4ca, 0x74b0, 0x1459, 0x6e55, 0x5602, 0x0, 0x0);
        gbc.writeMem(0x9f0, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf4ca);
        EXPECT(gbc.pc(), 0x9f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 014D
        gbc.setState(0xe39a, 0x37db, 0x1300, 0xb97c, 0xe26e, 0x5b46, 0x0, 0x1);
        gbc.writeMem(0x37db, { 0x14, 0xe4 });
        gbc.writeMem(0xe39a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x37dd);
        EXPECT(gbc.pc(), 0xe414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe39a), 0xc0);
        // C0 014E
        gbc.setState(0x61b, 0xc59e, 0x2d70, 0x76ec, 0xcac0, 0x33aa, 0x0, 0x0);
        gbc.writeMem(0x61b, { 0xc0 });
        gbc.writeMem(0xc59e, { 0x36, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc5a0);
        EXPECT(gbc.pc(), 0xce36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59e), 0x36);
        EXPECT(gbc.readMem(0xc59f), 0xce);
        // C0 014F
        gbc.setState(0xd43b, 0xb017, 0x18c0, 0x43c, 0xca22, 0x98c5, 0x1, 0x1);
        gbc.writeMem(0xd43b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb017);
        EXPECT(gbc.pc(), 0xd43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd43b), 0xc0);
        // C0 0150
        gbc.setState(0x55b8, 0x870d, 0x5400, 0x42ff, 0xdcfd, 0x91b1, 0x0, 0x0);
        gbc.writeMem(0x55b8, { 0xc0 });
        gbc.writeMem(0x870d, { 0x63, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x870f);
        EXPECT(gbc.pc(), 0xca63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x870d), 0x63);
        EXPECT(gbc.readMem(0x870e), 0xca);
        // C0 0151
        gbc.setState(0x8e10, 0x1016, 0xcf10, 0x8939, 0xf974, 0xa0b0, 0x0, 0x0);
        gbc.writeMem(0x1016, { 0x2d, 0x52 });
        gbc.writeMem(0x8e10, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1018);
        EXPECT(gbc.pc(), 0x522d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e10), 0xc0);
        // C0 0152
        gbc.setState(0x5d15, 0xd6f0, 0xf420, 0x4248, 0x140c, 0xee5d, 0x0, 0x0);
        gbc.writeMem(0x5d15, { 0xc0 });
        gbc.writeMem(0xd6f0, { 0x4c, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd6f2);
        EXPECT(gbc.pc(), 0x94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f0), 0x4c);
        EXPECT(gbc.readMem(0xd6f1), 0x9);
        // C0 0153
        gbc.setState(0x6505, 0xa3db, 0xdf70, 0x9573, 0x2cdd, 0x3fa1, 0x0, 0x1);
        gbc.writeMem(0x6505, { 0xc0 });
        gbc.writeMem(0xa3db, { 0x55, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa3dd);
        EXPECT(gbc.pc(), 0x655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3db), 0x55);
        EXPECT(gbc.readMem(0xa3dc), 0x6);
        // C0 0154
        gbc.setState(0x3c38, 0x35c6, 0x3170, 0x125f, 0x9276, 0x6e64, 0x1, 0x1);
        gbc.writeMem(0x35c6, { 0x1c, 0x6b });
        gbc.writeMem(0x3c38, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x35c8);
        EXPECT(gbc.pc(), 0x6b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0155
        gbc.setState(0x26ea, 0xa7f7, 0xa690, 0xa49e, 0x32b9, 0x4e2c, 0x0, 0x1);
        gbc.writeMem(0x26ea, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa7f7);
        EXPECT(gbc.pc(), 0x26eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0156
        gbc.setState(0xeda0, 0x3b99, 0x24a0, 0xdbf, 0x13e, 0x8a2c, 0x1, 0x1);
        gbc.writeMem(0xeda0, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3b99);
        EXPECT(gbc.pc(), 0xeda1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda0), 0xc0);
        // C0 0157
        gbc.setState(0x5564, 0x111a, 0xb5d0, 0x2e5c, 0xb129, 0xe29c, 0x0, 0x0);
        gbc.writeMem(0x5564, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x111a);
        EXPECT(gbc.pc(), 0x5565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0158
        gbc.setState(0x3c4c, 0xb6c2, 0xa380, 0x6eae, 0x4c85, 0xd255, 0x1, 0x1);
        gbc.writeMem(0x3c4c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb6c2);
        EXPECT(gbc.pc(), 0x3c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0159
        gbc.setState(0x27ce, 0x5c0d, 0x9af0, 0x815, 0xa361, 0x9c67, 0x1, 0x0);
        gbc.writeMem(0x27ce, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5c0d);
        EXPECT(gbc.pc(), 0x27cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 015A
        gbc.setState(0x656a, 0xa10e, 0x7370, 0x1fac, 0x8797, 0xf001, 0x0, 0x1);
        gbc.writeMem(0x656a, { 0xc0 });
        gbc.writeMem(0xa10e, { 0x59, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa110);
        EXPECT(gbc.pc(), 0xbe59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa10e), 0x59);
        EXPECT(gbc.readMem(0xa10f), 0xbe);
        // C0 015B
        gbc.setState(0x340e, 0x3813, 0x48e0, 0x5bf6, 0x380b, 0x97a9, 0x1, 0x0);
        gbc.writeMem(0x340e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3813);
        EXPECT(gbc.pc(), 0x340f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 015D
        gbc.setState(0xea30, 0x41cb, 0xf6e0, 0x8510, 0x6067, 0x4da4, 0x0, 0x1);
        gbc.writeMem(0xea30, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x41cb);
        EXPECT(gbc.pc(), 0xea31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea30), 0xc0);
        // C0 015E
        gbc.setState(0x4632, 0xcf82, 0xc190, 0x2845, 0x3b91, 0xfbd6, 0x0, 0x1);
        gbc.writeMem(0x4632, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcf82);
        EXPECT(gbc.pc(), 0x4633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 015F
        gbc.setState(0x2d33, 0xbc36, 0x8a80, 0x106e, 0xaac9, 0x21dc, 0x1, 0x1);
        gbc.writeMem(0x2d33, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbc36);
        EXPECT(gbc.pc(), 0x2d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0160
        gbc.setState(0xaef7, 0x71f4, 0x5c60, 0x2568, 0xb50d, 0x210f, 0x0, 0x0);
        gbc.writeMem(0x71f4, { 0x16, 0x39 });
        gbc.writeMem(0xaef7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x71f6);
        EXPECT(gbc.pc(), 0x3916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef7), 0xc0);
        // C0 0161
        gbc.setState(0x12e, 0x998a, 0x5d80, 0xd078, 0x9ceb, 0xaccb, 0x0, 0x1);
        gbc.writeMem(0x12e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x998a);
        EXPECT(gbc.pc(), 0x12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0162
        gbc.setState(0x6bd1, 0x43dd, 0xa7c0, 0x9d7e, 0xff08, 0xbe0a, 0x1, 0x1);
        gbc.writeMem(0x6bd1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x43dd);
        EXPECT(gbc.pc(), 0x6bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0163
        gbc.setState(0xb218, 0x6518, 0xf940, 0x2850, 0xfc2b, 0xf8f1, 0x0, 0x1);
        gbc.writeMem(0x6518, { 0x68, 0x72 });
        gbc.writeMem(0xb218, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x651a);
        EXPECT(gbc.pc(), 0x7268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb218), 0xc0);
        // C0 0164
        gbc.setState(0x6450, 0xfdf5, 0x1c80, 0xaf9b, 0x2ac4, 0x1440, 0x1, 0x1);
        gbc.writeMem(0x6450, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfdf5);
        EXPECT(gbc.pc(), 0x6451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0165
        gbc.setState(0xa4d, 0xdae6, 0xa9f0, 0x8430, 0x28ba, 0xe7fa, 0x1, 0x0);
        gbc.writeMem(0xa4d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdae6);
        EXPECT(gbc.pc(), 0xa4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0166
        gbc.setState(0x165b, 0xc93, 0x9a40, 0x1e8a, 0x4237, 0x239d, 0x1, 0x1);
        gbc.writeMem(0xc93, { 0x7, 0xfc });
        gbc.writeMem(0x165b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc95);
        EXPECT(gbc.pc(), 0xfc07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0167
        gbc.setState(0x9171, 0xed7b, 0xc760, 0x1fb, 0xa6b9, 0xd6dd, 0x0, 0x1);
        gbc.writeMem(0x9171, { 0xc0 });
        gbc.writeMem(0xed7b, { 0x6a, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xed7d);
        EXPECT(gbc.pc(), 0x446a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9171), 0xc0);
        EXPECT(gbc.readMem(0xed7b), 0x6a);
        EXPECT(gbc.readMem(0xed7c), 0x44);
        // C0 0168
        gbc.setState(0x10ff, 0xf6d7, 0x9cd0, 0x20a2, 0xb25f, 0xc4c3, 0x0, 0x1);
        gbc.writeMem(0x10ff, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf6d7);
        EXPECT(gbc.pc(), 0x1100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 016D
        gbc.setState(0x272a, 0x14ed, 0x9f80, 0x1c42, 0x649c, 0xf014, 0x0, 0x1);
        gbc.writeMem(0x272a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x14ed);
        EXPECT(gbc.pc(), 0x272b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 016E
        gbc.setState(0x3d77, 0x6f44, 0xf060, 0x1279, 0xf77a, 0x2eac, 0x0, 0x1);
        gbc.writeMem(0x3d77, { 0xc0 });
        gbc.writeMem(0x6f44, { 0x85, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6f46);
        EXPECT(gbc.pc(), 0x885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 016F
        gbc.setState(0x67ed, 0xa209, 0xbc0, 0xd32e, 0xc2e7, 0x454e, 0x0, 0x1);
        gbc.writeMem(0x67ed, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa209);
        EXPECT(gbc.pc(), 0x67ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0170
        gbc.setState(0x4f0, 0x28cb, 0xab50, 0x4fd7, 0x51a3, 0x74e3, 0x1, 0x1);
        gbc.writeMem(0x4f0, { 0xc0 });
        gbc.writeMem(0x28cb, { 0xf0, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x28cd);
        EXPECT(gbc.pc(), 0x86f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0171
        gbc.setState(0x4d15, 0x5a5e, 0xa930, 0x602a, 0x3f32, 0xe4b4, 0x0, 0x0);
        gbc.writeMem(0x4d15, { 0xc0 });
        gbc.writeMem(0x5a5e, { 0x8a, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5a60);
        EXPECT(gbc.pc(), 0xe68a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0172
        gbc.setState(0xdd6e, 0x84e3, 0xc6b0, 0x662b, 0xe19a, 0x1f4e, 0x0, 0x0);
        gbc.writeMem(0xdd6e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x84e3);
        EXPECT(gbc.pc(), 0xdd6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd6e), 0xc0);
        // C0 0173
        gbc.setState(0x1e9f, 0xcfa2, 0x8ec0, 0x7fd9, 0xda36, 0xd7a9, 0x1, 0x0);
        gbc.writeMem(0x1e9f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcfa2);
        EXPECT(gbc.pc(), 0x1ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0174
        gbc.setState(0x8ee1, 0x8fa7, 0xc670, 0xdb32, 0x1a9f, 0xfb43, 0x1, 0x1);
        gbc.writeMem(0x8ee1, { 0xc0 });
        gbc.writeMem(0x8fa7, { 0x20, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8fa9);
        EXPECT(gbc.pc(), 0x7a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ee1), 0xc0);
        EXPECT(gbc.readMem(0x8fa7), 0x20);
        EXPECT(gbc.readMem(0x8fa8), 0x7a);
        // C0 0175
        gbc.setState(0xace7, 0x5426, 0x82d0, 0xda14, 0x9c8a, 0x6b3d, 0x0, 0x1);
        gbc.writeMem(0xace7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5426);
        EXPECT(gbc.pc(), 0xace8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace7), 0xc0);
        // C0 0176
        gbc.setState(0x8dd6, 0x691a, 0xebc0, 0xd0ae, 0xd83b, 0x34a9, 0x0, 0x0);
        gbc.writeMem(0x8dd6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x691a);
        EXPECT(gbc.pc(), 0x8dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd6), 0xc0);
        // C0 0177
        gbc.setState(0xbd46, 0x618d, 0xa0f0, 0xff50, 0x4b56, 0xec69, 0x0, 0x1);
        gbc.writeMem(0xbd46, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x618d);
        EXPECT(gbc.pc(), 0xbd47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd46), 0xc0);
        // C0 0178
        gbc.setState(0x6dcc, 0xce65, 0xea10, 0x7eb7, 0x7f7c, 0xb80d, 0x1, 0x0);
        gbc.writeMem(0x6dcc, { 0xc0 });
        gbc.writeMem(0xce65, { 0x5c, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xce67);
        EXPECT(gbc.pc(), 0xdf5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce65), 0x5c);
        EXPECT(gbc.readMem(0xce66), 0xdf);
        // C0 0179
        gbc.setState(0xcf9d, 0x14f5, 0x910, 0x896, 0x5657, 0x1912, 0x1, 0x0);
        gbc.writeMem(0x14f5, { 0xf2, 0xe1 });
        gbc.writeMem(0xcf9d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x14f7);
        EXPECT(gbc.pc(), 0xe1f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf9d), 0xc0);
        // C0 017A
        gbc.setState(0xc21d, 0x7967, 0x8860, 0xf935, 0xaf13, 0xd651, 0x0, 0x1);
        gbc.writeMem(0x7967, { 0x4a, 0x1a });
        gbc.writeMem(0xc21d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7969);
        EXPECT(gbc.pc(), 0x1a4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc21d), 0xc0);
        // C0 017B
        gbc.setState(0x32b0, 0x2bbe, 0xae00, 0x3279, 0xd3dc, 0x6852, 0x1, 0x0);
        gbc.writeMem(0x2bbe, { 0xdc, 0xd6 });
        gbc.writeMem(0x32b0, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2bc0);
        EXPECT(gbc.pc(), 0xd6dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 017C
        gbc.setState(0x9cfe, 0xffca, 0x8d10, 0x3661, 0x5226, 0x9c11, 0x1, 0x0);
        gbc.writeMem(0x9cfe, { 0xc0 });
        gbc.writeMem(0xffca, { 0x9, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xffcc);
        EXPECT(gbc.pc(), 0x6409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cfe), 0xc0);
        EXPECT(gbc.readMem(0xffca), 0x9);
        EXPECT(gbc.readMem(0xffcb), 0x64);
        // C0 017D
        gbc.setState(0x77fa, 0x8afb, 0xc150, 0xa653, 0x1a23, 0x4c6, 0x1, 0x0);
        gbc.writeMem(0x77fa, { 0xc0 });
        gbc.writeMem(0x8afb, { 0xa, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8afd);
        EXPECT(gbc.pc(), 0xbd0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8afb), 0xa);
        EXPECT(gbc.readMem(0x8afc), 0xbd);
        // C0 017E
        gbc.setState(0x21aa, 0xc2fd, 0xc7f0, 0x56de, 0xfc35, 0xc58a, 0x0, 0x1);
        gbc.writeMem(0x21aa, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc2fd);
        EXPECT(gbc.pc(), 0x21ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 017F
        gbc.setState(0xacfc, 0xa46c, 0x81b0, 0x8f4e, 0x64f1, 0x7ba0, 0x0, 0x0);
        gbc.writeMem(0xacfc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa46c);
        EXPECT(gbc.pc(), 0xacfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacfc), 0xc0);
        // C0 0180
        gbc.setState(0xaa50, 0xdbda, 0x71c0, 0x9b3e, 0xab5d, 0xbf15, 0x0, 0x0);
        gbc.writeMem(0xaa50, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xdbda);
        EXPECT(gbc.pc(), 0xaa51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa50), 0xc0);
        // C0 0181
        gbc.setState(0x4f61, 0xdcab, 0x4bb0, 0x4d45, 0xb057, 0x3186, 0x0, 0x0);
        gbc.writeMem(0x4f61, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xdcab);
        EXPECT(gbc.pc(), 0x4f62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0182
        gbc.setState(0x3d18, 0x3979, 0x2f30, 0x7149, 0x8115, 0xfd41, 0x1, 0x0);
        gbc.writeMem(0x3979, { 0xe, 0x4a });
        gbc.writeMem(0x3d18, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x397b);
        EXPECT(gbc.pc(), 0x4a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0183
        gbc.setState(0xe30a, 0x1b91, 0x940, 0xce81, 0x2212, 0xcc5f, 0x0, 0x1);
        gbc.writeMem(0x1b91, { 0x57, 0x75 });
        gbc.writeMem(0xe30a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1b93);
        EXPECT(gbc.pc(), 0x7557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe30a), 0xc0);
        // C0 0184
        gbc.setState(0x1e6c, 0x1d68, 0x3c70, 0xcf2b, 0xd092, 0xf0bf, 0x0, 0x1);
        gbc.writeMem(0x1d68, { 0x48, 0xea });
        gbc.writeMem(0x1e6c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1d6a);
        EXPECT(gbc.pc(), 0xea48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0185
        gbc.setState(0x690a, 0x27ab, 0x79b0, 0xe3b8, 0x81e1, 0xdbaa, 0x0, 0x0);
        gbc.writeMem(0x690a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x27ab);
        EXPECT(gbc.pc(), 0x690b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0186
        gbc.setState(0xae6c, 0x81be, 0x9c50, 0x68fc, 0xb0ab, 0xf73b, 0x0, 0x1);
        gbc.writeMem(0x81be, { 0x4d, 0xac });
        gbc.writeMem(0xae6c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x81c0);
        EXPECT(gbc.pc(), 0xac4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81be), 0x4d);
        EXPECT(gbc.readMem(0x81bf), 0xac);
        EXPECT(gbc.readMem(0xae6c), 0xc0);
        // C0 0187
        gbc.setState(0x8220, 0xd86e, 0xa8d0, 0xd83a, 0x769c, 0xe7ba, 0x1, 0x0);
        gbc.writeMem(0x8220, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd86e);
        EXPECT(gbc.pc(), 0x8221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8220), 0xc0);
        // C0 0188
        gbc.setState(0x57a2, 0xb708, 0x6f90, 0x9e64, 0xff27, 0xd185, 0x1, 0x1);
        gbc.writeMem(0x57a2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb708);
        EXPECT(gbc.pc(), 0x57a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0189
        gbc.setState(0x23cf, 0xe0f3, 0x71f0, 0x7910, 0xd34f, 0x63ab, 0x1, 0x0);
        gbc.writeMem(0x23cf, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe0f3);
        EXPECT(gbc.pc(), 0x23d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 018A
        gbc.setState(0xf69, 0x94dc, 0x4d30, 0x5bc3, 0xccf5, 0x669e, 0x0, 0x0);
        gbc.writeMem(0xf69, { 0xc0 });
        gbc.writeMem(0x94dc, { 0x18, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x94de);
        EXPECT(gbc.pc(), 0x2418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94dc), 0x18);
        EXPECT(gbc.readMem(0x94dd), 0x24);
        // C0 018B
        gbc.setState(0x8c0d, 0xe98d, 0xedb0, 0xcffa, 0x1d01, 0x98e4, 0x1, 0x0);
        gbc.writeMem(0x8c0d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe98d);
        EXPECT(gbc.pc(), 0x8c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c0d), 0xc0);
        // C0 018C
        gbc.setState(0x60b6, 0x6a8b, 0xd5d0, 0x8382, 0x6fdc, 0xe2c9, 0x0, 0x0);
        gbc.writeMem(0x60b6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6a8b);
        EXPECT(gbc.pc(), 0x60b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 018D
        gbc.setState(0xc5bd, 0x5bed, 0x2f90, 0xb297, 0xe3cd, 0xc8fb, 0x1, 0x0);
        gbc.writeMem(0xc5bd, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5bed);
        EXPECT(gbc.pc(), 0xc5be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5bd), 0xc0);
        // C0 018E
        gbc.setState(0x348, 0x49f4, 0xf850, 0xc4a8, 0x9070, 0x2844, 0x0, 0x0);
        gbc.writeMem(0x348, { 0xc0 });
        gbc.writeMem(0x49f4, { 0x1, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x49f6);
        EXPECT(gbc.pc(), 0xf101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 018F
        gbc.setState(0x97f, 0x7135, 0xcc70, 0x401b, 0x8d63, 0x39bf, 0x0, 0x0);
        gbc.writeMem(0x97f, { 0xc0 });
        gbc.writeMem(0x7135, { 0x45, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7137);
        EXPECT(gbc.pc(), 0x245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0190
        gbc.setState(0x1b1e, 0xa381, 0x94f0, 0x2f53, 0x2799, 0x53ba, 0x1, 0x1);
        gbc.writeMem(0x1b1e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa381);
        EXPECT(gbc.pc(), 0x1b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0191
        gbc.setState(0x603c, 0xe3af, 0xf620, 0x55de, 0x121b, 0x38b2, 0x0, 0x1);
        gbc.writeMem(0x603c, { 0xc0 });
        gbc.writeMem(0xe3af, { 0xe3, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe3b1);
        EXPECT(gbc.pc(), 0x68e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3af), 0xe3);
        EXPECT(gbc.readMem(0xe3b0), 0x68);
        // C0 0192
        gbc.setState(0xc6d9, 0x2eaa, 0x9c50, 0x7f61, 0x31ef, 0x68f8, 0x0, 0x0);
        gbc.writeMem(0x2eaa, { 0xf2, 0x85 });
        gbc.writeMem(0xc6d9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2eac);
        EXPECT(gbc.pc(), 0x85f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d9), 0xc0);
        // C0 0193
        gbc.setState(0xd134, 0x771c, 0xbe00, 0x9e54, 0x5861, 0xe01e, 0x1, 0x1);
        gbc.writeMem(0x771c, { 0x93, 0x4d });
        gbc.writeMem(0xd134, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x771e);
        EXPECT(gbc.pc(), 0x4d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd134), 0xc0);
        // C0 0194
        gbc.setState(0xa95b, 0x6478, 0xa800, 0xfc28, 0x989d, 0xb86a, 0x1, 0x1);
        gbc.writeMem(0x6478, { 0x42, 0x72 });
        gbc.writeMem(0xa95b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x647a);
        EXPECT(gbc.pc(), 0x7242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95b), 0xc0);
        // C0 0195
        gbc.setState(0x1f13, 0x59dc, 0x6bd0, 0x1614, 0x8ee5, 0x80d, 0x0, 0x0);
        gbc.writeMem(0x1f13, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x59dc);
        EXPECT(gbc.pc(), 0x1f14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0196
        gbc.setState(0xb89d, 0xafe3, 0x310, 0x52cb, 0x6afd, 0xb8d5, 0x0, 0x1);
        gbc.writeMem(0xafe3, { 0x18, 0xa2 });
        gbc.writeMem(0xb89d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xafe5);
        EXPECT(gbc.pc(), 0xa218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe3), 0x18);
        EXPECT(gbc.readMem(0xafe4), 0xa2);
        EXPECT(gbc.readMem(0xb89d), 0xc0);
        // C0 0197
        gbc.setState(0xd592, 0x9525, 0xc870, 0x6a8c, 0x4111, 0x225c, 0x1, 0x1);
        gbc.writeMem(0x9525, { 0x43, 0x64 });
        gbc.writeMem(0xd592, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9527);
        EXPECT(gbc.pc(), 0x6443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9525), 0x43);
        EXPECT(gbc.readMem(0x9526), 0x64);
        EXPECT(gbc.readMem(0xd592), 0xc0);
        // C0 0198
        gbc.setState(0x6695, 0x567d, 0xad0, 0x45a5, 0x838c, 0xf114, 0x1, 0x0);
        gbc.writeMem(0x6695, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x567d);
        EXPECT(gbc.pc(), 0x6696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0199
        gbc.setState(0x5f19, 0xa6dd, 0xe060, 0xe16e, 0x2e66, 0x61ee, 0x0, 0x0);
        gbc.writeMem(0x5f19, { 0xc0 });
        gbc.writeMem(0xa6dd, { 0x5b, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa6df);
        EXPECT(gbc.pc(), 0xe95b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6dd), 0x5b);
        EXPECT(gbc.readMem(0xa6de), 0xe9);
        // C0 019A
        gbc.setState(0x2985, 0x6428, 0x7ea0, 0x3001, 0x3df5, 0xa29b, 0x0, 0x1);
        gbc.writeMem(0x2985, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6428);
        EXPECT(gbc.pc(), 0x2986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 019B
        gbc.setState(0x190a, 0xa945, 0x9470, 0xfc26, 0xa35e, 0x44fb, 0x0, 0x0);
        gbc.writeMem(0x190a, { 0xc0 });
        gbc.writeMem(0xa945, { 0xb4, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa947);
        EXPECT(gbc.pc(), 0x6ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa945), 0xb4);
        EXPECT(gbc.readMem(0xa946), 0x6a);
        // C0 019C
        gbc.setState(0x389, 0x1280, 0xe8b0, 0xfc4a, 0x45e6, 0xdb51, 0x0, 0x1);
        gbc.writeMem(0x389, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1280);
        EXPECT(gbc.pc(), 0x38a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 019D
        gbc.setState(0xd32e, 0xcc9c, 0x5830, 0x23f2, 0xa546, 0x7e61, 0x0, 0x0);
        gbc.writeMem(0xcc9c, { 0x5a, 0x50 });
        gbc.writeMem(0xd32e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcc9e);
        EXPECT(gbc.pc(), 0x505a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9c), 0x5a);
        EXPECT(gbc.readMem(0xcc9d), 0x50);
        EXPECT(gbc.readMem(0xd32e), 0xc0);
        // C0 019E
        gbc.setState(0x4fb, 0xafa5, 0xe630, 0xcc7e, 0xa1a5, 0x59fb, 0x0, 0x0);
        gbc.writeMem(0x4fb, { 0xc0 });
        gbc.writeMem(0xafa5, { 0xca, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xafa7);
        EXPECT(gbc.pc(), 0x1cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa5), 0xca);
        EXPECT(gbc.readMem(0xafa6), 0x1c);
        // C0 019F
        gbc.setState(0x803a, 0xf6c4, 0xe630, 0x78ab, 0x4475, 0x42f7, 0x0, 0x0);
        gbc.writeMem(0x803a, { 0xc0 });
        gbc.writeMem(0xf6c4, { 0x1c, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf6c6);
        EXPECT(gbc.pc(), 0xe71c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803a), 0xc0);
        EXPECT(gbc.readMem(0xf6c4), 0x1c);
        EXPECT(gbc.readMem(0xf6c5), 0xe7);
        // C0 01A0
        gbc.setState(0x10c7, 0xcd4f, 0xa270, 0xfd05, 0xb9bf, 0x68c7, 0x0, 0x0);
        gbc.writeMem(0x10c7, { 0xc0 });
        gbc.writeMem(0xcd4f, { 0xa9, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcd51);
        EXPECT(gbc.pc(), 0xfaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4f), 0xa9);
        EXPECT(gbc.readMem(0xcd50), 0xfa);
        // C0 01A1
        gbc.setState(0xc064, 0xf966, 0x5780, 0x6515, 0x561c, 0x771f, 0x1, 0x0);
        gbc.writeMem(0xc064, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf966);
        EXPECT(gbc.pc(), 0xc065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc064), 0xc0);
        // C0 01A2
        gbc.setState(0x4508, 0xc234, 0x7970, 0x6767, 0x694f, 0xe5a3, 0x0, 0x1);
        gbc.writeMem(0x4508, { 0xc0 });
        gbc.writeMem(0xc234, { 0x18, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc236);
        EXPECT(gbc.pc(), 0xa18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc234), 0x18);
        EXPECT(gbc.readMem(0xc235), 0xa);
        // C0 01A3
        gbc.setState(0x3b9d, 0x66a9, 0x2be0, 0xec17, 0x1ef7, 0xaff6, 0x1, 0x0);
        gbc.writeMem(0x3b9d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x66a9);
        EXPECT(gbc.pc(), 0x3b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 01A4
        gbc.setState(0x811f, 0x8b04, 0x5f00, 0x130f, 0x249, 0x6b1f, 0x0, 0x1);
        gbc.writeMem(0x811f, { 0xc0 });
        gbc.writeMem(0x8b04, { 0x21, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8b06);
        EXPECT(gbc.pc(), 0xc621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811f), 0xc0);
        EXPECT(gbc.readMem(0x8b04), 0x21);
        EXPECT(gbc.readMem(0x8b05), 0xc6);
        // C0 01A5
        gbc.setState(0xeb33, 0x7a43, 0x4e60, 0xd4e9, 0x2840, 0x3b94, 0x0, 0x0);
        gbc.writeMem(0x7a43, { 0x76, 0x60 });
        gbc.writeMem(0xeb33, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7a45);
        EXPECT(gbc.pc(), 0x6076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb33), 0xc0);
        // C0 01A7
        gbc.setState(0xe87c, 0xdd1f, 0x8dd0, 0xad55, 0x3874, 0x4443, 0x0, 0x1);
        gbc.writeMem(0xe87c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xdd1f);
        EXPECT(gbc.pc(), 0xe87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe87c), 0xc0);
        // C0 01A8
        gbc.setState(0xd075, 0xb44a, 0x2fa0, 0xb9c, 0x1ff9, 0xfcb0, 0x0, 0x1);
        gbc.writeMem(0xd075, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb44a);
        EXPECT(gbc.pc(), 0xd076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd075), 0xc0);
        // C0 01A9
        gbc.setState(0xdb44, 0x773a, 0x5810, 0xba56, 0x4fa8, 0xbb15, 0x1, 0x0);
        gbc.writeMem(0x773a, { 0xfd, 0xc9 });
        gbc.writeMem(0xdb44, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x773c);
        EXPECT(gbc.pc(), 0xc9fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb44), 0xc0);
        // C0 01AA
        gbc.setState(0x907a, 0x32b, 0xe060, 0x1ad7, 0x347d, 0x1211, 0x0, 0x0);
        gbc.writeMem(0x32b, { 0x33, 0x32 });
        gbc.writeMem(0x907a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x32d);
        EXPECT(gbc.pc(), 0x3233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x907a), 0xc0);
        // C0 01AB
        gbc.setState(0x8f88, 0xb86d, 0x4340, 0xff74, 0xc2e6, 0xedd8, 0x0, 0x1);
        gbc.writeMem(0x8f88, { 0xc0 });
        gbc.writeMem(0xb86d, { 0x28, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb86f);
        EXPECT(gbc.pc(), 0x1528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f88), 0xc0);
        EXPECT(gbc.readMem(0xb86d), 0x28);
        EXPECT(gbc.readMem(0xb86e), 0x15);
        // C0 01AC
        gbc.setState(0x2b96, 0x83f8, 0xa0e0, 0xf17a, 0xcee1, 0x2334, 0x0, 0x1);
        gbc.writeMem(0x2b96, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x83f8);
        EXPECT(gbc.pc(), 0x2b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 01AF
        gbc.setState(0x53e4, 0x72f8, 0x7430, 0x132d, 0x3589, 0xa9e3, 0x0, 0x1);
        gbc.writeMem(0x53e4, { 0xc0 });
        gbc.writeMem(0x72f8, { 0xd0, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x72fa);
        EXPECT(gbc.pc(), 0xefd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 01B0
        gbc.setState(0xdf62, 0xc5bf, 0x9d60, 0xf9d5, 0x2da, 0xd81e, 0x0, 0x0);
        gbc.writeMem(0xc5bf, { 0xfe, 0x4b });
        gbc.writeMem(0xdf62, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc5c1);
        EXPECT(gbc.pc(), 0x4bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5bf), 0xfe);
        EXPECT(gbc.readMem(0xc5c0), 0x4b);
        EXPECT(gbc.readMem(0xdf62), 0xc0);
        // C0 01B1
        gbc.setState(0xa64c, 0x1393, 0x4d80, 0x853e, 0xee31, 0x1e04, 0x1, 0x1);
        gbc.writeMem(0xa64c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1393);
        EXPECT(gbc.pc(), 0xa64d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64c), 0xc0);
        // C0 01B2
        gbc.setState(0x6aed, 0x3d2a, 0x5b00, 0xfa8e, 0xf319, 0xdb07, 0x1, 0x0);
        gbc.writeMem(0x3d2a, { 0xf2, 0xc });
        gbc.writeMem(0x6aed, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3d2c);
        EXPECT(gbc.pc(), 0xcf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 01B3
        gbc.setState(0xb4ff, 0x8368, 0x6870, 0xfa5f, 0x9ab0, 0x61eb, 0x0, 0x0);
        gbc.writeMem(0x8368, { 0x61, 0xad });
        gbc.writeMem(0xb4ff, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x836a);
        EXPECT(gbc.pc(), 0xad61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8368), 0x61);
        EXPECT(gbc.readMem(0x8369), 0xad);
        EXPECT(gbc.readMem(0xb4ff), 0xc0);
        // C0 01B4
        gbc.setState(0x46fe, 0x1e8f, 0x8fd0, 0x1327, 0x7917, 0x6a4d, 0x1, 0x1);
        gbc.writeMem(0x46fe, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1e8f);
        EXPECT(gbc.pc(), 0x46ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 01B5
        gbc.setState(0x8179, 0xca37, 0xaa50, 0x4d4f, 0x54f7, 0x7e94, 0x1, 0x0);
        gbc.writeMem(0x8179, { 0xc0 });
        gbc.writeMem(0xca37, { 0x67, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xca39);
        EXPECT(gbc.pc(), 0xce67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8179), 0xc0);
        EXPECT(gbc.readMem(0xca37), 0x67);
        EXPECT(gbc.readMem(0xca38), 0xce);
        // C0 01B6
        gbc.setState(0xdb77, 0xf6c8, 0x1a20, 0x1fb7, 0x96a6, 0x71d6, 0x0, 0x1);
        gbc.writeMem(0xdb77, { 0xc0 });
        gbc.writeMem(0xf6c8, { 0x3d, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf6ca);
        EXPECT(gbc.pc(), 0x6c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb77), 0xc0);
        EXPECT(gbc.readMem(0xf6c8), 0x3d);
        EXPECT(gbc.readMem(0xf6c9), 0x6c);
        // C0 01B7
        gbc.setState(0x779e, 0x6dfe, 0xfc00, 0xec83, 0xc11, 0xd681, 0x0, 0x1);
        gbc.writeMem(0x6dfe, { 0xe4, 0x45 });
        gbc.writeMem(0x779e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6e00);
        EXPECT(gbc.pc(), 0x45e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 01B8
        gbc.setState(0x2274, 0xd4cc, 0x4350, 0x4fb1, 0xc2e, 0x217a, 0x0, 0x0);
        gbc.writeMem(0x2274, { 0xc0 });
        gbc.writeMem(0xd4cc, { 0x8f, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd4ce);
        EXPECT(gbc.pc(), 0x268f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4cc), 0x8f);
        EXPECT(gbc.readMem(0xd4cd), 0x26);
        // C0 01B9
        gbc.setState(0x803c, 0xaf97, 0x27e0, 0x6f64, 0x4642, 0x2d08, 0x0, 0x0);
        gbc.writeMem(0x803c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xaf97);
        EXPECT(gbc.pc(), 0x803d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x803c), 0xc0);
        // C0 01BA
        gbc.setState(0x6ee8, 0x11c3, 0xe5c0, 0x8d61, 0xc862, 0xbab5, 0x0, 0x1);
        gbc.writeMem(0x6ee8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x11c3);
        EXPECT(gbc.pc(), 0x6ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 01BB
        gbc.setState(0x1c41, 0x88e4, 0x9060, 0xf126, 0xd179, 0xe934, 0x0, 0x1);
        gbc.writeMem(0x1c41, { 0xc0 });
        gbc.writeMem(0x88e4, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x88e6);
        EXPECT(gbc.pc(), 0xa50e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e4), 0xe);
        EXPECT(gbc.readMem(0x88e5), 0xa5);
        // C0 01BC
        gbc.setState(0x8c74, 0xfe2, 0x6bb0, 0x8ce7, 0xee14, 0x7df9, 0x1, 0x1);
        gbc.writeMem(0x8c74, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfe2);
        EXPECT(gbc.pc(), 0x8c75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c74), 0xc0);
        // C0 01BD
        gbc.setState(0x36ff, 0x36f5, 0x6ae0, 0x22c9, 0xb856, 0xc096, 0x0, 0x0);
        gbc.writeMem(0x36ff, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x36f5);
        EXPECT(gbc.pc(), 0x3700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 01BE
        gbc.setState(0x6085, 0xee07, 0x8820, 0xcf96, 0x6706, 0x14b4, 0x0, 0x0);
        gbc.writeMem(0x6085, { 0xc0 });
        gbc.writeMem(0xee07, { 0xd1, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xee09);
        EXPECT(gbc.pc(), 0x93d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee07), 0xd1);
        EXPECT(gbc.readMem(0xee08), 0x93);
        // C0 01BF
        gbc.setState(0x3fe, 0xa7, 0x8db0, 0xa22, 0x6440, 0x8325, 0x1, 0x0);
        gbc.writeMem(0x3fe, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa7);
        EXPECT(gbc.pc(), 0x3ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 01C0
        gbc.setState(0x30c8, 0x9ed, 0xeab0, 0x51ce, 0x48d6, 0x3ebb, 0x1, 0x1);
        gbc.writeMem(0x30c8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9ed);
        EXPECT(gbc.pc(), 0x30c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 01C1
        gbc.setState(0xc186, 0x59d8, 0xaf0, 0xa041, 0x596c, 0x50d0, 0x0, 0x0);
        gbc.writeMem(0xc186, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x59d8);
        EXPECT(gbc.pc(), 0xc187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc186), 0xc0);
        // C0 01C2
        gbc.setState(0xb25c, 0x1555, 0x9640, 0x212e, 0x4979, 0xb275, 0x0, 0x1);
        gbc.writeMem(0x1555, { 0xf0, 0xdb });
        gbc.writeMem(0xb25c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1557);
        EXPECT(gbc.pc(), 0xdbf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25c), 0xc0);
        // C0 01C3
        gbc.setState(0x38b, 0x9218, 0xf610, 0x21ae, 0x2c98, 0xeee6, 0x0, 0x0);
        gbc.writeMem(0x38b, { 0xc0 });
        gbc.writeMem(0x9218, { 0xad, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x921a);
        EXPECT(gbc.pc(), 0xf9ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9218), 0xad);
        EXPECT(gbc.readMem(0x9219), 0xf9);
        // C0 01C4
        gbc.setState(0x11bd, 0xdd49, 0xfc10, 0x7c27, 0x8168, 0xf254, 0x0, 0x1);
        gbc.writeMem(0x11bd, { 0xc0 });
        gbc.writeMem(0xdd49, { 0x98, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xdd4b);
        EXPECT(gbc.pc(), 0x6698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd49), 0x98);
        EXPECT(gbc.readMem(0xdd4a), 0x66);
        // C0 01C5
        gbc.setState(0x1b8, 0xaf48, 0x6c0, 0xb1dd, 0xc95f, 0xbcca, 0x0, 0x0);
        gbc.writeMem(0x1b8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xaf48);
        EXPECT(gbc.pc(), 0x1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 01C6
        gbc.setState(0x1b7e, 0x7edb, 0xaca0, 0x42b5, 0x630a, 0x600d, 0x0, 0x1);
        gbc.writeMem(0x1b7e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7edb);
        EXPECT(gbc.pc(), 0x1b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 01C7
        gbc.setState(0x145d, 0xbe08, 0xaec0, 0xfd57, 0x729d, 0xa686, 0x0, 0x1);
        gbc.writeMem(0x145d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbe08);
        EXPECT(gbc.pc(), 0x145e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 01C8
        gbc.setState(0xd993, 0x823f, 0x9e0, 0xb856, 0x78c9, 0xdd0, 0x1, 0x0);
        gbc.writeMem(0xd993, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x823f);
        EXPECT(gbc.pc(), 0xd994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd993), 0xc0);
        // C0 01C9
        gbc.setState(0x66ef, 0xd255, 0x24b0, 0x8d, 0x2856, 0x6e13, 0x0, 0x1);
        gbc.writeMem(0x66ef, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd255);
        EXPECT(gbc.pc(), 0x66f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 01CA
        gbc.setState(0x12af, 0x7ec3, 0xac10, 0x7402, 0xd2fc, 0xfa91, 0x0, 0x0);
        gbc.writeMem(0x12af, { 0xc0 });
        gbc.writeMem(0x7ec3, { 0x13, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7ec5);
        EXPECT(gbc.pc(), 0xb913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 01CB
        gbc.setState(0x7e5f, 0x3a7f, 0x4b90, 0x17fc, 0xfdb6, 0xa485, 0x1, 0x0);
        gbc.writeMem(0x7e5f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3a7f);
        EXPECT(gbc.pc(), 0x7e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 01CC
        gbc.setState(0x2c64, 0x30ea, 0x980, 0x554a, 0x4d1d, 0xc47b, 0x1, 0x1);
        gbc.writeMem(0x2c64, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x30ea);
        EXPECT(gbc.pc(), 0x2c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 01CD
        gbc.setState(0x2d6c, 0xbeff, 0xd2b0, 0xd2b3, 0xeb40, 0xf317, 0x0, 0x1);
        gbc.writeMem(0x2d6c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbeff);
        EXPECT(gbc.pc(), 0x2d6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 01CE
        gbc.setState(0x586a, 0x1784, 0x9260, 0x5630, 0x802f, 0x5756, 0x0, 0x0);
        gbc.writeMem(0x1784, { 0x7d, 0x12 });
        gbc.writeMem(0x586a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1786);
        EXPECT(gbc.pc(), 0x127d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 01CF
        gbc.setState(0x37ac, 0x2ebf, 0x6ae0, 0xbeb6, 0x1771, 0x76e0, 0x0, 0x0);
        gbc.writeMem(0x37ac, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2ebf);
        EXPECT(gbc.pc(), 0x37ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 01D0
        gbc.setState(0xeab5, 0x18c1, 0xd130, 0x9e40, 0xe79d, 0x21a2, 0x1, 0x0);
        gbc.writeMem(0x18c1, { 0x1e, 0x86 });
        gbc.writeMem(0xeab5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x18c3);
        EXPECT(gbc.pc(), 0x861e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab5), 0xc0);
        // C0 01D1
        gbc.setState(0x3b1a, 0xeb34, 0x18e0, 0x621d, 0x7b83, 0xf16e, 0x1, 0x1);
        gbc.writeMem(0x3b1a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xeb34);
        EXPECT(gbc.pc(), 0x3b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 01D2
        gbc.setState(0xece6, 0xc103, 0x24a0, 0xc77e, 0xd296, 0x4f2, 0x0, 0x1);
        gbc.writeMem(0xece6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc103);
        EXPECT(gbc.pc(), 0xece7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece6), 0xc0);
        // C0 01D3
        gbc.setState(0x1945, 0x74a6, 0x2df0, 0x9de4, 0x7757, 0xce2b, 0x0, 0x1);
        gbc.writeMem(0x1945, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x74a6);
        EXPECT(gbc.pc(), 0x1946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 01D4
        gbc.setState(0x7dc2, 0xf3a8, 0x5780, 0x958a, 0xfcae, 0x6289, 0x0, 0x0);
        gbc.writeMem(0x7dc2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf3a8);
        EXPECT(gbc.pc(), 0x7dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 01D5
        gbc.setState(0x1576, 0x2ae8, 0xc0, 0x8cef, 0x248b, 0x1e1d, 0x1, 0x1);
        gbc.writeMem(0x1576, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2ae8);
        EXPECT(gbc.pc(), 0x1577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 01D6
        gbc.setState(0x31c4, 0x901e, 0x2d00, 0xcda6, 0xa948, 0xe30e, 0x1, 0x1);
        gbc.writeMem(0x31c4, { 0xc0 });
        gbc.writeMem(0x901e, { 0x14, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9020);
        EXPECT(gbc.pc(), 0xf914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901e), 0x14);
        EXPECT(gbc.readMem(0x901f), 0xf9);
        // C0 01D7
        gbc.setState(0x6eeb, 0xaed5, 0xcd30, 0x3956, 0xacad, 0x97c6, 0x1, 0x1);
        gbc.writeMem(0x6eeb, { 0xc0 });
        gbc.writeMem(0xaed5, { 0x35, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xaed7);
        EXPECT(gbc.pc(), 0x8e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed5), 0x35);
        EXPECT(gbc.readMem(0xaed6), 0x8e);
        // C0 01D8
        gbc.setState(0xbc27, 0xba5c, 0x5720, 0xfc41, 0x42e7, 0x6cb4, 0x1, 0x1);
        gbc.writeMem(0xba5c, { 0x1a, 0xe5 });
        gbc.writeMem(0xbc27, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xba5e);
        EXPECT(gbc.pc(), 0xe51a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba5c), 0x1a);
        EXPECT(gbc.readMem(0xba5d), 0xe5);
        EXPECT(gbc.readMem(0xbc27), 0xc0);
        // C0 01D9
        gbc.setState(0x31bc, 0xad27, 0xe960, 0x979e, 0x83ef, 0x78d, 0x0, 0x0);
        gbc.writeMem(0x31bc, { 0xc0 });
        gbc.writeMem(0xad27, { 0x56, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xad29);
        EXPECT(gbc.pc(), 0xaf56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad27), 0x56);
        EXPECT(gbc.readMem(0xad28), 0xaf);
        // C0 01DA
        gbc.setState(0x9cc, 0xebcb, 0xdaa0, 0xcdb, 0x9bcf, 0x49f4, 0x0, 0x1);
        gbc.writeMem(0x9cc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xebcb);
        EXPECT(gbc.pc(), 0x9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 01DB
        gbc.setState(0xebc9, 0x68a6, 0xc4d0, 0x7f0e, 0xf04e, 0xeb85, 0x0, 0x0);
        gbc.writeMem(0xebc9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x68a6);
        EXPECT(gbc.pc(), 0xebca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc9), 0xc0);
        // C0 01DC
        gbc.setState(0x8442, 0x7693, 0x62b0, 0x9048, 0xc54b, 0x2289, 0x0, 0x1);
        gbc.writeMem(0x8442, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7693);
        EXPECT(gbc.pc(), 0x8443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8442), 0xc0);
        // C0 01DD
        gbc.setState(0xa951, 0xdfe4, 0x8e50, 0x92cb, 0x3f03, 0x94a7, 0x1, 0x1);
        gbc.writeMem(0xa951, { 0xc0 });
        gbc.writeMem(0xdfe4, { 0x91, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdfe6);
        EXPECT(gbc.pc(), 0xbf91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa951), 0xc0);
        EXPECT(gbc.readMem(0xdfe4), 0x91);
        EXPECT(gbc.readMem(0xdfe5), 0xbf);
        // C0 01DE
        gbc.setState(0x9702, 0xf8d6, 0x3340, 0xc0d0, 0xf543, 0x49e3, 0x0, 0x0);
        gbc.writeMem(0x9702, { 0xc0 });
        gbc.writeMem(0xf8d6, { 0x17, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf8d8);
        EXPECT(gbc.pc(), 0x5717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9702), 0xc0);
        EXPECT(gbc.readMem(0xf8d6), 0x17);
        EXPECT(gbc.readMem(0xf8d7), 0x57);
        // C0 01DF
        gbc.setState(0x534e, 0xee09, 0x9270, 0x477c, 0x1c5e, 0x1b59, 0x1, 0x1);
        gbc.writeMem(0x534e, { 0xc0 });
        gbc.writeMem(0xee09, { 0xe6, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xee0b);
        EXPECT(gbc.pc(), 0xd2e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee09), 0xe6);
        EXPECT(gbc.readMem(0xee0a), 0xd2);
        // C0 01E0
        gbc.setState(0x93ae, 0xbe0, 0x7210, 0x298b, 0xe8e1, 0xfe59, 0x1, 0x1);
        gbc.writeMem(0xbe0, { 0xd4, 0xeb });
        gbc.writeMem(0x93ae, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xbe2);
        EXPECT(gbc.pc(), 0xebd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ae), 0xc0);
        // C0 01E1
        gbc.setState(0xc9b8, 0x6068, 0x8b90, 0x7565, 0xe721, 0xd183, 0x1, 0x0);
        gbc.writeMem(0xc9b8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6068);
        EXPECT(gbc.pc(), 0xc9b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b8), 0xc0);
        // C0 01E2
        gbc.setState(0x38e1, 0x5c, 0x2710, 0x2169, 0x8eed, 0xea5, 0x1, 0x1);
        gbc.writeMem(0x5c, { 0xfa, 0x27 });
        gbc.writeMem(0x38e1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5e);
        EXPECT(gbc.pc(), 0x27fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 01E3
        gbc.setState(0x5752, 0x8083, 0x2a60, 0x9a07, 0x153, 0x4e1c, 0x1, 0x1);
        gbc.writeMem(0x5752, { 0xc0 });
        gbc.writeMem(0x8083, { 0xb5, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8085);
        EXPECT(gbc.pc(), 0xeb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8083), 0xb5);
        EXPECT(gbc.readMem(0x8084), 0xe);
        // C0 01E4
        gbc.setState(0x5104, 0x3733, 0x15c0, 0x28ad, 0xc0ea, 0xc787, 0x0, 0x0);
        gbc.writeMem(0x5104, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3733);
        EXPECT(gbc.pc(), 0x5105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 01E5
        gbc.setState(0x169a, 0x73ae, 0x8b10, 0x7bf4, 0x7fcf, 0x2341, 0x1, 0x0);
        gbc.writeMem(0x169a, { 0xc0 });
        gbc.writeMem(0x73ae, { 0x42, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x73b0);
        EXPECT(gbc.pc(), 0x1c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 01E6
        gbc.setState(0x7e90, 0xf444, 0x8460, 0xed04, 0xf75c, 0x5503, 0x0, 0x0);
        gbc.writeMem(0x7e90, { 0xc0 });
        gbc.writeMem(0xf444, { 0x7c, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf446);
        EXPECT(gbc.pc(), 0x167c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf444), 0x7c);
        EXPECT(gbc.readMem(0xf445), 0x16);
        // C0 01E8
        gbc.setState(0xd42d, 0xdc07, 0x6f70, 0x17dd, 0x44b9, 0xea94, 0x0, 0x1);
        gbc.writeMem(0xd42d, { 0xc0 });
        gbc.writeMem(0xdc07, { 0x8f, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdc09);
        EXPECT(gbc.pc(), 0x168f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd42d), 0xc0);
        EXPECT(gbc.readMem(0xdc07), 0x8f);
        EXPECT(gbc.readMem(0xdc08), 0x16);
        // C0 01E9
        gbc.setState(0x6343, 0xeda7, 0xeb60, 0xf574, 0xc370, 0x492b, 0x0, 0x0);
        gbc.writeMem(0x6343, { 0xc0 });
        gbc.writeMem(0xeda7, { 0x13, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xeda9);
        EXPECT(gbc.pc(), 0x6d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda7), 0x13);
        EXPECT(gbc.readMem(0xeda8), 0x6d);
        // C0 01EA
        gbc.setState(0xeead, 0x5d97, 0xe400, 0xc21c, 0xf954, 0xe53e, 0x1, 0x0);
        gbc.writeMem(0x5d97, { 0x2a, 0xd7 });
        gbc.writeMem(0xeead, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5d99);
        EXPECT(gbc.pc(), 0xd72a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeead), 0xc0);
        // C0 01EB
        gbc.setState(0x9f7b, 0x532d, 0xdda0, 0x3b5a, 0x1d1b, 0x1048, 0x0, 0x1);
        gbc.writeMem(0x9f7b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x532d);
        EXPECT(gbc.pc(), 0x9f7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7b), 0xc0);
        // C0 01EC
        gbc.setState(0xa957, 0xb997, 0x8080, 0x65de, 0x40e8, 0x7d84, 0x0, 0x1);
        gbc.writeMem(0xa957, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb997);
        EXPECT(gbc.pc(), 0xa958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa957), 0xc0);
        // C0 01ED
        gbc.setState(0x74e6, 0x8b4f, 0x32c0, 0xe99, 0xb7f5, 0x18a0, 0x1, 0x0);
        gbc.writeMem(0x74e6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8b4f);
        EXPECT(gbc.pc(), 0x74e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 01EE
        gbc.setState(0x5937, 0x1057, 0xeb20, 0x7b8, 0xf9a8, 0xdc1b, 0x0, 0x1);
        gbc.writeMem(0x1057, { 0xee, 0xf4 });
        gbc.writeMem(0x5937, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1059);
        EXPECT(gbc.pc(), 0xf4ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 01EF
        gbc.setState(0x3a67, 0x2f2, 0xb5d0, 0xa4c3, 0x3a5, 0x1c85, 0x1, 0x1);
        gbc.writeMem(0x3a67, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2f2);
        EXPECT(gbc.pc(), 0x3a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 01F0
        gbc.setState(0xf6c, 0xd310, 0x1400, 0x16aa, 0x95ac, 0x8af, 0x0, 0x1);
        gbc.writeMem(0xf6c, { 0xc0 });
        gbc.writeMem(0xd310, { 0xd6, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd312);
        EXPECT(gbc.pc(), 0xdbd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd310), 0xd6);
        EXPECT(gbc.readMem(0xd311), 0xdb);
        // C0 01F2
        gbc.setState(0x98a7, 0xa66e, 0xaf0, 0x992d, 0xa6da, 0x7c54, 0x1, 0x0);
        gbc.writeMem(0x98a7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa66e);
        EXPECT(gbc.pc(), 0x98a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98a7), 0xc0);
        // C0 01F3
        gbc.setState(0x94ff, 0xc536, 0xe050, 0xebc8, 0xbea1, 0x7e95, 0x1, 0x0);
        gbc.writeMem(0x94ff, { 0xc0 });
        gbc.writeMem(0xc536, { 0x89, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc538);
        EXPECT(gbc.pc(), 0xe789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ff), 0xc0);
        EXPECT(gbc.readMem(0xc536), 0x89);
        EXPECT(gbc.readMem(0xc537), 0xe7);
        // C0 01F4
        gbc.setState(0x389b, 0x57d4, 0xa9f0, 0x4971, 0x5e18, 0x5ac5, 0x1, 0x0);
        gbc.writeMem(0x389b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x57d4);
        EXPECT(gbc.pc(), 0x389c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 01F5
        gbc.setState(0xabab, 0x268b, 0x9f70, 0xc76f, 0x99c1, 0x6d64, 0x0, 0x1);
        gbc.writeMem(0x268b, { 0x1c, 0xe9 });
        gbc.writeMem(0xabab, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x268d);
        EXPECT(gbc.pc(), 0xe91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabab), 0xc0);
        // C0 01F6
        gbc.setState(0x9836, 0xfa4f, 0xa320, 0xbe74, 0xe479, 0xe96, 0x1, 0x1);
        gbc.writeMem(0x9836, { 0xc0 });
        gbc.writeMem(0xfa4f, { 0x3, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfa51);
        EXPECT(gbc.pc(), 0xca03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9836), 0xc0);
        EXPECT(gbc.readMem(0xfa4f), 0x3);
        EXPECT(gbc.readMem(0xfa50), 0xca);
        // C0 01F7
        gbc.setState(0xda89, 0x93ff, 0x600, 0x3c1d, 0xa2d6, 0xef47, 0x0, 0x1);
        gbc.writeMem(0x93ff, { 0xaf, 0xe6 });
        gbc.writeMem(0xda89, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9401);
        EXPECT(gbc.pc(), 0xe6af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ff), 0xaf);
        EXPECT(gbc.readMem(0x9400), 0xe6);
        EXPECT(gbc.readMem(0xda89), 0xc0);
        // C0 01F8
        gbc.setState(0x1649, 0xdfb7, 0xf390, 0x491a, 0x9911, 0xcfb9, 0x1, 0x1);
        gbc.writeMem(0x1649, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdfb7);
        EXPECT(gbc.pc(), 0x164a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 01F9
        gbc.setState(0x90e5, 0x9be1, 0x2da0, 0x9c7b, 0x1352, 0xecb7, 0x1, 0x1);
        gbc.writeMem(0x90e5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9be1);
        EXPECT(gbc.pc(), 0x90e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e5), 0xc0);
        // C0 01FB
        gbc.setState(0xd4b8, 0x1b02, 0x7270, 0x9d2, 0x3cc0, 0x7034, 0x1, 0x0);
        gbc.writeMem(0x1b02, { 0x18, 0xfb });
        gbc.writeMem(0xd4b8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1b04);
        EXPECT(gbc.pc(), 0xfb18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4b8), 0xc0);
        // C0 01FC
        gbc.setState(0xbd8d, 0x7d47, 0x57f0, 0xf26d, 0xc253, 0xbccd, 0x1, 0x1);
        gbc.writeMem(0xbd8d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7d47);
        EXPECT(gbc.pc(), 0xbd8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd8d), 0xc0);
        // C0 01FD
        gbc.setState(0xc27b, 0x6944, 0xbcb0, 0xce3e, 0x9c6, 0x55a9, 0x1, 0x1);
        gbc.writeMem(0xc27b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6944);
        EXPECT(gbc.pc(), 0xc27c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc27b), 0xc0);
        // C0 01FE
        gbc.setState(0x941f, 0x3855, 0xa400, 0x6672, 0x40dd, 0xd22f, 0x1, 0x0);
        gbc.writeMem(0x3855, { 0x50, 0x22 });
        gbc.writeMem(0x941f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3857);
        EXPECT(gbc.pc(), 0x2250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x941f), 0xc0);
        // C0 01FF
        gbc.setState(0x5e2a, 0xde92, 0xa4b0, 0xcbef, 0x5e3c, 0xebb7, 0x1, 0x0);
        gbc.writeMem(0x5e2a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xde92);
        EXPECT(gbc.pc(), 0x5e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0200
        gbc.setState(0x56d3, 0x56a7, 0x5700, 0x1761, 0xafee, 0xb0bc, 0x0, 0x1);
        gbc.writeMem(0x56a7, { 0xd8, 0xf5 });
        gbc.writeMem(0x56d3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x56a9);
        EXPECT(gbc.pc(), 0xf5d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0201
        gbc.setState(0xec96, 0xe2c3, 0x41f0, 0x2e79, 0x1c26, 0xffa7, 0x0, 0x1);
        gbc.writeMem(0xec96, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe2c3);
        EXPECT(gbc.pc(), 0xec97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec96), 0xc0);
        // C0 0202
        gbc.setState(0xc774, 0x6604, 0xd7e0, 0xce62, 0x3f73, 0x351f, 0x0, 0x0);
        gbc.writeMem(0xc774, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6604);
        EXPECT(gbc.pc(), 0xc775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc774), 0xc0);
        // C0 0203
        gbc.setState(0x28e, 0xd9ec, 0xd9c0, 0xc2e2, 0xc7e9, 0x1f61, 0x0, 0x0);
        gbc.writeMem(0x28e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd9ec);
        EXPECT(gbc.pc(), 0x28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0205
        gbc.setState(0x852f, 0x3652, 0x8280, 0xf3c5, 0xe5bf, 0xe698, 0x1, 0x1);
        gbc.writeMem(0x852f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3652);
        EXPECT(gbc.pc(), 0x8530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x852f), 0xc0);
        // C0 0207
        gbc.setState(0xb6fd, 0x3719, 0x95b0, 0xd3c9, 0xcf6b, 0xd839, 0x1, 0x1);
        gbc.writeMem(0xb6fd, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3719);
        EXPECT(gbc.pc(), 0xb6fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6fd), 0xc0);
        // C0 0208
        gbc.setState(0xdbd9, 0x35c3, 0xa440, 0xa2c5, 0x849d, 0xe545, 0x1, 0x0);
        gbc.writeMem(0x35c3, { 0x57, 0x7b });
        gbc.writeMem(0xdbd9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x35c5);
        EXPECT(gbc.pc(), 0x7b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd9), 0xc0);
        // C0 0209
        gbc.setState(0xc0f3, 0x3488, 0xb1e0, 0xa776, 0x2955, 0x78d6, 0x0, 0x1);
        gbc.writeMem(0xc0f3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3488);
        EXPECT(gbc.pc(), 0xc0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f3), 0xc0);
        // C0 020A
        gbc.setState(0x933b, 0xcc09, 0x4870, 0xb210, 0xfeb6, 0x7422, 0x1, 0x1);
        gbc.writeMem(0x933b, { 0xc0 });
        gbc.writeMem(0xcc09, { 0x1, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcc0b);
        EXPECT(gbc.pc(), 0x1001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x933b), 0xc0);
        EXPECT(gbc.readMem(0xcc09), 0x1);
        EXPECT(gbc.readMem(0xcc0a), 0x10);
        // C0 020C
        gbc.setState(0x90b2, 0xb92c, 0x5680, 0xe143, 0x257f, 0x4e33, 0x0, 0x1);
        gbc.writeMem(0x90b2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb92c);
        EXPECT(gbc.pc(), 0x90b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b2), 0xc0);
        // C0 020D
        gbc.setState(0x20b1, 0xa2ea, 0x7260, 0x5683, 0x31ab, 0x794d, 0x0, 0x0);
        gbc.writeMem(0x20b1, { 0xc0 });
        gbc.writeMem(0xa2ea, { 0x37, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa2ec);
        EXPECT(gbc.pc(), 0x8837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ea), 0x37);
        EXPECT(gbc.readMem(0xa2eb), 0x88);
        // C0 020E
        gbc.setState(0x1260, 0xf7c9, 0x7580, 0x5063, 0x18f, 0xf203, 0x1, 0x0);
        gbc.writeMem(0x1260, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf7c9);
        EXPECT(gbc.pc(), 0x1261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 020F
        gbc.setState(0x4c16, 0x6722, 0xcaa0, 0xc9c6, 0x334c, 0x7264, 0x1, 0x0);
        gbc.writeMem(0x4c16, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6722);
        EXPECT(gbc.pc(), 0x4c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0210
        gbc.setState(0xa527, 0xad1a, 0xee20, 0x462b, 0x843a, 0xf4, 0x1, 0x0);
        gbc.writeMem(0xa527, { 0xc0 });
        gbc.writeMem(0xad1a, { 0x1a, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xad1c);
        EXPECT(gbc.pc(), 0xf01a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa527), 0xc0);
        EXPECT(gbc.readMem(0xad1a), 0x1a);
        EXPECT(gbc.readMem(0xad1b), 0xf0);
        // C0 0211
        gbc.setState(0xc92e, 0x3db, 0xe90, 0x3d95, 0xf736, 0xd487, 0x0, 0x0);
        gbc.writeMem(0xc92e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3db);
        EXPECT(gbc.pc(), 0xc92f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92e), 0xc0);
        // C0 0212
        gbc.setState(0x9990, 0x6299, 0xe5d0, 0x2a61, 0xd066, 0x74bc, 0x1, 0x0);
        gbc.writeMem(0x9990, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6299);
        EXPECT(gbc.pc(), 0x9991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9990), 0xc0);
        // C0 0214
        gbc.setState(0x2bfd, 0xda53, 0x5300, 0xe1c1, 0x8131, 0xfada, 0x0, 0x1);
        gbc.writeMem(0x2bfd, { 0xc0 });
        gbc.writeMem(0xda53, { 0xe, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xda55);
        EXPECT(gbc.pc(), 0xec0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda53), 0xe);
        EXPECT(gbc.readMem(0xda54), 0xec);
        // C0 0215
        gbc.setState(0x79cf, 0xdfbe, 0xc450, 0x34c6, 0x5b1d, 0x3ff8, 0x0, 0x0);
        gbc.writeMem(0x79cf, { 0xc0 });
        gbc.writeMem(0xdfbe, { 0xbc, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdfc0);
        EXPECT(gbc.pc(), 0xd7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfbe), 0xbc);
        EXPECT(gbc.readMem(0xdfbf), 0xd7);
        // C0 0216
        gbc.setState(0x7bc7, 0xc462, 0xffe0, 0xad33, 0x80d9, 0xf5ef, 0x1, 0x0);
        gbc.writeMem(0x7bc7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc462);
        EXPECT(gbc.pc(), 0x7bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0217
        gbc.setState(0x72ff, 0xb403, 0xb1f0, 0xad90, 0xac04, 0x315f, 0x1, 0x0);
        gbc.writeMem(0x72ff, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb403);
        EXPECT(gbc.pc(), 0x7300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0218
        gbc.setState(0x915a, 0xe141, 0xd440, 0x9bc, 0xabbe, 0x9436, 0x0, 0x1);
        gbc.writeMem(0x915a, { 0xc0 });
        gbc.writeMem(0xe141, { 0xa3, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe143);
        EXPECT(gbc.pc(), 0x62a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915a), 0xc0);
        EXPECT(gbc.readMem(0xe141), 0xa3);
        EXPECT(gbc.readMem(0xe142), 0x62);
        // C0 0219
        gbc.setState(0x54f7, 0x8c7, 0xbfa0, 0x16a8, 0x916e, 0x2b18, 0x0, 0x0);
        gbc.writeMem(0x54f7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8c7);
        EXPECT(gbc.pc(), 0x54f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 021A
        gbc.setState(0xfac, 0xbce3, 0x2940, 0x565, 0xe22e, 0xf65d, 0x0, 0x1);
        gbc.writeMem(0xfac, { 0xc0 });
        gbc.writeMem(0xbce3, { 0x18, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbce5);
        EXPECT(gbc.pc(), 0xb418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce3), 0x18);
        EXPECT(gbc.readMem(0xbce4), 0xb4);
        // C0 021B
        gbc.setState(0xe63d, 0x9139, 0x4620, 0x3e58, 0xa4b1, 0x9814, 0x1, 0x0);
        gbc.writeMem(0x9139, { 0x21, 0xf1 });
        gbc.writeMem(0xe63d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x913b);
        EXPECT(gbc.pc(), 0xf121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9139), 0x21);
        EXPECT(gbc.readMem(0x913a), 0xf1);
        EXPECT(gbc.readMem(0xe63d), 0xc0);
        // C0 021C
        gbc.setState(0x8d8b, 0x6be0, 0x4720, 0x40cf, 0x7fd1, 0x718, 0x1, 0x1);
        gbc.writeMem(0x6be0, { 0xe, 0x83 });
        gbc.writeMem(0x8d8b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6be2);
        EXPECT(gbc.pc(), 0x830e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8b), 0xc0);
        // C0 021D
        gbc.setState(0xefd6, 0x3d1e, 0x1710, 0x157b, 0x8c23, 0x8f92, 0x1, 0x0);
        gbc.writeMem(0x3d1e, { 0x22, 0xb4 });
        gbc.writeMem(0xefd6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3d20);
        EXPECT(gbc.pc(), 0xb422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd6), 0xc0);
        // C0 021E
        gbc.setState(0x7343, 0xbf32, 0xa870, 0x1b60, 0x2c1f, 0x6fb, 0x1, 0x1);
        gbc.writeMem(0x7343, { 0xc0 });
        gbc.writeMem(0xbf32, { 0x32, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbf34);
        EXPECT(gbc.pc(), 0x8c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf32), 0x32);
        EXPECT(gbc.readMem(0xbf33), 0x8c);
        // C0 021F
        gbc.setState(0x4073, 0x97aa, 0xbe90, 0xf84d, 0x3d94, 0x2596, 0x0, 0x0);
        gbc.writeMem(0x4073, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x97aa);
        EXPECT(gbc.pc(), 0x4074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0220
        gbc.setState(0x3bee, 0x6899, 0x5b40, 0xb721, 0xd1bf, 0x4b53, 0x1, 0x0);
        gbc.writeMem(0x3bee, { 0xc0 });
        gbc.writeMem(0x6899, { 0xc1, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x689b);
        EXPECT(gbc.pc(), 0xeec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0221
        gbc.setState(0x3e5b, 0x1a95, 0x4560, 0xec67, 0xc853, 0x6bcc, 0x0, 0x0);
        gbc.writeMem(0x1a95, { 0xb7, 0xe5 });
        gbc.writeMem(0x3e5b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1a97);
        EXPECT(gbc.pc(), 0xe5b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0222
        gbc.setState(0x1312, 0xef3c, 0xe360, 0xca8e, 0x16f4, 0xb1e0, 0x1, 0x0);
        gbc.writeMem(0x1312, { 0xc0 });
        gbc.writeMem(0xef3c, { 0xee, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xef3e);
        EXPECT(gbc.pc(), 0xa5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef3c), 0xee);
        EXPECT(gbc.readMem(0xef3d), 0xa5);
        // C0 0223
        gbc.setState(0xe9c5, 0x7d9c, 0xd500, 0xe7fc, 0xd64f, 0x9032, 0x0, 0x0);
        gbc.writeMem(0x7d9c, { 0x71, 0x24 });
        gbc.writeMem(0xe9c5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7d9e);
        EXPECT(gbc.pc(), 0x2471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c5), 0xc0);
        // C0 0224
        gbc.setState(0x6297, 0x74e0, 0x56a0, 0xf233, 0xc7d3, 0x99d0, 0x1, 0x1);
        gbc.writeMem(0x6297, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x74e0);
        EXPECT(gbc.pc(), 0x6298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0225
        gbc.setState(0x6d78, 0xa0ef, 0x4f90, 0x84f1, 0x5091, 0x4253, 0x0, 0x1);
        gbc.writeMem(0x6d78, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa0ef);
        EXPECT(gbc.pc(), 0x6d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0226
        gbc.setState(0xa1cd, 0xacf2, 0xe670, 0x85ca, 0x6d20, 0x613a, 0x1, 0x1);
        gbc.writeMem(0xa1cd, { 0xc0 });
        gbc.writeMem(0xacf2, { 0x30, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xacf4);
        EXPECT(gbc.pc(), 0x9f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1cd), 0xc0);
        EXPECT(gbc.readMem(0xacf2), 0x30);
        EXPECT(gbc.readMem(0xacf3), 0x9f);
        // C0 0227
        gbc.setState(0xe9ce, 0x10b6, 0xcf50, 0x9c53, 0x9279, 0x8f19, 0x1, 0x1);
        gbc.writeMem(0x10b6, { 0xa7, 0x36 });
        gbc.writeMem(0xe9ce, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x10b8);
        EXPECT(gbc.pc(), 0x36a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ce), 0xc0);
        // C0 0228
        gbc.setState(0x1d28, 0x1c27, 0xd650, 0xf481, 0x8ac5, 0x2ca0, 0x0, 0x0);
        gbc.writeMem(0x1c27, { 0x87, 0x79 });
        gbc.writeMem(0x1d28, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1c29);
        EXPECT(gbc.pc(), 0x7987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0229
        gbc.setState(0x22fc, 0x45ee, 0x5a80, 0x6cb, 0xf6f9, 0xd954, 0x1, 0x1);
        gbc.writeMem(0x22fc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x45ee);
        EXPECT(gbc.pc(), 0x22fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 022A
        gbc.setState(0x96d3, 0x8651, 0xe050, 0xf4ea, 0x3291, 0x8baa, 0x0, 0x0);
        gbc.writeMem(0x8651, { 0x55, 0x91 });
        gbc.writeMem(0x96d3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8653);
        EXPECT(gbc.pc(), 0x9155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8651), 0x55);
        EXPECT(gbc.readMem(0x8652), 0x91);
        EXPECT(gbc.readMem(0x96d3), 0xc0);
        // C0 022B
        gbc.setState(0xb8cc, 0x6409, 0xb2e0, 0x5a4a, 0xc, 0xbc6d, 0x0, 0x1);
        gbc.writeMem(0xb8cc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6409);
        EXPECT(gbc.pc(), 0xb8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8cc), 0xc0);
        // C0 022C
        gbc.setState(0x8d2a, 0xff88, 0x8340, 0x7cbc, 0x87ca, 0x46, 0x1, 0x0);
        gbc.writeMem(0x8d2a, { 0xc0 });
        gbc.writeMem(0xff88, { 0x49, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xff8a);
        EXPECT(gbc.pc(), 0xd49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d2a), 0xc0);
        EXPECT(gbc.readMem(0xff88), 0x49);
        EXPECT(gbc.readMem(0xff89), 0xd);
        // C0 022E
        gbc.setState(0x2330, 0xc7ea, 0x70, 0xb0ea, 0x80db, 0x7631, 0x0, 0x1);
        gbc.writeMem(0x2330, { 0xc0 });
        gbc.writeMem(0xc7ea, { 0x70, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc7ec);
        EXPECT(gbc.pc(), 0x3970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ea), 0x70);
        EXPECT(gbc.readMem(0xc7eb), 0x39);
        // C0 022F
        gbc.setState(0x6323, 0x7f3e, 0x2480, 0x9abf, 0xe784, 0xab7e, 0x1, 0x0);
        gbc.writeMem(0x6323, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7f3e);
        EXPECT(gbc.pc(), 0x6324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0230
        gbc.setState(0xd001, 0x1c60, 0x9060, 0xf9a0, 0xee72, 0x383e, 0x1, 0x0);
        gbc.writeMem(0x1c60, { 0x4b, 0xe });
        gbc.writeMem(0xd001, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1c62);
        EXPECT(gbc.pc(), 0xe4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd001), 0xc0);
        // C0 0231
        gbc.setState(0x4d77, 0x55db, 0x8140, 0x8201, 0xdf93, 0x9550, 0x1, 0x1);
        gbc.writeMem(0x4d77, { 0xc0 });
        gbc.writeMem(0x55db, { 0x2d, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x55dd);
        EXPECT(gbc.pc(), 0x9a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0232
        gbc.setState(0x298f, 0x5167, 0xe620, 0x9276, 0x8724, 0xed3e, 0x1, 0x0);
        gbc.writeMem(0x298f, { 0xc0 });
        gbc.writeMem(0x5167, { 0x52, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5169);
        EXPECT(gbc.pc(), 0xf852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0233
        gbc.setState(0x8c58, 0x4333, 0x4ad0, 0x9f7c, 0xa7f0, 0x64fe, 0x1, 0x1);
        gbc.writeMem(0x8c58, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4333);
        EXPECT(gbc.pc(), 0x8c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c58), 0xc0);
        // C0 0234
        gbc.setState(0xebed, 0xc0e, 0x31c0, 0x9860, 0x7b38, 0xa87e, 0x0, 0x0);
        gbc.writeMem(0xebed, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc0e);
        EXPECT(gbc.pc(), 0xebee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebed), 0xc0);
        // C0 0235
        gbc.setState(0x5336, 0x20d2, 0x3870, 0x1b05, 0xa7b7, 0x5718, 0x1, 0x1);
        gbc.writeMem(0x20d2, { 0x3e, 0x70 });
        gbc.writeMem(0x5336, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x20d4);
        EXPECT(gbc.pc(), 0x703e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0236
        gbc.setState(0x8775, 0xb59f, 0x6820, 0x7829, 0x2606, 0xe4e9, 0x0, 0x1);
        gbc.writeMem(0x8775, { 0xc0 });
        gbc.writeMem(0xb59f, { 0xe5, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb5a1);
        EXPECT(gbc.pc(), 0xe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8775), 0xc0);
        EXPECT(gbc.readMem(0xb59f), 0xe5);
        EXPECT(gbc.readMem(0xb5a0), 0x0);
        // C0 0237
        gbc.setState(0x7a52, 0xba6f, 0x9850, 0x2131, 0x8dda, 0x166, 0x1, 0x1);
        gbc.writeMem(0x7a52, { 0xc0 });
        gbc.writeMem(0xba6f, { 0x80, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xba71);
        EXPECT(gbc.pc(), 0xc480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6f), 0x80);
        EXPECT(gbc.readMem(0xba70), 0xc4);
        // C0 0238
        gbc.setState(0xb713, 0x5581, 0x1b00, 0x394a, 0x9287, 0x3d2c, 0x1, 0x0);
        gbc.writeMem(0x5581, { 0x17, 0x97 });
        gbc.writeMem(0xb713, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5583);
        EXPECT(gbc.pc(), 0x9717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb713), 0xc0);
        // C0 0239
        gbc.setState(0xca69, 0x564d, 0xcd70, 0xa98f, 0x2df3, 0x7ef2, 0x1, 0x1);
        gbc.writeMem(0x564d, { 0x9b, 0xb0 });
        gbc.writeMem(0xca69, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x564f);
        EXPECT(gbc.pc(), 0xb09b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca69), 0xc0);
        // C0 023A
        gbc.setState(0x1b67, 0x8d4b, 0xc410, 0x8ef6, 0xd7c4, 0x861f, 0x0, 0x0);
        gbc.writeMem(0x1b67, { 0xc0 });
        gbc.writeMem(0x8d4b, { 0xf8, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8d4d);
        EXPECT(gbc.pc(), 0x99f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d4b), 0xf8);
        EXPECT(gbc.readMem(0x8d4c), 0x99);
        // C0 023B
        gbc.setState(0x9a05, 0x4351, 0x6380, 0xecf1, 0x20de, 0x8199, 0x0, 0x1);
        gbc.writeMem(0x9a05, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4351);
        EXPECT(gbc.pc(), 0x9a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a05), 0xc0);
        // C0 023C
        gbc.setState(0xe604, 0x23f1, 0xe950, 0x129, 0xa217, 0xf00e, 0x1, 0x0);
        gbc.writeMem(0x23f1, { 0x32, 0x8 });
        gbc.writeMem(0xe604, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x23f3);
        EXPECT(gbc.pc(), 0x832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe604), 0xc0);
        // C0 023D
        gbc.setState(0x7df8, 0x5944, 0x7770, 0x31db, 0x9573, 0xe994, 0x1, 0x0);
        gbc.writeMem(0x5944, { 0x2d, 0xf6 });
        gbc.writeMem(0x7df8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5946);
        EXPECT(gbc.pc(), 0xf62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 023E
        gbc.setState(0x1e14, 0x6e6a, 0x9a10, 0x82cb, 0x989f, 0xc41b, 0x0, 0x1);
        gbc.writeMem(0x1e14, { 0xc0 });
        gbc.writeMem(0x6e6a, { 0xa8, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6e6c);
        EXPECT(gbc.pc(), 0x51a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 023F
        gbc.setState(0xd7e7, 0xb42f, 0xbc10, 0x2922, 0x70dd, 0x2fd, 0x0, 0x1);
        gbc.writeMem(0xb42f, { 0x91, 0x9 });
        gbc.writeMem(0xd7e7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb431);
        EXPECT(gbc.pc(), 0x991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42f), 0x91);
        EXPECT(gbc.readMem(0xb430), 0x9);
        EXPECT(gbc.readMem(0xd7e7), 0xc0);
        // C0 0240
        gbc.setState(0x9881, 0xa18c, 0x4b0, 0x6563, 0xcecd, 0xb894, 0x0, 0x1);
        gbc.writeMem(0x9881, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa18c);
        EXPECT(gbc.pc(), 0x9882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9881), 0xc0);
        // C0 0241
        gbc.setState(0x7ad4, 0xaf2c, 0x160, 0x836b, 0xd8cf, 0x2b45, 0x1, 0x1);
        gbc.writeMem(0x7ad4, { 0xc0 });
        gbc.writeMem(0xaf2c, { 0xa5, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xaf2e);
        EXPECT(gbc.pc(), 0x55a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf2c), 0xa5);
        EXPECT(gbc.readMem(0xaf2d), 0x55);
        // C0 0242
        gbc.setState(0x1304, 0x5e2c, 0x50b0, 0x3971, 0xfdd3, 0x81db, 0x0, 0x0);
        gbc.writeMem(0x1304, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5e2c);
        EXPECT(gbc.pc(), 0x1305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0243
        gbc.setState(0xc25b, 0x70cf, 0xdd90, 0xaac5, 0x51e3, 0xce6a, 0x1, 0x0);
        gbc.writeMem(0xc25b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x70cf);
        EXPECT(gbc.pc(), 0xc25c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc25b), 0xc0);
        // C0 0244
        gbc.setState(0x6eb3, 0x29bb, 0x72e0, 0xcb53, 0xd560, 0xb54a, 0x1, 0x0);
        gbc.writeMem(0x6eb3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x29bb);
        EXPECT(gbc.pc(), 0x6eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0245
        gbc.setState(0x749f, 0xaa67, 0xb200, 0x8b49, 0xe46f, 0x2214, 0x0, 0x0);
        gbc.writeMem(0x749f, { 0xc0 });
        gbc.writeMem(0xaa67, { 0xa8, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xaa69);
        EXPECT(gbc.pc(), 0x7fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa67), 0xa8);
        EXPECT(gbc.readMem(0xaa68), 0x7f);
        // C0 0246
        gbc.setState(0x5de8, 0xf6e0, 0xa960, 0x6e24, 0xeee4, 0x27b8, 0x0, 0x1);
        gbc.writeMem(0x5de8, { 0xc0 });
        gbc.writeMem(0xf6e0, { 0xe9, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf6e2);
        EXPECT(gbc.pc(), 0x58e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf6e0), 0xe9);
        EXPECT(gbc.readMem(0xf6e1), 0x58);
        // C0 0247
        gbc.setState(0x733e, 0x5da2, 0xcd70, 0x5718, 0x8b7d, 0x4af0, 0x0, 0x1);
        gbc.writeMem(0x5da2, { 0xb1, 0xee });
        gbc.writeMem(0x733e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5da4);
        EXPECT(gbc.pc(), 0xeeb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0248
        gbc.setState(0x1f77, 0xe1ef, 0x3e80, 0x197a, 0xbae1, 0x843f, 0x0, 0x1);
        gbc.writeMem(0x1f77, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe1ef);
        EXPECT(gbc.pc(), 0x1f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0249
        gbc.setState(0xa8f7, 0xc606, 0xaca0, 0x3002, 0x75bd, 0x35aa, 0x0, 0x1);
        gbc.writeMem(0xa8f7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc606);
        EXPECT(gbc.pc(), 0xa8f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f7), 0xc0);
        // C0 024A
        gbc.setState(0x91e4, 0x538d, 0xe300, 0x8fc0, 0xffed, 0x46d6, 0x1, 0x1);
        gbc.writeMem(0x538d, { 0x86, 0x1c });
        gbc.writeMem(0x91e4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x538f);
        EXPECT(gbc.pc(), 0x1c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e4), 0xc0);
        // C0 024B
        gbc.setState(0x3ee7, 0x96b0, 0x38d0, 0xc1e4, 0x7acf, 0x61a1, 0x0, 0x1);
        gbc.writeMem(0x3ee7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x96b0);
        EXPECT(gbc.pc(), 0x3ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 024C
        gbc.setState(0x3d11, 0x8aa4, 0x1d90, 0x807a, 0xfbe6, 0xa0d1, 0x0, 0x1);
        gbc.writeMem(0x3d11, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8aa4);
        EXPECT(gbc.pc(), 0x3d12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 024D
        gbc.setState(0x75ec, 0x13cd, 0xc5b0, 0x51f9, 0x1c2b, 0x2d96, 0x0, 0x0);
        gbc.writeMem(0x75ec, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x13cd);
        EXPECT(gbc.pc(), 0x75ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 024E
        gbc.setState(0x6ac9, 0xb78c, 0x5540, 0xfbb2, 0x127f, 0x8efe, 0x0, 0x0);
        gbc.writeMem(0x6ac9, { 0xc0 });
        gbc.writeMem(0xb78c, { 0x7c, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb78e);
        EXPECT(gbc.pc(), 0x967c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb78c), 0x7c);
        EXPECT(gbc.readMem(0xb78d), 0x96);
        // C0 024F
        gbc.setState(0x43bf, 0xcb0a, 0xd130, 0xac22, 0x343e, 0x1891, 0x1, 0x0);
        gbc.writeMem(0x43bf, { 0xc0 });
        gbc.writeMem(0xcb0a, { 0x5b, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcb0c);
        EXPECT(gbc.pc(), 0xa75b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb0a), 0x5b);
        EXPECT(gbc.readMem(0xcb0b), 0xa7);
        // C0 0250
        gbc.setState(0xb4b9, 0xac43, 0x5380, 0x34a3, 0x15df, 0x41b, 0x0, 0x1);
        gbc.writeMem(0xb4b9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xac43);
        EXPECT(gbc.pc(), 0xb4ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b9), 0xc0);
        // C0 0251
        gbc.setState(0x8b53, 0xc28, 0x9f30, 0xfc82, 0xb00f, 0xedaa, 0x0, 0x0);
        gbc.writeMem(0xc28, { 0x8b, 0xdb });
        gbc.writeMem(0x8b53, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc2a);
        EXPECT(gbc.pc(), 0xdb8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b53), 0xc0);
        // C0 0252
        gbc.setState(0xa22d, 0x1099, 0xf530, 0xbb28, 0xe16c, 0xda7f, 0x1, 0x1);
        gbc.writeMem(0x1099, { 0xf2, 0x36 });
        gbc.writeMem(0xa22d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x109b);
        EXPECT(gbc.pc(), 0x36f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa22d), 0xc0);
        // C0 0253
        gbc.setState(0x474c, 0x555e, 0x79b0, 0xe7a1, 0xe4a9, 0x5d9d, 0x1, 0x1);
        gbc.writeMem(0x474c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x555e);
        EXPECT(gbc.pc(), 0x474d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0254
        gbc.setState(0xa00b, 0x5a35, 0x1920, 0x89bb, 0x2e56, 0x2144, 0x1, 0x0);
        gbc.writeMem(0x5a35, { 0xc0, 0x7b });
        gbc.writeMem(0xa00b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5a37);
        EXPECT(gbc.pc(), 0x7bc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00b), 0xc0);
        // C0 0255
        gbc.setState(0x40c3, 0x95b8, 0x9410, 0xc9c, 0x56c9, 0xf933, 0x0, 0x0);
        gbc.writeMem(0x40c3, { 0xc0 });
        gbc.writeMem(0x95b8, { 0x4, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x95ba);
        EXPECT(gbc.pc(), 0x1404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b8), 0x4);
        EXPECT(gbc.readMem(0x95b9), 0x14);
        // C0 0256
        gbc.setState(0x410c, 0xb2fe, 0xde70, 0xcc1e, 0x751e, 0x46fd, 0x0, 0x1);
        gbc.writeMem(0x410c, { 0xc0 });
        gbc.writeMem(0xb2fe, { 0xab, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb300);
        EXPECT(gbc.pc(), 0xceab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2fe), 0xab);
        EXPECT(gbc.readMem(0xb2ff), 0xce);
        // C0 0257
        gbc.setState(0x65c5, 0x3f75, 0xb650, 0x5063, 0x9815, 0x5a67, 0x0, 0x1);
        gbc.writeMem(0x3f75, { 0xe, 0x7f });
        gbc.writeMem(0x65c5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3f77);
        EXPECT(gbc.pc(), 0x7f0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0258
        gbc.setState(0x6a9c, 0xe7f6, 0xe9e0, 0xf06e, 0x42bd, 0x2a8, 0x0, 0x1);
        gbc.writeMem(0x6a9c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe7f6);
        EXPECT(gbc.pc(), 0x6a9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0259
        gbc.setState(0x4cf4, 0x21a3, 0xfc80, 0x105b, 0xdf82, 0x27c1, 0x0, 0x1);
        gbc.writeMem(0x4cf4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x21a3);
        EXPECT(gbc.pc(), 0x4cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 025A
        gbc.setState(0x6e, 0x3cea, 0x1ef0, 0x7ae2, 0x5eac, 0x5edf, 0x1, 0x1);
        gbc.writeMem(0x6e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3cea);
        EXPECT(gbc.pc(), 0x6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 025B
        gbc.setState(0x3ce6, 0x2a52, 0x4f70, 0xf14, 0x5edc, 0xcb47, 0x1, 0x1);
        gbc.writeMem(0x2a52, { 0x46, 0x1c });
        gbc.writeMem(0x3ce6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2a54);
        EXPECT(gbc.pc(), 0x1c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 025C
        gbc.setState(0x52da, 0x91a2, 0xdf90, 0xd0f6, 0x3e51, 0x34a9, 0x0, 0x1);
        gbc.writeMem(0x52da, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x91a2);
        EXPECT(gbc.pc(), 0x52db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 025D
        gbc.setState(0x4ce4, 0xf79c, 0x2d10, 0xb43d, 0xb2, 0x6112, 0x1, 0x0);
        gbc.writeMem(0x4ce4, { 0xc0 });
        gbc.writeMem(0xf79c, { 0x89, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf79e);
        EXPECT(gbc.pc(), 0x8989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf79c), 0x89);
        EXPECT(gbc.readMem(0xf79d), 0x89);
        // C0 025E
        gbc.setState(0x198c, 0x2831, 0x29d0, 0x9cd1, 0x697f, 0xe1d0, 0x0, 0x1);
        gbc.writeMem(0x198c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2831);
        EXPECT(gbc.pc(), 0x198d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 025F
        gbc.setState(0x3e1f, 0x903b, 0xbc0, 0x6fe6, 0xc552, 0xff2e, 0x1, 0x0);
        gbc.writeMem(0x3e1f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x903b);
        EXPECT(gbc.pc(), 0x3e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0260
        gbc.setState(0x559f, 0x5e36, 0xb9a0, 0x620, 0x912f, 0x1258, 0x0, 0x0);
        gbc.writeMem(0x559f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5e36);
        EXPECT(gbc.pc(), 0x55a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0263
        gbc.setState(0x18cf, 0xea5, 0x6df0, 0x99a3, 0x9d65, 0xdd87, 0x0, 0x1);
        gbc.writeMem(0x18cf, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xea5);
        EXPECT(gbc.pc(), 0x18d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0264
        gbc.setState(0x989c, 0x47d2, 0xf90, 0x69db, 0x62f0, 0x2e58, 0x0, 0x1);
        gbc.writeMem(0x989c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x47d2);
        EXPECT(gbc.pc(), 0x989d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989c), 0xc0);
        // C0 0266
        gbc.setState(0x595, 0x654b, 0x86d0, 0x2db5, 0xf036, 0xca0e, 0x0, 0x0);
        gbc.writeMem(0x595, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x654b);
        EXPECT(gbc.pc(), 0x596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0267
        gbc.setState(0xbddf, 0xc773, 0x5480, 0xee60, 0x53c8, 0x462f, 0x0, 0x0);
        gbc.writeMem(0xbddf, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc773);
        EXPECT(gbc.pc(), 0xbde0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbddf), 0xc0);
        // C0 0268
        gbc.setState(0x4f03, 0xfd6d, 0xe590, 0xb7f7, 0x1324, 0x7013, 0x1, 0x0);
        gbc.writeMem(0x4f03, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfd6d);
        EXPECT(gbc.pc(), 0x4f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0269
        gbc.setState(0xc994, 0x88b5, 0xd790, 0xadf3, 0x6016, 0xb413, 0x1, 0x0);
        gbc.writeMem(0xc994, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x88b5);
        EXPECT(gbc.pc(), 0xc995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc994), 0xc0);
        // C0 026A
        gbc.setState(0xbd20, 0x7536, 0x5ce0, 0xb260, 0x9e99, 0xe5d7, 0x0, 0x1);
        gbc.writeMem(0xbd20, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7536);
        EXPECT(gbc.pc(), 0xbd21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd20), 0xc0);
        // C0 026B
        gbc.setState(0x62b7, 0xf3dd, 0xfcf0, 0xde2a, 0xc506, 0xb448, 0x0, 0x0);
        gbc.writeMem(0x62b7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf3dd);
        EXPECT(gbc.pc(), 0x62b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 026C
        gbc.setState(0xdbc7, 0x75ab, 0x2a20, 0x509b, 0xba76, 0xc5b3, 0x1, 0x1);
        gbc.writeMem(0x75ab, { 0xce, 0x1c });
        gbc.writeMem(0xdbc7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x75ad);
        EXPECT(gbc.pc(), 0x1cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc7), 0xc0);
        // C0 026E
        gbc.setState(0xee8b, 0xb54f, 0x54d0, 0xca62, 0xa38, 0x26a9, 0x0, 0x1);
        gbc.writeMem(0xee8b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb54f);
        EXPECT(gbc.pc(), 0xee8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee8b), 0xc0);
        // C0 026F
        gbc.setState(0x8428, 0xa9e2, 0xbe60, 0xb123, 0x25eb, 0x9d31, 0x0, 0x0);
        gbc.writeMem(0x8428, { 0xc0 });
        gbc.writeMem(0xa9e2, { 0x18, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa9e4);
        EXPECT(gbc.pc(), 0x8e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8428), 0xc0);
        EXPECT(gbc.readMem(0xa9e2), 0x18);
        EXPECT(gbc.readMem(0xa9e3), 0x8e);
        // C0 0270
        gbc.setState(0xca7c, 0x9623, 0x71f0, 0x43ef, 0x1f, 0x873, 0x1, 0x1);
        gbc.writeMem(0xca7c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9623);
        EXPECT(gbc.pc(), 0xca7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca7c), 0xc0);
        // C0 0271
        gbc.setState(0xefb3, 0x237e, 0x4110, 0x5252, 0x2ccd, 0xa28c, 0x0, 0x1);
        gbc.writeMem(0x237e, { 0x3c, 0x6d });
        gbc.writeMem(0xefb3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2380);
        EXPECT(gbc.pc(), 0x6d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb3), 0xc0);
        // C0 0272
        gbc.setState(0x5b54, 0x927a, 0xa4e0, 0xebd7, 0x7684, 0x38da, 0x0, 0x1);
        gbc.writeMem(0x5b54, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x927a);
        EXPECT(gbc.pc(), 0x5b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0273
        gbc.setState(0x46c5, 0x2c97, 0x1a60, 0x3217, 0x980d, 0x69ea, 0x0, 0x0);
        gbc.writeMem(0x2c97, { 0xa6, 0x29 });
        gbc.writeMem(0x46c5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2c99);
        EXPECT(gbc.pc(), 0x29a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0274
        gbc.setState(0x9734, 0x6ab3, 0x7cb0, 0x295d, 0x221a, 0xab54, 0x0, 0x0);
        gbc.writeMem(0x9734, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6ab3);
        EXPECT(gbc.pc(), 0x9735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9734), 0xc0);
        // C0 0275
        gbc.setState(0xc128, 0xb54, 0xead0, 0xfac8, 0x338, 0xf04a, 0x1, 0x0);
        gbc.writeMem(0xc128, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb54);
        EXPECT(gbc.pc(), 0xc129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc128), 0xc0);
        // C0 0276
        gbc.setState(0x131d, 0x4b25, 0x8c50, 0x73ab, 0xb073, 0x5690, 0x0, 0x1);
        gbc.writeMem(0x131d, { 0xc0 });
        gbc.writeMem(0x4b25, { 0x9c, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4b27);
        EXPECT(gbc.pc(), 0xbf9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0277
        gbc.setState(0x7120, 0xd29, 0x6db0, 0x7b72, 0x15e8, 0x4f2f, 0x1, 0x0);
        gbc.writeMem(0x7120, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd29);
        EXPECT(gbc.pc(), 0x7121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0278
        gbc.setState(0x7444, 0xe764, 0x63e0, 0x1ea8, 0x85aa, 0x7d63, 0x0, 0x1);
        gbc.writeMem(0x7444, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe764);
        EXPECT(gbc.pc(), 0x7445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0279
        gbc.setState(0x43ec, 0xf558, 0x2350, 0x224f, 0xd04, 0x45d7, 0x1, 0x1);
        gbc.writeMem(0x43ec, { 0xc0 });
        gbc.writeMem(0xf558, { 0x8c, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf55a);
        EXPECT(gbc.pc(), 0x948c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf558), 0x8c);
        EXPECT(gbc.readMem(0xf559), 0x94);
        // C0 027A
        gbc.setState(0x41e4, 0xe0bd, 0x2c00, 0x5aab, 0xb85, 0xb737, 0x0, 0x1);
        gbc.writeMem(0x41e4, { 0xc0 });
        gbc.writeMem(0xe0bd, { 0xc6, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe0bf);
        EXPECT(gbc.pc(), 0xfcc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0bd), 0xc6);
        EXPECT(gbc.readMem(0xe0be), 0xfc);
        // C0 027B
        gbc.setState(0x64f1, 0xa3a2, 0x2650, 0xe825, 0x23ca, 0x4395, 0x0, 0x1);
        gbc.writeMem(0x64f1, { 0xc0 });
        gbc.writeMem(0xa3a2, { 0x33, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa3a4);
        EXPECT(gbc.pc(), 0x533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3a2), 0x33);
        EXPECT(gbc.readMem(0xa3a3), 0x5);
        // C0 027C
        gbc.setState(0xda51, 0x7a9d, 0x320, 0x341, 0xcd63, 0x1bad, 0x0, 0x0);
        gbc.writeMem(0x7a9d, { 0x2e, 0x5a });
        gbc.writeMem(0xda51, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7a9f);
        EXPECT(gbc.pc(), 0x5a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda51), 0xc0);
        // C0 027D
        gbc.setState(0x15d, 0x2ab9, 0xec20, 0x582, 0x441a, 0x7e5a, 0x1, 0x1);
        gbc.writeMem(0x15d, { 0xc0 });
        gbc.writeMem(0x2ab9, { 0x2, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2abb);
        EXPECT(gbc.pc(), 0x4d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 027E
        gbc.setState(0x60bc, 0x25b0, 0x31c0, 0x2ccf, 0x4098, 0xe501, 0x0, 0x0);
        gbc.writeMem(0x60bc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x25b0);
        EXPECT(gbc.pc(), 0x60bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 027F
        gbc.setState(0x2f1b, 0xeca4, 0x9c70, 0x66a6, 0x8e1c, 0xf9d8, 0x1, 0x0);
        gbc.writeMem(0x2f1b, { 0xc0 });
        gbc.writeMem(0xeca4, { 0xc8, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xeca6);
        EXPECT(gbc.pc(), 0x8dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca4), 0xc8);
        EXPECT(gbc.readMem(0xeca5), 0x8d);
        // C0 0280
        gbc.setState(0xe5c2, 0x2271, 0xa9d0, 0x1894, 0x6187, 0xdb18, 0x0, 0x0);
        gbc.writeMem(0xe5c2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2271);
        EXPECT(gbc.pc(), 0xe5c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c2), 0xc0);
        // C0 0281
        gbc.setState(0x20cf, 0x73fe, 0x3fd0, 0x5b16, 0xed15, 0xfe91, 0x0, 0x0);
        gbc.writeMem(0x20cf, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x73fe);
        EXPECT(gbc.pc(), 0x20d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0283
        gbc.setState(0x3b33, 0x170a, 0x9d80, 0x4b45, 0x3c85, 0xa24c, 0x1, 0x0);
        gbc.writeMem(0x3b33, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x170a);
        EXPECT(gbc.pc(), 0x3b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0284
        gbc.setState(0x9e1d, 0x5d73, 0x29b0, 0x6992, 0x5544, 0x1c3a, 0x1, 0x1);
        gbc.writeMem(0x9e1d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5d73);
        EXPECT(gbc.pc(), 0x9e1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e1d), 0xc0);
        // C0 0285
        gbc.setState(0x2607, 0x360f, 0x7500, 0x9f57, 0x7b7d, 0xe7b4, 0x1, 0x0);
        gbc.writeMem(0x2607, { 0xc0 });
        gbc.writeMem(0x360f, { 0x5e, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3611);
        EXPECT(gbc.pc(), 0x175e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0286
        gbc.setState(0xd533, 0x20dc, 0x6850, 0xddf0, 0xca43, 0xb729, 0x0, 0x1);
        gbc.writeMem(0x20dc, { 0xbc, 0xb0 });
        gbc.writeMem(0xd533, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x20de);
        EXPECT(gbc.pc(), 0xb0bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd533), 0xc0);
        // C0 0287
        gbc.setState(0x713d, 0x8f44, 0xab0, 0x7489, 0x6475, 0xecb0, 0x0, 0x1);
        gbc.writeMem(0x713d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8f44);
        EXPECT(gbc.pc(), 0x713e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0288
        gbc.setState(0x9188, 0x5cbe, 0x6b70, 0x1d72, 0xca61, 0x5e9, 0x0, 0x0);
        gbc.writeMem(0x5cbe, { 0x90, 0xf8 });
        gbc.writeMem(0x9188, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5cc0);
        EXPECT(gbc.pc(), 0xf890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9188), 0xc0);
        // C0 0289
        gbc.setState(0xc36, 0x2300, 0xd630, 0xc45e, 0x958a, 0xfe8b, 0x1, 0x1);
        gbc.writeMem(0xc36, { 0xc0 });
        gbc.writeMem(0x2300, { 0x56, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2302);
        EXPECT(gbc.pc(), 0x8f56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 028A
        gbc.setState(0x664f, 0x6fcd, 0xd830, 0xb35, 0xdb1c, 0xf2d1, 0x0, 0x1);
        gbc.writeMem(0x664f, { 0xc0 });
        gbc.writeMem(0x6fcd, { 0xf3, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6fcf);
        EXPECT(gbc.pc(), 0xb8f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 028C
        gbc.setState(0x8f29, 0x8186, 0xa130, 0x9975, 0x4520, 0x1dd6, 0x0, 0x1);
        gbc.writeMem(0x8186, { 0x90, 0x54 });
        gbc.writeMem(0x8f29, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8188);
        EXPECT(gbc.pc(), 0x5490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8186), 0x90);
        EXPECT(gbc.readMem(0x8187), 0x54);
        EXPECT(gbc.readMem(0x8f29), 0xc0);
        // C0 028D
        gbc.setState(0x5522, 0x9c7a, 0x62b0, 0xe6a, 0x23fb, 0xd963, 0x0, 0x1);
        gbc.writeMem(0x5522, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9c7a);
        EXPECT(gbc.pc(), 0x5523);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 028E
        gbc.setState(0x74ac, 0xb7a5, 0xf560, 0x415f, 0x65f6, 0xdef, 0x1, 0x1);
        gbc.writeMem(0x74ac, { 0xc0 });
        gbc.writeMem(0xb7a5, { 0xdf, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb7a7);
        EXPECT(gbc.pc(), 0xecdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a5), 0xdf);
        EXPECT(gbc.readMem(0xb7a6), 0xec);
        // C0 028F
        gbc.setState(0x980f, 0x91f5, 0xf820, 0xc9e9, 0x2062, 0x4965, 0x1, 0x0);
        gbc.writeMem(0x91f5, { 0xed, 0x5a });
        gbc.writeMem(0x980f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x91f7);
        EXPECT(gbc.pc(), 0x5aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f5), 0xed);
        EXPECT(gbc.readMem(0x91f6), 0x5a);
        EXPECT(gbc.readMem(0x980f), 0xc0);
        // C0 0290
        gbc.setState(0xca8f, 0x42f1, 0x6d90, 0xd655, 0xe017, 0x87a2, 0x0, 0x1);
        gbc.writeMem(0xca8f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x42f1);
        EXPECT(gbc.pc(), 0xca90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8f), 0xc0);
        // C0 0291
        gbc.setState(0x7ab0, 0xa253, 0xd460, 0xae88, 0x7ae0, 0x9760, 0x0, 0x0);
        gbc.writeMem(0x7ab0, { 0xc0 });
        gbc.writeMem(0xa253, { 0x65, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa255);
        EXPECT(gbc.pc(), 0xc865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa253), 0x65);
        EXPECT(gbc.readMem(0xa254), 0xc8);
        // C0 0292
        gbc.setState(0x3883, 0x544, 0xa4a0, 0xb06c, 0x3bf, 0x64d4, 0x0, 0x1);
        gbc.writeMem(0x3883, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x544);
        EXPECT(gbc.pc(), 0x3884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0293
        gbc.setState(0x9d61, 0x18dc, 0x6080, 0x49e0, 0xceab, 0xa202, 0x1, 0x0);
        gbc.writeMem(0x9d61, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x18dc);
        EXPECT(gbc.pc(), 0x9d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d61), 0xc0);
        // C0 0294
        gbc.setState(0x2846, 0xb71e, 0xeb0, 0x7f47, 0x6c1e, 0x79f8, 0x1, 0x1);
        gbc.writeMem(0x2846, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb71e);
        EXPECT(gbc.pc(), 0x2847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0295
        gbc.setState(0xe283, 0xe4da, 0x8210, 0x5173, 0x8e64, 0xa66b, 0x1, 0x1);
        gbc.writeMem(0xe283, { 0xc0 });
        gbc.writeMem(0xe4da, { 0xd5, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe4dc);
        EXPECT(gbc.pc(), 0xaad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe283), 0xc0);
        EXPECT(gbc.readMem(0xe4da), 0xd5);
        EXPECT(gbc.readMem(0xe4db), 0xaa);
        // C0 0296
        gbc.setState(0x2b34, 0xe9f9, 0x3fe0, 0xda0, 0xa0f, 0x3d31, 0x1, 0x0);
        gbc.writeMem(0x2b34, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe9f9);
        EXPECT(gbc.pc(), 0x2b35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0298
        gbc.setState(0xe6ee, 0xf705, 0xbea0, 0xd498, 0x97eb, 0x207e, 0x1, 0x1);
        gbc.writeMem(0xe6ee, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf705);
        EXPECT(gbc.pc(), 0xe6ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ee), 0xc0);
        // C0 0299
        gbc.setState(0xb5e5, 0x2484, 0x9e40, 0x695c, 0xe49, 0xef67, 0x0, 0x0);
        gbc.writeMem(0x2484, { 0x5e, 0xea });
        gbc.writeMem(0xb5e5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2486);
        EXPECT(gbc.pc(), 0xea5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e5), 0xc0);
        // C0 029A
        gbc.setState(0xb602, 0xc9da, 0xc900, 0x653e, 0xdbb2, 0x2358, 0x0, 0x1);
        gbc.writeMem(0xb602, { 0xc0 });
        gbc.writeMem(0xc9da, { 0x53, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc9dc);
        EXPECT(gbc.pc(), 0x1f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb602), 0xc0);
        EXPECT(gbc.readMem(0xc9da), 0x53);
        EXPECT(gbc.readMem(0xc9db), 0x1f);
        // C0 029B
        gbc.setState(0x5132, 0xdcf9, 0x32a0, 0x45de, 0xd45c, 0x4903, 0x0, 0x0);
        gbc.writeMem(0x5132, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdcf9);
        EXPECT(gbc.pc(), 0x5133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 029C
        gbc.setState(0x62ca, 0xabe3, 0x28d0, 0x5712, 0x9402, 0x4e6e, 0x0, 0x0);
        gbc.writeMem(0x62ca, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xabe3);
        EXPECT(gbc.pc(), 0x62cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 029D
        gbc.setState(0xb0b6, 0x2158, 0x7d90, 0x34b0, 0x2e36, 0xf02, 0x0, 0x1);
        gbc.writeMem(0xb0b6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2158);
        EXPECT(gbc.pc(), 0xb0b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b6), 0xc0);
        // C0 029F
        gbc.setState(0x1ca1, 0xadc3, 0x7c70, 0xae03, 0x6504, 0xc776, 0x0, 0x0);
        gbc.writeMem(0x1ca1, { 0xc0 });
        gbc.writeMem(0xadc3, { 0xd4, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xadc5);
        EXPECT(gbc.pc(), 0xced4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc3), 0xd4);
        EXPECT(gbc.readMem(0xadc4), 0xce);
        // C0 02A0
        gbc.setState(0x66ed, 0x94e8, 0xbd70, 0xba79, 0x5c31, 0x18b8, 0x1, 0x0);
        gbc.writeMem(0x66ed, { 0xc0 });
        gbc.writeMem(0x94e8, { 0xf, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x94ea);
        EXPECT(gbc.pc(), 0x890f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e8), 0xf);
        EXPECT(gbc.readMem(0x94e9), 0x89);
        // C0 02A1
        gbc.setState(0x872a, 0xaa37, 0xc640, 0x6be7, 0x1ce7, 0xedee, 0x1, 0x0);
        gbc.writeMem(0x872a, { 0xc0 });
        gbc.writeMem(0xaa37, { 0xd5, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xaa39);
        EXPECT(gbc.pc(), 0x64d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x872a), 0xc0);
        EXPECT(gbc.readMem(0xaa37), 0xd5);
        EXPECT(gbc.readMem(0xaa38), 0x64);
        // C0 02A2
        gbc.setState(0xec10, 0x95d3, 0x7640, 0x4beb, 0x5b64, 0xdeaf, 0x0, 0x1);
        gbc.writeMem(0x95d3, { 0x6f, 0x4b });
        gbc.writeMem(0xec10, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x95d5);
        EXPECT(gbc.pc(), 0x4b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d3), 0x6f);
        EXPECT(gbc.readMem(0x95d4), 0x4b);
        EXPECT(gbc.readMem(0xec10), 0xc0);
        // C0 02A3
        gbc.setState(0x15e4, 0xe99d, 0x2490, 0x8323, 0x1ad1, 0xa9d0, 0x1, 0x0);
        gbc.writeMem(0x15e4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe99d);
        EXPECT(gbc.pc(), 0x15e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 02A4
        gbc.setState(0xb25f, 0x8771, 0xb410, 0x55f9, 0xe54, 0xe578, 0x1, 0x1);
        gbc.writeMem(0x8771, { 0xf5, 0xb });
        gbc.writeMem(0xb25f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8773);
        EXPECT(gbc.pc(), 0xbf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8771), 0xf5);
        EXPECT(gbc.readMem(0x8772), 0xb);
        EXPECT(gbc.readMem(0xb25f), 0xc0);
        // C0 02A5
        gbc.setState(0x3b1d, 0x8623, 0x5010, 0x9025, 0x9b98, 0xde57, 0x1, 0x0);
        gbc.writeMem(0x3b1d, { 0xc0 });
        gbc.writeMem(0x8623, { 0xa6, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8625);
        EXPECT(gbc.pc(), 0x5fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8623), 0xa6);
        EXPECT(gbc.readMem(0x8624), 0x5f);
        // C0 02A6
        gbc.setState(0xd0b2, 0xfa19, 0xefe0, 0x68ac, 0x8277, 0x22ee, 0x0, 0x1);
        gbc.writeMem(0xd0b2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfa19);
        EXPECT(gbc.pc(), 0xd0b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b2), 0xc0);
        // C0 02A7
        gbc.setState(0x1b5a, 0x9e65, 0x410, 0xbfdd, 0xf5d6, 0x4009, 0x0, 0x0);
        gbc.writeMem(0x1b5a, { 0xc0 });
        gbc.writeMem(0x9e65, { 0x95, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9e67);
        EXPECT(gbc.pc(), 0x7395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e65), 0x95);
        EXPECT(gbc.readMem(0x9e66), 0x73);
        // C0 02A8
        gbc.setState(0xd7eb, 0xa54a, 0xe20, 0x165c, 0x2bb4, 0x6819, 0x1, 0x0);
        gbc.writeMem(0xa54a, { 0xe9, 0x38 });
        gbc.writeMem(0xd7eb, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa54c);
        EXPECT(gbc.pc(), 0x38e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54a), 0xe9);
        EXPECT(gbc.readMem(0xa54b), 0x38);
        EXPECT(gbc.readMem(0xd7eb), 0xc0);
        // C0 02A9
        gbc.setState(0x3e62, 0x2e2c, 0xf220, 0x690b, 0xc2b4, 0x8276, 0x0, 0x0);
        gbc.writeMem(0x2e2c, { 0xfd, 0x8d });
        gbc.writeMem(0x3e62, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2e2e);
        EXPECT(gbc.pc(), 0x8dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 02AA
        gbc.setState(0xe65e, 0x53d6, 0x14d0, 0x590d, 0x2d1d, 0xae7b, 0x0, 0x0);
        gbc.writeMem(0xe65e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x53d6);
        EXPECT(gbc.pc(), 0xe65f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe65e), 0xc0);
        // C0 02AB
        gbc.setState(0x637b, 0xa5ba, 0x5880, 0x2b1d, 0x1cda, 0xc033, 0x1, 0x0);
        gbc.writeMem(0x637b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa5ba);
        EXPECT(gbc.pc(), 0x637c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 02AC
        gbc.setState(0x430b, 0xe6ef, 0xd100, 0x8f34, 0xaac7, 0xad47, 0x1, 0x0);
        gbc.writeMem(0x430b, { 0xc0 });
        gbc.writeMem(0xe6ef, { 0xec, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe6f1);
        EXPECT(gbc.pc(), 0x23ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ef), 0xec);
        EXPECT(gbc.readMem(0xe6f0), 0x23);
        // C0 02AD
        gbc.setState(0x52f9, 0xe3c0, 0x4400, 0xf349, 0x42e7, 0xf4ef, 0x1, 0x0);
        gbc.writeMem(0x52f9, { 0xc0 });
        gbc.writeMem(0xe3c0, { 0xcc, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe3c2);
        EXPECT(gbc.pc(), 0xb7cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c0), 0xcc);
        EXPECT(gbc.readMem(0xe3c1), 0xb7);
        // C0 02AE
        gbc.setState(0xdf00, 0x4b80, 0xfed0, 0x928a, 0x60c9, 0xd36d, 0x0, 0x0);
        gbc.writeMem(0xdf00, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4b80);
        EXPECT(gbc.pc(), 0xdf01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf00), 0xc0);
        // C0 02AF
        gbc.setState(0x8dd7, 0xd60a, 0xbb10, 0xac24, 0x49de, 0xe4a2, 0x1, 0x0);
        gbc.writeMem(0x8dd7, { 0xc0 });
        gbc.writeMem(0xd60a, { 0x7d, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd60c);
        EXPECT(gbc.pc(), 0x4d7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dd7), 0xc0);
        EXPECT(gbc.readMem(0xd60a), 0x7d);
        EXPECT(gbc.readMem(0xd60b), 0x4d);
        // C0 02B0
        gbc.setState(0xa4b1, 0x582e, 0x2a20, 0xbefa, 0xfdbc, 0x1dde, 0x1, 0x1);
        gbc.writeMem(0x582e, { 0xac, 0x5e });
        gbc.writeMem(0xa4b1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5830);
        EXPECT(gbc.pc(), 0x5eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b1), 0xc0);
        // C0 02B1
        gbc.setState(0xe4f, 0xca36, 0xff20, 0xd25a, 0xb464, 0xf1d8, 0x1, 0x0);
        gbc.writeMem(0xe4f, { 0xc0 });
        gbc.writeMem(0xca36, { 0xba, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xca38);
        EXPECT(gbc.pc(), 0x67ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca36), 0xba);
        EXPECT(gbc.readMem(0xca37), 0x67);
        // C0 02B2
        gbc.setState(0xeb85, 0xe279, 0x3840, 0xc9e, 0x709c, 0x6a5a, 0x1, 0x1);
        gbc.writeMem(0xe279, { 0xc3, 0x6b });
        gbc.writeMem(0xeb85, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe27b);
        EXPECT(gbc.pc(), 0x6bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe279), 0xc3);
        EXPECT(gbc.readMem(0xe27a), 0x6b);
        EXPECT(gbc.readMem(0xeb85), 0xc0);
        // C0 02B3
        gbc.setState(0x5cd8, 0x8cc, 0x1530, 0x30b8, 0xd8ac, 0xbc80, 0x0, 0x0);
        gbc.writeMem(0x8cc, { 0x72, 0xce });
        gbc.writeMem(0x5cd8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8ce);
        EXPECT(gbc.pc(), 0xce72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 02B5
        gbc.setState(0xe037, 0x430, 0x7660, 0x366d, 0x4ea4, 0xe274, 0x1, 0x0);
        gbc.writeMem(0x430, { 0xb8, 0x7c });
        gbc.writeMem(0xe037, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x432);
        EXPECT(gbc.pc(), 0x7cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe037), 0xc0);
        // C0 02B6
        gbc.setState(0x18d9, 0x4048, 0x3140, 0x18e3, 0x2f05, 0x139c, 0x1, 0x0);
        gbc.writeMem(0x18d9, { 0xc0 });
        gbc.writeMem(0x4048, { 0x96, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x404a);
        EXPECT(gbc.pc(), 0x6596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 02B7
        gbc.setState(0x8a43, 0x997f, 0x7520, 0xa3d9, 0xf829, 0xaa9f, 0x0, 0x0);
        gbc.writeMem(0x8a43, { 0xc0 });
        gbc.writeMem(0x997f, { 0x36, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9981);
        EXPECT(gbc.pc(), 0xf436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a43), 0xc0);
        EXPECT(gbc.readMem(0x997f), 0x36);
        EXPECT(gbc.readMem(0x9980), 0xf4);
        // C0 02B8
        gbc.setState(0xceb6, 0x9003, 0xaa00, 0xc9ee, 0xba21, 0x8ee0, 0x0, 0x0);
        gbc.writeMem(0x9003, { 0xa7, 0xf4 });
        gbc.writeMem(0xceb6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9005);
        EXPECT(gbc.pc(), 0xf4a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9003), 0xa7);
        EXPECT(gbc.readMem(0x9004), 0xf4);
        EXPECT(gbc.readMem(0xceb6), 0xc0);
        // C0 02B9
        gbc.setState(0x9d7c, 0x39bc, 0xe6e0, 0x8c3c, 0x722a, 0x8067, 0x0, 0x0);
        gbc.writeMem(0x9d7c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x39bc);
        EXPECT(gbc.pc(), 0x9d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d7c), 0xc0);
        // C0 02BA
        gbc.setState(0xa93e, 0x41f2, 0xdda0, 0xa04f, 0xfe82, 0xae9c, 0x0, 0x0);
        gbc.writeMem(0xa93e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x41f2);
        EXPECT(gbc.pc(), 0xa93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa93e), 0xc0);
        // C0 02BB
        gbc.setState(0x7fed, 0xca55, 0xae20, 0x22f3, 0x3c7f, 0xa245, 0x1, 0x0);
        gbc.writeMem(0x7fed, { 0xc0 });
        gbc.writeMem(0xca55, { 0x11, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xca57);
        EXPECT(gbc.pc(), 0x5211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca55), 0x11);
        EXPECT(gbc.readMem(0xca56), 0x52);
        // C0 02BC
        gbc.setState(0xe79a, 0xf041, 0xe330, 0x9d22, 0x13aa, 0x566e, 0x1, 0x0);
        gbc.writeMem(0xe79a, { 0xc0 });
        gbc.writeMem(0xf041, { 0x92, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf043);
        EXPECT(gbc.pc(), 0xb192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe79a), 0xc0);
        EXPECT(gbc.readMem(0xf041), 0x92);
        EXPECT(gbc.readMem(0xf042), 0xb1);
        // C0 02BD
        gbc.setState(0x172e, 0x6d0b, 0x3770, 0x1532, 0x2ccb, 0x3107, 0x1, 0x0);
        gbc.writeMem(0x172e, { 0xc0 });
        gbc.writeMem(0x6d0b, { 0x39, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6d0d);
        EXPECT(gbc.pc(), 0xd639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 02BE
        gbc.setState(0xd95, 0xa5aa, 0xde50, 0xd8be, 0x22f0, 0xce6e, 0x1, 0x1);
        gbc.writeMem(0xd95, { 0xc0 });
        gbc.writeMem(0xa5aa, { 0x22, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa5ac);
        EXPECT(gbc.pc(), 0xa222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5aa), 0x22);
        EXPECT(gbc.readMem(0xa5ab), 0xa2);
        // C0 02BF
        gbc.setState(0x9f46, 0x87ec, 0xed60, 0xe1b9, 0xebc2, 0xbfde, 0x0, 0x0);
        gbc.writeMem(0x87ec, { 0x2e, 0x8f });
        gbc.writeMem(0x9f46, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x87ee);
        EXPECT(gbc.pc(), 0x8f2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ec), 0x2e);
        EXPECT(gbc.readMem(0x87ed), 0x8f);
        EXPECT(gbc.readMem(0x9f46), 0xc0);
        // C0 02C0
        gbc.setState(0xb009, 0xdea3, 0xfe70, 0xfe63, 0x2c14, 0xe3c9, 0x1, 0x0);
        gbc.writeMem(0xb009, { 0xc0 });
        gbc.writeMem(0xdea3, { 0x62, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdea5);
        EXPECT(gbc.pc(), 0x6962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb009), 0xc0);
        EXPECT(gbc.readMem(0xdea3), 0x62);
        EXPECT(gbc.readMem(0xdea4), 0x69);
        // C0 02C1
        gbc.setState(0xc98a, 0xfb33, 0x6790, 0x13ec, 0xc336, 0x9f68, 0x1, 0x0);
        gbc.writeMem(0xc98a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xfb33);
        EXPECT(gbc.pc(), 0xc98b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98a), 0xc0);
        // C0 02C2
        gbc.setState(0x1f6b, 0xdc5d, 0xc3e0, 0x9929, 0x74e6, 0xb5ff, 0x0, 0x1);
        gbc.writeMem(0x1f6b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdc5d);
        EXPECT(gbc.pc(), 0x1f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 02C3
        gbc.setState(0x84ed, 0x9d0e, 0xef60, 0x5910, 0x8e01, 0x75cc, 0x0, 0x0);
        gbc.writeMem(0x84ed, { 0xc0 });
        gbc.writeMem(0x9d0e, { 0x51, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9d10);
        EXPECT(gbc.pc(), 0xc951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ed), 0xc0);
        EXPECT(gbc.readMem(0x9d0e), 0x51);
        EXPECT(gbc.readMem(0x9d0f), 0xc9);
        // C0 02C4
        gbc.setState(0x578e, 0xa1e, 0xc370, 0x208b, 0xb046, 0x5372, 0x0, 0x0);
        gbc.writeMem(0xa1e, { 0xa8, 0xb6 });
        gbc.writeMem(0x578e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa20);
        EXPECT(gbc.pc(), 0xb6a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 02C5
        gbc.setState(0x3146, 0x6e72, 0x39c0, 0xb20f, 0x4c52, 0x89ff, 0x0, 0x1);
        gbc.writeMem(0x3146, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6e72);
        EXPECT(gbc.pc(), 0x3147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 02C6
        gbc.setState(0x9a79, 0xb41a, 0x90d0, 0x286d, 0x9e, 0xa1e, 0x1, 0x0);
        gbc.writeMem(0x9a79, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb41a);
        EXPECT(gbc.pc(), 0x9a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a79), 0xc0);
        // C0 02C7
        gbc.setState(0x2040, 0xec43, 0x98a0, 0x8cae, 0x2926, 0xf154, 0x1, 0x0);
        gbc.writeMem(0x2040, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xec43);
        EXPECT(gbc.pc(), 0x2041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 02C8
        gbc.setState(0x95dc, 0x3565, 0x2650, 0xc533, 0xc258, 0x6440, 0x0, 0x0);
        gbc.writeMem(0x3565, { 0xbd, 0x6 });
        gbc.writeMem(0x95dc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3567);
        EXPECT(gbc.pc(), 0x6bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95dc), 0xc0);
        // C0 02C9
        gbc.setState(0xed4b, 0xb0d5, 0xd390, 0xac0e, 0xa505, 0x8519, 0x0, 0x1);
        gbc.writeMem(0xed4b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb0d5);
        EXPECT(gbc.pc(), 0xed4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed4b), 0xc0);
        // C0 02CA
        gbc.setState(0xe320, 0x26ba, 0x58c0, 0xa09b, 0x18a, 0x1988, 0x1, 0x0);
        gbc.writeMem(0xe320, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x26ba);
        EXPECT(gbc.pc(), 0xe321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe320), 0xc0);
        // C0 02CB
        gbc.setState(0x3d5b, 0xc0d5, 0xee20, 0x3c79, 0x25c8, 0x8f5c, 0x1, 0x0);
        gbc.writeMem(0x3d5b, { 0xc0 });
        gbc.writeMem(0xc0d5, { 0x5a, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc0d7);
        EXPECT(gbc.pc(), 0xc15a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d5), 0x5a);
        EXPECT(gbc.readMem(0xc0d6), 0xc1);
        // C0 02CC
        gbc.setState(0xe918, 0xe7cf, 0x2f70, 0x1a70, 0x43dd, 0x7a56, 0x0, 0x0);
        gbc.writeMem(0xe7cf, { 0xd, 0xcf });
        gbc.writeMem(0xe918, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe7d1);
        EXPECT(gbc.pc(), 0xcf0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7cf), 0xd);
        EXPECT(gbc.readMem(0xe7d0), 0xcf);
        EXPECT(gbc.readMem(0xe918), 0xc0);
        // C0 02CD
        gbc.setState(0x3d1, 0x994c, 0x730, 0xb16c, 0x48, 0x45f5, 0x0, 0x1);
        gbc.writeMem(0x3d1, { 0xc0 });
        gbc.writeMem(0x994c, { 0x80, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x994e);
        EXPECT(gbc.pc(), 0x4e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994c), 0x80);
        EXPECT(gbc.readMem(0x994d), 0x4e);
        // C0 02CE
        gbc.setState(0xe4ac, 0x25a, 0xd630, 0xecd1, 0x6162, 0xa75d, 0x1, 0x1);
        gbc.writeMem(0x25a, { 0xfe, 0x81 });
        gbc.writeMem(0xe4ac, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x25c);
        EXPECT(gbc.pc(), 0x81fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ac), 0xc0);
        // C0 02CF
        gbc.setState(0x8dc8, 0xa0b9, 0x7620, 0x7b66, 0xc157, 0x4f01, 0x0, 0x1);
        gbc.writeMem(0x8dc8, { 0xc0 });
        gbc.writeMem(0xa0b9, { 0x9, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa0bb);
        EXPECT(gbc.pc(), 0xc509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc8), 0xc0);
        EXPECT(gbc.readMem(0xa0b9), 0x9);
        EXPECT(gbc.readMem(0xa0ba), 0xc5);
        // C0 02D0
        gbc.setState(0xa5cd, 0xb023, 0x52f0, 0x17e8, 0x7b7b, 0x9232, 0x1, 0x1);
        gbc.writeMem(0xa5cd, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb023);
        EXPECT(gbc.pc(), 0xa5ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5cd), 0xc0);
        // C0 02D1
        gbc.setState(0x9f64, 0x6e2e, 0x6970, 0x9d1f, 0xb71f, 0xd222, 0x0, 0x0);
        gbc.writeMem(0x6e2e, { 0xb2, 0x94 });
        gbc.writeMem(0x9f64, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6e30);
        EXPECT(gbc.pc(), 0x94b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f64), 0xc0);
        // C0 02D2
        gbc.setState(0x926c, 0x6436, 0xe7c0, 0x44d9, 0xe71b, 0x9f5b, 0x1, 0x0);
        gbc.writeMem(0x926c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6436);
        EXPECT(gbc.pc(), 0x926d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926c), 0xc0);
        // C0 02D3
        gbc.setState(0x9c84, 0x725, 0x83d0, 0x1b24, 0xb753, 0xf61b, 0x0, 0x1);
        gbc.writeMem(0x9c84, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x725);
        EXPECT(gbc.pc(), 0x9c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c84), 0xc0);
        // C0 02D4
        gbc.setState(0x62de, 0x8607, 0xd160, 0xf465, 0xa4c2, 0x9909, 0x1, 0x1);
        gbc.writeMem(0x62de, { 0xc0 });
        gbc.writeMem(0x8607, { 0x31, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8609);
        EXPECT(gbc.pc(), 0xf131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8607), 0x31);
        EXPECT(gbc.readMem(0x8608), 0xf1);
        // C0 02D5
        gbc.setState(0xa107, 0x20d5, 0xa620, 0x30ff, 0xfcaa, 0x3c36, 0x0, 0x1);
        gbc.writeMem(0x20d5, { 0xdb, 0x2b });
        gbc.writeMem(0xa107, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x20d7);
        EXPECT(gbc.pc(), 0x2bdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa107), 0xc0);
        // C0 02D6
        gbc.setState(0x5e3c, 0x29a5, 0xae40, 0xa89f, 0x826c, 0x1acf, 0x0, 0x1);
        gbc.writeMem(0x29a5, { 0x86, 0xcf });
        gbc.writeMem(0x5e3c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x29a7);
        EXPECT(gbc.pc(), 0xcf86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 02D7
        gbc.setState(0x3536, 0xa1d6, 0xe100, 0x10ab, 0x5292, 0xc0ec, 0x0, 0x0);
        gbc.writeMem(0x3536, { 0xc0 });
        gbc.writeMem(0xa1d6, { 0x4f, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa1d8);
        EXPECT(gbc.pc(), 0xd24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1d6), 0x4f);
        EXPECT(gbc.readMem(0xa1d7), 0xd2);
        // C0 02D8
        gbc.setState(0x8428, 0x63d8, 0xfb90, 0xb130, 0xe985, 0xa4d6, 0x0, 0x0);
        gbc.writeMem(0x8428, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x63d8);
        EXPECT(gbc.pc(), 0x8429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8428), 0xc0);
        // C0 02D9
        gbc.setState(0xb2fb, 0x7804, 0x6500, 0x37dd, 0xa5d8, 0x8ec7, 0x1, 0x1);
        gbc.writeMem(0x7804, { 0x4e, 0xe7 });
        gbc.writeMem(0xb2fb, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7806);
        EXPECT(gbc.pc(), 0xe74e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fb), 0xc0);
        // C0 02DB
        gbc.setState(0x7f3e, 0xec1e, 0x3cc0, 0x2718, 0xda6d, 0xd434, 0x1, 0x1);
        gbc.writeMem(0x7f3e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xec1e);
        EXPECT(gbc.pc(), 0x7f3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 02DC
        gbc.setState(0x3513, 0xea95, 0x7f80, 0x5d20, 0x90f2, 0xd94f, 0x1, 0x1);
        gbc.writeMem(0x3513, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xea95);
        EXPECT(gbc.pc(), 0x3514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 02DD
        gbc.setState(0x8964, 0x1e01, 0x5750, 0x30d5, 0xe1a0, 0x7c3f, 0x1, 0x1);
        gbc.writeMem(0x1e01, { 0x83, 0xe6 });
        gbc.writeMem(0x8964, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1e03);
        EXPECT(gbc.pc(), 0xe683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8964), 0xc0);
        // C0 02DE
        gbc.setState(0xa85d, 0x5a3c, 0x660, 0x8c48, 0x852b, 0xebe1, 0x0, 0x1);
        gbc.writeMem(0x5a3c, { 0x6c, 0xf7 });
        gbc.writeMem(0xa85d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5a3e);
        EXPECT(gbc.pc(), 0xf76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85d), 0xc0);
        // C0 02E0
        gbc.setState(0x8822, 0x3bdd, 0xf430, 0xeb85, 0xdea, 0xbb1b, 0x1, 0x1);
        gbc.writeMem(0x3bdd, { 0x26, 0xc6 });
        gbc.writeMem(0x8822, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3bdf);
        EXPECT(gbc.pc(), 0xc626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8822), 0xc0);
        // C0 02E1
        gbc.setState(0xdba4, 0xedf1, 0x14c0, 0x3d59, 0x3140, 0x8f1f, 0x1, 0x1);
        gbc.writeMem(0xdba4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xedf1);
        EXPECT(gbc.pc(), 0xdba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdba4), 0xc0);
        // C0 02E2
        gbc.setState(0x6ab7, 0x22fb, 0xe00, 0x8511, 0x76b6, 0x781, 0x0, 0x0);
        gbc.writeMem(0x22fb, { 0x36, 0x35 });
        gbc.writeMem(0x6ab7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x22fd);
        EXPECT(gbc.pc(), 0x3536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 02E3
        gbc.setState(0x56aa, 0xfc8a, 0xa100, 0x2820, 0xbba, 0x5703, 0x1, 0x1);
        gbc.writeMem(0x56aa, { 0xc0 });
        gbc.writeMem(0xfc8a, { 0x9b, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfc8c);
        EXPECT(gbc.pc(), 0x969b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc8a), 0x9b);
        EXPECT(gbc.readMem(0xfc8b), 0x96);
        // C0 02E4
        gbc.setState(0x749c, 0xeeb4, 0x9f60, 0xddd9, 0x15ec, 0x4e8, 0x1, 0x1);
        gbc.writeMem(0x749c, { 0xc0 });
        gbc.writeMem(0xeeb4, { 0xd2, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xeeb6);
        EXPECT(gbc.pc(), 0xdfd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb4), 0xd2);
        EXPECT(gbc.readMem(0xeeb5), 0xdf);
        // C0 02E5
        gbc.setState(0x6f93, 0x15fc, 0x48c0, 0xeae1, 0x2bac, 0xbfc5, 0x0, 0x1);
        gbc.writeMem(0x6f93, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x15fc);
        EXPECT(gbc.pc(), 0x6f94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 02E6
        gbc.setState(0x1025, 0x4df9, 0xa9f0, 0x1c88, 0xf517, 0x85e8, 0x1, 0x1);
        gbc.writeMem(0x1025, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4df9);
        EXPECT(gbc.pc(), 0x1026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 02E7
        gbc.setState(0x7942, 0x1581, 0x5df0, 0xf822, 0x6878, 0xe066, 0x0, 0x1);
        gbc.writeMem(0x7942, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1581);
        EXPECT(gbc.pc(), 0x7943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 02E8
        gbc.setState(0x65dd, 0x7598, 0x8760, 0x4eb3, 0xc071, 0xe74b, 0x0, 0x1);
        gbc.writeMem(0x65dd, { 0xc0 });
        gbc.writeMem(0x7598, { 0x7, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x759a);
        EXPECT(gbc.pc(), 0x2707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 02E9
        gbc.setState(0xa6fd, 0xeb4e, 0xb60, 0xa1e4, 0x4c2f, 0x85bd, 0x0, 0x0);
        gbc.writeMem(0xa6fd, { 0xc0 });
        gbc.writeMem(0xeb4e, { 0xa5, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xeb50);
        EXPECT(gbc.pc(), 0x60a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6fd), 0xc0);
        EXPECT(gbc.readMem(0xeb4e), 0xa5);
        EXPECT(gbc.readMem(0xeb4f), 0x60);
        // C0 02EA
        gbc.setState(0xeee6, 0xa7f5, 0xfd0, 0xf8c, 0x77c3, 0x387c, 0x0, 0x1);
        gbc.writeMem(0xeee6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa7f5);
        EXPECT(gbc.pc(), 0xeee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee6), 0xc0);
        // C0 02EB
        gbc.setState(0xdf1a, 0x56d2, 0x35a0, 0x7ba, 0xd495, 0x3f6f, 0x1, 0x1);
        gbc.writeMem(0xdf1a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x56d2);
        EXPECT(gbc.pc(), 0xdf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1a), 0xc0);
        // C0 02EC
        gbc.setState(0x72, 0x8af8, 0x9700, 0x832b, 0xfbf0, 0x1cd2, 0x1, 0x0);
        gbc.writeMem(0x72, { 0xc0 });
        gbc.writeMem(0x8af8, { 0xfe, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8afa);
        EXPECT(gbc.pc(), 0x88fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af8), 0xfe);
        EXPECT(gbc.readMem(0x8af9), 0x88);
        // C0 02ED
        gbc.setState(0x9211, 0x61f6, 0x7510, 0x2852, 0xc4cf, 0x4fd3, 0x0, 0x0);
        gbc.writeMem(0x61f6, { 0x15, 0x1a });
        gbc.writeMem(0x9211, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x61f8);
        EXPECT(gbc.pc(), 0x1a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9211), 0xc0);
        // C0 02EE
        gbc.setState(0x9fa8, 0x4676, 0xb210, 0xffe1, 0xedf7, 0xebf8, 0x1, 0x0);
        gbc.writeMem(0x4676, { 0xcb, 0x43 });
        gbc.writeMem(0x9fa8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4678);
        EXPECT(gbc.pc(), 0x43cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa8), 0xc0);
        // C0 02EF
        gbc.setState(0xd5bf, 0x47b1, 0x5c90, 0xd641, 0x13f5, 0x7dbe, 0x0, 0x0);
        gbc.writeMem(0xd5bf, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x47b1);
        EXPECT(gbc.pc(), 0xd5c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5bf), 0xc0);
        // C0 02F0
        gbc.setState(0x14d2, 0x137d, 0x3d40, 0xa72a, 0x60f6, 0xd59c, 0x1, 0x1);
        gbc.writeMem(0x137d, { 0xb, 0xeb });
        gbc.writeMem(0x14d2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x137f);
        EXPECT(gbc.pc(), 0xeb0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 02F1
        gbc.setState(0xde4a, 0x8022, 0x9810, 0x8935, 0xc88, 0xc234, 0x1, 0x0);
        gbc.writeMem(0x8022, { 0xa3, 0xcd });
        gbc.writeMem(0xde4a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8024);
        EXPECT(gbc.pc(), 0xcda3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8022), 0xa3);
        EXPECT(gbc.readMem(0x8023), 0xcd);
        EXPECT(gbc.readMem(0xde4a), 0xc0);
        // C0 02F2
        gbc.setState(0xd902, 0xca78, 0x8490, 0x870e, 0xbb7e, 0x49bc, 0x0, 0x1);
        gbc.writeMem(0xd902, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xca78);
        EXPECT(gbc.pc(), 0xd903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd902), 0xc0);
        // C0 02F3
        gbc.setState(0x8f65, 0xedcd, 0x6950, 0x1488, 0xccce, 0xbdbe, 0x1, 0x1);
        gbc.writeMem(0x8f65, { 0xc0 });
        gbc.writeMem(0xedcd, { 0x1c, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xedcf);
        EXPECT(gbc.pc(), 0x101c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f65), 0xc0);
        EXPECT(gbc.readMem(0xedcd), 0x1c);
        EXPECT(gbc.readMem(0xedce), 0x10);
        // C0 02F4
        gbc.setState(0x3c71, 0xed6, 0xf3b0, 0xd24e, 0x6f34, 0xba40, 0x0, 0x0);
        gbc.writeMem(0x3c71, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xed6);
        EXPECT(gbc.pc(), 0x3c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 02F5
        gbc.setState(0xbe1e, 0x203, 0x4750, 0xf760, 0x319b, 0xe4d3, 0x0, 0x1);
        gbc.writeMem(0x203, { 0x43, 0xac });
        gbc.writeMem(0xbe1e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x205);
        EXPECT(gbc.pc(), 0xac43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe1e), 0xc0);
        // C0 02F6
        gbc.setState(0xc64e, 0x9cd9, 0xa560, 0xb050, 0x58a0, 0x44c4, 0x0, 0x0);
        gbc.writeMem(0x9cd9, { 0x24, 0x91 });
        gbc.writeMem(0xc64e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9cdb);
        EXPECT(gbc.pc(), 0x9124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd9), 0x24);
        EXPECT(gbc.readMem(0x9cda), 0x91);
        EXPECT(gbc.readMem(0xc64e), 0xc0);
        // C0 02F7
        gbc.setState(0xb1d1, 0x7195, 0xe4c0, 0xefc6, 0x47e2, 0x9dea, 0x0, 0x1);
        gbc.writeMem(0xb1d1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7195);
        EXPECT(gbc.pc(), 0xb1d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d1), 0xc0);
        // C0 02F8
        gbc.setState(0xde83, 0xb669, 0x3c20, 0xda34, 0x2883, 0x4344, 0x1, 0x0);
        gbc.writeMem(0xb669, { 0x21, 0x4b });
        gbc.writeMem(0xde83, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb66b);
        EXPECT(gbc.pc(), 0x4b21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb669), 0x21);
        EXPECT(gbc.readMem(0xb66a), 0x4b);
        EXPECT(gbc.readMem(0xde83), 0xc0);
        // C0 02F9
        gbc.setState(0xed02, 0xea0, 0xcf90, 0x4664, 0xb703, 0x422c, 0x0, 0x0);
        gbc.writeMem(0xed02, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xea0);
        EXPECT(gbc.pc(), 0xed03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed02), 0xc0);
        // C0 02FA
        gbc.setState(0xb9fc, 0x6b6f, 0x8bc0, 0x9dd0, 0x3400, 0x64a1, 0x1, 0x1);
        gbc.writeMem(0xb9fc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6b6f);
        EXPECT(gbc.pc(), 0xb9fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9fc), 0xc0);
        // C0 02FB
        gbc.setState(0xa638, 0x2a5b, 0xdaa0, 0x565f, 0x9ae4, 0x6bb0, 0x0, 0x0);
        gbc.writeMem(0xa638, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2a5b);
        EXPECT(gbc.pc(), 0xa639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa638), 0xc0);
        // C0 02FC
        gbc.setState(0x7824, 0x8295, 0xcc90, 0x6e64, 0x1c67, 0x1e9e, 0x0, 0x0);
        gbc.writeMem(0x7824, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8295);
        EXPECT(gbc.pc(), 0x7825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 02FD
        gbc.setState(0xac2, 0x981d, 0x5950, 0x67f, 0x5ebb, 0x4cc4, 0x0, 0x1);
        gbc.writeMem(0xac2, { 0xc0 });
        gbc.writeMem(0x981d, { 0xc3, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x981f);
        EXPECT(gbc.pc(), 0x56c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981d), 0xc3);
        EXPECT(gbc.readMem(0x981e), 0x56);
        // C0 02FE
        gbc.setState(0x7648, 0x32eb, 0xe7e0, 0xee95, 0x8d8e, 0x1812, 0x1, 0x0);
        gbc.writeMem(0x7648, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x32eb);
        EXPECT(gbc.pc(), 0x7649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 02FF
        gbc.setState(0xeaf0, 0xb22d, 0xd360, 0x5b42, 0x2a0c, 0x23cc, 0x0, 0x1);
        gbc.writeMem(0xb22d, { 0xb2, 0x27 });
        gbc.writeMem(0xeaf0, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb22f);
        EXPECT(gbc.pc(), 0x27b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb22d), 0xb2);
        EXPECT(gbc.readMem(0xb22e), 0x27);
        EXPECT(gbc.readMem(0xeaf0), 0xc0);
        // C0 0300
        gbc.setState(0xc664, 0xc0cf, 0x4700, 0x1836, 0x9d0e, 0x44ed, 0x1, 0x1);
        gbc.writeMem(0xc0cf, { 0x5d, 0x3 });
        gbc.writeMem(0xc664, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc0d1);
        EXPECT(gbc.pc(), 0x35d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0cf), 0x5d);
        EXPECT(gbc.readMem(0xc0d0), 0x3);
        EXPECT(gbc.readMem(0xc664), 0xc0);
        // C0 0301
        gbc.setState(0xd539, 0x8202, 0xbf30, 0x66e3, 0x591a, 0x55d4, 0x0, 0x0);
        gbc.writeMem(0x8202, { 0x37, 0x16 });
        gbc.writeMem(0xd539, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8204);
        EXPECT(gbc.pc(), 0x1637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8202), 0x37);
        EXPECT(gbc.readMem(0x8203), 0x16);
        EXPECT(gbc.readMem(0xd539), 0xc0);
        // C0 0302
        gbc.setState(0x8d15, 0x3933, 0xa680, 0x90d4, 0xa949, 0xf70f, 0x0, 0x1);
        gbc.writeMem(0x8d15, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3933);
        EXPECT(gbc.pc(), 0x8d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d15), 0xc0);
        // C0 0303
        gbc.setState(0x2caf, 0xef2, 0x4600, 0x780a, 0x5b0c, 0x95fc, 0x1, 0x1);
        gbc.writeMem(0xef2, { 0xaa, 0xd4 });
        gbc.writeMem(0x2caf, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xef4);
        EXPECT(gbc.pc(), 0xd4aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0304
        gbc.setState(0x111c, 0x47ea, 0x5ff0, 0x26c0, 0x97bb, 0x5631, 0x1, 0x0);
        gbc.writeMem(0x111c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x47ea);
        EXPECT(gbc.pc(), 0x111d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0305
        gbc.setState(0x432, 0x8ade, 0x6b30, 0xc055, 0xb0ef, 0x734a, 0x0, 0x0);
        gbc.writeMem(0x432, { 0xc0 });
        gbc.writeMem(0x8ade, { 0x46, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8ae0);
        EXPECT(gbc.pc(), 0x8946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ade), 0x46);
        EXPECT(gbc.readMem(0x8adf), 0x89);
        // C0 0306
        gbc.setState(0x2057, 0x649f, 0xe30, 0xa1f, 0x5e1d, 0xaa78, 0x1, 0x0);
        gbc.writeMem(0x2057, { 0xc0 });
        gbc.writeMem(0x649f, { 0xe2, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x64a1);
        EXPECT(gbc.pc(), 0x98e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0307
        gbc.setState(0x258e, 0xc4b4, 0x22d0, 0xaf3b, 0xfa28, 0x3d75, 0x1, 0x1);
        gbc.writeMem(0x258e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc4b4);
        EXPECT(gbc.pc(), 0x258f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0308
        gbc.setState(0x2e01, 0xd138, 0xa6f0, 0x12df, 0x5818, 0xe133, 0x1, 0x1);
        gbc.writeMem(0x2e01, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd138);
        EXPECT(gbc.pc(), 0x2e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0309
        gbc.setState(0xc2c9, 0x570e, 0xf3e0, 0x57eb, 0x3c61, 0x1ee2, 0x0, 0x1);
        gbc.writeMem(0xc2c9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x570e);
        EXPECT(gbc.pc(), 0xc2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c9), 0xc0);
        // C0 030A
        gbc.setState(0xdff5, 0x3851, 0xdd0, 0xd800, 0x4d92, 0xfed2, 0x1, 0x0);
        gbc.writeMem(0xdff5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3851);
        EXPECT(gbc.pc(), 0xdff6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff5), 0xc0);
        // C0 030B
        gbc.setState(0x321e, 0xce4d, 0xae0, 0x9e86, 0xc0c5, 0xd13, 0x0, 0x0);
        gbc.writeMem(0x321e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xce4d);
        EXPECT(gbc.pc(), 0x321f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 030C
        gbc.setState(0x747, 0x2e5f, 0xe8c0, 0x8894, 0xd4f6, 0xc4fc, 0x0, 0x0);
        gbc.writeMem(0x747, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2e5f);
        EXPECT(gbc.pc(), 0x748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 030D
        gbc.setState(0xae1d, 0x4d14, 0x2c20, 0xd06, 0xeccf, 0xa36, 0x1, 0x1);
        gbc.writeMem(0x4d14, { 0x7, 0xb3 });
        gbc.writeMem(0xae1d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4d16);
        EXPECT(gbc.pc(), 0xb307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae1d), 0xc0);
        // C0 030E
        gbc.setState(0x94be, 0xd5c3, 0xcf10, 0x1ff5, 0x6c7d, 0xc1b8, 0x1, 0x1);
        gbc.writeMem(0x94be, { 0xc0 });
        gbc.writeMem(0xd5c3, { 0xc0, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd5c5);
        EXPECT(gbc.pc(), 0x6cc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94be), 0xc0);
        EXPECT(gbc.readMem(0xd5c3), 0xc0);
        EXPECT(gbc.readMem(0xd5c4), 0x6c);
        // C0 030F
        gbc.setState(0x354, 0x659d, 0x3750, 0xa51b, 0xa71c, 0x324b, 0x0, 0x0);
        gbc.writeMem(0x354, { 0xc0 });
        gbc.writeMem(0x659d, { 0x17, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x659f);
        EXPECT(gbc.pc(), 0xba17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0310
        gbc.setState(0xb2b9, 0x354e, 0x50b0, 0x792d, 0x1faa, 0x3bcd, 0x0, 0x0);
        gbc.writeMem(0xb2b9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x354e);
        EXPECT(gbc.pc(), 0xb2ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b9), 0xc0);
        // C0 0311
        gbc.setState(0xacac, 0x67c9, 0x12b0, 0xffb6, 0xaa77, 0x890e, 0x1, 0x1);
        gbc.writeMem(0xacac, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x67c9);
        EXPECT(gbc.pc(), 0xacad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacac), 0xc0);
        // C0 0312
        gbc.setState(0x50c0, 0x310c, 0x7d70, 0x8855, 0xffe5, 0xc19b, 0x1, 0x0);
        gbc.writeMem(0x310c, { 0x52, 0x92 });
        gbc.writeMem(0x50c0, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x310e);
        EXPECT(gbc.pc(), 0x9252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0313
        gbc.setState(0x6649, 0x35ca, 0xb610, 0x6360, 0x9bda, 0x3581, 0x1, 0x1);
        gbc.writeMem(0x35ca, { 0xe6, 0x82 });
        gbc.writeMem(0x6649, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x35cc);
        EXPECT(gbc.pc(), 0x82e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0314
        gbc.setState(0x9e6, 0x1ae7, 0xe9c0, 0x20cf, 0xf96c, 0x31f5, 0x1, 0x0);
        gbc.writeMem(0x9e6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1ae7);
        EXPECT(gbc.pc(), 0x9e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0315
        gbc.setState(0x3c53, 0x2171, 0xf230, 0xdec1, 0x5bc4, 0xc4ff, 0x1, 0x1);
        gbc.writeMem(0x2171, { 0x14, 0x0 });
        gbc.writeMem(0x3c53, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2173);
        EXPECT(gbc.pc(), 0x14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0316
        gbc.setState(0xebcb, 0x7405, 0x4290, 0x52f2, 0x152, 0x5111, 0x1, 0x0);
        gbc.writeMem(0xebcb, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7405);
        EXPECT(gbc.pc(), 0xebcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcb), 0xc0);
        // C0 0317
        gbc.setState(0x4d10, 0x1f01, 0x73d0, 0x1c9b, 0xafb1, 0x2ef8, 0x0, 0x0);
        gbc.writeMem(0x4d10, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1f01);
        EXPECT(gbc.pc(), 0x4d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0318
        gbc.setState(0xee34, 0x7ac5, 0x3940, 0xea20, 0xc1cd, 0x38cd, 0x1, 0x1);
        gbc.writeMem(0x7ac5, { 0x94, 0x65 });
        gbc.writeMem(0xee34, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7ac7);
        EXPECT(gbc.pc(), 0x6594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee34), 0xc0);
        // C0 0319
        gbc.setState(0xa655, 0x3f26, 0x4fb0, 0xd8a8, 0xd457, 0x8b28, 0x1, 0x1);
        gbc.writeMem(0xa655, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3f26);
        EXPECT(gbc.pc(), 0xa656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa655), 0xc0);
        // C0 031A
        gbc.setState(0x946a, 0xf394, 0x8900, 0xff78, 0xf33, 0x3fb8, 0x0, 0x1);
        gbc.writeMem(0x946a, { 0xc0 });
        gbc.writeMem(0xf394, { 0xa5, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf396);
        EXPECT(gbc.pc(), 0xc0a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x946a), 0xc0);
        EXPECT(gbc.readMem(0xf394), 0xa5);
        EXPECT(gbc.readMem(0xf395), 0xc0);
        // C0 031B
        gbc.setState(0x6a67, 0xe3fb, 0xb4b0, 0xe89e, 0xc6a8, 0x688c, 0x1, 0x0);
        gbc.writeMem(0x6a67, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe3fb);
        EXPECT(gbc.pc(), 0x6a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 031C
        gbc.setState(0x3990, 0x7bf7, 0x7500, 0x4afb, 0xad83, 0x25a8, 0x1, 0x1);
        gbc.writeMem(0x3990, { 0xc0 });
        gbc.writeMem(0x7bf7, { 0x5e, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7bf9);
        EXPECT(gbc.pc(), 0xac5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 031D
        gbc.setState(0x9727, 0xf178, 0x3ee0, 0xa9a3, 0x2ac, 0x1dc4, 0x0, 0x1);
        gbc.writeMem(0x9727, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf178);
        EXPECT(gbc.pc(), 0x9728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9727), 0xc0);
        // C0 031E
        gbc.setState(0x495f, 0xb89d, 0x7b10, 0x28d6, 0xd373, 0xbcb4, 0x0, 0x0);
        gbc.writeMem(0x495f, { 0xc0 });
        gbc.writeMem(0xb89d, { 0xbf, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb89f);
        EXPECT(gbc.pc(), 0x1abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89d), 0xbf);
        EXPECT(gbc.readMem(0xb89e), 0x1a);
        // C0 031F
        gbc.setState(0x86ae, 0xfa79, 0xc8a0, 0xb22f, 0x89d4, 0x3bb5, 0x1, 0x1);
        gbc.writeMem(0x86ae, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfa79);
        EXPECT(gbc.pc(), 0x86af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ae), 0xc0);
        // C0 0320
        gbc.setState(0x18ca, 0x6744, 0x230, 0x283a, 0xd6b4, 0x7a01, 0x0, 0x0);
        gbc.writeMem(0x18ca, { 0xc0 });
        gbc.writeMem(0x6744, { 0xed, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6746);
        EXPECT(gbc.pc(), 0xd1ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0321
        gbc.setState(0x6977, 0x98cb, 0x4260, 0x6c85, 0xf1ab, 0xca5b, 0x0, 0x0);
        gbc.writeMem(0x6977, { 0xc0 });
        gbc.writeMem(0x98cb, { 0xb5, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x98cd);
        EXPECT(gbc.pc(), 0xbb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98cb), 0xb5);
        EXPECT(gbc.readMem(0x98cc), 0xb);
        // C0 0322
        gbc.setState(0xb25d, 0xe84a, 0x8fa0, 0x6113, 0x7503, 0xd882, 0x0, 0x1);
        gbc.writeMem(0xb25d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe84a);
        EXPECT(gbc.pc(), 0xb25e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25d), 0xc0);
        // C0 0323
        gbc.setState(0x4811, 0x33c8, 0xcb80, 0xd7fe, 0xbb44, 0xedff, 0x1, 0x1);
        gbc.writeMem(0x4811, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x33c8);
        EXPECT(gbc.pc(), 0x4812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0324
        gbc.setState(0x49c4, 0x2fdc, 0xf4d0, 0x162a, 0x7c3f, 0x5986, 0x0, 0x0);
        gbc.writeMem(0x49c4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2fdc);
        EXPECT(gbc.pc(), 0x49c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0325
        gbc.setState(0xbfee, 0xfdd1, 0xf450, 0xa9e5, 0x7902, 0x1122, 0x1, 0x0);
        gbc.writeMem(0xbfee, { 0xc0 });
        gbc.writeMem(0xfdd1, { 0xff, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfdd3);
        EXPECT(gbc.pc(), 0x18ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfee), 0xc0);
        EXPECT(gbc.readMem(0xfdd1), 0xff);
        EXPECT(gbc.readMem(0xfdd2), 0x18);
        // C0 0326
        gbc.setState(0x941a, 0xd0d3, 0xb5a0, 0x961a, 0xa93e, 0xafaa, 0x0, 0x1);
        gbc.writeMem(0x941a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd0d3);
        EXPECT(gbc.pc(), 0x941b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x941a), 0xc0);
        // C0 0327
        gbc.setState(0xc661, 0x1f27, 0xe7b0, 0x9015, 0x2d7, 0x8285, 0x1, 0x0);
        gbc.writeMem(0xc661, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1f27);
        EXPECT(gbc.pc(), 0xc662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc661), 0xc0);
        // C0 0328
        gbc.setState(0xa968, 0xb4d7, 0xfbf0, 0x7cc4, 0xa85c, 0xf253, 0x0, 0x0);
        gbc.writeMem(0xa968, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb4d7);
        EXPECT(gbc.pc(), 0xa969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa968), 0xc0);
        // C0 0329
        gbc.setState(0xc1eb, 0xb5b, 0x46a0, 0x95d4, 0xfc4, 0xe643, 0x0, 0x0);
        gbc.writeMem(0xc1eb, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb5b);
        EXPECT(gbc.pc(), 0xc1ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1eb), 0xc0);
        // C0 032A
        gbc.setState(0xeb6b, 0xfdd1, 0xccb0, 0x57b0, 0x728d, 0x24ae, 0x0, 0x1);
        gbc.writeMem(0xeb6b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfdd1);
        EXPECT(gbc.pc(), 0xeb6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6b), 0xc0);
        // C0 032B
        gbc.setState(0x9bdd, 0x5a26, 0x2360, 0x8f3b, 0x3a02, 0x4b1, 0x1, 0x0);
        gbc.writeMem(0x5a26, { 0x37, 0x6f });
        gbc.writeMem(0x9bdd, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5a28);
        EXPECT(gbc.pc(), 0x6f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bdd), 0xc0);
        // C0 032C
        gbc.setState(0xaea0, 0x6d07, 0x8120, 0xb615, 0xaae4, 0x6909, 0x0, 0x0);
        gbc.writeMem(0x6d07, { 0xc1, 0xd1 });
        gbc.writeMem(0xaea0, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6d09);
        EXPECT(gbc.pc(), 0xd1c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea0), 0xc0);
        // C0 032D
        gbc.setState(0x602a, 0x5357, 0xac10, 0x30ad, 0xf9f6, 0xa95d, 0x1, 0x1);
        gbc.writeMem(0x5357, { 0x66, 0xff });
        gbc.writeMem(0x602a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5359);
        EXPECT(gbc.pc(), 0xff66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 032E
        gbc.setState(0x3139, 0x20fb, 0xee90, 0xce8f, 0x8b8e, 0x8a34, 0x0, 0x1);
        gbc.writeMem(0x3139, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x20fb);
        EXPECT(gbc.pc(), 0x313a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 032F
        gbc.setState(0xe162, 0x289c, 0x9700, 0xfbdd, 0xea23, 0x43b5, 0x0, 0x1);
        gbc.writeMem(0x289c, { 0xa6, 0x49 });
        gbc.writeMem(0xe162, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x289e);
        EXPECT(gbc.pc(), 0x49a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe162), 0xc0);
        // C0 0330
        gbc.setState(0x32b3, 0x6073, 0x10a0, 0xc55b, 0x5587, 0x4e52, 0x1, 0x1);
        gbc.writeMem(0x32b3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6073);
        EXPECT(gbc.pc(), 0x32b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0331
        gbc.setState(0xa8e1, 0x5d01, 0xec70, 0x6950, 0xe64e, 0x603b, 0x0, 0x0);
        gbc.writeMem(0x5d01, { 0x71, 0x4c });
        gbc.writeMem(0xa8e1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5d03);
        EXPECT(gbc.pc(), 0x4c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e1), 0xc0);
        // C0 0332
        gbc.setState(0x2cb2, 0x3ebd, 0x2170, 0x721d, 0x68a9, 0x6f59, 0x1, 0x1);
        gbc.writeMem(0x2cb2, { 0xc0 });
        gbc.writeMem(0x3ebd, { 0xeb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3ebf);
        EXPECT(gbc.pc(), 0xdaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0333
        gbc.setState(0x3aab, 0x858a, 0xbd40, 0xf623, 0x48ce, 0xd3d1, 0x1, 0x0);
        gbc.writeMem(0x3aab, { 0xc0 });
        gbc.writeMem(0x858a, { 0xa5, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x858c);
        EXPECT(gbc.pc(), 0x37a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x858a), 0xa5);
        EXPECT(gbc.readMem(0x858b), 0x37);
        // C0 0335
        gbc.setState(0x3d0f, 0x541e, 0x1a00, 0x7d0b, 0xe6b2, 0x9e29, 0x0, 0x1);
        gbc.writeMem(0x3d0f, { 0xc0 });
        gbc.writeMem(0x541e, { 0x25, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5420);
        EXPECT(gbc.pc(), 0x7525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0336
        gbc.setState(0x346b, 0x2fae, 0x52c0, 0xfb85, 0x7328, 0x4e14, 0x0, 0x1);
        gbc.writeMem(0x346b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2fae);
        EXPECT(gbc.pc(), 0x346c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0337
        gbc.setState(0x898, 0x33fd, 0x3c0, 0x14bb, 0x783d, 0xe206, 0x1, 0x1);
        gbc.writeMem(0x898, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x33fd);
        EXPECT(gbc.pc(), 0x899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0338
        gbc.setState(0x91b2, 0xbd1c, 0xd3d0, 0x6f22, 0xb8e3, 0x6daa, 0x1, 0x0);
        gbc.writeMem(0x91b2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbd1c);
        EXPECT(gbc.pc(), 0x91b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b2), 0xc0);
        // C0 0339
        gbc.setState(0x5485, 0x6a0b, 0x9b0, 0x90b6, 0x94e, 0xec1f, 0x1, 0x1);
        gbc.writeMem(0x5485, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6a0b);
        EXPECT(gbc.pc(), 0x5486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 033B
        gbc.setState(0xef0f, 0x72b2, 0x780, 0xe9ad, 0x2608, 0x6cc, 0x0, 0x1);
        gbc.writeMem(0xef0f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x72b2);
        EXPECT(gbc.pc(), 0xef10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef0f), 0xc0);
        // C0 033D
        gbc.setState(0x69f9, 0xa244, 0x7c60, 0x4682, 0x8fa1, 0x2909, 0x0, 0x1);
        gbc.writeMem(0x69f9, { 0xc0 });
        gbc.writeMem(0xa244, { 0xf9, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa246);
        EXPECT(gbc.pc(), 0x7cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa244), 0xf9);
        EXPECT(gbc.readMem(0xa245), 0x7c);
        // C0 033E
        gbc.setState(0xd155, 0x824e, 0x480, 0xfdff, 0xe6d1, 0xc41c, 0x1, 0x1);
        gbc.writeMem(0xd155, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x824e);
        EXPECT(gbc.pc(), 0xd156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd155), 0xc0);
        // C0 033F
        gbc.setState(0x35ac, 0x6fa3, 0x1b50, 0x68ed, 0x8a9a, 0xdc8b, 0x0, 0x0);
        gbc.writeMem(0x35ac, { 0xc0 });
        gbc.writeMem(0x6fa3, { 0xd4, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6fa5);
        EXPECT(gbc.pc(), 0x3dd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0340
        gbc.setState(0x67b8, 0xfff3, 0x4380, 0x9b30, 0x2bbd, 0xe9d8, 0x1, 0x1);
        gbc.writeMem(0x67b8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfff3);
        EXPECT(gbc.pc(), 0x67b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0341
        gbc.setState(0xc993, 0xa45e, 0xecd0, 0xfe0e, 0xfd8f, 0xa332, 0x0, 0x1);
        gbc.writeMem(0xc993, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa45e);
        EXPECT(gbc.pc(), 0xc994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc993), 0xc0);
        // C0 0342
        gbc.setState(0xd15c, 0x574a, 0xb350, 0xaf2b, 0x1c36, 0x34e7, 0x0, 0x0);
        gbc.writeMem(0x574a, { 0xff, 0xce });
        gbc.writeMem(0xd15c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x574c);
        EXPECT(gbc.pc(), 0xceff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd15c), 0xc0);
        // C0 0343
        gbc.setState(0xd925, 0x7de2, 0x6780, 0xb90a, 0x4eac, 0x3982, 0x1, 0x1);
        gbc.writeMem(0xd925, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7de2);
        EXPECT(gbc.pc(), 0xd926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd925), 0xc0);
        // C0 0344
        gbc.setState(0x384f, 0x6a78, 0x5f20, 0x889e, 0x98ef, 0xbb29, 0x0, 0x1);
        gbc.writeMem(0x384f, { 0xc0 });
        gbc.writeMem(0x6a78, { 0xa1, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6a7a);
        EXPECT(gbc.pc(), 0x1fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0346
        gbc.setState(0x2eba, 0x7ab8, 0xc800, 0xf18c, 0x9013, 0x2824, 0x1, 0x1);
        gbc.writeMem(0x2eba, { 0xc0 });
        gbc.writeMem(0x7ab8, { 0xd0, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7aba);
        EXPECT(gbc.pc(), 0x4ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0347
        gbc.setState(0x77b3, 0xd101, 0x9830, 0xb798, 0xb801, 0xd139, 0x1, 0x0);
        gbc.writeMem(0x77b3, { 0xc0 });
        gbc.writeMem(0xd101, { 0x19, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd103);
        EXPECT(gbc.pc(), 0xd519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd101), 0x19);
        EXPECT(gbc.readMem(0xd102), 0xd5);
        // C0 0348
        gbc.setState(0x9716, 0xe390, 0x4c30, 0xdf3b, 0xbe81, 0x6ab0, 0x0, 0x1);
        gbc.writeMem(0x9716, { 0xc0 });
        gbc.writeMem(0xe390, { 0x3b, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe392);
        EXPECT(gbc.pc(), 0x8a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9716), 0xc0);
        EXPECT(gbc.readMem(0xe390), 0x3b);
        EXPECT(gbc.readMem(0xe391), 0x8a);
        // C0 0349
        gbc.setState(0x2649, 0x1040, 0xe1a0, 0xdfb2, 0x68eb, 0xd80e, 0x1, 0x0);
        gbc.writeMem(0x2649, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1040);
        EXPECT(gbc.pc(), 0x264a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 034A
        gbc.setState(0xb3f9, 0xd449, 0xf360, 0xf9ca, 0x47e6, 0x6209, 0x1, 0x0);
        gbc.writeMem(0xb3f9, { 0xc0 });
        gbc.writeMem(0xd449, { 0xbb, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd44b);
        EXPECT(gbc.pc(), 0x72bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f9), 0xc0);
        EXPECT(gbc.readMem(0xd449), 0xbb);
        EXPECT(gbc.readMem(0xd44a), 0x72);
        // C0 034B
        gbc.setState(0xa07d, 0x5919, 0x54f0, 0x377a, 0xf1c7, 0x59d1, 0x0, 0x1);
        gbc.writeMem(0xa07d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5919);
        EXPECT(gbc.pc(), 0xa07e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07d), 0xc0);
        // C0 034C
        gbc.setState(0x1b84, 0x5af2, 0x8740, 0x8ae1, 0x2942, 0xa95e, 0x0, 0x0);
        gbc.writeMem(0x1b84, { 0xc0 });
        gbc.writeMem(0x5af2, { 0x7f, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5af4);
        EXPECT(gbc.pc(), 0xc27f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 034D
        gbc.setState(0x80be, 0xf0dd, 0xf3d0, 0xcd1b, 0xd0b, 0x1332, 0x1, 0x0);
        gbc.writeMem(0x80be, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf0dd);
        EXPECT(gbc.pc(), 0x80bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80be), 0xc0);
        // C0 034E
        gbc.setState(0xbff5, 0xe45a, 0x2370, 0xc1e9, 0x623e, 0x95fb, 0x1, 0x0);
        gbc.writeMem(0xbff5, { 0xc0 });
        gbc.writeMem(0xe45a, { 0x9, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe45c);
        EXPECT(gbc.pc(), 0x7309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff5), 0xc0);
        EXPECT(gbc.readMem(0xe45a), 0x9);
        EXPECT(gbc.readMem(0xe45b), 0x73);
        // C0 034F
        gbc.setState(0x8218, 0xcbd2, 0x5c30, 0xd96f, 0x30e3, 0xb18b, 0x0, 0x0);
        gbc.writeMem(0x8218, { 0xc0 });
        gbc.writeMem(0xcbd2, { 0x82, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcbd4);
        EXPECT(gbc.pc(), 0xcd82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8218), 0xc0);
        EXPECT(gbc.readMem(0xcbd2), 0x82);
        EXPECT(gbc.readMem(0xcbd3), 0xcd);
        // C0 0350
        gbc.setState(0x7592, 0x8c0b, 0x7650, 0x933d, 0x842a, 0xdd70, 0x0, 0x1);
        gbc.writeMem(0x7592, { 0xc0 });
        gbc.writeMem(0x8c0b, { 0xc2, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8c0d);
        EXPECT(gbc.pc(), 0x5c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c0b), 0xc2);
        EXPECT(gbc.readMem(0x8c0c), 0x5);
        // C0 0351
        gbc.setState(0xc144, 0x17de, 0x7bc0, 0xe6f, 0xebb3, 0x1e7a, 0x1, 0x0);
        gbc.writeMem(0xc144, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x17de);
        EXPECT(gbc.pc(), 0xc145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc144), 0xc0);
        // C0 0352
        gbc.setState(0x5189, 0xbb35, 0x4580, 0x4d3d, 0xdc6f, 0xfecc, 0x0, 0x0);
        gbc.writeMem(0x5189, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbb35);
        EXPECT(gbc.pc(), 0x518a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0353
        gbc.setState(0xe78b, 0x46ae, 0x1d30, 0x7a5d, 0x942c, 0x9176, 0x1, 0x1);
        gbc.writeMem(0x46ae, { 0xfb, 0x52 });
        gbc.writeMem(0xe78b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x46b0);
        EXPECT(gbc.pc(), 0x52fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe78b), 0xc0);
        // C0 0354
        gbc.setState(0xbd2b, 0x35bb, 0xafe0, 0x16f6, 0x62ca, 0xe264, 0x1, 0x0);
        gbc.writeMem(0xbd2b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x35bb);
        EXPECT(gbc.pc(), 0xbd2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd2b), 0xc0);
        // C0 0355
        gbc.setState(0x51a6, 0x77a7, 0x2dc0, 0x2066, 0x2efe, 0xcd9f, 0x0, 0x0);
        gbc.writeMem(0x51a6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x77a7);
        EXPECT(gbc.pc(), 0x51a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0356
        gbc.setState(0xcd8b, 0xfef4, 0xdd20, 0xf788, 0x5a35, 0xab98, 0x1, 0x0);
        gbc.writeMem(0xcd8b, { 0xc0 });
        gbc.writeMem(0xfef4, { 0xe5, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfef6);
        EXPECT(gbc.pc(), 0x72e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd8b), 0xc0);
        EXPECT(gbc.readMem(0xfef4), 0xe5);
        EXPECT(gbc.readMem(0xfef5), 0x72);
        // C0 0357
        gbc.setState(0x620c, 0xb419, 0x8e40, 0xd4f0, 0xa345, 0xf76a, 0x0, 0x1);
        gbc.writeMem(0x620c, { 0xc0 });
        gbc.writeMem(0xb419, { 0x94, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb41b);
        EXPECT(gbc.pc(), 0x6094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb419), 0x94);
        EXPECT(gbc.readMem(0xb41a), 0x60);
        // C0 0358
        gbc.setState(0xce85, 0x3856, 0x4570, 0x92c5, 0xfd3, 0x5ac, 0x1, 0x0);
        gbc.writeMem(0x3856, { 0x22, 0x91 });
        gbc.writeMem(0xce85, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3858);
        EXPECT(gbc.pc(), 0x9122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce85), 0xc0);
        // C0 0359
        gbc.setState(0x99d5, 0x4be3, 0x7730, 0x9499, 0x2406, 0xf29b, 0x1, 0x1);
        gbc.writeMem(0x4be3, { 0xf7, 0xfd });
        gbc.writeMem(0x99d5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4be5);
        EXPECT(gbc.pc(), 0xfdf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d5), 0xc0);
        // C0 035A
        gbc.setState(0xb8a5, 0xda12, 0xa910, 0xb7eb, 0x5515, 0x9b73, 0x0, 0x0);
        gbc.writeMem(0xb8a5, { 0xc0 });
        gbc.writeMem(0xda12, { 0xc8, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xda14);
        EXPECT(gbc.pc(), 0x49c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a5), 0xc0);
        EXPECT(gbc.readMem(0xda12), 0xc8);
        EXPECT(gbc.readMem(0xda13), 0x49);
        // C0 035B
        gbc.setState(0x4413, 0xe39a, 0x59d0, 0x1c7a, 0xa9c9, 0x3748, 0x1, 0x0);
        gbc.writeMem(0x4413, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe39a);
        EXPECT(gbc.pc(), 0x4414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 035C
        gbc.setState(0xb6f2, 0x5fd4, 0xc360, 0x1693, 0xb932, 0x736e, 0x0, 0x0);
        gbc.writeMem(0x5fd4, { 0x2f, 0x30 });
        gbc.writeMem(0xb6f2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5fd6);
        EXPECT(gbc.pc(), 0x302f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f2), 0xc0);
        // C0 035D
        gbc.setState(0x162e, 0x83f4, 0xb590, 0x84c5, 0x4156, 0x2994, 0x1, 0x1);
        gbc.writeMem(0x162e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x83f4);
        EXPECT(gbc.pc(), 0x162f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 035E
        gbc.setState(0xdb12, 0xb2d4, 0xfe0, 0xb185, 0x177a, 0xe00, 0x1, 0x1);
        gbc.writeMem(0xdb12, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb2d4);
        EXPECT(gbc.pc(), 0xdb13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb12), 0xc0);
        // C0 035F
        gbc.setState(0x6198, 0x3e95, 0x6160, 0xe392, 0xcac9, 0xe0f8, 0x1, 0x0);
        gbc.writeMem(0x3e95, { 0x33, 0x28 });
        gbc.writeMem(0x6198, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3e97);
        EXPECT(gbc.pc(), 0x2833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0360
        gbc.setState(0x1642, 0xa1bd, 0xf8c0, 0xef20, 0x2a63, 0x5ee9, 0x0, 0x1);
        gbc.writeMem(0x1642, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa1bd);
        EXPECT(gbc.pc(), 0x1643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0361
        gbc.setState(0x1237, 0x1c57, 0x360, 0x82ab, 0xea75, 0xdbd1, 0x1, 0x0);
        gbc.writeMem(0x1237, { 0xc0 });
        gbc.writeMem(0x1c57, { 0x45, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1c59);
        EXPECT(gbc.pc(), 0x7845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0362
        gbc.setState(0x9466, 0xf580, 0xc130, 0x5c8c, 0xf798, 0x1208, 0x0, 0x1);
        gbc.writeMem(0x9466, { 0xc0 });
        gbc.writeMem(0xf580, { 0xeb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf582);
        EXPECT(gbc.pc(), 0xa2eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9466), 0xc0);
        EXPECT(gbc.readMem(0xf580), 0xeb);
        EXPECT(gbc.readMem(0xf581), 0xa2);
        // C0 0363
        gbc.setState(0xd79f, 0x473b, 0xc8c0, 0xc320, 0xeade, 0xc9bb, 0x1, 0x0);
        gbc.writeMem(0xd79f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x473b);
        EXPECT(gbc.pc(), 0xd7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79f), 0xc0);
        // C0 0364
        gbc.setState(0x5900, 0x60b6, 0xf40, 0xd4, 0x7012, 0xce5d, 0x1, 0x0);
        gbc.writeMem(0x5900, { 0xc0 });
        gbc.writeMem(0x60b6, { 0x9b, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x60b8);
        EXPECT(gbc.pc(), 0x619b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0365
        gbc.setState(0x6a80, 0x73bd, 0x1ed0, 0x5810, 0xfe3, 0x823d, 0x0, 0x0);
        gbc.writeMem(0x6a80, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x73bd);
        EXPECT(gbc.pc(), 0x6a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0366
        gbc.setState(0x9098, 0xa067, 0xfc50, 0x2a6e, 0xe5ea, 0x5246, 0x0, 0x1);
        gbc.writeMem(0x9098, { 0xc0 });
        gbc.writeMem(0xa067, { 0x1e, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa069);
        EXPECT(gbc.pc(), 0x441e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9098), 0xc0);
        EXPECT(gbc.readMem(0xa067), 0x1e);
        EXPECT(gbc.readMem(0xa068), 0x44);
        // C0 0367
        gbc.setState(0xce45, 0xaff3, 0xb280, 0x10e0, 0xc8c5, 0x790, 0x0, 0x1);
        gbc.writeMem(0xce45, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaff3);
        EXPECT(gbc.pc(), 0xce46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce45), 0xc0);
        // C0 0368
        gbc.setState(0xdc51, 0x8119, 0x6f20, 0xd071, 0x9ff4, 0xc8ee, 0x0, 0x1);
        gbc.writeMem(0x8119, { 0xab, 0x4 });
        gbc.writeMem(0xdc51, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x811b);
        EXPECT(gbc.pc(), 0x4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8119), 0xab);
        EXPECT(gbc.readMem(0x811a), 0x4);
        EXPECT(gbc.readMem(0xdc51), 0xc0);
        // C0 0369
        gbc.setState(0x635d, 0x2781, 0xa530, 0x119f, 0x656b, 0x7912, 0x0, 0x0);
        gbc.writeMem(0x2781, { 0xec, 0xa6 });
        gbc.writeMem(0x635d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2783);
        EXPECT(gbc.pc(), 0xa6ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 036A
        gbc.setState(0x5c89, 0x9202, 0x8330, 0x8b7f, 0x8a0e, 0x5178, 0x0, 0x1);
        gbc.writeMem(0x5c89, { 0xc0 });
        gbc.writeMem(0x9202, { 0xb9, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9204);
        EXPECT(gbc.pc(), 0x34b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9202), 0xb9);
        EXPECT(gbc.readMem(0x9203), 0x34);
        // C0 036B
        gbc.setState(0x49e9, 0xb6e9, 0xf2b0, 0x14de, 0x5da6, 0x2308, 0x1, 0x0);
        gbc.writeMem(0x49e9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb6e9);
        EXPECT(gbc.pc(), 0x49ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 036C
        gbc.setState(0x35d6, 0x26a8, 0xef90, 0x6ec5, 0xd092, 0x606c, 0x0, 0x0);
        gbc.writeMem(0x35d6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x26a8);
        EXPECT(gbc.pc(), 0x35d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 036E
        gbc.setState(0x9ed, 0x568b, 0xc8b0, 0xc03d, 0x4323, 0xd639, 0x0, 0x1);
        gbc.writeMem(0x9ed, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x568b);
        EXPECT(gbc.pc(), 0x9ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 036F
        gbc.setState(0xc8a2, 0x5f9e, 0xb810, 0x4812, 0x1107, 0x1b68, 0x0, 0x1);
        gbc.writeMem(0x5f9e, { 0x4e, 0x28 });
        gbc.writeMem(0xc8a2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5fa0);
        EXPECT(gbc.pc(), 0x284e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a2), 0xc0);
        // C0 0370
        gbc.setState(0x4018, 0x9df0, 0xd080, 0x6080, 0xdcc4, 0xa6d3, 0x0, 0x1);
        gbc.writeMem(0x4018, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9df0);
        EXPECT(gbc.pc(), 0x4019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0371
        gbc.setState(0xc272, 0x2836, 0x950, 0x9811, 0x92aa, 0x2a89, 0x1, 0x0);
        gbc.writeMem(0x2836, { 0xd8, 0xb7 });
        gbc.writeMem(0xc272, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2838);
        EXPECT(gbc.pc(), 0xb7d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc272), 0xc0);
        // C0 0372
        gbc.setState(0xe48b, 0x8278, 0x7810, 0x1c42, 0x59e0, 0x62b8, 0x0, 0x1);
        gbc.writeMem(0x8278, { 0x27, 0x1a });
        gbc.writeMem(0xe48b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x827a);
        EXPECT(gbc.pc(), 0x1a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8278), 0x27);
        EXPECT(gbc.readMem(0x8279), 0x1a);
        EXPECT(gbc.readMem(0xe48b), 0xc0);
        // C0 0373
        gbc.setState(0xde28, 0x36d4, 0x8710, 0x8c1c, 0xb28a, 0x1b0f, 0x0, 0x0);
        gbc.writeMem(0x36d4, { 0xec, 0x4b });
        gbc.writeMem(0xde28, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x36d6);
        EXPECT(gbc.pc(), 0x4bec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde28), 0xc0);
        // C0 0374
        gbc.setState(0x1776, 0xa0b, 0x5990, 0x1a17, 0x7c89, 0x74ce, 0x0, 0x1);
        gbc.writeMem(0x1776, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa0b);
        EXPECT(gbc.pc(), 0x1777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0375
        gbc.setState(0xb35b, 0xc719, 0x7560, 0x2e07, 0xcb5f, 0xb7e0, 0x0, 0x1);
        gbc.writeMem(0xb35b, { 0xc0 });
        gbc.writeMem(0xc719, { 0xbe, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc71b);
        EXPECT(gbc.pc(), 0x68be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb35b), 0xc0);
        EXPECT(gbc.readMem(0xc719), 0xbe);
        EXPECT(gbc.readMem(0xc71a), 0x68);
        // C0 0376
        gbc.setState(0xe48b, 0x590d, 0xfc70, 0x706e, 0xc230, 0x22c4, 0x0, 0x1);
        gbc.writeMem(0x590d, { 0x8a, 0x66 });
        gbc.writeMem(0xe48b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x590f);
        EXPECT(gbc.pc(), 0x668a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe48b), 0xc0);
        // C0 0377
        gbc.setState(0x8567, 0x599c, 0x22a0, 0x667d, 0xc096, 0x282f, 0x0, 0x1);
        gbc.writeMem(0x8567, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x599c);
        EXPECT(gbc.pc(), 0x8568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8567), 0xc0);
        // C0 0378
        gbc.setState(0x5718, 0x17af, 0x83e0, 0x35be, 0x6d82, 0xddbe, 0x1, 0x1);
        gbc.writeMem(0x5718, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x17af);
        EXPECT(gbc.pc(), 0x5719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0379
        gbc.setState(0xb5ee, 0x354a, 0x67f0, 0xf4, 0xe029, 0x350, 0x1, 0x0);
        gbc.writeMem(0xb5ee, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x354a);
        EXPECT(gbc.pc(), 0xb5ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ee), 0xc0);
        // C0 037B
        gbc.setState(0xeaef, 0x1552, 0xc7c0, 0x22b0, 0x6977, 0x74b6, 0x1, 0x1);
        gbc.writeMem(0xeaef, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1552);
        EXPECT(gbc.pc(), 0xeaf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaef), 0xc0);
        // C0 037C
        gbc.setState(0xdd77, 0x5005, 0x6240, 0xe357, 0xb75a, 0xc98c, 0x1, 0x1);
        gbc.writeMem(0x5005, { 0xe5, 0xe2 });
        gbc.writeMem(0xdd77, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5007);
        EXPECT(gbc.pc(), 0xe2e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd77), 0xc0);
        // C0 037D
        gbc.setState(0x5132, 0xf4fd, 0x9a40, 0xb56f, 0x8144, 0x4d47, 0x0, 0x0);
        gbc.writeMem(0x5132, { 0xc0 });
        gbc.writeMem(0xf4fd, { 0xb6, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf4ff);
        EXPECT(gbc.pc(), 0x30b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4fd), 0xb6);
        EXPECT(gbc.readMem(0xf4fe), 0x30);
        // C0 037E
        gbc.setState(0x996c, 0xffe7, 0x6640, 0x8828, 0xeea1, 0xe477, 0x0, 0x1);
        gbc.writeMem(0x996c, { 0xc0 });
        gbc.writeMem(0xffe7, { 0xe9, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xffe9);
        EXPECT(gbc.pc(), 0x25e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996c), 0xc0);
        EXPECT(gbc.readMem(0xffe7), 0xe9);
        EXPECT(gbc.readMem(0xffe8), 0x25);
        // C0 037F
        gbc.setState(0x2040, 0x7eda, 0xdce0, 0x6cc9, 0xe7fb, 0xb034, 0x1, 0x1);
        gbc.writeMem(0x2040, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7eda);
        EXPECT(gbc.pc(), 0x2041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0380
        gbc.setState(0x35ff, 0x5f7c, 0x72e0, 0xa15e, 0xae4c, 0x4f5d, 0x1, 0x0);
        gbc.writeMem(0x35ff, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5f7c);
        EXPECT(gbc.pc(), 0x3600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0381
        gbc.setState(0x6961, 0xd952, 0x3ba0, 0xaf9d, 0x42ef, 0xbd69, 0x0, 0x0);
        gbc.writeMem(0x6961, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd952);
        EXPECT(gbc.pc(), 0x6962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0382
        gbc.setState(0xc413, 0xc8d, 0xf630, 0x47ba, 0x735c, 0x5c3, 0x0, 0x0);
        gbc.writeMem(0xc8d, { 0xe0, 0x2 });
        gbc.writeMem(0xc413, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc8f);
        EXPECT(gbc.pc(), 0x2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc413), 0xc0);
        // C0 0383
        gbc.setState(0xb885, 0x8729, 0x3760, 0x5f1, 0x1a8d, 0x8acd, 0x1, 0x1);
        gbc.writeMem(0x8729, { 0x45, 0xb7 });
        gbc.writeMem(0xb885, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x872b);
        EXPECT(gbc.pc(), 0xb745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8729), 0x45);
        EXPECT(gbc.readMem(0x872a), 0xb7);
        EXPECT(gbc.readMem(0xb885), 0xc0);
        // C0 0384
        gbc.setState(0xa174, 0x6d6b, 0x2c10, 0xdd8e, 0x5d1, 0x5f34, 0x0, 0x0);
        gbc.writeMem(0x6d6b, { 0x16, 0xc2 });
        gbc.writeMem(0xa174, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6d6d);
        EXPECT(gbc.pc(), 0xc216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa174), 0xc0);
        // C0 0385
        gbc.setState(0x7a83, 0xa2ba, 0x7710, 0x140a, 0xafc0, 0x9ff2, 0x0, 0x1);
        gbc.writeMem(0x7a83, { 0xc0 });
        gbc.writeMem(0xa2ba, { 0xd0, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa2bc);
        EXPECT(gbc.pc(), 0x52d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ba), 0xd0);
        EXPECT(gbc.readMem(0xa2bb), 0x52);
        // C0 0386
        gbc.setState(0x8774, 0x47ec, 0x1ca0, 0xe31a, 0x76e5, 0x6470, 0x0, 0x1);
        gbc.writeMem(0x8774, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x47ec);
        EXPECT(gbc.pc(), 0x8775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8774), 0xc0);
        // C0 0387
        gbc.setState(0x4ee4, 0xb098, 0x52e0, 0x17ae, 0x3aec, 0xd04c, 0x0, 0x0);
        gbc.writeMem(0x4ee4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb098);
        EXPECT(gbc.pc(), 0x4ee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0388
        gbc.setState(0x7527, 0x2f83, 0x8730, 0x89ac, 0xd4da, 0xc778, 0x1, 0x1);
        gbc.writeMem(0x2f83, { 0x24, 0x98 });
        gbc.writeMem(0x7527, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2f85);
        EXPECT(gbc.pc(), 0x9824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0389
        gbc.setState(0x9486, 0xe61c, 0x5a30, 0x583, 0x5ae4, 0x22de, 0x0, 0x1);
        gbc.writeMem(0x9486, { 0xc0 });
        gbc.writeMem(0xe61c, { 0xae, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe61e);
        EXPECT(gbc.pc(), 0xe5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9486), 0xc0);
        EXPECT(gbc.readMem(0xe61c), 0xae);
        EXPECT(gbc.readMem(0xe61d), 0xe5);
        // C0 038A
        gbc.setState(0x7fa8, 0xc954, 0x1630, 0x9c46, 0x9469, 0x7c4e, 0x0, 0x1);
        gbc.writeMem(0x7fa8, { 0xc0 });
        gbc.writeMem(0xc954, { 0x18, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc956);
        EXPECT(gbc.pc(), 0x5618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc954), 0x18);
        EXPECT(gbc.readMem(0xc955), 0x56);
        // C0 038B
        gbc.setState(0x2d4f, 0xcb82, 0x1b50, 0xb57e, 0x7978, 0x9dca, 0x1, 0x1);
        gbc.writeMem(0x2d4f, { 0xc0 });
        gbc.writeMem(0xcb82, { 0x33, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcb84);
        EXPECT(gbc.pc(), 0x1233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb82), 0x33);
        EXPECT(gbc.readMem(0xcb83), 0x12);
        // C0 038C
        gbc.setState(0x8d7b, 0xc4a0, 0x3480, 0x9962, 0x82ed, 0xb5e, 0x1, 0x1);
        gbc.writeMem(0x8d7b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc4a0);
        EXPECT(gbc.pc(), 0x8d7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7b), 0xc0);
        // C0 038D
        gbc.setState(0x61b5, 0x8796, 0x76c0, 0x6db7, 0x1106, 0x43f3, 0x1, 0x1);
        gbc.writeMem(0x61b5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8796);
        EXPECT(gbc.pc(), 0x61b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 038E
        gbc.setState(0x44d6, 0x29d1, 0xaa90, 0x6cc, 0xe8ae, 0xb8c, 0x1, 0x0);
        gbc.writeMem(0x44d6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x29d1);
        EXPECT(gbc.pc(), 0x44d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 038F
        gbc.setState(0x72d1, 0xd5ec, 0xc950, 0xb77e, 0xc887, 0x4aa4, 0x0, 0x0);
        gbc.writeMem(0x72d1, { 0xc0 });
        gbc.writeMem(0xd5ec, { 0xd8, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd5ee);
        EXPECT(gbc.pc(), 0xbbd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ec), 0xd8);
        EXPECT(gbc.readMem(0xd5ed), 0xbb);
        // C0 0390
        gbc.setState(0xdb0f, 0xcb1c, 0x38d0, 0x4e92, 0x2243, 0xf4d, 0x1, 0x0);
        gbc.writeMem(0xdb0f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcb1c);
        EXPECT(gbc.pc(), 0xdb10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb0f), 0xc0);
        // C0 0391
        gbc.setState(0x16d, 0xd8b5, 0xa2b0, 0x2d86, 0x128d, 0x5deb, 0x1, 0x1);
        gbc.writeMem(0x16d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd8b5);
        EXPECT(gbc.pc(), 0x16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 0392
        gbc.setState(0x313f, 0x30a8, 0xe9e0, 0x202b, 0xe70, 0x7007, 0x1, 0x1);
        gbc.writeMem(0x313f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x30a8);
        EXPECT(gbc.pc(), 0x3140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 0393
        gbc.setState(0x9a4a, 0xc009, 0xf990, 0x8118, 0xfeea, 0xfee2, 0x1, 0x1);
        gbc.writeMem(0x9a4a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc009);
        EXPECT(gbc.pc(), 0x9a4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4a), 0xc0);
        // C0 0394
        gbc.setState(0x13eb, 0x81c0, 0x31c0, 0xaf1c, 0x837d, 0xaf1b, 0x0, 0x1);
        gbc.writeMem(0x13eb, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x81c0);
        EXPECT(gbc.pc(), 0x13ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 0396
        gbc.setState(0xc999, 0x30b8, 0x3e50, 0xed26, 0x64d7, 0x590f, 0x0, 0x1);
        gbc.writeMem(0x30b8, { 0x49, 0x5 });
        gbc.writeMem(0xc999, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x30ba);
        EXPECT(gbc.pc(), 0x549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc999), 0xc0);
        // C0 0397
        gbc.setState(0x73f4, 0x8629, 0x4590, 0x86bb, 0x6d08, 0x7a4a, 0x1, 0x1);
        gbc.writeMem(0x73f4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8629);
        EXPECT(gbc.pc(), 0x73f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 0398
        gbc.setState(0x8f, 0xb6a1, 0x7f20, 0x9bc9, 0x6d0e, 0xfc43, 0x1, 0x0);
        gbc.writeMem(0x8f, { 0xc0 });
        gbc.writeMem(0xb6a1, { 0x2c, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb6a3);
        EXPECT(gbc.pc(), 0x3a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a1), 0x2c);
        EXPECT(gbc.readMem(0xb6a2), 0x3a);
        // C0 0399
        gbc.setState(0xbb16, 0xfa7b, 0x7590, 0x970f, 0x369c, 0x3a46, 0x1, 0x0);
        gbc.writeMem(0xbb16, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfa7b);
        EXPECT(gbc.pc(), 0xbb17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb16), 0xc0);
        // C0 039A
        gbc.setState(0x920b, 0xdadd, 0x7370, 0xcc07, 0xfe1f, 0x66ff, 0x1, 0x0);
        gbc.writeMem(0x920b, { 0xc0 });
        gbc.writeMem(0xdadd, { 0x40, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdadf);
        EXPECT(gbc.pc(), 0xfb40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x920b), 0xc0);
        EXPECT(gbc.readMem(0xdadd), 0x40);
        EXPECT(gbc.readMem(0xdade), 0xfb);
        // C0 039B
        gbc.setState(0x3c0d, 0xab2d, 0x5990, 0x4a2c, 0xf3db, 0x67ee, 0x0, 0x0);
        gbc.writeMem(0x3c0d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xab2d);
        EXPECT(gbc.pc(), 0x3c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 039C
        gbc.setState(0xa912, 0x7ed3, 0x52c0, 0x27a, 0xbf7f, 0x863f, 0x1, 0x0);
        gbc.writeMem(0xa912, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7ed3);
        EXPECT(gbc.pc(), 0xa913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa912), 0xc0);
        // C0 039D
        gbc.setState(0x5e7f, 0xd52f, 0x4f0, 0xae3, 0xda7d, 0x6d31, 0x0, 0x0);
        gbc.writeMem(0x5e7f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd52f);
        EXPECT(gbc.pc(), 0x5e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 039E
        gbc.setState(0x1fae, 0x2480, 0x2640, 0xc739, 0x969f, 0x57dd, 0x0, 0x0);
        gbc.writeMem(0x1fae, { 0xc0 });
        gbc.writeMem(0x2480, { 0xb9, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2482);
        EXPECT(gbc.pc(), 0xc1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 039F
        gbc.setState(0x7913, 0x2b88, 0x3c10, 0x3ab4, 0x2833, 0xf3dc, 0x0, 0x1);
        gbc.writeMem(0x2b88, { 0xa1, 0x5d });
        gbc.writeMem(0x7913, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2b8a);
        EXPECT(gbc.pc(), 0x5da1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03A0
        gbc.setState(0x2003, 0xc2ce, 0x6770, 0x978, 0x88ff, 0xa650, 0x0, 0x1);
        gbc.writeMem(0x2003, { 0xc0 });
        gbc.writeMem(0xc2ce, { 0x14, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc2d0);
        EXPECT(gbc.pc(), 0x5514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ce), 0x14);
        EXPECT(gbc.readMem(0xc2cf), 0x55);
        // C0 03A1
        gbc.setState(0xd2d1, 0xb17d, 0x860, 0x6fe8, 0x17cb, 0x7ac3, 0x1, 0x1);
        gbc.writeMem(0xb17d, { 0x7a, 0xd5 });
        gbc.writeMem(0xd2d1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb17f);
        EXPECT(gbc.pc(), 0xd57a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17d), 0x7a);
        EXPECT(gbc.readMem(0xb17e), 0xd5);
        EXPECT(gbc.readMem(0xd2d1), 0xc0);
        // C0 03A2
        gbc.setState(0x1e8a, 0x5f25, 0x580, 0xf5a7, 0xde61, 0x71df, 0x1, 0x0);
        gbc.writeMem(0x1e8a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5f25);
        EXPECT(gbc.pc(), 0x1e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 03A3
        gbc.setState(0x16, 0x9770, 0x2350, 0x6e66, 0xa403, 0xf830, 0x1, 0x0);
        gbc.writeMem(0x16, { 0xc0 });
        gbc.writeMem(0x9770, { 0x7e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9772);
        EXPECT(gbc.pc(), 0x6e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9770), 0x7e);
        EXPECT(gbc.readMem(0x9771), 0x6e);
        // C0 03A4
        gbc.setState(0xa78f, 0x673a, 0xaeb0, 0xd0f1, 0x3646, 0x8f83, 0x1, 0x1);
        gbc.writeMem(0xa78f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x673a);
        EXPECT(gbc.pc(), 0xa790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78f), 0xc0);
        // C0 03A5
        gbc.setState(0x6086, 0xeefc, 0x9a0, 0xe95d, 0xcb1b, 0x16d3, 0x0, 0x1);
        gbc.writeMem(0x6086, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xeefc);
        EXPECT(gbc.pc(), 0x6087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // C0 03A6
        gbc.setState(0xac7c, 0xf853, 0x8500, 0x3a40, 0x5cbe, 0xaab5, 0x0, 0x1);
        gbc.writeMem(0xac7c, { 0xc0 });
        gbc.writeMem(0xf853, { 0x51, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf855);
        EXPECT(gbc.pc(), 0x351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac7c), 0xc0);
        EXPECT(gbc.readMem(0xf853), 0x51);
        EXPECT(gbc.readMem(0xf854), 0x3);
        // C0 03A7
        gbc.setState(0xdf1b, 0xb562, 0x7480, 0x285a, 0xeb46, 0xb8a2, 0x1, 0x1);
        gbc.writeMem(0xdf1b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb562);
        EXPECT(gbc.pc(), 0xdf1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1b), 0xc0);
        // C0 03A8
        gbc.setState(0xebc6, 0x13f3, 0x7fc0, 0xfa48, 0x1382, 0x96ab, 0x1, 0x0);
        gbc.writeMem(0xebc6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x13f3);
        EXPECT(gbc.pc(), 0xebc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc6), 0xc0);
        // C0 03AA
        gbc.setState(0xabca, 0x39c2, 0x44a0, 0xf58c, 0x885f, 0x6403, 0x0, 0x1);
        gbc.writeMem(0xabca, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x39c2);
        EXPECT(gbc.pc(), 0xabcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabca), 0xc0);
        // C0 03AB
        gbc.setState(0xdb83, 0x180, 0x1ee0, 0xd6d0, 0x7639, 0x994a, 0x0, 0x0);
        gbc.writeMem(0xdb83, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x180);
        EXPECT(gbc.pc(), 0xdb84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb83), 0xc0);
        // C0 03AC
        gbc.setState(0xeaab, 0xe229, 0xa2d0, 0x68e2, 0xe31c, 0x6e25, 0x0, 0x1);
        gbc.writeMem(0xeaab, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe229);
        EXPECT(gbc.pc(), 0xeaac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaab), 0xc0);
        // C0 03AD
        gbc.setState(0x74b4, 0xadcb, 0x44f0, 0xa596, 0x64, 0xff2e, 0x0, 0x0);
        gbc.writeMem(0x74b4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xadcb);
        EXPECT(gbc.pc(), 0x74b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 03AE
        gbc.setState(0x5667, 0xdc77, 0xf620, 0x1a33, 0x7f47, 0x3fa3, 0x0, 0x0);
        gbc.writeMem(0x5667, { 0xc0 });
        gbc.writeMem(0xdc77, { 0x30, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdc79);
        EXPECT(gbc.pc(), 0xe30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc77), 0x30);
        EXPECT(gbc.readMem(0xdc78), 0xe);
        // C0 03AF
        gbc.setState(0x6f94, 0x9327, 0xe2c0, 0xb527, 0x5de0, 0xbc06, 0x0, 0x0);
        gbc.writeMem(0x6f94, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9327);
        EXPECT(gbc.pc(), 0x6f95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 03B0
        gbc.setState(0xa269, 0xf3c5, 0x8c50, 0x3442, 0xa6f5, 0xa72a, 0x0, 0x1);
        gbc.writeMem(0xa269, { 0xc0 });
        gbc.writeMem(0xf3c5, { 0x9c, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf3c7);
        EXPECT(gbc.pc(), 0xac9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa269), 0xc0);
        EXPECT(gbc.readMem(0xf3c5), 0x9c);
        EXPECT(gbc.readMem(0xf3c6), 0xac);
        // C0 03B1
        gbc.setState(0x3279, 0x6c0b, 0x8a90, 0xaa5e, 0x81d0, 0x45e0, 0x1, 0x0);
        gbc.writeMem(0x3279, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6c0b);
        EXPECT(gbc.pc(), 0x327a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03B2
        gbc.setState(0xbc19, 0xe767, 0x7aa0, 0x24df, 0x5502, 0xa2af, 0x0, 0x0);
        gbc.writeMem(0xbc19, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe767);
        EXPECT(gbc.pc(), 0xbc1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc19), 0xc0);
        // C0 03B3
        gbc.setState(0x1638, 0x2d94, 0xee40, 0xae61, 0xe283, 0x4af1, 0x0, 0x0);
        gbc.writeMem(0x1638, { 0xc0 });
        gbc.writeMem(0x2d94, { 0xbd, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2d96);
        EXPECT(gbc.pc(), 0x6fbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 03B4
        gbc.setState(0xb88e, 0x8ffb, 0x29e0, 0x8883, 0xe70c, 0xacca, 0x0, 0x1);
        gbc.writeMem(0xb88e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8ffb);
        EXPECT(gbc.pc(), 0xb88f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb88e), 0xc0);
        // C0 03B5
        gbc.setState(0x6275, 0xfc9f, 0x4430, 0x61ad, 0x2ab7, 0xee22, 0x1, 0x1);
        gbc.writeMem(0x6275, { 0xc0 });
        gbc.writeMem(0xfc9f, { 0xe4, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfca1);
        EXPECT(gbc.pc(), 0xeee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc9f), 0xe4);
        EXPECT(gbc.readMem(0xfca0), 0xee);
        // C0 03B6
        gbc.setState(0x5ec, 0x3e1e, 0x2400, 0xf862, 0x163e, 0xe773, 0x0, 0x1);
        gbc.writeMem(0x5ec, { 0xc0 });
        gbc.writeMem(0x3e1e, { 0x74, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3e20);
        EXPECT(gbc.pc(), 0xeb74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 03B9
        gbc.setState(0x6aa5, 0x916a, 0x5240, 0x4440, 0xe075, 0x838d, 0x1, 0x1);
        gbc.writeMem(0x6aa5, { 0xc0 });
        gbc.writeMem(0x916a, { 0x3e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x916c);
        EXPECT(gbc.pc(), 0x903e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x916a), 0x3e);
        EXPECT(gbc.readMem(0x916b), 0x90);
        // C0 03BA
        gbc.setState(0xe1, 0x4a9f, 0x2ad0, 0xe3fa, 0x42f0, 0x354a, 0x0, 0x1);
        gbc.writeMem(0xe1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4a9f);
        EXPECT(gbc.pc(), 0xe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03BB
        gbc.setState(0xeeb8, 0x1f05, 0xda0, 0xc12, 0xbe6c, 0x21ef, 0x0, 0x1);
        gbc.writeMem(0xeeb8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1f05);
        EXPECT(gbc.pc(), 0xeeb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb8), 0xc0);
        // C0 03BC
        gbc.setState(0x6c83, 0x8272, 0xc5b0, 0x3d0b, 0xda67, 0x85e, 0x1, 0x1);
        gbc.writeMem(0x6c83, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8272);
        EXPECT(gbc.pc(), 0x6c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 03BD
        gbc.setState(0xbc7e, 0x7e7d, 0xdd90, 0x1dfb, 0xde18, 0xceec, 0x1, 0x1);
        gbc.writeMem(0xbc7e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7e7d);
        EXPECT(gbc.pc(), 0xbc7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7e), 0xc0);
        // C0 03BE
        gbc.setState(0x4c6f, 0x4d19, 0x1410, 0x5699, 0x6274, 0x5106, 0x0, 0x0);
        gbc.writeMem(0x4c6f, { 0xc0 });
        gbc.writeMem(0x4d19, { 0x5d, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4d1b);
        EXPECT(gbc.pc(), 0xd95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03BF
        gbc.setState(0x9797, 0x3aea, 0x3730, 0x2787, 0xe4a7, 0x2c1f, 0x0, 0x1);
        gbc.writeMem(0x3aea, { 0x96, 0xde });
        gbc.writeMem(0x9797, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3aec);
        EXPECT(gbc.pc(), 0xde96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9797), 0xc0);
        // C0 03C0
        gbc.setState(0x237, 0xcb5c, 0x6db0, 0xa00d, 0xad36, 0xb583, 0x0, 0x0);
        gbc.writeMem(0x237, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcb5c);
        EXPECT(gbc.pc(), 0x238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 03C1
        gbc.setState(0xf7e, 0xcc0, 0xd70, 0x98de, 0x44c2, 0xb5e3, 0x1, 0x0);
        gbc.writeMem(0xcc0, { 0x40, 0xf });
        gbc.writeMem(0xf7e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcc2);
        EXPECT(gbc.pc(), 0xf40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 03C2
        gbc.setState(0xa36e, 0x807b, 0x7e10, 0xb3a2, 0xf0e7, 0x88e6, 0x0, 0x1);
        gbc.writeMem(0x807b, { 0x8f, 0xb0 });
        gbc.writeMem(0xa36e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x807d);
        EXPECT(gbc.pc(), 0xb08f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807b), 0x8f);
        EXPECT(gbc.readMem(0x807c), 0xb0);
        EXPECT(gbc.readMem(0xa36e), 0xc0);
        // C0 03C3
        gbc.setState(0x9466, 0x7ab4, 0x3b10, 0x60b8, 0x72d5, 0x3dd7, 0x0, 0x1);
        gbc.writeMem(0x7ab4, { 0xdf, 0x2b });
        gbc.writeMem(0x9466, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7ab6);
        EXPECT(gbc.pc(), 0x2bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9466), 0xc0);
        // C0 03C4
        gbc.setState(0x755d, 0xa9c8, 0x18c0, 0xe66e, 0x2ba, 0x937c, 0x0, 0x0);
        gbc.writeMem(0x755d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa9c8);
        EXPECT(gbc.pc(), 0x755e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 03C5
        gbc.setState(0x753, 0x5305, 0x8890, 0x6fd2, 0xdeb9, 0x3ea7, 0x1, 0x0);
        gbc.writeMem(0x753, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5305);
        EXPECT(gbc.pc(), 0x754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03C6
        gbc.setState(0x430a, 0x7ac0, 0x5cd0, 0xe775, 0xf61d, 0x8df, 0x0, 0x1);
        gbc.writeMem(0x430a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7ac0);
        EXPECT(gbc.pc(), 0x430b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03C8
        gbc.setState(0x449d, 0x4a77, 0xe1b0, 0x731, 0xa17, 0x17a4, 0x1, 0x0);
        gbc.writeMem(0x449d, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4a77);
        EXPECT(gbc.pc(), 0x449e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 03C9
        gbc.setState(0xb8de, 0x9f2b, 0xa1e0, 0x5b5f, 0xc2ed, 0x1cbe, 0x0, 0x1);
        gbc.writeMem(0xb8de, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9f2b);
        EXPECT(gbc.pc(), 0xb8df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8de), 0xc0);
        // C0 03CA
        gbc.setState(0x4c0c, 0x8d39, 0x7880, 0xbb78, 0x1576, 0x3c26, 0x1, 0x1);
        gbc.writeMem(0x4c0c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8d39);
        EXPECT(gbc.pc(), 0x4c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 03CB
        gbc.setState(0x739, 0x742, 0xc850, 0x2036, 0x92b9, 0xf19a, 0x0, 0x1);
        gbc.writeMem(0x739, { 0xc0 });
        gbc.writeMem(0x742, { 0x95, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x744);
        EXPECT(gbc.pc(), 0x7795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03CC
        gbc.setState(0xce56, 0xa774, 0xadb0, 0xcbbc, 0x3ae1, 0xdeb4, 0x1, 0x0);
        gbc.writeMem(0xce56, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa774);
        EXPECT(gbc.pc(), 0xce57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce56), 0xc0);
        // C0 03CD
        gbc.setState(0xabdf, 0xdf90, 0x6e20, 0xaa56, 0x426e, 0x6ffc, 0x1, 0x1);
        gbc.writeMem(0xabdf, { 0xc0 });
        gbc.writeMem(0xdf90, { 0x55, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdf92);
        EXPECT(gbc.pc(), 0xce55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabdf), 0xc0);
        EXPECT(gbc.readMem(0xdf90), 0x55);
        EXPECT(gbc.readMem(0xdf91), 0xce);
        // C0 03CE
        gbc.setState(0xda1, 0x3710, 0xf4c0, 0xf8ab, 0x4d4f, 0x19c9, 0x0, 0x0);
        gbc.writeMem(0xda1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3710);
        EXPECT(gbc.pc(), 0xda2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 03CF
        gbc.setState(0x779f, 0xb6f, 0xd070, 0x9abd, 0xef96, 0xa675, 0x0, 0x1);
        gbc.writeMem(0xb6f, { 0x27, 0x1c });
        gbc.writeMem(0x779f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb71);
        EXPECT(gbc.pc(), 0x1c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 03D0
        gbc.setState(0x4d2a, 0x5411, 0xa730, 0x45d5, 0x3210, 0xef1d, 0x0, 0x0);
        gbc.writeMem(0x4d2a, { 0xc0 });
        gbc.writeMem(0x5411, { 0x18, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5413);
        EXPECT(gbc.pc(), 0xb18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 03D1
        gbc.setState(0xaa45, 0x33f3, 0x5220, 0x1d, 0x45b0, 0xe076, 0x1, 0x1);
        gbc.writeMem(0x33f3, { 0x92, 0xf2 });
        gbc.writeMem(0xaa45, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x33f5);
        EXPECT(gbc.pc(), 0xf292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa45), 0xc0);
        // C0 03D2
        gbc.setState(0x473e, 0x4060, 0xb0d0, 0xfe20, 0x3bcf, 0xaedc, 0x1, 0x0);
        gbc.writeMem(0x473e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4060);
        EXPECT(gbc.pc(), 0x473f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03D3
        gbc.setState(0x1c6b, 0x8887, 0x9fd0, 0x4d2f, 0x9a9d, 0xaa08, 0x1, 0x0);
        gbc.writeMem(0x1c6b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8887);
        EXPECT(gbc.pc(), 0x1c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03D4
        gbc.setState(0x3a2e, 0x3778, 0xa240, 0xf8dc, 0xdf71, 0xbbc5, 0x1, 0x0);
        gbc.writeMem(0x3778, { 0x33, 0xec });
        gbc.writeMem(0x3a2e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x377a);
        EXPECT(gbc.pc(), 0xec33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 03D5
        gbc.setState(0x9ca9, 0x9ea5, 0x14f0, 0x35bf, 0xbb55, 0xb0d3, 0x1, 0x0);
        gbc.writeMem(0x9ca9, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9ea5);
        EXPECT(gbc.pc(), 0x9caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca9), 0xc0);
        // C0 03D7
        gbc.setState(0xe2ee, 0x2fc7, 0x7c60, 0xa86d, 0x81d5, 0xfb70, 0x1, 0x0);
        gbc.writeMem(0x2fc7, { 0x45, 0xd5 });
        gbc.writeMem(0xe2ee, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2fc9);
        EXPECT(gbc.pc(), 0xd545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ee), 0xc0);
        // C0 03D8
        gbc.setState(0x77a, 0xff58, 0x1a50, 0xee42, 0xeab, 0xdcdc, 0x0, 0x0);
        gbc.writeMem(0x77a, { 0xc0 });
        gbc.writeMem(0xff58, { 0x10, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xff5a);
        EXPECT(gbc.pc(), 0xda10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff58), 0x10);
        EXPECT(gbc.readMem(0xff59), 0xda);
        // C0 03D9
        gbc.setState(0x9d12, 0xf130, 0xe820, 0x31d0, 0x70b4, 0xd17d, 0x1, 0x0);
        gbc.writeMem(0x9d12, { 0xc0 });
        gbc.writeMem(0xf130, { 0x99, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf132);
        EXPECT(gbc.pc(), 0x9b99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d12), 0xc0);
        EXPECT(gbc.readMem(0xf130), 0x99);
        EXPECT(gbc.readMem(0xf131), 0x9b);
        // C0 03DA
        gbc.setState(0xa89e, 0x8651, 0x1360, 0xcd99, 0xeda, 0x370e, 0x1, 0x1);
        gbc.writeMem(0x8651, { 0x55, 0x91 });
        gbc.writeMem(0xa89e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8653);
        EXPECT(gbc.pc(), 0x9155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8651), 0x55);
        EXPECT(gbc.readMem(0x8652), 0x91);
        EXPECT(gbc.readMem(0xa89e), 0xc0);
        // C0 03DB
        gbc.setState(0x2006, 0xef63, 0x63d0, 0x6fab, 0x1d7a, 0xb304, 0x0, 0x1);
        gbc.writeMem(0x2006, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xef63);
        EXPECT(gbc.pc(), 0x2007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03DC
        gbc.setState(0x27a3, 0x6868, 0x2240, 0xeab9, 0x2d7, 0x46a7, 0x1, 0x0);
        gbc.writeMem(0x27a3, { 0xc0 });
        gbc.writeMem(0x6868, { 0x45, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x686a);
        EXPECT(gbc.pc(), 0x9f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 03DD
        gbc.setState(0xc3d8, 0x5dbf, 0x7990, 0x9823, 0x8027, 0xbe31, 0x0, 0x0);
        gbc.writeMem(0xc3d8, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5dbf);
        EXPECT(gbc.pc(), 0xc3d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d8), 0xc0);
        // C0 03DE
        gbc.setState(0xc586, 0x81b0, 0x1a50, 0x33e3, 0xd7bc, 0xa2f4, 0x0, 0x0);
        gbc.writeMem(0x81b0, { 0x45, 0xa8 });
        gbc.writeMem(0xc586, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x81b2);
        EXPECT(gbc.pc(), 0xa845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b0), 0x45);
        EXPECT(gbc.readMem(0x81b1), 0xa8);
        EXPECT(gbc.readMem(0xc586), 0xc0);
        // C0 03DF
        gbc.setState(0x1554, 0x9633, 0x480, 0x26d4, 0x1d2d, 0xbea2, 0x0, 0x1);
        gbc.writeMem(0x1554, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9633);
        EXPECT(gbc.pc(), 0x1555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // C0 03E0
        gbc.setState(0x29a4, 0xe8b, 0xe510, 0x5968, 0xf461, 0x8116, 0x1, 0x1);
        gbc.writeMem(0xe8b, { 0x93, 0xb6 });
        gbc.writeMem(0x29a4, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe8d);
        EXPECT(gbc.pc(), 0xb693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // C0 03E1
        gbc.setState(0xc570, 0xe3bb, 0x6180, 0x5823, 0x8795, 0xf691, 0x0, 0x0);
        gbc.writeMem(0xc570, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe3bb);
        EXPECT(gbc.pc(), 0xc571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc570), 0xc0);
        // C0 03E2
        gbc.setState(0x4ea6, 0x1a3e, 0xbb0, 0xbc7d, 0x3a1b, 0xbc62, 0x1, 0x0);
        gbc.writeMem(0x4ea6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1a3e);
        EXPECT(gbc.pc(), 0x4ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 03E3
        gbc.setState(0xae25, 0xd053, 0x320, 0xf85f, 0x7195, 0x408d, 0x1, 0x0);
        gbc.writeMem(0xae25, { 0xc0 });
        gbc.writeMem(0xd053, { 0xa, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd055);
        EXPECT(gbc.pc(), 0x210a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae25), 0xc0);
        EXPECT(gbc.readMem(0xd053), 0xa);
        EXPECT(gbc.readMem(0xd054), 0x21);
        // C0 03E6
        gbc.setState(0x62e, 0xa120, 0x94f0, 0xff74, 0xa72b, 0x5152, 0x0, 0x1);
        gbc.writeMem(0x62e, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa120);
        EXPECT(gbc.pc(), 0x62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // C0 03E7
        gbc.setState(0x1708, 0x3906, 0x47a0, 0xc045, 0xbc2a, 0xcae3, 0x1, 0x0);
        gbc.writeMem(0x1708, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3906);
        EXPECT(gbc.pc(), 0x1709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
