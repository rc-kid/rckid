    TEST(gbcemu, opcode_cb_a1) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB A1 0000
        gbc.setState(0x1e82, 0x733c, 0xa260, 0x9384, 0x9154, 0x45c8, 0x1, 0x1);
        gbc.writeMem(0x1e82, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x733c, gbc.sp());
        EXPECT(0x1e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0001
        gbc.setState(0x8bef, 0x4e2d, 0x70b0, 0x9d4b, 0x7cdd, 0xc5d8, 0x0, 0x1);
        gbc.writeMem(0x8bef, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0x8bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bef));
        EXPECT(0xa1, gbc.readMem(0x8bf0));
        // CB A1 0002
        gbc.setState(0x389d, 0x3e8e, 0x9da0, 0x827f, 0x2b7c, 0x469e, 0x0, 0x1);
        gbc.writeMem(0x389d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3e8e, gbc.sp());
        EXPECT(0x389f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0003
        gbc.setState(0x6c00, 0x2963, 0xa660, 0x238a, 0x2700, 0x1b02, 0x0, 0x0);
        gbc.writeMem(0x6c00, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2963, gbc.sp());
        EXPECT(0x6c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0004
        gbc.setState(0xa682, 0x1f01, 0xe700, 0xeeef, 0xb951, 0x5c39, 0x1, 0x1);
        gbc.writeMem(0xa682, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1f01, gbc.sp());
        EXPECT(0xa684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa682));
        EXPECT(0xa1, gbc.readMem(0xa683));
        // CB A1 0005
        gbc.setState(0x9bb9, 0x9588, 0x3580, 0x1269, 0x647e, 0xd649, 0x0, 0x0);
        gbc.writeMem(0x9bb9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9588, gbc.sp());
        EXPECT(0x9bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb9));
        EXPECT(0xa1, gbc.readMem(0x9bba));
        // CB A1 0006
        gbc.setState(0x48d7, 0x1fa7, 0xa9f0, 0x550e, 0x31b7, 0x25b8, 0x0, 0x0);
        gbc.writeMem(0x48d7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1fa7, gbc.sp());
        EXPECT(0x48d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0007
        gbc.setState(0x10ce, 0x8b5, 0xf40, 0xd40, 0xee1c, 0x2fe8, 0x1, 0x0);
        gbc.writeMem(0x10ce, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8b5, gbc.sp());
        EXPECT(0x10d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0008
        gbc.setState(0x207c, 0x38dc, 0xae30, 0xfa81, 0xad4b, 0xbecd, 0x1, 0x0);
        gbc.writeMem(0x207c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x38dc, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0009
        gbc.setState(0x7b55, 0x81e0, 0xd6a0, 0x9734, 0x67bb, 0xf44c, 0x0, 0x1);
        gbc.writeMem(0x7b55, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x81e0, gbc.sp());
        EXPECT(0x7b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 000A
        gbc.setState(0xb568, 0xd85f, 0xcd10, 0xe0de, 0xc7e5, 0x384b, 0x1, 0x0);
        gbc.writeMem(0xb568, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd85f, gbc.sp());
        EXPECT(0xb56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb568));
        EXPECT(0xa1, gbc.readMem(0xb569));
        // CB A1 000B
        gbc.setState(0xcbdc, 0x956, 0xddb0, 0xb0cd, 0x7755, 0x91bb, 0x1, 0x0);
        gbc.writeMem(0xcbdc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x956, gbc.sp());
        EXPECT(0xcbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbdc));
        EXPECT(0xa1, gbc.readMem(0xcbdd));
        // CB A1 000C
        gbc.setState(0x9ac3, 0xd817, 0x5fd0, 0x5ddc, 0xe88f, 0xe871, 0x1, 0x1);
        gbc.writeMem(0x9ac3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd817, gbc.sp());
        EXPECT(0x9ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac3));
        EXPECT(0xa1, gbc.readMem(0x9ac4));
        // CB A1 000D
        gbc.setState(0x81ad, 0x875a, 0xe3f0, 0xc05f, 0xb933, 0xea67, 0x1, 0x1);
        gbc.writeMem(0x81ad, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x875a, gbc.sp());
        EXPECT(0x81af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ad));
        EXPECT(0xa1, gbc.readMem(0x81ae));
        // CB A1 000E
        gbc.setState(0xbe18, 0x1f41, 0xd9c0, 0x1974, 0xbc5d, 0xbace, 0x0, 0x1);
        gbc.writeMem(0xbe18, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1f41, gbc.sp());
        EXPECT(0xbe1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe18));
        EXPECT(0xa1, gbc.readMem(0xbe19));
        // CB A1 000F
        gbc.setState(0xeec6, 0xdf17, 0x72e0, 0xfc62, 0x2186, 0x30a8, 0x0, 0x0);
        gbc.writeMem(0xeec6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0xeec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec6));
        EXPECT(0xa1, gbc.readMem(0xeec7));
        // CB A1 0010
        gbc.setState(0xdce1, 0x4d07, 0xa030, 0xfe28, 0xa821, 0x5986, 0x0, 0x0);
        gbc.writeMem(0xdce1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4d07, gbc.sp());
        EXPECT(0xdce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce1));
        EXPECT(0xa1, gbc.readMem(0xdce2));
        // CB A1 0011
        gbc.setState(0x339a, 0xfb93, 0xf230, 0x58ff, 0xf84f, 0xa035, 0x0, 0x1);
        gbc.writeMem(0x339a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfb93, gbc.sp());
        EXPECT(0x339c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0012
        gbc.setState(0x1047, 0x178b, 0x310, 0xf418, 0x3a37, 0xa5ad, 0x0, 0x1);
        gbc.writeMem(0x1047, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x178b, gbc.sp());
        EXPECT(0x1049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0013
        gbc.setState(0xaa94, 0x6099, 0xc7b0, 0x9a75, 0xdf2b, 0xa792, 0x0, 0x0);
        gbc.writeMem(0xaa94, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6099, gbc.sp());
        EXPECT(0xaa96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa94));
        EXPECT(0xa1, gbc.readMem(0xaa95));
        // CB A1 0014
        gbc.setState(0xb494, 0x410c, 0xa260, 0x422e, 0x933d, 0x6f03, 0x0, 0x0);
        gbc.writeMem(0xb494, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x410c, gbc.sp());
        EXPECT(0xb496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb494));
        EXPECT(0xa1, gbc.readMem(0xb495));
        // CB A1 0016
        gbc.setState(0xd92c, 0x54f6, 0x3960, 0x8537, 0x3687, 0x392d, 0x1, 0x0);
        gbc.writeMem(0xd92c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x54f6, gbc.sp());
        EXPECT(0xd92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92c));
        EXPECT(0xa1, gbc.readMem(0xd92d));
        // CB A1 0017
        gbc.setState(0xe7ed, 0xa214, 0x2e0, 0x9d9e, 0x6d49, 0x6cb8, 0x1, 0x0);
        gbc.writeMem(0xe7ed, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa214, gbc.sp());
        EXPECT(0xe7ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ed));
        EXPECT(0xa1, gbc.readMem(0xe7ee));
        // CB A1 0018
        gbc.setState(0x112e, 0xd257, 0x1f50, 0x1cb1, 0x3af1, 0x4122, 0x0, 0x0);
        gbc.writeMem(0x112e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd257, gbc.sp());
        EXPECT(0x1130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 001A
        gbc.setState(0x206e, 0x9044, 0x5d80, 0x1248, 0x3cdf, 0xfded, 0x0, 0x0);
        gbc.writeMem(0x206e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9044, gbc.sp());
        EXPECT(0x2070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 001B
        gbc.setState(0x1c10, 0xaaaf, 0x6fd0, 0x1971, 0x3621, 0x7998, 0x1, 0x0);
        gbc.writeMem(0x1c10, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xaaaf, gbc.sp());
        EXPECT(0x1c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 001C
        gbc.setState(0x547f, 0xa8a8, 0xd8a0, 0xc5bd, 0xcf08, 0xf81e, 0x0, 0x1);
        gbc.writeMem(0x547f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0x5481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 001D
        gbc.setState(0x4529, 0xb6b7, 0x3730, 0xac36, 0xcf46, 0xe017, 0x1, 0x0);
        gbc.writeMem(0x4529, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb6b7, gbc.sp());
        EXPECT(0x452b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 001F
        gbc.setState(0x15ff, 0x7f29, 0xd370, 0x9834, 0x1769, 0x806a, 0x1, 0x0);
        gbc.writeMem(0x15ff, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7f29, gbc.sp());
        EXPECT(0x1601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0020
        gbc.setState(0x849b, 0xadf1, 0xb250, 0xca23, 0xf6d4, 0x9062, 0x0, 0x0);
        gbc.writeMem(0x849b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xadf1, gbc.sp());
        EXPECT(0x849d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849b));
        EXPECT(0xa1, gbc.readMem(0x849c));
        // CB A1 0021
        gbc.setState(0x5327, 0xc893, 0xcf0, 0x2562, 0x3437, 0xffef, 0x0, 0x0);
        gbc.writeMem(0x5327, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc893, gbc.sp());
        EXPECT(0x5329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0022
        gbc.setState(0x3468, 0xce0f, 0xdb30, 0xa3b, 0x6f01, 0x687e, 0x1, 0x0);
        gbc.writeMem(0x3468, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xce0f, gbc.sp());
        EXPECT(0x346a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0023
        gbc.setState(0x4b42, 0xe98d, 0x4b40, 0xde5, 0x795e, 0x4501, 0x0, 0x0);
        gbc.writeMem(0x4b42, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe98d, gbc.sp());
        EXPECT(0x4b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0024
        gbc.setState(0x73f5, 0x793a, 0x1090, 0xcd63, 0x47c5, 0xa462, 0x0, 0x0);
        gbc.writeMem(0x73f5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x793a, gbc.sp());
        EXPECT(0x73f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0025
        gbc.setState(0xdc01, 0x3268, 0xe2d0, 0xbc30, 0x5d07, 0x74b0, 0x1, 0x0);
        gbc.writeMem(0xdc01, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3268, gbc.sp());
        EXPECT(0xdc03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc01));
        EXPECT(0xa1, gbc.readMem(0xdc02));
        // CB A1 0026
        gbc.setState(0x338b, 0x4992, 0x87f0, 0xfc65, 0xa29b, 0x63c, 0x1, 0x1);
        gbc.writeMem(0x338b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4992, gbc.sp());
        EXPECT(0x338d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0027
        gbc.setState(0x2b0d, 0x3d0f, 0xcb80, 0x87fb, 0xc00b, 0x3b27, 0x1, 0x0);
        gbc.writeMem(0x2b0d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3d0f, gbc.sp());
        EXPECT(0x2b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0028
        gbc.setState(0xded4, 0xfb22, 0x39a0, 0xeef2, 0xf917, 0xf39c, 0x0, 0x1);
        gbc.writeMem(0xded4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfb22, gbc.sp());
        EXPECT(0xded6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded4));
        EXPECT(0xa1, gbc.readMem(0xded5));
        // CB A1 0029
        gbc.setState(0x4748, 0x9bfb, 0xace0, 0x23bd, 0x2de1, 0x521f, 0x1, 0x0);
        gbc.writeMem(0x4748, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9bfb, gbc.sp());
        EXPECT(0x474a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 002A
        gbc.setState(0x24af, 0xd2aa, 0xccf0, 0x84b0, 0xd29a, 0xbf54, 0x0, 0x0);
        gbc.writeMem(0x24af, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd2aa, gbc.sp());
        EXPECT(0x24b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 002B
        gbc.setState(0x22ee, 0xfc71, 0x7c10, 0x3110, 0x463f, 0x16f6, 0x1, 0x0);
        gbc.writeMem(0x22ee, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfc71, gbc.sp());
        EXPECT(0x22f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 002C
        gbc.setState(0x3f12, 0xc04b, 0x260, 0x6e8, 0x5b27, 0x66cb, 0x0, 0x0);
        gbc.writeMem(0x3f12, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc04b, gbc.sp());
        EXPECT(0x3f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 002D
        gbc.setState(0xdd0d, 0x7494, 0x2820, 0x1866, 0x3baa, 0x76d6, 0x0, 0x1);
        gbc.writeMem(0xdd0d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7494, gbc.sp());
        EXPECT(0xdd0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0d));
        EXPECT(0xa1, gbc.readMem(0xdd0e));
        // CB A1 002E
        gbc.setState(0x2ae5, 0xfe5f, 0x3bf0, 0x7c64, 0x3775, 0x6aea, 0x1, 0x1);
        gbc.writeMem(0x2ae5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfe5f, gbc.sp());
        EXPECT(0x2ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 002F
        gbc.setState(0x3007, 0x69df, 0xafe0, 0xcd21, 0x4ac9, 0x3091, 0x0, 0x1);
        gbc.writeMem(0x3007, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x69df, gbc.sp());
        EXPECT(0x3009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0030
        gbc.setState(0x728a, 0x53da, 0x3340, 0xc640, 0xa599, 0xb996, 0x0, 0x1);
        gbc.writeMem(0x728a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x53da, gbc.sp());
        EXPECT(0x728c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0031
        gbc.setState(0xb800, 0xffa8, 0x3da0, 0x87b6, 0xce2c, 0x8b87, 0x0, 0x1);
        gbc.writeMem(0xb800, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xffa8, gbc.sp());
        EXPECT(0xb802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb800));
        EXPECT(0xa1, gbc.readMem(0xb801));
        // CB A1 0032
        gbc.setState(0x9869, 0x4b99, 0xd150, 0xad6b, 0x1381, 0x2a47, 0x1, 0x1);
        gbc.writeMem(0x9869, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4b99, gbc.sp());
        EXPECT(0x986b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9869));
        EXPECT(0xa1, gbc.readMem(0x986a));
        // CB A1 0033
        gbc.setState(0x1252, 0x17ea, 0x6a40, 0x67f8, 0x93c1, 0xb178, 0x1, 0x0);
        gbc.writeMem(0x1252, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x17ea, gbc.sp());
        EXPECT(0x1254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0034
        gbc.setState(0x266f, 0xad9c, 0x3f20, 0x2b0c, 0x1e0d, 0xdb90, 0x1, 0x1);
        gbc.writeMem(0x266f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xad9c, gbc.sp());
        EXPECT(0x2671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0035
        gbc.setState(0x71b5, 0x7394, 0xaa90, 0xe943, 0x7336, 0xcef1, 0x1, 0x1);
        gbc.writeMem(0x71b5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7394, gbc.sp());
        EXPECT(0x71b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0036
        gbc.setState(0xdbe7, 0x7d31, 0x2650, 0x6d84, 0x1062, 0x4ab7, 0x0, 0x0);
        gbc.writeMem(0xdbe7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7d31, gbc.sp());
        EXPECT(0xdbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe7));
        EXPECT(0xa1, gbc.readMem(0xdbe8));
        // CB A1 0037
        gbc.setState(0x393e, 0x753f, 0x80e0, 0x68bf, 0x1df7, 0x4da1, 0x1, 0x1);
        gbc.writeMem(0x393e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x753f, gbc.sp());
        EXPECT(0x3940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0038
        gbc.setState(0xeeb7, 0x54ff, 0x380, 0xca51, 0xd4b6, 0x903e, 0x0, 0x0);
        gbc.writeMem(0xeeb7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x54ff, gbc.sp());
        EXPECT(0xeeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb7));
        EXPECT(0xa1, gbc.readMem(0xeeb8));
        // CB A1 0039
        gbc.setState(0x71c8, 0x8e85, 0x260, 0xb61f, 0xf054, 0xad93, 0x0, 0x1);
        gbc.writeMem(0x71c8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8e85, gbc.sp());
        EXPECT(0x71ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 003A
        gbc.setState(0x6252, 0x5252, 0x3300, 0x8f78, 0x2aa, 0x53e5, 0x0, 0x1);
        gbc.writeMem(0x6252, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5252, gbc.sp());
        EXPECT(0x6254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 003B
        gbc.setState(0x863f, 0x23ac, 0xc8a0, 0x707c, 0xab13, 0xb800, 0x0, 0x0);
        gbc.writeMem(0x863f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x23ac, gbc.sp());
        EXPECT(0x8641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863f));
        EXPECT(0xa1, gbc.readMem(0x8640));
        // CB A1 003C
        gbc.setState(0x7030, 0xc056, 0xc9f0, 0xdd19, 0x6d92, 0x3713, 0x1, 0x1);
        gbc.writeMem(0x7030, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc056, gbc.sp());
        EXPECT(0x7032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 003D
        gbc.setState(0x8fd0, 0xcee3, 0x8d10, 0xec62, 0xcbe, 0x5dd0, 0x0, 0x0);
        gbc.writeMem(0x8fd0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcee3, gbc.sp());
        EXPECT(0x8fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd0));
        EXPECT(0xa1, gbc.readMem(0x8fd1));
        // CB A1 003E
        gbc.setState(0x4472, 0x85d3, 0x6250, 0xd714, 0xfd4, 0x9cc8, 0x0, 0x1);
        gbc.writeMem(0x4472, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x85d3, gbc.sp());
        EXPECT(0x4474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 003F
        gbc.setState(0x32bc, 0x32b3, 0x7e50, 0x2674, 0x414c, 0x1194, 0x0, 0x1);
        gbc.writeMem(0x32bc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x32b3, gbc.sp());
        EXPECT(0x32be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0040
        gbc.setState(0x72d8, 0xd79a, 0x8330, 0x55f2, 0xf1e0, 0xf82e, 0x0, 0x1);
        gbc.writeMem(0x72d8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd79a, gbc.sp());
        EXPECT(0x72da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0041
        gbc.setState(0xe5fd, 0x3504, 0xba90, 0x427d, 0x59e0, 0x620, 0x1, 0x0);
        gbc.writeMem(0xe5fd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3504, gbc.sp());
        EXPECT(0xe5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5fd));
        EXPECT(0xa1, gbc.readMem(0xe5fe));
        // CB A1 0042
        gbc.setState(0xb218, 0xea5d, 0x68c0, 0x96c8, 0x6b34, 0xf00a, 0x1, 0x0);
        gbc.writeMem(0xb218, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xea5d, gbc.sp());
        EXPECT(0xb21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb218));
        EXPECT(0xa1, gbc.readMem(0xb219));
        // CB A1 0043
        gbc.setState(0x2b82, 0x5ed3, 0x5a50, 0xf566, 0x1a63, 0xda9a, 0x0, 0x0);
        gbc.writeMem(0x2b82, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5ed3, gbc.sp());
        EXPECT(0x2b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0044
        gbc.setState(0x26bd, 0xecc7, 0x3b20, 0x959, 0x5d5, 0xcffe, 0x1, 0x0);
        gbc.writeMem(0x26bd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xecc7, gbc.sp());
        EXPECT(0x26bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0046
        gbc.setState(0x107c, 0x131d, 0xc1c0, 0x4761, 0x3dba, 0xb7f9, 0x0, 0x0);
        gbc.writeMem(0x107c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x131d, gbc.sp());
        EXPECT(0x107e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0047
        gbc.setState(0x37d1, 0x4b82, 0x4b20, 0x75fd, 0x5282, 0xa6a6, 0x0, 0x0);
        gbc.writeMem(0x37d1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4b82, gbc.sp());
        EXPECT(0x37d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0048
        gbc.setState(0x5f11, 0x9c55, 0xd1c0, 0x2215, 0xcb3, 0xeb42, 0x0, 0x0);
        gbc.writeMem(0x5f11, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9c55, gbc.sp());
        EXPECT(0x5f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0049
        gbc.setState(0x52ab, 0x5ea2, 0xb7e0, 0x51ae, 0x842b, 0x8241, 0x1, 0x0);
        gbc.writeMem(0x52ab, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5ea2, gbc.sp());
        EXPECT(0x52ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 004B
        gbc.setState(0xe4c, 0xac6f, 0xc400, 0x1795, 0x707a, 0x4658, 0x0, 0x1);
        gbc.writeMem(0xe4c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xac6f, gbc.sp());
        EXPECT(0xe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 004C
        gbc.setState(0xdb63, 0xac36, 0x710, 0xc17, 0xb322, 0xe8a0, 0x1, 0x1);
        gbc.writeMem(0xdb63, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xac36, gbc.sp());
        EXPECT(0xdb65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb63));
        EXPECT(0xa1, gbc.readMem(0xdb64));
        // CB A1 004D
        gbc.setState(0x382e, 0xebf1, 0x9c90, 0xf979, 0xa5e5, 0x5785, 0x0, 0x1);
        gbc.writeMem(0x382e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xebf1, gbc.sp());
        EXPECT(0x3830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 004E
        gbc.setState(0x61ae, 0x8af7, 0xf2a0, 0x97f, 0xe636, 0x4aa, 0x1, 0x1);
        gbc.writeMem(0x61ae, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8af7, gbc.sp());
        EXPECT(0x61b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 004F
        gbc.setState(0x78f0, 0x20ef, 0x9750, 0xcb33, 0x1f7a, 0x4cd, 0x1, 0x1);
        gbc.writeMem(0x78f0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x20ef, gbc.sp());
        EXPECT(0x78f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0050
        gbc.setState(0xa9d7, 0xcfdc, 0xa7d0, 0xaaa1, 0xa5c4, 0x23c1, 0x1, 0x0);
        gbc.writeMem(0xa9d7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcfdc, gbc.sp());
        EXPECT(0xa9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d7));
        EXPECT(0xa1, gbc.readMem(0xa9d8));
        // CB A1 0051
        gbc.setState(0x6f3b, 0xb6d, 0x1a0, 0xc791, 0x5ac4, 0x3753, 0x0, 0x1);
        gbc.writeMem(0x6f3b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb6d, gbc.sp());
        EXPECT(0x6f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0052
        gbc.setState(0xb836, 0x3b48, 0xba40, 0x2c35, 0x6721, 0xb6c4, 0x1, 0x1);
        gbc.writeMem(0xb836, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3b48, gbc.sp());
        EXPECT(0xb838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb836));
        EXPECT(0xa1, gbc.readMem(0xb837));
        // CB A1 0053
        gbc.setState(0x1935, 0x10ea, 0x9790, 0xeb4d, 0x4f9a, 0xc723, 0x0, 0x1);
        gbc.writeMem(0x1935, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x10ea, gbc.sp());
        EXPECT(0x1937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0054
        gbc.setState(0x1eca, 0x8691, 0xebe0, 0xa2c2, 0xac51, 0x905b, 0x1, 0x0);
        gbc.writeMem(0x1eca, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8691, gbc.sp());
        EXPECT(0x1ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0055
        gbc.setState(0xe565, 0xdbf8, 0xe0f0, 0x4643, 0xba62, 0x57d0, 0x0, 0x1);
        gbc.writeMem(0xe565, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdbf8, gbc.sp());
        EXPECT(0xe567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe565));
        EXPECT(0xa1, gbc.readMem(0xe566));
        // CB A1 0056
        gbc.setState(0xc322, 0xaaa9, 0x1050, 0xe747, 0xfb, 0xc644, 0x1, 0x0);
        gbc.writeMem(0xc322, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaaa9, gbc.sp());
        EXPECT(0xc324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc322));
        EXPECT(0xa1, gbc.readMem(0xc323));
        // CB A1 0057
        gbc.setState(0xa240, 0x540f, 0xf550, 0xce50, 0x526a, 0x91a5, 0x1, 0x0);
        gbc.writeMem(0xa240, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x540f, gbc.sp());
        EXPECT(0xa242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa240));
        EXPECT(0xa1, gbc.readMem(0xa241));
        // CB A1 0058
        gbc.setState(0x6ad1, 0xcfbc, 0x2430, 0xddae, 0xc48a, 0x16dc, 0x1, 0x1);
        gbc.writeMem(0x6ad1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcfbc, gbc.sp());
        EXPECT(0x6ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0059
        gbc.setState(0xa290, 0xb45c, 0x5470, 0x5f7f, 0xd7fd, 0x2021, 0x1, 0x1);
        gbc.writeMem(0xa290, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb45c, gbc.sp());
        EXPECT(0xa292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa290));
        EXPECT(0xa1, gbc.readMem(0xa291));
        // CB A1 005A
        gbc.setState(0x3c5f, 0xfcdc, 0x5e90, 0xeacd, 0x6e8a, 0x85eb, 0x1, 0x0);
        gbc.writeMem(0x3c5f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfcdc, gbc.sp());
        EXPECT(0x3c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 005B
        gbc.setState(0x70ef, 0x7540, 0xcb50, 0x1c70, 0x1124, 0xade9, 0x0, 0x1);
        gbc.writeMem(0x70ef, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7540, gbc.sp());
        EXPECT(0x70f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 005C
        gbc.setState(0x1c30, 0xc75, 0x1fe0, 0x2818, 0xd1f4, 0xa59f, 0x1, 0x0);
        gbc.writeMem(0x1c30, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc75, gbc.sp());
        EXPECT(0x1c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 005D
        gbc.setState(0xb0b, 0x79a5, 0xab70, 0xbbc9, 0xdb6f, 0x2e94, 0x1, 0x1);
        gbc.writeMem(0xb0b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x79a5, gbc.sp());
        EXPECT(0xb0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 005E
        gbc.setState(0x756c, 0x697e, 0xdc30, 0x4a39, 0x31d8, 0x7f9, 0x0, 0x1);
        gbc.writeMem(0x756c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x697e, gbc.sp());
        EXPECT(0x756e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 005F
        gbc.setState(0x4891, 0xd053, 0x4260, 0x6a5b, 0xf17b, 0xfd2d, 0x1, 0x0);
        gbc.writeMem(0x4891, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd053, gbc.sp());
        EXPECT(0x4893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0060
        gbc.setState(0x9082, 0x55f6, 0xb660, 0x4559, 0x59a6, 0xabcf, 0x0, 0x1);
        gbc.writeMem(0x9082, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x55f6, gbc.sp());
        EXPECT(0x9084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9082));
        EXPECT(0xa1, gbc.readMem(0x9083));
        // CB A1 0061
        gbc.setState(0x1f00, 0x4c9d, 0x9db0, 0xd826, 0x8ccb, 0xfce0, 0x0, 0x1);
        gbc.writeMem(0x1f00, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4c9d, gbc.sp());
        EXPECT(0x1f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0062
        gbc.setState(0x610a, 0x3591, 0xbc50, 0xf6f1, 0x9719, 0xc641, 0x0, 0x1);
        gbc.writeMem(0x610a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3591, gbc.sp());
        EXPECT(0x610c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0063
        gbc.setState(0x4ccb, 0x57d1, 0xbf40, 0x6929, 0x635d, 0x2c89, 0x1, 0x1);
        gbc.writeMem(0x4ccb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x57d1, gbc.sp());
        EXPECT(0x4ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0064
        gbc.setState(0xcae4, 0xbd75, 0xfc10, 0x11a4, 0x4d5c, 0x5be3, 0x1, 0x0);
        gbc.writeMem(0xcae4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbd75, gbc.sp());
        EXPECT(0xcae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae4));
        EXPECT(0xa1, gbc.readMem(0xcae5));
        // CB A1 0065
        gbc.setState(0xfee, 0xef91, 0x7870, 0x19fa, 0x7522, 0x94da, 0x1, 0x0);
        gbc.writeMem(0xfee, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xef91, gbc.sp());
        EXPECT(0xff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0066
        gbc.setState(0xa885, 0xe4ad, 0x1f60, 0x9c8c, 0xbf7, 0xd80b, 0x0, 0x0);
        gbc.writeMem(0xa885, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe4ad, gbc.sp());
        EXPECT(0xa887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa885));
        EXPECT(0xa1, gbc.readMem(0xa886));
        // CB A1 0067
        gbc.setState(0xcfcb, 0xf84, 0xb270, 0xef6f, 0xd844, 0xdc51, 0x1, 0x0);
        gbc.writeMem(0xcfcb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf84, gbc.sp());
        EXPECT(0xcfcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfcb));
        EXPECT(0xa1, gbc.readMem(0xcfcc));
        // CB A1 0068
        gbc.setState(0x883b, 0x869a, 0xe590, 0xf58d, 0xa326, 0x30c7, 0x0, 0x1);
        gbc.writeMem(0x883b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0x883d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883b));
        EXPECT(0xa1, gbc.readMem(0x883c));
        // CB A1 0069
        gbc.setState(0x5923, 0xfaef, 0xbea0, 0x2a38, 0x8ed9, 0xa7c9, 0x1, 0x1);
        gbc.writeMem(0x5923, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfaef, gbc.sp());
        EXPECT(0x5925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 006A
        gbc.setState(0xb468, 0x6f6d, 0x1b0, 0xc7e4, 0x9529, 0x7713, 0x1, 0x0);
        gbc.writeMem(0xb468, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6f6d, gbc.sp());
        EXPECT(0xb46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb468));
        EXPECT(0xa1, gbc.readMem(0xb469));
        // CB A1 006B
        gbc.setState(0xd14f, 0x8ca7, 0xab90, 0x4dda, 0x13e7, 0x6d88, 0x0, 0x1);
        gbc.writeMem(0xd14f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8ca7, gbc.sp());
        EXPECT(0xd151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd14f));
        EXPECT(0xa1, gbc.readMem(0xd150));
        // CB A1 006C
        gbc.setState(0x3946, 0x24a6, 0x4170, 0x9990, 0xb777, 0xa4f3, 0x0, 0x1);
        gbc.writeMem(0x3946, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x24a6, gbc.sp());
        EXPECT(0x3948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 006D
        gbc.setState(0x53de, 0x1347, 0x29d0, 0xf103, 0x458d, 0xbdac, 0x0, 0x0);
        gbc.writeMem(0x53de, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1347, gbc.sp());
        EXPECT(0x53e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 006F
        gbc.setState(0x8c60, 0x3624, 0x1300, 0x39d9, 0x58d4, 0xa227, 0x0, 0x1);
        gbc.writeMem(0x8c60, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3624, gbc.sp());
        EXPECT(0x8c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c60));
        EXPECT(0xa1, gbc.readMem(0x8c61));
        // CB A1 0070
        gbc.setState(0x5650, 0x56e7, 0x44e0, 0xde6c, 0x179e, 0xe97, 0x0, 0x1);
        gbc.writeMem(0x5650, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x56e7, gbc.sp());
        EXPECT(0x5652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0071
        gbc.setState(0x221b, 0x2cb3, 0x7bd0, 0x313b, 0xd2d5, 0x8167, 0x0, 0x1);
        gbc.writeMem(0x221b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2cb3, gbc.sp());
        EXPECT(0x221d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0072
        gbc.setState(0xbb6b, 0x8f6c, 0x8af0, 0xcdfa, 0x2aed, 0xb0e7, 0x0, 0x1);
        gbc.writeMem(0xbb6b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8f6c, gbc.sp());
        EXPECT(0xbb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6b));
        EXPECT(0xa1, gbc.readMem(0xbb6c));
        // CB A1 0073
        gbc.setState(0x52bd, 0xe673, 0xfa00, 0x64de, 0x6638, 0x1c6f, 0x1, 0x1);
        gbc.writeMem(0x52bd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe673, gbc.sp());
        EXPECT(0x52bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0075
        gbc.setState(0xa2ff, 0x492b, 0xa280, 0x628b, 0x6e57, 0x7ba8, 0x0, 0x1);
        gbc.writeMem(0xa2ff, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x492b, gbc.sp());
        EXPECT(0xa301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ff));
        EXPECT(0xa1, gbc.readMem(0xa300));
        // CB A1 0076
        gbc.setState(0x5d25, 0xe891, 0x29b0, 0xbf94, 0xc23d, 0x21ed, 0x0, 0x1);
        gbc.writeMem(0x5d25, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe891, gbc.sp());
        EXPECT(0x5d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0077
        gbc.setState(0x4d97, 0x19b, 0x2f30, 0x954d, 0xf489, 0x6753, 0x1, 0x1);
        gbc.writeMem(0x4d97, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x19b, gbc.sp());
        EXPECT(0x4d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0078
        gbc.setState(0x846c, 0xdf09, 0x2850, 0x7279, 0xca85, 0x8beb, 0x0, 0x1);
        gbc.writeMem(0x846c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdf09, gbc.sp());
        EXPECT(0x846e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x846c));
        EXPECT(0xa1, gbc.readMem(0x846d));
        // CB A1 0079
        gbc.setState(0xe35c, 0xd453, 0x1be0, 0x76c7, 0xa8f3, 0xa719, 0x0, 0x0);
        gbc.writeMem(0xe35c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd453, gbc.sp());
        EXPECT(0xe35e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35c));
        EXPECT(0xa1, gbc.readMem(0xe35d));
        // CB A1 007A
        gbc.setState(0xd218, 0x7501, 0xf9f0, 0xea9b, 0x5885, 0x775c, 0x1, 0x1);
        gbc.writeMem(0xd218, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7501, gbc.sp());
        EXPECT(0xd21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd218));
        EXPECT(0xa1, gbc.readMem(0xd219));
        // CB A1 007B
        gbc.setState(0x1f7f, 0x91e0, 0x21f0, 0x87fb, 0x13bd, 0x97a6, 0x0, 0x0);
        gbc.writeMem(0x1f7f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x91e0, gbc.sp());
        EXPECT(0x1f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 007C
        gbc.setState(0xa290, 0x127, 0xb320, 0xd958, 0xf657, 0x501, 0x1, 0x1);
        gbc.writeMem(0xa290, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x127, gbc.sp());
        EXPECT(0xa292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa290));
        EXPECT(0xa1, gbc.readMem(0xa291));
        // CB A1 007D
        gbc.setState(0xa7c6, 0x2512, 0x7ec0, 0xe82c, 0x430f, 0xbbb1, 0x0, 0x1);
        gbc.writeMem(0xa7c6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2512, gbc.sp());
        EXPECT(0xa7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c6));
        EXPECT(0xa1, gbc.readMem(0xa7c7));
        // CB A1 007E
        gbc.setState(0x8573, 0xed21, 0x29c0, 0x7f4, 0xe333, 0x849d, 0x1, 0x1);
        gbc.writeMem(0x8573, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xed21, gbc.sp());
        EXPECT(0x8575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8573));
        EXPECT(0xa1, gbc.readMem(0x8574));
        // CB A1 007F
        gbc.setState(0x8d95, 0x96c9, 0x6f40, 0xeb66, 0x6f92, 0x45a5, 0x0, 0x0);
        gbc.writeMem(0x8d95, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x96c9, gbc.sp());
        EXPECT(0x8d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d95));
        EXPECT(0xa1, gbc.readMem(0x8d96));
        // CB A1 0080
        gbc.setState(0xf82, 0x8377, 0xcf80, 0xfbba, 0xdab5, 0xac14, 0x0, 0x1);
        gbc.writeMem(0xf82, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8377, gbc.sp());
        EXPECT(0xf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0081
        gbc.setState(0x93a9, 0xd2db, 0x7e80, 0x6fcd, 0xaf29, 0x5cb4, 0x0, 0x0);
        gbc.writeMem(0x93a9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd2db, gbc.sp());
        EXPECT(0x93ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a9));
        EXPECT(0xa1, gbc.readMem(0x93aa));
        // CB A1 0082
        gbc.setState(0x5fff, 0x4b03, 0x8c80, 0x46e7, 0x5bc5, 0xc3bc, 0x1, 0x1);
        gbc.writeMem(0x5fff, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4b03, gbc.sp());
        EXPECT(0x6001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0083
        gbc.setState(0xcba7, 0xa140, 0xece0, 0xf3be, 0x3f19, 0x5609, 0x0, 0x1);
        gbc.writeMem(0xcba7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa140, gbc.sp());
        EXPECT(0xcba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba7));
        EXPECT(0xa1, gbc.readMem(0xcba8));
        // CB A1 0084
        gbc.setState(0x4ea2, 0x812d, 0xa6e0, 0x2f1e, 0xcf4c, 0x7216, 0x0, 0x1);
        gbc.writeMem(0x4ea2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x812d, gbc.sp());
        EXPECT(0x4ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0085
        gbc.setState(0xb48b, 0x6d31, 0x2e10, 0xc3de, 0x674, 0xa781, 0x0, 0x1);
        gbc.writeMem(0xb48b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6d31, gbc.sp());
        EXPECT(0xb48d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb48b));
        EXPECT(0xa1, gbc.readMem(0xb48c));
        // CB A1 0086
        gbc.setState(0x94d4, 0x2896, 0x79f0, 0xca01, 0xa2d4, 0x2a76, 0x1, 0x0);
        gbc.writeMem(0x94d4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2896, gbc.sp());
        EXPECT(0x94d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d4));
        EXPECT(0xa1, gbc.readMem(0x94d5));
        // CB A1 0087
        gbc.setState(0x8789, 0xd8f9, 0x17e0, 0x785e, 0x1b20, 0x11ea, 0x1, 0x1);
        gbc.writeMem(0x8789, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd8f9, gbc.sp());
        EXPECT(0x878b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8789));
        EXPECT(0xa1, gbc.readMem(0x878a));
        // CB A1 0088
        gbc.setState(0x68a, 0x406e, 0xb9f0, 0x2fc4, 0x87ec, 0x37d2, 0x1, 0x0);
        gbc.writeMem(0x68a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x406e, gbc.sp());
        EXPECT(0x68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0089
        gbc.setState(0x8159, 0x58ac, 0xd360, 0xc602, 0x8abc, 0x5830, 0x0, 0x0);
        gbc.writeMem(0x8159, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x58ac, gbc.sp());
        EXPECT(0x815b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8159));
        EXPECT(0xa1, gbc.readMem(0x815a));
        // CB A1 008A
        gbc.setState(0x2256, 0x8d2b, 0x4570, 0x6ee9, 0xa6d4, 0xe0ba, 0x0, 0x0);
        gbc.writeMem(0x2256, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8d2b, gbc.sp());
        EXPECT(0x2258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 008B
        gbc.setState(0x3c69, 0xf681, 0xe450, 0x8601, 0x6106, 0xff0f, 0x0, 0x1);
        gbc.writeMem(0x3c69, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf681, gbc.sp());
        EXPECT(0x3c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 008D
        gbc.setState(0x1860, 0x950, 0xf7f0, 0x4c1, 0xf167, 0x16e9, 0x1, 0x1);
        gbc.writeMem(0x1860, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x950, gbc.sp());
        EXPECT(0x1862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 008E
        gbc.setState(0x420, 0x4c72, 0xf2b0, 0x8e2b, 0xe73e, 0xea48, 0x1, 0x1);
        gbc.writeMem(0x420, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4c72, gbc.sp());
        EXPECT(0x422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 008F
        gbc.setState(0xe136, 0x52d, 0xd600, 0x3d98, 0xf3f0, 0xc41, 0x1, 0x1);
        gbc.writeMem(0xe136, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x52d, gbc.sp());
        EXPECT(0xe138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe136));
        EXPECT(0xa1, gbc.readMem(0xe137));
        // CB A1 0090
        gbc.setState(0x12da, 0xc720, 0x9810, 0x2c52, 0x244, 0x71dc, 0x0, 0x1);
        gbc.writeMem(0x12da, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc720, gbc.sp());
        EXPECT(0x12dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0091
        gbc.setState(0xe081, 0x2e9d, 0x9880, 0xaddd, 0x6002, 0xc30d, 0x1, 0x0);
        gbc.writeMem(0xe081, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2e9d, gbc.sp());
        EXPECT(0xe083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe081));
        EXPECT(0xa1, gbc.readMem(0xe082));
        // CB A1 0092
        gbc.setState(0xeac9, 0x4b03, 0x8790, 0x8e01, 0x1834, 0x4b95, 0x1, 0x1);
        gbc.writeMem(0xeac9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4b03, gbc.sp());
        EXPECT(0xeacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac9));
        EXPECT(0xa1, gbc.readMem(0xeaca));
        // CB A1 0093
        gbc.setState(0x95a8, 0x4c15, 0x3260, 0x1522, 0xd223, 0x6bd5, 0x1, 0x1);
        gbc.writeMem(0x95a8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4c15, gbc.sp());
        EXPECT(0x95aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a8));
        EXPECT(0xa1, gbc.readMem(0x95a9));
        // CB A1 0094
        gbc.setState(0x7668, 0x7c74, 0x83d0, 0xe7a7, 0x10dc, 0x21cf, 0x1, 0x0);
        gbc.writeMem(0x7668, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7c74, gbc.sp());
        EXPECT(0x766a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0095
        gbc.setState(0x339d, 0xab39, 0xfaf0, 0x3c21, 0xd853, 0x645b, 0x1, 0x0);
        gbc.writeMem(0x339d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xab39, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0096
        gbc.setState(0x6dc, 0x5e07, 0xff40, 0x9e0, 0xb304, 0x2384, 0x1, 0x1);
        gbc.writeMem(0x6dc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5e07, gbc.sp());
        EXPECT(0x6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0097
        gbc.setState(0x5592, 0xd203, 0x3220, 0x50ae, 0x4e56, 0x9b, 0x1, 0x0);
        gbc.writeMem(0x5592, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd203, gbc.sp());
        EXPECT(0x5594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0098
        gbc.setState(0x7ebd, 0x355b, 0x8c00, 0x6fa3, 0xa029, 0xc57f, 0x1, 0x1);
        gbc.writeMem(0x7ebd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x355b, gbc.sp());
        EXPECT(0x7ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0099
        gbc.setState(0x8f5a, 0x80fb, 0x68f0, 0x5d9, 0xcd42, 0xfb6a, 0x0, 0x0);
        gbc.writeMem(0x8f5a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x80fb, gbc.sp());
        EXPECT(0x8f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5a));
        EXPECT(0xa1, gbc.readMem(0x8f5b));
        // CB A1 009A
        gbc.setState(0xa190, 0x8ebe, 0x2710, 0x748f, 0xfb6b, 0xbbc2, 0x0, 0x0);
        gbc.writeMem(0xa190, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8ebe, gbc.sp());
        EXPECT(0xa192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa190));
        EXPECT(0xa1, gbc.readMem(0xa191));
        // CB A1 009B
        gbc.setState(0x4654, 0xaff6, 0x4b40, 0x6c0f, 0xf1e8, 0x5780, 0x1, 0x0);
        gbc.writeMem(0x4654, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaff6, gbc.sp());
        EXPECT(0x4656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 009C
        gbc.setState(0x77a8, 0x8c86, 0xb8a0, 0xd947, 0x8269, 0x9e19, 0x0, 0x1);
        gbc.writeMem(0x77a8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8c86, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 009D
        gbc.setState(0x6b7d, 0x40bb, 0x7990, 0x2ed0, 0x875c, 0xb5b3, 0x1, 0x1);
        gbc.writeMem(0x6b7d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x40bb, gbc.sp());
        EXPECT(0x6b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 009E
        gbc.setState(0x36a9, 0x2f2e, 0x330, 0x679b, 0xa956, 0xfa93, 0x0, 0x1);
        gbc.writeMem(0x36a9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2f2e, gbc.sp());
        EXPECT(0x36ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 009F
        gbc.setState(0xcdd1, 0x9603, 0x1010, 0x3f59, 0x67d6, 0x20da, 0x1, 0x1);
        gbc.writeMem(0xcdd1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9603, gbc.sp());
        EXPECT(0xcdd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd1));
        EXPECT(0xa1, gbc.readMem(0xcdd2));
        // CB A1 00A0
        gbc.setState(0x144b, 0xb881, 0x2fb0, 0xed75, 0x87df, 0x2ef2, 0x0, 0x1);
        gbc.writeMem(0x144b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb881, gbc.sp());
        EXPECT(0x144d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00A1
        gbc.setState(0x349e, 0xb93f, 0x8eb0, 0xc23e, 0x5a8d, 0x4bed, 0x0, 0x1);
        gbc.writeMem(0x349e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb93f, gbc.sp());
        EXPECT(0x34a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00A2
        gbc.setState(0x90a8, 0x412f, 0x1ef0, 0x629c, 0xbe46, 0xb118, 0x1, 0x0);
        gbc.writeMem(0x90a8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x412f, gbc.sp());
        EXPECT(0x90aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a8));
        EXPECT(0xa1, gbc.readMem(0x90a9));
        // CB A1 00A3
        gbc.setState(0x286a, 0x9446, 0x6ed0, 0x3883, 0x407d, 0xb25b, 0x0, 0x0);
        gbc.writeMem(0x286a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9446, gbc.sp());
        EXPECT(0x286c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00A5
        gbc.setState(0x5d45, 0xa0aa, 0x6fb0, 0x9e00, 0x6e49, 0x8df, 0x0, 0x1);
        gbc.writeMem(0x5d45, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa0aa, gbc.sp());
        EXPECT(0x5d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00A6
        gbc.setState(0x257c, 0x1092, 0x40f0, 0x66ce, 0x3b50, 0xd0de, 0x1, 0x1);
        gbc.writeMem(0x257c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1092, gbc.sp());
        EXPECT(0x257e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00A7
        gbc.setState(0x22ba, 0x50b3, 0x4b20, 0xd3be, 0xa70a, 0xbca0, 0x0, 0x0);
        gbc.writeMem(0x22ba, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x50b3, gbc.sp());
        EXPECT(0x22bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00A8
        gbc.setState(0x6c24, 0x5f66, 0xd530, 0x7387, 0x5ff3, 0x301d, 0x1, 0x0);
        gbc.writeMem(0x6c24, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5f66, gbc.sp());
        EXPECT(0x6c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00A9
        gbc.setState(0x3c20, 0xfa82, 0x220, 0xa294, 0x219a, 0x1b04, 0x1, 0x1);
        gbc.writeMem(0x3c20, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfa82, gbc.sp());
        EXPECT(0x3c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00AA
        gbc.setState(0x5487, 0xf496, 0x5e10, 0xac6, 0x8893, 0x1a0e, 0x0, 0x1);
        gbc.writeMem(0x5487, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf496, gbc.sp());
        EXPECT(0x5489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00AC
        gbc.setState(0xd63, 0x7930, 0x6640, 0xefe1, 0x6919, 0xfdb, 0x1, 0x0);
        gbc.writeMem(0xd63, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7930, gbc.sp());
        EXPECT(0xd65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00AD
        gbc.setState(0xe572, 0x366, 0xd8b0, 0x19b7, 0x9d25, 0x5b1f, 0x1, 0x1);
        gbc.writeMem(0xe572, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x366, gbc.sp());
        EXPECT(0xe574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe572));
        EXPECT(0xa1, gbc.readMem(0xe573));
        // CB A1 00AE
        gbc.setState(0x7354, 0xd5c7, 0xe040, 0x71d2, 0x4a74, 0x2932, 0x0, 0x0);
        gbc.writeMem(0x7354, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd5c7, gbc.sp());
        EXPECT(0x7356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00AF
        gbc.setState(0x5e60, 0x3c66, 0xdd30, 0x5a4c, 0xb7a3, 0x4079, 0x1, 0x1);
        gbc.writeMem(0x5e60, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3c66, gbc.sp());
        EXPECT(0x5e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00B0
        gbc.setState(0x664, 0x3936, 0xe730, 0x3f49, 0x3f63, 0x98fb, 0x1, 0x0);
        gbc.writeMem(0x664, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3936, gbc.sp());
        EXPECT(0x666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00B1
        gbc.setState(0x4a3e, 0x6b95, 0x4a0, 0x809, 0xe73e, 0x5b99, 0x0, 0x0);
        gbc.writeMem(0x4a3e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6b95, gbc.sp());
        EXPECT(0x4a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00B2
        gbc.setState(0xd4d4, 0x3c3e, 0x7870, 0xc1fc, 0x1f28, 0xa528, 0x1, 0x0);
        gbc.writeMem(0xd4d4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3c3e, gbc.sp());
        EXPECT(0xd4d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d4));
        EXPECT(0xa1, gbc.readMem(0xd4d5));
        // CB A1 00B3
        gbc.setState(0x94c7, 0x9ccb, 0xe0e0, 0x737d, 0x321, 0x2cd2, 0x0, 0x1);
        gbc.writeMem(0x94c7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9ccb, gbc.sp());
        EXPECT(0x94c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c7));
        EXPECT(0xa1, gbc.readMem(0x94c8));
        // CB A1 00B4
        gbc.setState(0xc188, 0x3dc, 0x43c0, 0x2fd0, 0xc0c8, 0x62fb, 0x0, 0x1);
        gbc.writeMem(0xc188, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3dc, gbc.sp());
        EXPECT(0xc18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc188));
        EXPECT(0xa1, gbc.readMem(0xc189));
        // CB A1 00B5
        gbc.setState(0x451f, 0xc5ff, 0xc990, 0x5d86, 0x8272, 0xb0d6, 0x0, 0x0);
        gbc.writeMem(0x451f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc5ff, gbc.sp());
        EXPECT(0x4521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00B6
        gbc.setState(0xebc3, 0xbb5, 0x7700, 0x3ee8, 0xef93, 0xb6c, 0x0, 0x0);
        gbc.writeMem(0xebc3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbb5, gbc.sp());
        EXPECT(0xebc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc3));
        EXPECT(0xa1, gbc.readMem(0xebc4));
        // CB A1 00B8
        gbc.setState(0x49dd, 0xa95, 0x7eb0, 0x8bb9, 0x78f4, 0xb8d5, 0x0, 0x0);
        gbc.writeMem(0x49dd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa95, gbc.sp());
        EXPECT(0x49df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00B9
        gbc.setState(0x9ef5, 0x5096, 0xaef0, 0xed80, 0x3385, 0x3be3, 0x1, 0x0);
        gbc.writeMem(0x9ef5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5096, gbc.sp());
        EXPECT(0x9ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef5));
        EXPECT(0xa1, gbc.readMem(0x9ef6));
        // CB A1 00BA
        gbc.setState(0x54e9, 0x57da, 0xf7a0, 0x1a8a, 0x927, 0x72a4, 0x1, 0x1);
        gbc.writeMem(0x54e9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x57da, gbc.sp());
        EXPECT(0x54eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00BB
        gbc.setState(0x4905, 0x6811, 0x9770, 0xb8c7, 0x1c1a, 0xe6e2, 0x0, 0x1);
        gbc.writeMem(0x4905, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6811, gbc.sp());
        EXPECT(0x4907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00BC
        gbc.setState(0x41a5, 0x7f5e, 0x7940, 0xde4, 0xe053, 0xe1ed, 0x0, 0x1);
        gbc.writeMem(0x41a5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7f5e, gbc.sp());
        EXPECT(0x41a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00BE
        gbc.setState(0xba0, 0x3098, 0x8a20, 0xe0dd, 0x331c, 0x539, 0x0, 0x0);
        gbc.writeMem(0xba0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3098, gbc.sp());
        EXPECT(0xba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00BF
        gbc.setState(0xda08, 0x8b79, 0x9510, 0x518a, 0xfa44, 0xbb73, 0x0, 0x0);
        gbc.writeMem(0xda08, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8b79, gbc.sp());
        EXPECT(0xda0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda08));
        EXPECT(0xa1, gbc.readMem(0xda09));
        // CB A1 00C0
        gbc.setState(0x1a, 0xe7b5, 0xb160, 0xc16c, 0xf136, 0x168a, 0x0, 0x0);
        gbc.writeMem(0x1a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe7b5, gbc.sp());
        EXPECT(0x1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00C1
        gbc.setState(0x3d5a, 0x1c21, 0x1760, 0xb2b2, 0xb78f, 0x9eac, 0x1, 0x1);
        gbc.writeMem(0x3d5a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1c21, gbc.sp());
        EXPECT(0x3d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00C2
        gbc.setState(0xbe30, 0xcc10, 0xf070, 0x20e1, 0x42e4, 0xdfab, 0x1, 0x0);
        gbc.writeMem(0xbe30, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcc10, gbc.sp());
        EXPECT(0xbe32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe30));
        EXPECT(0xa1, gbc.readMem(0xbe31));
        // CB A1 00C3
        gbc.setState(0x5450, 0x27b5, 0x1f80, 0xed55, 0x62d7, 0x6c09, 0x0, 0x0);
        gbc.writeMem(0x5450, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x27b5, gbc.sp());
        EXPECT(0x5452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00C4
        gbc.setState(0xe156, 0xbfb6, 0xd090, 0x5928, 0x9b87, 0xec6a, 0x0, 0x0);
        gbc.writeMem(0xe156, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbfb6, gbc.sp());
        EXPECT(0xe158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe156));
        EXPECT(0xa1, gbc.readMem(0xe157));
        // CB A1 00C5
        gbc.setState(0xdd01, 0xe83d, 0xc710, 0x9cb0, 0x26e6, 0x653, 0x0, 0x1);
        gbc.writeMem(0xdd01, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe83d, gbc.sp());
        EXPECT(0xdd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd01));
        EXPECT(0xa1, gbc.readMem(0xdd02));
        // CB A1 00C6
        gbc.setState(0x8a8b, 0xdab1, 0x21d0, 0x8f39, 0x15c6, 0x4d94, 0x1, 0x1);
        gbc.writeMem(0x8a8b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdab1, gbc.sp());
        EXPECT(0x8a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8b));
        EXPECT(0xa1, gbc.readMem(0x8a8c));
        // CB A1 00C7
        gbc.setState(0xb333, 0xd4df, 0xf950, 0xf8a1, 0x2771, 0x204, 0x0, 0x1);
        gbc.writeMem(0xb333, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd4df, gbc.sp());
        EXPECT(0xb335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb333));
        EXPECT(0xa1, gbc.readMem(0xb334));
        // CB A1 00C8
        gbc.setState(0xecf7, 0xf4a7, 0x9030, 0xdfa6, 0x9ff8, 0x90ca, 0x1, 0x1);
        gbc.writeMem(0xecf7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf4a7, gbc.sp());
        EXPECT(0xecf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf7));
        EXPECT(0xa1, gbc.readMem(0xecf8));
        // CB A1 00C9
        gbc.setState(0x8e14, 0x934a, 0x1c70, 0x5db4, 0xa123, 0x837, 0x1, 0x1);
        gbc.writeMem(0x8e14, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x934a, gbc.sp());
        EXPECT(0x8e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e14));
        EXPECT(0xa1, gbc.readMem(0x8e15));
        // CB A1 00CA
        gbc.setState(0x8e, 0x265, 0xb6a0, 0x73c5, 0x385c, 0x464b, 0x0, 0x0);
        gbc.writeMem(0x8e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x265, gbc.sp());
        EXPECT(0x90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00CB
        gbc.setState(0xd50c, 0x285f, 0xf0, 0x55b3, 0xb009, 0x428b, 0x1, 0x1);
        gbc.writeMem(0xd50c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x285f, gbc.sp());
        EXPECT(0xd50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50c));
        EXPECT(0xa1, gbc.readMem(0xd50d));
        // CB A1 00CC
        gbc.setState(0xea4a, 0x642c, 0x1a40, 0x71e2, 0xc733, 0x8ba7, 0x0, 0x0);
        gbc.writeMem(0xea4a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x642c, gbc.sp());
        EXPECT(0xea4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4a));
        EXPECT(0xa1, gbc.readMem(0xea4b));
        // CB A1 00CD
        gbc.setState(0x35ca, 0x6a61, 0xc9c0, 0x84d6, 0x3c68, 0x173d, 0x0, 0x1);
        gbc.writeMem(0x35ca, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6a61, gbc.sp());
        EXPECT(0x35cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00CE
        gbc.setState(0xb88b, 0x842c, 0x33e0, 0x7f78, 0xfbe0, 0x3c41, 0x0, 0x0);
        gbc.writeMem(0xb88b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x842c, gbc.sp());
        EXPECT(0xb88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88b));
        EXPECT(0xa1, gbc.readMem(0xb88c));
        // CB A1 00CF
        gbc.setState(0x825e, 0x8f18, 0xdb80, 0x6855, 0x1cd2, 0xf78a, 0x1, 0x1);
        gbc.writeMem(0x825e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8f18, gbc.sp());
        EXPECT(0x8260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825e));
        EXPECT(0xa1, gbc.readMem(0x825f));
        // CB A1 00D0
        gbc.setState(0x59b2, 0x2f06, 0x4360, 0x542a, 0xd1e1, 0x13e7, 0x1, 0x1);
        gbc.writeMem(0x59b2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2f06, gbc.sp());
        EXPECT(0x59b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00D1
        gbc.setState(0xf2d, 0xd8f2, 0x90f0, 0xf1f8, 0x6716, 0x1b4d, 0x0, 0x1);
        gbc.writeMem(0xf2d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd8f2, gbc.sp());
        EXPECT(0xf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00D2
        gbc.setState(0xb720, 0x3ec9, 0x6bc0, 0xfed9, 0x1a48, 0x68ba, 0x0, 0x0);
        gbc.writeMem(0xb720, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3ec9, gbc.sp());
        EXPECT(0xb722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb720));
        EXPECT(0xa1, gbc.readMem(0xb721));
        // CB A1 00D3
        gbc.setState(0x31ac, 0x7deb, 0xfa90, 0xd3d9, 0xee2, 0xaa25, 0x0, 0x0);
        gbc.writeMem(0x31ac, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7deb, gbc.sp());
        EXPECT(0x31ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00D4
        gbc.setState(0x4e34, 0xa361, 0x99d0, 0x7a91, 0xcfb2, 0x9ef7, 0x0, 0x1);
        gbc.writeMem(0x4e34, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa361, gbc.sp());
        EXPECT(0x4e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00D5
        gbc.setState(0x958, 0x213e, 0xdd70, 0x9e07, 0x5021, 0xb139, 0x1, 0x0);
        gbc.writeMem(0x958, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x213e, gbc.sp());
        EXPECT(0x95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00D6
        gbc.setState(0xa3fc, 0xc7ad, 0x3140, 0x1d63, 0xc0eb, 0x9999, 0x0, 0x1);
        gbc.writeMem(0xa3fc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc7ad, gbc.sp());
        EXPECT(0xa3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fc));
        EXPECT(0xa1, gbc.readMem(0xa3fd));
        // CB A1 00D7
        gbc.setState(0xea59, 0x3d0a, 0x6020, 0x7b26, 0xc9aa, 0x2f4c, 0x1, 0x1);
        gbc.writeMem(0xea59, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3d0a, gbc.sp());
        EXPECT(0xea5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea59));
        EXPECT(0xa1, gbc.readMem(0xea5a));
        // CB A1 00D8
        gbc.setState(0x2f27, 0xd7c8, 0xbf00, 0x6d45, 0x84b9, 0x14c0, 0x0, 0x1);
        gbc.writeMem(0x2f27, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd7c8, gbc.sp());
        EXPECT(0x2f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00DA
        gbc.setState(0x6f2b, 0xabe2, 0x8af0, 0xaac4, 0x86f7, 0xa89c, 0x1, 0x1);
        gbc.writeMem(0x6f2b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xabe2, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00DB
        gbc.setState(0x64fb, 0x95d3, 0x7680, 0x31a9, 0x1b38, 0xbb1, 0x0, 0x1);
        gbc.writeMem(0x64fb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x95d3, gbc.sp());
        EXPECT(0x64fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00DD
        gbc.setState(0x9499, 0xefbe, 0xb150, 0x12be, 0x6060, 0x9011, 0x0, 0x0);
        gbc.writeMem(0x9499, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xefbe, gbc.sp());
        EXPECT(0x949b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9499));
        EXPECT(0xa1, gbc.readMem(0x949a));
        // CB A1 00DE
        gbc.setState(0x44ba, 0x88c7, 0x3190, 0xaefb, 0x1e52, 0x611c, 0x1, 0x0);
        gbc.writeMem(0x44ba, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x88c7, gbc.sp());
        EXPECT(0x44bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00DF
        gbc.setState(0xb710, 0xdff2, 0x1d70, 0x7e9f, 0x14e4, 0xc908, 0x0, 0x1);
        gbc.writeMem(0xb710, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdff2, gbc.sp());
        EXPECT(0xb712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb710));
        EXPECT(0xa1, gbc.readMem(0xb711));
        // CB A1 00E0
        gbc.setState(0xc6a0, 0xb00c, 0x9d70, 0x4df0, 0xa237, 0xa68, 0x0, 0x0);
        gbc.writeMem(0xc6a0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb00c, gbc.sp());
        EXPECT(0xc6a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a0));
        EXPECT(0xa1, gbc.readMem(0xc6a1));
        // CB A1 00E1
        gbc.setState(0x6846, 0x9cad, 0xf520, 0x193a, 0x93e1, 0x68dc, 0x0, 0x0);
        gbc.writeMem(0x6846, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9cad, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00E2
        gbc.setState(0xbdf1, 0x5196, 0xbb40, 0x7d23, 0x4df3, 0x6204, 0x1, 0x0);
        gbc.writeMem(0xbdf1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5196, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf1));
        EXPECT(0xa1, gbc.readMem(0xbdf2));
        // CB A1 00E3
        gbc.setState(0xe68c, 0x9de0, 0x18b0, 0x1b7b, 0xc621, 0xcc10, 0x1, 0x0);
        gbc.writeMem(0xe68c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9de0, gbc.sp());
        EXPECT(0xe68e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68c));
        EXPECT(0xa1, gbc.readMem(0xe68d));
        // CB A1 00E5
        gbc.setState(0xea76, 0x6f44, 0x7c90, 0x3355, 0xca9a, 0x78cd, 0x0, 0x1);
        gbc.writeMem(0xea76, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6f44, gbc.sp());
        EXPECT(0xea78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea76));
        EXPECT(0xa1, gbc.readMem(0xea77));
        // CB A1 00E6
        gbc.setState(0x883b, 0xf6ce, 0xa360, 0x427e, 0x4b49, 0x92f9, 0x1, 0x1);
        gbc.writeMem(0x883b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf6ce, gbc.sp());
        EXPECT(0x883d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883b));
        EXPECT(0xa1, gbc.readMem(0x883c));
        // CB A1 00E7
        gbc.setState(0x72f3, 0xe5f2, 0xf680, 0x2f9c, 0x9e8b, 0xe0dc, 0x0, 0x0);
        gbc.writeMem(0x72f3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe5f2, gbc.sp());
        EXPECT(0x72f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00E8
        gbc.setState(0xea25, 0x77b, 0x4010, 0x4f5c, 0x2db7, 0x99be, 0x1, 0x0);
        gbc.writeMem(0xea25, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x77b, gbc.sp());
        EXPECT(0xea27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea25));
        EXPECT(0xa1, gbc.readMem(0xea26));
        // CB A1 00E9
        gbc.setState(0x52ef, 0x414e, 0x96e0, 0x2b63, 0xe5bf, 0x7cea, 0x1, 0x0);
        gbc.writeMem(0x52ef, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x414e, gbc.sp());
        EXPECT(0x52f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00EB
        gbc.setState(0x418c, 0x50b, 0xaf30, 0xf82c, 0x9afb, 0xccfb, 0x0, 0x1);
        gbc.writeMem(0x418c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x50b, gbc.sp());
        EXPECT(0x418e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00EC
        gbc.setState(0xd53, 0xe979, 0xa0d0, 0x58ae, 0x832a, 0x5146, 0x0, 0x0);
        gbc.writeMem(0xd53, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe979, gbc.sp());
        EXPECT(0xd55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00ED
        gbc.setState(0x7e15, 0x126e, 0x1c0, 0x720, 0x8698, 0xea30, 0x0, 0x1);
        gbc.writeMem(0x7e15, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x126e, gbc.sp());
        EXPECT(0x7e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00EE
        gbc.setState(0x53f5, 0xffbe, 0x41a0, 0x3a1a, 0x6d57, 0xf519, 0x0, 0x0);
        gbc.writeMem(0x53f5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xffbe, gbc.sp());
        EXPECT(0x53f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00EF
        gbc.setState(0xbdfc, 0x5d6b, 0xce50, 0xe8f4, 0xd95a, 0x4efb, 0x1, 0x1);
        gbc.writeMem(0xbdfc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5d6b, gbc.sp());
        EXPECT(0xbdfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfc));
        EXPECT(0xa1, gbc.readMem(0xbdfd));
        // CB A1 00F0
        gbc.setState(0x3e82, 0xc95c, 0x35f0, 0xc032, 0x1984, 0x9929, 0x0, 0x1);
        gbc.writeMem(0x3e82, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc95c, gbc.sp());
        EXPECT(0x3e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00F1
        gbc.setState(0xd529, 0xab45, 0x6e60, 0x613, 0xf882, 0x83b8, 0x1, 0x0);
        gbc.writeMem(0xd529, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xab45, gbc.sp());
        EXPECT(0xd52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd529));
        EXPECT(0xa1, gbc.readMem(0xd52a));
        // CB A1 00F2
        gbc.setState(0x167a, 0xf6f5, 0x290, 0x6db6, 0x5dab, 0xbc9, 0x1, 0x1);
        gbc.writeMem(0x167a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf6f5, gbc.sp());
        EXPECT(0x167c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00F3
        gbc.setState(0x5ed7, 0xdab3, 0xbcb0, 0x3728, 0x59eb, 0x99b6, 0x0, 0x0);
        gbc.writeMem(0x5ed7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdab3, gbc.sp());
        EXPECT(0x5ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00F4
        gbc.setState(0x76c0, 0xd68, 0xc190, 0x1534, 0xc49f, 0xd6b9, 0x1, 0x1);
        gbc.writeMem(0x76c0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd68, gbc.sp());
        EXPECT(0x76c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00F5
        gbc.setState(0xee8e, 0x4d6f, 0x51e0, 0xaa13, 0x476c, 0x9f41, 0x1, 0x0);
        gbc.writeMem(0xee8e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4d6f, gbc.sp());
        EXPECT(0xee90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8e));
        EXPECT(0xa1, gbc.readMem(0xee8f));
        // CB A1 00F6
        gbc.setState(0x97fc, 0x71c9, 0xecd0, 0xaff3, 0x8bf7, 0x1877, 0x1, 0x1);
        gbc.writeMem(0x97fc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x71c9, gbc.sp());
        EXPECT(0x97fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97fc));
        EXPECT(0xa1, gbc.readMem(0x97fd));
        // CB A1 00F7
        gbc.setState(0x6611, 0x2ceb, 0xc9c0, 0xa38b, 0x2413, 0x27a6, 0x1, 0x0);
        gbc.writeMem(0x6611, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2ceb, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 00F8
        gbc.setState(0x4a67, 0xeed6, 0x1110, 0x8f15, 0xde74, 0x7682, 0x0, 0x0);
        gbc.writeMem(0x4a67, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xeed6, gbc.sp());
        EXPECT(0x4a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00F9
        gbc.setState(0xea48, 0x40c4, 0x7920, 0xa589, 0x1d90, 0x97e2, 0x1, 0x1);
        gbc.writeMem(0xea48, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x40c4, gbc.sp());
        EXPECT(0xea4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea48));
        EXPECT(0xa1, gbc.readMem(0xea49));
        // CB A1 00FA
        gbc.setState(0x8f3c, 0x1b8d, 0x7f30, 0x2f5, 0x5d2d, 0xf07b, 0x0, 0x1);
        gbc.writeMem(0x8f3c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1b8d, gbc.sp());
        EXPECT(0x8f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f3c));
        EXPECT(0xa1, gbc.readMem(0x8f3d));
        // CB A1 00FB
        gbc.setState(0xc6f3, 0x748, 0x1620, 0x4aa7, 0x6a3e, 0xf80f, 0x1, 0x0);
        gbc.writeMem(0xc6f3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x748, gbc.sp());
        EXPECT(0xc6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f3));
        EXPECT(0xa1, gbc.readMem(0xc6f4));
        // CB A1 00FC
        gbc.setState(0xee02, 0xc212, 0x29d0, 0x2826, 0xbd2e, 0xb01b, 0x1, 0x0);
        gbc.writeMem(0xee02, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc212, gbc.sp());
        EXPECT(0xee04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee02));
        EXPECT(0xa1, gbc.readMem(0xee03));
        // CB A1 00FD
        gbc.setState(0x9faa, 0xcda, 0xdee0, 0xca1f, 0xe135, 0xf0b1, 0x0, 0x0);
        gbc.writeMem(0x9faa, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcda, gbc.sp());
        EXPECT(0x9fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9faa));
        EXPECT(0xa1, gbc.readMem(0x9fab));
        // CB A1 00FE
        gbc.setState(0x6f40, 0x49f5, 0xee90, 0xdc67, 0x18e3, 0x8fb5, 0x0, 0x0);
        gbc.writeMem(0x6f40, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x49f5, gbc.sp());
        EXPECT(0x6f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 00FF
        gbc.setState(0xbff1, 0xeddf, 0x320, 0x8381, 0x1bf7, 0xe81a, 0x1, 0x0);
        gbc.writeMem(0xbff1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xeddf, gbc.sp());
        EXPECT(0xbff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff1));
        EXPECT(0xa1, gbc.readMem(0xbff2));
        // CB A1 0100
        gbc.setState(0xdfb8, 0xccaa, 0xa8e0, 0xa327, 0x6fa0, 0x7768, 0x1, 0x0);
        gbc.writeMem(0xdfb8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xccaa, gbc.sp());
        EXPECT(0xdfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb8));
        EXPECT(0xa1, gbc.readMem(0xdfb9));
        // CB A1 0101
        gbc.setState(0xc0cd, 0x4b21, 0xabf0, 0x529, 0x8cf0, 0xe458, 0x0, 0x0);
        gbc.writeMem(0xc0cd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4b21, gbc.sp());
        EXPECT(0xc0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0cd));
        EXPECT(0xa1, gbc.readMem(0xc0ce));
        // CB A1 0102
        gbc.setState(0xc9ce, 0x9b9f, 0x7240, 0x9bf1, 0xf4a5, 0xba9d, 0x1, 0x1);
        gbc.writeMem(0xc9ce, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9b9f, gbc.sp());
        EXPECT(0xc9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ce));
        EXPECT(0xa1, gbc.readMem(0xc9cf));
        // CB A1 0103
        gbc.setState(0x3035, 0xe960, 0x7340, 0x1ecc, 0x8576, 0xb611, 0x0, 0x0);
        gbc.writeMem(0x3035, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe960, gbc.sp());
        EXPECT(0x3037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0104
        gbc.setState(0x1dee, 0x765e, 0x7ed0, 0x4920, 0x5fe7, 0x1bf7, 0x0, 0x0);
        gbc.writeMem(0x1dee, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x765e, gbc.sp());
        EXPECT(0x1df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0105
        gbc.setState(0x747b, 0x2be9, 0x260, 0xc707, 0xfa35, 0x6937, 0x1, 0x0);
        gbc.writeMem(0x747b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2be9, gbc.sp());
        EXPECT(0x747d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0106
        gbc.setState(0xb7a4, 0x8489, 0xd500, 0xc9cb, 0x8f12, 0x59b4, 0x1, 0x1);
        gbc.writeMem(0xb7a4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8489, gbc.sp());
        EXPECT(0xb7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a4));
        EXPECT(0xa1, gbc.readMem(0xb7a5));
        // CB A1 0107
        gbc.setState(0x6fa1, 0x8fd0, 0x49f0, 0x353d, 0x9388, 0x42f2, 0x0, 0x1);
        gbc.writeMem(0x6fa1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8fd0, gbc.sp());
        EXPECT(0x6fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0108
        gbc.setState(0x4f5d, 0xea4f, 0x6b70, 0xb2d9, 0x24e, 0xe25a, 0x1, 0x0);
        gbc.writeMem(0x4f5d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xea4f, gbc.sp());
        EXPECT(0x4f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 010A
        gbc.setState(0xe2ae, 0xee9a, 0xea30, 0xaafd, 0xc5c0, 0xce6, 0x0, 0x0);
        gbc.writeMem(0xe2ae, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xee9a, gbc.sp());
        EXPECT(0xe2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ae));
        EXPECT(0xa1, gbc.readMem(0xe2af));
        // CB A1 010B
        gbc.setState(0x344e, 0xd3bc, 0x37b0, 0xc01b, 0x1fb8, 0x9cdf, 0x1, 0x1);
        gbc.writeMem(0x344e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd3bc, gbc.sp());
        EXPECT(0x3450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 010C
        gbc.setState(0xaaff, 0x4b05, 0xe80, 0x6d5e, 0xec63, 0x3097, 0x1, 0x1);
        gbc.writeMem(0xaaff, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4b05, gbc.sp());
        EXPECT(0xab01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaff));
        EXPECT(0xa1, gbc.readMem(0xab00));
        // CB A1 010D
        gbc.setState(0x499e, 0x9304, 0x5c30, 0x756, 0x106b, 0x1d59, 0x1, 0x0);
        gbc.writeMem(0x499e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9304, gbc.sp());
        EXPECT(0x49a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 010E
        gbc.setState(0xd196, 0xc12e, 0x4630, 0x4deb, 0x463e, 0x379, 0x1, 0x1);
        gbc.writeMem(0xd196, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc12e, gbc.sp());
        EXPECT(0xd198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd196));
        EXPECT(0xa1, gbc.readMem(0xd197));
        // CB A1 010F
        gbc.setState(0xcc7b, 0xa329, 0xab10, 0xf2dc, 0x58be, 0xa22, 0x1, 0x1);
        gbc.writeMem(0xcc7b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa329, gbc.sp());
        EXPECT(0xcc7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7b));
        EXPECT(0xa1, gbc.readMem(0xcc7c));
        // CB A1 0110
        gbc.setState(0x5b3d, 0x17b8, 0x96c0, 0x5df, 0x7d81, 0x7a0b, 0x0, 0x0);
        gbc.writeMem(0x5b3d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x17b8, gbc.sp());
        EXPECT(0x5b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0111
        gbc.setState(0x4add, 0xb7fb, 0xf7e0, 0x2c2c, 0xc791, 0x9751, 0x0, 0x1);
        gbc.writeMem(0x4add, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb7fb, gbc.sp());
        EXPECT(0x4adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0112
        gbc.setState(0x6560, 0x6acb, 0x17d0, 0x2112, 0x1bab, 0x3c20, 0x0, 0x1);
        gbc.writeMem(0x6560, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6acb, gbc.sp());
        EXPECT(0x6562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0113
        gbc.setState(0x813a, 0x7a2a, 0x16f0, 0xe3a9, 0x6966, 0x58f5, 0x1, 0x0);
        gbc.writeMem(0x813a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7a2a, gbc.sp());
        EXPECT(0x813c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813a));
        EXPECT(0xa1, gbc.readMem(0x813b));
        // CB A1 0114
        gbc.setState(0x1fb2, 0xc40c, 0xb980, 0x65f0, 0x45c8, 0x800a, 0x0, 0x1);
        gbc.writeMem(0x1fb2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc40c, gbc.sp());
        EXPECT(0x1fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0115
        gbc.setState(0x240d, 0x92c1, 0xd150, 0xd3bc, 0xd8f8, 0x7112, 0x0, 0x0);
        gbc.writeMem(0x240d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x92c1, gbc.sp());
        EXPECT(0x240f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0116
        gbc.setState(0x7759, 0x16d0, 0x7f70, 0x5f35, 0x4572, 0xdb66, 0x0, 0x0);
        gbc.writeMem(0x7759, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x16d0, gbc.sp());
        EXPECT(0x775b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0117
        gbc.setState(0xe886, 0x7885, 0x40e0, 0xc149, 0x2d42, 0x663a, 0x0, 0x1);
        gbc.writeMem(0xe886, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7885, gbc.sp());
        EXPECT(0xe888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe886));
        EXPECT(0xa1, gbc.readMem(0xe887));
        // CB A1 0118
        gbc.setState(0x44d6, 0x49f, 0x8d0, 0xccd5, 0x9d00, 0x9da3, 0x0, 0x1);
        gbc.writeMem(0x44d6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x49f, gbc.sp());
        EXPECT(0x44d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0119
        gbc.setState(0x370c, 0xf0d9, 0x1b0, 0x9689, 0xb784, 0xfe3a, 0x0, 0x1);
        gbc.writeMem(0x370c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf0d9, gbc.sp());
        EXPECT(0x370e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 011A
        gbc.setState(0x9f9d, 0x2f18, 0x9640, 0xf7e9, 0x268e, 0x4d96, 0x1, 0x0);
        gbc.writeMem(0x9f9d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2f18, gbc.sp());
        EXPECT(0x9f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9d));
        EXPECT(0xa1, gbc.readMem(0x9f9e));
        // CB A1 011C
        gbc.setState(0xd297, 0xf4ef, 0x6390, 0x20e4, 0x10f9, 0x800e, 0x1, 0x1);
        gbc.writeMem(0xd297, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf4ef, gbc.sp());
        EXPECT(0xd299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd297));
        EXPECT(0xa1, gbc.readMem(0xd298));
        // CB A1 011E
        gbc.setState(0xa1e7, 0x28ce, 0x9420, 0x9b05, 0xee5, 0x161e, 0x1, 0x0);
        gbc.writeMem(0xa1e7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x28ce, gbc.sp());
        EXPECT(0xa1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e7));
        EXPECT(0xa1, gbc.readMem(0xa1e8));
        // CB A1 011F
        gbc.setState(0xdecb, 0x95d8, 0x1730, 0x4589, 0x69bd, 0x8d0e, 0x0, 0x1);
        gbc.writeMem(0xdecb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x95d8, gbc.sp());
        EXPECT(0xdecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdecb));
        EXPECT(0xa1, gbc.readMem(0xdecc));
        // CB A1 0120
        gbc.setState(0x9d96, 0x7cbc, 0xea50, 0xf739, 0x5a65, 0x5151, 0x0, 0x0);
        gbc.writeMem(0x9d96, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7cbc, gbc.sp());
        EXPECT(0x9d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d96));
        EXPECT(0xa1, gbc.readMem(0x9d97));
        // CB A1 0121
        gbc.setState(0x1503, 0x69df, 0xc0f0, 0xe44b, 0x6364, 0xf5a, 0x1, 0x1);
        gbc.writeMem(0x1503, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x69df, gbc.sp());
        EXPECT(0x1505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0122
        gbc.setState(0x204d, 0x4a83, 0x4210, 0x7077, 0xd818, 0x4c5c, 0x0, 0x1);
        gbc.writeMem(0x204d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0x204f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0123
        gbc.setState(0xb8eb, 0x94f2, 0xb70, 0x4dd6, 0x9c14, 0x7f22, 0x1, 0x0);
        gbc.writeMem(0xb8eb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x94f2, gbc.sp());
        EXPECT(0xb8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8eb));
        EXPECT(0xa1, gbc.readMem(0xb8ec));
        // CB A1 0124
        gbc.setState(0x6b6d, 0x48d0, 0x69c0, 0xbd2a, 0xc1eb, 0xcbbb, 0x1, 0x1);
        gbc.writeMem(0x6b6d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x48d0, gbc.sp());
        EXPECT(0x6b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0125
        gbc.setState(0xb9de, 0xe286, 0x2940, 0x6e85, 0xad05, 0x1716, 0x0, 0x1);
        gbc.writeMem(0xb9de, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe286, gbc.sp());
        EXPECT(0xb9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9de));
        EXPECT(0xa1, gbc.readMem(0xb9df));
        // CB A1 0126
        gbc.setState(0x5ae1, 0xd1e, 0x1d00, 0x84f3, 0x7fce, 0xe895, 0x1, 0x0);
        gbc.writeMem(0x5ae1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd1e, gbc.sp());
        EXPECT(0x5ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0127
        gbc.setState(0x4626, 0x55f8, 0xd6d0, 0x8f4a, 0x77de, 0x9f02, 0x0, 0x0);
        gbc.writeMem(0x4626, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x55f8, gbc.sp());
        EXPECT(0x4628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0128
        gbc.setState(0x219, 0xcea0, 0xdb20, 0x7205, 0x72ec, 0x5ee8, 0x1, 0x1);
        gbc.writeMem(0x219, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcea0, gbc.sp());
        EXPECT(0x21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0129
        gbc.setState(0xba9b, 0x49ca, 0x2760, 0xa8dc, 0x1368, 0x7a16, 0x1, 0x0);
        gbc.writeMem(0xba9b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x49ca, gbc.sp());
        EXPECT(0xba9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9b));
        EXPECT(0xa1, gbc.readMem(0xba9c));
        // CB A1 012A
        gbc.setState(0xb13, 0x3ff2, 0x55c0, 0x2e1f, 0x5527, 0x1, 0x1, 0x1);
        gbc.writeMem(0xb13, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3ff2, gbc.sp());
        EXPECT(0xb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 012C
        gbc.setState(0x9a51, 0x3741, 0x8c10, 0x9ac1, 0xf17e, 0x3b82, 0x0, 0x0);
        gbc.writeMem(0x9a51, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3741, gbc.sp());
        EXPECT(0x9a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a51));
        EXPECT(0xa1, gbc.readMem(0x9a52));
        // CB A1 012D
        gbc.setState(0x268b, 0x1c88, 0x6a0, 0x4329, 0xe2a4, 0x37af, 0x1, 0x0);
        gbc.writeMem(0x268b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1c88, gbc.sp());
        EXPECT(0x268d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 012E
        gbc.setState(0x2424, 0x5fa5, 0x17b0, 0xc4cf, 0xa4ec, 0x424b, 0x1, 0x0);
        gbc.writeMem(0x2424, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5fa5, gbc.sp());
        EXPECT(0x2426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 012F
        gbc.setState(0x7fd9, 0x1187, 0x45a0, 0x35c6, 0xa278, 0x7ae4, 0x0, 0x1);
        gbc.writeMem(0x7fd9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1187, gbc.sp());
        EXPECT(0x7fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0130
        gbc.setState(0x804d, 0xcc29, 0x4b60, 0x99f7, 0x9ec7, 0x1f9c, 0x0, 0x1);
        gbc.writeMem(0x804d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcc29, gbc.sp());
        EXPECT(0x804f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804d));
        EXPECT(0xa1, gbc.readMem(0x804e));
        // CB A1 0131
        gbc.setState(0x41d7, 0xcd04, 0x79c0, 0x1b5a, 0x2f58, 0x8c1f, 0x1, 0x0);
        gbc.writeMem(0x41d7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcd04, gbc.sp());
        EXPECT(0x41d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0132
        gbc.setState(0xb053, 0x8f36, 0x1a50, 0x292e, 0x7544, 0x7b39, 0x1, 0x0);
        gbc.writeMem(0xb053, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8f36, gbc.sp());
        EXPECT(0xb055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb053));
        EXPECT(0xa1, gbc.readMem(0xb054));
        // CB A1 0134
        gbc.setState(0x9772, 0x5eb9, 0xc4e0, 0xf2d9, 0xa933, 0x32eb, 0x1, 0x0);
        gbc.writeMem(0x9772, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5eb9, gbc.sp());
        EXPECT(0x9774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9772));
        EXPECT(0xa1, gbc.readMem(0x9773));
        // CB A1 0135
        gbc.setState(0x1c99, 0xdc33, 0x5ed0, 0xc192, 0x62a4, 0xe6dc, 0x0, 0x1);
        gbc.writeMem(0x1c99, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdc33, gbc.sp());
        EXPECT(0x1c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0136
        gbc.setState(0xa5ba, 0x2103, 0x3700, 0x5d4c, 0xbd1, 0xce5a, 0x1, 0x1);
        gbc.writeMem(0xa5ba, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2103, gbc.sp());
        EXPECT(0xa5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ba));
        EXPECT(0xa1, gbc.readMem(0xa5bb));
        // CB A1 0137
        gbc.setState(0x5b3f, 0xcdf2, 0x70f0, 0xe04, 0x8922, 0x3da3, 0x1, 0x0);
        gbc.writeMem(0x5b3f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcdf2, gbc.sp());
        EXPECT(0x5b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0138
        gbc.setState(0x8301, 0x89ee, 0xa020, 0xaa14, 0x70a7, 0x2e1, 0x1, 0x1);
        gbc.writeMem(0x8301, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x89ee, gbc.sp());
        EXPECT(0x8303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8301));
        EXPECT(0xa1, gbc.readMem(0x8302));
        // CB A1 0139
        gbc.setState(0x9f25, 0x820d, 0x1b30, 0xaf4f, 0xb519, 0xee8d, 0x1, 0x0);
        gbc.writeMem(0x9f25, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x820d, gbc.sp());
        EXPECT(0x9f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f25));
        EXPECT(0xa1, gbc.readMem(0x9f26));
        // CB A1 013A
        gbc.setState(0x5e9, 0xa2ef, 0x14a0, 0x2dd6, 0xa014, 0xed0e, 0x0, 0x1);
        gbc.writeMem(0x5e9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa2ef, gbc.sp());
        EXPECT(0x5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 013B
        gbc.setState(0x825a, 0xbb73, 0x43c0, 0x3c47, 0xd30b, 0x1412, 0x1, 0x0);
        gbc.writeMem(0x825a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbb73, gbc.sp());
        EXPECT(0x825c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825a));
        EXPECT(0xa1, gbc.readMem(0x825b));
        // CB A1 013C
        gbc.setState(0x73d4, 0xbb78, 0x3120, 0x7cd6, 0x58de, 0x478a, 0x1, 0x1);
        gbc.writeMem(0x73d4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbb78, gbc.sp());
        EXPECT(0x73d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 013D
        gbc.setState(0xa0d9, 0x699b, 0x9d40, 0x96f8, 0xf576, 0xa2e8, 0x0, 0x0);
        gbc.writeMem(0xa0d9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x699b, gbc.sp());
        EXPECT(0xa0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d9));
        EXPECT(0xa1, gbc.readMem(0xa0da));
        // CB A1 013E
        gbc.setState(0x294f, 0x4335, 0xfd10, 0x6bee, 0x548e, 0x2c04, 0x1, 0x0);
        gbc.writeMem(0x294f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4335, gbc.sp());
        EXPECT(0x2951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 013F
        gbc.setState(0x5c7d, 0xaf2d, 0x8870, 0xe30d, 0x96b3, 0x56f1, 0x1, 0x0);
        gbc.writeMem(0x5c7d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xaf2d, gbc.sp());
        EXPECT(0x5c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0140
        gbc.setState(0x133, 0x61d4, 0xdf00, 0x52b3, 0x1dc2, 0x2ec6, 0x0, 0x0);
        gbc.writeMem(0x133, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x61d4, gbc.sp());
        EXPECT(0x135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0141
        gbc.setState(0x5db0, 0x9795, 0xf0e0, 0xd1fc, 0xa374, 0x5d84, 0x1, 0x1);
        gbc.writeMem(0x5db0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9795, gbc.sp());
        EXPECT(0x5db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0142
        gbc.setState(0x763f, 0x8feb, 0x3f70, 0x4d5e, 0x81f4, 0xb18d, 0x1, 0x1);
        gbc.writeMem(0x763f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8feb, gbc.sp());
        EXPECT(0x7641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0143
        gbc.setState(0xa048, 0x26f, 0xbfc0, 0x23f8, 0x55d7, 0xee73, 0x1, 0x1);
        gbc.writeMem(0xa048, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x26f, gbc.sp());
        EXPECT(0xa04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa048));
        EXPECT(0xa1, gbc.readMem(0xa049));
        // CB A1 0144
        gbc.setState(0xb579, 0x5b94, 0x7310, 0xbe0, 0x735d, 0x6119, 0x0, 0x0);
        gbc.writeMem(0xb579, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5b94, gbc.sp());
        EXPECT(0xb57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb579));
        EXPECT(0xa1, gbc.readMem(0xb57a));
        // CB A1 0145
        gbc.setState(0x9603, 0x192, 0xacf0, 0x2c35, 0xfcb6, 0x50c1, 0x1, 0x0);
        gbc.writeMem(0x9603, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x192, gbc.sp());
        EXPECT(0x9605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9603));
        EXPECT(0xa1, gbc.readMem(0x9604));
        // CB A1 0146
        gbc.setState(0x4954, 0xb69c, 0xd000, 0x322, 0x2bc3, 0xc93, 0x0, 0x0);
        gbc.writeMem(0x4954, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb69c, gbc.sp());
        EXPECT(0x4956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0147
        gbc.setState(0x1407, 0xd271, 0x7630, 0xb6c9, 0x1da, 0x39f6, 0x1, 0x1);
        gbc.writeMem(0x1407, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd271, gbc.sp());
        EXPECT(0x1409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0148
        gbc.setState(0xca8b, 0x22cd, 0x3810, 0x704b, 0x6d89, 0xade2, 0x1, 0x0);
        gbc.writeMem(0xca8b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x22cd, gbc.sp());
        EXPECT(0xca8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca8b));
        EXPECT(0xa1, gbc.readMem(0xca8c));
        // CB A1 0149
        gbc.setState(0xbdde, 0x294, 0xaa90, 0xcd5d, 0x35ff, 0x6975, 0x0, 0x0);
        gbc.writeMem(0xbdde, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x294, gbc.sp());
        EXPECT(0xbde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdde));
        EXPECT(0xa1, gbc.readMem(0xbddf));
        // CB A1 014A
        gbc.setState(0x6022, 0x2adc, 0xbed0, 0xd959, 0x6b07, 0x1ee9, 0x0, 0x0);
        gbc.writeMem(0x6022, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2adc, gbc.sp());
        EXPECT(0x6024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 014B
        gbc.setState(0xd0b9, 0x63df, 0xd220, 0x8428, 0xb483, 0xc3cf, 0x1, 0x1);
        gbc.writeMem(0xd0b9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x63df, gbc.sp());
        EXPECT(0xd0bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b9));
        EXPECT(0xa1, gbc.readMem(0xd0ba));
        // CB A1 014C
        gbc.setState(0xe530, 0x66, 0x6400, 0x137c, 0x8b36, 0xb481, 0x0, 0x1);
        gbc.writeMem(0xe530, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x66, gbc.sp());
        EXPECT(0xe532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe530));
        EXPECT(0xa1, gbc.readMem(0xe531));
        // CB A1 014D
        gbc.setState(0x768e, 0xa388, 0x4710, 0x2d5, 0xd35b, 0xdc11, 0x0, 0x1);
        gbc.writeMem(0x768e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa388, gbc.sp());
        EXPECT(0x7690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 014E
        gbc.setState(0xe69e, 0x3428, 0x4a40, 0x279e, 0xb327, 0x9e35, 0x0, 0x1);
        gbc.writeMem(0xe69e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3428, gbc.sp());
        EXPECT(0xe6a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69e));
        EXPECT(0xa1, gbc.readMem(0xe69f));
        // CB A1 014F
        gbc.setState(0xbc6c, 0xf27d, 0x2ac0, 0xbc9, 0x7ceb, 0x851f, 0x1, 0x0);
        gbc.writeMem(0xbc6c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf27d, gbc.sp());
        EXPECT(0xbc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc6c));
        EXPECT(0xa1, gbc.readMem(0xbc6d));
        // CB A1 0150
        gbc.setState(0x24b8, 0xbca2, 0xee0, 0x90f2, 0x6f28, 0x62ed, 0x1, 0x0);
        gbc.writeMem(0x24b8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbca2, gbc.sp());
        EXPECT(0x24ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0151
        gbc.setState(0x49fa, 0x32a7, 0x7f50, 0x97e4, 0x148, 0x8075, 0x1, 0x0);
        gbc.writeMem(0x49fa, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x32a7, gbc.sp());
        EXPECT(0x49fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0152
        gbc.setState(0x8344, 0x83c9, 0xf90, 0x6f89, 0xf6bb, 0x4cec, 0x0, 0x1);
        gbc.writeMem(0x8344, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x83c9, gbc.sp());
        EXPECT(0x8346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8344));
        EXPECT(0xa1, gbc.readMem(0x8345));
        // CB A1 0153
        gbc.setState(0x583c, 0x18ed, 0x6560, 0xe60, 0xea4, 0x4c67, 0x0, 0x1);
        gbc.writeMem(0x583c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x18ed, gbc.sp());
        EXPECT(0x583e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0154
        gbc.setState(0x7bb9, 0xc894, 0xda20, 0x83bc, 0xbb22, 0xd76b, 0x0, 0x1);
        gbc.writeMem(0x7bb9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc894, gbc.sp());
        EXPECT(0x7bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0155
        gbc.setState(0xab34, 0xc68e, 0x3190, 0xe39b, 0xbe02, 0x6406, 0x1, 0x0);
        gbc.writeMem(0xab34, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc68e, gbc.sp());
        EXPECT(0xab36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab34));
        EXPECT(0xa1, gbc.readMem(0xab35));
        // CB A1 0156
        gbc.setState(0xb781, 0xa71f, 0xa5b0, 0xb2bc, 0xfeac, 0x76cc, 0x1, 0x1);
        gbc.writeMem(0xb781, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa71f, gbc.sp());
        EXPECT(0xb783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb781));
        EXPECT(0xa1, gbc.readMem(0xb782));
        // CB A1 0157
        gbc.setState(0xe8d8, 0x5712, 0x7820, 0xe427, 0x54df, 0xbed8, 0x0, 0x1);
        gbc.writeMem(0xe8d8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5712, gbc.sp());
        EXPECT(0xe8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d8));
        EXPECT(0xa1, gbc.readMem(0xe8d9));
        // CB A1 0158
        gbc.setState(0xbf09, 0x2c8d, 0x9900, 0xf632, 0xcd10, 0x29b5, 0x0, 0x0);
        gbc.writeMem(0xbf09, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2c8d, gbc.sp());
        EXPECT(0xbf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf09));
        EXPECT(0xa1, gbc.readMem(0xbf0a));
        // CB A1 0159
        gbc.setState(0xe0ca, 0xd184, 0xeee0, 0x33f1, 0xbea5, 0xc9ea, 0x1, 0x0);
        gbc.writeMem(0xe0ca, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd184, gbc.sp());
        EXPECT(0xe0cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ca));
        EXPECT(0xa1, gbc.readMem(0xe0cb));
        // CB A1 015A
        gbc.setState(0x53a, 0xa9af, 0xd960, 0x519f, 0x67d, 0xb0b, 0x1, 0x0);
        gbc.writeMem(0x53a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa9af, gbc.sp());
        EXPECT(0x53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 015B
        gbc.setState(0x2038, 0x56a6, 0x8a20, 0x45f0, 0x58eb, 0xea8, 0x0, 0x1);
        gbc.writeMem(0x2038, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x56a6, gbc.sp());
        EXPECT(0x203a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 015C
        gbc.setState(0x3cb5, 0x946f, 0x8c20, 0x4052, 0x3f08, 0x329f, 0x0, 0x0);
        gbc.writeMem(0x3cb5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x946f, gbc.sp());
        EXPECT(0x3cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 015D
        gbc.setState(0xb52, 0x84a0, 0x3c20, 0x99e, 0xbd12, 0x28f, 0x1, 0x1);
        gbc.writeMem(0xb52, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x84a0, gbc.sp());
        EXPECT(0xb54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 015E
        gbc.setState(0x47a6, 0xca06, 0x3cb0, 0xcbac, 0xa307, 0x8f33, 0x0, 0x0);
        gbc.writeMem(0x47a6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xca06, gbc.sp());
        EXPECT(0x47a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 015F
        gbc.setState(0x3824, 0x152a, 0x78e0, 0x283c, 0xace2, 0xeaed, 0x0, 0x0);
        gbc.writeMem(0x3824, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x152a, gbc.sp());
        EXPECT(0x3826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0160
        gbc.setState(0xbbe3, 0xa704, 0xada0, 0xa97d, 0x3a51, 0xf95c, 0x1, 0x0);
        gbc.writeMem(0xbbe3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa704, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe3));
        EXPECT(0xa1, gbc.readMem(0xbbe4));
        // CB A1 0161
        gbc.setState(0x4b3, 0x96bb, 0xf010, 0x4eee, 0x4c8a, 0x5285, 0x0, 0x1);
        gbc.writeMem(0x4b3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x96bb, gbc.sp());
        EXPECT(0x4b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0163
        gbc.setState(0xd08a, 0x60b8, 0x1e40, 0xc7d6, 0x3390, 0xb5b3, 0x1, 0x0);
        gbc.writeMem(0xd08a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x60b8, gbc.sp());
        EXPECT(0xd08c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08a));
        EXPECT(0xa1, gbc.readMem(0xd08b));
        // CB A1 0164
        gbc.setState(0xcee9, 0xc6a2, 0xb5b0, 0xe12b, 0xece3, 0xb234, 0x0, 0x1);
        gbc.writeMem(0xcee9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc6a2, gbc.sp());
        EXPECT(0xceeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee9));
        EXPECT(0xa1, gbc.readMem(0xceea));
        // CB A1 0165
        gbc.setState(0x4d9b, 0xcd58, 0xf4c0, 0x8cba, 0x6f37, 0x7c8c, 0x0, 0x1);
        gbc.writeMem(0x4d9b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcd58, gbc.sp());
        EXPECT(0x4d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0166
        gbc.setState(0xa8da, 0x791c, 0xeb20, 0x7579, 0xf56f, 0x2570, 0x1, 0x0);
        gbc.writeMem(0xa8da, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x791c, gbc.sp());
        EXPECT(0xa8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8da));
        EXPECT(0xa1, gbc.readMem(0xa8db));
        // CB A1 0168
        gbc.setState(0x4de2, 0x34cd, 0x3140, 0x1250, 0xbdbe, 0xd112, 0x1, 0x1);
        gbc.writeMem(0x4de2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x34cd, gbc.sp());
        EXPECT(0x4de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0169
        gbc.setState(0x8501, 0x87cb, 0xee60, 0x6046, 0x9bc0, 0x864a, 0x1, 0x1);
        gbc.writeMem(0x8501, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x87cb, gbc.sp());
        EXPECT(0x8503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8501));
        EXPECT(0xa1, gbc.readMem(0x8502));
        // CB A1 016A
        gbc.setState(0x856d, 0xe04a, 0x33f0, 0x380d, 0x26cc, 0x626a, 0x0, 0x1);
        gbc.writeMem(0x856d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe04a, gbc.sp());
        EXPECT(0x856f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856d));
        EXPECT(0xa1, gbc.readMem(0x856e));
        // CB A1 016B
        gbc.setState(0xb6ba, 0xcaa3, 0x720, 0xe69, 0x438a, 0x7cba, 0x0, 0x0);
        gbc.writeMem(0xb6ba, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcaa3, gbc.sp());
        EXPECT(0xb6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ba));
        EXPECT(0xa1, gbc.readMem(0xb6bb));
        // CB A1 016C
        gbc.setState(0x53c1, 0x672b, 0xeaa0, 0xfc0c, 0x4df1, 0x11ca, 0x0, 0x0);
        gbc.writeMem(0x53c1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x672b, gbc.sp());
        EXPECT(0x53c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 016D
        gbc.setState(0x9d26, 0xa54f, 0xc310, 0xb9d8, 0x45c, 0xaeaf, 0x0, 0x1);
        gbc.writeMem(0x9d26, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa54f, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d26));
        EXPECT(0xa1, gbc.readMem(0x9d27));
        // CB A1 016E
        gbc.setState(0xa50e, 0x8c06, 0x7250, 0xc452, 0x501f, 0x21a5, 0x1, 0x1);
        gbc.writeMem(0xa50e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8c06, gbc.sp());
        EXPECT(0xa510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50e));
        EXPECT(0xa1, gbc.readMem(0xa50f));
        // CB A1 016F
        gbc.setState(0x4be2, 0xae96, 0x5470, 0x1296, 0x4bdd, 0xa6bd, 0x1, 0x0);
        gbc.writeMem(0x4be2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xae96, gbc.sp());
        EXPECT(0x4be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0170
        gbc.setState(0x9b35, 0xbaed, 0x99c0, 0x9d22, 0x232f, 0x2f2b, 0x1, 0x1);
        gbc.writeMem(0x9b35, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbaed, gbc.sp());
        EXPECT(0x9b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b35));
        EXPECT(0xa1, gbc.readMem(0x9b36));
        // CB A1 0172
        gbc.setState(0xc312, 0x4e6f, 0x63a0, 0x665e, 0x7a60, 0x8851, 0x0, 0x0);
        gbc.writeMem(0xc312, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4e6f, gbc.sp());
        EXPECT(0xc314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc312));
        EXPECT(0xa1, gbc.readMem(0xc313));
        // CB A1 0173
        gbc.setState(0xb4c, 0x48a7, 0x45a0, 0xd294, 0x9989, 0x1a84, 0x0, 0x0);
        gbc.writeMem(0xb4c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x48a7, gbc.sp());
        EXPECT(0xb4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0174
        gbc.setState(0x9aad, 0xf38e, 0x99a0, 0xbad9, 0x27c1, 0x8dcd, 0x0, 0x1);
        gbc.writeMem(0x9aad, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf38e, gbc.sp());
        EXPECT(0x9aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aad));
        EXPECT(0xa1, gbc.readMem(0x9aae));
        // CB A1 0175
        gbc.setState(0x3b9a, 0xf99a, 0xf260, 0xc094, 0xc020, 0xa35, 0x1, 0x1);
        gbc.writeMem(0x3b9a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf99a, gbc.sp());
        EXPECT(0x3b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0176
        gbc.setState(0xa03e, 0xc4f0, 0x2fd0, 0x6e81, 0x90a, 0x463, 0x0, 0x0);
        gbc.writeMem(0xa03e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc4f0, gbc.sp());
        EXPECT(0xa040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03e));
        EXPECT(0xa1, gbc.readMem(0xa03f));
        // CB A1 0177
        gbc.setState(0xed08, 0x97cc, 0x1de0, 0x8bfe, 0xf5de, 0x4d75, 0x1, 0x0);
        gbc.writeMem(0xed08, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x97cc, gbc.sp());
        EXPECT(0xed0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed08));
        EXPECT(0xa1, gbc.readMem(0xed09));
        // CB A1 0178
        gbc.setState(0xb0e6, 0x89e9, 0xd880, 0xa05f, 0x6829, 0x60d4, 0x1, 0x0);
        gbc.writeMem(0xb0e6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x89e9, gbc.sp());
        EXPECT(0xb0e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e6));
        EXPECT(0xa1, gbc.readMem(0xb0e7));
        // CB A1 0179
        gbc.setState(0x7eff, 0x3fa1, 0xd40, 0x6b2b, 0xcd59, 0x7a06, 0x0, 0x0);
        gbc.writeMem(0x7eff, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3fa1, gbc.sp());
        EXPECT(0x7f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 017A
        gbc.setState(0xe9f0, 0x11d7, 0xf7e0, 0x6f8c, 0x1656, 0x8963, 0x0, 0x0);
        gbc.writeMem(0xe9f0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x11d7, gbc.sp());
        EXPECT(0xe9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f0));
        EXPECT(0xa1, gbc.readMem(0xe9f1));
        // CB A1 017B
        gbc.setState(0x7fe5, 0x879b, 0x7960, 0xe660, 0x5212, 0x484c, 0x1, 0x0);
        gbc.writeMem(0x7fe5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x879b, gbc.sp());
        EXPECT(0x7fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 017C
        gbc.setState(0x29e7, 0xb71a, 0x18e0, 0x3f47, 0x2568, 0xaa73, 0x1, 0x0);
        gbc.writeMem(0x29e7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb71a, gbc.sp());
        EXPECT(0x29e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 017D
        gbc.setState(0x99d0, 0x9828, 0x1120, 0x4170, 0x9173, 0xb0d0, 0x0, 0x1);
        gbc.writeMem(0x99d0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9828, gbc.sp());
        EXPECT(0x99d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d0));
        EXPECT(0xa1, gbc.readMem(0x99d1));
        // CB A1 017E
        gbc.setState(0xad47, 0xe60a, 0xfd80, 0xa695, 0x366a, 0xeea6, 0x0, 0x1);
        gbc.writeMem(0xad47, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe60a, gbc.sp());
        EXPECT(0xad49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad47));
        EXPECT(0xa1, gbc.readMem(0xad48));
        // CB A1 017F
        gbc.setState(0x6659, 0x5e1a, 0x33d0, 0xfee3, 0x8cc8, 0x9b5c, 0x1, 0x1);
        gbc.writeMem(0x6659, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5e1a, gbc.sp());
        EXPECT(0x665b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0180
        gbc.setState(0xe2a7, 0xa5f6, 0x1280, 0x929d, 0x4c3a, 0x6b86, 0x1, 0x0);
        gbc.writeMem(0xe2a7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa5f6, gbc.sp());
        EXPECT(0xe2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a7));
        EXPECT(0xa1, gbc.readMem(0xe2a8));
        // CB A1 0181
        gbc.setState(0xe994, 0x8fd5, 0x12a0, 0xb8b3, 0xf006, 0x66f1, 0x0, 0x1);
        gbc.writeMem(0xe994, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8fd5, gbc.sp());
        EXPECT(0xe996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe994));
        EXPECT(0xa1, gbc.readMem(0xe995));
        // CB A1 0182
        gbc.setState(0xd4fa, 0xbf6b, 0x14c0, 0x9410, 0x9119, 0x9bad, 0x1, 0x0);
        gbc.writeMem(0xd4fa, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbf6b, gbc.sp());
        EXPECT(0xd4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4fa));
        EXPECT(0xa1, gbc.readMem(0xd4fb));
        // CB A1 0183
        gbc.setState(0xc8f1, 0xe4ec, 0x1580, 0x13f, 0xf9f2, 0xb96f, 0x0, 0x1);
        gbc.writeMem(0xc8f1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe4ec, gbc.sp());
        EXPECT(0xc8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f1));
        EXPECT(0xa1, gbc.readMem(0xc8f2));
        // CB A1 0184
        gbc.setState(0x2d0b, 0x75b4, 0xfb70, 0xa309, 0xfe72, 0xd89, 0x1, 0x1);
        gbc.writeMem(0x2d0b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x75b4, gbc.sp());
        EXPECT(0x2d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0185
        gbc.setState(0x76f7, 0x1237, 0xf7b0, 0xbc4, 0x9bf0, 0x1cc, 0x1, 0x0);
        gbc.writeMem(0x76f7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1237, gbc.sp());
        EXPECT(0x76f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0186
        gbc.setState(0x1cd1, 0x7f30, 0x2960, 0x2f6c, 0xcdd1, 0x69cf, 0x0, 0x1);
        gbc.writeMem(0x1cd1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7f30, gbc.sp());
        EXPECT(0x1cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0188
        gbc.setState(0xbf5b, 0xebf6, 0xb2b0, 0xa02, 0xadef, 0x7348, 0x1, 0x1);
        gbc.writeMem(0xbf5b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xebf6, gbc.sp());
        EXPECT(0xbf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5b));
        EXPECT(0xa1, gbc.readMem(0xbf5c));
        // CB A1 0189
        gbc.setState(0x5ebb, 0x784d, 0xc00, 0xb14, 0x24f6, 0x62b6, 0x1, 0x1);
        gbc.writeMem(0x5ebb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x784d, gbc.sp());
        EXPECT(0x5ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 018A
        gbc.setState(0xcaea, 0x636f, 0xf590, 0x399f, 0x59ae, 0x8596, 0x1, 0x1);
        gbc.writeMem(0xcaea, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x636f, gbc.sp());
        EXPECT(0xcaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaea));
        EXPECT(0xa1, gbc.readMem(0xcaeb));
        // CB A1 018B
        gbc.setState(0x1f89, 0x11b3, 0xe1a0, 0xaeed, 0x2456, 0xcb75, 0x1, 0x1);
        gbc.writeMem(0x1f89, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x11b3, gbc.sp());
        EXPECT(0x1f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 018C
        gbc.setState(0x1c78, 0xd2af, 0xaa90, 0xb6c4, 0x99c8, 0xaf81, 0x0, 0x0);
        gbc.writeMem(0x1c78, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd2af, gbc.sp());
        EXPECT(0x1c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 018D
        gbc.setState(0x3f88, 0x970e, 0xea30, 0x2a0f, 0xbb, 0x667e, 0x0, 0x0);
        gbc.writeMem(0x3f88, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x970e, gbc.sp());
        EXPECT(0x3f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 018E
        gbc.setState(0xa483, 0xa1c6, 0x9e40, 0x983d, 0x402a, 0x2390, 0x1, 0x0);
        gbc.writeMem(0xa483, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa1c6, gbc.sp());
        EXPECT(0xa485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa483));
        EXPECT(0xa1, gbc.readMem(0xa484));
        // CB A1 018F
        gbc.setState(0x87c0, 0xf322, 0x0, 0x684e, 0x188b, 0x7325, 0x0, 0x1);
        gbc.writeMem(0x87c0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf322, gbc.sp());
        EXPECT(0x87c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c0));
        EXPECT(0xa1, gbc.readMem(0x87c1));
        // CB A1 0190
        gbc.setState(0x7384, 0x7ac9, 0x30d0, 0xe791, 0x451b, 0xc9f0, 0x0, 0x1);
        gbc.writeMem(0x7384, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7ac9, gbc.sp());
        EXPECT(0x7386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0191
        gbc.setState(0x4833, 0xea18, 0x6a0, 0x6efb, 0xf18f, 0x923f, 0x1, 0x0);
        gbc.writeMem(0x4833, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xea18, gbc.sp());
        EXPECT(0x4835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0192
        gbc.setState(0x9b79, 0xea21, 0x1780, 0xf567, 0x48b9, 0x1a42, 0x1, 0x1);
        gbc.writeMem(0x9b79, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xea21, gbc.sp());
        EXPECT(0x9b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b79));
        EXPECT(0xa1, gbc.readMem(0x9b7a));
        // CB A1 0193
        gbc.setState(0xaab9, 0x112b, 0x1410, 0x9b3b, 0x5a44, 0x725, 0x0, 0x1);
        gbc.writeMem(0xaab9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x112b, gbc.sp());
        EXPECT(0xaabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab9));
        EXPECT(0xa1, gbc.readMem(0xaaba));
        // CB A1 0194
        gbc.setState(0xbaaf, 0xba14, 0x7070, 0x9583, 0x3a64, 0x28c9, 0x1, 0x1);
        gbc.writeMem(0xbaaf, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xba14, gbc.sp());
        EXPECT(0xbab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaaf));
        EXPECT(0xa1, gbc.readMem(0xbab0));
        // CB A1 0195
        gbc.setState(0x89c8, 0x5ae5, 0x6920, 0x7e87, 0x749, 0x325a, 0x0, 0x1);
        gbc.writeMem(0x89c8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5ae5, gbc.sp());
        EXPECT(0x89ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c8));
        EXPECT(0xa1, gbc.readMem(0x89c9));
        // CB A1 0196
        gbc.setState(0x1e82, 0x80f0, 0x91b0, 0xfc3f, 0xbda7, 0xedf5, 0x1, 0x0);
        gbc.writeMem(0x1e82, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x80f0, gbc.sp());
        EXPECT(0x1e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0197
        gbc.setState(0x7785, 0xacaa, 0xa750, 0x1268, 0x14f, 0x7200, 0x1, 0x0);
        gbc.writeMem(0x7785, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xacaa, gbc.sp());
        EXPECT(0x7787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0198
        gbc.setState(0x38e6, 0x95fe, 0xd7c0, 0x3a3f, 0xf812, 0x29b7, 0x1, 0x0);
        gbc.writeMem(0x38e6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x95fe, gbc.sp());
        EXPECT(0x38e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0199
        gbc.setState(0x51ab, 0x2104, 0x9910, 0x2a50, 0x73bb, 0x40bd, 0x0, 0x1);
        gbc.writeMem(0x51ab, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2104, gbc.sp());
        EXPECT(0x51ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 019B
        gbc.setState(0x6c78, 0xf7ab, 0x4e0, 0xcb77, 0x62c6, 0xb798, 0x1, 0x1);
        gbc.writeMem(0x6c78, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf7ab, gbc.sp());
        EXPECT(0x6c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 019C
        gbc.setState(0x4d5, 0x2233, 0x4f40, 0x2f07, 0x4ad3, 0x7968, 0x0, 0x0);
        gbc.writeMem(0x4d5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2233, gbc.sp());
        EXPECT(0x4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 019D
        gbc.setState(0x1b8b, 0xa1ce, 0x3280, 0xa3b3, 0x2dfd, 0x9ddd, 0x0, 0x1);
        gbc.writeMem(0x1b8b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa1ce, gbc.sp());
        EXPECT(0x1b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 019F
        gbc.setState(0x6e81, 0x138e, 0x6b0, 0x3ba7, 0x726, 0x5f87, 0x0, 0x0);
        gbc.writeMem(0x6e81, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x138e, gbc.sp());
        EXPECT(0x6e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01A0
        gbc.setState(0xb00, 0x6c78, 0x9af0, 0x4a35, 0x669, 0xe715, 0x0, 0x0);
        gbc.writeMem(0xb00, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6c78, gbc.sp());
        EXPECT(0xb02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01A1
        gbc.setState(0x3aab, 0x45db, 0x19c0, 0x8575, 0x3802, 0x8f6d, 0x0, 0x0);
        gbc.writeMem(0x3aab, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x45db, gbc.sp());
        EXPECT(0x3aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01A2
        gbc.setState(0x767a, 0x487a, 0xe50, 0xfd09, 0xd33f, 0xb9f, 0x0, 0x0);
        gbc.writeMem(0x767a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x487a, gbc.sp());
        EXPECT(0x767c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01A3
        gbc.setState(0x971c, 0x3868, 0x3ba0, 0xe729, 0xc97d, 0xe3f4, 0x1, 0x1);
        gbc.writeMem(0x971c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3868, gbc.sp());
        EXPECT(0x971e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971c));
        EXPECT(0xa1, gbc.readMem(0x971d));
        // CB A1 01A4
        gbc.setState(0x6f1, 0x9562, 0x9dc0, 0x2ab5, 0x8037, 0x4957, 0x1, 0x1);
        gbc.writeMem(0x6f1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9562, gbc.sp());
        EXPECT(0x6f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01A5
        gbc.setState(0x7603, 0x792b, 0x8a50, 0x4c68, 0x90c3, 0x3d4a, 0x1, 0x0);
        gbc.writeMem(0x7603, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x792b, gbc.sp());
        EXPECT(0x7605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01A6
        gbc.setState(0xbe72, 0xb6c0, 0x15f0, 0x9404, 0xc6e8, 0xe88b, 0x0, 0x1);
        gbc.writeMem(0xbe72, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0xbe74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe72));
        EXPECT(0xa1, gbc.readMem(0xbe73));
        // CB A1 01A7
        gbc.setState(0xd500, 0xe939, 0x88b0, 0x1b40, 0x9948, 0x26d, 0x0, 0x1);
        gbc.writeMem(0xd500, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe939, gbc.sp());
        EXPECT(0xd502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd500));
        EXPECT(0xa1, gbc.readMem(0xd501));
        // CB A1 01A8
        gbc.setState(0xe7bc, 0x9738, 0x4c10, 0xa5db, 0xf3ef, 0xb01f, 0x0, 0x0);
        gbc.writeMem(0xe7bc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9738, gbc.sp());
        EXPECT(0xe7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7bc));
        EXPECT(0xa1, gbc.readMem(0xe7bd));
        // CB A1 01A9
        gbc.setState(0xca01, 0xd99e, 0xaed0, 0xb855, 0xa00, 0xe9c7, 0x1, 0x1);
        gbc.writeMem(0xca01, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd99e, gbc.sp());
        EXPECT(0xca03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca01));
        EXPECT(0xa1, gbc.readMem(0xca02));
        // CB A1 01AA
        gbc.setState(0x31c0, 0xbd1d, 0x7c90, 0xe88a, 0x42a, 0x3351, 0x0, 0x1);
        gbc.writeMem(0x31c0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbd1d, gbc.sp());
        EXPECT(0x31c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01AB
        gbc.setState(0x93b9, 0x976a, 0xd9f0, 0xdf06, 0x191, 0x845b, 0x0, 0x0);
        gbc.writeMem(0x93b9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x976a, gbc.sp());
        EXPECT(0x93bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b9));
        EXPECT(0xa1, gbc.readMem(0x93ba));
        // CB A1 01AC
        gbc.setState(0xcd07, 0x40d, 0x8860, 0xc21a, 0xa59, 0xbb3e, 0x1, 0x0);
        gbc.writeMem(0xcd07, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x40d, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd07));
        EXPECT(0xa1, gbc.readMem(0xcd08));
        // CB A1 01AD
        gbc.setState(0xd363, 0x9d6e, 0xd6f0, 0x72a9, 0xacfd, 0x8ed9, 0x1, 0x0);
        gbc.writeMem(0xd363, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9d6e, gbc.sp());
        EXPECT(0xd365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd363));
        EXPECT(0xa1, gbc.readMem(0xd364));
        // CB A1 01AE
        gbc.setState(0xb2e1, 0xfd6, 0x42a0, 0x58e5, 0x402, 0x2a02, 0x1, 0x0);
        gbc.writeMem(0xb2e1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfd6, gbc.sp());
        EXPECT(0xb2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e1));
        EXPECT(0xa1, gbc.readMem(0xb2e2));
        // CB A1 01AF
        gbc.setState(0x9c4f, 0xecab, 0xb390, 0x3048, 0xcf7b, 0xe02f, 0x1, 0x0);
        gbc.writeMem(0x9c4f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xecab, gbc.sp());
        EXPECT(0x9c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c4f));
        EXPECT(0xa1, gbc.readMem(0x9c50));
        // CB A1 01B0
        gbc.setState(0x94e4, 0x76a8, 0x7500, 0xd776, 0xb5a5, 0xe284, 0x0, 0x1);
        gbc.writeMem(0x94e4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x76a8, gbc.sp());
        EXPECT(0x94e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e4));
        EXPECT(0xa1, gbc.readMem(0x94e5));
        // CB A1 01B1
        gbc.setState(0xa218, 0xec10, 0x8c10, 0xae6a, 0x4ed8, 0xc6f6, 0x1, 0x0);
        gbc.writeMem(0xa218, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0xa21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa218));
        EXPECT(0xa1, gbc.readMem(0xa219));
        // CB A1 01B2
        gbc.setState(0x15ea, 0x314a, 0xbdd0, 0xd14b, 0x69eb, 0x563d, 0x0, 0x0);
        gbc.writeMem(0x15ea, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x314a, gbc.sp());
        EXPECT(0x15ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01B3
        gbc.setState(0x16bb, 0x3b1b, 0x3cf0, 0x277c, 0xb7f8, 0xfbef, 0x1, 0x0);
        gbc.writeMem(0x16bb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3b1b, gbc.sp());
        EXPECT(0x16bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01B4
        gbc.setState(0xdb6c, 0x9a92, 0x9910, 0x9080, 0x415a, 0x846, 0x1, 0x1);
        gbc.writeMem(0xdb6c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9a92, gbc.sp());
        EXPECT(0xdb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6c));
        EXPECT(0xa1, gbc.readMem(0xdb6d));
        // CB A1 01B5
        gbc.setState(0xe07b, 0x6f4a, 0xe510, 0xd37c, 0x9941, 0xc047, 0x0, 0x1);
        gbc.writeMem(0xe07b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6f4a, gbc.sp());
        EXPECT(0xe07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07b));
        EXPECT(0xa1, gbc.readMem(0xe07c));
        // CB A1 01B6
        gbc.setState(0x2704, 0x3dd5, 0x9dc0, 0x5471, 0xb164, 0x5e25, 0x0, 0x1);
        gbc.writeMem(0x2704, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3dd5, gbc.sp());
        EXPECT(0x2706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01B7
        gbc.setState(0xdb9, 0xfd9b, 0xc0b0, 0x8996, 0xf061, 0xe85a, 0x1, 0x1);
        gbc.writeMem(0xdb9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfd9b, gbc.sp());
        EXPECT(0xdbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01B8
        gbc.setState(0x7ac, 0x58bc, 0x6af0, 0x8986, 0xf83a, 0xd04e, 0x1, 0x1);
        gbc.writeMem(0x7ac, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x58bc, gbc.sp());
        EXPECT(0x7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01B9
        gbc.setState(0x41ac, 0xa6d4, 0xd5f0, 0xf5b6, 0x902c, 0xfefc, 0x0, 0x0);
        gbc.writeMem(0x41ac, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa6d4, gbc.sp());
        EXPECT(0x41ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01BA
        gbc.setState(0xa903, 0xbe18, 0x3370, 0xec55, 0x174f, 0x7c5f, 0x0, 0x0);
        gbc.writeMem(0xa903, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbe18, gbc.sp());
        EXPECT(0xa905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa903));
        EXPECT(0xa1, gbc.readMem(0xa904));
        // CB A1 01BB
        gbc.setState(0xeb80, 0xd1c9, 0xd460, 0x7bb4, 0x44ef, 0x49d4, 0x1, 0x0);
        gbc.writeMem(0xeb80, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd1c9, gbc.sp());
        EXPECT(0xeb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb80));
        EXPECT(0xa1, gbc.readMem(0xeb81));
        // CB A1 01BD
        gbc.setState(0xc947, 0xcd1d, 0x3040, 0x6312, 0x86b0, 0x5b83, 0x1, 0x1);
        gbc.writeMem(0xc947, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcd1d, gbc.sp());
        EXPECT(0xc949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc947));
        EXPECT(0xa1, gbc.readMem(0xc948));
        // CB A1 01BE
        gbc.setState(0x5d2f, 0xfc13, 0x85f0, 0x3de9, 0xd773, 0xe431, 0x1, 0x0);
        gbc.writeMem(0x5d2f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfc13, gbc.sp());
        EXPECT(0x5d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01BF
        gbc.setState(0xe62b, 0x63e1, 0xe280, 0xbf94, 0x7e6f, 0x9b13, 0x0, 0x1);
        gbc.writeMem(0xe62b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x63e1, gbc.sp());
        EXPECT(0xe62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62b));
        EXPECT(0xa1, gbc.readMem(0xe62c));
        // CB A1 01C0
        gbc.setState(0x4bd8, 0xbfeb, 0x6b00, 0x8d77, 0x3a90, 0x2cd4, 0x1, 0x1);
        gbc.writeMem(0x4bd8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbfeb, gbc.sp());
        EXPECT(0x4bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01C2
        gbc.setState(0xd786, 0x4f75, 0xb5e0, 0xd473, 0x4bf8, 0xd0d4, 0x1, 0x1);
        gbc.writeMem(0xd786, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4f75, gbc.sp());
        EXPECT(0xd788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd786));
        EXPECT(0xa1, gbc.readMem(0xd787));
        // CB A1 01C3
        gbc.setState(0x6011, 0xe371, 0x9f20, 0x2ac7, 0x9c48, 0x9f67, 0x1, 0x0);
        gbc.writeMem(0x6011, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe371, gbc.sp());
        EXPECT(0x6013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01C4
        gbc.setState(0xe77f, 0xbf10, 0xd420, 0x4a56, 0x35fd, 0x9a53, 0x0, 0x0);
        gbc.writeMem(0xe77f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbf10, gbc.sp());
        EXPECT(0xe781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77f));
        EXPECT(0xa1, gbc.readMem(0xe780));
        // CB A1 01C5
        gbc.setState(0xefe7, 0x9dee, 0x56f0, 0xecb3, 0x1509, 0x4be, 0x1, 0x0);
        gbc.writeMem(0xefe7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9dee, gbc.sp());
        EXPECT(0xefe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe7));
        EXPECT(0xa1, gbc.readMem(0xefe8));
        // CB A1 01C6
        gbc.setState(0x5b95, 0xe6b9, 0x8500, 0xeecb, 0xe1bf, 0x644, 0x1, 0x0);
        gbc.writeMem(0x5b95, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe6b9, gbc.sp());
        EXPECT(0x5b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01C7
        gbc.setState(0xdc13, 0xd472, 0x7560, 0xa9d1, 0xf461, 0x377e, 0x1, 0x1);
        gbc.writeMem(0xdc13, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd472, gbc.sp());
        EXPECT(0xdc15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc13));
        EXPECT(0xa1, gbc.readMem(0xdc14));
        // CB A1 01C8
        gbc.setState(0xce5d, 0xf2ad, 0x4e80, 0xa7e6, 0x2e99, 0x82a0, 0x0, 0x0);
        gbc.writeMem(0xce5d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf2ad, gbc.sp());
        EXPECT(0xce5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5d));
        EXPECT(0xa1, gbc.readMem(0xce5e));
        // CB A1 01C9
        gbc.setState(0x1915, 0x702e, 0xb760, 0xda64, 0xbb5c, 0x20, 0x1, 0x0);
        gbc.writeMem(0x1915, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x702e, gbc.sp());
        EXPECT(0x1917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01CA
        gbc.setState(0x9578, 0x231f, 0x4220, 0xd61, 0x8472, 0x7bb9, 0x1, 0x0);
        gbc.writeMem(0x9578, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x231f, gbc.sp());
        EXPECT(0x957a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9578));
        EXPECT(0xa1, gbc.readMem(0x9579));
        // CB A1 01CB
        gbc.setState(0xd8ee, 0x2be8, 0xe770, 0x9265, 0x32b3, 0x11b, 0x1, 0x0);
        gbc.writeMem(0xd8ee, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2be8, gbc.sp());
        EXPECT(0xd8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ee));
        EXPECT(0xa1, gbc.readMem(0xd8ef));
        // CB A1 01CC
        gbc.setState(0xebae, 0x5166, 0xf410, 0xb01, 0xa003, 0xa19a, 0x0, 0x1);
        gbc.writeMem(0xebae, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5166, gbc.sp());
        EXPECT(0xebb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebae));
        EXPECT(0xa1, gbc.readMem(0xebaf));
        // CB A1 01CD
        gbc.setState(0x3ae, 0xb7b2, 0xd130, 0xd462, 0x779c, 0xeacb, 0x1, 0x0);
        gbc.writeMem(0x3ae, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb7b2, gbc.sp());
        EXPECT(0x3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01CE
        gbc.setState(0x64fb, 0x54b5, 0x1a50, 0x4461, 0xb1d3, 0x1eff, 0x0, 0x1);
        gbc.writeMem(0x64fb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x54b5, gbc.sp());
        EXPECT(0x64fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01CF
        gbc.setState(0xce7c, 0x9a27, 0xe140, 0xceac, 0x886d, 0x95f9, 0x0, 0x1);
        gbc.writeMem(0xce7c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9a27, gbc.sp());
        EXPECT(0xce7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7c));
        EXPECT(0xa1, gbc.readMem(0xce7d));
        // CB A1 01D0
        gbc.setState(0x70f6, 0x3e0, 0xb8c0, 0x82a8, 0xbf03, 0x5372, 0x0, 0x1);
        gbc.writeMem(0x70f6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3e0, gbc.sp());
        EXPECT(0x70f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01D1
        gbc.setState(0x2bd6, 0x1ef3, 0x18c0, 0x4386, 0x8856, 0x73b5, 0x0, 0x0);
        gbc.writeMem(0x2bd6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1ef3, gbc.sp());
        EXPECT(0x2bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01D2
        gbc.setState(0x9ca5, 0x68e6, 0xe970, 0xba9c, 0x7175, 0x64ad, 0x1, 0x1);
        gbc.writeMem(0x9ca5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x68e6, gbc.sp());
        EXPECT(0x9ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca5));
        EXPECT(0xa1, gbc.readMem(0x9ca6));
        // CB A1 01D3
        gbc.setState(0x9aa1, 0x7dcd, 0xbe20, 0x9405, 0xaa96, 0x6d84, 0x0, 0x1);
        gbc.writeMem(0x9aa1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7dcd, gbc.sp());
        EXPECT(0x9aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa1));
        EXPECT(0xa1, gbc.readMem(0x9aa2));
        // CB A1 01D4
        gbc.setState(0x369c, 0xb61d, 0x1330, 0x7433, 0x9f26, 0xf7fa, 0x0, 0x0);
        gbc.writeMem(0x369c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb61d, gbc.sp());
        EXPECT(0x369e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01D5
        gbc.setState(0xe318, 0xa647, 0xe0a0, 0x1b56, 0x1e49, 0x3ec6, 0x0, 0x1);
        gbc.writeMem(0xe318, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa647, gbc.sp());
        EXPECT(0xe31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe318));
        EXPECT(0xa1, gbc.readMem(0xe319));
        // CB A1 01D6
        gbc.setState(0xa838, 0xf9d5, 0x4f00, 0xa427, 0x3932, 0x5253, 0x0, 0x0);
        gbc.writeMem(0xa838, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf9d5, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa838));
        EXPECT(0xa1, gbc.readMem(0xa839));
        // CB A1 01D7
        gbc.setState(0x91b7, 0x5171, 0x4a50, 0x7e3b, 0x25e7, 0xa2c5, 0x1, 0x0);
        gbc.writeMem(0x91b7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5171, gbc.sp());
        EXPECT(0x91b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b7));
        EXPECT(0xa1, gbc.readMem(0x91b8));
        // CB A1 01D8
        gbc.setState(0x3a32, 0x92d5, 0x1880, 0x5a7, 0xee66, 0x5c23, 0x0, 0x1);
        gbc.writeMem(0x3a32, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x92d5, gbc.sp());
        EXPECT(0x3a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01D9
        gbc.setState(0x6e3b, 0xd600, 0x2e50, 0x4990, 0x6f90, 0xb4d8, 0x0, 0x1);
        gbc.writeMem(0x6e3b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd600, gbc.sp());
        EXPECT(0x6e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01DA
        gbc.setState(0x80c1, 0x4cc9, 0x2000, 0xd816, 0xc073, 0x95cd, 0x0, 0x1);
        gbc.writeMem(0x80c1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4cc9, gbc.sp());
        EXPECT(0x80c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c1));
        EXPECT(0xa1, gbc.readMem(0x80c2));
        // CB A1 01DB
        gbc.setState(0x1d05, 0x2e7b, 0x680, 0xf28c, 0xc354, 0xa597, 0x1, 0x0);
        gbc.writeMem(0x1d05, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2e7b, gbc.sp());
        EXPECT(0x1d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01DC
        gbc.setState(0x4096, 0x8d7, 0xb870, 0x1ee5, 0x9172, 0xbe45, 0x1, 0x0);
        gbc.writeMem(0x4096, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8d7, gbc.sp());
        EXPECT(0x4098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01DD
        gbc.setState(0x1788, 0xa78c, 0xeb40, 0x11d7, 0x7d68, 0xcfe8, 0x0, 0x0);
        gbc.writeMem(0x1788, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa78c, gbc.sp());
        EXPECT(0x178a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01DE
        gbc.setState(0xa721, 0xb6c0, 0x7440, 0xe675, 0xe404, 0x421d, 0x1, 0x1);
        gbc.writeMem(0xa721, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0xa723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa721));
        EXPECT(0xa1, gbc.readMem(0xa722));
        // CB A1 01DF
        gbc.setState(0x6791, 0xf117, 0x65b0, 0xfb5a, 0xdb21, 0xa052, 0x1, 0x0);
        gbc.writeMem(0x6791, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf117, gbc.sp());
        EXPECT(0x6793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01E0
        gbc.setState(0xa315, 0xb7f4, 0x7f30, 0x9343, 0x31c5, 0x8764, 0x1, 0x0);
        gbc.writeMem(0xa315, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb7f4, gbc.sp());
        EXPECT(0xa317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa315));
        EXPECT(0xa1, gbc.readMem(0xa316));
        // CB A1 01E1
        gbc.setState(0x3881, 0xbba7, 0xddb0, 0xfb8a, 0xab42, 0xaf8e, 0x1, 0x1);
        gbc.writeMem(0x3881, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbba7, gbc.sp());
        EXPECT(0x3883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01E2
        gbc.setState(0x1993, 0x4cda, 0x9130, 0x8e69, 0x4aec, 0x3018, 0x1, 0x0);
        gbc.writeMem(0x1993, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4cda, gbc.sp());
        EXPECT(0x1995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01E3
        gbc.setState(0xd795, 0xcef2, 0x71d0, 0x4f64, 0xaae6, 0xbe55, 0x0, 0x1);
        gbc.writeMem(0xd795, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcef2, gbc.sp());
        EXPECT(0xd797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd795));
        EXPECT(0xa1, gbc.readMem(0xd796));
        // CB A1 01E4
        gbc.setState(0x31f9, 0x522a, 0x5110, 0x99e, 0xea7d, 0x798b, 0x0, 0x1);
        gbc.writeMem(0x31f9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x522a, gbc.sp());
        EXPECT(0x31fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01E5
        gbc.setState(0x17f5, 0x5d80, 0x2e0, 0xb802, 0x2064, 0x4c68, 0x1, 0x0);
        gbc.writeMem(0x17f5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5d80, gbc.sp());
        EXPECT(0x17f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01E6
        gbc.setState(0xc98c, 0xcbdf, 0x1660, 0xd6a9, 0xaa10, 0x252e, 0x0, 0x0);
        gbc.writeMem(0xc98c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcbdf, gbc.sp());
        EXPECT(0xc98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98c));
        EXPECT(0xa1, gbc.readMem(0xc98d));
        // CB A1 01E7
        gbc.setState(0x753b, 0x1e93, 0x9830, 0x1644, 0xcde5, 0xd62f, 0x1, 0x1);
        gbc.writeMem(0x753b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1e93, gbc.sp());
        EXPECT(0x753d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01E8
        gbc.setState(0xb698, 0x6223, 0x9e00, 0xbad6, 0xf0f7, 0xe699, 0x1, 0x1);
        gbc.writeMem(0xb698, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6223, gbc.sp());
        EXPECT(0xb69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb698));
        EXPECT(0xa1, gbc.readMem(0xb699));
        // CB A1 01E9
        gbc.setState(0x5759, 0x65bd, 0x4970, 0xa188, 0x471f, 0xab9f, 0x0, 0x1);
        gbc.writeMem(0x5759, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x65bd, gbc.sp());
        EXPECT(0x575b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01EA
        gbc.setState(0x668a, 0x1257, 0xa9e0, 0x84d9, 0x68fe, 0x145d, 0x0, 0x1);
        gbc.writeMem(0x668a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1257, gbc.sp());
        EXPECT(0x668c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01EC
        gbc.setState(0x5571, 0xc81c, 0x68b0, 0x4a45, 0x169a, 0xdfa8, 0x0, 0x0);
        gbc.writeMem(0x5571, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc81c, gbc.sp());
        EXPECT(0x5573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01ED
        gbc.setState(0x294e, 0x4458, 0x3860, 0xa6f, 0x3012, 0x5645, 0x0, 0x1);
        gbc.writeMem(0x294e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4458, gbc.sp());
        EXPECT(0x2950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01EE
        gbc.setState(0x6be4, 0xd287, 0xde00, 0xae02, 0xd32c, 0xe6ce, 0x0, 0x0);
        gbc.writeMem(0x6be4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd287, gbc.sp());
        EXPECT(0x6be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01EF
        gbc.setState(0x4a8a, 0xeb67, 0xe150, 0xebb6, 0x9f70, 0xd5a8, 0x1, 0x1);
        gbc.writeMem(0x4a8a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xeb67, gbc.sp());
        EXPECT(0x4a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01F0
        gbc.setState(0xa491, 0xcd24, 0xae0, 0xa081, 0x67b2, 0x5db0, 0x0, 0x1);
        gbc.writeMem(0xa491, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0xa493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa491));
        EXPECT(0xa1, gbc.readMem(0xa492));
        // CB A1 01F1
        gbc.setState(0x34a8, 0xb6da, 0x1a70, 0x8f57, 0x6c10, 0xf35b, 0x0, 0x0);
        gbc.writeMem(0x34a8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb6da, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 01F2
        gbc.setState(0xc2de, 0x5cbc, 0x4470, 0x927f, 0x274c, 0x9c47, 0x0, 0x1);
        gbc.writeMem(0xc2de, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5cbc, gbc.sp());
        EXPECT(0xc2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2de));
        EXPECT(0xa1, gbc.readMem(0xc2df));
        // CB A1 01F3
        gbc.setState(0x7d75, 0xaf1f, 0xa8a0, 0xd9b, 0xc210, 0x6fd9, 0x1, 0x0);
        gbc.writeMem(0x7d75, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xaf1f, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01F5
        gbc.setState(0xe919, 0xd7ed, 0x8680, 0x571d, 0x8e93, 0x4034, 0x1, 0x0);
        gbc.writeMem(0xe919, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd7ed, gbc.sp());
        EXPECT(0xe91b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe919));
        EXPECT(0xa1, gbc.readMem(0xe91a));
        // CB A1 01F6
        gbc.setState(0x3da5, 0xafab, 0x1300, 0xb55f, 0xad2c, 0x6ffa, 0x1, 0x1);
        gbc.writeMem(0x3da5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xafab, gbc.sp());
        EXPECT(0x3da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01F7
        gbc.setState(0x7ac6, 0xae40, 0x1da0, 0x1280, 0xb362, 0xfe6c, 0x1, 0x0);
        gbc.writeMem(0x7ac6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xae40, gbc.sp());
        EXPECT(0x7ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01F8
        gbc.setState(0xa563, 0x40a2, 0x9ef0, 0xe3ba, 0x3ccf, 0x2cfc, 0x0, 0x0);
        gbc.writeMem(0xa563, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x40a2, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa563));
        EXPECT(0xa1, gbc.readMem(0xa564));
        // CB A1 01F9
        gbc.setState(0x50a, 0xea02, 0x7700, 0x1101, 0xf04c, 0x2030, 0x1, 0x0);
        gbc.writeMem(0x50a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xea02, gbc.sp());
        EXPECT(0x50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01FA
        gbc.setState(0xc2c1, 0x110b, 0x2c30, 0x377, 0x5d48, 0x5274, 0x0, 0x1);
        gbc.writeMem(0xc2c1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x110b, gbc.sp());
        EXPECT(0xc2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c1));
        EXPECT(0xa1, gbc.readMem(0xc2c2));
        // CB A1 01FB
        gbc.setState(0xd9b3, 0xcb88, 0xbe60, 0xd916, 0xaae2, 0x76f2, 0x1, 0x1);
        gbc.writeMem(0xd9b3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcb88, gbc.sp());
        EXPECT(0xd9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b3));
        EXPECT(0xa1, gbc.readMem(0xd9b4));
        // CB A1 01FC
        gbc.setState(0xea4c, 0x3e34, 0x35d0, 0xed5e, 0x7a85, 0xd39c, 0x1, 0x1);
        gbc.writeMem(0xea4c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3e34, gbc.sp());
        EXPECT(0xea4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4c));
        EXPECT(0xa1, gbc.readMem(0xea4d));
        // CB A1 01FD
        gbc.setState(0x9d46, 0xd60d, 0xd450, 0x3e7e, 0x66ba, 0x820e, 0x1, 0x1);
        gbc.writeMem(0x9d46, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd60d, gbc.sp());
        EXPECT(0x9d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d46));
        EXPECT(0xa1, gbc.readMem(0x9d47));
        // CB A1 01FE
        gbc.setState(0x1e97, 0xb09e, 0xfd60, 0xdacd, 0x5cf5, 0xdc34, 0x0, 0x0);
        gbc.writeMem(0x1e97, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb09e, gbc.sp());
        EXPECT(0x1e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 01FF
        gbc.setState(0x32f3, 0x69d0, 0x1cc0, 0x5f5f, 0x489e, 0x46ef, 0x1, 0x1);
        gbc.writeMem(0x32f3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x69d0, gbc.sp());
        EXPECT(0x32f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0200
        gbc.setState(0x8498, 0xee61, 0xd9a0, 0xca2f, 0x5f4a, 0x1bce, 0x0, 0x1);
        gbc.writeMem(0x8498, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xee61, gbc.sp());
        EXPECT(0x849a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8498));
        EXPECT(0xa1, gbc.readMem(0x8499));
        // CB A1 0201
        gbc.setState(0x44dc, 0x1379, 0x350, 0x85aa, 0x9b08, 0xe612, 0x0, 0x1);
        gbc.writeMem(0x44dc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1379, gbc.sp());
        EXPECT(0x44de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0202
        gbc.setState(0x1703, 0x1082, 0x2ae0, 0xd879, 0xe6f1, 0x8222, 0x0, 0x0);
        gbc.writeMem(0x1703, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1082, gbc.sp());
        EXPECT(0x1705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0203
        gbc.setState(0x574a, 0xa5b1, 0x1560, 0x3ef4, 0xf5c6, 0x511a, 0x1, 0x0);
        gbc.writeMem(0x574a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa5b1, gbc.sp());
        EXPECT(0x574c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0204
        gbc.setState(0x84f6, 0x59e0, 0x2260, 0x8f47, 0xeb03, 0x5303, 0x1, 0x0);
        gbc.writeMem(0x84f6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x59e0, gbc.sp());
        EXPECT(0x84f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f6));
        EXPECT(0xa1, gbc.readMem(0x84f7));
        // CB A1 0205
        gbc.setState(0x4c51, 0x9ee8, 0x5270, 0xda10, 0x9c73, 0x5bbb, 0x0, 0x0);
        gbc.writeMem(0x4c51, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9ee8, gbc.sp());
        EXPECT(0x4c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0206
        gbc.setState(0x56a6, 0xc3e, 0x7030, 0x78ba, 0xfab1, 0x5dd8, 0x1, 0x0);
        gbc.writeMem(0x56a6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc3e, gbc.sp());
        EXPECT(0x56a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0207
        gbc.setState(0x1eda, 0x3b0e, 0x6eb0, 0x959b, 0x223b, 0x4fe3, 0x1, 0x1);
        gbc.writeMem(0x1eda, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3b0e, gbc.sp());
        EXPECT(0x1edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0208
        gbc.setState(0x34dd, 0x471, 0xfcc0, 0x892, 0x86e1, 0xf51f, 0x0, 0x1);
        gbc.writeMem(0x34dd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x471, gbc.sp());
        EXPECT(0x34df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0209
        gbc.setState(0xc459, 0xeb25, 0x1480, 0xcc65, 0x2362, 0xeca4, 0x0, 0x0);
        gbc.writeMem(0xc459, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xeb25, gbc.sp());
        EXPECT(0xc45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc459));
        EXPECT(0xa1, gbc.readMem(0xc45a));
        // CB A1 020A
        gbc.setState(0x762, 0x60d2, 0x7660, 0xc511, 0x9153, 0xa513, 0x0, 0x1);
        gbc.writeMem(0x762, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x60d2, gbc.sp());
        EXPECT(0x764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 020B
        gbc.setState(0xcc7e, 0xec2c, 0x4ac0, 0x9880, 0xdc3f, 0xd495, 0x0, 0x1);
        gbc.writeMem(0xcc7e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xec2c, gbc.sp());
        EXPECT(0xcc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7e));
        EXPECT(0xa1, gbc.readMem(0xcc7f));
        // CB A1 020C
        gbc.setState(0x5479, 0x9add, 0x1290, 0x110e, 0xa3cd, 0x96b3, 0x1, 0x1);
        gbc.writeMem(0x5479, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9add, gbc.sp());
        EXPECT(0x547b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 020D
        gbc.setState(0xa266, 0xb600, 0x7910, 0x8155, 0xba53, 0x8325, 0x1, 0x0);
        gbc.writeMem(0xa266, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb600, gbc.sp());
        EXPECT(0xa268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa266));
        EXPECT(0xa1, gbc.readMem(0xa267));
        // CB A1 020E
        gbc.setState(0x9d40, 0xb2f, 0x31f0, 0x3af0, 0xf240, 0x3fd1, 0x1, 0x0);
        gbc.writeMem(0x9d40, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb2f, gbc.sp());
        EXPECT(0x9d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d40));
        EXPECT(0xa1, gbc.readMem(0x9d41));
        // CB A1 020F
        gbc.setState(0x463d, 0x303b, 0xf150, 0x977, 0x49f9, 0x3956, 0x0, 0x1);
        gbc.writeMem(0x463d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x303b, gbc.sp());
        EXPECT(0x463f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0210
        gbc.setState(0x4aac, 0xf4dc, 0x7030, 0x3b15, 0xbae9, 0x6ddd, 0x0, 0x0);
        gbc.writeMem(0x4aac, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf4dc, gbc.sp());
        EXPECT(0x4aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0211
        gbc.setState(0x2035, 0x43fb, 0x7e0, 0x9cd0, 0x8c87, 0xc74a, 0x1, 0x1);
        gbc.writeMem(0x2035, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x43fb, gbc.sp());
        EXPECT(0x2037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0212
        gbc.setState(0xc95b, 0x952, 0x1eb0, 0x1901, 0x8e07, 0x816d, 0x1, 0x0);
        gbc.writeMem(0xc95b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x952, gbc.sp());
        EXPECT(0xc95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc95b));
        EXPECT(0xa1, gbc.readMem(0xc95c));
        // CB A1 0213
        gbc.setState(0xd7f0, 0xda6b, 0x1310, 0xeda, 0x7a8e, 0x7c13, 0x0, 0x1);
        gbc.writeMem(0xd7f0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xda6b, gbc.sp());
        EXPECT(0xd7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f0));
        EXPECT(0xa1, gbc.readMem(0xd7f1));
        // CB A1 0214
        gbc.setState(0xd726, 0x988, 0x5230, 0x4ea9, 0x15fb, 0x3b93, 0x1, 0x1);
        gbc.writeMem(0xd726, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x988, gbc.sp());
        EXPECT(0xd728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd726));
        EXPECT(0xa1, gbc.readMem(0xd727));
        // CB A1 0215
        gbc.setState(0xe669, 0x20ba, 0x4890, 0x5241, 0xe8a8, 0x30b, 0x0, 0x1);
        gbc.writeMem(0xe669, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x20ba, gbc.sp());
        EXPECT(0xe66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe669));
        EXPECT(0xa1, gbc.readMem(0xe66a));
        // CB A1 0217
        gbc.setState(0xc2f3, 0xc4b7, 0xa250, 0xe712, 0x7c22, 0x1a01, 0x0, 0x1);
        gbc.writeMem(0xc2f3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc4b7, gbc.sp());
        EXPECT(0xc2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f3));
        EXPECT(0xa1, gbc.readMem(0xc2f4));
        // CB A1 0218
        gbc.setState(0xcb15, 0x2170, 0x36e0, 0xc126, 0xd9af, 0x5be3, 0x1, 0x0);
        gbc.writeMem(0xcb15, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2170, gbc.sp());
        EXPECT(0xcb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb15));
        EXPECT(0xa1, gbc.readMem(0xcb16));
        // CB A1 0219
        gbc.setState(0xcd6c, 0xa2ed, 0xe5e0, 0x6d4f, 0x67e6, 0x3d53, 0x1, 0x1);
        gbc.writeMem(0xcd6c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa2ed, gbc.sp());
        EXPECT(0xcd6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd6c));
        EXPECT(0xa1, gbc.readMem(0xcd6d));
        // CB A1 021A
        gbc.setState(0x68df, 0x9223, 0x4db0, 0x6f37, 0x87b9, 0x28fd, 0x1, 0x0);
        gbc.writeMem(0x68df, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9223, gbc.sp());
        EXPECT(0x68e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 021B
        gbc.setState(0xa456, 0x96fa, 0x27b0, 0x7c5f, 0x16ba, 0x6cd9, 0x0, 0x0);
        gbc.writeMem(0xa456, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x96fa, gbc.sp());
        EXPECT(0xa458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa456));
        EXPECT(0xa1, gbc.readMem(0xa457));
        // CB A1 021C
        gbc.setState(0x953b, 0x1d3e, 0xaa0, 0xb8f7, 0x2bd7, 0x4bcb, 0x0, 0x0);
        gbc.writeMem(0x953b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1d3e, gbc.sp());
        EXPECT(0x953d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953b));
        EXPECT(0xa1, gbc.readMem(0x953c));
        // CB A1 021D
        gbc.setState(0x921, 0x4aec, 0xcd0, 0x7804, 0x6648, 0xd8d, 0x0, 0x1);
        gbc.writeMem(0x921, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4aec, gbc.sp());
        EXPECT(0x923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 021E
        gbc.setState(0xda3d, 0x9904, 0x4400, 0x25c0, 0xcc46, 0x50f6, 0x0, 0x1);
        gbc.writeMem(0xda3d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9904, gbc.sp());
        EXPECT(0xda3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3d));
        EXPECT(0xa1, gbc.readMem(0xda3e));
        // CB A1 021F
        gbc.setState(0xe41e, 0xb134, 0x16e0, 0x7c92, 0xb730, 0xa68d, 0x1, 0x0);
        gbc.writeMem(0xe41e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb134, gbc.sp());
        EXPECT(0xe420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41e));
        EXPECT(0xa1, gbc.readMem(0xe41f));
        // CB A1 0220
        gbc.setState(0x12e1, 0x45c3, 0x10b0, 0x639, 0xbf2, 0xb28f, 0x1, 0x0);
        gbc.writeMem(0x12e1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x45c3, gbc.sp());
        EXPECT(0x12e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0221
        gbc.setState(0xaa67, 0xbca0, 0x9e00, 0x422b, 0x6447, 0x2c30, 0x1, 0x1);
        gbc.writeMem(0xaa67, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbca0, gbc.sp());
        EXPECT(0xaa69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa67));
        EXPECT(0xa1, gbc.readMem(0xaa68));
        // CB A1 0222
        gbc.setState(0xb6bd, 0xe50c, 0x4100, 0xc9ee, 0xe69a, 0x4567, 0x1, 0x1);
        gbc.writeMem(0xb6bd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe50c, gbc.sp());
        EXPECT(0xb6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6bd));
        EXPECT(0xa1, gbc.readMem(0xb6be));
        // CB A1 0223
        gbc.setState(0xaee4, 0xed31, 0x85a0, 0xe1de, 0x9d1f, 0x8b6f, 0x1, 0x1);
        gbc.writeMem(0xaee4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xed31, gbc.sp());
        EXPECT(0xaee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee4));
        EXPECT(0xa1, gbc.readMem(0xaee5));
        // CB A1 0224
        gbc.setState(0x224d, 0x2460, 0x9fa0, 0x8a35, 0x1fc3, 0xdda1, 0x1, 0x1);
        gbc.writeMem(0x224d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2460, gbc.sp());
        EXPECT(0x224f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0225
        gbc.setState(0xb72d, 0xa5fd, 0xc7f0, 0xe032, 0xf50a, 0xb1d3, 0x0, 0x1);
        gbc.writeMem(0xb72d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa5fd, gbc.sp());
        EXPECT(0xb72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72d));
        EXPECT(0xa1, gbc.readMem(0xb72e));
        // CB A1 0226
        gbc.setState(0xed3c, 0x6fe4, 0x5760, 0x7c1a, 0x7874, 0x9f82, 0x0, 0x0);
        gbc.writeMem(0xed3c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6fe4, gbc.sp());
        EXPECT(0xed3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3c));
        EXPECT(0xa1, gbc.readMem(0xed3d));
        // CB A1 0227
        gbc.setState(0x6f15, 0xabe3, 0xc490, 0x11bd, 0xb1bb, 0x4cdb, 0x0, 0x1);
        gbc.writeMem(0x6f15, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xabe3, gbc.sp());
        EXPECT(0x6f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0228
        gbc.setState(0x2b18, 0xe80d, 0xb480, 0x4909, 0xbc3, 0xdb48, 0x1, 0x1);
        gbc.writeMem(0x2b18, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe80d, gbc.sp());
        EXPECT(0x2b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0229
        gbc.setState(0xe650, 0xe7d8, 0x3f30, 0x5419, 0xa591, 0xaa6f, 0x0, 0x0);
        gbc.writeMem(0xe650, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe7d8, gbc.sp());
        EXPECT(0xe652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe650));
        EXPECT(0xa1, gbc.readMem(0xe651));
        // CB A1 022A
        gbc.setState(0x8532, 0xe893, 0x1150, 0x343f, 0x4da7, 0xfddc, 0x1, 0x1);
        gbc.writeMem(0x8532, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe893, gbc.sp());
        EXPECT(0x8534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8532));
        EXPECT(0xa1, gbc.readMem(0x8533));
        // CB A1 022B
        gbc.setState(0xa09a, 0x7b36, 0x930, 0xd116, 0x18de, 0xdc01, 0x0, 0x0);
        gbc.writeMem(0xa09a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7b36, gbc.sp());
        EXPECT(0xa09c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09a));
        EXPECT(0xa1, gbc.readMem(0xa09b));
        // CB A1 022C
        gbc.setState(0xe4ed, 0x9834, 0xb8b0, 0xff5f, 0xa9dc, 0x3ac6, 0x0, 0x0);
        gbc.writeMem(0xe4ed, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9834, gbc.sp());
        EXPECT(0xe4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ed));
        EXPECT(0xa1, gbc.readMem(0xe4ee));
        // CB A1 022E
        gbc.setState(0x932f, 0x93d4, 0x19b0, 0xbd40, 0x38f4, 0x4260, 0x1, 0x1);
        gbc.writeMem(0x932f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x93d4, gbc.sp());
        EXPECT(0x9331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x932f));
        EXPECT(0xa1, gbc.readMem(0x9330));
        // CB A1 022F
        gbc.setState(0x9009, 0x87b5, 0xa900, 0x1f30, 0xcf47, 0x8d5, 0x0, 0x1);
        gbc.writeMem(0x9009, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x87b5, gbc.sp());
        EXPECT(0x900b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9009));
        EXPECT(0xa1, gbc.readMem(0x900a));
        // CB A1 0230
        gbc.setState(0x9ab0, 0xb42e, 0x3370, 0x89ec, 0xb0dd, 0xfb7d, 0x1, 0x1);
        gbc.writeMem(0x9ab0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb42e, gbc.sp());
        EXPECT(0x9ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab0));
        EXPECT(0xa1, gbc.readMem(0x9ab1));
        // CB A1 0231
        gbc.setState(0xdb76, 0xfc48, 0x1800, 0x415e, 0x42e3, 0x3ce4, 0x0, 0x1);
        gbc.writeMem(0xdb76, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfc48, gbc.sp());
        EXPECT(0xdb78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb76));
        EXPECT(0xa1, gbc.readMem(0xdb77));
        // CB A1 0232
        gbc.setState(0xacf5, 0xe37c, 0x3ce0, 0x63c5, 0x80ce, 0x2d60, 0x0, 0x0);
        gbc.writeMem(0xacf5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe37c, gbc.sp());
        EXPECT(0xacf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf5));
        EXPECT(0xa1, gbc.readMem(0xacf6));
        // CB A1 0233
        gbc.setState(0x41a1, 0xe51, 0xf040, 0x2a0a, 0x5ffe, 0x1d3f, 0x1, 0x1);
        gbc.writeMem(0x41a1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe51, gbc.sp());
        EXPECT(0x41a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0235
        gbc.setState(0xa361, 0x2816, 0xd120, 0x2f8a, 0x326d, 0x7aff, 0x1, 0x0);
        gbc.writeMem(0xa361, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2816, gbc.sp());
        EXPECT(0xa363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa361));
        EXPECT(0xa1, gbc.readMem(0xa362));
        // CB A1 0236
        gbc.setState(0x3fca, 0xab8b, 0x3ac0, 0x24a5, 0xb583, 0x3a2e, 0x1, 0x1);
        gbc.writeMem(0x3fca, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xab8b, gbc.sp());
        EXPECT(0x3fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0237
        gbc.setState(0xdf35, 0x379a, 0x9030, 0xb18c, 0x262a, 0x9761, 0x1, 0x0);
        gbc.writeMem(0xdf35, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x379a, gbc.sp());
        EXPECT(0xdf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf35));
        EXPECT(0xa1, gbc.readMem(0xdf36));
        // CB A1 0238
        gbc.setState(0x82ef, 0x7f56, 0x9930, 0x8a7e, 0x7802, 0x9f1a, 0x1, 0x1);
        gbc.writeMem(0x82ef, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7f56, gbc.sp());
        EXPECT(0x82f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ef));
        EXPECT(0xa1, gbc.readMem(0x82f0));
        // CB A1 0239
        gbc.setState(0x9343, 0xc634, 0x7ab0, 0xff9f, 0x796a, 0x256d, 0x0, 0x0);
        gbc.writeMem(0x9343, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc634, gbc.sp());
        EXPECT(0x9345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9343));
        EXPECT(0xa1, gbc.readMem(0x9344));
        // CB A1 023A
        gbc.setState(0x2a9e, 0xbd65, 0x98a0, 0x3015, 0x81e, 0xe7cc, 0x0, 0x0);
        gbc.writeMem(0x2a9e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbd65, gbc.sp());
        EXPECT(0x2aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 023B
        gbc.setState(0x7c40, 0x7d02, 0xa060, 0x94e7, 0xf095, 0x4457, 0x0, 0x0);
        gbc.writeMem(0x7c40, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7d02, gbc.sp());
        EXPECT(0x7c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 023C
        gbc.setState(0x413e, 0xeeaa, 0xb2f0, 0x4c69, 0x5b3d, 0xa3dc, 0x1, 0x0);
        gbc.writeMem(0x413e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xeeaa, gbc.sp());
        EXPECT(0x4140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 023D
        gbc.setState(0x6489, 0x5869, 0x1a60, 0x181, 0x6fa5, 0x89ca, 0x0, 0x1);
        gbc.writeMem(0x6489, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5869, gbc.sp());
        EXPECT(0x648b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 023E
        gbc.setState(0xd5bd, 0x1cbf, 0xe6e0, 0xbdec, 0xf550, 0x161f, 0x0, 0x1);
        gbc.writeMem(0xd5bd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1cbf, gbc.sp());
        EXPECT(0xd5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5bd));
        EXPECT(0xa1, gbc.readMem(0xd5be));
        // CB A1 023F
        gbc.setState(0xbe31, 0xecf1, 0xa310, 0x63e9, 0x7721, 0x249c, 0x0, 0x0);
        gbc.writeMem(0xbe31, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xecf1, gbc.sp());
        EXPECT(0xbe33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe31));
        EXPECT(0xa1, gbc.readMem(0xbe32));
        // CB A1 0240
        gbc.setState(0x2827, 0xbe8c, 0xf910, 0x8fbd, 0x9454, 0xf161, 0x1, 0x1);
        gbc.writeMem(0x2827, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbe8c, gbc.sp());
        EXPECT(0x2829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0242
        gbc.setState(0xc837, 0xa39b, 0xbd50, 0x1de7, 0x276a, 0x2213, 0x1, 0x1);
        gbc.writeMem(0xc837, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa39b, gbc.sp());
        EXPECT(0xc839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc837));
        EXPECT(0xa1, gbc.readMem(0xc838));
        // CB A1 0243
        gbc.setState(0x3fd1, 0x1007, 0x8cf0, 0x99fd, 0x5f1e, 0xd92a, 0x0, 0x1);
        gbc.writeMem(0x3fd1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0x3fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0245
        gbc.setState(0x278e, 0x6ef6, 0xda20, 0xf79, 0x9c6d, 0xeeb2, 0x0, 0x1);
        gbc.writeMem(0x278e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6ef6, gbc.sp());
        EXPECT(0x2790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0247
        gbc.setState(0x9cbc, 0xb855, 0x4550, 0x53d5, 0x2431, 0x6a67, 0x1, 0x0);
        gbc.writeMem(0x9cbc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb855, gbc.sp());
        EXPECT(0x9cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbc));
        EXPECT(0xa1, gbc.readMem(0x9cbd));
        // CB A1 0248
        gbc.setState(0x6a9f, 0xef5d, 0xca0, 0xc57, 0xc237, 0x3fc7, 0x0, 0x1);
        gbc.writeMem(0x6a9f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xef5d, gbc.sp());
        EXPECT(0x6aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0249
        gbc.setState(0x20fd, 0x440e, 0x3b80, 0x5ea6, 0x723f, 0xd187, 0x0, 0x1);
        gbc.writeMem(0x20fd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x440e, gbc.sp());
        EXPECT(0x20ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 024A
        gbc.setState(0xa0f8, 0xd0c1, 0xb620, 0x594f, 0x872f, 0xb165, 0x1, 0x0);
        gbc.writeMem(0xa0f8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd0c1, gbc.sp());
        EXPECT(0xa0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f8));
        EXPECT(0xa1, gbc.readMem(0xa0f9));
        // CB A1 024B
        gbc.setState(0xcb57, 0xefe9, 0xb800, 0x1b2a, 0xa80b, 0xb4fc, 0x1, 0x1);
        gbc.writeMem(0xcb57, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xefe9, gbc.sp());
        EXPECT(0xcb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb57));
        EXPECT(0xa1, gbc.readMem(0xcb58));
        // CB A1 024C
        gbc.setState(0xa0d8, 0xafbc, 0x21b0, 0xeb2d, 0x3a1e, 0x943b, 0x1, 0x1);
        gbc.writeMem(0xa0d8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xafbc, gbc.sp());
        EXPECT(0xa0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d8));
        EXPECT(0xa1, gbc.readMem(0xa0d9));
        // CB A1 024D
        gbc.setState(0x778c, 0x6605, 0xfb10, 0x92a6, 0xb483, 0x1f03, 0x1, 0x1);
        gbc.writeMem(0x778c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6605, gbc.sp());
        EXPECT(0x778e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 024E
        gbc.setState(0xdd41, 0xbb84, 0xa3f0, 0x3842, 0xb04d, 0x9014, 0x0, 0x0);
        gbc.writeMem(0xdd41, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbb84, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd41));
        EXPECT(0xa1, gbc.readMem(0xdd42));
        // CB A1 024F
        gbc.setState(0x90f0, 0xd004, 0x3240, 0xf1e7, 0x21b9, 0xc127, 0x1, 0x0);
        gbc.writeMem(0x90f0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd004, gbc.sp());
        EXPECT(0x90f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f0));
        EXPECT(0xa1, gbc.readMem(0x90f1));
        // CB A1 0250
        gbc.setState(0x5aeb, 0x214d, 0xb3c0, 0xb0f, 0x5109, 0x772, 0x0, 0x0);
        gbc.writeMem(0x5aeb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x214d, gbc.sp());
        EXPECT(0x5aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0251
        gbc.setState(0x95f4, 0xfa8f, 0x56a0, 0x6c7f, 0x7bad, 0x3f33, 0x1, 0x0);
        gbc.writeMem(0x95f4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfa8f, gbc.sp());
        EXPECT(0x95f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f4));
        EXPECT(0xa1, gbc.readMem(0x95f5));
        // CB A1 0252
        gbc.setState(0xcc8e, 0x37a8, 0x6a10, 0xf309, 0xbdc7, 0x8bba, 0x0, 0x0);
        gbc.writeMem(0xcc8e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x37a8, gbc.sp());
        EXPECT(0xcc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8e));
        EXPECT(0xa1, gbc.readMem(0xcc8f));
        // CB A1 0253
        gbc.setState(0x5e9a, 0x1fe2, 0xe6a0, 0xc3dd, 0x773c, 0xa263, 0x0, 0x1);
        gbc.writeMem(0x5e9a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1fe2, gbc.sp());
        EXPECT(0x5e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0254
        gbc.setState(0xc891, 0x2b1c, 0x7ef0, 0xe70c, 0x9ae3, 0xc5bc, 0x1, 0x1);
        gbc.writeMem(0xc891, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2b1c, gbc.sp());
        EXPECT(0xc893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc891));
        EXPECT(0xa1, gbc.readMem(0xc892));
        // CB A1 0255
        gbc.setState(0xad0c, 0x43c0, 0xba80, 0x2773, 0x8917, 0x6ac3, 0x0, 0x0);
        gbc.writeMem(0xad0c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x43c0, gbc.sp());
        EXPECT(0xad0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0c));
        EXPECT(0xa1, gbc.readMem(0xad0d));
        // CB A1 0256
        gbc.setState(0x5e01, 0x6bc1, 0x6a60, 0x3257, 0xb032, 0xf0d7, 0x1, 0x1);
        gbc.writeMem(0x5e01, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6bc1, gbc.sp());
        EXPECT(0x5e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0257
        gbc.setState(0xcac9, 0x9298, 0xefb0, 0xd81e, 0xc769, 0xb97b, 0x1, 0x0);
        gbc.writeMem(0xcac9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9298, gbc.sp());
        EXPECT(0xcacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac9));
        EXPECT(0xa1, gbc.readMem(0xcaca));
        // CB A1 0258
        gbc.setState(0x714, 0xb9e5, 0x1110, 0xf510, 0x45bb, 0xe6fe, 0x1, 0x0);
        gbc.writeMem(0x714, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb9e5, gbc.sp());
        EXPECT(0x716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0259
        gbc.setState(0x5004, 0x1997, 0x300, 0x5e9e, 0x9d61, 0xb6dd, 0x1, 0x0);
        gbc.writeMem(0x5004, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1997, gbc.sp());
        EXPECT(0x5006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 025A
        gbc.setState(0xcc32, 0xf9c0, 0x7950, 0xbbe4, 0x7fc9, 0x1b09, 0x0, 0x1);
        gbc.writeMem(0xcc32, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf9c0, gbc.sp());
        EXPECT(0xcc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc32));
        EXPECT(0xa1, gbc.readMem(0xcc33));
        // CB A1 025B
        gbc.setState(0x6199, 0x4dec, 0x7f40, 0xa114, 0x2fc5, 0x238b, 0x1, 0x1);
        gbc.writeMem(0x6199, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4dec, gbc.sp());
        EXPECT(0x619b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 025C
        gbc.setState(0x5331, 0xea8a, 0xec40, 0x17c5, 0x8e2e, 0x56f, 0x1, 0x0);
        gbc.writeMem(0x5331, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xea8a, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 025E
        gbc.setState(0x5e35, 0x387e, 0x8890, 0x6a0b, 0x27ac, 0x4900, 0x1, 0x0);
        gbc.writeMem(0x5e35, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x387e, gbc.sp());
        EXPECT(0x5e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 025F
        gbc.setState(0xe6cf, 0x348b, 0x19b0, 0x9e50, 0x9cce, 0x4727, 0x1, 0x1);
        gbc.writeMem(0xe6cf, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x348b, gbc.sp());
        EXPECT(0xe6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6cf));
        EXPECT(0xa1, gbc.readMem(0xe6d0));
        // CB A1 0260
        gbc.setState(0x9c61, 0x93aa, 0xcdb0, 0x8e73, 0xc78b, 0x301d, 0x1, 0x0);
        gbc.writeMem(0x9c61, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x93aa, gbc.sp());
        EXPECT(0x9c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c61));
        EXPECT(0xa1, gbc.readMem(0x9c62));
        // CB A1 0261
        gbc.setState(0xe219, 0x2190, 0x10d0, 0xe008, 0x48ef, 0xd4eb, 0x1, 0x1);
        gbc.writeMem(0xe219, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2190, gbc.sp());
        EXPECT(0xe21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe219));
        EXPECT(0xa1, gbc.readMem(0xe21a));
        // CB A1 0262
        gbc.setState(0xe360, 0xda60, 0xc210, 0xf5b8, 0x2782, 0x1e05, 0x1, 0x1);
        gbc.writeMem(0xe360, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xda60, gbc.sp());
        EXPECT(0xe362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe360));
        EXPECT(0xa1, gbc.readMem(0xe361));
        // CB A1 0263
        gbc.setState(0xdf4, 0x3eb, 0x2dc0, 0x227c, 0x5e2a, 0xbee7, 0x1, 0x1);
        gbc.writeMem(0xdf4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3eb, gbc.sp());
        EXPECT(0xdf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0264
        gbc.setState(0x433e, 0x6d85, 0xe440, 0xd06d, 0x90ce, 0xb00b, 0x0, 0x0);
        gbc.writeMem(0x433e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6d85, gbc.sp());
        EXPECT(0x4340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0265
        gbc.setState(0x6ffc, 0x3fa8, 0xd3d0, 0x92f6, 0xfab3, 0x8891, 0x1, 0x0);
        gbc.writeMem(0x6ffc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3fa8, gbc.sp());
        EXPECT(0x6ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0266
        gbc.setState(0x565b, 0x8232, 0x7470, 0x4694, 0xfb95, 0xc065, 0x1, 0x0);
        gbc.writeMem(0x565b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8232, gbc.sp());
        EXPECT(0x565d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0267
        gbc.setState(0x227, 0x2b0e, 0x660, 0x3775, 0xca8c, 0xd0fc, 0x1, 0x1);
        gbc.writeMem(0x227, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2b0e, gbc.sp());
        EXPECT(0x229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0268
        gbc.setState(0xa3c7, 0x2936, 0x87f0, 0x5f68, 0x162b, 0xc68, 0x0, 0x0);
        gbc.writeMem(0xa3c7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2936, gbc.sp());
        EXPECT(0xa3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c7));
        EXPECT(0xa1, gbc.readMem(0xa3c8));
        // CB A1 0269
        gbc.setState(0xe2e5, 0xe635, 0x84d0, 0x45e0, 0x3748, 0xcb34, 0x0, 0x1);
        gbc.writeMem(0xe2e5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe635, gbc.sp());
        EXPECT(0xe2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e5));
        EXPECT(0xa1, gbc.readMem(0xe2e6));
        // CB A1 026A
        gbc.setState(0xe56, 0x4219, 0x6840, 0x7892, 0x5e06, 0xebef, 0x0, 0x0);
        gbc.writeMem(0xe56, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4219, gbc.sp());
        EXPECT(0xe58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 026B
        gbc.setState(0x7fb7, 0x4e53, 0xc9f0, 0x60d, 0x4dd1, 0x72ee, 0x1, 0x0);
        gbc.writeMem(0x7fb7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4e53, gbc.sp());
        EXPECT(0x7fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 026C
        gbc.setState(0x989a, 0x7003, 0x2410, 0x7ef4, 0x3394, 0xbc03, 0x0, 0x0);
        gbc.writeMem(0x989a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7003, gbc.sp());
        EXPECT(0x989c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989a));
        EXPECT(0xa1, gbc.readMem(0x989b));
        // CB A1 026D
        gbc.setState(0x6aec, 0xc2e8, 0xcf90, 0x8326, 0x61fa, 0xa79f, 0x1, 0x1);
        gbc.writeMem(0x6aec, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc2e8, gbc.sp());
        EXPECT(0x6aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 026E
        gbc.setState(0x9bb7, 0xc254, 0x1ee0, 0xe37f, 0x4f4b, 0xe128, 0x1, 0x1);
        gbc.writeMem(0x9bb7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc254, gbc.sp());
        EXPECT(0x9bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb7));
        EXPECT(0xa1, gbc.readMem(0x9bb8));
        // CB A1 026F
        gbc.setState(0x3c44, 0xa47f, 0xd260, 0x38b7, 0xe239, 0x9fa5, 0x0, 0x0);
        gbc.writeMem(0x3c44, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa47f, gbc.sp());
        EXPECT(0x3c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0270
        gbc.setState(0x5211, 0xaad, 0xa320, 0x177e, 0xdeb2, 0xaa20, 0x0, 0x0);
        gbc.writeMem(0x5211, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaad, gbc.sp());
        EXPECT(0x5213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0271
        gbc.setState(0x5b08, 0x631c, 0x38b0, 0x7209, 0xf479, 0x3a9e, 0x1, 0x1);
        gbc.writeMem(0x5b08, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x631c, gbc.sp());
        EXPECT(0x5b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0272
        gbc.setState(0xb026, 0xadb0, 0xe250, 0x42, 0x7d07, 0x5daa, 0x0, 0x1);
        gbc.writeMem(0xb026, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xadb0, gbc.sp());
        EXPECT(0xb028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb026));
        EXPECT(0xa1, gbc.readMem(0xb027));
        // CB A1 0274
        gbc.setState(0x57a, 0x3b8b, 0xd2e0, 0x218, 0xf0aa, 0xd0d0, 0x0, 0x0);
        gbc.writeMem(0x57a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3b8b, gbc.sp());
        EXPECT(0x57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0275
        gbc.setState(0xb908, 0xb703, 0x6f50, 0x7410, 0xafc3, 0x8964, 0x1, 0x0);
        gbc.writeMem(0xb908, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb703, gbc.sp());
        EXPECT(0xb90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb908));
        EXPECT(0xa1, gbc.readMem(0xb909));
        // CB A1 0276
        gbc.setState(0x1951, 0xc6ed, 0x6120, 0x3f81, 0xefbe, 0x660c, 0x1, 0x0);
        gbc.writeMem(0x1951, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc6ed, gbc.sp());
        EXPECT(0x1953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0277
        gbc.setState(0x52f4, 0x3890, 0xa790, 0xc6d, 0x1314, 0x21ac, 0x1, 0x1);
        gbc.writeMem(0x52f4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3890, gbc.sp());
        EXPECT(0x52f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0278
        gbc.setState(0xa3dd, 0x8205, 0xab40, 0xd6ec, 0x50a7, 0x1b71, 0x0, 0x0);
        gbc.writeMem(0xa3dd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8205, gbc.sp());
        EXPECT(0xa3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3dd));
        EXPECT(0xa1, gbc.readMem(0xa3de));
        // CB A1 0279
        gbc.setState(0x435b, 0x3633, 0x4e70, 0x9790, 0x28fc, 0x91ce, 0x1, 0x0);
        gbc.writeMem(0x435b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3633, gbc.sp());
        EXPECT(0x435d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 027A
        gbc.setState(0x1859, 0x1604, 0x5430, 0xeea1, 0xe5f9, 0xf440, 0x0, 0x0);
        gbc.writeMem(0x1859, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1604, gbc.sp());
        EXPECT(0x185b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 027B
        gbc.setState(0x6866, 0x6316, 0x24d0, 0xcb11, 0x3632, 0xc625, 0x0, 0x1);
        gbc.writeMem(0x6866, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6316, gbc.sp());
        EXPECT(0x6868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 027C
        gbc.setState(0x438d, 0x7bb0, 0x3d50, 0xad7b, 0x750f, 0x9de8, 0x1, 0x1);
        gbc.writeMem(0x438d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7bb0, gbc.sp());
        EXPECT(0x438f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 027D
        gbc.setState(0x5e9e, 0xbb72, 0xb8f0, 0xc81b, 0x1871, 0xa761, 0x1, 0x0);
        gbc.writeMem(0x5e9e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbb72, gbc.sp());
        EXPECT(0x5ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 027E
        gbc.setState(0x8b9e, 0x32f5, 0x83a0, 0xc999, 0x48a1, 0x5720, 0x0, 0x1);
        gbc.writeMem(0x8b9e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x32f5, gbc.sp());
        EXPECT(0x8ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9e));
        EXPECT(0xa1, gbc.readMem(0x8b9f));
        // CB A1 027F
        gbc.setState(0xda42, 0xb57f, 0x62e0, 0xc4f1, 0x3a70, 0xb335, 0x1, 0x1);
        gbc.writeMem(0xda42, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb57f, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda42));
        EXPECT(0xa1, gbc.readMem(0xda43));
        // CB A1 0280
        gbc.setState(0xb69f, 0x641d, 0x9bb0, 0x7147, 0x654, 0xbca5, 0x0, 0x0);
        gbc.writeMem(0xb69f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x641d, gbc.sp());
        EXPECT(0xb6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69f));
        EXPECT(0xa1, gbc.readMem(0xb6a0));
        // CB A1 0281
        gbc.setState(0xbb56, 0x69f1, 0x2860, 0xcde1, 0x4020, 0x8a18, 0x0, 0x1);
        gbc.writeMem(0xbb56, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x69f1, gbc.sp());
        EXPECT(0xbb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb56));
        EXPECT(0xa1, gbc.readMem(0xbb57));
        // CB A1 0282
        gbc.setState(0xb3f7, 0xc059, 0x1dc0, 0x1554, 0xad7b, 0x6f7, 0x0, 0x0);
        gbc.writeMem(0xb3f7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc059, gbc.sp());
        EXPECT(0xb3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f7));
        EXPECT(0xa1, gbc.readMem(0xb3f8));
        // CB A1 0283
        gbc.setState(0xd0d1, 0xae48, 0xf700, 0x88f0, 0xbbbf, 0xc290, 0x1, 0x0);
        gbc.writeMem(0xd0d1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xae48, gbc.sp());
        EXPECT(0xd0d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d1));
        EXPECT(0xa1, gbc.readMem(0xd0d2));
        // CB A1 0284
        gbc.setState(0xeafe, 0xfa3, 0xd370, 0xf7bb, 0x2b94, 0x50ea, 0x0, 0x1);
        gbc.writeMem(0xeafe, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfa3, gbc.sp());
        EXPECT(0xeb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeafe));
        EXPECT(0xa1, gbc.readMem(0xeaff));
        // CB A1 0286
        gbc.setState(0x5971, 0xe66c, 0x52b0, 0xe3fe, 0x62f7, 0xb1f2, 0x1, 0x1);
        gbc.writeMem(0x5971, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe66c, gbc.sp());
        EXPECT(0x5973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0287
        gbc.setState(0x9560, 0xd5da, 0x9af0, 0x4317, 0xe068, 0xcb41, 0x1, 0x1);
        gbc.writeMem(0x9560, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd5da, gbc.sp());
        EXPECT(0x9562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9560));
        EXPECT(0xa1, gbc.readMem(0x9561));
        // CB A1 0289
        gbc.setState(0xcb4d, 0x85b9, 0x6fd0, 0x65bd, 0xa39c, 0x7ba3, 0x0, 0x1);
        gbc.writeMem(0xcb4d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x85b9, gbc.sp());
        EXPECT(0xcb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4d));
        EXPECT(0xa1, gbc.readMem(0xcb4e));
        // CB A1 028A
        gbc.setState(0xa2b0, 0xcfa3, 0xc30, 0x42f1, 0xea48, 0x85b7, 0x0, 0x1);
        gbc.writeMem(0xa2b0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcfa3, gbc.sp());
        EXPECT(0xa2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b0));
        EXPECT(0xa1, gbc.readMem(0xa2b1));
        // CB A1 028B
        gbc.setState(0xc637, 0x77b1, 0xba90, 0x14bb, 0x70f2, 0x4c62, 0x1, 0x1);
        gbc.writeMem(0xc637, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x77b1, gbc.sp());
        EXPECT(0xc639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc637));
        EXPECT(0xa1, gbc.readMem(0xc638));
        // CB A1 028C
        gbc.setState(0xe130, 0x8e3a, 0x6680, 0x9dea, 0x2fe, 0xde94, 0x1, 0x0);
        gbc.writeMem(0xe130, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8e3a, gbc.sp());
        EXPECT(0xe132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe130));
        EXPECT(0xa1, gbc.readMem(0xe131));
        // CB A1 028D
        gbc.setState(0x501a, 0xcb2b, 0x8d70, 0x405e, 0x5c33, 0xe09e, 0x0, 0x0);
        gbc.writeMem(0x501a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcb2b, gbc.sp());
        EXPECT(0x501c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 028E
        gbc.setState(0x620d, 0xe5e0, 0x78d0, 0x269, 0x27f4, 0x6533, 0x1, 0x0);
        gbc.writeMem(0x620d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe5e0, gbc.sp());
        EXPECT(0x620f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 028F
        gbc.setState(0xc9d2, 0x8b09, 0xd880, 0xc844, 0xf57f, 0x5bc7, 0x1, 0x0);
        gbc.writeMem(0xc9d2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8b09, gbc.sp());
        EXPECT(0xc9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d2));
        EXPECT(0xa1, gbc.readMem(0xc9d3));
        // CB A1 0290
        gbc.setState(0x77c3, 0xf780, 0x2db0, 0x998a, 0xc1e4, 0xc882, 0x1, 0x0);
        gbc.writeMem(0x77c3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf780, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0291
        gbc.setState(0x7478, 0x3d4c, 0x49d0, 0x3f7c, 0x7ec4, 0x67d4, 0x1, 0x1);
        gbc.writeMem(0x7478, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3d4c, gbc.sp());
        EXPECT(0x747a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0292
        gbc.setState(0xe942, 0x1cb, 0x51d0, 0xdb74, 0xabf9, 0x4218, 0x0, 0x1);
        gbc.writeMem(0xe942, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1cb, gbc.sp());
        EXPECT(0xe944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe942));
        EXPECT(0xa1, gbc.readMem(0xe943));
        // CB A1 0293
        gbc.setState(0xde85, 0xb502, 0xb8c0, 0xf161, 0xa313, 0xb4ba, 0x1, 0x0);
        gbc.writeMem(0xde85, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb502, gbc.sp());
        EXPECT(0xde87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde85));
        EXPECT(0xa1, gbc.readMem(0xde86));
        // CB A1 0294
        gbc.setState(0x2f75, 0x492c, 0x3310, 0x348, 0xacdb, 0x9c91, 0x0, 0x1);
        gbc.writeMem(0x2f75, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x492c, gbc.sp());
        EXPECT(0x2f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0295
        gbc.setState(0xa70a, 0xb272, 0xe7d0, 0x363a, 0xbadc, 0x898b, 0x0, 0x0);
        gbc.writeMem(0xa70a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb272, gbc.sp());
        EXPECT(0xa70c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70a));
        EXPECT(0xa1, gbc.readMem(0xa70b));
        // CB A1 0296
        gbc.setState(0x521a, 0xbb00, 0x5960, 0xeb91, 0x528f, 0x29b3, 0x1, 0x1);
        gbc.writeMem(0x521a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbb00, gbc.sp());
        EXPECT(0x521c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0297
        gbc.setState(0x10a8, 0x9019, 0xd4e0, 0xd129, 0x324a, 0xd42d, 0x1, 0x1);
        gbc.writeMem(0x10a8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9019, gbc.sp());
        EXPECT(0x10aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0298
        gbc.setState(0x62ba, 0x86a6, 0x24d0, 0x1e74, 0x1e36, 0xd4d, 0x0, 0x0);
        gbc.writeMem(0x62ba, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x86a6, gbc.sp());
        EXPECT(0x62bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0299
        gbc.setState(0x3a05, 0x506b, 0xab20, 0x62c1, 0x87c, 0xaf68, 0x0, 0x1);
        gbc.writeMem(0x3a05, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x506b, gbc.sp());
        EXPECT(0x3a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 029B
        gbc.setState(0xc8fb, 0x8d9d, 0xf810, 0xe009, 0x8a7, 0xfda1, 0x0, 0x0);
        gbc.writeMem(0xc8fb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8d9d, gbc.sp());
        EXPECT(0xc8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fb));
        EXPECT(0xa1, gbc.readMem(0xc8fc));
        // CB A1 029C
        gbc.setState(0x5e9f, 0xb503, 0x4980, 0x8b58, 0x2ad, 0x99c3, 0x0, 0x0);
        gbc.writeMem(0x5e9f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb503, gbc.sp());
        EXPECT(0x5ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 029D
        gbc.setState(0xa325, 0x1cc8, 0x5e60, 0xcb2a, 0x4e32, 0xb142, 0x0, 0x0);
        gbc.writeMem(0xa325, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1cc8, gbc.sp());
        EXPECT(0xa327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa325));
        EXPECT(0xa1, gbc.readMem(0xa326));
        // CB A1 029E
        gbc.setState(0x9057, 0xf539, 0xf1d0, 0x40c7, 0x81a7, 0x5a1, 0x1, 0x0);
        gbc.writeMem(0x9057, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf539, gbc.sp());
        EXPECT(0x9059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9057));
        EXPECT(0xa1, gbc.readMem(0x9058));
        // CB A1 029F
        gbc.setState(0x5995, 0x4530, 0xbc80, 0xc499, 0xc9c8, 0xb4a3, 0x0, 0x0);
        gbc.writeMem(0x5995, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4530, gbc.sp());
        EXPECT(0x5997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02A0
        gbc.setState(0x9e41, 0x1e5e, 0xced0, 0xf2f3, 0x43b8, 0x7535, 0x1, 0x0);
        gbc.writeMem(0x9e41, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1e5e, gbc.sp());
        EXPECT(0x9e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e41));
        EXPECT(0xa1, gbc.readMem(0x9e42));
        // CB A1 02A1
        gbc.setState(0xce30, 0x34ca, 0x88b0, 0x10ac, 0x8f2b, 0x4807, 0x0, 0x1);
        gbc.writeMem(0xce30, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x34ca, gbc.sp());
        EXPECT(0xce32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce30));
        EXPECT(0xa1, gbc.readMem(0xce31));
        // CB A1 02A2
        gbc.setState(0xc6f1, 0x61b3, 0xe4a0, 0xaeaf, 0x579f, 0x3197, 0x1, 0x0);
        gbc.writeMem(0xc6f1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x61b3, gbc.sp());
        EXPECT(0xc6f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f1));
        EXPECT(0xa1, gbc.readMem(0xc6f2));
        // CB A1 02A3
        gbc.setState(0xd8a0, 0x67cd, 0x72a0, 0x2431, 0xdb9e, 0x163a, 0x0, 0x1);
        gbc.writeMem(0xd8a0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x67cd, gbc.sp());
        EXPECT(0xd8a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a0));
        EXPECT(0xa1, gbc.readMem(0xd8a1));
        // CB A1 02A4
        gbc.setState(0x4662, 0x4150, 0x1340, 0xfcb8, 0xc810, 0x9f9f, 0x0, 0x0);
        gbc.writeMem(0x4662, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4150, gbc.sp());
        EXPECT(0x4664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02A5
        gbc.setState(0xec6f, 0x7032, 0xed60, 0xce63, 0xa804, 0x60a3, 0x0, 0x0);
        gbc.writeMem(0xec6f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7032, gbc.sp());
        EXPECT(0xec71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6f));
        EXPECT(0xa1, gbc.readMem(0xec70));
        // CB A1 02A6
        gbc.setState(0xba13, 0x7a24, 0xfc90, 0x9d3f, 0xf7a6, 0x8a90, 0x1, 0x1);
        gbc.writeMem(0xba13, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7a24, gbc.sp());
        EXPECT(0xba15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba13));
        EXPECT(0xa1, gbc.readMem(0xba14));
        // CB A1 02A7
        gbc.setState(0xeadf, 0x27a2, 0xa9a0, 0x103f, 0x9d68, 0x1b5f, 0x1, 0x1);
        gbc.writeMem(0xeadf, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x27a2, gbc.sp());
        EXPECT(0xeae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadf));
        EXPECT(0xa1, gbc.readMem(0xeae0));
        // CB A1 02A8
        gbc.setState(0xc544, 0x2e98, 0xb550, 0x4d59, 0xfcc7, 0x316f, 0x1, 0x0);
        gbc.writeMem(0xc544, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2e98, gbc.sp());
        EXPECT(0xc546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc544));
        EXPECT(0xa1, gbc.readMem(0xc545));
        // CB A1 02A9
        gbc.setState(0xfc1, 0x5b16, 0x9110, 0xed20, 0x8da7, 0xf035, 0x0, 0x1);
        gbc.writeMem(0xfc1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5b16, gbc.sp());
        EXPECT(0xfc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02AA
        gbc.setState(0x3905, 0xb4cc, 0x3ce0, 0xf6b0, 0xfd17, 0xf5ea, 0x0, 0x0);
        gbc.writeMem(0x3905, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb4cc, gbc.sp());
        EXPECT(0x3907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02AB
        gbc.setState(0xa3f4, 0x889b, 0xbf60, 0xfe81, 0x3050, 0x6512, 0x1, 0x0);
        gbc.writeMem(0xa3f4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x889b, gbc.sp());
        EXPECT(0xa3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f4));
        EXPECT(0xa1, gbc.readMem(0xa3f5));
        // CB A1 02AC
        gbc.setState(0x2fbf, 0x8809, 0x5510, 0x3d52, 0x5bd2, 0x7999, 0x1, 0x1);
        gbc.writeMem(0x2fbf, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8809, gbc.sp());
        EXPECT(0x2fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02AD
        gbc.setState(0xb651, 0x40a6, 0xc4a0, 0x1605, 0x8d54, 0x3a35, 0x1, 0x0);
        gbc.writeMem(0xb651, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x40a6, gbc.sp());
        EXPECT(0xb653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb651));
        EXPECT(0xa1, gbc.readMem(0xb652));
        // CB A1 02AE
        gbc.setState(0x52da, 0x8f8a, 0xd9e0, 0x1335, 0x4003, 0xe46a, 0x0, 0x0);
        gbc.writeMem(0x52da, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8f8a, gbc.sp());
        EXPECT(0x52dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02AF
        gbc.setState(0x9f07, 0x781f, 0xa70, 0xf7a7, 0x2790, 0x89e3, 0x0, 0x0);
        gbc.writeMem(0x9f07, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x781f, gbc.sp());
        EXPECT(0x9f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f07));
        EXPECT(0xa1, gbc.readMem(0x9f08));
        // CB A1 02B0
        gbc.setState(0xec39, 0x4b44, 0x7960, 0x1046, 0x1d3b, 0xf589, 0x1, 0x1);
        gbc.writeMem(0xec39, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4b44, gbc.sp());
        EXPECT(0xec3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec39));
        EXPECT(0xa1, gbc.readMem(0xec3a));
        // CB A1 02B1
        gbc.setState(0x6677, 0xdbe4, 0x9590, 0xa65, 0xf07f, 0x8237, 0x0, 0x0);
        gbc.writeMem(0x6677, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdbe4, gbc.sp());
        EXPECT(0x6679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02B2
        gbc.setState(0x3b51, 0x77f2, 0x9960, 0x7ee8, 0xcaf4, 0x269f, 0x1, 0x1);
        gbc.writeMem(0x3b51, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x77f2, gbc.sp());
        EXPECT(0x3b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02B3
        gbc.setState(0x1580, 0x1c26, 0x8270, 0x95a8, 0x42bb, 0x636a, 0x0, 0x1);
        gbc.writeMem(0x1580, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1c26, gbc.sp());
        EXPECT(0x1582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02B4
        gbc.setState(0xafd7, 0x76f0, 0xd150, 0xc60, 0x36ef, 0xf59, 0x1, 0x0);
        gbc.writeMem(0xafd7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x76f0, gbc.sp());
        EXPECT(0xafd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd7));
        EXPECT(0xa1, gbc.readMem(0xafd8));
        // CB A1 02B5
        gbc.setState(0xc590, 0xbe06, 0x8680, 0x7fc1, 0x6138, 0x50d0, 0x0, 0x0);
        gbc.writeMem(0xc590, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbe06, gbc.sp());
        EXPECT(0xc592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc590));
        EXPECT(0xa1, gbc.readMem(0xc591));
        // CB A1 02B6
        gbc.setState(0x3311, 0x77cd, 0x8670, 0x7e35, 0xb4cb, 0xadbb, 0x0, 0x0);
        gbc.writeMem(0x3311, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x77cd, gbc.sp());
        EXPECT(0x3313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02B7
        gbc.setState(0x2b80, 0x642d, 0x5ac0, 0x30be, 0x4691, 0x158c, 0x1, 0x0);
        gbc.writeMem(0x2b80, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x642d, gbc.sp());
        EXPECT(0x2b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02B8
        gbc.setState(0xc417, 0x9902, 0x5140, 0x51ef, 0x3da5, 0x939b, 0x1, 0x1);
        gbc.writeMem(0xc417, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9902, gbc.sp());
        EXPECT(0xc419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc417));
        EXPECT(0xa1, gbc.readMem(0xc418));
        // CB A1 02B9
        gbc.setState(0x9a5c, 0x572d, 0xc0f0, 0xa48d, 0x2279, 0xc61a, 0x0, 0x1);
        gbc.writeMem(0x9a5c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x572d, gbc.sp());
        EXPECT(0x9a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5c));
        EXPECT(0xa1, gbc.readMem(0x9a5d));
        // CB A1 02BA
        gbc.setState(0x1a2e, 0x7f9, 0x5680, 0x8b4e, 0x3820, 0x9ce, 0x0, 0x1);
        gbc.writeMem(0x1a2e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7f9, gbc.sp());
        EXPECT(0x1a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02BB
        gbc.setState(0x1453, 0x4534, 0xd9c0, 0x2cd2, 0x32fe, 0x71ff, 0x1, 0x0);
        gbc.writeMem(0x1453, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4534, gbc.sp());
        EXPECT(0x1455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02BC
        gbc.setState(0x1a3c, 0x44fb, 0x2e80, 0xe328, 0xa8, 0xdf80, 0x1, 0x1);
        gbc.writeMem(0x1a3c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x44fb, gbc.sp());
        EXPECT(0x1a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02BD
        gbc.setState(0xd030, 0xf5a1, 0x7b00, 0x72c, 0x3969, 0xf443, 0x1, 0x1);
        gbc.writeMem(0xd030, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf5a1, gbc.sp());
        EXPECT(0xd032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd030));
        EXPECT(0xa1, gbc.readMem(0xd031));
        // CB A1 02BE
        gbc.setState(0xdc42, 0x3437, 0x39c0, 0x905d, 0xc54f, 0xd9cf, 0x1, 0x1);
        gbc.writeMem(0xdc42, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3437, gbc.sp());
        EXPECT(0xdc44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc42));
        EXPECT(0xa1, gbc.readMem(0xdc43));
        // CB A1 02BF
        gbc.setState(0x36a6, 0x8b6b, 0xeff0, 0xf105, 0x851f, 0x489f, 0x0, 0x1);
        gbc.writeMem(0x36a6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8b6b, gbc.sp());
        EXPECT(0x36a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02C0
        gbc.setState(0x40c2, 0x16df, 0x16e0, 0xff4, 0x935e, 0xdebe, 0x0, 0x0);
        gbc.writeMem(0x40c2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x16df, gbc.sp());
        EXPECT(0x40c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02C1
        gbc.setState(0x2161, 0x992d, 0xf320, 0x3f67, 0xd9a3, 0xa903, 0x1, 0x0);
        gbc.writeMem(0x2161, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x992d, gbc.sp());
        EXPECT(0x2163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02C2
        gbc.setState(0x8666, 0x18fd, 0x1900, 0x3926, 0xeb3b, 0x71a9, 0x1, 0x0);
        gbc.writeMem(0x8666, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x18fd, gbc.sp());
        EXPECT(0x8668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8666));
        EXPECT(0xa1, gbc.readMem(0x8667));
        // CB A1 02C3
        gbc.setState(0x69dc, 0xb2f3, 0xe250, 0x8cad, 0xe940, 0xfcbf, 0x0, 0x0);
        gbc.writeMem(0x69dc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb2f3, gbc.sp());
        EXPECT(0x69de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02C4
        gbc.setState(0x70b0, 0xfba9, 0x7e50, 0x33a2, 0x4cf1, 0xb3b6, 0x1, 0x0);
        gbc.writeMem(0x70b0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfba9, gbc.sp());
        EXPECT(0x70b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02C5
        gbc.setState(0xb5c0, 0xf8da, 0x1c0, 0x1566, 0x9c6a, 0x7ce4, 0x0, 0x0);
        gbc.writeMem(0xb5c0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf8da, gbc.sp());
        EXPECT(0xb5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c0));
        EXPECT(0xa1, gbc.readMem(0xb5c1));
        // CB A1 02C6
        gbc.setState(0x4341, 0xa31, 0x5f0, 0x9ce3, 0x8873, 0x4994, 0x1, 0x0);
        gbc.writeMem(0x4341, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa31, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02C7
        gbc.setState(0xe8cb, 0x5d2c, 0x67f0, 0x7a22, 0xa89e, 0xc9a6, 0x0, 0x0);
        gbc.writeMem(0xe8cb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5d2c, gbc.sp());
        EXPECT(0xe8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cb));
        EXPECT(0xa1, gbc.readMem(0xe8cc));
        // CB A1 02C8
        gbc.setState(0xd5ea, 0x85c9, 0x7640, 0xcd70, 0x3c7a, 0x1eda, 0x0, 0x1);
        gbc.writeMem(0xd5ea, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x85c9, gbc.sp());
        EXPECT(0xd5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ea));
        EXPECT(0xa1, gbc.readMem(0xd5eb));
        // CB A1 02C9
        gbc.setState(0x5f83, 0x3a4b, 0x8980, 0xc970, 0xe5f9, 0x3700, 0x0, 0x1);
        gbc.writeMem(0x5f83, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3a4b, gbc.sp());
        EXPECT(0x5f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02CA
        gbc.setState(0x7a7, 0x7f1c, 0xabc0, 0x86dc, 0xdc8c, 0x4378, 0x0, 0x0);
        gbc.writeMem(0x7a7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7f1c, gbc.sp());
        EXPECT(0x7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02CB
        gbc.setState(0xd497, 0xc29d, 0xc570, 0x30d7, 0xc174, 0xaf9b, 0x0, 0x0);
        gbc.writeMem(0xd497, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc29d, gbc.sp());
        EXPECT(0xd499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd497));
        EXPECT(0xa1, gbc.readMem(0xd498));
        // CB A1 02CC
        gbc.setState(0x278f, 0x7c39, 0x9200, 0x5cd3, 0x34f0, 0x20ee, 0x1, 0x1);
        gbc.writeMem(0x278f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7c39, gbc.sp());
        EXPECT(0x2791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02CD
        gbc.setState(0x9463, 0x650e, 0x4820, 0xb8e, 0x32ed, 0x6423, 0x1, 0x1);
        gbc.writeMem(0x9463, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x650e, gbc.sp());
        EXPECT(0x9465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9463));
        EXPECT(0xa1, gbc.readMem(0x9464));
        // CB A1 02CE
        gbc.setState(0xeb93, 0x20b3, 0x2ee0, 0x5cd, 0x3c99, 0x3e84, 0x1, 0x1);
        gbc.writeMem(0xeb93, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x20b3, gbc.sp());
        EXPECT(0xeb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb93));
        EXPECT(0xa1, gbc.readMem(0xeb94));
        // CB A1 02CF
        gbc.setState(0x6fbd, 0x2dde, 0x6e80, 0xd954, 0xf51d, 0x8ca2, 0x0, 0x0);
        gbc.writeMem(0x6fbd, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2dde, gbc.sp());
        EXPECT(0x6fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02D0
        gbc.setState(0x15fc, 0x70c9, 0x3bd0, 0x7872, 0xf8ea, 0x4109, 0x0, 0x0);
        gbc.writeMem(0x15fc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x70c9, gbc.sp());
        EXPECT(0x15fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02D1
        gbc.setState(0x2d0c, 0xf084, 0x34b0, 0xb91a, 0x269, 0x235c, 0x0, 0x0);
        gbc.writeMem(0x2d0c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf084, gbc.sp());
        EXPECT(0x2d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02D2
        gbc.setState(0x11bc, 0x9ef2, 0xd580, 0xa5e0, 0x9446, 0x35e, 0x1, 0x0);
        gbc.writeMem(0x11bc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9ef2, gbc.sp());
        EXPECT(0x11be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02D3
        gbc.setState(0xb881, 0xfaa8, 0xe3a0, 0x649, 0x93c, 0xb303, 0x1, 0x0);
        gbc.writeMem(0xb881, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfaa8, gbc.sp());
        EXPECT(0xb883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb881));
        EXPECT(0xa1, gbc.readMem(0xb882));
        // CB A1 02D4
        gbc.setState(0x167e, 0xe69c, 0x2e50, 0x59bf, 0x303c, 0xbcbd, 0x1, 0x1);
        gbc.writeMem(0x167e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe69c, gbc.sp());
        EXPECT(0x1680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02D5
        gbc.setState(0x110c, 0xba14, 0x28b0, 0x285d, 0x858e, 0x9bff, 0x0, 0x0);
        gbc.writeMem(0x110c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xba14, gbc.sp());
        EXPECT(0x110e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02D6
        gbc.setState(0x7c, 0x2d7, 0xed00, 0xf9a, 0x79a6, 0x4478, 0x1, 0x0);
        gbc.writeMem(0x7c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2d7, gbc.sp());
        EXPECT(0x7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02D7
        gbc.setState(0xc8da, 0xda47, 0xd0a0, 0xc40, 0xb279, 0x6875, 0x0, 0x0);
        gbc.writeMem(0xc8da, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xda47, gbc.sp());
        EXPECT(0xc8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8da));
        EXPECT(0xa1, gbc.readMem(0xc8db));
        // CB A1 02D8
        gbc.setState(0xb38a, 0x16f9, 0x3c20, 0xca60, 0xc2a3, 0x764c, 0x0, 0x1);
        gbc.writeMem(0xb38a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x16f9, gbc.sp());
        EXPECT(0xb38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38a));
        EXPECT(0xa1, gbc.readMem(0xb38b));
        // CB A1 02D9
        gbc.setState(0x715e, 0x6b10, 0xc5f0, 0x3b48, 0xce48, 0xd7e, 0x0, 0x1);
        gbc.writeMem(0x715e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6b10, gbc.sp());
        EXPECT(0x7160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02DA
        gbc.setState(0x7f33, 0xb533, 0xa130, 0xd72a, 0xe108, 0x96bb, 0x1, 0x1);
        gbc.writeMem(0x7f33, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb533, gbc.sp());
        EXPECT(0x7f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02DB
        gbc.setState(0xcbf7, 0x5e81, 0x140, 0x5f9b, 0xdd19, 0xa8e2, 0x0, 0x0);
        gbc.writeMem(0xcbf7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5e81, gbc.sp());
        EXPECT(0xcbf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf7));
        EXPECT(0xa1, gbc.readMem(0xcbf8));
        // CB A1 02DC
        gbc.setState(0x274d, 0x9b49, 0xaaa0, 0xf787, 0x7dfa, 0x9900, 0x1, 0x1);
        gbc.writeMem(0x274d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9b49, gbc.sp());
        EXPECT(0x274f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02DD
        gbc.setState(0x5336, 0xb2b0, 0xf0f0, 0x4107, 0x724, 0x1bad, 0x0, 0x1);
        gbc.writeMem(0x5336, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb2b0, gbc.sp());
        EXPECT(0x5338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02DE
        gbc.setState(0x7bdc, 0x38f3, 0xa0, 0x70ab, 0x2f81, 0x99e6, 0x1, 0x0);
        gbc.writeMem(0x7bdc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x38f3, gbc.sp());
        EXPECT(0x7bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02DF
        gbc.setState(0xd13c, 0xdbe1, 0xde00, 0xc69d, 0x312e, 0x2221, 0x0, 0x0);
        gbc.writeMem(0xd13c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdbe1, gbc.sp());
        EXPECT(0xd13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13c));
        EXPECT(0xa1, gbc.readMem(0xd13d));
        // CB A1 02E0
        gbc.setState(0x7390, 0x4fbf, 0xd0f0, 0xed4c, 0x10bb, 0xa83, 0x0, 0x1);
        gbc.writeMem(0x7390, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4fbf, gbc.sp());
        EXPECT(0x7392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02E1
        gbc.setState(0x6dc2, 0x1c09, 0xe360, 0x9651, 0xb860, 0x545d, 0x1, 0x0);
        gbc.writeMem(0x6dc2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1c09, gbc.sp());
        EXPECT(0x6dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02E2
        gbc.setState(0xc933, 0x27fd, 0x87b0, 0x2a91, 0xe285, 0x5ff6, 0x1, 0x0);
        gbc.writeMem(0xc933, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x27fd, gbc.sp());
        EXPECT(0xc935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc933));
        EXPECT(0xa1, gbc.readMem(0xc934));
        // CB A1 02E3
        gbc.setState(0x8cf2, 0x5249, 0x260, 0xb32a, 0x7287, 0x5dfb, 0x0, 0x0);
        gbc.writeMem(0x8cf2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5249, gbc.sp());
        EXPECT(0x8cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf2));
        EXPECT(0xa1, gbc.readMem(0x8cf3));
        // CB A1 02E4
        gbc.setState(0x3c3d, 0x26d, 0xfaa0, 0x3dbc, 0xc571, 0x1ea8, 0x1, 0x0);
        gbc.writeMem(0x3c3d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x26d, gbc.sp());
        EXPECT(0x3c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02E5
        gbc.setState(0xad7, 0xed86, 0xa4c0, 0xdedd, 0x5fd7, 0x3597, 0x1, 0x1);
        gbc.writeMem(0xad7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xed86, gbc.sp());
        EXPECT(0xad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02E6
        gbc.setState(0x4bd7, 0xc1d3, 0xdad0, 0xf69d, 0xff6a, 0xdb03, 0x0, 0x0);
        gbc.writeMem(0x4bd7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc1d3, gbc.sp());
        EXPECT(0x4bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02E7
        gbc.setState(0x845f, 0x324a, 0x4ef0, 0xa654, 0x8de6, 0xa700, 0x1, 0x0);
        gbc.writeMem(0x845f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x324a, gbc.sp());
        EXPECT(0x8461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845f));
        EXPECT(0xa1, gbc.readMem(0x8460));
        // CB A1 02E8
        gbc.setState(0xe90c, 0x9174, 0x270, 0x6fc0, 0x5a65, 0x1b8a, 0x0, 0x1);
        gbc.writeMem(0xe90c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9174, gbc.sp());
        EXPECT(0xe90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90c));
        EXPECT(0xa1, gbc.readMem(0xe90d));
        // CB A1 02E9
        gbc.setState(0xb1f7, 0x4c45, 0xff60, 0x266c, 0x550c, 0x7053, 0x0, 0x1);
        gbc.writeMem(0xb1f7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4c45, gbc.sp());
        EXPECT(0xb1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f7));
        EXPECT(0xa1, gbc.readMem(0xb1f8));
        // CB A1 02EA
        gbc.setState(0x3793, 0x9229, 0xc8e0, 0x100, 0x4ea7, 0x9757, 0x1, 0x1);
        gbc.writeMem(0x3793, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9229, gbc.sp());
        EXPECT(0x3795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02EB
        gbc.setState(0x3e9f, 0x62d8, 0x5e80, 0xb8bf, 0x4a26, 0xca5a, 0x1, 0x1);
        gbc.writeMem(0x3e9f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x62d8, gbc.sp());
        EXPECT(0x3ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02EC
        gbc.setState(0x5fc5, 0x97c9, 0x3560, 0xdb3a, 0x1576, 0x5905, 0x0, 0x1);
        gbc.writeMem(0x5fc5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x97c9, gbc.sp());
        EXPECT(0x5fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02ED
        gbc.setState(0x3991, 0x2dba, 0xbd90, 0x581d, 0xef51, 0x5874, 0x1, 0x0);
        gbc.writeMem(0x3991, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2dba, gbc.sp());
        EXPECT(0x3993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02EE
        gbc.setState(0xd03a, 0xd549, 0x57b0, 0x4fd8, 0x95f8, 0x7213, 0x1, 0x0);
        gbc.writeMem(0xd03a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd549, gbc.sp());
        EXPECT(0xd03c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03a));
        EXPECT(0xa1, gbc.readMem(0xd03b));
        // CB A1 02EF
        gbc.setState(0xce22, 0x88e7, 0x3460, 0x9093, 0x1531, 0x97f4, 0x1, 0x1);
        gbc.writeMem(0xce22, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x88e7, gbc.sp());
        EXPECT(0xce24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce22));
        EXPECT(0xa1, gbc.readMem(0xce23));
        // CB A1 02F0
        gbc.setState(0x6f6d, 0x3a7c, 0xec20, 0xe2f5, 0xb3ba, 0xd1f1, 0x1, 0x0);
        gbc.writeMem(0x6f6d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3a7c, gbc.sp());
        EXPECT(0x6f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02F1
        gbc.setState(0xcfde, 0x1a02, 0x4da0, 0x7a9, 0x7031, 0x7271, 0x0, 0x1);
        gbc.writeMem(0xcfde, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1a02, gbc.sp());
        EXPECT(0xcfe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfde));
        EXPECT(0xa1, gbc.readMem(0xcfdf));
        // CB A1 02F2
        gbc.setState(0x2257, 0xfcdf, 0x7b0, 0xd885, 0x1355, 0x4fe0, 0x0, 0x1);
        gbc.writeMem(0x2257, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfcdf, gbc.sp());
        EXPECT(0x2259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02F3
        gbc.setState(0x1d26, 0x6956, 0xaba0, 0xb2c5, 0xe360, 0xeba0, 0x0, 0x1);
        gbc.writeMem(0x1d26, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6956, gbc.sp());
        EXPECT(0x1d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02F4
        gbc.setState(0xb5dc, 0x4767, 0xd040, 0x352c, 0x9fc, 0x3559, 0x1, 0x0);
        gbc.writeMem(0xb5dc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4767, gbc.sp());
        EXPECT(0xb5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5dc));
        EXPECT(0xa1, gbc.readMem(0xb5dd));
        // CB A1 02F5
        gbc.setState(0xafc5, 0x7f61, 0xfeb0, 0xfb58, 0xd5d5, 0x7adf, 0x0, 0x1);
        gbc.writeMem(0xafc5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7f61, gbc.sp());
        EXPECT(0xafc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc5));
        EXPECT(0xa1, gbc.readMem(0xafc6));
        // CB A1 02F6
        gbc.setState(0x96cf, 0x1d96, 0x3ab0, 0x304a, 0xff24, 0xe30, 0x0, 0x1);
        gbc.writeMem(0x96cf, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1d96, gbc.sp());
        EXPECT(0x96d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96cf));
        EXPECT(0xa1, gbc.readMem(0x96d0));
        // CB A1 02F7
        gbc.setState(0xe4c6, 0x3480, 0x6bd0, 0xafa1, 0x294b, 0x5e7, 0x1, 0x1);
        gbc.writeMem(0xe4c6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3480, gbc.sp());
        EXPECT(0xe4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c6));
        EXPECT(0xa1, gbc.readMem(0xe4c7));
        // CB A1 02F8
        gbc.setState(0xe1e3, 0xbc50, 0x7440, 0xdd83, 0x209f, 0x33a9, 0x0, 0x1);
        gbc.writeMem(0xe1e3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbc50, gbc.sp());
        EXPECT(0xe1e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e3));
        EXPECT(0xa1, gbc.readMem(0xe1e4));
        // CB A1 02F9
        gbc.setState(0x471c, 0x33ba, 0x8500, 0x9e3e, 0x8c82, 0x4be2, 0x0, 0x0);
        gbc.writeMem(0x471c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x33ba, gbc.sp());
        EXPECT(0x471e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02FA
        gbc.setState(0x4b, 0xd546, 0x3270, 0x911f, 0xf77e, 0x4280, 0x0, 0x0);
        gbc.writeMem(0x4b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd546, gbc.sp());
        EXPECT(0x4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02FB
        gbc.setState(0xeec, 0x28a9, 0xfc50, 0x7db, 0xc5e7, 0x9bc6, 0x1, 0x1);
        gbc.writeMem(0xeec, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x28a9, gbc.sp());
        EXPECT(0xeee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02FC
        gbc.setState(0x27, 0x2891, 0xf2e0, 0x551, 0x71e3, 0x5c5e, 0x0, 0x0);
        gbc.writeMem(0x27, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2891, gbc.sp());
        EXPECT(0x29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 02FD
        gbc.setState(0x109, 0xf08, 0xc130, 0x4c4f, 0x588e, 0xb3a5, 0x0, 0x1);
        gbc.writeMem(0x109, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf08, gbc.sp());
        EXPECT(0x10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 02FE
        gbc.setState(0x86a5, 0x9c51, 0x1360, 0x189d, 0x9c8b, 0x65c0, 0x1, 0x1);
        gbc.writeMem(0x86a5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9c51, gbc.sp());
        EXPECT(0x86a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a5));
        EXPECT(0xa1, gbc.readMem(0x86a6));
        // CB A1 02FF
        gbc.setState(0x2aaa, 0x39ff, 0x67a0, 0xca0a, 0x213f, 0x28a1, 0x0, 0x0);
        gbc.writeMem(0x2aaa, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x39ff, gbc.sp());
        EXPECT(0x2aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0300
        gbc.setState(0x8399, 0x2e6, 0xf6b0, 0x1de8, 0x28dc, 0xd5f8, 0x1, 0x0);
        gbc.writeMem(0x8399, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2e6, gbc.sp());
        EXPECT(0x839b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8399));
        EXPECT(0xa1, gbc.readMem(0x839a));
        // CB A1 0301
        gbc.setState(0x5be7, 0xd82, 0xad90, 0x2fc5, 0xd700, 0x42c3, 0x1, 0x1);
        gbc.writeMem(0x5be7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0x5be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0302
        gbc.setState(0xab3, 0xf9ef, 0xcba0, 0xceeb, 0xdb2d, 0xf4e1, 0x0, 0x1);
        gbc.writeMem(0xab3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0xab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0303
        gbc.setState(0xe71a, 0xed43, 0x3720, 0xc6b9, 0x1f9f, 0x2459, 0x0, 0x1);
        gbc.writeMem(0xe71a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xed43, gbc.sp());
        EXPECT(0xe71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71a));
        EXPECT(0xa1, gbc.readMem(0xe71b));
        // CB A1 0304
        gbc.setState(0xaa7, 0xc163, 0xada0, 0x2a27, 0xc772, 0x5054, 0x0, 0x1);
        gbc.writeMem(0xaa7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc163, gbc.sp());
        EXPECT(0xaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0305
        gbc.setState(0xbaa3, 0xbcbc, 0x6910, 0x9bc9, 0x12d8, 0x8d06, 0x1, 0x0);
        gbc.writeMem(0xbaa3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbcbc, gbc.sp());
        EXPECT(0xbaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa3));
        EXPECT(0xa1, gbc.readMem(0xbaa4));
        // CB A1 0306
        gbc.setState(0x9f04, 0xb9e0, 0x2c30, 0x6fc0, 0x777e, 0xc52d, 0x1, 0x1);
        gbc.writeMem(0x9f04, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb9e0, gbc.sp());
        EXPECT(0x9f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f04));
        EXPECT(0xa1, gbc.readMem(0x9f05));
        // CB A1 0308
        gbc.setState(0x216b, 0x220d, 0xddd0, 0xa91, 0xdc80, 0x426, 0x0, 0x1);
        gbc.writeMem(0x216b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x220d, gbc.sp());
        EXPECT(0x216d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0309
        gbc.setState(0xe5fb, 0x268d, 0x7ad0, 0xee51, 0xc57d, 0xe11c, 0x1, 0x0);
        gbc.writeMem(0xe5fb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x268d, gbc.sp());
        EXPECT(0xe5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5fb));
        EXPECT(0xa1, gbc.readMem(0xe5fc));
        // CB A1 030A
        gbc.setState(0xc291, 0x583a, 0x33c0, 0x9a27, 0x4fd6, 0xa89f, 0x0, 0x0);
        gbc.writeMem(0xc291, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x583a, gbc.sp());
        EXPECT(0xc293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc291));
        EXPECT(0xa1, gbc.readMem(0xc292));
        // CB A1 030B
        gbc.setState(0x6e0c, 0x7dfb, 0x58e0, 0xee87, 0x92a3, 0x9aac, 0x1, 0x1);
        gbc.writeMem(0x6e0c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7dfb, gbc.sp());
        EXPECT(0x6e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 030C
        gbc.setState(0x5a98, 0x1272, 0x2510, 0xa6c0, 0x4311, 0x12d3, 0x0, 0x1);
        gbc.writeMem(0x5a98, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1272, gbc.sp());
        EXPECT(0x5a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 030D
        gbc.setState(0x1aa8, 0x6234, 0x6490, 0x93e7, 0x4997, 0xf799, 0x0, 0x0);
        gbc.writeMem(0x1aa8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6234, gbc.sp());
        EXPECT(0x1aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 030E
        gbc.setState(0xd7a, 0x65aa, 0xca0, 0xf541, 0xf8af, 0x60d0, 0x1, 0x0);
        gbc.writeMem(0xd7a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x65aa, gbc.sp());
        EXPECT(0xd7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 030F
        gbc.setState(0x8b18, 0x8c86, 0xeb60, 0x7d91, 0xf34e, 0xb662, 0x1, 0x1);
        gbc.writeMem(0x8b18, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8c86, gbc.sp());
        EXPECT(0x8b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b18));
        EXPECT(0xa1, gbc.readMem(0x8b19));
        // CB A1 0310
        gbc.setState(0x112b, 0xa85c, 0x35c0, 0xcb32, 0xebd, 0xa4b7, 0x1, 0x0);
        gbc.writeMem(0x112b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa85c, gbc.sp());
        EXPECT(0x112d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0311
        gbc.setState(0x87a, 0x897c, 0x45f0, 0x75cb, 0x2a89, 0x8285, 0x0, 0x0);
        gbc.writeMem(0x87a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x897c, gbc.sp());
        EXPECT(0x87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0312
        gbc.setState(0xacff, 0xb4c6, 0x76b0, 0x5032, 0x8436, 0x7ab2, 0x1, 0x1);
        gbc.writeMem(0xacff, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb4c6, gbc.sp());
        EXPECT(0xad01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacff));
        EXPECT(0xa1, gbc.readMem(0xad00));
        // CB A1 0313
        gbc.setState(0x22f7, 0x72ee, 0x8ac0, 0xe9a9, 0xad21, 0xebc8, 0x0, 0x0);
        gbc.writeMem(0x22f7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x72ee, gbc.sp());
        EXPECT(0x22f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0315
        gbc.setState(0x3b4c, 0x6a8, 0x70, 0x810c, 0x3a08, 0x81a, 0x0, 0x1);
        gbc.writeMem(0x3b4c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6a8, gbc.sp());
        EXPECT(0x3b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0316
        gbc.setState(0xc774, 0xf521, 0x2600, 0x56ab, 0x8c99, 0x19, 0x1, 0x1);
        gbc.writeMem(0xc774, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf521, gbc.sp());
        EXPECT(0xc776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc774));
        EXPECT(0xa1, gbc.readMem(0xc775));
        // CB A1 0317
        gbc.setState(0x7e7e, 0x4864, 0x5270, 0x7a76, 0xbbce, 0xc9b4, 0x0, 0x0);
        gbc.writeMem(0x7e7e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4864, gbc.sp());
        EXPECT(0x7e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0318
        gbc.setState(0xd1af, 0x164c, 0x3ab0, 0x170c, 0x7dee, 0x44c0, 0x0, 0x0);
        gbc.writeMem(0xd1af, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x164c, gbc.sp());
        EXPECT(0xd1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1af));
        EXPECT(0xa1, gbc.readMem(0xd1b0));
        // CB A1 0319
        gbc.setState(0xc2af, 0x57b5, 0x6910, 0x6c07, 0x9228, 0xcbb8, 0x1, 0x0);
        gbc.writeMem(0xc2af, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x57b5, gbc.sp());
        EXPECT(0xc2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2af));
        EXPECT(0xa1, gbc.readMem(0xc2b0));
        // CB A1 031A
        gbc.setState(0xe70, 0x81af, 0x6460, 0xa8b6, 0x1bd5, 0xf16a, 0x0, 0x0);
        gbc.writeMem(0xe70, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x81af, gbc.sp());
        EXPECT(0xe72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 031B
        gbc.setState(0x411d, 0x4ef6, 0x130, 0xa8ed, 0x4538, 0x76b5, 0x0, 0x1);
        gbc.writeMem(0x411d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4ef6, gbc.sp());
        EXPECT(0x411f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 031C
        gbc.setState(0x979c, 0xda1e, 0xe4a0, 0xd573, 0xadda, 0x5898, 0x1, 0x0);
        gbc.writeMem(0x979c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xda1e, gbc.sp());
        EXPECT(0x979e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979c));
        EXPECT(0xa1, gbc.readMem(0x979d));
        // CB A1 031D
        gbc.setState(0xcad5, 0xb57e, 0xdd0, 0x266e, 0x18c8, 0x6f0d, 0x0, 0x0);
        gbc.writeMem(0xcad5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb57e, gbc.sp());
        EXPECT(0xcad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad5));
        EXPECT(0xa1, gbc.readMem(0xcad6));
        // CB A1 031E
        gbc.setState(0x49d3, 0x575, 0x86f0, 0x6397, 0xbc18, 0x3ace, 0x0, 0x0);
        gbc.writeMem(0x49d3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x575, gbc.sp());
        EXPECT(0x49d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 031F
        gbc.setState(0x4613, 0x4bcd, 0xeeb0, 0xb1db, 0x9307, 0xf9f6, 0x1, 0x1);
        gbc.writeMem(0x4613, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4bcd, gbc.sp());
        EXPECT(0x4615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0320
        gbc.setState(0xb0f9, 0x2961, 0x56f0, 0xb561, 0x6f9b, 0xe10a, 0x0, 0x1);
        gbc.writeMem(0xb0f9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0xb0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f9));
        EXPECT(0xa1, gbc.readMem(0xb0fa));
        // CB A1 0321
        gbc.setState(0x13ef, 0xf53c, 0xfc20, 0x508a, 0xd6e8, 0x9657, 0x1, 0x0);
        gbc.writeMem(0x13ef, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf53c, gbc.sp());
        EXPECT(0x13f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0322
        gbc.setState(0x908a, 0xa185, 0x1dc0, 0x5e6a, 0x527f, 0xc48d, 0x0, 0x0);
        gbc.writeMem(0x908a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa185, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908a));
        EXPECT(0xa1, gbc.readMem(0x908b));
        // CB A1 0323
        gbc.setState(0x6156, 0x3e86, 0x7a90, 0xfc90, 0x9f92, 0xc55c, 0x1, 0x1);
        gbc.writeMem(0x6156, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3e86, gbc.sp());
        EXPECT(0x6158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0324
        gbc.setState(0xc8de, 0x6e4e, 0x19d0, 0x52d3, 0x8b2c, 0xa46f, 0x1, 0x0);
        gbc.writeMem(0xc8de, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6e4e, gbc.sp());
        EXPECT(0xc8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8de));
        EXPECT(0xa1, gbc.readMem(0xc8df));
        // CB A1 0325
        gbc.setState(0xe0f1, 0x7443, 0xf7c0, 0xd6fc, 0x3e1a, 0x8b53, 0x0, 0x0);
        gbc.writeMem(0xe0f1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7443, gbc.sp());
        EXPECT(0xe0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f1));
        EXPECT(0xa1, gbc.readMem(0xe0f2));
        // CB A1 0326
        gbc.setState(0xac9c, 0xcc10, 0x69c0, 0xedad, 0x2748, 0xde0b, 0x0, 0x0);
        gbc.writeMem(0xac9c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcc10, gbc.sp());
        EXPECT(0xac9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9c));
        EXPECT(0xa1, gbc.readMem(0xac9d));
        // CB A1 0327
        gbc.setState(0xe52c, 0x930f, 0x750, 0xe7c7, 0x6d19, 0x881d, 0x1, 0x1);
        gbc.writeMem(0xe52c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x930f, gbc.sp());
        EXPECT(0xe52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe52c));
        EXPECT(0xa1, gbc.readMem(0xe52d));
        // CB A1 0328
        gbc.setState(0x2dd8, 0xc964, 0x50b0, 0xa819, 0x59b9, 0x1bfa, 0x0, 0x0);
        gbc.writeMem(0x2dd8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc964, gbc.sp());
        EXPECT(0x2dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0329
        gbc.setState(0x875a, 0x7802, 0x93b0, 0x7ae6, 0xa683, 0xd2be, 0x0, 0x0);
        gbc.writeMem(0x875a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7802, gbc.sp());
        EXPECT(0x875c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875a));
        EXPECT(0xa1, gbc.readMem(0x875b));
        // CB A1 032A
        gbc.setState(0x9d5, 0xa40b, 0x1a00, 0x25ea, 0xaa6b, 0x3a1c, 0x0, 0x0);
        gbc.writeMem(0x9d5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa40b, gbc.sp());
        EXPECT(0x9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 032B
        gbc.setState(0xe3b6, 0x6dc2, 0x5de0, 0xe84, 0x544d, 0xae49, 0x0, 0x1);
        gbc.writeMem(0xe3b6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6dc2, gbc.sp());
        EXPECT(0xe3b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b6));
        EXPECT(0xa1, gbc.readMem(0xe3b7));
        // CB A1 032C
        gbc.setState(0x37c6, 0x89a7, 0xb480, 0xfa38, 0xb92f, 0x2d1a, 0x1, 0x0);
        gbc.writeMem(0x37c6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x89a7, gbc.sp());
        EXPECT(0x37c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 032D
        gbc.setState(0x1ef, 0xf017, 0xfdd0, 0xe36, 0xf67f, 0x3e44, 0x0, 0x1);
        gbc.writeMem(0x1ef, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf017, gbc.sp());
        EXPECT(0x1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 032E
        gbc.setState(0x666a, 0x5e7a, 0x26d0, 0x8574, 0x5edf, 0x979d, 0x0, 0x1);
        gbc.writeMem(0x666a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5e7a, gbc.sp());
        EXPECT(0x666c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0330
        gbc.setState(0x8fe5, 0x9600, 0xb8c0, 0x6c85, 0xd103, 0xff29, 0x0, 0x0);
        gbc.writeMem(0x8fe5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9600, gbc.sp());
        EXPECT(0x8fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe5));
        EXPECT(0xa1, gbc.readMem(0x8fe6));
        // CB A1 0332
        gbc.setState(0x94c6, 0xd183, 0x6930, 0x720a, 0xc59f, 0x1bd8, 0x1, 0x0);
        gbc.writeMem(0x94c6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd183, gbc.sp());
        EXPECT(0x94c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c6));
        EXPECT(0xa1, gbc.readMem(0x94c7));
        // CB A1 0333
        gbc.setState(0xdf83, 0x81d, 0xfb70, 0xe65, 0x579, 0xed06, 0x1, 0x1);
        gbc.writeMem(0xdf83, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x81d, gbc.sp());
        EXPECT(0xdf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf83));
        EXPECT(0xa1, gbc.readMem(0xdf84));
        // CB A1 0334
        gbc.setState(0x3a27, 0x9551, 0x6990, 0xa73e, 0xc1d0, 0x7dd8, 0x1, 0x0);
        gbc.writeMem(0x3a27, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9551, gbc.sp());
        EXPECT(0x3a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0335
        gbc.setState(0x3ca3, 0x8196, 0x52a0, 0x2e4, 0xec1f, 0xdc10, 0x1, 0x0);
        gbc.writeMem(0x3ca3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8196, gbc.sp());
        EXPECT(0x3ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0336
        gbc.setState(0xb89, 0xa1be, 0xba90, 0xea97, 0x55b9, 0x4c1d, 0x1, 0x1);
        gbc.writeMem(0xb89, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa1be, gbc.sp());
        EXPECT(0xb8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0337
        gbc.setState(0xeb70, 0xeac3, 0x4560, 0xeec0, 0x5c71, 0x11c3, 0x1, 0x0);
        gbc.writeMem(0xeb70, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0xeb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb70));
        EXPECT(0xa1, gbc.readMem(0xeb71));
        // CB A1 0338
        gbc.setState(0x7815, 0xf3c0, 0x92a0, 0xfb9, 0x1f2e, 0xfd4, 0x0, 0x1);
        gbc.writeMem(0x7815, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf3c0, gbc.sp());
        EXPECT(0x7817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0339
        gbc.setState(0xd6ee, 0x6543, 0x8290, 0xae39, 0x2033, 0xb520, 0x1, 0x0);
        gbc.writeMem(0xd6ee, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6543, gbc.sp());
        EXPECT(0xd6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ee));
        EXPECT(0xa1, gbc.readMem(0xd6ef));
        // CB A1 033A
        gbc.setState(0x65f7, 0xff07, 0x7230, 0x8a82, 0x409, 0x9008, 0x1, 0x0);
        gbc.writeMem(0x65f7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xff07, gbc.sp());
        EXPECT(0x65f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 033B
        gbc.setState(0xba22, 0xfa6c, 0x9c20, 0x86f, 0x1090, 0xbe9d, 0x0, 0x0);
        gbc.writeMem(0xba22, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfa6c, gbc.sp());
        EXPECT(0xba24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba22));
        EXPECT(0xa1, gbc.readMem(0xba23));
        // CB A1 033C
        gbc.setState(0x4681, 0x39bf, 0x880, 0xae85, 0xe527, 0x1b36, 0x1, 0x0);
        gbc.writeMem(0x4681, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x39bf, gbc.sp());
        EXPECT(0x4683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 033D
        gbc.setState(0x4cc5, 0xe9a3, 0x9110, 0x1fc1, 0xaa60, 0x940, 0x1, 0x0);
        gbc.writeMem(0x4cc5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe9a3, gbc.sp());
        EXPECT(0x4cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 033E
        gbc.setState(0x43df, 0x6543, 0x8d50, 0xbd85, 0xaf04, 0x9b37, 0x0, 0x0);
        gbc.writeMem(0x43df, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6543, gbc.sp());
        EXPECT(0x43e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 033F
        gbc.setState(0xb06, 0x8b62, 0x90e0, 0xfe31, 0xdebd, 0x3205, 0x1, 0x0);
        gbc.writeMem(0xb06, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8b62, gbc.sp());
        EXPECT(0xb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0340
        gbc.setState(0x4b46, 0x1dc8, 0xdbd0, 0x320, 0x360d, 0xe3cc, 0x0, 0x0);
        gbc.writeMem(0x4b46, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1dc8, gbc.sp());
        EXPECT(0x4b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0341
        gbc.setState(0x5d58, 0x8441, 0x8240, 0x906f, 0xa9d4, 0xe74a, 0x0, 0x0);
        gbc.writeMem(0x5d58, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8441, gbc.sp());
        EXPECT(0x5d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0342
        gbc.setState(0x8c9, 0x25c5, 0x9a0, 0xdd15, 0x4338, 0x3c1, 0x0, 0x1);
        gbc.writeMem(0x8c9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x25c5, gbc.sp());
        EXPECT(0x8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0343
        gbc.setState(0x464f, 0x5a15, 0x8810, 0x5d14, 0x58f3, 0xd766, 0x1, 0x1);
        gbc.writeMem(0x464f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5a15, gbc.sp());
        EXPECT(0x4651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0345
        gbc.setState(0x6d1, 0x8895, 0x9560, 0xfb61, 0x1041, 0x513c, 0x0, 0x0);
        gbc.writeMem(0x6d1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8895, gbc.sp());
        EXPECT(0x6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0346
        gbc.setState(0xadc8, 0xc891, 0xf550, 0xc54e, 0xf4cd, 0xcb0e, 0x1, 0x1);
        gbc.writeMem(0xadc8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc891, gbc.sp());
        EXPECT(0xadca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc8));
        EXPECT(0xa1, gbc.readMem(0xadc9));
        // CB A1 0347
        gbc.setState(0x9c99, 0x45f6, 0xbed0, 0x5d08, 0x6b4e, 0xfb9b, 0x0, 0x1);
        gbc.writeMem(0x9c99, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x45f6, gbc.sp());
        EXPECT(0x9c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c99));
        EXPECT(0xa1, gbc.readMem(0x9c9a));
        // CB A1 0348
        gbc.setState(0x7358, 0x933, 0xc140, 0x458d, 0xb96e, 0xc30c, 0x0, 0x1);
        gbc.writeMem(0x7358, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x933, gbc.sp());
        EXPECT(0x735a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0349
        gbc.setState(0xb738, 0xca58, 0x5380, 0xf983, 0xeae1, 0x2ed9, 0x0, 0x0);
        gbc.writeMem(0xb738, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xca58, gbc.sp());
        EXPECT(0xb73a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb738));
        EXPECT(0xa1, gbc.readMem(0xb739));
        // CB A1 034B
        gbc.setState(0xb55d, 0x53fa, 0xa0c0, 0x3309, 0xed57, 0xecf1, 0x0, 0x0);
        gbc.writeMem(0xb55d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x53fa, gbc.sp());
        EXPECT(0xb55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55d));
        EXPECT(0xa1, gbc.readMem(0xb55e));
        // CB A1 034C
        gbc.setState(0x7b8f, 0xcd39, 0xd270, 0xabd4, 0x4b4e, 0xfb8b, 0x1, 0x1);
        gbc.writeMem(0x7b8f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcd39, gbc.sp());
        EXPECT(0x7b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 034D
        gbc.setState(0xcfa2, 0x2e37, 0x2070, 0xc1e5, 0xaa87, 0x7289, 0x1, 0x0);
        gbc.writeMem(0xcfa2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2e37, gbc.sp());
        EXPECT(0xcfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa2));
        EXPECT(0xa1, gbc.readMem(0xcfa3));
        // CB A1 034E
        gbc.setState(0x8bb9, 0xfa5b, 0xee20, 0x4d71, 0x2dd6, 0xc933, 0x1, 0x0);
        gbc.writeMem(0x8bb9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfa5b, gbc.sp());
        EXPECT(0x8bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb9));
        EXPECT(0xa1, gbc.readMem(0x8bba));
        // CB A1 034F
        gbc.setState(0x779, 0xd478, 0x8c70, 0x54c, 0x4de9, 0x6b3e, 0x1, 0x1);
        gbc.writeMem(0x779, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd478, gbc.sp());
        EXPECT(0x77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0350
        gbc.setState(0x4e81, 0xdd0f, 0xa940, 0xfa17, 0xe77, 0xd63, 0x0, 0x1);
        gbc.writeMem(0x4e81, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdd0f, gbc.sp());
        EXPECT(0x4e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0352
        gbc.setState(0x18f5, 0xa563, 0x18d0, 0x85e9, 0x55fb, 0xd34c, 0x1, 0x1);
        gbc.writeMem(0x18f5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa563, gbc.sp());
        EXPECT(0x18f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0353
        gbc.setState(0xa045, 0x511b, 0xdbe0, 0xad23, 0xd342, 0xd3b1, 0x0, 0x1);
        gbc.writeMem(0xa045, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x511b, gbc.sp());
        EXPECT(0xa047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa045));
        EXPECT(0xa1, gbc.readMem(0xa046));
        // CB A1 0354
        gbc.setState(0x2c73, 0xec51, 0x85a0, 0xa236, 0xaa4c, 0x7c65, 0x1, 0x0);
        gbc.writeMem(0x2c73, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xec51, gbc.sp());
        EXPECT(0x2c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0355
        gbc.setState(0x6d59, 0x5d59, 0xbe20, 0x4719, 0xa0da, 0xb366, 0x1, 0x0);
        gbc.writeMem(0x6d59, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5d59, gbc.sp());
        EXPECT(0x6d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0356
        gbc.setState(0xed97, 0x7fe1, 0xffd0, 0xda78, 0x6bd, 0xfc41, 0x0, 0x1);
        gbc.writeMem(0xed97, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7fe1, gbc.sp());
        EXPECT(0xed99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed97));
        EXPECT(0xa1, gbc.readMem(0xed98));
        // CB A1 0357
        gbc.setState(0xc385, 0x55c2, 0x6800, 0xe07, 0x7c04, 0x48bd, 0x0, 0x0);
        gbc.writeMem(0xc385, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x55c2, gbc.sp());
        EXPECT(0xc387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc385));
        EXPECT(0xa1, gbc.readMem(0xc386));
        // CB A1 0358
        gbc.setState(0xd1fe, 0xab56, 0x8d80, 0x526e, 0x729e, 0xdba7, 0x1, 0x0);
        gbc.writeMem(0xd1fe, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xab56, gbc.sp());
        EXPECT(0xd200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1fe));
        EXPECT(0xa1, gbc.readMem(0xd1ff));
        // CB A1 035A
        gbc.setState(0xb763, 0xe2de, 0x2170, 0x75be, 0x9fea, 0x675f, 0x0, 0x1);
        gbc.writeMem(0xb763, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe2de, gbc.sp());
        EXPECT(0xb765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb763));
        EXPECT(0xa1, gbc.readMem(0xb764));
        // CB A1 035B
        gbc.setState(0x9308, 0xefc, 0x3150, 0xb0d5, 0x9ea8, 0xe2b5, 0x1, 0x1);
        gbc.writeMem(0x9308, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xefc, gbc.sp());
        EXPECT(0x930a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9308));
        EXPECT(0xa1, gbc.readMem(0x9309));
        // CB A1 035C
        gbc.setState(0x473e, 0xe527, 0x8200, 0x684d, 0x242d, 0xb1c0, 0x0, 0x0);
        gbc.writeMem(0x473e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe527, gbc.sp());
        EXPECT(0x4740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 035D
        gbc.setState(0x32a9, 0x2662, 0xa1f0, 0x57a2, 0x753b, 0x58a, 0x1, 0x1);
        gbc.writeMem(0x32a9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2662, gbc.sp());
        EXPECT(0x32ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 035E
        gbc.setState(0x4d0f, 0xd93e, 0xb9d0, 0x89a3, 0x470f, 0x218e, 0x0, 0x1);
        gbc.writeMem(0x4d0f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd93e, gbc.sp());
        EXPECT(0x4d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0360
        gbc.setState(0xcac6, 0x11e8, 0x3a40, 0x1828, 0xd3d3, 0x9641, 0x0, 0x0);
        gbc.writeMem(0xcac6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x11e8, gbc.sp());
        EXPECT(0xcac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac6));
        EXPECT(0xa1, gbc.readMem(0xcac7));
        // CB A1 0361
        gbc.setState(0x6b41, 0x453a, 0x9ed0, 0x842f, 0x5555, 0x561a, 0x1, 0x0);
        gbc.writeMem(0x6b41, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x453a, gbc.sp());
        EXPECT(0x6b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0362
        gbc.setState(0x508a, 0xe1cb, 0x2670, 0xe5ba, 0xec15, 0xf652, 0x1, 0x1);
        gbc.writeMem(0x508a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe1cb, gbc.sp());
        EXPECT(0x508c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0363
        gbc.setState(0x46fc, 0xe488, 0xe3c0, 0xf441, 0x5f72, 0x71ed, 0x1, 0x0);
        gbc.writeMem(0x46fc, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe488, gbc.sp());
        EXPECT(0x46fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0364
        gbc.setState(0xcab1, 0x3fcc, 0x40b0, 0x98e6, 0x7b14, 0xebdb, 0x0, 0x0);
        gbc.writeMem(0xcab1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3fcc, gbc.sp());
        EXPECT(0xcab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab1));
        EXPECT(0xa1, gbc.readMem(0xcab2));
        // CB A1 0365
        gbc.setState(0xab84, 0x6230, 0xdbe0, 0x370, 0x3b1e, 0x4025, 0x0, 0x1);
        gbc.writeMem(0xab84, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6230, gbc.sp());
        EXPECT(0xab86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab84));
        EXPECT(0xa1, gbc.readMem(0xab85));
        // CB A1 0367
        gbc.setState(0x1db4, 0x1472, 0xb9e0, 0xc75e, 0xf819, 0x9736, 0x0, 0x1);
        gbc.writeMem(0x1db4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1472, gbc.sp());
        EXPECT(0x1db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0368
        gbc.setState(0x1a71, 0xa248, 0x2a0, 0x9dba, 0xe907, 0xf4fa, 0x0, 0x1);
        gbc.writeMem(0x1a71, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa248, gbc.sp());
        EXPECT(0x1a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0369
        gbc.setState(0x47a4, 0x44c5, 0x7140, 0x3e49, 0xd786, 0xfa3d, 0x0, 0x0);
        gbc.writeMem(0x47a4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x44c5, gbc.sp());
        EXPECT(0x47a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 036A
        gbc.setState(0x9443, 0x6de1, 0xc640, 0x40d4, 0x4699, 0x3d82, 0x1, 0x1);
        gbc.writeMem(0x9443, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6de1, gbc.sp());
        EXPECT(0x9445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9443));
        EXPECT(0xa1, gbc.readMem(0x9444));
        // CB A1 036B
        gbc.setState(0x9d9b, 0x3f5e, 0x33b0, 0xa001, 0x5c99, 0x7b28, 0x1, 0x0);
        gbc.writeMem(0x9d9b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3f5e, gbc.sp());
        EXPECT(0x9d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9b));
        EXPECT(0xa1, gbc.readMem(0x9d9c));
        // CB A1 036C
        gbc.setState(0x2e6, 0xdeae, 0x2d80, 0xcfd6, 0xb9e7, 0x987e, 0x0, 0x0);
        gbc.writeMem(0x2e6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdeae, gbc.sp());
        EXPECT(0x2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 036D
        gbc.setState(0x6b86, 0xe0fb, 0xb40, 0x50d6, 0xd616, 0x54d9, 0x1, 0x1);
        gbc.writeMem(0x6b86, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe0fb, gbc.sp());
        EXPECT(0x6b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 036E
        gbc.setState(0xae08, 0xba6b, 0xec80, 0x2b12, 0x4e26, 0x3e6d, 0x0, 0x1);
        gbc.writeMem(0xae08, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xba6b, gbc.sp());
        EXPECT(0xae0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae08));
        EXPECT(0xa1, gbc.readMem(0xae09));
        // CB A1 0370
        gbc.setState(0x6950, 0x244b, 0xb960, 0xc794, 0x1600, 0x1b4b, 0x1, 0x1);
        gbc.writeMem(0x6950, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x244b, gbc.sp());
        EXPECT(0x6952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0371
        gbc.setState(0x26fe, 0x2c6e, 0xb2f0, 0xea21, 0xfc79, 0x5516, 0x1, 0x1);
        gbc.writeMem(0x26fe, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2c6e, gbc.sp());
        EXPECT(0x2700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0372
        gbc.setState(0x9afb, 0xff08, 0x99f0, 0xcd70, 0x20fd, 0xb2ab, 0x0, 0x1);
        gbc.writeMem(0x9afb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0x9afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afb));
        EXPECT(0xa1, gbc.readMem(0x9afc));
        // CB A1 0373
        gbc.setState(0x97a0, 0x1f15, 0xf6a0, 0xc6e, 0x8e90, 0xd80a, 0x1, 0x0);
        gbc.writeMem(0x97a0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1f15, gbc.sp());
        EXPECT(0x97a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a0));
        EXPECT(0xa1, gbc.readMem(0x97a1));
        // CB A1 0374
        gbc.setState(0x32a0, 0x87fb, 0x2890, 0xd9f5, 0x877c, 0xc14, 0x1, 0x0);
        gbc.writeMem(0x32a0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x87fb, gbc.sp());
        EXPECT(0x32a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0375
        gbc.setState(0x835c, 0x6b33, 0x4290, 0x2be1, 0x6e2c, 0xa460, 0x1, 0x0);
        gbc.writeMem(0x835c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6b33, gbc.sp());
        EXPECT(0x835e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835c));
        EXPECT(0xa1, gbc.readMem(0x835d));
        // CB A1 0376
        gbc.setState(0x378c, 0x4c92, 0xc8d0, 0x15a3, 0x74ad, 0x47f, 0x1, 0x1);
        gbc.writeMem(0x378c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4c92, gbc.sp());
        EXPECT(0x378e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0377
        gbc.setState(0xbf25, 0x4602, 0x2630, 0x5b2c, 0xf0f2, 0xc809, 0x1, 0x1);
        gbc.writeMem(0xbf25, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4602, gbc.sp());
        EXPECT(0xbf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf25));
        EXPECT(0xa1, gbc.readMem(0xbf26));
        // CB A1 0378
        gbc.setState(0x6c5e, 0x1056, 0x3540, 0x7dc9, 0x8603, 0x7ffc, 0x0, 0x0);
        gbc.writeMem(0x6c5e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1056, gbc.sp());
        EXPECT(0x6c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0379
        gbc.setState(0xa621, 0x3fae, 0xb20, 0x4d0e, 0x9281, 0xccef, 0x0, 0x1);
        gbc.writeMem(0xa621, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3fae, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa621));
        EXPECT(0xa1, gbc.readMem(0xa622));
        // CB A1 037A
        gbc.setState(0x4303, 0x6025, 0xcd60, 0x3ea9, 0xa08a, 0x1253, 0x0, 0x1);
        gbc.writeMem(0x4303, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6025, gbc.sp());
        EXPECT(0x4305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 037B
        gbc.setState(0x31b9, 0x15f4, 0x6db0, 0xac0c, 0xc4ce, 0x9271, 0x0, 0x1);
        gbc.writeMem(0x31b9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x15f4, gbc.sp());
        EXPECT(0x31bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 037C
        gbc.setState(0x7847, 0x400d, 0x7a70, 0x7d8e, 0x41fd, 0x8afd, 0x1, 0x0);
        gbc.writeMem(0x7847, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x400d, gbc.sp());
        EXPECT(0x7849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 037E
        gbc.setState(0xaf9, 0x424d, 0x9d60, 0x1117, 0xb29e, 0x94ab, 0x1, 0x0);
        gbc.writeMem(0xaf9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x424d, gbc.sp());
        EXPECT(0xafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 037F
        gbc.setState(0x5ce8, 0x9443, 0xca70, 0x635a, 0x36, 0x9ad9, 0x1, 0x0);
        gbc.writeMem(0x5ce8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9443, gbc.sp());
        EXPECT(0x5cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0380
        gbc.setState(0xe9c, 0x1697, 0x2270, 0x193f, 0x868b, 0x352d, 0x1, 0x1);
        gbc.writeMem(0xe9c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1697, gbc.sp());
        EXPECT(0xe9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0381
        gbc.setState(0x864e, 0xedbd, 0x91c0, 0x11d8, 0xf658, 0xa430, 0x1, 0x0);
        gbc.writeMem(0x864e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xedbd, gbc.sp());
        EXPECT(0x8650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864e));
        EXPECT(0xa1, gbc.readMem(0x864f));
        // CB A1 0382
        gbc.setState(0xceb, 0x3371, 0xfaa0, 0xc949, 0xfc27, 0x1191, 0x0, 0x0);
        gbc.writeMem(0xceb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3371, gbc.sp());
        EXPECT(0xced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0383
        gbc.setState(0x50a0, 0x6c, 0x6c30, 0x1eaa, 0x6c39, 0x638b, 0x1, 0x0);
        gbc.writeMem(0x50a0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6c, gbc.sp());
        EXPECT(0x50a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0384
        gbc.setState(0x110, 0x8636, 0x2250, 0x635f, 0x8c2f, 0xaa14, 0x0, 0x1);
        gbc.writeMem(0x110, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8636, gbc.sp());
        EXPECT(0x112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0385
        gbc.setState(0x2071, 0x6fa2, 0xa2c0, 0xbecc, 0xd7fb, 0x8960, 0x0, 0x0);
        gbc.writeMem(0x2071, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6fa2, gbc.sp());
        EXPECT(0x2073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0386
        gbc.setState(0x765f, 0xa43f, 0x1af0, 0x1325, 0x6095, 0x79fb, 0x0, 0x0);
        gbc.writeMem(0x765f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa43f, gbc.sp());
        EXPECT(0x7661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0387
        gbc.setState(0x325f, 0x9099, 0x3f70, 0x84e5, 0x77ad, 0x6929, 0x0, 0x0);
        gbc.writeMem(0x325f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9099, gbc.sp());
        EXPECT(0x3261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0388
        gbc.setState(0x36ff, 0x4a4c, 0xf090, 0x3f3e, 0x30d7, 0xea64, 0x1, 0x0);
        gbc.writeMem(0x36ff, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4a4c, gbc.sp());
        EXPECT(0x3701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0389
        gbc.setState(0x71e3, 0x9b02, 0xd920, 0x14eb, 0x1cf, 0x5204, 0x0, 0x1);
        gbc.writeMem(0x71e3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9b02, gbc.sp());
        EXPECT(0x71e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 038A
        gbc.setState(0xc937, 0xf378, 0xb80, 0x3550, 0xf889, 0xd7b, 0x1, 0x0);
        gbc.writeMem(0xc937, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf378, gbc.sp());
        EXPECT(0xc939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc937));
        EXPECT(0xa1, gbc.readMem(0xc938));
        // CB A1 038B
        gbc.setState(0x8ec9, 0xea4f, 0x2f80, 0x6384, 0x4027, 0x8ece, 0x0, 0x0);
        gbc.writeMem(0x8ec9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xea4f, gbc.sp());
        EXPECT(0x8ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec9));
        EXPECT(0xa1, gbc.readMem(0x8eca));
        // CB A1 038C
        gbc.setState(0x64a6, 0xef52, 0x9ac0, 0x1488, 0xb64f, 0x520e, 0x0, 0x1);
        gbc.writeMem(0x64a6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xef52, gbc.sp());
        EXPECT(0x64a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 038D
        gbc.setState(0x7b4a, 0x2f79, 0x24f0, 0xdacf, 0x2b9f, 0x6878, 0x1, 0x1);
        gbc.writeMem(0x7b4a, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2f79, gbc.sp());
        EXPECT(0x7b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 038E
        gbc.setState(0x1532, 0x4387, 0x7070, 0x682, 0x6bb9, 0x1898, 0x0, 0x1);
        gbc.writeMem(0x1532, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4387, gbc.sp());
        EXPECT(0x1534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 038F
        gbc.setState(0x3ec9, 0xa4df, 0xa7b0, 0x4540, 0x82b9, 0xcf60, 0x0, 0x0);
        gbc.writeMem(0x3ec9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa4df, gbc.sp());
        EXPECT(0x3ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0390
        gbc.setState(0xb495, 0xc6c1, 0xbe40, 0xbbf7, 0xa0c5, 0xee27, 0x0, 0x0);
        gbc.writeMem(0xb495, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc6c1, gbc.sp());
        EXPECT(0xb497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb495));
        EXPECT(0xa1, gbc.readMem(0xb496));
        // CB A1 0391
        gbc.setState(0x7a1f, 0x28f4, 0xff90, 0x3c9f, 0x25c2, 0x348f, 0x1, 0x1);
        gbc.writeMem(0x7a1f, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x28f4, gbc.sp());
        EXPECT(0x7a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 0392
        gbc.setState(0xdbaa, 0x614c, 0x90c0, 0x8d86, 0x3e52, 0x8b62, 0x1, 0x1);
        gbc.writeMem(0xdbaa, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x614c, gbc.sp());
        EXPECT(0xdbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbaa));
        EXPECT(0xa1, gbc.readMem(0xdbab));
        // CB A1 0393
        gbc.setState(0xaeb0, 0x6ee7, 0xa9b0, 0x83da, 0xbece, 0x4575, 0x1, 0x0);
        gbc.writeMem(0xaeb0, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6ee7, gbc.sp());
        EXPECT(0xaeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb0));
        EXPECT(0xa1, gbc.readMem(0xaeb1));
        // CB A1 0394
        gbc.setState(0x1ece, 0xe548, 0xf7a0, 0x10c0, 0xb438, 0xb7f3, 0x1, 0x1);
        gbc.writeMem(0x1ece, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe548, gbc.sp());
        EXPECT(0x1ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0395
        gbc.setState(0xb87e, 0x575, 0x3cc0, 0xf3b8, 0x469e, 0x2891, 0x0, 0x0);
        gbc.writeMem(0xb87e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x575, gbc.sp());
        EXPECT(0xb880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb87e));
        EXPECT(0xa1, gbc.readMem(0xb87f));
        // CB A1 0396
        gbc.setState(0xbfd5, 0x17b9, 0x84a0, 0xe9e3, 0xee37, 0x9fdc, 0x1, 0x0);
        gbc.writeMem(0xbfd5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x17b9, gbc.sp());
        EXPECT(0xbfd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd5));
        EXPECT(0xa1, gbc.readMem(0xbfd6));
        // CB A1 0397
        gbc.setState(0x69ab, 0xf219, 0x8f40, 0xc6d8, 0x95c7, 0xf6c6, 0x1, 0x0);
        gbc.writeMem(0x69ab, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf219, gbc.sp());
        EXPECT(0x69ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 0398
        gbc.setState(0xee95, 0x7618, 0x8c70, 0x4c2e, 0x8634, 0x6cb1, 0x1, 0x0);
        gbc.writeMem(0xee95, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7618, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee95));
        EXPECT(0xa1, gbc.readMem(0xee96));
        // CB A1 0399
        gbc.setState(0x972e, 0xc5b7, 0x2130, 0x74c8, 0x294a, 0x2dff, 0x0, 0x1);
        gbc.writeMem(0x972e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc5b7, gbc.sp());
        EXPECT(0x9730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972e));
        EXPECT(0xa1, gbc.readMem(0x972f));
        // CB A1 039A
        gbc.setState(0x5dc2, 0x541f, 0xfd90, 0x5490, 0x54dc, 0x4a3b, 0x0, 0x1);
        gbc.writeMem(0x5dc2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x541f, gbc.sp());
        EXPECT(0x5dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 039B
        gbc.setState(0x257b, 0x54c0, 0x8000, 0x319a, 0xa112, 0x9755, 0x1, 0x1);
        gbc.writeMem(0x257b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x54c0, gbc.sp());
        EXPECT(0x257d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 039C
        gbc.setState(0xa6d8, 0x64fb, 0xb5e0, 0xabee, 0xd818, 0xac04, 0x1, 0x1);
        gbc.writeMem(0xa6d8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x64fb, gbc.sp());
        EXPECT(0xa6da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d8));
        EXPECT(0xa1, gbc.readMem(0xa6d9));
        // CB A1 039D
        gbc.setState(0x8383, 0x64d7, 0xab00, 0xd450, 0x746, 0x3aba, 0x1, 0x0);
        gbc.writeMem(0x8383, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x64d7, gbc.sp());
        EXPECT(0x8385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8383));
        EXPECT(0xa1, gbc.readMem(0x8384));
        // CB A1 039E
        gbc.setState(0x6026, 0x72d4, 0xfaa0, 0x4174, 0xf017, 0x4f79, 0x1, 0x0);
        gbc.writeMem(0x6026, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x72d4, gbc.sp());
        EXPECT(0x6028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 039F
        gbc.setState(0x483d, 0x9756, 0xdf10, 0x7d67, 0x3a01, 0x3f8, 0x1, 0x0);
        gbc.writeMem(0x483d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9756, gbc.sp());
        EXPECT(0x483f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03A0
        gbc.setState(0x4930, 0x1e0c, 0xc920, 0x540e, 0x14e7, 0x6070, 0x1, 0x1);
        gbc.writeMem(0x4930, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1e0c, gbc.sp());
        EXPECT(0x4932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03A1
        gbc.setState(0xd967, 0x3028, 0xc2a0, 0xe4ef, 0xaf39, 0xb705, 0x0, 0x0);
        gbc.writeMem(0xd967, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3028, gbc.sp());
        EXPECT(0xd969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd967));
        EXPECT(0xa1, gbc.readMem(0xd968));
        // CB A1 03A2
        gbc.setState(0x6d72, 0xa9fb, 0xb8b0, 0x363c, 0x88bb, 0x1918, 0x0, 0x0);
        gbc.writeMem(0x6d72, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa9fb, gbc.sp());
        EXPECT(0x6d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03A3
        gbc.setState(0xa89e, 0xea78, 0xc160, 0x157a, 0x72e6, 0x32e3, 0x0, 0x1);
        gbc.writeMem(0xa89e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xea78, gbc.sp());
        EXPECT(0xa8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89e));
        EXPECT(0xa1, gbc.readMem(0xa89f));
        // CB A1 03A4
        gbc.setState(0x4e46, 0xfb88, 0x14b0, 0xdbff, 0xcc0e, 0x1308, 0x1, 0x1);
        gbc.writeMem(0x4e46, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfb88, gbc.sp());
        EXPECT(0x4e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03A5
        gbc.setState(0x1874, 0x2ec9, 0xfe20, 0x2430, 0x8663, 0xfd11, 0x1, 0x1);
        gbc.writeMem(0x1874, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2ec9, gbc.sp());
        EXPECT(0x1876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03A6
        gbc.setState(0x9cae, 0x138, 0x19f0, 0xea6d, 0x4d85, 0x421d, 0x1, 0x0);
        gbc.writeMem(0x9cae, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x138, gbc.sp());
        EXPECT(0x9cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cae));
        EXPECT(0xa1, gbc.readMem(0x9caf));
        // CB A1 03A7
        gbc.setState(0x3171, 0xb840, 0xdb20, 0xc909, 0x16e4, 0x23f1, 0x1, 0x0);
        gbc.writeMem(0x3171, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb840, gbc.sp());
        EXPECT(0x3173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03A9
        gbc.setState(0x3418, 0x63b4, 0xbe70, 0xec23, 0xff6e, 0xf9f4, 0x1, 0x0);
        gbc.writeMem(0x3418, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x63b4, gbc.sp());
        EXPECT(0x341a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03AA
        gbc.setState(0x7437, 0xbd11, 0x53d0, 0x5c60, 0xc73c, 0xc2b7, 0x0, 0x1);
        gbc.writeMem(0x7437, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbd11, gbc.sp());
        EXPECT(0x7439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03AB
        gbc.setState(0x49c4, 0xfb04, 0xbb60, 0xcc23, 0xfc0, 0xd40c, 0x1, 0x0);
        gbc.writeMem(0x49c4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfb04, gbc.sp());
        EXPECT(0x49c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03AC
        gbc.setState(0xe7ec, 0x73e6, 0x8960, 0x47fd, 0xbc38, 0x318f, 0x0, 0x1);
        gbc.writeMem(0xe7ec, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x73e6, gbc.sp());
        EXPECT(0xe7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ec));
        EXPECT(0xa1, gbc.readMem(0xe7ed));
        // CB A1 03AE
        gbc.setState(0xefb5, 0x547, 0x7720, 0xdc6, 0xea0a, 0x86e9, 0x1, 0x1);
        gbc.writeMem(0xefb5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x547, gbc.sp());
        EXPECT(0xefb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb5));
        EXPECT(0xa1, gbc.readMem(0xefb6));
        // CB A1 03AF
        gbc.setState(0x8425, 0xdaa5, 0xad10, 0x2e17, 0xec2b, 0xdf68, 0x1, 0x0);
        gbc.writeMem(0x8425, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdaa5, gbc.sp());
        EXPECT(0x8427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8425));
        EXPECT(0xa1, gbc.readMem(0x8426));
        // CB A1 03B0
        gbc.setState(0x12b3, 0x9d72, 0xee30, 0x8fc9, 0x3f61, 0xf050, 0x0, 0x1);
        gbc.writeMem(0x12b3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9d72, gbc.sp());
        EXPECT(0x12b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03B1
        gbc.setState(0x1c26, 0xfb38, 0xf740, 0xd530, 0x349e, 0x130d, 0x1, 0x0);
        gbc.writeMem(0x1c26, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfb38, gbc.sp());
        EXPECT(0x1c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03B2
        gbc.setState(0x1453, 0xa7, 0x4f0, 0x74f2, 0xc00d, 0x86f2, 0x1, 0x1);
        gbc.writeMem(0x1453, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa7, gbc.sp());
        EXPECT(0x1455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03B3
        gbc.setState(0x13e6, 0xb8cd, 0x9180, 0x8c56, 0x1a1d, 0xe993, 0x0, 0x0);
        gbc.writeMem(0x13e6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb8cd, gbc.sp());
        EXPECT(0x13e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03B4
        gbc.setState(0x6596, 0x85c2, 0xf420, 0x9c0e, 0xcfeb, 0xa2f3, 0x1, 0x1);
        gbc.writeMem(0x6596, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x85c2, gbc.sp());
        EXPECT(0x6598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03B5
        gbc.setState(0x3555, 0xf8ef, 0x54e0, 0x55fd, 0xd8b3, 0x2e9c, 0x0, 0x1);
        gbc.writeMem(0x3555, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf8ef, gbc.sp());
        EXPECT(0x3557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03B6
        gbc.setState(0xd717, 0xa21c, 0xa580, 0x5df2, 0x5ec8, 0x8c82, 0x0, 0x1);
        gbc.writeMem(0xd717, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa21c, gbc.sp());
        EXPECT(0xd719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd717));
        EXPECT(0xa1, gbc.readMem(0xd718));
        // CB A1 03B7
        gbc.setState(0xcb19, 0x8f78, 0x6900, 0x84c, 0xb43e, 0x32d5, 0x0, 0x1);
        gbc.writeMem(0xcb19, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8f78, gbc.sp());
        EXPECT(0xcb1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb19));
        EXPECT(0xa1, gbc.readMem(0xcb1a));
        // CB A1 03B8
        gbc.setState(0xd396, 0xaf7c, 0xb160, 0x5e6e, 0xbd44, 0xa78e, 0x0, 0x1);
        gbc.writeMem(0xd396, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xaf7c, gbc.sp());
        EXPECT(0xd398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd396));
        EXPECT(0xa1, gbc.readMem(0xd397));
        // CB A1 03B9
        gbc.setState(0x263b, 0x14a1, 0xbe70, 0x66f5, 0x3f94, 0xf485, 0x1, 0x1);
        gbc.writeMem(0x263b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x14a1, gbc.sp());
        EXPECT(0x263d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03BA
        gbc.setState(0xa5a2, 0x82e7, 0x4080, 0xa0bd, 0x114d, 0x3f56, 0x0, 0x1);
        gbc.writeMem(0xa5a2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x82e7, gbc.sp());
        EXPECT(0xa5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a2));
        EXPECT(0xa1, gbc.readMem(0xa5a3));
        // CB A1 03BB
        gbc.setState(0x71eb, 0x6345, 0x61f0, 0xcc20, 0x6255, 0x5186, 0x0, 0x0);
        gbc.writeMem(0x71eb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6345, gbc.sp());
        EXPECT(0x71ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03BC
        gbc.setState(0xb611, 0x47b2, 0xa6b0, 0xef2e, 0x9995, 0xb6e, 0x1, 0x0);
        gbc.writeMem(0xb611, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x47b2, gbc.sp());
        EXPECT(0xb613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb611));
        EXPECT(0xa1, gbc.readMem(0xb612));
        // CB A1 03BD
        gbc.setState(0x1949, 0x5a47, 0xabf0, 0xbd23, 0x4eb2, 0xf8e3, 0x1, 0x1);
        gbc.writeMem(0x1949, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5a47, gbc.sp());
        EXPECT(0x194b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03BE
        gbc.setState(0x654b, 0x2b6b, 0x7e70, 0x6c9a, 0xc30d, 0x4ca5, 0x1, 0x1);
        gbc.writeMem(0x654b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2b6b, gbc.sp());
        EXPECT(0x654d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03BF
        gbc.setState(0xa5a3, 0x5a23, 0x4cc0, 0x7ada, 0x8f1c, 0x6bbf, 0x0, 0x1);
        gbc.writeMem(0xa5a3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5a23, gbc.sp());
        EXPECT(0xa5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a3));
        EXPECT(0xa1, gbc.readMem(0xa5a4));
        // CB A1 03C0
        gbc.setState(0x13ad, 0x653e, 0xdb30, 0x663f, 0xd9c4, 0xac0f, 0x0, 0x1);
        gbc.writeMem(0x13ad, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x653e, gbc.sp());
        EXPECT(0x13af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03C1
        gbc.setState(0xcdcb, 0x1ac4, 0xdee0, 0xb619, 0x9b7c, 0x26b6, 0x1, 0x0);
        gbc.writeMem(0xcdcb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1ac4, gbc.sp());
        EXPECT(0xcdcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdcb));
        EXPECT(0xa1, gbc.readMem(0xcdcc));
        // CB A1 03C2
        gbc.setState(0x8ea3, 0xcff0, 0xc3b0, 0x454, 0x26f1, 0x7ba5, 0x0, 0x0);
        gbc.writeMem(0x8ea3, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcff0, gbc.sp());
        EXPECT(0x8ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea3));
        EXPECT(0xa1, gbc.readMem(0x8ea4));
        // CB A1 03C3
        gbc.setState(0x6405, 0x305f, 0xa460, 0x95e8, 0xad68, 0x2cee, 0x0, 0x0);
        gbc.writeMem(0x6405, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x305f, gbc.sp());
        EXPECT(0x6407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03C4
        gbc.setState(0x2292, 0xed3, 0x4640, 0x6ca8, 0x944e, 0x4298, 0x1, 0x0);
        gbc.writeMem(0x2292, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xed3, gbc.sp());
        EXPECT(0x2294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03C5
        gbc.setState(0xb736, 0x58f7, 0x5ae0, 0x57d8, 0x8b69, 0x4207, 0x1, 0x1);
        gbc.writeMem(0xb736, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x58f7, gbc.sp());
        EXPECT(0xb738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb736));
        EXPECT(0xa1, gbc.readMem(0xb737));
        // CB A1 03C6
        gbc.setState(0xd2e7, 0x3ec3, 0xac80, 0xbc73, 0xbe25, 0x43dd, 0x1, 0x1);
        gbc.writeMem(0xd2e7, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3ec3, gbc.sp());
        EXPECT(0xd2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e7));
        EXPECT(0xa1, gbc.readMem(0xd2e8));
        // CB A1 03C8
        gbc.setState(0x74ed, 0xa09b, 0x9a70, 0x30a1, 0x76de, 0x5135, 0x0, 0x1);
        gbc.writeMem(0x74ed, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa09b, gbc.sp());
        EXPECT(0x74ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03C9
        gbc.setState(0x75da, 0x47f9, 0x1fa0, 0xeb2, 0xa449, 0x85b, 0x1, 0x0);
        gbc.writeMem(0x75da, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x47f9, gbc.sp());
        EXPECT(0x75dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03CA
        gbc.setState(0x1151, 0x6b47, 0xce50, 0xb357, 0x81c5, 0xadaf, 0x1, 0x0);
        gbc.writeMem(0x1151, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6b47, gbc.sp());
        EXPECT(0x1153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03CB
        gbc.setState(0xb1ac, 0x23f9, 0xb7e0, 0xb2ff, 0xca49, 0x92b2, 0x0, 0x0);
        gbc.writeMem(0xb1ac, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x23f9, gbc.sp());
        EXPECT(0xb1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ac));
        EXPECT(0xa1, gbc.readMem(0xb1ad));
        // CB A1 03CC
        gbc.setState(0x3fb2, 0x67d4, 0x200, 0x7245, 0x19e5, 0x59ec, 0x1, 0x0);
        gbc.writeMem(0x3fb2, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x67d4, gbc.sp());
        EXPECT(0x3fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03CD
        gbc.setState(0x1f12, 0x9572, 0xcb20, 0xef36, 0x53db, 0x5232, 0x1, 0x1);
        gbc.writeMem(0x1f12, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9572, gbc.sp());
        EXPECT(0x1f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03CF
        gbc.setState(0x68e5, 0xd91d, 0x5560, 0x9cd3, 0xc7ac, 0xd9cf, 0x1, 0x0);
        gbc.writeMem(0x68e5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd91d, gbc.sp());
        EXPECT(0x68e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03D1
        gbc.setState(0x7876, 0xcbac, 0xe000, 0xfe33, 0x7c1c, 0x8baf, 0x1, 0x1);
        gbc.writeMem(0x7876, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcbac, gbc.sp());
        EXPECT(0x7878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03D2
        gbc.setState(0xd62e, 0xb87d, 0xa960, 0xc096, 0x3fad, 0xca20, 0x0, 0x0);
        gbc.writeMem(0xd62e, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb87d, gbc.sp());
        EXPECT(0xd630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62e));
        EXPECT(0xa1, gbc.readMem(0xd62f));
        // CB A1 03D3
        gbc.setState(0x7e7c, 0x940b, 0x8a80, 0x6868, 0xfac5, 0xeba4, 0x0, 0x0);
        gbc.writeMem(0x7e7c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x940b, gbc.sp());
        EXPECT(0x7e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03D4
        gbc.setState(0x35f6, 0xdbac, 0x2d80, 0x23dc, 0x4620, 0xb1f9, 0x0, 0x1);
        gbc.writeMem(0x35f6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdbac, gbc.sp());
        EXPECT(0x35f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03D5
        gbc.setState(0x305c, 0xd2a1, 0xb310, 0xa771, 0x985, 0xbb2c, 0x0, 0x1);
        gbc.writeMem(0x305c, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd2a1, gbc.sp());
        EXPECT(0x305e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03D6
        gbc.setState(0xb2d1, 0x5d2f, 0x140, 0x9151, 0x46d8, 0x82c0, 0x1, 0x1);
        gbc.writeMem(0xb2d1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5d2f, gbc.sp());
        EXPECT(0xb2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d1));
        EXPECT(0xa1, gbc.readMem(0xb2d2));
        // CB A1 03D7
        gbc.setState(0x179d, 0xf925, 0xd340, 0xf980, 0xc7dc, 0xc28e, 0x0, 0x1);
        gbc.writeMem(0x179d, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf925, gbc.sp());
        EXPECT(0x179f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03D8
        gbc.setState(0x7bdb, 0x578f, 0x9960, 0x50b5, 0x607, 0xe27d, 0x1, 0x0);
        gbc.writeMem(0x7bdb, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x578f, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03D9
        gbc.setState(0xee3b, 0xd1ce, 0x88a0, 0xdd9f, 0xc4fb, 0x1b29, 0x0, 0x0);
        gbc.writeMem(0xee3b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd1ce, gbc.sp());
        EXPECT(0xee3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3b));
        EXPECT(0xa1, gbc.readMem(0xee3c));
        // CB A1 03DA
        gbc.setState(0xe205, 0xddb, 0x8870, 0x91e5, 0xdd50, 0x6df1, 0x1, 0x1);
        gbc.writeMem(0xe205, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xddb, gbc.sp());
        EXPECT(0xe207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe205));
        EXPECT(0xa1, gbc.readMem(0xe206));
        // CB A1 03DB
        gbc.setState(0x29c6, 0x3f38, 0x86b0, 0xc9e3, 0x90f7, 0xf899, 0x0, 0x0);
        gbc.writeMem(0x29c6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3f38, gbc.sp());
        EXPECT(0x29c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03DC
        gbc.setState(0xe0f5, 0xaade, 0xab80, 0x95c5, 0xda06, 0xbe3a, 0x1, 0x0);
        gbc.writeMem(0xe0f5, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaade, gbc.sp());
        EXPECT(0xe0f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f5));
        EXPECT(0xa1, gbc.readMem(0xe0f6));
        // CB A1 03DD
        gbc.setState(0xee10, 0xd208, 0xea40, 0x77c6, 0x71f0, 0x697a, 0x1, 0x1);
        gbc.writeMem(0xee10, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd208, gbc.sp());
        EXPECT(0xee12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee10));
        EXPECT(0xa1, gbc.readMem(0xee11));
        // CB A1 03DE
        gbc.setState(0x2ecf, 0x430, 0xd530, 0xc01b, 0x507b, 0xe789, 0x0, 0x1);
        gbc.writeMem(0x2ecf, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x430, gbc.sp());
        EXPECT(0x2ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03DF
        gbc.setState(0x28c9, 0x25ff, 0x8760, 0xbb11, 0xe8f5, 0x8bb2, 0x1, 0x1);
        gbc.writeMem(0x28c9, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x25ff, gbc.sp());
        EXPECT(0x28cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03E0
        gbc.setState(0xab, 0x19ec, 0x6e30, 0x4c67, 0x85a7, 0xeb32, 0x1, 0x1);
        gbc.writeMem(0xab, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x19ec, gbc.sp());
        EXPECT(0xad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03E2
        gbc.setState(0x76c6, 0xd1d0, 0xf600, 0xbe7a, 0xf6b6, 0x23f5, 0x1, 0x0);
        gbc.writeMem(0x76c6, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd1d0, gbc.sp());
        EXPECT(0x76c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A1 03E3
        gbc.setState(0x97d8, 0xad60, 0x4300, 0xe81c, 0x17e2, 0xb22d, 0x0, 0x1);
        gbc.writeMem(0x97d8, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xad60, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d8));
        EXPECT(0xa1, gbc.readMem(0x97d9));
        // CB A1 03E4
        gbc.setState(0x1abf, 0xb16e, 0x2e10, 0xa10d, 0x9ecd, 0x67f9, 0x0, 0x0);
        gbc.writeMem(0x1abf, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb16e, gbc.sp());
        EXPECT(0x1ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03E5
        gbc.setState(0xad7b, 0x4e9b, 0x61d0, 0x51f6, 0xdb2c, 0xd8be, 0x0, 0x1);
        gbc.writeMem(0xad7b, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4e9b, gbc.sp());
        EXPECT(0xad7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7b));
        EXPECT(0xa1, gbc.readMem(0xad7c));
        // CB A1 03E6
        gbc.setState(0x7ee1, 0x65f4, 0xcd30, 0xe579, 0x373d, 0xe3d5, 0x1, 0x1);
        gbc.writeMem(0x7ee1, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x65f4, gbc.sp());
        EXPECT(0x7ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A1 03E7
        gbc.setState(0x90d4, 0x8791, 0xfaf0, 0x4337, 0x130, 0x2606, 0x1, 0x0);
        gbc.writeMem(0x90d4, { 0xcb, 0xa1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8791, gbc.sp());
        EXPECT(0x90d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d4));
        EXPECT(0xa1, gbc.readMem(0x90d5));
    }
