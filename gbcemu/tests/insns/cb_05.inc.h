    TEST(gbcemu, opcode_cb_05) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 05 0000
        gbc.setState(0x9cc5, 0x9a2, 0x2580, 0x9575, 0x3861, 0xfddb, 0x0, 0x0);
        gbc.writeMem(0x9cc5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9a2, gbc.sp());
        EXPECT(0x9cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc5));
        EXPECT(0x5, gbc.readMem(0x9cc6));
        // CB 05 0001
        gbc.setState(0x2f54, 0x3e17, 0x82e0, 0x8bf, 0x2a1a, 0x5f04, 0x1, 0x1);
        gbc.writeMem(0x2f54, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3e17, gbc.sp());
        EXPECT(0x2f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0002
        gbc.setState(0x2693, 0x999b, 0xa510, 0x9359, 0x256c, 0x4486, 0x0, 0x1);
        gbc.writeMem(0x2693, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x999b, gbc.sp());
        EXPECT(0x2695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0004
        gbc.setState(0x6b2f, 0xecf, 0x7de0, 0x31b, 0xe5a9, 0x63ae, 0x1, 0x1);
        gbc.writeMem(0x6b2f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xecf, gbc.sp());
        EXPECT(0x6b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0005
        gbc.setState(0xc03f, 0x808c, 0x5070, 0x94cf, 0x2c24, 0xede8, 0x1, 0x1);
        gbc.writeMem(0xc03f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x808c, gbc.sp());
        EXPECT(0xc041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03f));
        EXPECT(0x5, gbc.readMem(0xc040));
        // CB 05 0006
        gbc.setState(0xff6, 0xe721, 0x49f0, 0x38a9, 0xff82, 0xc72f, 0x0, 0x0);
        gbc.writeMem(0xff6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe721, gbc.sp());
        EXPECT(0xff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0007
        gbc.setState(0x40ee, 0x88c5, 0x18d0, 0x320f, 0xcd87, 0x4f67, 0x1, 0x0);
        gbc.writeMem(0x40ee, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x88c5, gbc.sp());
        EXPECT(0x40f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0008
        gbc.setState(0x199b, 0xb4c, 0x4090, 0x37e0, 0x11af, 0xd371, 0x1, 0x0);
        gbc.writeMem(0x199b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb4c, gbc.sp());
        EXPECT(0x199d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0009
        gbc.setState(0x817f, 0x951, 0x33c0, 0xed48, 0x849a, 0xf03c, 0x1, 0x0);
        gbc.writeMem(0x817f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x951, gbc.sp());
        EXPECT(0x8181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x817f));
        EXPECT(0x5, gbc.readMem(0x8180));
        // CB 05 000A
        gbc.setState(0x7292, 0xeb6a, 0xf9f0, 0xd69, 0xf03a, 0x7bf8, 0x0, 0x0);
        gbc.writeMem(0x7292, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeb6a, gbc.sp());
        EXPECT(0x7294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 000B
        gbc.setState(0x41a2, 0x6a0d, 0x84c0, 0x7140, 0x7a76, 0x1333, 0x0, 0x0);
        gbc.writeMem(0x41a2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6a0d, gbc.sp());
        EXPECT(0x41a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 000C
        gbc.setState(0x5e59, 0x385c, 0x2d80, 0x54f8, 0xd4bc, 0xb630, 0x1, 0x0);
        gbc.writeMem(0x5e59, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x385c, gbc.sp());
        EXPECT(0x5e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 000D
        gbc.setState(0x7dc7, 0x4935, 0xeb20, 0x5cc1, 0x23f, 0x8c3c, 0x1, 0x0);
        gbc.writeMem(0x7dc7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4935, gbc.sp());
        EXPECT(0x7dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 000E
        gbc.setState(0xa238, 0x5d46, 0xd260, 0xec2f, 0x3062, 0x595f, 0x0, 0x1);
        gbc.writeMem(0xa238, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5d46, gbc.sp());
        EXPECT(0xa23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa238));
        EXPECT(0x5, gbc.readMem(0xa239));
        // CB 05 000F
        gbc.setState(0xb57f, 0x537d, 0xaa00, 0x1aad, 0x231e, 0x61b8, 0x1, 0x1);
        gbc.writeMem(0xb57f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x537d, gbc.sp());
        EXPECT(0xb581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57f));
        EXPECT(0x5, gbc.readMem(0xb580));
        // CB 05 0010
        gbc.setState(0xe20d, 0x7ef8, 0x89a0, 0xc196, 0xbb71, 0x5bc1, 0x0, 0x0);
        gbc.writeMem(0xe20d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7ef8, gbc.sp());
        EXPECT(0xe20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20d));
        EXPECT(0x5, gbc.readMem(0xe20e));
        // CB 05 0011
        gbc.setState(0xb729, 0xecd3, 0x8310, 0x8c2f, 0x5145, 0x3526, 0x0, 0x0);
        gbc.writeMem(0xb729, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xecd3, gbc.sp());
        EXPECT(0xb72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb729));
        EXPECT(0x5, gbc.readMem(0xb72a));
        // CB 05 0012
        gbc.setState(0xe3ce, 0x608e, 0xd590, 0x5320, 0xaf99, 0x4782, 0x0, 0x0);
        gbc.writeMem(0xe3ce, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x608e, gbc.sp());
        EXPECT(0xe3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ce));
        EXPECT(0x5, gbc.readMem(0xe3cf));
        // CB 05 0013
        gbc.setState(0x6196, 0x619f, 0xd860, 0x11ce, 0xad7c, 0xbc84, 0x1, 0x1);
        gbc.writeMem(0x6196, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x619f, gbc.sp());
        EXPECT(0x6198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0014
        gbc.setState(0x7c85, 0x6719, 0xac80, 0x6b2c, 0xec0e, 0x93f9, 0x1, 0x0);
        gbc.writeMem(0x7c85, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6719, gbc.sp());
        EXPECT(0x7c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0015
        gbc.setState(0xd5eb, 0x5b44, 0x53f0, 0x8508, 0xc6d1, 0x1c02, 0x1, 0x0);
        gbc.writeMem(0xd5eb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5b44, gbc.sp());
        EXPECT(0xd5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5eb));
        EXPECT(0x5, gbc.readMem(0xd5ec));
        // CB 05 0016
        gbc.setState(0x612b, 0xceb4, 0xb70, 0xd271, 0xfdd8, 0x9409, 0x0, 0x1);
        gbc.writeMem(0x612b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xceb4, gbc.sp());
        EXPECT(0x612d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0017
        gbc.setState(0x59f6, 0xb116, 0x9e40, 0x4c3d, 0xcfeb, 0x38c8, 0x1, 0x1);
        gbc.writeMem(0x59f6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb116, gbc.sp());
        EXPECT(0x59f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0018
        gbc.setState(0x8edf, 0x6863, 0x7970, 0x1193, 0x62f4, 0x36b, 0x0, 0x0);
        gbc.writeMem(0x8edf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6863, gbc.sp());
        EXPECT(0x8ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8edf));
        EXPECT(0x5, gbc.readMem(0x8ee0));
        // CB 05 0019
        gbc.setState(0x3453, 0x5f, 0x220, 0xd8f7, 0x9d71, 0x27e0, 0x1, 0x0);
        gbc.writeMem(0x3453, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5f, gbc.sp());
        EXPECT(0x3455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 001A
        gbc.setState(0x6fe4, 0x92d5, 0x47a0, 0x46b7, 0x7474, 0x53e6, 0x0, 0x1);
        gbc.writeMem(0x6fe4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x92d5, gbc.sp());
        EXPECT(0x6fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 001B
        gbc.setState(0x997b, 0xeecd, 0x9490, 0x6762, 0xb11c, 0xe117, 0x0, 0x1);
        gbc.writeMem(0x997b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xeecd, gbc.sp());
        EXPECT(0x997d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997b));
        EXPECT(0x5, gbc.readMem(0x997c));
        // CB 05 001C
        gbc.setState(0x580e, 0xcfb8, 0x8b0, 0xce7b, 0x4ac5, 0xb0a, 0x0, 0x1);
        gbc.writeMem(0x580e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcfb8, gbc.sp());
        EXPECT(0x5810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 001D
        gbc.setState(0xa208, 0x1d9c, 0xf5a0, 0xcf83, 0x26ce, 0x80c1, 0x0, 0x0);
        gbc.writeMem(0xa208, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1d9c, gbc.sp());
        EXPECT(0xa20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa208));
        EXPECT(0x5, gbc.readMem(0xa209));
        // CB 05 001E
        gbc.setState(0x2913, 0x9903, 0x7550, 0xa8fb, 0x9596, 0x4e94, 0x0, 0x0);
        gbc.writeMem(0x2913, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9903, gbc.sp());
        EXPECT(0x2915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 001F
        gbc.setState(0x7b34, 0x5d8f, 0xc120, 0xebea, 0x2cd9, 0x317f, 0x1, 0x1);
        gbc.writeMem(0x7b34, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0x7b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0020
        gbc.setState(0xc135, 0x5fb5, 0x3e80, 0x94b0, 0x94f8, 0xb829, 0x0, 0x0);
        gbc.writeMem(0xc135, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5fb5, gbc.sp());
        EXPECT(0xc137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc135));
        EXPECT(0x5, gbc.readMem(0xc136));
        // CB 05 0021
        gbc.setState(0x1a6d, 0x5521, 0x81b0, 0x9d4, 0x69af, 0x5b82, 0x1, 0x0);
        gbc.writeMem(0x1a6d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5521, gbc.sp());
        EXPECT(0x1a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0022
        gbc.setState(0x6aee, 0x219, 0x98b0, 0xd2fc, 0xd5c3, 0xd706, 0x1, 0x1);
        gbc.writeMem(0x6aee, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x219, gbc.sp());
        EXPECT(0x6af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0023
        gbc.setState(0xd11e, 0xc616, 0xc3e0, 0x2f36, 0x5101, 0xb211, 0x0, 0x1);
        gbc.writeMem(0xd11e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc616, gbc.sp());
        EXPECT(0xd120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11e));
        EXPECT(0x5, gbc.readMem(0xd11f));
        // CB 05 0024
        gbc.setState(0x1ada, 0x114a, 0x7290, 0x48cc, 0xe255, 0x69ce, 0x1, 0x1);
        gbc.writeMem(0x1ada, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x114a, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0025
        gbc.setState(0xdfc6, 0x7e39, 0x9ef0, 0xe89c, 0x8e7a, 0x65ea, 0x0, 0x1);
        gbc.writeMem(0xdfc6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7e39, gbc.sp());
        EXPECT(0xdfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc6));
        EXPECT(0x5, gbc.readMem(0xdfc7));
        // CB 05 0026
        gbc.setState(0xacb2, 0x5578, 0x19d0, 0x9a04, 0x4961, 0x3dd3, 0x1, 0x1);
        gbc.writeMem(0xacb2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5578, gbc.sp());
        EXPECT(0xacb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb2));
        EXPECT(0x5, gbc.readMem(0xacb3));
        // CB 05 0027
        gbc.setState(0xd292, 0x96e5, 0xe080, 0x466, 0x200e, 0x4aa7, 0x0, 0x1);
        gbc.writeMem(0xd292, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x96e5, gbc.sp());
        EXPECT(0xd294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd292));
        EXPECT(0x5, gbc.readMem(0xd293));
        // CB 05 0028
        gbc.setState(0x353, 0x5be4, 0x2150, 0x9a8c, 0x6d0b, 0x163, 0x0, 0x1);
        gbc.writeMem(0x353, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5be4, gbc.sp());
        EXPECT(0x355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0029
        gbc.setState(0x781, 0x6ff8, 0x6520, 0xd20f, 0x64f7, 0x8df3, 0x0, 0x0);
        gbc.writeMem(0x781, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6ff8, gbc.sp());
        EXPECT(0x783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 002A
        gbc.setState(0x6095, 0xad35, 0xcba0, 0x5ea5, 0x1096, 0x4f17, 0x1, 0x0);
        gbc.writeMem(0x6095, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xad35, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 002B
        gbc.setState(0x1832, 0x7921, 0x5500, 0xecc8, 0x9de9, 0xfb75, 0x1, 0x0);
        gbc.writeMem(0x1832, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7921, gbc.sp());
        EXPECT(0x1834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 002C
        gbc.setState(0x5d68, 0x1487, 0x8760, 0x46ad, 0x1ffb, 0xc902, 0x1, 0x0);
        gbc.writeMem(0x5d68, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1487, gbc.sp());
        EXPECT(0x5d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 002D
        gbc.setState(0x4b46, 0xb230, 0x2fa0, 0xdd0f, 0x35a8, 0x3782, 0x0, 0x0);
        gbc.writeMem(0x4b46, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb230, gbc.sp());
        EXPECT(0x4b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 002E
        gbc.setState(0x2646, 0x67c0, 0xdbf0, 0x6e44, 0xa4f4, 0xac10, 0x0, 0x0);
        gbc.writeMem(0x2646, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x67c0, gbc.sp());
        EXPECT(0x2648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 002F
        gbc.setState(0x9e3e, 0xe827, 0x4200, 0x7b6a, 0x2551, 0x76a6, 0x0, 0x0);
        gbc.writeMem(0x9e3e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe827, gbc.sp());
        EXPECT(0x9e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3e));
        EXPECT(0x5, gbc.readMem(0x9e3f));
        // CB 05 0030
        gbc.setState(0x443e, 0x56c8, 0xcd60, 0xe1d8, 0xdac1, 0xd8e8, 0x0, 0x0);
        gbc.writeMem(0x443e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x56c8, gbc.sp());
        EXPECT(0x4440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0031
        gbc.setState(0xb01b, 0x4dfc, 0xe7c0, 0xfa52, 0xf024, 0xb77c, 0x0, 0x1);
        gbc.writeMem(0xb01b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4dfc, gbc.sp());
        EXPECT(0xb01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01b));
        EXPECT(0x5, gbc.readMem(0xb01c));
        // CB 05 0033
        gbc.setState(0x8cb9, 0x1c75, 0x690, 0xc7da, 0xa672, 0x3e83, 0x1, 0x0);
        gbc.writeMem(0x8cb9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1c75, gbc.sp());
        EXPECT(0x8cbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb9));
        EXPECT(0x5, gbc.readMem(0x8cba));
        // CB 05 0034
        gbc.setState(0xd1b, 0x76ee, 0xb630, 0x7dc7, 0x2b9b, 0xc534, 0x0, 0x0);
        gbc.writeMem(0xd1b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x76ee, gbc.sp());
        EXPECT(0xd1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0035
        gbc.setState(0xc0ab, 0x1, 0x7ca0, 0x695e, 0x5767, 0x65cb, 0x0, 0x0);
        gbc.writeMem(0xc0ab, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1, gbc.sp());
        EXPECT(0xc0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ab));
        EXPECT(0x5, gbc.readMem(0xc0ac));
        // CB 05 0036
        gbc.setState(0xef4f, 0x5c5c, 0x3010, 0x5ac, 0x57ea, 0x5b2e, 0x0, 0x0);
        gbc.writeMem(0xef4f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5c5c, gbc.sp());
        EXPECT(0xef51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4f));
        EXPECT(0x5, gbc.readMem(0xef50));
        // CB 05 0037
        gbc.setState(0x926f, 0x7779, 0xffc0, 0x2c30, 0xa00c, 0xa708, 0x1, 0x0);
        gbc.writeMem(0x926f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7779, gbc.sp());
        EXPECT(0x9271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926f));
        EXPECT(0x5, gbc.readMem(0x9270));
        // CB 05 0038
        gbc.setState(0x9438, 0x9838, 0xc460, 0x2ac4, 0x2d4d, 0x65a1, 0x1, 0x0);
        gbc.writeMem(0x9438, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9838, gbc.sp());
        EXPECT(0x943a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9438));
        EXPECT(0x5, gbc.readMem(0x9439));
        // CB 05 0039
        gbc.setState(0x1d5e, 0xb140, 0xf380, 0xae6e, 0x28a7, 0xbc16, 0x0, 0x1);
        gbc.writeMem(0x1d5e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb140, gbc.sp());
        EXPECT(0x1d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 003A
        gbc.setState(0x6f3f, 0x83cf, 0xd370, 0x9074, 0x1630, 0x271e, 0x0, 0x0);
        gbc.writeMem(0x6f3f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x83cf, gbc.sp());
        EXPECT(0x6f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 003B
        gbc.setState(0x3d9d, 0xd71d, 0x3280, 0x2d89, 0xa555, 0x95e1, 0x1, 0x1);
        gbc.writeMem(0x3d9d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd71d, gbc.sp());
        EXPECT(0x3d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 003C
        gbc.setState(0x2eae, 0x8434, 0xe710, 0xcb3b, 0xc18b, 0xbe82, 0x0, 0x1);
        gbc.writeMem(0x2eae, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8434, gbc.sp());
        EXPECT(0x2eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 003D
        gbc.setState(0x2529, 0x132, 0x8200, 0xbaea, 0xbf96, 0x76da, 0x1, 0x1);
        gbc.writeMem(0x2529, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x132, gbc.sp());
        EXPECT(0x252b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 003E
        gbc.setState(0x46b5, 0x5126, 0xd760, 0x49c8, 0x8917, 0xf815, 0x0, 0x1);
        gbc.writeMem(0x46b5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5126, gbc.sp());
        EXPECT(0x46b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 003F
        gbc.setState(0x84f6, 0x6b0e, 0xe8f0, 0x8216, 0xa252, 0x38bd, 0x0, 0x1);
        gbc.writeMem(0x84f6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6b0e, gbc.sp());
        EXPECT(0x84f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f6));
        EXPECT(0x5, gbc.readMem(0x84f7));
        // CB 05 0040
        gbc.setState(0x4127, 0xa4cd, 0x5d90, 0xea90, 0xdcf1, 0x63f6, 0x0, 0x0);
        gbc.writeMem(0x4127, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa4cd, gbc.sp());
        EXPECT(0x4129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0041
        gbc.setState(0x5d5b, 0xcbef, 0xe850, 0xf4d, 0x2c1d, 0xffad, 0x0, 0x1);
        gbc.writeMem(0x5d5b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcbef, gbc.sp());
        EXPECT(0x5d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0042
        gbc.setState(0x7611, 0xd76, 0xa090, 0x3553, 0x7679, 0x36c7, 0x0, 0x1);
        gbc.writeMem(0x7611, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd76, gbc.sp());
        EXPECT(0x7613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0043
        gbc.setState(0xcbc4, 0x523, 0x12f0, 0xc355, 0xb1fc, 0x67d6, 0x0, 0x0);
        gbc.writeMem(0xcbc4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x523, gbc.sp());
        EXPECT(0xcbc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc4));
        EXPECT(0x5, gbc.readMem(0xcbc5));
        // CB 05 0044
        gbc.setState(0x45e0, 0x9d2d, 0xa9a0, 0x36e5, 0xc84, 0xa9e0, 0x0, 0x0);
        gbc.writeMem(0x45e0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9d2d, gbc.sp());
        EXPECT(0x45e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0045
        gbc.setState(0x8d53, 0x8843, 0x6770, 0x8234, 0xe60, 0xf215, 0x0, 0x1);
        gbc.writeMem(0x8d53, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8843, gbc.sp());
        EXPECT(0x8d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d53));
        EXPECT(0x5, gbc.readMem(0x8d54));
        // CB 05 0046
        gbc.setState(0x4cc2, 0xf1d5, 0x78d0, 0xf0ca, 0xbf96, 0x4ae5, 0x0, 0x1);
        gbc.writeMem(0x4cc2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf1d5, gbc.sp());
        EXPECT(0x4cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0047
        gbc.setState(0xad10, 0xd335, 0x8b80, 0xb168, 0x62bb, 0x8775, 0x1, 0x1);
        gbc.writeMem(0xad10, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd335, gbc.sp());
        EXPECT(0xad12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad10));
        EXPECT(0x5, gbc.readMem(0xad11));
        // CB 05 0048
        gbc.setState(0x2a, 0x8efb, 0x4540, 0xd0b0, 0xb8c5, 0x646a, 0x0, 0x0);
        gbc.writeMem(0x2a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8efb, gbc.sp());
        EXPECT(0x2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0049
        gbc.setState(0x71f1, 0x1796, 0x2440, 0xf9f3, 0x2339, 0xf0cf, 0x0, 0x1);
        gbc.writeMem(0x71f1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1796, gbc.sp());
        EXPECT(0x71f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 004A
        gbc.setState(0x9f04, 0x1131, 0x8360, 0xdc56, 0x12d6, 0xd121, 0x0, 0x1);
        gbc.writeMem(0x9f04, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1131, gbc.sp());
        EXPECT(0x9f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f04));
        EXPECT(0x5, gbc.readMem(0x9f05));
        // CB 05 004B
        gbc.setState(0x580b, 0x109b, 0x3180, 0x7ef4, 0x8017, 0xc4e7, 0x0, 0x0);
        gbc.writeMem(0x580b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x109b, gbc.sp());
        EXPECT(0x580d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 004C
        gbc.setState(0xc728, 0x8c4, 0xa580, 0x9bdc, 0xa251, 0xad42, 0x1, 0x1);
        gbc.writeMem(0xc728, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8c4, gbc.sp());
        EXPECT(0xc72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc728));
        EXPECT(0x5, gbc.readMem(0xc729));
        // CB 05 004D
        gbc.setState(0x5ba9, 0x6c5, 0x9540, 0xf92e, 0xd09a, 0x4cea, 0x1, 0x1);
        gbc.writeMem(0x5ba9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6c5, gbc.sp());
        EXPECT(0x5bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 004F
        gbc.setState(0xc6e8, 0xae32, 0xd5e0, 0xf920, 0xb48b, 0x50a6, 0x1, 0x1);
        gbc.writeMem(0xc6e8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xae32, gbc.sp());
        EXPECT(0xc6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e8));
        EXPECT(0x5, gbc.readMem(0xc6e9));
        // CB 05 0050
        gbc.setState(0x82a6, 0xfcd, 0x2890, 0x6b9, 0x60c5, 0xfc30, 0x0, 0x1);
        gbc.writeMem(0x82a6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfcd, gbc.sp());
        EXPECT(0x82a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a6));
        EXPECT(0x5, gbc.readMem(0x82a7));
        // CB 05 0051
        gbc.setState(0xd6c1, 0xd126, 0x75a0, 0x9718, 0x1468, 0x6881, 0x0, 0x0);
        gbc.writeMem(0xd6c1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd126, gbc.sp());
        EXPECT(0xd6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c1));
        EXPECT(0x5, gbc.readMem(0xd6c2));
        // CB 05 0052
        gbc.setState(0x8b04, 0x730, 0x48c0, 0xeb93, 0xa1cb, 0xb084, 0x1, 0x1);
        gbc.writeMem(0x8b04, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x730, gbc.sp());
        EXPECT(0x8b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b04));
        EXPECT(0x5, gbc.readMem(0x8b05));
        // CB 05 0053
        gbc.setState(0x1884, 0x7dc0, 0x6c0, 0xbbc4, 0xd5b2, 0x7be4, 0x1, 0x0);
        gbc.writeMem(0x1884, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7dc0, gbc.sp());
        EXPECT(0x1886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0054
        gbc.setState(0x4c78, 0xa4ca, 0x53e0, 0xa05a, 0xb3ec, 0xd834, 0x0, 0x1);
        gbc.writeMem(0x4c78, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa4ca, gbc.sp());
        EXPECT(0x4c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0055
        gbc.setState(0xe4b0, 0xd755, 0xd180, 0xc650, 0xfcdf, 0x15e6, 0x1, 0x0);
        gbc.writeMem(0xe4b0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd755, gbc.sp());
        EXPECT(0xe4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b0));
        EXPECT(0x5, gbc.readMem(0xe4b1));
        // CB 05 0056
        gbc.setState(0x4e44, 0xac34, 0x85c0, 0x3195, 0x1c1a, 0xaae2, 0x0, 0x1);
        gbc.writeMem(0x4e44, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xac34, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0057
        gbc.setState(0x742b, 0x83cf, 0x6d10, 0xcdfe, 0xe35d, 0xd559, 0x1, 0x0);
        gbc.writeMem(0x742b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x83cf, gbc.sp());
        EXPECT(0x742d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0058
        gbc.setState(0x67e3, 0xc777, 0x1400, 0xc704, 0x8f4e, 0x1c5e, 0x0, 0x0);
        gbc.writeMem(0x67e3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc777, gbc.sp());
        EXPECT(0x67e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0059
        gbc.setState(0x6eff, 0x7b17, 0xc870, 0x55d1, 0x5bf5, 0x9e33, 0x0, 0x0);
        gbc.writeMem(0x6eff, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7b17, gbc.sp());
        EXPECT(0x6f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 005A
        gbc.setState(0x12ac, 0xb74b, 0x1050, 0xe6da, 0x338b, 0x2a5a, 0x0, 0x0);
        gbc.writeMem(0x12ac, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb74b, gbc.sp());
        EXPECT(0x12ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 005B
        gbc.setState(0x1d82, 0x6e17, 0xb5e0, 0x7312, 0x17cd, 0xb487, 0x1, 0x1);
        gbc.writeMem(0x1d82, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0x1d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 005D
        gbc.setState(0xd896, 0xdf78, 0xbd80, 0xc196, 0x9e98, 0xf6b1, 0x0, 0x1);
        gbc.writeMem(0xd896, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdf78, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd896));
        EXPECT(0x5, gbc.readMem(0xd897));
        // CB 05 005E
        gbc.setState(0x3249, 0xd8cc, 0xec50, 0xd2ae, 0x8d01, 0xe977, 0x1, 0x1);
        gbc.writeMem(0x3249, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd8cc, gbc.sp());
        EXPECT(0x324b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 005F
        gbc.setState(0x6060, 0xef4d, 0x7110, 0x2543, 0x2126, 0xf6ca, 0x1, 0x1);
        gbc.writeMem(0x6060, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xef4d, gbc.sp());
        EXPECT(0x6062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0060
        gbc.setState(0x6629, 0xf0da, 0xdc70, 0xf4b7, 0x3a67, 0xe3d6, 0x1, 0x1);
        gbc.writeMem(0x6629, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf0da, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0061
        gbc.setState(0x6792, 0x5655, 0xa480, 0xecfe, 0x939d, 0x6b8d, 0x0, 0x0);
        gbc.writeMem(0x6792, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5655, gbc.sp());
        EXPECT(0x6794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0062
        gbc.setState(0xc803, 0x9b76, 0x7930, 0x262a, 0xb08a, 0x9b5d, 0x0, 0x1);
        gbc.writeMem(0xc803, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9b76, gbc.sp());
        EXPECT(0xc805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc803));
        EXPECT(0x5, gbc.readMem(0xc804));
        // CB 05 0063
        gbc.setState(0xcfc3, 0x8836, 0xfee0, 0xfba5, 0xd4bb, 0x40d2, 0x0, 0x0);
        gbc.writeMem(0xcfc3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8836, gbc.sp());
        EXPECT(0xcfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc3));
        EXPECT(0x5, gbc.readMem(0xcfc4));
        // CB 05 0065
        gbc.setState(0x5826, 0xdb50, 0xbe70, 0x7dfa, 0x8793, 0x2ccc, 0x0, 0x0);
        gbc.writeMem(0x5826, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdb50, gbc.sp());
        EXPECT(0x5828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0066
        gbc.setState(0x9f47, 0x9db7, 0x1320, 0x1709, 0x8970, 0xfed6, 0x1, 0x0);
        gbc.writeMem(0x9f47, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9db7, gbc.sp());
        EXPECT(0x9f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f47));
        EXPECT(0x5, gbc.readMem(0x9f48));
        // CB 05 0067
        gbc.setState(0x389d, 0x8e82, 0xf100, 0x2de4, 0xa474, 0x8cbe, 0x0, 0x0);
        gbc.writeMem(0x389d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8e82, gbc.sp());
        EXPECT(0x389f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0068
        gbc.setState(0x924a, 0xcd75, 0x30f0, 0x87b7, 0xc666, 0xb536, 0x1, 0x0);
        gbc.writeMem(0x924a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcd75, gbc.sp());
        EXPECT(0x924c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924a));
        EXPECT(0x5, gbc.readMem(0x924b));
        // CB 05 0069
        gbc.setState(0xe837, 0x95ac, 0x64e0, 0x5842, 0x281c, 0x9c18, 0x1, 0x0);
        gbc.writeMem(0xe837, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x95ac, gbc.sp());
        EXPECT(0xe839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe837));
        EXPECT(0x5, gbc.readMem(0xe838));
        // CB 05 006A
        gbc.setState(0x9f8c, 0x24d6, 0x3f20, 0xd92, 0x89fa, 0xdba3, 0x1, 0x1);
        gbc.writeMem(0x9f8c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x24d6, gbc.sp());
        EXPECT(0x9f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8c));
        EXPECT(0x5, gbc.readMem(0x9f8d));
        // CB 05 006B
        gbc.setState(0x6780, 0x6c61, 0x1270, 0x5062, 0x593d, 0x1bbf, 0x1, 0x0);
        gbc.writeMem(0x6780, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6c61, gbc.sp());
        EXPECT(0x6782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 006C
        gbc.setState(0x616, 0x855a, 0x62e0, 0xffb1, 0xc15a, 0x1d6e, 0x1, 0x0);
        gbc.writeMem(0x616, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x855a, gbc.sp());
        EXPECT(0x618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 006D
        gbc.setState(0x98d6, 0x25db, 0xd6e0, 0x86a, 0xe885, 0xe841, 0x0, 0x1);
        gbc.writeMem(0x98d6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x25db, gbc.sp());
        EXPECT(0x98d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d6));
        EXPECT(0x5, gbc.readMem(0x98d7));
        // CB 05 006E
        gbc.setState(0xb10c, 0x2315, 0xdf10, 0x483f, 0x9c82, 0xdaca, 0x0, 0x0);
        gbc.writeMem(0xb10c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2315, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10c));
        EXPECT(0x5, gbc.readMem(0xb10d));
        // CB 05 006F
        gbc.setState(0x88c4, 0xa7ff, 0x6490, 0xcfda, 0x8a3c, 0xbea8, 0x0, 0x1);
        gbc.writeMem(0x88c4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa7ff, gbc.sp());
        EXPECT(0x88c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c4));
        EXPECT(0x5, gbc.readMem(0x88c5));
        // CB 05 0070
        gbc.setState(0x3aee, 0x3de9, 0xe5b0, 0x7da5, 0x408e, 0x761e, 0x0, 0x0);
        gbc.writeMem(0x3aee, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3de9, gbc.sp());
        EXPECT(0x3af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0071
        gbc.setState(0xc92c, 0xd77, 0x6610, 0x232a, 0xa8f, 0x308c, 0x1, 0x0);
        gbc.writeMem(0xc92c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd77, gbc.sp());
        EXPECT(0xc92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92c));
        EXPECT(0x5, gbc.readMem(0xc92d));
        // CB 05 0072
        gbc.setState(0x9256, 0x3e17, 0xceb0, 0xc117, 0x614a, 0x1f66, 0x0, 0x0);
        gbc.writeMem(0x9256, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3e17, gbc.sp());
        EXPECT(0x9258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9256));
        EXPECT(0x5, gbc.readMem(0x9257));
        // CB 05 0073
        gbc.setState(0x5f23, 0xe5e7, 0xffe0, 0x5a89, 0x2df1, 0x537d, 0x1, 0x1);
        gbc.writeMem(0x5f23, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe5e7, gbc.sp());
        EXPECT(0x5f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0074
        gbc.setState(0x638e, 0x4d49, 0xd690, 0xbc05, 0xb60a, 0xe95, 0x1, 0x0);
        gbc.writeMem(0x638e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4d49, gbc.sp());
        EXPECT(0x6390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0075
        gbc.setState(0xe9e4, 0x4021, 0xde90, 0xfc4c, 0xca7e, 0xac74, 0x0, 0x0);
        gbc.writeMem(0xe9e4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4021, gbc.sp());
        EXPECT(0xe9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e4));
        EXPECT(0x5, gbc.readMem(0xe9e5));
        // CB 05 0076
        gbc.setState(0x3f2c, 0x2be, 0xb4d0, 0x27a8, 0xbfe0, 0x401a, 0x1, 0x1);
        gbc.writeMem(0x3f2c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0x3f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0077
        gbc.setState(0x6cd8, 0xdf13, 0x5cd0, 0x91d1, 0x2378, 0xd239, 0x0, 0x0);
        gbc.writeMem(0x6cd8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdf13, gbc.sp());
        EXPECT(0x6cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0078
        gbc.setState(0x9ba7, 0xb0e6, 0x52f0, 0x5ceb, 0x9cba, 0xf249, 0x0, 0x0);
        gbc.writeMem(0x9ba7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb0e6, gbc.sp());
        EXPECT(0x9ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba7));
        EXPECT(0x5, gbc.readMem(0x9ba8));
        // CB 05 0079
        gbc.setState(0xd76e, 0xfe76, 0xf2d0, 0x874c, 0x5171, 0x2dff, 0x1, 0x0);
        gbc.writeMem(0xd76e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfe76, gbc.sp());
        EXPECT(0xd770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76e));
        EXPECT(0x5, gbc.readMem(0xd76f));
        // CB 05 007A
        gbc.setState(0x3e5d, 0x320, 0xcef0, 0x3593, 0x88d6, 0xd8f6, 0x1, 0x0);
        gbc.writeMem(0x3e5d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x320, gbc.sp());
        EXPECT(0x3e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 007B
        gbc.setState(0x11db, 0xd8b4, 0xe010, 0xa05b, 0x4b27, 0xb77c, 0x1, 0x0);
        gbc.writeMem(0x11db, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd8b4, gbc.sp());
        EXPECT(0x11dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 007D
        gbc.setState(0x9dc8, 0x5b77, 0x18c0, 0xac75, 0xfc11, 0x63bf, 0x0, 0x1);
        gbc.writeMem(0x9dc8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5b77, gbc.sp());
        EXPECT(0x9dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc8));
        EXPECT(0x5, gbc.readMem(0x9dc9));
        // CB 05 007E
        gbc.setState(0xb813, 0xf929, 0x9020, 0x7ba0, 0x77e1, 0xc64e, 0x1, 0x0);
        gbc.writeMem(0xb813, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf929, gbc.sp());
        EXPECT(0xb815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb813));
        EXPECT(0x5, gbc.readMem(0xb814));
        // CB 05 007F
        gbc.setState(0xc4d0, 0x944b, 0xb880, 0xbff3, 0xbd1b, 0x260b, 0x1, 0x0);
        gbc.writeMem(0xc4d0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x944b, gbc.sp());
        EXPECT(0xc4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d0));
        EXPECT(0x5, gbc.readMem(0xc4d1));
        // CB 05 0080
        gbc.setState(0x2e4b, 0x72f0, 0x8770, 0x9f80, 0xac99, 0xa070, 0x1, 0x0);
        gbc.writeMem(0x2e4b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x72f0, gbc.sp());
        EXPECT(0x2e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0082
        gbc.setState(0x7503, 0xc009, 0x1fc0, 0xc858, 0x28a4, 0x434e, 0x1, 0x1);
        gbc.writeMem(0x7503, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc009, gbc.sp());
        EXPECT(0x7505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0083
        gbc.setState(0x4380, 0x3f75, 0xfab0, 0xf7d3, 0xdfe, 0xa7fd, 0x1, 0x0);
        gbc.writeMem(0x4380, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3f75, gbc.sp());
        EXPECT(0x4382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0084
        gbc.setState(0x240b, 0x48bd, 0x9630, 0x8895, 0xd2d1, 0x4147, 0x1, 0x0);
        gbc.writeMem(0x240b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x48bd, gbc.sp());
        EXPECT(0x240d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0085
        gbc.setState(0x69e, 0x8b99, 0xc7c0, 0x75a7, 0xa9d, 0x9642, 0x1, 0x1);
        gbc.writeMem(0x69e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8b99, gbc.sp());
        EXPECT(0x6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0086
        gbc.setState(0x513, 0x9551, 0x8570, 0xf7be, 0x3860, 0x7b03, 0x0, 0x0);
        gbc.writeMem(0x513, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9551, gbc.sp());
        EXPECT(0x515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0087
        gbc.setState(0x9a0b, 0xe3e0, 0x7900, 0xc922, 0x8e25, 0x29c4, 0x0, 0x0);
        gbc.writeMem(0x9a0b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe3e0, gbc.sp());
        EXPECT(0x9a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0b));
        EXPECT(0x5, gbc.readMem(0x9a0c));
        // CB 05 0089
        gbc.setState(0x70d7, 0xef00, 0x5040, 0xd55e, 0xe34a, 0xea2a, 0x1, 0x1);
        gbc.writeMem(0x70d7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xef00, gbc.sp());
        EXPECT(0x70d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 008A
        gbc.setState(0x441a, 0xa442, 0xc1e0, 0x751c, 0x5bb0, 0x1505, 0x1, 0x0);
        gbc.writeMem(0x441a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa442, gbc.sp());
        EXPECT(0x441c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 008B
        gbc.setState(0x4b6a, 0x12ac, 0xd320, 0x42ef, 0x2174, 0x4eb0, 0x1, 0x0);
        gbc.writeMem(0x4b6a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x12ac, gbc.sp());
        EXPECT(0x4b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 008C
        gbc.setState(0x405f, 0x6514, 0xa590, 0xd15, 0x2bc2, 0x5f7f, 0x0, 0x0);
        gbc.writeMem(0x405f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6514, gbc.sp());
        EXPECT(0x4061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 008D
        gbc.setState(0x838b, 0x84b6, 0x23c0, 0xc9a5, 0xfbaf, 0x216d, 0x1, 0x1);
        gbc.writeMem(0x838b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x84b6, gbc.sp());
        EXPECT(0x838d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x838b));
        EXPECT(0x5, gbc.readMem(0x838c));
        // CB 05 008E
        gbc.setState(0xc434, 0x1d1, 0x2070, 0x4226, 0xa3a8, 0xacc7, 0x1, 0x0);
        gbc.writeMem(0xc434, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1d1, gbc.sp());
        EXPECT(0xc436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc434));
        EXPECT(0x5, gbc.readMem(0xc435));
        // CB 05 008F
        gbc.setState(0xe4b8, 0xced0, 0x8de0, 0x4689, 0x874e, 0x2f34, 0x0, 0x1);
        gbc.writeMem(0xe4b8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xced0, gbc.sp());
        EXPECT(0xe4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b8));
        EXPECT(0x5, gbc.readMem(0xe4b9));
        // CB 05 0090
        gbc.setState(0x4647, 0x1d8d, 0xad40, 0x95c2, 0x1004, 0xf1c8, 0x0, 0x0);
        gbc.writeMem(0x4647, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1d8d, gbc.sp());
        EXPECT(0x4649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0091
        gbc.setState(0xedaf, 0xc464, 0x3480, 0xf079, 0x7d7a, 0x84fb, 0x1, 0x0);
        gbc.writeMem(0xedaf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc464, gbc.sp());
        EXPECT(0xedb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedaf));
        EXPECT(0x5, gbc.readMem(0xedb0));
        // CB 05 0092
        gbc.setState(0x1362, 0x44fa, 0x8ad0, 0xe398, 0x6, 0x4b65, 0x0, 0x0);
        gbc.writeMem(0x1362, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x44fa, gbc.sp());
        EXPECT(0x1364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0093
        gbc.setState(0xe72b, 0xdc25, 0xeca0, 0x6498, 0xe1dd, 0x9076, 0x0, 0x0);
        gbc.writeMem(0xe72b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdc25, gbc.sp());
        EXPECT(0xe72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72b));
        EXPECT(0x5, gbc.readMem(0xe72c));
        // CB 05 0094
        gbc.setState(0x3d69, 0x917d, 0xd7c0, 0xf0cb, 0x827f, 0x1a8e, 0x0, 0x1);
        gbc.writeMem(0x3d69, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x917d, gbc.sp());
        EXPECT(0x3d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0095
        gbc.setState(0x6b36, 0x9f8b, 0xd960, 0xa072, 0xcfbc, 0xad4a, 0x0, 0x1);
        gbc.writeMem(0x6b36, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9f8b, gbc.sp());
        EXPECT(0x6b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0096
        gbc.setState(0x2c86, 0xea23, 0x4830, 0x8ff5, 0x3737, 0x85d8, 0x0, 0x0);
        gbc.writeMem(0x2c86, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xea23, gbc.sp());
        EXPECT(0x2c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0097
        gbc.setState(0x9476, 0xd089, 0x1930, 0x75c8, 0xafcc, 0x8b62, 0x1, 0x0);
        gbc.writeMem(0x9476, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd089, gbc.sp());
        EXPECT(0x9478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9476));
        EXPECT(0x5, gbc.readMem(0x9477));
        // CB 05 0098
        gbc.setState(0xbae3, 0xdc7f, 0x52b0, 0xc252, 0x7597, 0x28c7, 0x0, 0x0);
        gbc.writeMem(0xbae3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdc7f, gbc.sp());
        EXPECT(0xbae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae3));
        EXPECT(0x5, gbc.readMem(0xbae4));
        // CB 05 0099
        gbc.setState(0xba85, 0xb053, 0x9ec0, 0xbf84, 0x963a, 0xc1da, 0x1, 0x1);
        gbc.writeMem(0xba85, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb053, gbc.sp());
        EXPECT(0xba87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba85));
        EXPECT(0x5, gbc.readMem(0xba86));
        // CB 05 009A
        gbc.setState(0xbdfd, 0xb36, 0xa0b0, 0xdc49, 0xbdf8, 0x6faf, 0x0, 0x1);
        gbc.writeMem(0xbdfd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb36, gbc.sp());
        EXPECT(0xbdff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfd));
        EXPECT(0x5, gbc.readMem(0xbdfe));
        // CB 05 009B
        gbc.setState(0x8e5, 0xc039, 0x780, 0x61ef, 0xc885, 0x3ca0, 0x1, 0x0);
        gbc.writeMem(0x8e5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc039, gbc.sp());
        EXPECT(0x8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 009C
        gbc.setState(0xbc4, 0xc2f5, 0x79d0, 0x9712, 0xc79, 0xc52e, 0x1, 0x0);
        gbc.writeMem(0xbc4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc2f5, gbc.sp());
        EXPECT(0xbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 009D
        gbc.setState(0xd3b4, 0x617d, 0xf050, 0x3897, 0x6c2c, 0xfa2, 0x0, 0x0);
        gbc.writeMem(0xd3b4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x617d, gbc.sp());
        EXPECT(0xd3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b4));
        EXPECT(0x5, gbc.readMem(0xd3b5));
        // CB 05 009E
        gbc.setState(0x3f74, 0x6eed, 0x5370, 0xaa3e, 0x249f, 0x8a7a, 0x0, 0x0);
        gbc.writeMem(0x3f74, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6eed, gbc.sp());
        EXPECT(0x3f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 009F
        gbc.setState(0x6d86, 0xbe4, 0xbe00, 0x2010, 0xdaca, 0x6ab9, 0x0, 0x1);
        gbc.writeMem(0x6d86, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbe4, gbc.sp());
        EXPECT(0x6d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00A0
        gbc.setState(0xd078, 0x571b, 0x4690, 0xa8f8, 0xbc69, 0x19a9, 0x1, 0x0);
        gbc.writeMem(0xd078, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x571b, gbc.sp());
        EXPECT(0xd07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd078));
        EXPECT(0x5, gbc.readMem(0xd079));
        // CB 05 00A1
        gbc.setState(0xd43f, 0x4b2, 0xa3e0, 0xa50b, 0xf6d, 0xb9a3, 0x1, 0x1);
        gbc.writeMem(0xd43f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4b2, gbc.sp());
        EXPECT(0xd441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43f));
        EXPECT(0x5, gbc.readMem(0xd440));
        // CB 05 00A2
        gbc.setState(0x85a4, 0x39d3, 0x81a0, 0x1d14, 0x9a93, 0x2fe3, 0x0, 0x1);
        gbc.writeMem(0x85a4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x39d3, gbc.sp());
        EXPECT(0x85a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a4));
        EXPECT(0x5, gbc.readMem(0x85a5));
        // CB 05 00A3
        gbc.setState(0x92e8, 0x7d36, 0x290, 0x3a7b, 0xf3f7, 0xdc0a, 0x1, 0x1);
        gbc.writeMem(0x92e8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7d36, gbc.sp());
        EXPECT(0x92ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e8));
        EXPECT(0x5, gbc.readMem(0x92e9));
        // CB 05 00A4
        gbc.setState(0xb40b, 0xa597, 0x6ac0, 0xed8f, 0xbaf4, 0xe783, 0x0, 0x0);
        gbc.writeMem(0xb40b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa597, gbc.sp());
        EXPECT(0xb40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40b));
        EXPECT(0x5, gbc.readMem(0xb40c));
        // CB 05 00A5
        gbc.setState(0xaaea, 0x8ad4, 0xcc90, 0x804d, 0x936d, 0xa4b8, 0x0, 0x0);
        gbc.writeMem(0xaaea, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8ad4, gbc.sp());
        EXPECT(0xaaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaea));
        EXPECT(0x5, gbc.readMem(0xaaeb));
        // CB 05 00A6
        gbc.setState(0x26b9, 0x6c0b, 0xc900, 0x4270, 0xed38, 0x7c38, 0x1, 0x1);
        gbc.writeMem(0x26b9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6c0b, gbc.sp());
        EXPECT(0x26bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00A7
        gbc.setState(0x193b, 0x731c, 0x8360, 0xe0ae, 0x3f98, 0xec49, 0x1, 0x0);
        gbc.writeMem(0x193b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x731c, gbc.sp());
        EXPECT(0x193d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00A8
        gbc.setState(0x2da9, 0xdfb4, 0xc380, 0x27b8, 0x21b1, 0x8a55, 0x1, 0x0);
        gbc.writeMem(0x2da9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdfb4, gbc.sp());
        EXPECT(0x2dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00A9
        gbc.setState(0x42e0, 0x4b08, 0xca60, 0xdb6f, 0x6eb9, 0x5415, 0x0, 0x1);
        gbc.writeMem(0x42e0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4b08, gbc.sp());
        EXPECT(0x42e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00AA
        gbc.setState(0x40b5, 0xf4a5, 0x8ab0, 0xd89b, 0xbb21, 0xf6bb, 0x0, 0x0);
        gbc.writeMem(0x40b5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf4a5, gbc.sp());
        EXPECT(0x40b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00AB
        gbc.setState(0xaa82, 0x9a62, 0x13d0, 0x1a14, 0x1729, 0xcb56, 0x1, 0x1);
        gbc.writeMem(0xaa82, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9a62, gbc.sp());
        EXPECT(0xaa84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa82));
        EXPECT(0x5, gbc.readMem(0xaa83));
        // CB 05 00AC
        gbc.setState(0x3944, 0xefdb, 0xdeb0, 0xd7cd, 0x9ec0, 0xe2b4, 0x1, 0x0);
        gbc.writeMem(0x3944, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xefdb, gbc.sp());
        EXPECT(0x3946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00AD
        gbc.setState(0xbaf9, 0xfcff, 0xae30, 0x34dc, 0xcf40, 0xa818, 0x1, 0x0);
        gbc.writeMem(0xbaf9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfcff, gbc.sp());
        EXPECT(0xbafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf9));
        EXPECT(0x5, gbc.readMem(0xbafa));
        // CB 05 00AE
        gbc.setState(0x3b4, 0x6191, 0x24d0, 0x55df, 0xe704, 0x3594, 0x0, 0x0);
        gbc.writeMem(0x3b4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6191, gbc.sp());
        EXPECT(0x3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00AF
        gbc.setState(0xd97b, 0x1eb4, 0x72b0, 0x250a, 0x52f3, 0x3a32, 0x0, 0x1);
        gbc.writeMem(0xd97b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1eb4, gbc.sp());
        EXPECT(0xd97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97b));
        EXPECT(0x5, gbc.readMem(0xd97c));
        // CB 05 00B0
        gbc.setState(0x6f23, 0x2d8c, 0xe500, 0x8f84, 0xa41e, 0x59cf, 0x1, 0x0);
        gbc.writeMem(0x6f23, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2d8c, gbc.sp());
        EXPECT(0x6f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00B1
        gbc.setState(0x7fee, 0x86ed, 0xe600, 0x8958, 0xf308, 0xa30b, 0x1, 0x0);
        gbc.writeMem(0x7fee, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x86ed, gbc.sp());
        EXPECT(0x7ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00B2
        gbc.setState(0x7bec, 0x2f2d, 0x6f90, 0xe987, 0xfa0c, 0xf57c, 0x1, 0x0);
        gbc.writeMem(0x7bec, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2f2d, gbc.sp());
        EXPECT(0x7bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00B3
        gbc.setState(0xa5eb, 0xf0c8, 0x2770, 0x34bc, 0xb584, 0xa863, 0x0, 0x1);
        gbc.writeMem(0xa5eb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf0c8, gbc.sp());
        EXPECT(0xa5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5eb));
        EXPECT(0x5, gbc.readMem(0xa5ec));
        // CB 05 00B4
        gbc.setState(0xdf56, 0xbb4, 0xd780, 0x818e, 0x70ba, 0xc5fd, 0x1, 0x1);
        gbc.writeMem(0xdf56, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbb4, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf56));
        EXPECT(0x5, gbc.readMem(0xdf57));
        // CB 05 00B5
        gbc.setState(0x556d, 0x883f, 0x74f0, 0x5854, 0x4c63, 0x8335, 0x1, 0x1);
        gbc.writeMem(0x556d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x883f, gbc.sp());
        EXPECT(0x556f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00B6
        gbc.setState(0xaf74, 0x2b7b, 0x8cc0, 0x431b, 0x9cc6, 0x6f5d, 0x1, 0x0);
        gbc.writeMem(0xaf74, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2b7b, gbc.sp());
        EXPECT(0xaf76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf74));
        EXPECT(0x5, gbc.readMem(0xaf75));
        // CB 05 00B7
        gbc.setState(0xe118, 0xb22, 0x3530, 0x57cc, 0x4abd, 0x2150, 0x0, 0x0);
        gbc.writeMem(0xe118, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb22, gbc.sp());
        EXPECT(0xe11a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe118));
        EXPECT(0x5, gbc.readMem(0xe119));
        // CB 05 00B8
        gbc.setState(0x9ba0, 0xe67c, 0xe120, 0xbcaf, 0x184e, 0x4b76, 0x1, 0x1);
        gbc.writeMem(0x9ba0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe67c, gbc.sp());
        EXPECT(0x9ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba0));
        EXPECT(0x5, gbc.readMem(0x9ba1));
        // CB 05 00B9
        gbc.setState(0x7a46, 0x89f3, 0xfc60, 0xfb7, 0xe2ce, 0x4db, 0x1, 0x0);
        gbc.writeMem(0x7a46, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x89f3, gbc.sp());
        EXPECT(0x7a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00BA
        gbc.setState(0x964, 0xc23c, 0x96b0, 0x25f0, 0x178d, 0x57b8, 0x0, 0x0);
        gbc.writeMem(0x964, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc23c, gbc.sp());
        EXPECT(0x966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00BB
        gbc.setState(0xdc22, 0x209, 0xe280, 0xf063, 0xeec2, 0x6518, 0x0, 0x1);
        gbc.writeMem(0xdc22, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x209, gbc.sp());
        EXPECT(0xdc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc22));
        EXPECT(0x5, gbc.readMem(0xdc23));
        // CB 05 00BC
        gbc.setState(0xc20e, 0x810b, 0xe570, 0x30e5, 0x86a4, 0xff7e, 0x0, 0x0);
        gbc.writeMem(0xc20e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x810b, gbc.sp());
        EXPECT(0xc210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20e));
        EXPECT(0x5, gbc.readMem(0xc20f));
        // CB 05 00BD
        gbc.setState(0x79d3, 0x9ae, 0x57c0, 0xa97a, 0xf56f, 0xa796, 0x0, 0x1);
        gbc.writeMem(0x79d3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9ae, gbc.sp());
        EXPECT(0x79d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00BE
        gbc.setState(0x7086, 0x62a9, 0xd350, 0x8b0, 0x7531, 0xdcf6, 0x0, 0x1);
        gbc.writeMem(0x7086, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x62a9, gbc.sp());
        EXPECT(0x7088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00BF
        gbc.setState(0xe3e2, 0xd04a, 0xb610, 0x2e6f, 0xccd6, 0x6849, 0x1, 0x0);
        gbc.writeMem(0xe3e2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd04a, gbc.sp());
        EXPECT(0xe3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e2));
        EXPECT(0x5, gbc.readMem(0xe3e3));
        // CB 05 00C0
        gbc.setState(0x239b, 0xc2fc, 0x5020, 0x3f03, 0xbb0a, 0xca56, 0x1, 0x0);
        gbc.writeMem(0x239b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc2fc, gbc.sp());
        EXPECT(0x239d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00C1
        gbc.setState(0xbe81, 0xe6, 0xeed0, 0xc315, 0x7e35, 0xe690, 0x1, 0x1);
        gbc.writeMem(0xbe81, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe6, gbc.sp());
        EXPECT(0xbe83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe81));
        EXPECT(0x5, gbc.readMem(0xbe82));
        // CB 05 00C2
        gbc.setState(0xd0, 0xada7, 0xcfc0, 0x27c6, 0xa0db, 0xd2e5, 0x1, 0x0);
        gbc.writeMem(0xd0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xada7, gbc.sp());
        EXPECT(0xd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00C3
        gbc.setState(0xda0e, 0xb5f, 0xb4d0, 0xbbd, 0x1ec9, 0x993e, 0x1, 0x1);
        gbc.writeMem(0xda0e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb5f, gbc.sp());
        EXPECT(0xda10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0e));
        EXPECT(0x5, gbc.readMem(0xda0f));
        // CB 05 00C4
        gbc.setState(0x57f5, 0xc801, 0xb610, 0x34a5, 0xfc4c, 0xf503, 0x0, 0x1);
        gbc.writeMem(0x57f5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc801, gbc.sp());
        EXPECT(0x57f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00C5
        gbc.setState(0x66ed, 0x201d, 0x8780, 0x58e7, 0x1d1e, 0xd111, 0x1, 0x0);
        gbc.writeMem(0x66ed, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x201d, gbc.sp());
        EXPECT(0x66ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00C6
        gbc.setState(0x4656, 0x3ebf, 0x7410, 0xf32b, 0x9d5, 0x28a4, 0x1, 0x1);
        gbc.writeMem(0x4656, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3ebf, gbc.sp());
        EXPECT(0x4658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00C7
        gbc.setState(0x40d2, 0xda5e, 0xab10, 0x4c5d, 0x4444, 0xbe01, 0x0, 0x1);
        gbc.writeMem(0x40d2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xda5e, gbc.sp());
        EXPECT(0x40d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00C9
        gbc.setState(0xcac0, 0x9ebc, 0xf8a0, 0x486b, 0xbc6b, 0xd005, 0x0, 0x1);
        gbc.writeMem(0xcac0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9ebc, gbc.sp());
        EXPECT(0xcac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac0));
        EXPECT(0x5, gbc.readMem(0xcac1));
        // CB 05 00CA
        gbc.setState(0x8c87, 0xc85b, 0x9f80, 0xc11c, 0x5a5c, 0x37c6, 0x0, 0x0);
        gbc.writeMem(0x8c87, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc85b, gbc.sp());
        EXPECT(0x8c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c87));
        EXPECT(0x5, gbc.readMem(0x8c88));
        // CB 05 00CB
        gbc.setState(0x6096, 0x3318, 0x7b60, 0xdc28, 0xfdb6, 0x1566, 0x0, 0x0);
        gbc.writeMem(0x6096, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3318, gbc.sp());
        EXPECT(0x6098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00CC
        gbc.setState(0x2f4c, 0x390b, 0xc3b0, 0x7225, 0x91b2, 0xb0af, 0x1, 0x0);
        gbc.writeMem(0x2f4c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x390b, gbc.sp());
        EXPECT(0x2f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00CD
        gbc.setState(0x13e1, 0xc4d7, 0xc970, 0xae15, 0x1d7c, 0xbd02, 0x0, 0x1);
        gbc.writeMem(0x13e1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc4d7, gbc.sp());
        EXPECT(0x13e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00CE
        gbc.setState(0xb812, 0x942f, 0x13d0, 0x2304, 0xa037, 0x4dc, 0x1, 0x1);
        gbc.writeMem(0xb812, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x942f, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb812));
        EXPECT(0x5, gbc.readMem(0xb813));
        // CB 05 00CF
        gbc.setState(0x21a3, 0x9f40, 0x2ac0, 0xfa4e, 0x295d, 0x1d82, 0x1, 0x0);
        gbc.writeMem(0x21a3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9f40, gbc.sp());
        EXPECT(0x21a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00D0
        gbc.setState(0x368f, 0x52b1, 0x74d0, 0xadc3, 0x734, 0x849d, 0x1, 0x1);
        gbc.writeMem(0x368f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x52b1, gbc.sp());
        EXPECT(0x3691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00D1
        gbc.setState(0x1094, 0x45e8, 0xc360, 0x690b, 0x7a47, 0x2df1, 0x1, 0x1);
        gbc.writeMem(0x1094, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x45e8, gbc.sp());
        EXPECT(0x1096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00D2
        gbc.setState(0xd5fa, 0xcea6, 0x70b0, 0xb8b1, 0x289e, 0x8555, 0x0, 0x0);
        gbc.writeMem(0xd5fa, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcea6, gbc.sp());
        EXPECT(0xd5fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5fa));
        EXPECT(0x5, gbc.readMem(0xd5fb));
        // CB 05 00D4
        gbc.setState(0x7d62, 0x6606, 0xcd50, 0x5395, 0x4d5b, 0x5ab0, 0x1, 0x1);
        gbc.writeMem(0x7d62, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6606, gbc.sp());
        EXPECT(0x7d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00D5
        gbc.setState(0x9049, 0xdb89, 0xd6e0, 0x8258, 0xba80, 0xb58b, 0x0, 0x0);
        gbc.writeMem(0x9049, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdb89, gbc.sp());
        EXPECT(0x904b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9049));
        EXPECT(0x5, gbc.readMem(0x904a));
        // CB 05 00D6
        gbc.setState(0x96b4, 0xc79e, 0x5850, 0xc504, 0x6772, 0x72b, 0x0, 0x0);
        gbc.writeMem(0x96b4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc79e, gbc.sp());
        EXPECT(0x96b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b4));
        EXPECT(0x5, gbc.readMem(0x96b5));
        // CB 05 00D7
        gbc.setState(0xc5ea, 0x9a91, 0xdc00, 0x756e, 0xef8e, 0xf1d9, 0x0, 0x0);
        gbc.writeMem(0xc5ea, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9a91, gbc.sp());
        EXPECT(0xc5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ea));
        EXPECT(0x5, gbc.readMem(0xc5eb));
        // CB 05 00D8
        gbc.setState(0x3a6, 0xb314, 0x83a0, 0x8dee, 0x9bc6, 0x8487, 0x0, 0x1);
        gbc.writeMem(0x3a6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb314, gbc.sp());
        EXPECT(0x3a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00D9
        gbc.setState(0x36a, 0x53d9, 0xe990, 0x26c2, 0xf309, 0x1561, 0x1, 0x1);
        gbc.writeMem(0x36a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x53d9, gbc.sp());
        EXPECT(0x36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00DA
        gbc.setState(0x5940, 0x5be1, 0xac90, 0x1505, 0xa4, 0xd128, 0x0, 0x0);
        gbc.writeMem(0x5940, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5be1, gbc.sp());
        EXPECT(0x5942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00DB
        gbc.setState(0x76a7, 0x7885, 0x3a10, 0x25bc, 0xae3b, 0xa355, 0x0, 0x1);
        gbc.writeMem(0x76a7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7885, gbc.sp());
        EXPECT(0x76a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00DC
        gbc.setState(0x9b20, 0x2f3c, 0x38a0, 0x3f6c, 0x7767, 0x1a97, 0x0, 0x0);
        gbc.writeMem(0x9b20, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2f3c, gbc.sp());
        EXPECT(0x9b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b20));
        EXPECT(0x5, gbc.readMem(0x9b21));
        // CB 05 00DD
        gbc.setState(0xb91a, 0x133f, 0x5250, 0xd4be, 0xdbd, 0x4b51, 0x1, 0x1);
        gbc.writeMem(0xb91a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x133f, gbc.sp());
        EXPECT(0xb91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91a));
        EXPECT(0x5, gbc.readMem(0xb91b));
        // CB 05 00DE
        gbc.setState(0x63bf, 0x44f4, 0xf80, 0x6ec1, 0x2935, 0xb066, 0x0, 0x1);
        gbc.writeMem(0x63bf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x44f4, gbc.sp());
        EXPECT(0x63c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00DF
        gbc.setState(0xdd69, 0xa3a7, 0x1e70, 0x1f92, 0xc2c8, 0x54b5, 0x1, 0x0);
        gbc.writeMem(0xdd69, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa3a7, gbc.sp());
        EXPECT(0xdd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd69));
        EXPECT(0x5, gbc.readMem(0xdd6a));
        // CB 05 00E0
        gbc.setState(0x6e0a, 0x5f53, 0xd4e0, 0x688b, 0x371d, 0xca8, 0x0, 0x0);
        gbc.writeMem(0x6e0a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5f53, gbc.sp());
        EXPECT(0x6e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00E1
        gbc.setState(0xe66f, 0xf6f5, 0x8aa0, 0x55b3, 0x4eeb, 0xb622, 0x1, 0x0);
        gbc.writeMem(0xe66f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf6f5, gbc.sp());
        EXPECT(0xe671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66f));
        EXPECT(0x5, gbc.readMem(0xe670));
        // CB 05 00E2
        gbc.setState(0x872f, 0x4a28, 0x3870, 0xf94d, 0xac9b, 0x7e5c, 0x0, 0x1);
        gbc.writeMem(0x872f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4a28, gbc.sp());
        EXPECT(0x8731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x872f));
        EXPECT(0x5, gbc.readMem(0x8730));
        // CB 05 00E3
        gbc.setState(0x6767, 0x694d, 0xf80, 0xdabe, 0x2ea, 0x67ed, 0x0, 0x0);
        gbc.writeMem(0x6767, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x694d, gbc.sp());
        EXPECT(0x6769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00E4
        gbc.setState(0xa242, 0xcdcb, 0xfe80, 0xa858, 0x2852, 0x5bb9, 0x0, 0x1);
        gbc.writeMem(0xa242, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcdcb, gbc.sp());
        EXPECT(0xa244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa242));
        EXPECT(0x5, gbc.readMem(0xa243));
        // CB 05 00E5
        gbc.setState(0x7944, 0x6112, 0xe6a0, 0x711d, 0xf268, 0xdb61, 0x1, 0x1);
        gbc.writeMem(0x7944, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6112, gbc.sp());
        EXPECT(0x7946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00E6
        gbc.setState(0xb94f, 0x6563, 0x97f0, 0x49f2, 0x183a, 0xe24, 0x1, 0x1);
        gbc.writeMem(0xb94f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6563, gbc.sp());
        EXPECT(0xb951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94f));
        EXPECT(0x5, gbc.readMem(0xb950));
        // CB 05 00E7
        gbc.setState(0x3dba, 0x92ef, 0xf7c0, 0xe3f3, 0x4d71, 0x16c, 0x0, 0x0);
        gbc.writeMem(0x3dba, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x92ef, gbc.sp());
        EXPECT(0x3dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00E8
        gbc.setState(0x3b68, 0x4aac, 0x3f30, 0x77e0, 0x4498, 0x8e27, 0x1, 0x0);
        gbc.writeMem(0x3b68, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4aac, gbc.sp());
        EXPECT(0x3b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00E9
        gbc.setState(0xce07, 0xfc6e, 0xee60, 0xadcc, 0xe2f7, 0x1d5d, 0x1, 0x0);
        gbc.writeMem(0xce07, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfc6e, gbc.sp());
        EXPECT(0xce09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce07));
        EXPECT(0x5, gbc.readMem(0xce08));
        // CB 05 00EA
        gbc.setState(0xd75a, 0x1cc2, 0xe620, 0x3037, 0x2e7b, 0x3977, 0x0, 0x1);
        gbc.writeMem(0xd75a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1cc2, gbc.sp());
        EXPECT(0xd75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75a));
        EXPECT(0x5, gbc.readMem(0xd75b));
        // CB 05 00EB
        gbc.setState(0xcddb, 0x19c7, 0x8840, 0x4c57, 0x7be5, 0xa053, 0x0, 0x0);
        gbc.writeMem(0xcddb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x19c7, gbc.sp());
        EXPECT(0xcddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcddb));
        EXPECT(0x5, gbc.readMem(0xcddc));
        // CB 05 00EC
        gbc.setState(0x9fec, 0x2366, 0x95c0, 0x746, 0x13e4, 0x2960, 0x0, 0x0);
        gbc.writeMem(0x9fec, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2366, gbc.sp());
        EXPECT(0x9fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fec));
        EXPECT(0x5, gbc.readMem(0x9fed));
        // CB 05 00ED
        gbc.setState(0x9d2d, 0x71b, 0x22c0, 0x9533, 0xeff1, 0x2406, 0x0, 0x0);
        gbc.writeMem(0x9d2d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x71b, gbc.sp());
        EXPECT(0x9d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2d));
        EXPECT(0x5, gbc.readMem(0x9d2e));
        // CB 05 00EE
        gbc.setState(0x4152, 0x9c2c, 0xbbe0, 0x68bf, 0x9edc, 0xd1b7, 0x1, 0x0);
        gbc.writeMem(0x4152, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9c2c, gbc.sp());
        EXPECT(0x4154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00F1
        gbc.setState(0xa1d7, 0xd5ea, 0x7dc0, 0x22dc, 0xb7a9, 0x4cec, 0x0, 0x0);
        gbc.writeMem(0xa1d7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd5ea, gbc.sp());
        EXPECT(0xa1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d7));
        EXPECT(0x5, gbc.readMem(0xa1d8));
        // CB 05 00F3
        gbc.setState(0x7960, 0xaba6, 0x88f0, 0x1d4e, 0x5b63, 0x93eb, 0x1, 0x1);
        gbc.writeMem(0x7960, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xaba6, gbc.sp());
        EXPECT(0x7962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00F4
        gbc.setState(0x4610, 0x9089, 0xb580, 0x495d, 0xf36, 0xd704, 0x1, 0x0);
        gbc.writeMem(0x4610, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9089, gbc.sp());
        EXPECT(0x4612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00F5
        gbc.setState(0x650d, 0x96db, 0x1a80, 0xb317, 0x51fe, 0xb9f9, 0x0, 0x0);
        gbc.writeMem(0x650d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x96db, gbc.sp());
        EXPECT(0x650f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00F6
        gbc.setState(0x48a3, 0x7d44, 0x8280, 0x8add, 0xa196, 0xcb54, 0x0, 0x0);
        gbc.writeMem(0x48a3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7d44, gbc.sp());
        EXPECT(0x48a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00F7
        gbc.setState(0x7d59, 0x9e9e, 0xb450, 0xce10, 0x344c, 0x36db, 0x1, 0x1);
        gbc.writeMem(0x7d59, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9e9e, gbc.sp());
        EXPECT(0x7d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00F8
        gbc.setState(0x240a, 0x190a, 0xc0a0, 0x353b, 0x3bae, 0xb57, 0x1, 0x1);
        gbc.writeMem(0x240a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x190a, gbc.sp());
        EXPECT(0x240c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 00F9
        gbc.setState(0xbd31, 0xa6fe, 0x3eb0, 0x9298, 0xd860, 0xea61, 0x0, 0x1);
        gbc.writeMem(0xbd31, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa6fe, gbc.sp());
        EXPECT(0xbd33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd31));
        EXPECT(0x5, gbc.readMem(0xbd32));
        // CB 05 00FB
        gbc.setState(0xecf7, 0x5ffe, 0xa3d0, 0x685a, 0x648a, 0xb34b, 0x1, 0x0);
        gbc.writeMem(0xecf7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5ffe, gbc.sp());
        EXPECT(0xecf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf7));
        EXPECT(0x5, gbc.readMem(0xecf8));
        // CB 05 00FC
        gbc.setState(0xee75, 0xb264, 0x2150, 0xf9cd, 0x27e1, 0x82cd, 0x0, 0x0);
        gbc.writeMem(0xee75, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb264, gbc.sp());
        EXPECT(0xee77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee75));
        EXPECT(0x5, gbc.readMem(0xee76));
        // CB 05 00FD
        gbc.setState(0x9ca4, 0x8e80, 0x15b0, 0x713e, 0x6b60, 0x3c6c, 0x0, 0x0);
        gbc.writeMem(0x9ca4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8e80, gbc.sp());
        EXPECT(0x9ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca4));
        EXPECT(0x5, gbc.readMem(0x9ca5));
        // CB 05 00FE
        gbc.setState(0x1168, 0xc591, 0xa4a0, 0x8fac, 0x5ba1, 0xe1e9, 0x0, 0x0);
        gbc.writeMem(0x1168, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc591, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 00FF
        gbc.setState(0x566f, 0x4a9f, 0x7c0, 0xb287, 0x95a2, 0xbcf2, 0x0, 0x1);
        gbc.writeMem(0x566f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4a9f, gbc.sp());
        EXPECT(0x5671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0100
        gbc.setState(0x7df0, 0xde99, 0xf590, 0xb99e, 0xbb2b, 0x380b, 0x0, 0x0);
        gbc.writeMem(0x7df0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xde99, gbc.sp());
        EXPECT(0x7df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0101
        gbc.setState(0x373, 0xb900, 0xd970, 0x9d2f, 0x92ab, 0xc63, 0x0, 0x1);
        gbc.writeMem(0x373, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb900, gbc.sp());
        EXPECT(0x375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0102
        gbc.setState(0x7b29, 0xcfb9, 0xeb40, 0x6f15, 0x77aa, 0xa2ad, 0x1, 0x1);
        gbc.writeMem(0x7b29, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcfb9, gbc.sp());
        EXPECT(0x7b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0103
        gbc.setState(0x5b3d, 0x5a0a, 0x26e0, 0xb7bd, 0x75e, 0x2a51, 0x1, 0x1);
        gbc.writeMem(0x5b3d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5a0a, gbc.sp());
        EXPECT(0x5b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0104
        gbc.setState(0xda75, 0x56ce, 0x7e50, 0x67f4, 0x2a78, 0x2b47, 0x1, 0x0);
        gbc.writeMem(0xda75, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x56ce, gbc.sp());
        EXPECT(0xda77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda75));
        EXPECT(0x5, gbc.readMem(0xda76));
        // CB 05 0105
        gbc.setState(0xe4c5, 0xf526, 0xa210, 0x7595, 0x7938, 0xfa7f, 0x1, 0x1);
        gbc.writeMem(0xe4c5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf526, gbc.sp());
        EXPECT(0xe4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c5));
        EXPECT(0x5, gbc.readMem(0xe4c6));
        // CB 05 0106
        gbc.setState(0x32c5, 0xb847, 0x5d80, 0xf343, 0x3cf7, 0xee54, 0x1, 0x1);
        gbc.writeMem(0x32c5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb847, gbc.sp());
        EXPECT(0x32c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0107
        gbc.setState(0xa1e9, 0x4dd8, 0xa030, 0x6b97, 0xd0f9, 0x36d3, 0x1, 0x0);
        gbc.writeMem(0xa1e9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4dd8, gbc.sp());
        EXPECT(0xa1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e9));
        EXPECT(0x5, gbc.readMem(0xa1ea));
        // CB 05 0108
        gbc.setState(0x828a, 0x4cbf, 0xf160, 0x1f0d, 0x7bf0, 0x9b56, 0x0, 0x1);
        gbc.writeMem(0x828a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4cbf, gbc.sp());
        EXPECT(0x828c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x828a));
        EXPECT(0x5, gbc.readMem(0x828b));
        // CB 05 0109
        gbc.setState(0x59b7, 0x57e3, 0xee90, 0x4471, 0xd5f3, 0x3825, 0x0, 0x1);
        gbc.writeMem(0x59b7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x57e3, gbc.sp());
        EXPECT(0x59b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 010A
        gbc.setState(0x5f95, 0x842e, 0xbf10, 0x6994, 0x2c28, 0x2674, 0x0, 0x1);
        gbc.writeMem(0x5f95, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x842e, gbc.sp());
        EXPECT(0x5f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 010B
        gbc.setState(0x304b, 0xa96c, 0xe820, 0x8604, 0xcc12, 0x34ea, 0x0, 0x0);
        gbc.writeMem(0x304b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa96c, gbc.sp());
        EXPECT(0x304d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 010C
        gbc.setState(0x90ab, 0x95ac, 0xd290, 0xccf5, 0x7b41, 0x65e4, 0x1, 0x1);
        gbc.writeMem(0x90ab, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x95ac, gbc.sp());
        EXPECT(0x90ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ab));
        EXPECT(0x5, gbc.readMem(0x90ac));
        // CB 05 010D
        gbc.setState(0x3f88, 0xa57d, 0x2e50, 0x9385, 0x6a03, 0xc901, 0x1, 0x1);
        gbc.writeMem(0x3f88, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa57d, gbc.sp());
        EXPECT(0x3f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 010E
        gbc.setState(0xcead, 0xe97f, 0xee70, 0x97c7, 0xc695, 0x9363, 0x1, 0x0);
        gbc.writeMem(0xcead, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe97f, gbc.sp());
        EXPECT(0xceaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcead));
        EXPECT(0x5, gbc.readMem(0xceae));
        // CB 05 010F
        gbc.setState(0x2744, 0x1480, 0x9f70, 0xb1fe, 0xaa5b, 0x9b63, 0x1, 0x1);
        gbc.writeMem(0x2744, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1480, gbc.sp());
        EXPECT(0x2746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0110
        gbc.setState(0xbc00, 0xf987, 0xd520, 0x6722, 0xdd05, 0xe128, 0x0, 0x0);
        gbc.writeMem(0xbc00, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf987, gbc.sp());
        EXPECT(0xbc02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc00));
        EXPECT(0x5, gbc.readMem(0xbc01));
        // CB 05 0111
        gbc.setState(0xe59e, 0x8bf0, 0xff00, 0x5a8a, 0x4114, 0xfe90, 0x1, 0x0);
        gbc.writeMem(0xe59e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8bf0, gbc.sp());
        EXPECT(0xe5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59e));
        EXPECT(0x5, gbc.readMem(0xe59f));
        // CB 05 0112
        gbc.setState(0x17c0, 0x40c8, 0x7620, 0x36be, 0xd374, 0x6a98, 0x0, 0x0);
        gbc.writeMem(0x17c0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x40c8, gbc.sp());
        EXPECT(0x17c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0113
        gbc.setState(0x93c6, 0x5b32, 0x4220, 0xfdd0, 0xccd9, 0x357f, 0x0, 0x1);
        gbc.writeMem(0x93c6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5b32, gbc.sp());
        EXPECT(0x93c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c6));
        EXPECT(0x5, gbc.readMem(0x93c7));
        // CB 05 0115
        gbc.setState(0xca17, 0xeba7, 0xcd70, 0xff72, 0x5e50, 0x3796, 0x0, 0x0);
        gbc.writeMem(0xca17, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xeba7, gbc.sp());
        EXPECT(0xca19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca17));
        EXPECT(0x5, gbc.readMem(0xca18));
        // CB 05 0116
        gbc.setState(0x7aca, 0x4063, 0xb3c0, 0xca34, 0x2764, 0x54d0, 0x0, 0x1);
        gbc.writeMem(0x7aca, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4063, gbc.sp());
        EXPECT(0x7acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0117
        gbc.setState(0x5e3a, 0xf84e, 0x41f0, 0xf4b3, 0xb247, 0xd4eb, 0x0, 0x0);
        gbc.writeMem(0x5e3a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf84e, gbc.sp());
        EXPECT(0x5e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0118
        gbc.setState(0xe8af, 0xd9c3, 0x9760, 0xabf8, 0xf70, 0x3070, 0x1, 0x1);
        gbc.writeMem(0xe8af, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd9c3, gbc.sp());
        EXPECT(0xe8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8af));
        EXPECT(0x5, gbc.readMem(0xe8b0));
        // CB 05 0119
        gbc.setState(0x78a5, 0x326c, 0x70, 0xfcb7, 0x17fd, 0x1d66, 0x1, 0x1);
        gbc.writeMem(0x78a5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x326c, gbc.sp());
        EXPECT(0x78a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 011A
        gbc.setState(0xad96, 0x84c1, 0xc850, 0xbdd7, 0x351e, 0xee55, 0x1, 0x1);
        gbc.writeMem(0xad96, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x84c1, gbc.sp());
        EXPECT(0xad98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad96));
        EXPECT(0x5, gbc.readMem(0xad97));
        // CB 05 011B
        gbc.setState(0x699a, 0x758, 0x3450, 0x7243, 0xc63c, 0xfea4, 0x0, 0x1);
        gbc.writeMem(0x699a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x758, gbc.sp());
        EXPECT(0x699c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 011C
        gbc.setState(0x6bb7, 0xb8dc, 0xf580, 0x2621, 0x9117, 0x55f3, 0x1, 0x1);
        gbc.writeMem(0x6bb7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb8dc, gbc.sp());
        EXPECT(0x6bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 011D
        gbc.setState(0x68fb, 0x4d9b, 0xe9e0, 0x61bb, 0x95e1, 0xb041, 0x0, 0x1);
        gbc.writeMem(0x68fb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4d9b, gbc.sp());
        EXPECT(0x68fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 011E
        gbc.setState(0x42c5, 0xa767, 0x4a70, 0x81c3, 0xd532, 0x1007, 0x0, 0x1);
        gbc.writeMem(0x42c5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa767, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0120
        gbc.setState(0x60f5, 0xf7ac, 0xa9f0, 0xce34, 0x4af0, 0x71bc, 0x0, 0x0);
        gbc.writeMem(0x60f5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf7ac, gbc.sp());
        EXPECT(0x60f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0121
        gbc.setState(0x17b9, 0x5154, 0xa030, 0x3072, 0xb593, 0x3471, 0x1, 0x0);
        gbc.writeMem(0x17b9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5154, gbc.sp());
        EXPECT(0x17bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0122
        gbc.setState(0x43ed, 0x3ed0, 0xdba0, 0x3570, 0xc8a, 0x5359, 0x1, 0x1);
        gbc.writeMem(0x43ed, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3ed0, gbc.sp());
        EXPECT(0x43ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0124
        gbc.setState(0x753, 0xd0a8, 0x7510, 0x1ff4, 0x38aa, 0x61e5, 0x1, 0x0);
        gbc.writeMem(0x753, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd0a8, gbc.sp());
        EXPECT(0x755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0125
        gbc.setState(0x5476, 0x21b5, 0xf530, 0xd75, 0x6550, 0x3977, 0x1, 0x1);
        gbc.writeMem(0x5476, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x21b5, gbc.sp());
        EXPECT(0x5478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0126
        gbc.setState(0x5b6b, 0xd69d, 0xd680, 0x319b, 0x7b9a, 0x8235, 0x0, 0x1);
        gbc.writeMem(0x5b6b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd69d, gbc.sp());
        EXPECT(0x5b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0127
        gbc.setState(0xb1b8, 0x30d0, 0xb600, 0x22e1, 0xd063, 0xe927, 0x0, 0x0);
        gbc.writeMem(0xb1b8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x30d0, gbc.sp());
        EXPECT(0xb1ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b8));
        EXPECT(0x5, gbc.readMem(0xb1b9));
        // CB 05 0128
        gbc.setState(0xd8a5, 0x8930, 0xc780, 0x30b5, 0x6977, 0x89dd, 0x1, 0x0);
        gbc.writeMem(0xd8a5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8930, gbc.sp());
        EXPECT(0xd8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a5));
        EXPECT(0x5, gbc.readMem(0xd8a6));
        // CB 05 0129
        gbc.setState(0xc67c, 0x6f81, 0x2960, 0x27bd, 0xcb60, 0x937e, 0x0, 0x0);
        gbc.writeMem(0xc67c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6f81, gbc.sp());
        EXPECT(0xc67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67c));
        EXPECT(0x5, gbc.readMem(0xc67d));
        // CB 05 012A
        gbc.setState(0x50, 0x9cc, 0x9220, 0xa85e, 0x5a4d, 0xef6, 0x1, 0x1);
        gbc.writeMem(0x50, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9cc, gbc.sp());
        EXPECT(0x52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 012B
        gbc.setState(0xb7ca, 0x2d25, 0xa520, 0x113, 0x7e45, 0x812f, 0x1, 0x1);
        gbc.writeMem(0xb7ca, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2d25, gbc.sp());
        EXPECT(0xb7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ca));
        EXPECT(0x5, gbc.readMem(0xb7cb));
        // CB 05 012C
        gbc.setState(0x64cd, 0x3630, 0xba20, 0xd9ce, 0xe8c2, 0x1f4d, 0x0, 0x1);
        gbc.writeMem(0x64cd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3630, gbc.sp());
        EXPECT(0x64cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 012D
        gbc.setState(0xce99, 0x48a6, 0x5660, 0x3cf5, 0xdbb9, 0x7817, 0x0, 0x0);
        gbc.writeMem(0xce99, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x48a6, gbc.sp());
        EXPECT(0xce9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce99));
        EXPECT(0x5, gbc.readMem(0xce9a));
        // CB 05 012E
        gbc.setState(0xe27d, 0xb22e, 0xf660, 0xe6ec, 0xcdf0, 0x6bc5, 0x1, 0x0);
        gbc.writeMem(0xe27d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb22e, gbc.sp());
        EXPECT(0xe27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27d));
        EXPECT(0x5, gbc.readMem(0xe27e));
        // CB 05 0130
        gbc.setState(0x4854, 0x228e, 0x69a0, 0xf431, 0xd6ca, 0xb067, 0x0, 0x0);
        gbc.writeMem(0x4854, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x228e, gbc.sp());
        EXPECT(0x4856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0131
        gbc.setState(0x484, 0xda87, 0x12b0, 0xa6c1, 0x2386, 0x4990, 0x1, 0x1);
        gbc.writeMem(0x484, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xda87, gbc.sp());
        EXPECT(0x486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0132
        gbc.setState(0x7788, 0x2a7e, 0x6770, 0xf00, 0x8851, 0xeb46, 0x1, 0x0);
        gbc.writeMem(0x7788, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2a7e, gbc.sp());
        EXPECT(0x778a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0134
        gbc.setState(0x5ea1, 0x6d9, 0x17c0, 0x1fbd, 0x9c6e, 0x5af, 0x0, 0x1);
        gbc.writeMem(0x5ea1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6d9, gbc.sp());
        EXPECT(0x5ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0135
        gbc.setState(0x93dc, 0x2113, 0x2b0, 0xcef, 0x20f2, 0x1bb8, 0x0, 0x1);
        gbc.writeMem(0x93dc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2113, gbc.sp());
        EXPECT(0x93de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93dc));
        EXPECT(0x5, gbc.readMem(0x93dd));
        // CB 05 0136
        gbc.setState(0xbd15, 0x10a2, 0xeff0, 0xb9e, 0x4903, 0x2e0e, 0x0, 0x0);
        gbc.writeMem(0xbd15, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x10a2, gbc.sp());
        EXPECT(0xbd17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd15));
        EXPECT(0x5, gbc.readMem(0xbd16));
        // CB 05 0137
        gbc.setState(0x795d, 0x4df0, 0xccd0, 0x85d5, 0x2d3f, 0x9e43, 0x1, 0x0);
        gbc.writeMem(0x795d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4df0, gbc.sp());
        EXPECT(0x795f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0138
        gbc.setState(0xe861, 0xc7a0, 0xa680, 0x9463, 0x445, 0x3b7f, 0x1, 0x1);
        gbc.writeMem(0xe861, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc7a0, gbc.sp());
        EXPECT(0xe863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe861));
        EXPECT(0x5, gbc.readMem(0xe862));
        // CB 05 0139
        gbc.setState(0x7530, 0xd46b, 0xbf50, 0x3d4f, 0xdea7, 0x97d5, 0x0, 0x1);
        gbc.writeMem(0x7530, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd46b, gbc.sp());
        EXPECT(0x7532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 013A
        gbc.setState(0x92d8, 0xbf03, 0xabf0, 0x3f50, 0x2e49, 0x4d0e, 0x0, 0x0);
        gbc.writeMem(0x92d8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbf03, gbc.sp());
        EXPECT(0x92da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d8));
        EXPECT(0x5, gbc.readMem(0x92d9));
        // CB 05 013B
        gbc.setState(0x1627, 0x7511, 0x7720, 0xeb44, 0x7e6a, 0x9534, 0x1, 0x1);
        gbc.writeMem(0x1627, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7511, gbc.sp());
        EXPECT(0x1629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 013C
        gbc.setState(0x8f90, 0x7b94, 0xde80, 0xb7d, 0x939b, 0x15dd, 0x1, 0x0);
        gbc.writeMem(0x8f90, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7b94, gbc.sp());
        EXPECT(0x8f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f90));
        EXPECT(0x5, gbc.readMem(0x8f91));
        // CB 05 013D
        gbc.setState(0xaf2d, 0x5c07, 0x4f90, 0x2332, 0x1578, 0x670e, 0x0, 0x0);
        gbc.writeMem(0xaf2d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5c07, gbc.sp());
        EXPECT(0xaf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf2d));
        EXPECT(0x5, gbc.readMem(0xaf2e));
        // CB 05 013E
        gbc.setState(0xa60, 0x5ed7, 0x15a0, 0xda1e, 0xc4da, 0x5408, 0x1, 0x1);
        gbc.writeMem(0xa60, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5ed7, gbc.sp());
        EXPECT(0xa62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 013F
        gbc.setState(0xe832, 0xe5ad, 0xa8f0, 0xa9b3, 0x8127, 0x572e, 0x0, 0x0);
        gbc.writeMem(0xe832, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe5ad, gbc.sp());
        EXPECT(0xe834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe832));
        EXPECT(0x5, gbc.readMem(0xe833));
        // CB 05 0140
        gbc.setState(0x6ac0, 0xce48, 0x5eb0, 0x737a, 0x4709, 0x9a06, 0x1, 0x0);
        gbc.writeMem(0x6ac0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xce48, gbc.sp());
        EXPECT(0x6ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0141
        gbc.setState(0x44ab, 0x4fe0, 0x1100, 0xe4fd, 0x3d3a, 0x3e68, 0x1, 0x1);
        gbc.writeMem(0x44ab, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4fe0, gbc.sp());
        EXPECT(0x44ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0142
        gbc.setState(0x6e14, 0xc8fd, 0xe6f0, 0x908f, 0xde5b, 0x550f, 0x0, 0x1);
        gbc.writeMem(0x6e14, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc8fd, gbc.sp());
        EXPECT(0x6e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0143
        gbc.setState(0x9edd, 0x106d, 0xf4a0, 0xe1e7, 0xe189, 0xec4b, 0x0, 0x0);
        gbc.writeMem(0x9edd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x106d, gbc.sp());
        EXPECT(0x9edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9edd));
        EXPECT(0x5, gbc.readMem(0x9ede));
        // CB 05 0144
        gbc.setState(0x9c8c, 0xd9b1, 0x2e0, 0xca56, 0x4361, 0x3903, 0x1, 0x0);
        gbc.writeMem(0x9c8c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd9b1, gbc.sp());
        EXPECT(0x9c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c8c));
        EXPECT(0x5, gbc.readMem(0x9c8d));
        // CB 05 0145
        gbc.setState(0xb346, 0xf36, 0xea30, 0x7b6c, 0xeebc, 0x9065, 0x0, 0x1);
        gbc.writeMem(0xb346, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf36, gbc.sp());
        EXPECT(0xb348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb346));
        EXPECT(0x5, gbc.readMem(0xb347));
        // CB 05 0146
        gbc.setState(0x9ba3, 0xbe38, 0x1fc0, 0x3027, 0xecea, 0x7f78, 0x1, 0x0);
        gbc.writeMem(0x9ba3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbe38, gbc.sp());
        EXPECT(0x9ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba3));
        EXPECT(0x5, gbc.readMem(0x9ba4));
        // CB 05 0147
        gbc.setState(0x52b6, 0xfde4, 0xc530, 0x7203, 0x95b6, 0x3d01, 0x1, 0x1);
        gbc.writeMem(0x52b6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfde4, gbc.sp());
        EXPECT(0x52b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0148
        gbc.setState(0xd2c5, 0xc837, 0xba20, 0xc65b, 0x67fb, 0xe602, 0x1, 0x0);
        gbc.writeMem(0xd2c5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc837, gbc.sp());
        EXPECT(0xd2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c5));
        EXPECT(0x5, gbc.readMem(0xd2c6));
        // CB 05 0149
        gbc.setState(0x7831, 0xf6d3, 0x8420, 0x429a, 0x4d23, 0x38e4, 0x1, 0x1);
        gbc.writeMem(0x7831, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf6d3, gbc.sp());
        EXPECT(0x7833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 014A
        gbc.setState(0x6964, 0xc751, 0xe0, 0xbb3d, 0x3559, 0x94cd, 0x0, 0x1);
        gbc.writeMem(0x6964, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc751, gbc.sp());
        EXPECT(0x6966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 014C
        gbc.setState(0x3e8, 0xc14c, 0x52a0, 0x1208, 0xf1b6, 0xaf9b, 0x0, 0x0);
        gbc.writeMem(0x3e8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc14c, gbc.sp());
        EXPECT(0x3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 014D
        gbc.setState(0x86b9, 0xf235, 0x6520, 0x40b8, 0x75ed, 0x4660, 0x1, 0x1);
        gbc.writeMem(0x86b9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf235, gbc.sp());
        EXPECT(0x86bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b9));
        EXPECT(0x5, gbc.readMem(0x86ba));
        // CB 05 014E
        gbc.setState(0x3eef, 0x74c2, 0xd120, 0x3e29, 0x419e, 0xa3b6, 0x0, 0x0);
        gbc.writeMem(0x3eef, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x74c2, gbc.sp());
        EXPECT(0x3ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 014F
        gbc.setState(0xde1e, 0x5251, 0xf5a0, 0x7d12, 0x2494, 0x262, 0x1, 0x0);
        gbc.writeMem(0xde1e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5251, gbc.sp());
        EXPECT(0xde20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1e));
        EXPECT(0x5, gbc.readMem(0xde1f));
        // CB 05 0150
        gbc.setState(0x7140, 0x7572, 0xaa80, 0x7b5, 0x9284, 0xa0e8, 0x0, 0x1);
        gbc.writeMem(0x7140, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7572, gbc.sp());
        EXPECT(0x7142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0152
        gbc.setState(0x463a, 0x98e5, 0xa600, 0x6024, 0xbfde, 0xc4f, 0x0, 0x1);
        gbc.writeMem(0x463a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x98e5, gbc.sp());
        EXPECT(0x463c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0153
        gbc.setState(0x7251, 0x19cf, 0xc7b0, 0x9911, 0x362f, 0x6372, 0x1, 0x0);
        gbc.writeMem(0x7251, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x19cf, gbc.sp());
        EXPECT(0x7253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0154
        gbc.setState(0xeb94, 0x1f6b, 0x41f0, 0x4f4b, 0x4e1b, 0x3c39, 0x1, 0x1);
        gbc.writeMem(0xeb94, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1f6b, gbc.sp());
        EXPECT(0xeb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb94));
        EXPECT(0x5, gbc.readMem(0xeb95));
        // CB 05 0155
        gbc.setState(0x61e9, 0x64d4, 0x4f60, 0xf5ec, 0x93f3, 0x4e6b, 0x1, 0x1);
        gbc.writeMem(0x61e9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x64d4, gbc.sp());
        EXPECT(0x61eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0156
        gbc.setState(0x3d01, 0xbae0, 0xfe00, 0x8905, 0x8174, 0xac07, 0x1, 0x1);
        gbc.writeMem(0x3d01, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbae0, gbc.sp());
        EXPECT(0x3d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0157
        gbc.setState(0xbbd7, 0xd4c1, 0xfb20, 0xb0d1, 0x2568, 0xd8f6, 0x0, 0x1);
        gbc.writeMem(0xbbd7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd4c1, gbc.sp());
        EXPECT(0xbbd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd7));
        EXPECT(0x5, gbc.readMem(0xbbd8));
        // CB 05 0158
        gbc.setState(0x97d, 0x1138, 0x9bf0, 0xc12f, 0xd341, 0x6d15, 0x0, 0x1);
        gbc.writeMem(0x97d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1138, gbc.sp());
        EXPECT(0x97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0159
        gbc.setState(0x937d, 0x1803, 0xc1a0, 0x889a, 0xe522, 0xfd9b, 0x1, 0x0);
        gbc.writeMem(0x937d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1803, gbc.sp());
        EXPECT(0x937f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937d));
        EXPECT(0x5, gbc.readMem(0x937e));
        // CB 05 015A
        gbc.setState(0xe017, 0x4c33, 0x90, 0xbc88, 0x3b2e, 0x75bb, 0x1, 0x1);
        gbc.writeMem(0xe017, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4c33, gbc.sp());
        EXPECT(0xe019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe017));
        EXPECT(0x5, gbc.readMem(0xe018));
        // CB 05 015B
        gbc.setState(0x289e, 0xd642, 0x3a70, 0x55fa, 0xebde, 0x4319, 0x1, 0x0);
        gbc.writeMem(0x289e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0x28a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 015C
        gbc.setState(0x72af, 0x8cc5, 0xf470, 0xe6ea, 0xf9fb, 0xcd96, 0x0, 0x0);
        gbc.writeMem(0x72af, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8cc5, gbc.sp());
        EXPECT(0x72b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 015D
        gbc.setState(0x7ec3, 0x5481, 0xb830, 0x7429, 0x848b, 0x2351, 0x1, 0x0);
        gbc.writeMem(0x7ec3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5481, gbc.sp());
        EXPECT(0x7ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 015E
        gbc.setState(0xc36d, 0x76ef, 0xd50, 0xbe46, 0xb489, 0x660c, 0x0, 0x0);
        gbc.writeMem(0xc36d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x76ef, gbc.sp());
        EXPECT(0xc36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36d));
        EXPECT(0x5, gbc.readMem(0xc36e));
        // CB 05 015F
        gbc.setState(0x79d2, 0x1555, 0xace0, 0x2ffb, 0x7b95, 0xdea8, 0x0, 0x0);
        gbc.writeMem(0x79d2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1555, gbc.sp());
        EXPECT(0x79d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0160
        gbc.setState(0x6703, 0x32e7, 0xd440, 0x5413, 0xabe4, 0x163b, 0x0, 0x0);
        gbc.writeMem(0x6703, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x32e7, gbc.sp());
        EXPECT(0x6705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0161
        gbc.setState(0xaad6, 0x3e45, 0x8250, 0x6219, 0x219c, 0x28b8, 0x0, 0x0);
        gbc.writeMem(0xaad6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3e45, gbc.sp());
        EXPECT(0xaad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad6));
        EXPECT(0x5, gbc.readMem(0xaad7));
        // CB 05 0162
        gbc.setState(0xee12, 0x8c6, 0x1b10, 0xdc5b, 0xc7f0, 0x2b0b, 0x0, 0x0);
        gbc.writeMem(0xee12, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8c6, gbc.sp());
        EXPECT(0xee14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee12));
        EXPECT(0x5, gbc.readMem(0xee13));
        // CB 05 0163
        gbc.setState(0xb70b, 0x9db2, 0x94f0, 0x3bbe, 0x30e6, 0x4526, 0x1, 0x1);
        gbc.writeMem(0xb70b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9db2, gbc.sp());
        EXPECT(0xb70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70b));
        EXPECT(0x5, gbc.readMem(0xb70c));
        // CB 05 0164
        gbc.setState(0x4eec, 0xd6fc, 0x52c0, 0x22b2, 0x1d71, 0x48d7, 0x0, 0x0);
        gbc.writeMem(0x4eec, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd6fc, gbc.sp());
        EXPECT(0x4eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0165
        gbc.setState(0x44b8, 0x3042, 0x9de0, 0x42d, 0xb826, 0x6593, 0x1, 0x0);
        gbc.writeMem(0x44b8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3042, gbc.sp());
        EXPECT(0x44ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0166
        gbc.setState(0x4782, 0x31bc, 0xd470, 0x1564, 0x9656, 0x889b, 0x1, 0x0);
        gbc.writeMem(0x4782, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x31bc, gbc.sp());
        EXPECT(0x4784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0167
        gbc.setState(0xaaf8, 0x3588, 0x13f0, 0xa447, 0xdf10, 0x441e, 0x0, 0x0);
        gbc.writeMem(0xaaf8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3588, gbc.sp());
        EXPECT(0xaafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf8));
        EXPECT(0x5, gbc.readMem(0xaaf9));
        // CB 05 0168
        gbc.setState(0xec0b, 0x864, 0x9ef0, 0x716c, 0xd30, 0xa455, 0x1, 0x1);
        gbc.writeMem(0xec0b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x864, gbc.sp());
        EXPECT(0xec0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec0b));
        EXPECT(0x5, gbc.readMem(0xec0c));
        // CB 05 0169
        gbc.setState(0xecc6, 0x6c17, 0x5aa0, 0xdacd, 0x86ae, 0xb9be, 0x0, 0x0);
        gbc.writeMem(0xecc6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6c17, gbc.sp());
        EXPECT(0xecc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc6));
        EXPECT(0x5, gbc.readMem(0xecc7));
        // CB 05 016A
        gbc.setState(0xdf8, 0xfdac, 0x4d00, 0xf66c, 0x8e99, 0xbe42, 0x0, 0x0);
        gbc.writeMem(0xdf8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfdac, gbc.sp());
        EXPECT(0xdfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 016B
        gbc.setState(0x7c90, 0xb0bc, 0x5180, 0xb3f3, 0x3183, 0x3535, 0x1, 0x0);
        gbc.writeMem(0x7c90, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb0bc, gbc.sp());
        EXPECT(0x7c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 016C
        gbc.setState(0xccbc, 0x2a2e, 0x55f0, 0x6013, 0xff43, 0x2ac3, 0x1, 0x0);
        gbc.writeMem(0xccbc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2a2e, gbc.sp());
        EXPECT(0xccbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccbc));
        EXPECT(0x5, gbc.readMem(0xccbd));
        // CB 05 016D
        gbc.setState(0xea41, 0xcef9, 0x93f0, 0x6360, 0x39b8, 0xa987, 0x0, 0x1);
        gbc.writeMem(0xea41, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcef9, gbc.sp());
        EXPECT(0xea43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea41));
        EXPECT(0x5, gbc.readMem(0xea42));
        // CB 05 016E
        gbc.setState(0xa750, 0xebd5, 0xab20, 0xc8b9, 0x83a4, 0x8c5e, 0x1, 0x1);
        gbc.writeMem(0xa750, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xebd5, gbc.sp());
        EXPECT(0xa752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa750));
        EXPECT(0x5, gbc.readMem(0xa751));
        // CB 05 016F
        gbc.setState(0x1aac, 0x6ce0, 0x94a0, 0xd463, 0xfbb3, 0x4a34, 0x1, 0x1);
        gbc.writeMem(0x1aac, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6ce0, gbc.sp());
        EXPECT(0x1aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0170
        gbc.setState(0xc737, 0x1236, 0xba40, 0x866b, 0x6b4b, 0x3ff6, 0x1, 0x1);
        gbc.writeMem(0xc737, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1236, gbc.sp());
        EXPECT(0xc739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc737));
        EXPECT(0x5, gbc.readMem(0xc738));
        // CB 05 0171
        gbc.setState(0xa3f6, 0xe2d3, 0x72d0, 0xa8a5, 0x55da, 0xbf46, 0x0, 0x0);
        gbc.writeMem(0xa3f6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe2d3, gbc.sp());
        EXPECT(0xa3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f6));
        EXPECT(0x5, gbc.readMem(0xa3f7));
        // CB 05 0172
        gbc.setState(0x4282, 0x51db, 0x3620, 0xea11, 0x23c2, 0xa522, 0x0, 0x1);
        gbc.writeMem(0x4282, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x51db, gbc.sp());
        EXPECT(0x4284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0173
        gbc.setState(0x2036, 0xef28, 0x1eb0, 0xa6a2, 0x2e83, 0xf481, 0x1, 0x0);
        gbc.writeMem(0x2036, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xef28, gbc.sp());
        EXPECT(0x2038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0174
        gbc.setState(0xdea1, 0x78ba, 0xc500, 0xf526, 0x5c29, 0xd5a3, 0x1, 0x1);
        gbc.writeMem(0xdea1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x78ba, gbc.sp());
        EXPECT(0xdea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea1));
        EXPECT(0x5, gbc.readMem(0xdea2));
        // CB 05 0175
        gbc.setState(0x1db0, 0x2ae1, 0x91a0, 0xddde, 0x75b6, 0xb430, 0x1, 0x1);
        gbc.writeMem(0x1db0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2ae1, gbc.sp());
        EXPECT(0x1db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0176
        gbc.setState(0x7547, 0xefa3, 0x3eb0, 0xebd5, 0x7c28, 0xf77d, 0x0, 0x0);
        gbc.writeMem(0x7547, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xefa3, gbc.sp());
        EXPECT(0x7549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0177
        gbc.setState(0x6011, 0xdb78, 0xaf50, 0x983b, 0xc742, 0xb2c5, 0x0, 0x1);
        gbc.writeMem(0x6011, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdb78, gbc.sp());
        EXPECT(0x6013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0178
        gbc.setState(0x6651, 0x73b6, 0x62c0, 0x45ba, 0x21, 0x29af, 0x1, 0x1);
        gbc.writeMem(0x6651, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x73b6, gbc.sp());
        EXPECT(0x6653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0179
        gbc.setState(0xe6c, 0x4f7, 0xf090, 0xebae, 0x51c2, 0xdfc5, 0x0, 0x0);
        gbc.writeMem(0xe6c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4f7, gbc.sp());
        EXPECT(0xe6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 017A
        gbc.setState(0x489e, 0xf7f6, 0x1b00, 0x69ac, 0x8b91, 0x94b7, 0x0, 0x0);
        gbc.writeMem(0x489e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf7f6, gbc.sp());
        EXPECT(0x48a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 017B
        gbc.setState(0x705a, 0x4959, 0x2360, 0x2d49, 0xab4, 0x68f7, 0x1, 0x0);
        gbc.writeMem(0x705a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4959, gbc.sp());
        EXPECT(0x705c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 017C
        gbc.setState(0x451b, 0x2433, 0xc5d0, 0xcede, 0xd7d4, 0x7323, 0x0, 0x0);
        gbc.writeMem(0x451b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2433, gbc.sp());
        EXPECT(0x451d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 017D
        gbc.setState(0xd0ee, 0x6cea, 0xa5a0, 0x1e0, 0x454b, 0x5629, 0x0, 0x0);
        gbc.writeMem(0xd0ee, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6cea, gbc.sp());
        EXPECT(0xd0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ee));
        EXPECT(0x5, gbc.readMem(0xd0ef));
        // CB 05 017E
        gbc.setState(0xd77b, 0x2055, 0xe5e0, 0x11ac, 0x8d0a, 0x841a, 0x1, 0x1);
        gbc.writeMem(0xd77b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2055, gbc.sp());
        EXPECT(0xd77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77b));
        EXPECT(0x5, gbc.readMem(0xd77c));
        // CB 05 017F
        gbc.setState(0xb932, 0xa91e, 0x8210, 0xb5d4, 0x8e16, 0xa443, 0x0, 0x0);
        gbc.writeMem(0xb932, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa91e, gbc.sp());
        EXPECT(0xb934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb932));
        EXPECT(0x5, gbc.readMem(0xb933));
        // CB 05 0180
        gbc.setState(0xdea6, 0x4680, 0xd760, 0xf84b, 0x1d9e, 0xd9b6, 0x1, 0x0);
        gbc.writeMem(0xdea6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4680, gbc.sp());
        EXPECT(0xdea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea6));
        EXPECT(0x5, gbc.readMem(0xdea7));
        // CB 05 0181
        gbc.setState(0x6e72, 0x98a2, 0x61a0, 0xfa48, 0x43a9, 0xdabd, 0x0, 0x1);
        gbc.writeMem(0x6e72, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x98a2, gbc.sp());
        EXPECT(0x6e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0182
        gbc.setState(0x2b17, 0x559e, 0x5350, 0x4cf7, 0xbbbc, 0xab97, 0x0, 0x0);
        gbc.writeMem(0x2b17, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x559e, gbc.sp());
        EXPECT(0x2b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0183
        gbc.setState(0xea54, 0x96da, 0x98d0, 0x8c57, 0x88a2, 0x487e, 0x1, 0x1);
        gbc.writeMem(0xea54, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x96da, gbc.sp());
        EXPECT(0xea56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea54));
        EXPECT(0x5, gbc.readMem(0xea55));
        // CB 05 0184
        gbc.setState(0xc028, 0x435d, 0xbb50, 0x11d, 0xba4c, 0x52d2, 0x0, 0x1);
        gbc.writeMem(0xc028, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x435d, gbc.sp());
        EXPECT(0xc02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc028));
        EXPECT(0x5, gbc.readMem(0xc029));
        // CB 05 0185
        gbc.setState(0x33f8, 0x8a1e, 0x7580, 0xed79, 0x6a60, 0xd280, 0x0, 0x1);
        gbc.writeMem(0x33f8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8a1e, gbc.sp());
        EXPECT(0x33fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0186
        gbc.setState(0x626c, 0xaf1, 0x8d60, 0x4a2a, 0x527e, 0xd201, 0x0, 0x0);
        gbc.writeMem(0x626c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xaf1, gbc.sp());
        EXPECT(0x626e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0187
        gbc.setState(0x677a, 0xa8e7, 0x9ec0, 0xe32a, 0x519e, 0x7753, 0x0, 0x0);
        gbc.writeMem(0x677a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa8e7, gbc.sp());
        EXPECT(0x677c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0188
        gbc.setState(0x3245, 0x661c, 0x3a20, 0x3826, 0x9ca8, 0x397f, 0x0, 0x1);
        gbc.writeMem(0x3245, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x661c, gbc.sp());
        EXPECT(0x3247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0189
        gbc.setState(0x63e3, 0x48ae, 0xe4f0, 0x8069, 0xd47e, 0xd508, 0x0, 0x0);
        gbc.writeMem(0x63e3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x48ae, gbc.sp());
        EXPECT(0x63e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 018A
        gbc.setState(0x97af, 0xa6f1, 0xca90, 0xdd9b, 0x17de, 0x8d12, 0x1, 0x1);
        gbc.writeMem(0x97af, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa6f1, gbc.sp());
        EXPECT(0x97b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97af));
        EXPECT(0x5, gbc.readMem(0x97b0));
        // CB 05 018B
        gbc.setState(0xd1db, 0xbe89, 0x9900, 0x80ba, 0x4c6, 0x8197, 0x0, 0x0);
        gbc.writeMem(0xd1db, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbe89, gbc.sp());
        EXPECT(0xd1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1db));
        EXPECT(0x5, gbc.readMem(0xd1dc));
        // CB 05 018C
        gbc.setState(0x844e, 0xeacd, 0x50e0, 0x5398, 0x8d7d, 0x48de, 0x1, 0x1);
        gbc.writeMem(0x844e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xeacd, gbc.sp());
        EXPECT(0x8450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x844e));
        EXPECT(0x5, gbc.readMem(0x844f));
        // CB 05 018D
        gbc.setState(0x1fc0, 0x5d21, 0x2100, 0x8e9, 0x4769, 0xd46, 0x1, 0x0);
        gbc.writeMem(0x1fc0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5d21, gbc.sp());
        EXPECT(0x1fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 018E
        gbc.setState(0xc837, 0xbea7, 0x7040, 0x597f, 0x4468, 0x6ed8, 0x0, 0x0);
        gbc.writeMem(0xc837, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbea7, gbc.sp());
        EXPECT(0xc839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc837));
        EXPECT(0x5, gbc.readMem(0xc838));
        // CB 05 018F
        gbc.setState(0x8e9a, 0x4bb3, 0x77d0, 0xae96, 0xb865, 0xc7d4, 0x0, 0x1);
        gbc.writeMem(0x8e9a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4bb3, gbc.sp());
        EXPECT(0x8e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9a));
        EXPECT(0x5, gbc.readMem(0x8e9b));
        // CB 05 0190
        gbc.setState(0x23b9, 0x843f, 0x2de0, 0xc2fa, 0xa84b, 0x8482, 0x0, 0x1);
        gbc.writeMem(0x23b9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x843f, gbc.sp());
        EXPECT(0x23bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0191
        gbc.setState(0xdb9b, 0x664b, 0x3070, 0x3b8b, 0xec67, 0xce35, 0x1, 0x0);
        gbc.writeMem(0xdb9b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x664b, gbc.sp());
        EXPECT(0xdb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9b));
        EXPECT(0x5, gbc.readMem(0xdb9c));
        // CB 05 0192
        gbc.setState(0xa573, 0x9ab7, 0xfa00, 0x4f94, 0xb8e6, 0x4, 0x0, 0x1);
        gbc.writeMem(0xa573, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9ab7, gbc.sp());
        EXPECT(0xa575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa573));
        EXPECT(0x5, gbc.readMem(0xa574));
        // CB 05 0193
        gbc.setState(0xc7f1, 0x139b, 0x35b0, 0xcebc, 0x493d, 0x71b7, 0x0, 0x1);
        gbc.writeMem(0xc7f1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x139b, gbc.sp());
        EXPECT(0xc7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f1));
        EXPECT(0x5, gbc.readMem(0xc7f2));
        // CB 05 0194
        gbc.setState(0xbc80, 0x8425, 0x6cc0, 0xdb5, 0x4546, 0xff75, 0x1, 0x0);
        gbc.writeMem(0xbc80, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8425, gbc.sp());
        EXPECT(0xbc82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc80));
        EXPECT(0x5, gbc.readMem(0xbc81));
        // CB 05 0195
        gbc.setState(0xb800, 0x2eb5, 0x2320, 0xf679, 0x6fba, 0x7d80, 0x1, 0x1);
        gbc.writeMem(0xb800, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2eb5, gbc.sp());
        EXPECT(0xb802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb800));
        EXPECT(0x5, gbc.readMem(0xb801));
        // CB 05 0196
        gbc.setState(0xee58, 0xa3c4, 0x8a00, 0xe29, 0x338c, 0x81d6, 0x1, 0x1);
        gbc.writeMem(0xee58, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa3c4, gbc.sp());
        EXPECT(0xee5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee58));
        EXPECT(0x5, gbc.readMem(0xee59));
        // CB 05 0197
        gbc.setState(0x945c, 0x23, 0xe520, 0x2f13, 0xf238, 0x3e98, 0x1, 0x1);
        gbc.writeMem(0x945c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x23, gbc.sp());
        EXPECT(0x945e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945c));
        EXPECT(0x5, gbc.readMem(0x945d));
        // CB 05 0198
        gbc.setState(0x3e72, 0xa133, 0xebe0, 0x7890, 0xeb00, 0x716f, 0x1, 0x1);
        gbc.writeMem(0x3e72, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa133, gbc.sp());
        EXPECT(0x3e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0199
        gbc.setState(0x283c, 0x953b, 0x3c0, 0x1bfe, 0x1c56, 0xfcc3, 0x1, 0x1);
        gbc.writeMem(0x283c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x953b, gbc.sp());
        EXPECT(0x283e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 019A
        gbc.setState(0xc3ee, 0x70a7, 0x38d0, 0xa6a8, 0x259a, 0xb4a8, 0x0, 0x1);
        gbc.writeMem(0xc3ee, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x70a7, gbc.sp());
        EXPECT(0xc3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ee));
        EXPECT(0x5, gbc.readMem(0xc3ef));
        // CB 05 019B
        gbc.setState(0x976c, 0xc1fe, 0x66f0, 0x38f0, 0x2fca, 0x75e2, 0x1, 0x0);
        gbc.writeMem(0x976c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc1fe, gbc.sp());
        EXPECT(0x976e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x976c));
        EXPECT(0x5, gbc.readMem(0x976d));
        // CB 05 019C
        gbc.setState(0xb8e0, 0xc44c, 0xad70, 0x5930, 0x13b8, 0x9ad0, 0x0, 0x1);
        gbc.writeMem(0xb8e0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc44c, gbc.sp());
        EXPECT(0xb8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e0));
        EXPECT(0x5, gbc.readMem(0xb8e1));
        // CB 05 019D
        gbc.setState(0x7a09, 0x815e, 0xaad0, 0xa29e, 0xd349, 0x45ba, 0x1, 0x0);
        gbc.writeMem(0x7a09, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x815e, gbc.sp());
        EXPECT(0x7a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 019E
        gbc.setState(0xcf44, 0xa252, 0xf660, 0xbe9d, 0x401b, 0xfcf2, 0x0, 0x1);
        gbc.writeMem(0xcf44, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa252, gbc.sp());
        EXPECT(0xcf46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf44));
        EXPECT(0x5, gbc.readMem(0xcf45));
        // CB 05 019F
        gbc.setState(0xc188, 0xcc19, 0x5f60, 0x6aaa, 0x4989, 0x3ec9, 0x0, 0x1);
        gbc.writeMem(0xc188, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcc19, gbc.sp());
        EXPECT(0xc18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc188));
        EXPECT(0x5, gbc.readMem(0xc189));
        // CB 05 01A0
        gbc.setState(0xaf41, 0x275b, 0xe490, 0x6dfe, 0xbf4d, 0x9e40, 0x0, 0x1);
        gbc.writeMem(0xaf41, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x275b, gbc.sp());
        EXPECT(0xaf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf41));
        EXPECT(0x5, gbc.readMem(0xaf42));
        // CB 05 01A1
        gbc.setState(0x8dac, 0x65a4, 0x4a50, 0x5dd7, 0xb8f3, 0xaae5, 0x1, 0x0);
        gbc.writeMem(0x8dac, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x65a4, gbc.sp());
        EXPECT(0x8dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dac));
        EXPECT(0x5, gbc.readMem(0x8dad));
        // CB 05 01A2
        gbc.setState(0xf4c, 0x2234, 0xde40, 0xa0a0, 0xa34d, 0xc061, 0x1, 0x0);
        gbc.writeMem(0xf4c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2234, gbc.sp());
        EXPECT(0xf4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01A3
        gbc.setState(0xa2b8, 0xd55, 0x8ea0, 0x831, 0x3eb7, 0x17f, 0x0, 0x1);
        gbc.writeMem(0xa2b8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd55, gbc.sp());
        EXPECT(0xa2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b8));
        EXPECT(0x5, gbc.readMem(0xa2b9));
        // CB 05 01A4
        gbc.setState(0x648e, 0x93ee, 0x9bb0, 0x504, 0xf2c6, 0xf0f3, 0x0, 0x1);
        gbc.writeMem(0x648e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x93ee, gbc.sp());
        EXPECT(0x6490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01A5
        gbc.setState(0x486a, 0xba87, 0x8ae0, 0x76fe, 0x341c, 0x280a, 0x1, 0x1);
        gbc.writeMem(0x486a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xba87, gbc.sp());
        EXPECT(0x486c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01A6
        gbc.setState(0x6d6f, 0x8888, 0xd5c0, 0x4382, 0x8fea, 0x2abe, 0x0, 0x0);
        gbc.writeMem(0x6d6f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8888, gbc.sp());
        EXPECT(0x6d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01A7
        gbc.setState(0x6678, 0xb293, 0x4020, 0xacc7, 0xeab3, 0xc128, 0x0, 0x1);
        gbc.writeMem(0x6678, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb293, gbc.sp());
        EXPECT(0x667a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01A8
        gbc.setState(0xf15, 0x9d7a, 0x3d30, 0x6610, 0x26e, 0x6d95, 0x1, 0x1);
        gbc.writeMem(0xf15, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9d7a, gbc.sp());
        EXPECT(0xf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01A9
        gbc.setState(0xda94, 0xac16, 0xf3f0, 0x5589, 0xc554, 0x78d2, 0x1, 0x1);
        gbc.writeMem(0xda94, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xac16, gbc.sp());
        EXPECT(0xda96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda94));
        EXPECT(0x5, gbc.readMem(0xda95));
        // CB 05 01AA
        gbc.setState(0x1856, 0xc694, 0xd4c0, 0xdcb1, 0xd548, 0xd970, 0x0, 0x1);
        gbc.writeMem(0x1856, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc694, gbc.sp());
        EXPECT(0x1858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01AB
        gbc.setState(0xd2ef, 0x3a42, 0x2d70, 0xc000, 0x5f32, 0x6126, 0x1, 0x1);
        gbc.writeMem(0xd2ef, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3a42, gbc.sp());
        EXPECT(0xd2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ef));
        EXPECT(0x5, gbc.readMem(0xd2f0));
        // CB 05 01AC
        gbc.setState(0xd2a4, 0x6007, 0x52c0, 0xb2e5, 0xd6f1, 0xdfc9, 0x0, 0x1);
        gbc.writeMem(0xd2a4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6007, gbc.sp());
        EXPECT(0xd2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a4));
        EXPECT(0x5, gbc.readMem(0xd2a5));
        // CB 05 01AD
        gbc.setState(0x8cf7, 0xb910, 0x33d0, 0xe63a, 0xed32, 0x4a75, 0x0, 0x0);
        gbc.writeMem(0x8cf7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb910, gbc.sp());
        EXPECT(0x8cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf7));
        EXPECT(0x5, gbc.readMem(0x8cf8));
        // CB 05 01AE
        gbc.setState(0x5af, 0x8194, 0xbac0, 0x19ed, 0xb82b, 0xdc26, 0x1, 0x0);
        gbc.writeMem(0x5af, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8194, gbc.sp());
        EXPECT(0x5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01AF
        gbc.setState(0x4ac1, 0x392e, 0xf6a0, 0x97a3, 0x5f07, 0x6b27, 0x0, 0x0);
        gbc.writeMem(0x4ac1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x392e, gbc.sp());
        EXPECT(0x4ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01B0
        gbc.setState(0x34ae, 0xe402, 0x8c20, 0x583b, 0x682f, 0x6941, 0x0, 0x0);
        gbc.writeMem(0x34ae, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe402, gbc.sp());
        EXPECT(0x34b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01B1
        gbc.setState(0x634e, 0x9a4a, 0xb650, 0xec4d, 0xe55b, 0x65ce, 0x0, 0x0);
        gbc.writeMem(0x634e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9a4a, gbc.sp());
        EXPECT(0x6350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01B2
        gbc.setState(0x69bc, 0x12aa, 0xe030, 0xdc84, 0x188c, 0x626a, 0x1, 0x1);
        gbc.writeMem(0x69bc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x12aa, gbc.sp());
        EXPECT(0x69be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01B3
        gbc.setState(0x1c59, 0xb271, 0xf510, 0x2b4e, 0x2cc2, 0xc39, 0x1, 0x1);
        gbc.writeMem(0x1c59, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb271, gbc.sp());
        EXPECT(0x1c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01B4
        gbc.setState(0x2cc0, 0xd12c, 0x9560, 0x55e6, 0x7205, 0xb106, 0x1, 0x1);
        gbc.writeMem(0x2cc0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd12c, gbc.sp());
        EXPECT(0x2cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01B5
        gbc.setState(0xb5bd, 0x5050, 0x38f0, 0xbda7, 0x7819, 0x3a6a, 0x1, 0x0);
        gbc.writeMem(0xb5bd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5050, gbc.sp());
        EXPECT(0xb5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5bd));
        EXPECT(0x5, gbc.readMem(0xb5be));
        // CB 05 01B6
        gbc.setState(0xcf10, 0x950d, 0x8ec0, 0x605e, 0x5ee1, 0xd31d, 0x0, 0x0);
        gbc.writeMem(0xcf10, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x950d, gbc.sp());
        EXPECT(0xcf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf10));
        EXPECT(0x5, gbc.readMem(0xcf11));
        // CB 05 01B7
        gbc.setState(0xa843, 0x4eb4, 0x3bc0, 0x67ad, 0x6f9e, 0xf68b, 0x1, 0x0);
        gbc.writeMem(0xa843, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4eb4, gbc.sp());
        EXPECT(0xa845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa843));
        EXPECT(0x5, gbc.readMem(0xa844));
        // CB 05 01B8
        gbc.setState(0x223d, 0x96dc, 0xd060, 0xcbe0, 0xab2e, 0xbef6, 0x0, 0x0);
        gbc.writeMem(0x223d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x96dc, gbc.sp());
        EXPECT(0x223f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01B9
        gbc.setState(0x4896, 0x2b04, 0xffe0, 0x993, 0xc509, 0xbf3d, 0x0, 0x0);
        gbc.writeMem(0x4896, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2b04, gbc.sp());
        EXPECT(0x4898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01BA
        gbc.setState(0xddbc, 0x9ffb, 0xc90, 0x2145, 0x2ab3, 0x7cee, 0x0, 0x0);
        gbc.writeMem(0xddbc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9ffb, gbc.sp());
        EXPECT(0xddbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbc));
        EXPECT(0x5, gbc.readMem(0xddbd));
        // CB 05 01BB
        gbc.setState(0xe90d, 0x3a8a, 0xe2d0, 0x41da, 0x7b2c, 0x149, 0x0, 0x0);
        gbc.writeMem(0xe90d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3a8a, gbc.sp());
        EXPECT(0xe90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90d));
        EXPECT(0x5, gbc.readMem(0xe90e));
        // CB 05 01BC
        gbc.setState(0xe9d3, 0x2968, 0xc5f0, 0xa876, 0x2cc1, 0xf2ee, 0x0, 0x1);
        gbc.writeMem(0xe9d3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2968, gbc.sp());
        EXPECT(0xe9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d3));
        EXPECT(0x5, gbc.readMem(0xe9d4));
        // CB 05 01BD
        gbc.setState(0xaec9, 0x5676, 0x2ef0, 0xba9f, 0x48de, 0x2479, 0x0, 0x1);
        gbc.writeMem(0xaec9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5676, gbc.sp());
        EXPECT(0xaecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec9));
        EXPECT(0x5, gbc.readMem(0xaeca));
        // CB 05 01BE
        gbc.setState(0x3f15, 0x5893, 0x3480, 0x872a, 0x7e5b, 0xcb31, 0x0, 0x0);
        gbc.writeMem(0x3f15, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5893, gbc.sp());
        EXPECT(0x3f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01BF
        gbc.setState(0x37aa, 0x7cf6, 0xc690, 0xbf24, 0x73cc, 0x3918, 0x1, 0x0);
        gbc.writeMem(0x37aa, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7cf6, gbc.sp());
        EXPECT(0x37ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01C0
        gbc.setState(0x896f, 0xd5c0, 0xa2f0, 0x4d60, 0xd15a, 0xf21b, 0x0, 0x0);
        gbc.writeMem(0x896f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd5c0, gbc.sp());
        EXPECT(0x8971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896f));
        EXPECT(0x5, gbc.readMem(0x8970));
        // CB 05 01C1
        gbc.setState(0x6817, 0xa986, 0x44b0, 0x77b9, 0xb385, 0x7a0, 0x1, 0x1);
        gbc.writeMem(0x6817, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa986, gbc.sp());
        EXPECT(0x6819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01C2
        gbc.setState(0xda86, 0xaa58, 0x6070, 0xa45, 0x2c84, 0x8742, 0x0, 0x1);
        gbc.writeMem(0xda86, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xaa58, gbc.sp());
        EXPECT(0xda88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda86));
        EXPECT(0x5, gbc.readMem(0xda87));
        // CB 05 01C3
        gbc.setState(0x6df7, 0x62d, 0x3180, 0x72d3, 0x8775, 0xf40d, 0x1, 0x1);
        gbc.writeMem(0x6df7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x62d, gbc.sp());
        EXPECT(0x6df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01C4
        gbc.setState(0x7fdf, 0x672c, 0xe80, 0xf84b, 0x145b, 0xd4b3, 0x0, 0x1);
        gbc.writeMem(0x7fdf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x672c, gbc.sp());
        EXPECT(0x7fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01C5
        gbc.setState(0x20ac, 0xd3e9, 0x4c10, 0x5fe6, 0xb025, 0xe3c9, 0x1, 0x1);
        gbc.writeMem(0x20ac, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd3e9, gbc.sp());
        EXPECT(0x20ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01C6
        gbc.setState(0xec5d, 0x31c9, 0xe8e0, 0x9b, 0xa631, 0xadae, 0x1, 0x0);
        gbc.writeMem(0xec5d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x31c9, gbc.sp());
        EXPECT(0xec5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5d));
        EXPECT(0x5, gbc.readMem(0xec5e));
        // CB 05 01C7
        gbc.setState(0xa77a, 0x9ae2, 0x11a0, 0x99d1, 0x4f8f, 0x3f5b, 0x0, 0x0);
        gbc.writeMem(0xa77a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9ae2, gbc.sp());
        EXPECT(0xa77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77a));
        EXPECT(0x5, gbc.readMem(0xa77b));
        // CB 05 01C8
        gbc.setState(0x3397, 0xc40d, 0x9550, 0x6be8, 0xfeb4, 0xc79d, 0x0, 0x0);
        gbc.writeMem(0x3397, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc40d, gbc.sp());
        EXPECT(0x3399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01C9
        gbc.setState(0x21f2, 0xe3ed, 0x53f0, 0xd5af, 0xb548, 0x6849, 0x1, 0x0);
        gbc.writeMem(0x21f2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe3ed, gbc.sp());
        EXPECT(0x21f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01CA
        gbc.setState(0x3083, 0x7916, 0xefd0, 0xfea7, 0xc5ef, 0x22c0, 0x0, 0x0);
        gbc.writeMem(0x3083, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7916, gbc.sp());
        EXPECT(0x3085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01CB
        gbc.setState(0x25a1, 0x24d1, 0xf410, 0xdf40, 0xb65b, 0x721f, 0x0, 0x1);
        gbc.writeMem(0x25a1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x24d1, gbc.sp());
        EXPECT(0x25a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01CC
        gbc.setState(0x91ae, 0x4c9d, 0x8670, 0xa7ac, 0x3de3, 0x18b4, 0x0, 0x0);
        gbc.writeMem(0x91ae, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4c9d, gbc.sp());
        EXPECT(0x91b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ae));
        EXPECT(0x5, gbc.readMem(0x91af));
        // CB 05 01CD
        gbc.setState(0x4397, 0xa710, 0xf4d0, 0x1f0e, 0x86dc, 0x89b7, 0x1, 0x1);
        gbc.writeMem(0x4397, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa710, gbc.sp());
        EXPECT(0x4399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01CE
        gbc.setState(0xb8f9, 0x57ef, 0x52a0, 0xe61c, 0x71ed, 0x900a, 0x0, 0x1);
        gbc.writeMem(0xb8f9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x57ef, gbc.sp());
        EXPECT(0xb8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f9));
        EXPECT(0x5, gbc.readMem(0xb8fa));
        // CB 05 01CF
        gbc.setState(0x957d, 0xd195, 0x7e20, 0x43a, 0x29ee, 0xe9f2, 0x1, 0x1);
        gbc.writeMem(0x957d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd195, gbc.sp());
        EXPECT(0x957f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957d));
        EXPECT(0x5, gbc.readMem(0x957e));
        // CB 05 01D0
        gbc.setState(0x6a7, 0xf3d1, 0x8b90, 0xf47e, 0xfe45, 0xfd8, 0x1, 0x0);
        gbc.writeMem(0x6a7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf3d1, gbc.sp());
        EXPECT(0x6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01D1
        gbc.setState(0x51c6, 0x7351, 0x1f30, 0x46f2, 0xe9ce, 0x8bc3, 0x0, 0x0);
        gbc.writeMem(0x51c6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7351, gbc.sp());
        EXPECT(0x51c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01D2
        gbc.setState(0x4160, 0x64b9, 0xa80, 0x6257, 0x9fb9, 0xb277, 0x1, 0x0);
        gbc.writeMem(0x4160, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x64b9, gbc.sp());
        EXPECT(0x4162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01D3
        gbc.setState(0x5839, 0x98fb, 0xd90, 0xe8fc, 0x7417, 0x1ebb, 0x1, 0x0);
        gbc.writeMem(0x5839, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x98fb, gbc.sp());
        EXPECT(0x583b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01D4
        gbc.setState(0xdba9, 0xb, 0xd3c0, 0xce8b, 0x66c1, 0xb520, 0x0, 0x0);
        gbc.writeMem(0xdba9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb, gbc.sp());
        EXPECT(0xdbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba9));
        EXPECT(0x5, gbc.readMem(0xdbaa));
        // CB 05 01D5
        gbc.setState(0xb766, 0x33b6, 0x8a80, 0xfb39, 0x9bad, 0x3386, 0x1, 0x1);
        gbc.writeMem(0xb766, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x33b6, gbc.sp());
        EXPECT(0xb768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb766));
        EXPECT(0x5, gbc.readMem(0xb767));
        // CB 05 01D6
        gbc.setState(0x9e6a, 0xaec8, 0x1170, 0xaad8, 0x22e1, 0x4021, 0x0, 0x0);
        gbc.writeMem(0x9e6a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaec8, gbc.sp());
        EXPECT(0x9e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6a));
        EXPECT(0x5, gbc.readMem(0x9e6b));
        // CB 05 01D7
        gbc.setState(0x7707, 0xa95d, 0xf140, 0x1d5, 0x7f93, 0x3abd, 0x0, 0x0);
        gbc.writeMem(0x7707, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa95d, gbc.sp());
        EXPECT(0x7709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01D8
        gbc.setState(0xecd3, 0x68ba, 0x250, 0x4300, 0x402a, 0x1450, 0x0, 0x1);
        gbc.writeMem(0xecd3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x68ba, gbc.sp());
        EXPECT(0xecd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd3));
        EXPECT(0x5, gbc.readMem(0xecd4));
        // CB 05 01D9
        gbc.setState(0x9abf, 0xecd5, 0x32f0, 0x1004, 0x5a2a, 0x6fa5, 0x0, 0x0);
        gbc.writeMem(0x9abf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xecd5, gbc.sp());
        EXPECT(0x9ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abf));
        EXPECT(0x5, gbc.readMem(0x9ac0));
        // CB 05 01DB
        gbc.setState(0x7bdc, 0x4bfb, 0xb5e0, 0xf558, 0x73b0, 0xb2ca, 0x0, 0x0);
        gbc.writeMem(0x7bdc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4bfb, gbc.sp());
        EXPECT(0x7bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01DC
        gbc.setState(0x54ae, 0x25f1, 0x2c80, 0xecb2, 0x3ada, 0xf688, 0x1, 0x1);
        gbc.writeMem(0x54ae, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x25f1, gbc.sp());
        EXPECT(0x54b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01DD
        gbc.setState(0x8dc0, 0x70db, 0x2b50, 0x44e1, 0x5677, 0xed0b, 0x0, 0x0);
        gbc.writeMem(0x8dc0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x70db, gbc.sp());
        EXPECT(0x8dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc0));
        EXPECT(0x5, gbc.readMem(0x8dc1));
        // CB 05 01DE
        gbc.setState(0x6cb2, 0xcae4, 0xba70, 0x1cb2, 0x5592, 0xad25, 0x0, 0x0);
        gbc.writeMem(0x6cb2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcae4, gbc.sp());
        EXPECT(0x6cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01DF
        gbc.setState(0x7c99, 0x53d9, 0xda60, 0x926b, 0xdc76, 0x1849, 0x0, 0x0);
        gbc.writeMem(0x7c99, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x53d9, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01E0
        gbc.setState(0x456, 0x7e2, 0x3fd0, 0x9596, 0xd2ea, 0x9ee9, 0x1, 0x1);
        gbc.writeMem(0x456, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7e2, gbc.sp());
        EXPECT(0x458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01E1
        gbc.setState(0xe61b, 0x8be2, 0x1370, 0x4eed, 0x3c5c, 0xd2a4, 0x0, 0x1);
        gbc.writeMem(0xe61b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8be2, gbc.sp());
        EXPECT(0xe61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61b));
        EXPECT(0x5, gbc.readMem(0xe61c));
        // CB 05 01E2
        gbc.setState(0x2c9e, 0xdc2f, 0x8c10, 0xcbeb, 0x825b, 0x964c, 0x0, 0x0);
        gbc.writeMem(0x2c9e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdc2f, gbc.sp());
        EXPECT(0x2ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01E3
        gbc.setState(0x7393, 0xd734, 0x110, 0x3a78, 0xcc4d, 0xb844, 0x1, 0x1);
        gbc.writeMem(0x7393, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd734, gbc.sp());
        EXPECT(0x7395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01E4
        gbc.setState(0xe42c, 0x25d5, 0x44a0, 0x86f1, 0x8b7, 0x636a, 0x0, 0x1);
        gbc.writeMem(0xe42c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x25d5, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe42c));
        EXPECT(0x5, gbc.readMem(0xe42d));
        // CB 05 01E5
        gbc.setState(0xb6f4, 0x28c4, 0x2d80, 0x36cd, 0xa99e, 0x848b, 0x1, 0x0);
        gbc.writeMem(0xb6f4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x28c4, gbc.sp());
        EXPECT(0xb6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f4));
        EXPECT(0x5, gbc.readMem(0xb6f5));
        // CB 05 01E6
        gbc.setState(0x4cb9, 0xe335, 0xfec0, 0x14ab, 0xa3ac, 0x7a15, 0x0, 0x1);
        gbc.writeMem(0x4cb9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe335, gbc.sp());
        EXPECT(0x4cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01E7
        gbc.setState(0xc871, 0x53c5, 0x5630, 0xde35, 0x5f3e, 0x4446, 0x1, 0x1);
        gbc.writeMem(0xc871, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x53c5, gbc.sp());
        EXPECT(0xc873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc871));
        EXPECT(0x5, gbc.readMem(0xc872));
        // CB 05 01E8
        gbc.setState(0x1d2c, 0x852, 0x3550, 0x3cd2, 0xa11c, 0x15f3, 0x0, 0x1);
        gbc.writeMem(0x1d2c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x852, gbc.sp());
        EXPECT(0x1d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01E9
        gbc.setState(0xa1c4, 0xd5cc, 0x8090, 0x2a08, 0x996c, 0x1d90, 0x1, 0x1);
        gbc.writeMem(0xa1c4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd5cc, gbc.sp());
        EXPECT(0xa1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c4));
        EXPECT(0x5, gbc.readMem(0xa1c5));
        // CB 05 01EB
        gbc.setState(0x9d6, 0x2640, 0x9160, 0x4968, 0x31d8, 0x9b22, 0x0, 0x1);
        gbc.writeMem(0x9d6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2640, gbc.sp());
        EXPECT(0x9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01EC
        gbc.setState(0x2e5c, 0x96d1, 0x7e00, 0xa40a, 0x79e7, 0x2ba, 0x0, 0x0);
        gbc.writeMem(0x2e5c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x96d1, gbc.sp());
        EXPECT(0x2e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01EE
        gbc.setState(0x39ab, 0xf3c8, 0xa790, 0x8bfe, 0x7661, 0x136c, 0x1, 0x0);
        gbc.writeMem(0x39ab, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf3c8, gbc.sp());
        EXPECT(0x39ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01EF
        gbc.setState(0x3935, 0x13df, 0x7ae0, 0x9ea3, 0x31d3, 0x1524, 0x0, 0x1);
        gbc.writeMem(0x3935, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x13df, gbc.sp());
        EXPECT(0x3937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01F0
        gbc.setState(0x8a11, 0x9dba, 0xa050, 0x562, 0x2e26, 0x4e1b, 0x0, 0x1);
        gbc.writeMem(0x8a11, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9dba, gbc.sp());
        EXPECT(0x8a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a11));
        EXPECT(0x5, gbc.readMem(0x8a12));
        // CB 05 01F1
        gbc.setState(0x9a76, 0xbd86, 0x5590, 0xf702, 0xbce, 0x639f, 0x1, 0x0);
        gbc.writeMem(0x9a76, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbd86, gbc.sp());
        EXPECT(0x9a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a76));
        EXPECT(0x5, gbc.readMem(0x9a77));
        // CB 05 01F2
        gbc.setState(0xdeca, 0x58, 0xa9b0, 0x793a, 0xdfda, 0x3a73, 0x0, 0x1);
        gbc.writeMem(0xdeca, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x58, gbc.sp());
        EXPECT(0xdecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeca));
        EXPECT(0x5, gbc.readMem(0xdecb));
        // CB 05 01F3
        gbc.setState(0xd348, 0xe789, 0x7ff0, 0x7234, 0xdfcd, 0x73e3, 0x0, 0x1);
        gbc.writeMem(0xd348, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe789, gbc.sp());
        EXPECT(0xd34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd348));
        EXPECT(0x5, gbc.readMem(0xd349));
        // CB 05 01F4
        gbc.setState(0xdca7, 0x72e0, 0x58a0, 0x9faf, 0xbada, 0xf31e, 0x0, 0x1);
        gbc.writeMem(0xdca7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x72e0, gbc.sp());
        EXPECT(0xdca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca7));
        EXPECT(0x5, gbc.readMem(0xdca8));
        // CB 05 01F5
        gbc.setState(0x2523, 0x62b0, 0x72f0, 0xcfcb, 0xfb54, 0x537d, 0x1, 0x0);
        gbc.writeMem(0x2523, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x62b0, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01F6
        gbc.setState(0x45dc, 0x940b, 0x8320, 0x4b91, 0x2b9, 0x5e36, 0x1, 0x1);
        gbc.writeMem(0x45dc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x940b, gbc.sp());
        EXPECT(0x45de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01F7
        gbc.setState(0x9957, 0xf624, 0xfc80, 0x8f80, 0xa0e7, 0x603e, 0x0, 0x1);
        gbc.writeMem(0x9957, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf624, gbc.sp());
        EXPECT(0x9959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9957));
        EXPECT(0x5, gbc.readMem(0x9958));
        // CB 05 01F8
        gbc.setState(0xaa90, 0xa82b, 0x9420, 0x8ab, 0x31f9, 0x3e0e, 0x1, 0x0);
        gbc.writeMem(0xaa90, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa82b, gbc.sp());
        EXPECT(0xaa92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa90));
        EXPECT(0x5, gbc.readMem(0xaa91));
        // CB 05 01F9
        gbc.setState(0x8d55, 0x9e60, 0x1890, 0x5016, 0xf748, 0x8b87, 0x1, 0x1);
        gbc.writeMem(0x8d55, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9e60, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d55));
        EXPECT(0x5, gbc.readMem(0x8d56));
        // CB 05 01FA
        gbc.setState(0x54b7, 0x992e, 0xf8d0, 0xf765, 0x3412, 0x7d56, 0x0, 0x1);
        gbc.writeMem(0x54b7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x992e, gbc.sp());
        EXPECT(0x54b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 01FB
        gbc.setState(0x25d0, 0x9bb6, 0x8f80, 0xb4f, 0x5e3, 0x63f3, 0x1, 0x0);
        gbc.writeMem(0x25d0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9bb6, gbc.sp());
        EXPECT(0x25d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01FC
        gbc.setState(0x469b, 0xda92, 0x32d0, 0xd692, 0x3551, 0xe7d1, 0x0, 0x0);
        gbc.writeMem(0x469b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xda92, gbc.sp());
        EXPECT(0x469d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 01FD
        gbc.setState(0x9619, 0x835b, 0xd130, 0xdda8, 0x7cf0, 0xced5, 0x0, 0x1);
        gbc.writeMem(0x9619, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x835b, gbc.sp());
        EXPECT(0x961b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9619));
        EXPECT(0x5, gbc.readMem(0x961a));
        // CB 05 01FE
        gbc.setState(0xdda7, 0x7456, 0xabd0, 0xa80d, 0xd49a, 0x8ae6, 0x0, 0x0);
        gbc.writeMem(0xdda7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7456, gbc.sp());
        EXPECT(0xdda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda7));
        EXPECT(0x5, gbc.readMem(0xdda8));
        // CB 05 01FF
        gbc.setState(0x4a94, 0x9bd4, 0x7cf0, 0xf1c9, 0xd3ec, 0xdaba, 0x1, 0x0);
        gbc.writeMem(0x4a94, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9bd4, gbc.sp());
        EXPECT(0x4a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0200
        gbc.setState(0x3491, 0x3ea0, 0x620, 0xb914, 0xdeb8, 0x58, 0x0, 0x0);
        gbc.writeMem(0x3491, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3ea0, gbc.sp());
        EXPECT(0x3493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0201
        gbc.setState(0x987b, 0xf6d1, 0x23b0, 0x31af, 0xbb74, 0x825f, 0x0, 0x0);
        gbc.writeMem(0x987b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf6d1, gbc.sp());
        EXPECT(0x987d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987b));
        EXPECT(0x5, gbc.readMem(0x987c));
        // CB 05 0202
        gbc.setState(0x9b72, 0x657a, 0xcb0, 0xb36a, 0xbd49, 0xc001, 0x0, 0x1);
        gbc.writeMem(0x9b72, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x657a, gbc.sp());
        EXPECT(0x9b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b72));
        EXPECT(0x5, gbc.readMem(0x9b73));
        // CB 05 0203
        gbc.setState(0x197d, 0x328d, 0x80b0, 0x647d, 0xe34, 0x9b10, 0x0, 0x0);
        gbc.writeMem(0x197d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x328d, gbc.sp());
        EXPECT(0x197f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0204
        gbc.setState(0x2172, 0xeaac, 0xf5a0, 0xc8a, 0x2b83, 0xf41c, 0x0, 0x1);
        gbc.writeMem(0x2172, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xeaac, gbc.sp());
        EXPECT(0x2174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0205
        gbc.setState(0x5883, 0x883, 0x7c60, 0xe60f, 0x90f4, 0xbc6, 0x1, 0x0);
        gbc.writeMem(0x5883, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x883, gbc.sp());
        EXPECT(0x5885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0206
        gbc.setState(0xb4a2, 0x78a6, 0xd700, 0x5296, 0x291e, 0x5933, 0x1, 0x0);
        gbc.writeMem(0xb4a2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x78a6, gbc.sp());
        EXPECT(0xb4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a2));
        EXPECT(0x5, gbc.readMem(0xb4a3));
        // CB 05 0207
        gbc.setState(0xa4ae, 0x7777, 0xb230, 0x83b4, 0x586e, 0x3f55, 0x0, 0x0);
        gbc.writeMem(0xa4ae, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7777, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ae));
        EXPECT(0x5, gbc.readMem(0xa4af));
        // CB 05 0209
        gbc.setState(0x8d81, 0x648e, 0x3f0, 0x8878, 0x2698, 0xd51e, 0x1, 0x0);
        gbc.writeMem(0x8d81, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x648e, gbc.sp());
        EXPECT(0x8d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d81));
        EXPECT(0x5, gbc.readMem(0x8d82));
        // CB 05 020A
        gbc.setState(0x2c9, 0x5f, 0xcdd0, 0x5998, 0x9aab, 0x3839, 0x1, 0x0);
        gbc.writeMem(0x2c9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5f, gbc.sp());
        EXPECT(0x2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 020B
        gbc.setState(0xc914, 0x9a36, 0x8d80, 0xcbd5, 0x12a3, 0xc04e, 0x0, 0x0);
        gbc.writeMem(0xc914, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9a36, gbc.sp());
        EXPECT(0xc916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc914));
        EXPECT(0x5, gbc.readMem(0xc915));
        // CB 05 020C
        gbc.setState(0x893c, 0x4c6d, 0xb2e0, 0x4bde, 0x3c95, 0x1a1c, 0x1, 0x1);
        gbc.writeMem(0x893c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4c6d, gbc.sp());
        EXPECT(0x893e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x893c));
        EXPECT(0x5, gbc.readMem(0x893d));
        // CB 05 020D
        gbc.setState(0x31b7, 0xb236, 0x1bd0, 0x3c3f, 0x5fee, 0x3f24, 0x1, 0x1);
        gbc.writeMem(0x31b7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb236, gbc.sp());
        EXPECT(0x31b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 020E
        gbc.setState(0x8543, 0x3e62, 0x4ef0, 0x34bb, 0x505b, 0xdae3, 0x0, 0x0);
        gbc.writeMem(0x8543, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3e62, gbc.sp());
        EXPECT(0x8545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8543));
        EXPECT(0x5, gbc.readMem(0x8544));
        // CB 05 020F
        gbc.setState(0x51fb, 0x5eb3, 0x5cd0, 0xc30d, 0xa51b, 0xeb66, 0x1, 0x1);
        gbc.writeMem(0x51fb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5eb3, gbc.sp());
        EXPECT(0x51fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0210
        gbc.setState(0x53f3, 0x8fc4, 0xc820, 0xc7a7, 0x63c, 0x7d07, 0x0, 0x0);
        gbc.writeMem(0x53f3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8fc4, gbc.sp());
        EXPECT(0x53f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0212
        gbc.setState(0xdb3b, 0xf227, 0xa9e0, 0x537c, 0xe186, 0x85fd, 0x1, 0x0);
        gbc.writeMem(0xdb3b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf227, gbc.sp());
        EXPECT(0xdb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3b));
        EXPECT(0x5, gbc.readMem(0xdb3c));
        // CB 05 0213
        gbc.setState(0x2603, 0x94fe, 0xf5a0, 0x375d, 0xc96c, 0x515e, 0x0, 0x0);
        gbc.writeMem(0x2603, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x94fe, gbc.sp());
        EXPECT(0x2605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0214
        gbc.setState(0x835b, 0x16f, 0xcf30, 0x4798, 0x4c9d, 0xfe6b, 0x1, 0x0);
        gbc.writeMem(0x835b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x16f, gbc.sp());
        EXPECT(0x835d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835b));
        EXPECT(0x5, gbc.readMem(0x835c));
        // CB 05 0215
        gbc.setState(0x2198, 0xca23, 0x19b0, 0x99fa, 0x7f25, 0xe01d, 0x1, 0x0);
        gbc.writeMem(0x2198, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xca23, gbc.sp());
        EXPECT(0x219a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0216
        gbc.setState(0xed5a, 0xd45e, 0xe5e0, 0x2058, 0xf1e4, 0x825d, 0x1, 0x0);
        gbc.writeMem(0xed5a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd45e, gbc.sp());
        EXPECT(0xed5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed5a));
        EXPECT(0x5, gbc.readMem(0xed5b));
        // CB 05 0217
        gbc.setState(0x71f8, 0xc1d7, 0xcf60, 0x993e, 0xfe86, 0x62a2, 0x1, 0x0);
        gbc.writeMem(0x71f8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc1d7, gbc.sp());
        EXPECT(0x71fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0218
        gbc.setState(0xa3bb, 0x9746, 0x72f0, 0x3d0d, 0x8d5b, 0x618a, 0x0, 0x1);
        gbc.writeMem(0xa3bb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9746, gbc.sp());
        EXPECT(0xa3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bb));
        EXPECT(0x5, gbc.readMem(0xa3bc));
        // CB 05 021A
        gbc.setState(0x6bda, 0xb77d, 0x8070, 0x62ab, 0xd3df, 0xfba1, 0x0, 0x0);
        gbc.writeMem(0x6bda, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb77d, gbc.sp());
        EXPECT(0x6bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 021B
        gbc.setState(0x532a, 0xd66b, 0x6e40, 0x5052, 0x98a8, 0xb340, 0x1, 0x1);
        gbc.writeMem(0x532a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd66b, gbc.sp());
        EXPECT(0x532c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 021C
        gbc.setState(0x50d4, 0xd5a3, 0xe770, 0x1df3, 0xf90c, 0xa59a, 0x0, 0x1);
        gbc.writeMem(0x50d4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd5a3, gbc.sp());
        EXPECT(0x50d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 021D
        gbc.setState(0x5b00, 0x3305, 0x1070, 0x1de1, 0xb02c, 0xedf, 0x1, 0x0);
        gbc.writeMem(0x5b00, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3305, gbc.sp());
        EXPECT(0x5b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 021E
        gbc.setState(0xdb7a, 0x18e, 0xcea0, 0x6655, 0xadd5, 0xed34, 0x0, 0x1);
        gbc.writeMem(0xdb7a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x18e, gbc.sp());
        EXPECT(0xdb7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7a));
        EXPECT(0x5, gbc.readMem(0xdb7b));
        // CB 05 021F
        gbc.setState(0x7763, 0xd8c4, 0x8b30, 0xd1e2, 0x98ba, 0x5acf, 0x1, 0x1);
        gbc.writeMem(0x7763, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd8c4, gbc.sp());
        EXPECT(0x7765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0221
        gbc.setState(0xe357, 0xab90, 0x7dd0, 0x130, 0x7f9e, 0xba10, 0x1, 0x0);
        gbc.writeMem(0xe357, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xab90, gbc.sp());
        EXPECT(0xe359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe357));
        EXPECT(0x5, gbc.readMem(0xe358));
        // CB 05 0222
        gbc.setState(0x653d, 0xcbd7, 0x9540, 0xf4da, 0x78b4, 0x9ac4, 0x0, 0x1);
        gbc.writeMem(0x653d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcbd7, gbc.sp());
        EXPECT(0x653f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0223
        gbc.setState(0x8797, 0x6ba8, 0x500, 0xec66, 0xed58, 0x44af, 0x1, 0x1);
        gbc.writeMem(0x8797, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6ba8, gbc.sp());
        EXPECT(0x8799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8797));
        EXPECT(0x5, gbc.readMem(0x8798));
        // CB 05 0224
        gbc.setState(0x56a2, 0xa9c, 0xa7a0, 0x1cfa, 0x5bb6, 0xe934, 0x0, 0x1);
        gbc.writeMem(0x56a2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa9c, gbc.sp());
        EXPECT(0x56a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0225
        gbc.setState(0xd607, 0xeb7c, 0xf7b0, 0xcf0e, 0x3de8, 0x704b, 0x1, 0x0);
        gbc.writeMem(0xd607, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xeb7c, gbc.sp());
        EXPECT(0xd609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd607));
        EXPECT(0x5, gbc.readMem(0xd608));
        // CB 05 0226
        gbc.setState(0x820e, 0xc38e, 0x1f20, 0x7408, 0x98f1, 0x8e97, 0x1, 0x1);
        gbc.writeMem(0x820e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc38e, gbc.sp());
        EXPECT(0x8210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x820e));
        EXPECT(0x5, gbc.readMem(0x820f));
        // CB 05 0227
        gbc.setState(0xc828, 0xa9ce, 0x14f0, 0x2014, 0x4734, 0xcee5, 0x0, 0x1);
        gbc.writeMem(0xc828, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa9ce, gbc.sp());
        EXPECT(0xc82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc828));
        EXPECT(0x5, gbc.readMem(0xc829));
        // CB 05 0228
        gbc.setState(0x76cf, 0x362d, 0x3850, 0x4b3c, 0xdf95, 0xf6b9, 0x0, 0x0);
        gbc.writeMem(0x76cf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x362d, gbc.sp());
        EXPECT(0x76d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0229
        gbc.setState(0x997a, 0x48d7, 0x2950, 0x7f57, 0xbb7a, 0x5025, 0x1, 0x1);
        gbc.writeMem(0x997a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x48d7, gbc.sp());
        EXPECT(0x997c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997a));
        EXPECT(0x5, gbc.readMem(0x997b));
        // CB 05 022A
        gbc.setState(0xa709, 0x9d6b, 0xe040, 0x11d9, 0x3b0d, 0xf66f, 0x0, 0x0);
        gbc.writeMem(0xa709, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9d6b, gbc.sp());
        EXPECT(0xa70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa709));
        EXPECT(0x5, gbc.readMem(0xa70a));
        // CB 05 022B
        gbc.setState(0x2016, 0x40b5, 0x17c0, 0x88b3, 0x85c9, 0x9003, 0x1, 0x1);
        gbc.writeMem(0x2016, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x40b5, gbc.sp());
        EXPECT(0x2018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 022C
        gbc.setState(0x855d, 0x677f, 0xc410, 0x772, 0x674e, 0x51d2, 0x1, 0x1);
        gbc.writeMem(0x855d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x677f, gbc.sp());
        EXPECT(0x855f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855d));
        EXPECT(0x5, gbc.readMem(0x855e));
        // CB 05 022D
        gbc.setState(0xd91a, 0x6b60, 0x2840, 0x244b, 0x9244, 0x22d, 0x0, 0x0);
        gbc.writeMem(0xd91a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6b60, gbc.sp());
        EXPECT(0xd91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91a));
        EXPECT(0x5, gbc.readMem(0xd91b));
        // CB 05 022E
        gbc.setState(0xcafe, 0xe7d, 0xf950, 0xf2c4, 0xc0f3, 0x2b9b, 0x0, 0x1);
        gbc.writeMem(0xcafe, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe7d, gbc.sp());
        EXPECT(0xcb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcafe));
        EXPECT(0x5, gbc.readMem(0xcaff));
        // CB 05 022F
        gbc.setState(0x4341, 0x610c, 0x8040, 0xd9ba, 0xfc63, 0x172a, 0x0, 0x1);
        gbc.writeMem(0x4341, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x610c, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0230
        gbc.setState(0xe313, 0xed97, 0xed0, 0x9d32, 0x7ee4, 0xe0a4, 0x0, 0x1);
        gbc.writeMem(0xe313, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xed97, gbc.sp());
        EXPECT(0xe315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe313));
        EXPECT(0x5, gbc.readMem(0xe314));
        // CB 05 0231
        gbc.setState(0x8f53, 0x3c4c, 0x64c0, 0x69f3, 0x3b07, 0x5128, 0x1, 0x0);
        gbc.writeMem(0x8f53, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3c4c, gbc.sp());
        EXPECT(0x8f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f53));
        EXPECT(0x5, gbc.readMem(0x8f54));
        // CB 05 0232
        gbc.setState(0x1ed8, 0x4347, 0x2130, 0x19f, 0x5e2d, 0x78b5, 0x1, 0x0);
        gbc.writeMem(0x1ed8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4347, gbc.sp());
        EXPECT(0x1eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0233
        gbc.setState(0xa6e6, 0xff8a, 0x6370, 0x291, 0x55ff, 0xe5f1, 0x1, 0x1);
        gbc.writeMem(0xa6e6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xff8a, gbc.sp());
        EXPECT(0xa6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e6));
        EXPECT(0x5, gbc.readMem(0xa6e7));
        // CB 05 0234
        gbc.setState(0x9bd4, 0x3e81, 0xb9c0, 0x26bb, 0xe8c, 0x2c78, 0x0, 0x0);
        gbc.writeMem(0x9bd4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3e81, gbc.sp());
        EXPECT(0x9bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd4));
        EXPECT(0x5, gbc.readMem(0x9bd5));
        // CB 05 0236
        gbc.setState(0x8f55, 0x8955, 0x38c0, 0x8ff3, 0x9dbd, 0x4b93, 0x0, 0x0);
        gbc.writeMem(0x8f55, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8955, gbc.sp());
        EXPECT(0x8f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f55));
        EXPECT(0x5, gbc.readMem(0x8f56));
        // CB 05 0237
        gbc.setState(0x425e, 0x7edc, 0x64a0, 0xbd23, 0x1678, 0x1395, 0x1, 0x0);
        gbc.writeMem(0x425e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7edc, gbc.sp());
        EXPECT(0x4260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0239
        gbc.setState(0x27da, 0xfb9f, 0x6340, 0x4232, 0x236, 0x2be2, 0x0, 0x1);
        gbc.writeMem(0x27da, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfb9f, gbc.sp());
        EXPECT(0x27dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 023A
        gbc.setState(0x8770, 0x74c2, 0xc0c0, 0x8af5, 0x5924, 0xd0c2, 0x1, 0x0);
        gbc.writeMem(0x8770, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x74c2, gbc.sp());
        EXPECT(0x8772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8770));
        EXPECT(0x5, gbc.readMem(0x8771));
        // CB 05 023B
        gbc.setState(0x3674, 0xb2ea, 0x9350, 0x680b, 0xa209, 0xaa13, 0x0, 0x0);
        gbc.writeMem(0x3674, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb2ea, gbc.sp());
        EXPECT(0x3676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 023C
        gbc.setState(0x1834, 0xcd4c, 0xd730, 0xfd53, 0x86c1, 0x27bb, 0x1, 0x1);
        gbc.writeMem(0x1834, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcd4c, gbc.sp());
        EXPECT(0x1836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 023D
        gbc.setState(0x6dcd, 0x5a0d, 0x9090, 0x9e8, 0x70fe, 0xe7c6, 0x0, 0x0);
        gbc.writeMem(0x6dcd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5a0d, gbc.sp());
        EXPECT(0x6dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 023E
        gbc.setState(0x3e15, 0x33f, 0xced0, 0x65c2, 0x7384, 0x3a4f, 0x0, 0x1);
        gbc.writeMem(0x3e15, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x33f, gbc.sp());
        EXPECT(0x3e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 023F
        gbc.setState(0xeb25, 0xa17a, 0x5ae0, 0x4b33, 0xfce4, 0x3e70, 0x0, 0x1);
        gbc.writeMem(0xeb25, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa17a, gbc.sp());
        EXPECT(0xeb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb25));
        EXPECT(0x5, gbc.readMem(0xeb26));
        // CB 05 0240
        gbc.setState(0xb8f, 0x5638, 0x6e70, 0xe7e7, 0x8ed8, 0x715f, 0x0, 0x1);
        gbc.writeMem(0xb8f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5638, gbc.sp());
        EXPECT(0xb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0241
        gbc.setState(0x7c1, 0x7384, 0x1470, 0x10af, 0x55b, 0x23f6, 0x1, 0x0);
        gbc.writeMem(0x7c1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7384, gbc.sp());
        EXPECT(0x7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0242
        gbc.setState(0xe01c, 0x30f8, 0xf8d0, 0xdfc2, 0x5e0c, 0x9c15, 0x1, 0x1);
        gbc.writeMem(0xe01c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x30f8, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01c));
        EXPECT(0x5, gbc.readMem(0xe01d));
        // CB 05 0244
        gbc.setState(0x30f2, 0x6f50, 0xdad0, 0xd8a3, 0x879, 0x2755, 0x1, 0x0);
        gbc.writeMem(0x30f2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6f50, gbc.sp());
        EXPECT(0x30f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0245
        gbc.setState(0x3587, 0xe74e, 0x5a40, 0x300b, 0x336d, 0x8b3, 0x1, 0x0);
        gbc.writeMem(0x3587, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe74e, gbc.sp());
        EXPECT(0x3589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0247
        gbc.setState(0x2732, 0x6b80, 0xe1c0, 0xa868, 0x211b, 0x4924, 0x0, 0x1);
        gbc.writeMem(0x2732, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6b80, gbc.sp());
        EXPECT(0x2734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0248
        gbc.setState(0x82bf, 0x5a8d, 0x35b0, 0x815f, 0xe916, 0xce03, 0x1, 0x1);
        gbc.writeMem(0x82bf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5a8d, gbc.sp());
        EXPECT(0x82c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82bf));
        EXPECT(0x5, gbc.readMem(0x82c0));
        // CB 05 0249
        gbc.setState(0x5d49, 0x51be, 0xb510, 0x3095, 0xe820, 0x711c, 0x0, 0x1);
        gbc.writeMem(0x5d49, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x51be, gbc.sp());
        EXPECT(0x5d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 024A
        gbc.setState(0x644d, 0xdc42, 0x3040, 0x8cc2, 0x718c, 0x9f5b, 0x1, 0x0);
        gbc.writeMem(0x644d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdc42, gbc.sp());
        EXPECT(0x644f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 024B
        gbc.setState(0x2cc, 0xf225, 0xf780, 0x6230, 0x8c02, 0x5122, 0x1, 0x1);
        gbc.writeMem(0x2cc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf225, gbc.sp());
        EXPECT(0x2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 024C
        gbc.setState(0x6dc6, 0x7cea, 0x2b0, 0xb8ce, 0xf83a, 0xf572, 0x1, 0x1);
        gbc.writeMem(0x6dc6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7cea, gbc.sp());
        EXPECT(0x6dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 024D
        gbc.setState(0x794c, 0x6d52, 0x6b30, 0x654d, 0xc546, 0x6ee2, 0x1, 0x1);
        gbc.writeMem(0x794c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6d52, gbc.sp());
        EXPECT(0x794e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 024E
        gbc.setState(0xc32e, 0x7794, 0x5200, 0x730c, 0xca2f, 0x18d0, 0x1, 0x1);
        gbc.writeMem(0xc32e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7794, gbc.sp());
        EXPECT(0xc330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32e));
        EXPECT(0x5, gbc.readMem(0xc32f));
        // CB 05 024F
        gbc.setState(0xa391, 0xe359, 0xebe0, 0x66a5, 0xec8a, 0x5e00, 0x1, 0x1);
        gbc.writeMem(0xa391, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe359, gbc.sp());
        EXPECT(0xa393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa391));
        EXPECT(0x5, gbc.readMem(0xa392));
        // CB 05 0250
        gbc.setState(0xadbe, 0xde06, 0x65d0, 0xd67c, 0xbdb8, 0x4e48, 0x1, 0x0);
        gbc.writeMem(0xadbe, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xde06, gbc.sp());
        EXPECT(0xadc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbe));
        EXPECT(0x5, gbc.readMem(0xadbf));
        // CB 05 0251
        gbc.setState(0xb4f, 0x6b13, 0xb820, 0xa654, 0x832c, 0x6e01, 0x1, 0x1);
        gbc.writeMem(0xb4f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6b13, gbc.sp());
        EXPECT(0xb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0252
        gbc.setState(0x68c9, 0xddff, 0xfe40, 0x539b, 0xd5f5, 0x575c, 0x0, 0x0);
        gbc.writeMem(0x68c9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xddff, gbc.sp());
        EXPECT(0x68cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0253
        gbc.setState(0x777f, 0x486f, 0x4b10, 0x9c55, 0x740d, 0xb3f2, 0x0, 0x1);
        gbc.writeMem(0x777f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0x7781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0255
        gbc.setState(0x49f0, 0xe703, 0xfa60, 0x9760, 0x87f5, 0x5eae, 0x1, 0x1);
        gbc.writeMem(0x49f0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe703, gbc.sp());
        EXPECT(0x49f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0257
        gbc.setState(0x14e8, 0x35c2, 0x52b0, 0xf3aa, 0x78b5, 0x3614, 0x1, 0x0);
        gbc.writeMem(0x14e8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x35c2, gbc.sp());
        EXPECT(0x14ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0258
        gbc.setState(0x7f29, 0xf714, 0xe860, 0xfb9b, 0x2c22, 0x203c, 0x0, 0x1);
        gbc.writeMem(0x7f29, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf714, gbc.sp());
        EXPECT(0x7f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0259
        gbc.setState(0x7c0c, 0xfad0, 0xed80, 0xf08d, 0x20e5, 0x2f7a, 0x0, 0x1);
        gbc.writeMem(0x7c0c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfad0, gbc.sp());
        EXPECT(0x7c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 025A
        gbc.setState(0x2637, 0xd72f, 0x6b70, 0x1faf, 0xa322, 0x891, 0x0, 0x0);
        gbc.writeMem(0x2637, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd72f, gbc.sp());
        EXPECT(0x2639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 025B
        gbc.setState(0x1440, 0x73bc, 0x6ff0, 0x1807, 0xaaf, 0x7f14, 0x1, 0x1);
        gbc.writeMem(0x1440, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x73bc, gbc.sp());
        EXPECT(0x1442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 025C
        gbc.setState(0xe20, 0xcf35, 0x86f0, 0x7895, 0xa083, 0xdeb0, 0x0, 0x0);
        gbc.writeMem(0xe20, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcf35, gbc.sp());
        EXPECT(0xe22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 025D
        gbc.setState(0xe3e1, 0x83af, 0x9620, 0x9d14, 0x3380, 0x7bfd, 0x0, 0x0);
        gbc.writeMem(0xe3e1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x83af, gbc.sp());
        EXPECT(0xe3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e1));
        EXPECT(0x5, gbc.readMem(0xe3e2));
        // CB 05 025E
        gbc.setState(0xa0fa, 0xf9c5, 0xe670, 0x94ad, 0xd8bd, 0x4658, 0x1, 0x1);
        gbc.writeMem(0xa0fa, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf9c5, gbc.sp());
        EXPECT(0xa0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fa));
        EXPECT(0x5, gbc.readMem(0xa0fb));
        // CB 05 025F
        gbc.setState(0x1ccd, 0xa153, 0x3f0, 0x4121, 0x8c25, 0xadf8, 0x0, 0x0);
        gbc.writeMem(0x1ccd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa153, gbc.sp());
        EXPECT(0x1ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0260
        gbc.setState(0x14d1, 0x1ba1, 0x2da0, 0xc1ad, 0x7ee6, 0x7733, 0x1, 0x0);
        gbc.writeMem(0x14d1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1ba1, gbc.sp());
        EXPECT(0x14d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0261
        gbc.setState(0x4c4c, 0x843c, 0xf520, 0xb40, 0xd198, 0x16f7, 0x0, 0x0);
        gbc.writeMem(0x4c4c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x843c, gbc.sp());
        EXPECT(0x4c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0262
        gbc.setState(0x2990, 0x900, 0x8150, 0x4086, 0xfe85, 0x5776, 0x0, 0x1);
        gbc.writeMem(0x2990, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x900, gbc.sp());
        EXPECT(0x2992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0263
        gbc.setState(0xc6d2, 0xf7a6, 0xfc00, 0x24e3, 0x47e3, 0x7455, 0x1, 0x1);
        gbc.writeMem(0xc6d2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf7a6, gbc.sp());
        EXPECT(0xc6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d2));
        EXPECT(0x5, gbc.readMem(0xc6d3));
        // CB 05 0264
        gbc.setState(0x3c97, 0x7476, 0xe8f0, 0x3415, 0x8793, 0x64be, 0x0, 0x0);
        gbc.writeMem(0x3c97, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7476, gbc.sp());
        EXPECT(0x3c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0265
        gbc.setState(0x2f6a, 0xa467, 0x4ff0, 0x4391, 0xe5bc, 0xadc0, 0x1, 0x1);
        gbc.writeMem(0x2f6a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa467, gbc.sp());
        EXPECT(0x2f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0266
        gbc.setState(0x911f, 0xfebc, 0x64d0, 0x28a8, 0x38dd, 0xc168, 0x1, 0x1);
        gbc.writeMem(0x911f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfebc, gbc.sp());
        EXPECT(0x9121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911f));
        EXPECT(0x5, gbc.readMem(0x9120));
        // CB 05 0267
        gbc.setState(0x76bb, 0x5bcb, 0x5d00, 0xa078, 0x4088, 0x1fd, 0x1, 0x1);
        gbc.writeMem(0x76bb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0x76bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0268
        gbc.setState(0x8cf2, 0x56ab, 0x94e0, 0xd31f, 0x825b, 0x8656, 0x0, 0x1);
        gbc.writeMem(0x8cf2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x56ab, gbc.sp());
        EXPECT(0x8cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf2));
        EXPECT(0x5, gbc.readMem(0x8cf3));
        // CB 05 0269
        gbc.setState(0xc7fd, 0xd31, 0x49a0, 0x8ccd, 0xfa98, 0x45e6, 0x0, 0x0);
        gbc.writeMem(0xc7fd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd31, gbc.sp());
        EXPECT(0xc7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fd));
        EXPECT(0x5, gbc.readMem(0xc7fe));
        // CB 05 026A
        gbc.setState(0xdc8a, 0x531, 0x50c0, 0xa098, 0x5907, 0x320, 0x0, 0x0);
        gbc.writeMem(0xdc8a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x531, gbc.sp());
        EXPECT(0xdc8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8a));
        EXPECT(0x5, gbc.readMem(0xdc8b));
        // CB 05 026B
        gbc.setState(0x450c, 0xa480, 0x8410, 0x4e26, 0xdcd6, 0xe0e9, 0x0, 0x0);
        gbc.writeMem(0x450c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa480, gbc.sp());
        EXPECT(0x450e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 026C
        gbc.setState(0xe1f3, 0x132d, 0x1a90, 0xbe16, 0x6c6d, 0xefc4, 0x1, 0x0);
        gbc.writeMem(0xe1f3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x132d, gbc.sp());
        EXPECT(0xe1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f3));
        EXPECT(0x5, gbc.readMem(0xe1f4));
        // CB 05 026D
        gbc.setState(0x5217, 0x3b6b, 0xca50, 0xd773, 0xe24e, 0xf65b, 0x0, 0x0);
        gbc.writeMem(0x5217, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3b6b, gbc.sp());
        EXPECT(0x5219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 026E
        gbc.setState(0xbaf1, 0x95e0, 0x3d00, 0x76dc, 0x5778, 0xa359, 0x1, 0x1);
        gbc.writeMem(0xbaf1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x95e0, gbc.sp());
        EXPECT(0xbaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf1));
        EXPECT(0x5, gbc.readMem(0xbaf2));
        // CB 05 026F
        gbc.setState(0x3ae6, 0x43f5, 0x7dc0, 0x78c7, 0xefcc, 0x5362, 0x0, 0x1);
        gbc.writeMem(0x3ae6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x43f5, gbc.sp());
        EXPECT(0x3ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0270
        gbc.setState(0x816b, 0x9f56, 0x2e40, 0xbd24, 0xf70c, 0x6e7b, 0x1, 0x1);
        gbc.writeMem(0x816b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9f56, gbc.sp());
        EXPECT(0x816d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816b));
        EXPECT(0x5, gbc.readMem(0x816c));
        // CB 05 0271
        gbc.setState(0xec3f, 0x9965, 0x6b60, 0x698d, 0x62f5, 0x7345, 0x0, 0x1);
        gbc.writeMem(0xec3f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9965, gbc.sp());
        EXPECT(0xec41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3f));
        EXPECT(0x5, gbc.readMem(0xec40));
        // CB 05 0272
        gbc.setState(0xbb0f, 0x9f1b, 0xead0, 0x3416, 0x3cdb, 0x304b, 0x1, 0x0);
        gbc.writeMem(0xbb0f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9f1b, gbc.sp());
        EXPECT(0xbb11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0f));
        EXPECT(0x5, gbc.readMem(0xbb10));
        // CB 05 0273
        gbc.setState(0x672c, 0x89c, 0x1c80, 0x68e3, 0xe64d, 0x3152, 0x1, 0x1);
        gbc.writeMem(0x672c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x89c, gbc.sp());
        EXPECT(0x672e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0274
        gbc.setState(0xe143, 0x2231, 0xa4e0, 0x1862, 0x6f80, 0x8e7e, 0x1, 0x1);
        gbc.writeMem(0xe143, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2231, gbc.sp());
        EXPECT(0xe145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe143));
        EXPECT(0x5, gbc.readMem(0xe144));
        // CB 05 0275
        gbc.setState(0x3f98, 0xb63, 0x3370, 0x7bf4, 0x5152, 0x11e8, 0x0, 0x0);
        gbc.writeMem(0x3f98, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb63, gbc.sp());
        EXPECT(0x3f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0276
        gbc.setState(0xd93e, 0x22d1, 0x5460, 0x11c4, 0xcd69, 0x2946, 0x1, 0x1);
        gbc.writeMem(0xd93e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x22d1, gbc.sp());
        EXPECT(0xd940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd93e));
        EXPECT(0x5, gbc.readMem(0xd93f));
        // CB 05 0278
        gbc.setState(0xd3bb, 0x2dc, 0xbdd0, 0xf78b, 0xc0ef, 0x378e, 0x1, 0x0);
        gbc.writeMem(0xd3bb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2dc, gbc.sp());
        EXPECT(0xd3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3bb));
        EXPECT(0x5, gbc.readMem(0xd3bc));
        // CB 05 0279
        gbc.setState(0x5a8a, 0x53d8, 0x8ae0, 0xd0cc, 0xbac5, 0x44e7, 0x1, 0x0);
        gbc.writeMem(0x5a8a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x53d8, gbc.sp());
        EXPECT(0x5a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 027A
        gbc.setState(0xe1a9, 0x709a, 0xd670, 0xfff2, 0x7300, 0xc8e6, 0x1, 0x0);
        gbc.writeMem(0xe1a9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x709a, gbc.sp());
        EXPECT(0xe1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a9));
        EXPECT(0x5, gbc.readMem(0xe1aa));
        // CB 05 027B
        gbc.setState(0x74cf, 0x2c14, 0xd810, 0x561b, 0xb181, 0x5ebb, 0x1, 0x1);
        gbc.writeMem(0x74cf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2c14, gbc.sp());
        EXPECT(0x74d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 027C
        gbc.setState(0xe77d, 0xe68, 0xd680, 0x679c, 0xd094, 0x82db, 0x1, 0x0);
        gbc.writeMem(0xe77d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe68, gbc.sp());
        EXPECT(0xe77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77d));
        EXPECT(0x5, gbc.readMem(0xe77e));
        // CB 05 027D
        gbc.setState(0xc1ff, 0x85ee, 0x65c0, 0xba02, 0xe039, 0x1194, 0x0, 0x0);
        gbc.writeMem(0xc1ff, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x85ee, gbc.sp());
        EXPECT(0xc201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ff));
        EXPECT(0x5, gbc.readMem(0xc200));
        // CB 05 027E
        gbc.setState(0x2457, 0xa5af, 0x2070, 0x60fe, 0x74a5, 0x3d0, 0x1, 0x1);
        gbc.writeMem(0x2457, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa5af, gbc.sp());
        EXPECT(0x2459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 027F
        gbc.setState(0x753f, 0x1317, 0x97e0, 0xc555, 0x7f90, 0x4385, 0x1, 0x1);
        gbc.writeMem(0x753f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1317, gbc.sp());
        EXPECT(0x7541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0280
        gbc.setState(0x5589, 0x2cff, 0x6fe0, 0x1986, 0xde8b, 0xb2d5, 0x0, 0x1);
        gbc.writeMem(0x5589, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2cff, gbc.sp());
        EXPECT(0x558b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0282
        gbc.setState(0xa3bf, 0x7b53, 0xc800, 0xaf4a, 0x761a, 0x578b, 0x0, 0x1);
        gbc.writeMem(0xa3bf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7b53, gbc.sp());
        EXPECT(0xa3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bf));
        EXPECT(0x5, gbc.readMem(0xa3c0));
        // CB 05 0283
        gbc.setState(0x6075, 0xb94c, 0xc3d0, 0x8c90, 0xc931, 0x8e1, 0x0, 0x1);
        gbc.writeMem(0x6075, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb94c, gbc.sp());
        EXPECT(0x6077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0284
        gbc.setState(0x94cf, 0x7897, 0x2460, 0xba48, 0xd60b, 0x8440, 0x0, 0x0);
        gbc.writeMem(0x94cf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7897, gbc.sp());
        EXPECT(0x94d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cf));
        EXPECT(0x5, gbc.readMem(0x94d0));
        // CB 05 0285
        gbc.setState(0x5923, 0xc7a6, 0x8d30, 0xcba7, 0x17e1, 0x7acf, 0x1, 0x1);
        gbc.writeMem(0x5923, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc7a6, gbc.sp());
        EXPECT(0x5925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0286
        gbc.setState(0x45e5, 0x3a42, 0xaf60, 0x71a7, 0xd17c, 0x67e8, 0x1, 0x0);
        gbc.writeMem(0x45e5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3a42, gbc.sp());
        EXPECT(0x45e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0287
        gbc.setState(0xc4f0, 0x6b3e, 0x4180, 0xebc9, 0x330d, 0xc35d, 0x0, 0x0);
        gbc.writeMem(0xc4f0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6b3e, gbc.sp());
        EXPECT(0xc4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f0));
        EXPECT(0x5, gbc.readMem(0xc4f1));
        // CB 05 0288
        gbc.setState(0xef4, 0x7ec4, 0xc430, 0xaa39, 0x11e, 0x6d72, 0x1, 0x0);
        gbc.writeMem(0xef4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7ec4, gbc.sp());
        EXPECT(0xef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0289
        gbc.setState(0x7891, 0x3d8d, 0xd0b0, 0x1de6, 0x2f1b, 0xa56b, 0x0, 0x0);
        gbc.writeMem(0x7891, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3d8d, gbc.sp());
        EXPECT(0x7893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 028A
        gbc.setState(0x22d4, 0x8fe, 0x48d0, 0xd111, 0x8219, 0xf3b3, 0x1, 0x0);
        gbc.writeMem(0x22d4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8fe, gbc.sp());
        EXPECT(0x22d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 028B
        gbc.setState(0xdbbd, 0xd98e, 0xff30, 0x4289, 0xb1ad, 0xbe7b, 0x1, 0x0);
        gbc.writeMem(0xdbbd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd98e, gbc.sp());
        EXPECT(0xdbbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbbd));
        EXPECT(0x5, gbc.readMem(0xdbbe));
        // CB 05 028C
        gbc.setState(0x3f1b, 0xde1e, 0xaf10, 0xbd48, 0x7a03, 0x8bfa, 0x0, 0x0);
        gbc.writeMem(0x3f1b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xde1e, gbc.sp());
        EXPECT(0x3f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 028D
        gbc.setState(0xc879, 0x1db4, 0x7480, 0xde4e, 0x707f, 0x2316, 0x0, 0x0);
        gbc.writeMem(0xc879, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1db4, gbc.sp());
        EXPECT(0xc87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc879));
        EXPECT(0x5, gbc.readMem(0xc87a));
        // CB 05 028E
        gbc.setState(0xb1a9, 0xd2a0, 0xd680, 0xb35a, 0xe760, 0xb41f, 0x1, 0x0);
        gbc.writeMem(0xb1a9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd2a0, gbc.sp());
        EXPECT(0xb1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a9));
        EXPECT(0x5, gbc.readMem(0xb1aa));
        // CB 05 028F
        gbc.setState(0xd536, 0x86a8, 0xe280, 0x80f0, 0x5551, 0xc852, 0x0, 0x0);
        gbc.writeMem(0xd536, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x86a8, gbc.sp());
        EXPECT(0xd538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd536));
        EXPECT(0x5, gbc.readMem(0xd537));
        // CB 05 0290
        gbc.setState(0x48e4, 0xa2fe, 0xb9a0, 0xd30, 0x81d8, 0x6935, 0x0, 0x0);
        gbc.writeMem(0x48e4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa2fe, gbc.sp());
        EXPECT(0x48e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0291
        gbc.setState(0xdbb9, 0xaff8, 0x7f30, 0x9a2f, 0xf1b6, 0xa35, 0x1, 0x0);
        gbc.writeMem(0xdbb9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaff8, gbc.sp());
        EXPECT(0xdbbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb9));
        EXPECT(0x5, gbc.readMem(0xdbba));
        // CB 05 0292
        gbc.setState(0xcfc2, 0x2e7b, 0x5d60, 0x7466, 0x14bc, 0x3b06, 0x1, 0x0);
        gbc.writeMem(0xcfc2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2e7b, gbc.sp());
        EXPECT(0xcfc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc2));
        EXPECT(0x5, gbc.readMem(0xcfc3));
        // CB 05 0293
        gbc.setState(0x5edd, 0xf40a, 0xa3c0, 0x1928, 0x893f, 0xff00, 0x0, 0x1);
        gbc.writeMem(0x5edd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf40a, gbc.sp());
        EXPECT(0x5edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0294
        gbc.setState(0xc408, 0x70d0, 0x3020, 0xb24f, 0x626c, 0x9604, 0x0, 0x0);
        gbc.writeMem(0xc408, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x70d0, gbc.sp());
        EXPECT(0xc40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc408));
        EXPECT(0x5, gbc.readMem(0xc409));
        // CB 05 0295
        gbc.setState(0x2c5, 0x38d7, 0x8d80, 0x689b, 0xa82e, 0x74b9, 0x0, 0x0);
        gbc.writeMem(0x2c5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x38d7, gbc.sp());
        EXPECT(0x2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0297
        gbc.setState(0x837e, 0xec57, 0x46e0, 0xbbd2, 0x6fad, 0x914f, 0x1, 0x1);
        gbc.writeMem(0x837e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xec57, gbc.sp());
        EXPECT(0x8380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837e));
        EXPECT(0x5, gbc.readMem(0x837f));
        // CB 05 0298
        gbc.setState(0x4238, 0xa8ab, 0x6f30, 0x613f, 0xd521, 0x82dd, 0x1, 0x1);
        gbc.writeMem(0x4238, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa8ab, gbc.sp());
        EXPECT(0x423a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0299
        gbc.setState(0xaecb, 0x4952, 0x8820, 0x1cd4, 0xd7e9, 0x2505, 0x0, 0x1);
        gbc.writeMem(0xaecb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4952, gbc.sp());
        EXPECT(0xaecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaecb));
        EXPECT(0x5, gbc.readMem(0xaecc));
        // CB 05 029A
        gbc.setState(0xd5a, 0xb563, 0xa790, 0x25e2, 0xf049, 0xfacf, 0x1, 0x0);
        gbc.writeMem(0xd5a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb563, gbc.sp());
        EXPECT(0xd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 029B
        gbc.setState(0x635, 0x41c3, 0xb2e0, 0x9045, 0x9a0f, 0xa538, 0x1, 0x0);
        gbc.writeMem(0x635, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x41c3, gbc.sp());
        EXPECT(0x637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 029C
        gbc.setState(0x5752, 0x5781, 0x5120, 0xe522, 0x37c1, 0xd84d, 0x1, 0x1);
        gbc.writeMem(0x5752, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5781, gbc.sp());
        EXPECT(0x5754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 029E
        gbc.setState(0xaff, 0x5805, 0x46d0, 0x478f, 0x4996, 0x98dc, 0x1, 0x1);
        gbc.writeMem(0xaff, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5805, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 029F
        gbc.setState(0x8b3d, 0xcc80, 0x28d0, 0x923f, 0xf406, 0x9f52, 0x1, 0x1);
        gbc.writeMem(0x8b3d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcc80, gbc.sp());
        EXPECT(0x8b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3d));
        EXPECT(0x5, gbc.readMem(0x8b3e));
        // CB 05 02A0
        gbc.setState(0x6066, 0xb9de, 0xd270, 0x36c1, 0x7eb2, 0xf50e, 0x1, 0x0);
        gbc.writeMem(0x6066, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb9de, gbc.sp());
        EXPECT(0x6068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02A1
        gbc.setState(0x6291, 0xac1c, 0xcee0, 0x86e8, 0x5825, 0xacef, 0x1, 0x1);
        gbc.writeMem(0x6291, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xac1c, gbc.sp());
        EXPECT(0x6293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02A2
        gbc.setState(0x7fc3, 0xebff, 0xe8a0, 0xbfa8, 0x2f9b, 0x8f3a, 0x0, 0x0);
        gbc.writeMem(0x7fc3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xebff, gbc.sp());
        EXPECT(0x7fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02A3
        gbc.setState(0xd320, 0x389f, 0x5ff0, 0xe578, 0x268f, 0x19cd, 0x0, 0x1);
        gbc.writeMem(0xd320, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x389f, gbc.sp());
        EXPECT(0xd322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd320));
        EXPECT(0x5, gbc.readMem(0xd321));
        // CB 05 02A4
        gbc.setState(0x212f, 0x74f8, 0x27d0, 0xb3b2, 0x55b8, 0xadab, 0x1, 0x1);
        gbc.writeMem(0x212f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x74f8, gbc.sp());
        EXPECT(0x2131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02A5
        gbc.setState(0x514d, 0xe4ce, 0x4b20, 0xc023, 0xcd9e, 0x8f51, 0x0, 0x1);
        gbc.writeMem(0x514d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe4ce, gbc.sp());
        EXPECT(0x514f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02A6
        gbc.setState(0x1354, 0xdbf2, 0x9460, 0x66e6, 0xd71, 0x917a, 0x0, 0x0);
        gbc.writeMem(0x1354, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdbf2, gbc.sp());
        EXPECT(0x1356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02A7
        gbc.setState(0xa247, 0x6ac9, 0x24f0, 0x49dd, 0x9c07, 0x38d8, 0x1, 0x0);
        gbc.writeMem(0xa247, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0xa249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa247));
        EXPECT(0x5, gbc.readMem(0xa248));
        // CB 05 02A8
        gbc.setState(0xad60, 0xffb7, 0xe200, 0x3807, 0x345b, 0x69e1, 0x0, 0x1);
        gbc.writeMem(0xad60, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xffb7, gbc.sp());
        EXPECT(0xad62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad60));
        EXPECT(0x5, gbc.readMem(0xad61));
        // CB 05 02A9
        gbc.setState(0x7f1, 0x8f80, 0xd640, 0x8450, 0x64c4, 0x461a, 0x0, 0x0);
        gbc.writeMem(0x7f1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8f80, gbc.sp());
        EXPECT(0x7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02AA
        gbc.setState(0x985b, 0xf890, 0xce30, 0x6ea, 0x2580, 0x3841, 0x1, 0x0);
        gbc.writeMem(0x985b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf890, gbc.sp());
        EXPECT(0x985d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985b));
        EXPECT(0x5, gbc.readMem(0x985c));
        // CB 05 02AB
        gbc.setState(0x3898, 0xde34, 0x5c90, 0xf353, 0xd1aa, 0x675, 0x1, 0x1);
        gbc.writeMem(0x3898, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xde34, gbc.sp());
        EXPECT(0x389a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02AC
        gbc.setState(0xa10e, 0x775c, 0x1f10, 0x7f95, 0xed7, 0x5944, 0x0, 0x0);
        gbc.writeMem(0xa10e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x775c, gbc.sp());
        EXPECT(0xa110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10e));
        EXPECT(0x5, gbc.readMem(0xa10f));
        // CB 05 02AD
        gbc.setState(0xc59f, 0x3a92, 0x6a00, 0x7356, 0x44d4, 0x5b9b, 0x1, 0x1);
        gbc.writeMem(0xc59f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3a92, gbc.sp());
        EXPECT(0xc5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59f));
        EXPECT(0x5, gbc.readMem(0xc5a0));
        // CB 05 02AE
        gbc.setState(0x3048, 0x41b3, 0x34f0, 0x3078, 0xb08f, 0x4f18, 0x1, 0x0);
        gbc.writeMem(0x3048, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x41b3, gbc.sp());
        EXPECT(0x304a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02AF
        gbc.setState(0xa591, 0x7405, 0x75a0, 0x9fbd, 0x9d2a, 0x1543, 0x1, 0x0);
        gbc.writeMem(0xa591, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7405, gbc.sp());
        EXPECT(0xa593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa591));
        EXPECT(0x5, gbc.readMem(0xa592));
        // CB 05 02B0
        gbc.setState(0x76d9, 0xe67a, 0x1e20, 0xc391, 0xf74c, 0x99c4, 0x0, 0x1);
        gbc.writeMem(0x76d9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe67a, gbc.sp());
        EXPECT(0x76db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02B1
        gbc.setState(0x442e, 0x4f74, 0xdf20, 0xc3d1, 0x3274, 0xc7e5, 0x1, 0x0);
        gbc.writeMem(0x442e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4f74, gbc.sp());
        EXPECT(0x4430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02B2
        gbc.setState(0x63d5, 0x94ff, 0x9be0, 0x8b8d, 0xd7f5, 0x59ac, 0x0, 0x0);
        gbc.writeMem(0x63d5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x94ff, gbc.sp());
        EXPECT(0x63d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02B3
        gbc.setState(0xd1ef, 0x4e05, 0x2690, 0x4c4e, 0x24c1, 0x778e, 0x1, 0x1);
        gbc.writeMem(0xd1ef, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4e05, gbc.sp());
        EXPECT(0xd1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ef));
        EXPECT(0x5, gbc.readMem(0xd1f0));
        // CB 05 02B4
        gbc.setState(0xcfda, 0x2e65, 0x4740, 0xdeb, 0xe0e, 0x1e3, 0x1, 0x1);
        gbc.writeMem(0xcfda, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2e65, gbc.sp());
        EXPECT(0xcfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfda));
        EXPECT(0x5, gbc.readMem(0xcfdb));
        // CB 05 02B5
        gbc.setState(0x4be3, 0x818b, 0x71e0, 0xe196, 0xdd2e, 0x5fdb, 0x0, 0x1);
        gbc.writeMem(0x4be3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x818b, gbc.sp());
        EXPECT(0x4be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02B6
        gbc.setState(0x23cc, 0xe1e0, 0x5640, 0xe703, 0xd702, 0x10a3, 0x0, 0x1);
        gbc.writeMem(0x23cc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe1e0, gbc.sp());
        EXPECT(0x23ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02B7
        gbc.setState(0x2a16, 0x4e2, 0xeb50, 0xdd81, 0x880d, 0x1cd0, 0x0, 0x1);
        gbc.writeMem(0x2a16, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4e2, gbc.sp());
        EXPECT(0x2a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02B8
        gbc.setState(0x70fe, 0x1a3c, 0xbd60, 0xc1fe, 0xf197, 0xd3f8, 0x0, 0x1);
        gbc.writeMem(0x70fe, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1a3c, gbc.sp());
        EXPECT(0x7100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02B9
        gbc.setState(0x1f6c, 0x8942, 0xbd70, 0xa53e, 0x4e6b, 0x2978, 0x0, 0x0);
        gbc.writeMem(0x1f6c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8942, gbc.sp());
        EXPECT(0x1f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02BA
        gbc.setState(0x4b24, 0x6001, 0xeb30, 0x75b0, 0x8eaa, 0xe75b, 0x1, 0x0);
        gbc.writeMem(0x4b24, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6001, gbc.sp());
        EXPECT(0x4b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02BB
        gbc.setState(0x8b90, 0x961a, 0x97e0, 0xbdac, 0xb7c2, 0xf9af, 0x1, 0x1);
        gbc.writeMem(0x8b90, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x961a, gbc.sp());
        EXPECT(0x8b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b90));
        EXPECT(0x5, gbc.readMem(0x8b91));
        // CB 05 02BD
        gbc.setState(0xa786, 0xe9fd, 0xfa30, 0xfc9d, 0x8d1f, 0x506c, 0x0, 0x1);
        gbc.writeMem(0xa786, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe9fd, gbc.sp());
        EXPECT(0xa788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa786));
        EXPECT(0x5, gbc.readMem(0xa787));
        // CB 05 02BE
        gbc.setState(0xef6b, 0x293c, 0x44c0, 0x6d1, 0x82ad, 0xed03, 0x0, 0x0);
        gbc.writeMem(0xef6b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x293c, gbc.sp());
        EXPECT(0xef6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6b));
        EXPECT(0x5, gbc.readMem(0xef6c));
        // CB 05 02BF
        gbc.setState(0x76fa, 0x6a4a, 0x39f0, 0x9a80, 0xc68, 0x1726, 0x0, 0x0);
        gbc.writeMem(0x76fa, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6a4a, gbc.sp());
        EXPECT(0x76fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02C0
        gbc.setState(0xa4c4, 0xf969, 0xd090, 0x5013, 0xf20f, 0x3755, 0x1, 0x0);
        gbc.writeMem(0xa4c4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf969, gbc.sp());
        EXPECT(0xa4c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c4));
        EXPECT(0x5, gbc.readMem(0xa4c5));
        // CB 05 02C1
        gbc.setState(0xca78, 0x4c60, 0xdc0, 0xd872, 0xf341, 0x1d00, 0x0, 0x0);
        gbc.writeMem(0xca78, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4c60, gbc.sp());
        EXPECT(0xca7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca78));
        EXPECT(0x5, gbc.readMem(0xca79));
        // CB 05 02C2
        gbc.setState(0x9c16, 0x9794, 0xd120, 0x695a, 0xb080, 0xfbd8, 0x0, 0x0);
        gbc.writeMem(0x9c16, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9794, gbc.sp());
        EXPECT(0x9c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c16));
        EXPECT(0x5, gbc.readMem(0x9c17));
        // CB 05 02C3
        gbc.setState(0x2162, 0x8a83, 0x52f0, 0xf826, 0x7240, 0xcf65, 0x1, 0x0);
        gbc.writeMem(0x2162, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8a83, gbc.sp());
        EXPECT(0x2164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02C4
        gbc.setState(0x56ef, 0xcdf1, 0x1010, 0xe36e, 0x78cc, 0xc558, 0x0, 0x1);
        gbc.writeMem(0x56ef, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcdf1, gbc.sp());
        EXPECT(0x56f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02C6
        gbc.setState(0x430, 0xb19a, 0x7e60, 0x46d7, 0xa49a, 0xa2e4, 0x0, 0x0);
        gbc.writeMem(0x430, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb19a, gbc.sp());
        EXPECT(0x432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02C7
        gbc.setState(0x9476, 0xcee7, 0xe5b0, 0xc3d7, 0x21, 0x6455, 0x1, 0x1);
        gbc.writeMem(0x9476, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcee7, gbc.sp());
        EXPECT(0x9478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9476));
        EXPECT(0x5, gbc.readMem(0x9477));
        // CB 05 02C8
        gbc.setState(0xd7d3, 0x926, 0xd50, 0xf2cd, 0x79b1, 0x4da1, 0x1, 0x0);
        gbc.writeMem(0xd7d3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x926, gbc.sp());
        EXPECT(0xd7d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d3));
        EXPECT(0x5, gbc.readMem(0xd7d4));
        // CB 05 02C9
        gbc.setState(0x8fed, 0xee97, 0x52b0, 0xe6ea, 0x3f0f, 0xd8dd, 0x0, 0x0);
        gbc.writeMem(0x8fed, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xee97, gbc.sp());
        EXPECT(0x8fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fed));
        EXPECT(0x5, gbc.readMem(0x8fee));
        // CB 05 02CA
        gbc.setState(0xbf7b, 0x3fbc, 0x6460, 0x7ffd, 0x9041, 0x8405, 0x1, 0x1);
        gbc.writeMem(0xbf7b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3fbc, gbc.sp());
        EXPECT(0xbf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7b));
        EXPECT(0x5, gbc.readMem(0xbf7c));
        // CB 05 02CB
        gbc.setState(0x7e9c, 0x978f, 0xc6b0, 0xdc1e, 0xe76f, 0xf32f, 0x0, 0x1);
        gbc.writeMem(0x7e9c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x978f, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02CC
        gbc.setState(0x985e, 0x8b3, 0xb050, 0x7746, 0xb75d, 0xd042, 0x0, 0x0);
        gbc.writeMem(0x985e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8b3, gbc.sp());
        EXPECT(0x9860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985e));
        EXPECT(0x5, gbc.readMem(0x985f));
        // CB 05 02CD
        gbc.setState(0x1cf6, 0xb47, 0xbda0, 0x5bc, 0x28ca, 0xbcb7, 0x0, 0x1);
        gbc.writeMem(0x1cf6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb47, gbc.sp());
        EXPECT(0x1cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02CF
        gbc.setState(0x58f, 0x543f, 0x720, 0x406c, 0x8fb2, 0xd941, 0x1, 0x1);
        gbc.writeMem(0x58f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x543f, gbc.sp());
        EXPECT(0x591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02D0
        gbc.setState(0xe996, 0xb704, 0x77d0, 0x3bee, 0x7f2c, 0x9549, 0x1, 0x0);
        gbc.writeMem(0xe996, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb704, gbc.sp());
        EXPECT(0xe998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe996));
        EXPECT(0x5, gbc.readMem(0xe997));
        // CB 05 02D1
        gbc.setState(0xd371, 0xe096, 0xc340, 0x39d6, 0xa2e3, 0x994e, 0x1, 0x1);
        gbc.writeMem(0xd371, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe096, gbc.sp());
        EXPECT(0xd373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd371));
        EXPECT(0x5, gbc.readMem(0xd372));
        // CB 05 02D2
        gbc.setState(0x761d, 0x6cce, 0x4150, 0x6d8e, 0x8ad4, 0x51ab, 0x0, 0x0);
        gbc.writeMem(0x761d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6cce, gbc.sp());
        EXPECT(0x761f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02D4
        gbc.setState(0x51f1, 0xde4b, 0xd7f0, 0xab10, 0x258f, 0x5a89, 0x0, 0x0);
        gbc.writeMem(0x51f1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xde4b, gbc.sp());
        EXPECT(0x51f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02D5
        gbc.setState(0x67b0, 0x38b4, 0x2310, 0x659d, 0xb5f6, 0x486f, 0x1, 0x1);
        gbc.writeMem(0x67b0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x38b4, gbc.sp());
        EXPECT(0x67b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02D6
        gbc.setState(0x6a1a, 0x8cfd, 0x1200, 0x9054, 0x1f2, 0xa86d, 0x1, 0x0);
        gbc.writeMem(0x6a1a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8cfd, gbc.sp());
        EXPECT(0x6a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02D7
        gbc.setState(0x49ee, 0xb09d, 0x3a0, 0x6295, 0x47bb, 0x910e, 0x0, 0x0);
        gbc.writeMem(0x49ee, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb09d, gbc.sp());
        EXPECT(0x49f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02D8
        gbc.setState(0xadf9, 0x5683, 0xa1e0, 0x10e6, 0x47d6, 0x4cf2, 0x0, 0x0);
        gbc.writeMem(0xadf9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5683, gbc.sp());
        EXPECT(0xadfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf9));
        EXPECT(0x5, gbc.readMem(0xadfa));
        // CB 05 02D9
        gbc.setState(0xdf7a, 0xbaf9, 0x1cd0, 0x17b6, 0x7e4, 0x2a76, 0x0, 0x1);
        gbc.writeMem(0xdf7a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbaf9, gbc.sp());
        EXPECT(0xdf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7a));
        EXPECT(0x5, gbc.readMem(0xdf7b));
        // CB 05 02DB
        gbc.setState(0xda02, 0x880a, 0x7360, 0x823d, 0xec99, 0xf0b6, 0x1, 0x1);
        gbc.writeMem(0xda02, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x880a, gbc.sp());
        EXPECT(0xda04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda02));
        EXPECT(0x5, gbc.readMem(0xda03));
        // CB 05 02DC
        gbc.setState(0xd15e, 0xaa57, 0x3b60, 0x5534, 0xe496, 0x9449, 0x1, 0x0);
        gbc.writeMem(0xd15e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaa57, gbc.sp());
        EXPECT(0xd160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15e));
        EXPECT(0x5, gbc.readMem(0xd15f));
        // CB 05 02DD
        gbc.setState(0x5cb7, 0x1c71, 0x4250, 0xdfa4, 0xe97f, 0xe5bd, 0x1, 0x1);
        gbc.writeMem(0x5cb7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1c71, gbc.sp());
        EXPECT(0x5cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02DF
        gbc.setState(0x5e16, 0xd6b5, 0x69c0, 0x33aa, 0xc05a, 0xf128, 0x0, 0x1);
        gbc.writeMem(0x5e16, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd6b5, gbc.sp());
        EXPECT(0x5e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02E0
        gbc.setState(0x774a, 0x5bd8, 0x10a0, 0x107c, 0xb43b, 0x3f3c, 0x1, 0x0);
        gbc.writeMem(0x774a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5bd8, gbc.sp());
        EXPECT(0x774c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02E2
        gbc.setState(0x32b9, 0x7098, 0x20d0, 0x6a1f, 0x5b06, 0xdc11, 0x1, 0x1);
        gbc.writeMem(0x32b9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7098, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02E3
        gbc.setState(0x810c, 0x397b, 0x2ca0, 0xd58f, 0xfae0, 0x5949, 0x1, 0x0);
        gbc.writeMem(0x810c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x397b, gbc.sp());
        EXPECT(0x810e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810c));
        EXPECT(0x5, gbc.readMem(0x810d));
        // CB 05 02E4
        gbc.setState(0x9a13, 0xcbf5, 0xeeb0, 0x7828, 0xa79d, 0xaccb, 0x0, 0x1);
        gbc.writeMem(0x9a13, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcbf5, gbc.sp());
        EXPECT(0x9a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a13));
        EXPECT(0x5, gbc.readMem(0x9a14));
        // CB 05 02E5
        gbc.setState(0x7d0a, 0xdf3f, 0x3c20, 0xe641, 0x9a0d, 0x94be, 0x0, 0x1);
        gbc.writeMem(0x7d0a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdf3f, gbc.sp());
        EXPECT(0x7d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02E6
        gbc.setState(0xba76, 0xb367, 0xbbd0, 0xa48a, 0x3ff6, 0xe6d0, 0x0, 0x0);
        gbc.writeMem(0xba76, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb367, gbc.sp());
        EXPECT(0xba78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba76));
        EXPECT(0x5, gbc.readMem(0xba77));
        // CB 05 02E7
        gbc.setState(0xd52f, 0x5738, 0x5730, 0x4b4c, 0xa8f3, 0xba00, 0x1, 0x0);
        gbc.writeMem(0xd52f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5738, gbc.sp());
        EXPECT(0xd531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd52f));
        EXPECT(0x5, gbc.readMem(0xd530));
        // CB 05 02E8
        gbc.setState(0x27f8, 0xd791, 0x5390, 0x34e7, 0x7902, 0x2748, 0x1, 0x1);
        gbc.writeMem(0x27f8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd791, gbc.sp());
        EXPECT(0x27fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02E9
        gbc.setState(0x13a2, 0xa69f, 0x2d80, 0xe693, 0xce4a, 0x7628, 0x0, 0x0);
        gbc.writeMem(0x13a2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa69f, gbc.sp());
        EXPECT(0x13a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02EA
        gbc.setState(0x1980, 0x7003, 0x3430, 0xdb18, 0x5ee6, 0x9fe0, 0x1, 0x1);
        gbc.writeMem(0x1980, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7003, gbc.sp());
        EXPECT(0x1982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02EB
        gbc.setState(0x6b0d, 0xe701, 0x9f90, 0xd414, 0x89b2, 0x49c8, 0x1, 0x1);
        gbc.writeMem(0x6b0d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe701, gbc.sp());
        EXPECT(0x6b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02EC
        gbc.setState(0xaacf, 0x1965, 0xb690, 0x5eb5, 0x83a1, 0x2766, 0x1, 0x1);
        gbc.writeMem(0xaacf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1965, gbc.sp());
        EXPECT(0xaad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaacf));
        EXPECT(0x5, gbc.readMem(0xaad0));
        // CB 05 02ED
        gbc.setState(0x25b2, 0x3465, 0x6ef0, 0xd364, 0x1e8, 0x4794, 0x0, 0x1);
        gbc.writeMem(0x25b2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3465, gbc.sp());
        EXPECT(0x25b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02EE
        gbc.setState(0x2f90, 0xbfbc, 0x7780, 0x7c99, 0x4a68, 0x2ff9, 0x1, 0x0);
        gbc.writeMem(0x2f90, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbfbc, gbc.sp());
        EXPECT(0x2f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02EF
        gbc.setState(0x91cf, 0xf023, 0x6840, 0x8214, 0xad6a, 0xb448, 0x1, 0x0);
        gbc.writeMem(0x91cf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf023, gbc.sp());
        EXPECT(0x91d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cf));
        EXPECT(0x5, gbc.readMem(0x91d0));
        // CB 05 02F0
        gbc.setState(0xa05c, 0x21ea, 0x1aa0, 0x9224, 0xf1a, 0x7056, 0x0, 0x1);
        gbc.writeMem(0xa05c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x21ea, gbc.sp());
        EXPECT(0xa05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05c));
        EXPECT(0x5, gbc.readMem(0xa05d));
        // CB 05 02F1
        gbc.setState(0xa5ff, 0xf8c6, 0xe2e0, 0xde11, 0x91f8, 0x5e12, 0x0, 0x1);
        gbc.writeMem(0xa5ff, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf8c6, gbc.sp());
        EXPECT(0xa601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ff));
        EXPECT(0x5, gbc.readMem(0xa600));
        // CB 05 02F2
        gbc.setState(0x88f4, 0x2b44, 0x2ef0, 0x780, 0xc74e, 0xdeeb, 0x0, 0x1);
        gbc.writeMem(0x88f4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2b44, gbc.sp());
        EXPECT(0x88f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f4));
        EXPECT(0x5, gbc.readMem(0x88f5));
        // CB 05 02F3
        gbc.setState(0xabe0, 0x31e1, 0x4260, 0xe9cb, 0xee84, 0x3050, 0x0, 0x0);
        gbc.writeMem(0xabe0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x31e1, gbc.sp());
        EXPECT(0xabe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe0));
        EXPECT(0x5, gbc.readMem(0xabe1));
        // CB 05 02F4
        gbc.setState(0x483b, 0x52c9, 0xeb60, 0xfe9, 0xf39f, 0xe983, 0x1, 0x1);
        gbc.writeMem(0x483b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x52c9, gbc.sp());
        EXPECT(0x483d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02F5
        gbc.setState(0xb978, 0xe01b, 0x8c30, 0xc5c7, 0x1b5c, 0x2d5d, 0x0, 0x0);
        gbc.writeMem(0xb978, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe01b, gbc.sp());
        EXPECT(0xb97a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb978));
        EXPECT(0x5, gbc.readMem(0xb979));
        // CB 05 02F6
        gbc.setState(0x2480, 0xe54e, 0x86b0, 0xa4cc, 0xb4f0, 0x4562, 0x1, 0x1);
        gbc.writeMem(0x2480, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe54e, gbc.sp());
        EXPECT(0x2482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02F7
        gbc.setState(0x2474, 0xc5a9, 0x9ec0, 0x47de, 0xc1e9, 0xb528, 0x0, 0x0);
        gbc.writeMem(0x2474, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc5a9, gbc.sp());
        EXPECT(0x2476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 02F8
        gbc.setState(0xd5a1, 0x4027, 0x1bf0, 0xd171, 0xfce0, 0xae1f, 0x1, 0x0);
        gbc.writeMem(0xd5a1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4027, gbc.sp());
        EXPECT(0xd5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a1));
        EXPECT(0x5, gbc.readMem(0xd5a2));
        // CB 05 02F9
        gbc.setState(0xa6ad, 0xed8f, 0x9c0, 0xf6da, 0xd28d, 0xb752, 0x0, 0x1);
        gbc.writeMem(0xa6ad, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xed8f, gbc.sp());
        EXPECT(0xa6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ad));
        EXPECT(0x5, gbc.readMem(0xa6ae));
        // CB 05 02FA
        gbc.setState(0xc80d, 0xa865, 0xf560, 0x9ee6, 0xe352, 0x4277, 0x0, 0x0);
        gbc.writeMem(0xc80d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa865, gbc.sp());
        EXPECT(0xc80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80d));
        EXPECT(0x5, gbc.readMem(0xc80e));
        // CB 05 02FD
        gbc.setState(0xa01d, 0xfd41, 0x6120, 0x9d7, 0xf96e, 0x2069, 0x0, 0x1);
        gbc.writeMem(0xa01d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfd41, gbc.sp());
        EXPECT(0xa01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01d));
        EXPECT(0x5, gbc.readMem(0xa01e));
        // CB 05 02FE
        gbc.setState(0x70af, 0x5521, 0xa4d0, 0x7632, 0x39e0, 0x319d, 0x1, 0x0);
        gbc.writeMem(0x70af, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5521, gbc.sp());
        EXPECT(0x70b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 02FF
        gbc.setState(0x692, 0xc080, 0x7980, 0x7518, 0x44b3, 0xd45f, 0x1, 0x1);
        gbc.writeMem(0x692, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc080, gbc.sp());
        EXPECT(0x694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0300
        gbc.setState(0xbad, 0x49c6, 0x28a0, 0x8a6, 0x8714, 0x2891, 0x0, 0x1);
        gbc.writeMem(0xbad, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x49c6, gbc.sp());
        EXPECT(0xbaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0301
        gbc.setState(0x4760, 0x4045, 0xc210, 0xef94, 0x4c15, 0x2581, 0x0, 0x1);
        gbc.writeMem(0x4760, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4045, gbc.sp());
        EXPECT(0x4762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0302
        gbc.setState(0x4098, 0x186d, 0x7aa0, 0x6fbc, 0x534a, 0xc229, 0x0, 0x1);
        gbc.writeMem(0x4098, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x186d, gbc.sp());
        EXPECT(0x409a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0303
        gbc.setState(0x1fc9, 0x4937, 0xc690, 0x4f30, 0x7feb, 0xc3f3, 0x0, 0x1);
        gbc.writeMem(0x1fc9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4937, gbc.sp());
        EXPECT(0x1fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0304
        gbc.setState(0x8897, 0xf212, 0x6490, 0xcbf4, 0x2fbf, 0x6130, 0x1, 0x1);
        gbc.writeMem(0x8897, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf212, gbc.sp());
        EXPECT(0x8899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8897));
        EXPECT(0x5, gbc.readMem(0x8898));
        // CB 05 0305
        gbc.setState(0xb256, 0x3529, 0x2aa0, 0xddfe, 0xae19, 0xcb2, 0x0, 0x1);
        gbc.writeMem(0xb256, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3529, gbc.sp());
        EXPECT(0xb258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb256));
        EXPECT(0x5, gbc.readMem(0xb257));
        // CB 05 0306
        gbc.setState(0xc5e9, 0x7286, 0x1a50, 0xae3e, 0xe92a, 0xb07d, 0x1, 0x0);
        gbc.writeMem(0xc5e9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7286, gbc.sp());
        EXPECT(0xc5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e9));
        EXPECT(0x5, gbc.readMem(0xc5ea));
        // CB 05 0307
        gbc.setState(0xa2a2, 0xc7cb, 0x150, 0xceb4, 0x9cdd, 0x6e01, 0x1, 0x0);
        gbc.writeMem(0xa2a2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc7cb, gbc.sp());
        EXPECT(0xa2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a2));
        EXPECT(0x5, gbc.readMem(0xa2a3));
        // CB 05 0308
        gbc.setState(0xe48e, 0xdb52, 0xcc30, 0xc6b5, 0xfc9e, 0x601c, 0x0, 0x0);
        gbc.writeMem(0xe48e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdb52, gbc.sp());
        EXPECT(0xe490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48e));
        EXPECT(0x5, gbc.readMem(0xe48f));
        // CB 05 0309
        gbc.setState(0x7da8, 0xa514, 0x71d0, 0x6980, 0xef85, 0x430e, 0x0, 0x1);
        gbc.writeMem(0x7da8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa514, gbc.sp());
        EXPECT(0x7daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 030A
        gbc.setState(0xd80d, 0x77b5, 0x7060, 0xf2b, 0xe8f1, 0x93ba, 0x1, 0x0);
        gbc.writeMem(0xd80d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x77b5, gbc.sp());
        EXPECT(0xd80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80d));
        EXPECT(0x5, gbc.readMem(0xd80e));
        // CB 05 030B
        gbc.setState(0xe30e, 0xef6e, 0x7af0, 0xa4a4, 0x29fe, 0x6708, 0x1, 0x1);
        gbc.writeMem(0xe30e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xef6e, gbc.sp());
        EXPECT(0xe310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe30e));
        EXPECT(0x5, gbc.readMem(0xe30f));
        // CB 05 030C
        gbc.setState(0xbf92, 0xd10e, 0xaa80, 0x3601, 0x31f0, 0xb4c7, 0x1, 0x1);
        gbc.writeMem(0xbf92, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd10e, gbc.sp());
        EXPECT(0xbf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf92));
        EXPECT(0x5, gbc.readMem(0xbf93));
        // CB 05 030D
        gbc.setState(0x6eaf, 0xa9e8, 0xa5a0, 0x2e1e, 0xc28f, 0x2463, 0x0, 0x1);
        gbc.writeMem(0x6eaf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa9e8, gbc.sp());
        EXPECT(0x6eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 030E
        gbc.setState(0xcda9, 0x8a8b, 0xbc40, 0x4395, 0xd7a3, 0x1b14, 0x1, 0x0);
        gbc.writeMem(0xcda9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8a8b, gbc.sp());
        EXPECT(0xcdab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda9));
        EXPECT(0x5, gbc.readMem(0xcdaa));
        // CB 05 030F
        gbc.setState(0x1bd, 0xfc0c, 0xacd0, 0xb9ea, 0xa886, 0x9e42, 0x0, 0x1);
        gbc.writeMem(0x1bd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfc0c, gbc.sp());
        EXPECT(0x1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0311
        gbc.setState(0x4134, 0x6d7f, 0xfc40, 0x26d0, 0x2d48, 0xb866, 0x1, 0x1);
        gbc.writeMem(0x4134, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6d7f, gbc.sp());
        EXPECT(0x4136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0312
        gbc.setState(0x789c, 0x6da5, 0xe150, 0x7c1a, 0xeff6, 0xb8c5, 0x0, 0x1);
        gbc.writeMem(0x789c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6da5, gbc.sp());
        EXPECT(0x789e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0313
        gbc.setState(0x9f33, 0x66bb, 0x3ee0, 0x10fb, 0x14d2, 0x25bc, 0x0, 0x0);
        gbc.writeMem(0x9f33, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x66bb, gbc.sp());
        EXPECT(0x9f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f33));
        EXPECT(0x5, gbc.readMem(0x9f34));
        // CB 05 0314
        gbc.setState(0xc06a, 0x55fb, 0xea60, 0xa289, 0x80dd, 0x8733, 0x0, 0x1);
        gbc.writeMem(0xc06a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x55fb, gbc.sp());
        EXPECT(0xc06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06a));
        EXPECT(0x5, gbc.readMem(0xc06b));
        // CB 05 0315
        gbc.setState(0x3fa6, 0x3687, 0x23b0, 0xe812, 0x53f4, 0x44e, 0x0, 0x0);
        gbc.writeMem(0x3fa6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3687, gbc.sp());
        EXPECT(0x3fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0317
        gbc.setState(0xa563, 0x70c5, 0x8ce0, 0xa8c0, 0x57b5, 0x8f5d, 0x1, 0x1);
        gbc.writeMem(0xa563, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x70c5, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa563));
        EXPECT(0x5, gbc.readMem(0xa564));
        // CB 05 0318
        gbc.setState(0x515a, 0x57bd, 0x8470, 0x1fff, 0xf52c, 0xbd64, 0x1, 0x0);
        gbc.writeMem(0x515a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x57bd, gbc.sp());
        EXPECT(0x515c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0319
        gbc.setState(0xccc, 0xad47, 0x4470, 0xedbb, 0x85bc, 0x3b75, 0x0, 0x0);
        gbc.writeMem(0xccc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xad47, gbc.sp());
        EXPECT(0xcce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 031A
        gbc.setState(0x50e, 0x840f, 0xd8d0, 0x5244, 0xd6f, 0xf0f2, 0x1, 0x1);
        gbc.writeMem(0x50e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x840f, gbc.sp());
        EXPECT(0x510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 031C
        gbc.setState(0x694c, 0x3e64, 0x6890, 0x46a1, 0x80da, 0x7080, 0x0, 0x1);
        gbc.writeMem(0x694c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3e64, gbc.sp());
        EXPECT(0x694e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 031D
        gbc.setState(0x64e1, 0xabd4, 0x80e0, 0x339c, 0xe043, 0x1345, 0x0, 0x0);
        gbc.writeMem(0x64e1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xabd4, gbc.sp());
        EXPECT(0x64e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 031E
        gbc.setState(0xeb97, 0xcaa4, 0xbc70, 0xc258, 0x835c, 0x9d52, 0x0, 0x0);
        gbc.writeMem(0xeb97, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcaa4, gbc.sp());
        EXPECT(0xeb99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb97));
        EXPECT(0x5, gbc.readMem(0xeb98));
        // CB 05 031F
        gbc.setState(0x5db8, 0x9959, 0xf300, 0x72a1, 0xcc0, 0x6b35, 0x0, 0x0);
        gbc.writeMem(0x5db8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9959, gbc.sp());
        EXPECT(0x5dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0320
        gbc.setState(0x2a40, 0x61b8, 0x2a20, 0x9c4f, 0x50aa, 0xe841, 0x0, 0x0);
        gbc.writeMem(0x2a40, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x61b8, gbc.sp());
        EXPECT(0x2a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0321
        gbc.setState(0x6f03, 0xc9cb, 0x7d60, 0x406c, 0x1f33, 0x734, 0x1, 0x1);
        gbc.writeMem(0x6f03, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc9cb, gbc.sp());
        EXPECT(0x6f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0322
        gbc.setState(0x961c, 0xc5d2, 0xb870, 0x71e4, 0x2e4d, 0xa178, 0x1, 0x1);
        gbc.writeMem(0x961c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc5d2, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961c));
        EXPECT(0x5, gbc.readMem(0x961d));
        // CB 05 0323
        gbc.setState(0x73d4, 0x2c4d, 0xdb40, 0x1e2f, 0x934d, 0xa29a, 0x1, 0x1);
        gbc.writeMem(0x73d4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2c4d, gbc.sp());
        EXPECT(0x73d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0324
        gbc.setState(0x2502, 0x7e5a, 0x7fe0, 0x17e3, 0x9ab3, 0x2855, 0x1, 0x1);
        gbc.writeMem(0x2502, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7e5a, gbc.sp());
        EXPECT(0x2504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0325
        gbc.setState(0xda14, 0xa7c9, 0x15f0, 0xb54d, 0x916a, 0x974d, 0x0, 0x0);
        gbc.writeMem(0xda14, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa7c9, gbc.sp());
        EXPECT(0xda16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda14));
        EXPECT(0x5, gbc.readMem(0xda15));
        // CB 05 0326
        gbc.setState(0x1921, 0x2f2e, 0x1720, 0xde0f, 0x2fe7, 0x8cf2, 0x1, 0x0);
        gbc.writeMem(0x1921, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2f2e, gbc.sp());
        EXPECT(0x1923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0327
        gbc.setState(0xd523, 0x78e0, 0x7a20, 0x973f, 0xc5e8, 0xddc1, 0x1, 0x0);
        gbc.writeMem(0xd523, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x78e0, gbc.sp());
        EXPECT(0xd525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd523));
        EXPECT(0x5, gbc.readMem(0xd524));
        // CB 05 0328
        gbc.setState(0xce3c, 0x2cab, 0xd770, 0x6345, 0xbd3f, 0x75cf, 0x1, 0x1);
        gbc.writeMem(0xce3c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2cab, gbc.sp());
        EXPECT(0xce3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3c));
        EXPECT(0x5, gbc.readMem(0xce3d));
        // CB 05 0329
        gbc.setState(0x7435, 0x6fea, 0xad40, 0x368a, 0x98a4, 0xaed7, 0x0, 0x0);
        gbc.writeMem(0x7435, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6fea, gbc.sp());
        EXPECT(0x7437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 032A
        gbc.setState(0x7143, 0x68f1, 0x12d0, 0xcc6c, 0xecf3, 0x6e20, 0x0, 0x0);
        gbc.writeMem(0x7143, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x68f1, gbc.sp());
        EXPECT(0x7145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 032B
        gbc.setState(0x9b90, 0xb720, 0xf300, 0x9d35, 0x607d, 0x22f7, 0x1, 0x1);
        gbc.writeMem(0x9b90, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb720, gbc.sp());
        EXPECT(0x9b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b90));
        EXPECT(0x5, gbc.readMem(0x9b91));
        // CB 05 032C
        gbc.setState(0x8727, 0xa925, 0x8770, 0x7124, 0xdca2, 0x3554, 0x0, 0x0);
        gbc.writeMem(0x8727, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa925, gbc.sp());
        EXPECT(0x8729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8727));
        EXPECT(0x5, gbc.readMem(0x8728));
        // CB 05 032D
        gbc.setState(0xb78f, 0xf9ad, 0x3280, 0x5b17, 0x447b, 0xc513, 0x0, 0x1);
        gbc.writeMem(0xb78f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf9ad, gbc.sp());
        EXPECT(0xb791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78f));
        EXPECT(0x5, gbc.readMem(0xb790));
        // CB 05 032E
        gbc.setState(0xe32, 0xada7, 0xb780, 0xa4a3, 0xab9c, 0x5882, 0x0, 0x0);
        gbc.writeMem(0xe32, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xada7, gbc.sp());
        EXPECT(0xe34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 032F
        gbc.setState(0x6e2a, 0x175, 0x3510, 0xb842, 0xa190, 0x1288, 0x1, 0x1);
        gbc.writeMem(0x6e2a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x175, gbc.sp());
        EXPECT(0x6e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0330
        gbc.setState(0x9c49, 0x1eb8, 0xd120, 0x420f, 0xaeed, 0x1515, 0x0, 0x0);
        gbc.writeMem(0x9c49, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1eb8, gbc.sp());
        EXPECT(0x9c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c49));
        EXPECT(0x5, gbc.readMem(0x9c4a));
        // CB 05 0331
        gbc.setState(0xafb3, 0x4b62, 0x9950, 0xd0ed, 0xb462, 0xd599, 0x0, 0x1);
        gbc.writeMem(0xafb3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4b62, gbc.sp());
        EXPECT(0xafb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb3));
        EXPECT(0x5, gbc.readMem(0xafb4));
        // CB 05 0332
        gbc.setState(0x3220, 0xa32f, 0x43b0, 0xe249, 0xcfe, 0xc898, 0x0, 0x0);
        gbc.writeMem(0x3220, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa32f, gbc.sp());
        EXPECT(0x3222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0333
        gbc.setState(0xee6b, 0xcfab, 0xae0, 0x4417, 0x1e6f, 0xa536, 0x0, 0x1);
        gbc.writeMem(0xee6b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcfab, gbc.sp());
        EXPECT(0xee6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6b));
        EXPECT(0x5, gbc.readMem(0xee6c));
        // CB 05 0334
        gbc.setState(0x1b48, 0x805b, 0x9a10, 0xf25f, 0x4aee, 0x2933, 0x0, 0x1);
        gbc.writeMem(0x1b48, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x805b, gbc.sp());
        EXPECT(0x1b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0335
        gbc.setState(0x7b26, 0x75b1, 0x12a0, 0x962, 0xedb5, 0xdb0f, 0x0, 0x1);
        gbc.writeMem(0x7b26, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x75b1, gbc.sp());
        EXPECT(0x7b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0336
        gbc.setState(0x50c1, 0x1e14, 0x1810, 0xc807, 0x7824, 0x9d86, 0x0, 0x1);
        gbc.writeMem(0x50c1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1e14, gbc.sp());
        EXPECT(0x50c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0337
        gbc.setState(0x6d77, 0x6921, 0x3e0, 0xc10d, 0x8f4, 0x484d, 0x1, 0x1);
        gbc.writeMem(0x6d77, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6921, gbc.sp());
        EXPECT(0x6d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0338
        gbc.setState(0x8f47, 0xfd88, 0x230, 0xe11e, 0xa1ee, 0x8cfc, 0x0, 0x1);
        gbc.writeMem(0x8f47, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfd88, gbc.sp());
        EXPECT(0x8f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f47));
        EXPECT(0x5, gbc.readMem(0x8f48));
        // CB 05 0339
        gbc.setState(0x7c3b, 0x1a9b, 0x17d0, 0x7889, 0x5629, 0x6937, 0x1, 0x1);
        gbc.writeMem(0x7c3b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1a9b, gbc.sp());
        EXPECT(0x7c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 033A
        gbc.setState(0xd630, 0x49b, 0x7a60, 0xc108, 0x9214, 0x485d, 0x1, 0x1);
        gbc.writeMem(0xd630, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x49b, gbc.sp());
        EXPECT(0xd632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd630));
        EXPECT(0x5, gbc.readMem(0xd631));
        // CB 05 033B
        gbc.setState(0xd2d, 0x434b, 0xbcd0, 0x4466, 0x1a30, 0x1ec2, 0x1, 0x1);
        gbc.writeMem(0xd2d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x434b, gbc.sp());
        EXPECT(0xd2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 033C
        gbc.setState(0x6ce, 0x778f, 0x46e0, 0x791b, 0x75ef, 0x2d5c, 0x1, 0x1);
        gbc.writeMem(0x6ce, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x778f, gbc.sp());
        EXPECT(0x6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 033D
        gbc.setState(0x1b3f, 0x3f0a, 0x1af0, 0xf77f, 0xc278, 0x341a, 0x0, 0x0);
        gbc.writeMem(0x1b3f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3f0a, gbc.sp());
        EXPECT(0x1b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 033E
        gbc.setState(0x67b4, 0x8c97, 0xac0, 0x9b79, 0x1faf, 0x1c3f, 0x1, 0x1);
        gbc.writeMem(0x67b4, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8c97, gbc.sp());
        EXPECT(0x67b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 033F
        gbc.setState(0x8b30, 0x82d5, 0x4ff0, 0x43b0, 0x642, 0x3140, 0x0, 0x1);
        gbc.writeMem(0x8b30, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0x8b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b30));
        EXPECT(0x5, gbc.readMem(0x8b31));
        // CB 05 0340
        gbc.setState(0x21e0, 0xd059, 0xbd80, 0x5bf7, 0x9854, 0x1160, 0x1, 0x0);
        gbc.writeMem(0x21e0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd059, gbc.sp());
        EXPECT(0x21e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0341
        gbc.setState(0xb208, 0xe65d, 0xc7e0, 0x70af, 0x6bf2, 0x7dec, 0x0, 0x1);
        gbc.writeMem(0xb208, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe65d, gbc.sp());
        EXPECT(0xb20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb208));
        EXPECT(0x5, gbc.readMem(0xb209));
        // CB 05 0342
        gbc.setState(0x4788, 0xd93d, 0xc820, 0x33c9, 0x7c64, 0x2ded, 0x1, 0x0);
        gbc.writeMem(0x4788, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd93d, gbc.sp());
        EXPECT(0x478a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0343
        gbc.setState(0x8936, 0x866a, 0x8730, 0xfdab, 0x4c77, 0x1cba, 0x0, 0x1);
        gbc.writeMem(0x8936, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x866a, gbc.sp());
        EXPECT(0x8938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8936));
        EXPECT(0x5, gbc.readMem(0x8937));
        // CB 05 0344
        gbc.setState(0x216f, 0x4391, 0x8ec0, 0x877f, 0x983d, 0xb560, 0x1, 0x0);
        gbc.writeMem(0x216f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4391, gbc.sp());
        EXPECT(0x2171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0346
        gbc.setState(0x10a1, 0xbae8, 0x1cd0, 0xb224, 0x4e2d, 0x6455, 0x1, 0x1);
        gbc.writeMem(0x10a1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbae8, gbc.sp());
        EXPECT(0x10a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0347
        gbc.setState(0x1ce2, 0xd26f, 0xc6c0, 0x5e06, 0xaab2, 0x911, 0x0, 0x1);
        gbc.writeMem(0x1ce2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd26f, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0348
        gbc.setState(0x1184, 0xdcb1, 0x5e50, 0xf1fb, 0xaf68, 0x16fd, 0x1, 0x1);
        gbc.writeMem(0x1184, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdcb1, gbc.sp());
        EXPECT(0x1186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0349
        gbc.setState(0xd948, 0xe093, 0x24a0, 0xdf16, 0xa0fe, 0xdcfa, 0x0, 0x1);
        gbc.writeMem(0xd948, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe093, gbc.sp());
        EXPECT(0xd94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd948));
        EXPECT(0x5, gbc.readMem(0xd949));
        // CB 05 034A
        gbc.setState(0x4d12, 0xc5e9, 0x8e20, 0x6248, 0x7ae8, 0x8a02, 0x0, 0x0);
        gbc.writeMem(0x4d12, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc5e9, gbc.sp());
        EXPECT(0x4d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 034B
        gbc.setState(0x1aee, 0x18bb, 0xe5b0, 0xd311, 0x1cee, 0x258f, 0x0, 0x1);
        gbc.writeMem(0x1aee, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x18bb, gbc.sp());
        EXPECT(0x1af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 034C
        gbc.setState(0x76c9, 0x33a8, 0x1120, 0x40e6, 0x9ff0, 0xa8b8, 0x1, 0x1);
        gbc.writeMem(0x76c9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x33a8, gbc.sp());
        EXPECT(0x76cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 034D
        gbc.setState(0x4e31, 0x3a97, 0x1f70, 0x1ba, 0x2cee, 0x613a, 0x1, 0x0);
        gbc.writeMem(0x4e31, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3a97, gbc.sp());
        EXPECT(0x4e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 034E
        gbc.setState(0xbc2b, 0xd134, 0x1680, 0x9c7e, 0xd018, 0x2a56, 0x0, 0x1);
        gbc.writeMem(0xbc2b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd134, gbc.sp());
        EXPECT(0xbc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2b));
        EXPECT(0x5, gbc.readMem(0xbc2c));
        // CB 05 034F
        gbc.setState(0x58fa, 0x6467, 0x8490, 0xbc9, 0xf298, 0x286b, 0x1, 0x1);
        gbc.writeMem(0x58fa, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6467, gbc.sp());
        EXPECT(0x58fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0350
        gbc.setState(0x5f89, 0x205a, 0x8fd0, 0xa5ee, 0x616b, 0x23f5, 0x1, 0x1);
        gbc.writeMem(0x5f89, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x205a, gbc.sp());
        EXPECT(0x5f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0351
        gbc.setState(0xa617, 0x2de6, 0x97f0, 0xd905, 0xa203, 0x411f, 0x1, 0x1);
        gbc.writeMem(0xa617, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2de6, gbc.sp());
        EXPECT(0xa619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa617));
        EXPECT(0x5, gbc.readMem(0xa618));
        // CB 05 0352
        gbc.setState(0xabf1, 0x68fb, 0x1920, 0xb86, 0x669d, 0x3245, 0x0, 0x0);
        gbc.writeMem(0xabf1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x68fb, gbc.sp());
        EXPECT(0xabf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf1));
        EXPECT(0x5, gbc.readMem(0xabf2));
        // CB 05 0354
        gbc.setState(0x7684, 0xbdf, 0x8370, 0x1af2, 0xa588, 0xd86e, 0x1, 0x0);
        gbc.writeMem(0x7684, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbdf, gbc.sp());
        EXPECT(0x7686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0355
        gbc.setState(0xe33b, 0x2c04, 0x10e0, 0x2805, 0xf873, 0xb3dc, 0x1, 0x1);
        gbc.writeMem(0xe33b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2c04, gbc.sp());
        EXPECT(0xe33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33b));
        EXPECT(0x5, gbc.readMem(0xe33c));
        // CB 05 0356
        gbc.setState(0x2a6f, 0xaca7, 0x8a40, 0x76a5, 0x1d07, 0x73b2, 0x1, 0x0);
        gbc.writeMem(0x2a6f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xaca7, gbc.sp());
        EXPECT(0x2a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0357
        gbc.setState(0x14ea, 0x3f8c, 0x50, 0xb91a, 0x470f, 0x80e5, 0x0, 0x0);
        gbc.writeMem(0x14ea, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3f8c, gbc.sp());
        EXPECT(0x14ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0358
        gbc.setState(0xeb85, 0xd5de, 0xa0e0, 0xcc62, 0x4cee, 0xcb6d, 0x1, 0x1);
        gbc.writeMem(0xeb85, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd5de, gbc.sp());
        EXPECT(0xeb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb85));
        EXPECT(0x5, gbc.readMem(0xeb86));
        // CB 05 0359
        gbc.setState(0xcd1a, 0x9f3b, 0x58c0, 0xd930, 0x8fd3, 0x721f, 0x0, 0x1);
        gbc.writeMem(0xcd1a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9f3b, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1a));
        EXPECT(0x5, gbc.readMem(0xcd1b));
        // CB 05 035A
        gbc.setState(0x9a79, 0x203f, 0x7ea0, 0xfa49, 0x581e, 0x5589, 0x0, 0x0);
        gbc.writeMem(0x9a79, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x203f, gbc.sp());
        EXPECT(0x9a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a79));
        EXPECT(0x5, gbc.readMem(0x9a7a));
        // CB 05 035B
        gbc.setState(0xc92d, 0x8a09, 0x58a0, 0xb457, 0x6ba4, 0xe53f, 0x0, 0x1);
        gbc.writeMem(0xc92d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8a09, gbc.sp());
        EXPECT(0xc92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92d));
        EXPECT(0x5, gbc.readMem(0xc92e));
        // CB 05 035C
        gbc.setState(0x6072, 0x50b0, 0x5e0, 0x3924, 0x5f5b, 0x6526, 0x0, 0x0);
        gbc.writeMem(0x6072, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x50b0, gbc.sp());
        EXPECT(0x6074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 035D
        gbc.setState(0x15e9, 0xf840, 0x3780, 0x75b6, 0x7911, 0xff5a, 0x0, 0x1);
        gbc.writeMem(0x15e9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf840, gbc.sp());
        EXPECT(0x15eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 035E
        gbc.setState(0xbef3, 0x25fd, 0x3020, 0x6c62, 0xe44b, 0xe25a, 0x1, 0x1);
        gbc.writeMem(0xbef3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x25fd, gbc.sp());
        EXPECT(0xbef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef3));
        EXPECT(0x5, gbc.readMem(0xbef4));
        // CB 05 035F
        gbc.setState(0xdf, 0xe104, 0xe3c0, 0x2559, 0xc796, 0xf350, 0x1, 0x0);
        gbc.writeMem(0xdf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe104, gbc.sp());
        EXPECT(0xe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0360
        gbc.setState(0x6285, 0x5ea, 0x4020, 0x3546, 0xd8e8, 0x8ed, 0x0, 0x0);
        gbc.writeMem(0x6285, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5ea, gbc.sp());
        EXPECT(0x6287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0361
        gbc.setState(0x7e25, 0x5b6f, 0xc7a0, 0xba67, 0xf078, 0xdb1, 0x0, 0x0);
        gbc.writeMem(0x7e25, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5b6f, gbc.sp());
        EXPECT(0x7e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0362
        gbc.setState(0x42e8, 0x6474, 0x69f0, 0xfcad, 0x7325, 0x96b0, 0x1, 0x1);
        gbc.writeMem(0x42e8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6474, gbc.sp());
        EXPECT(0x42ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0363
        gbc.setState(0x486f, 0x350b, 0xbe30, 0x6f36, 0xf9c, 0x739f, 0x1, 0x1);
        gbc.writeMem(0x486f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x350b, gbc.sp());
        EXPECT(0x4871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0364
        gbc.setState(0x3eb3, 0xa0a4, 0x3360, 0x861, 0xb0b5, 0xdbfd, 0x0, 0x0);
        gbc.writeMem(0x3eb3, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa0a4, gbc.sp());
        EXPECT(0x3eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0365
        gbc.setState(0xba02, 0xab16, 0xc330, 0x82b5, 0xa8f6, 0x6787, 0x1, 0x1);
        gbc.writeMem(0xba02, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xab16, gbc.sp());
        EXPECT(0xba04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba02));
        EXPECT(0x5, gbc.readMem(0xba03));
        // CB 05 0366
        gbc.setState(0x2e3a, 0x243d, 0xcdf0, 0x346a, 0x6744, 0x28ee, 0x1, 0x0);
        gbc.writeMem(0x2e3a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x243d, gbc.sp());
        EXPECT(0x2e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0367
        gbc.setState(0xdd94, 0xff2c, 0x1e0, 0xd5c2, 0xff6, 0xabab, 0x0, 0x0);
        gbc.writeMem(0xdd94, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xff2c, gbc.sp());
        EXPECT(0xdd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd94));
        EXPECT(0x5, gbc.readMem(0xdd95));
        // CB 05 0368
        gbc.setState(0x5384, 0xfc9b, 0x47f0, 0x70fa, 0xd09, 0x70cc, 0x1, 0x1);
        gbc.writeMem(0x5384, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfc9b, gbc.sp());
        EXPECT(0x5386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0369
        gbc.setState(0x8c91, 0xe54e, 0x4990, 0x4d25, 0xce9f, 0x75b9, 0x1, 0x1);
        gbc.writeMem(0x8c91, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe54e, gbc.sp());
        EXPECT(0x8c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c91));
        EXPECT(0x5, gbc.readMem(0x8c92));
        // CB 05 036A
        gbc.setState(0xc56e, 0xccaa, 0xd450, 0xeb02, 0xc5f9, 0xb38f, 0x1, 0x0);
        gbc.writeMem(0xc56e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xccaa, gbc.sp());
        EXPECT(0xc570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56e));
        EXPECT(0x5, gbc.readMem(0xc56f));
        // CB 05 036B
        gbc.setState(0x880b, 0xf545, 0xe090, 0xba0e, 0xc740, 0xf1d0, 0x0, 0x1);
        gbc.writeMem(0x880b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf545, gbc.sp());
        EXPECT(0x880d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880b));
        EXPECT(0x5, gbc.readMem(0x880c));
        // CB 05 036C
        gbc.setState(0x8a72, 0xd972, 0xe6b0, 0x3b7f, 0xc6c0, 0x4f41, 0x1, 0x1);
        gbc.writeMem(0x8a72, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd972, gbc.sp());
        EXPECT(0x8a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a72));
        EXPECT(0x5, gbc.readMem(0x8a73));
        // CB 05 036D
        gbc.setState(0x3640, 0xfe1a, 0x43a0, 0xe6b, 0xc8c3, 0x1121, 0x0, 0x1);
        gbc.writeMem(0x3640, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfe1a, gbc.sp());
        EXPECT(0x3642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 036E
        gbc.setState(0x8e52, 0x156e, 0x5010, 0x751a, 0xccc, 0xe2d9, 0x0, 0x1);
        gbc.writeMem(0x8e52, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x156e, gbc.sp());
        EXPECT(0x8e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e52));
        EXPECT(0x5, gbc.readMem(0x8e53));
        // CB 05 036F
        gbc.setState(0xa14d, 0x4fc4, 0xe620, 0x13fd, 0xd725, 0x430a, 0x1, 0x0);
        gbc.writeMem(0xa14d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4fc4, gbc.sp());
        EXPECT(0xa14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14d));
        EXPECT(0x5, gbc.readMem(0xa14e));
        // CB 05 0370
        gbc.setState(0x72b8, 0x5ecd, 0xf330, 0x7cf4, 0x64d6, 0xd5da, 0x1, 0x0);
        gbc.writeMem(0x72b8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5ecd, gbc.sp());
        EXPECT(0x72ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0371
        gbc.setState(0x32d0, 0xd099, 0x7ff0, 0x6470, 0xf75e, 0xb203, 0x1, 0x0);
        gbc.writeMem(0x32d0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd099, gbc.sp());
        EXPECT(0x32d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0372
        gbc.setState(0x17b5, 0xf2d4, 0xea50, 0xf635, 0x1542, 0x6fb0, 0x1, 0x0);
        gbc.writeMem(0x17b5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf2d4, gbc.sp());
        EXPECT(0x17b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0373
        gbc.setState(0xb252, 0x6e5f, 0x2890, 0x1321, 0x5425, 0xdd03, 0x1, 0x1);
        gbc.writeMem(0xb252, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6e5f, gbc.sp());
        EXPECT(0xb254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb252));
        EXPECT(0x5, gbc.readMem(0xb253));
        // CB 05 0374
        gbc.setState(0x6c78, 0xa3ea, 0x94f0, 0x5430, 0xc833, 0x3b8a, 0x0, 0x1);
        gbc.writeMem(0x6c78, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa3ea, gbc.sp());
        EXPECT(0x6c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0375
        gbc.setState(0xcaaf, 0x71b5, 0x4bf0, 0x8bce, 0x9bdf, 0x55f, 0x1, 0x0);
        gbc.writeMem(0xcaaf, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x71b5, gbc.sp());
        EXPECT(0xcab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaaf));
        EXPECT(0x5, gbc.readMem(0xcab0));
        // CB 05 0377
        gbc.setState(0xaf8f, 0xf57f, 0xdf20, 0x27df, 0xa287, 0x9f1d, 0x1, 0x1);
        gbc.writeMem(0xaf8f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf57f, gbc.sp());
        EXPECT(0xaf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf8f));
        EXPECT(0x5, gbc.readMem(0xaf90));
        // CB 05 0378
        gbc.setState(0x6367, 0x48a7, 0x5d70, 0x187a, 0x7508, 0xd2f7, 0x1, 0x0);
        gbc.writeMem(0x6367, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x48a7, gbc.sp());
        EXPECT(0x6369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0379
        gbc.setState(0x53e2, 0x47cd, 0x13d0, 0xd996, 0x3b73, 0x9f60, 0x1, 0x0);
        gbc.writeMem(0x53e2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x47cd, gbc.sp());
        EXPECT(0x53e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 037A
        gbc.setState(0xe79d, 0x7e86, 0xf650, 0x4409, 0x7a4d, 0x34bd, 0x0, 0x0);
        gbc.writeMem(0xe79d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7e86, gbc.sp());
        EXPECT(0xe79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79d));
        EXPECT(0x5, gbc.readMem(0xe79e));
        // CB 05 037B
        gbc.setState(0x7791, 0x63be, 0xcd10, 0xed31, 0x2716, 0x169b, 0x1, 0x0);
        gbc.writeMem(0x7791, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x63be, gbc.sp());
        EXPECT(0x7793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 037C
        gbc.setState(0xc826, 0xc6be, 0xc8a0, 0x7d71, 0x1173, 0x7fe4, 0x1, 0x1);
        gbc.writeMem(0xc826, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc6be, gbc.sp());
        EXPECT(0xc828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc826));
        EXPECT(0x5, gbc.readMem(0xc827));
        // CB 05 037D
        gbc.setState(0x99fe, 0x528, 0x8cd0, 0x855c, 0x1f82, 0xae28, 0x0, 0x0);
        gbc.writeMem(0x99fe, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x528, gbc.sp());
        EXPECT(0x9a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fe));
        EXPECT(0x5, gbc.readMem(0x99ff));
        // CB 05 037E
        gbc.setState(0xd3dc, 0xebd5, 0xfa60, 0x5cf1, 0xfca7, 0xb60, 0x1, 0x1);
        gbc.writeMem(0xd3dc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xebd5, gbc.sp());
        EXPECT(0xd3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3dc));
        EXPECT(0x5, gbc.readMem(0xd3dd));
        // CB 05 037F
        gbc.setState(0x250c, 0xed39, 0x7ce0, 0x338b, 0x4d01, 0xa92a, 0x0, 0x1);
        gbc.writeMem(0x250c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xed39, gbc.sp());
        EXPECT(0x250e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0380
        gbc.setState(0xdb75, 0xf5d, 0x76f0, 0x3dc8, 0xd849, 0x8ef0, 0x1, 0x1);
        gbc.writeMem(0xdb75, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf5d, gbc.sp());
        EXPECT(0xdb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb75));
        EXPECT(0x5, gbc.readMem(0xdb76));
        // CB 05 0381
        gbc.setState(0x6937, 0x87cb, 0xc5d0, 0x86a4, 0x14be, 0x12d5, 0x0, 0x0);
        gbc.writeMem(0x6937, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x87cb, gbc.sp());
        EXPECT(0x6939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0382
        gbc.setState(0x3488, 0xc8ca, 0x4980, 0x4b41, 0xa838, 0x93cc, 0x0, 0x1);
        gbc.writeMem(0x3488, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc8ca, gbc.sp());
        EXPECT(0x348a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0383
        gbc.setState(0x93e1, 0x2e7, 0xec70, 0xe88e, 0x266b, 0x6f80, 0x1, 0x1);
        gbc.writeMem(0x93e1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2e7, gbc.sp());
        EXPECT(0x93e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e1));
        EXPECT(0x5, gbc.readMem(0x93e2));
        // CB 05 0384
        gbc.setState(0x802, 0xaa14, 0xf0d0, 0xc275, 0xc0a6, 0xe934, 0x1, 0x0);
        gbc.writeMem(0x802, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xaa14, gbc.sp());
        EXPECT(0x804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0385
        gbc.setState(0x8c1, 0xb193, 0xbc80, 0x8d0c, 0x9c2e, 0x6515, 0x1, 0x1);
        gbc.writeMem(0x8c1, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb193, gbc.sp());
        EXPECT(0x8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0386
        gbc.setState(0x6cd5, 0x41ad, 0x9220, 0x7fd, 0xbc0d, 0x1ea7, 0x1, 0x0);
        gbc.writeMem(0x6cd5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x41ad, gbc.sp());
        EXPECT(0x6cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0387
        gbc.setState(0x640f, 0x6add, 0xb0e0, 0xf792, 0x2d78, 0xc6e7, 0x0, 0x0);
        gbc.writeMem(0x640f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6add, gbc.sp());
        EXPECT(0x6411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 0388
        gbc.setState(0x812b, 0x332c, 0x1fd0, 0x5a97, 0x200, 0x1003, 0x1, 0x0);
        gbc.writeMem(0x812b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x332c, gbc.sp());
        EXPECT(0x812d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812b));
        EXPECT(0x5, gbc.readMem(0x812c));
        // CB 05 0389
        gbc.setState(0xaa0f, 0x72b6, 0x5530, 0x9659, 0x6630, 0xead1, 0x1, 0x1);
        gbc.writeMem(0xaa0f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x72b6, gbc.sp());
        EXPECT(0xaa11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0f));
        EXPECT(0x5, gbc.readMem(0xaa10));
        // CB 05 038A
        gbc.setState(0x9418, 0xa472, 0x2b50, 0xbab4, 0xe9c, 0xc53, 0x0, 0x0);
        gbc.writeMem(0x9418, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa472, gbc.sp());
        EXPECT(0x941a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9418));
        EXPECT(0x5, gbc.readMem(0x9419));
        // CB 05 038B
        gbc.setState(0x238, 0xc52f, 0xf040, 0xce5, 0x6551, 0x5f3d, 0x0, 0x0);
        gbc.writeMem(0x238, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc52f, gbc.sp());
        EXPECT(0x23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 038C
        gbc.setState(0xca5d, 0x34f9, 0x8ed0, 0xf1eb, 0x7b89, 0x1ea2, 0x0, 0x0);
        gbc.writeMem(0xca5d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x34f9, gbc.sp());
        EXPECT(0xca5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5d));
        EXPECT(0x5, gbc.readMem(0xca5e));
        // CB 05 038D
        gbc.setState(0xd807, 0x2670, 0x1ad0, 0x37ad, 0x42e1, 0xc950, 0x0, 0x0);
        gbc.writeMem(0xd807, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2670, gbc.sp());
        EXPECT(0xd809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd807));
        EXPECT(0x5, gbc.readMem(0xd808));
        // CB 05 038E
        gbc.setState(0x87ba, 0x6914, 0xacf0, 0x535f, 0xb563, 0x50f1, 0x1, 0x1);
        gbc.writeMem(0x87ba, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6914, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ba));
        EXPECT(0x5, gbc.readMem(0x87bb));
        // CB 05 038F
        gbc.setState(0xefb5, 0xa17a, 0x9c00, 0xd0b9, 0x4afd, 0x9d6a, 0x1, 0x1);
        gbc.writeMem(0xefb5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa17a, gbc.sp());
        EXPECT(0xefb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb5));
        EXPECT(0x5, gbc.readMem(0xefb6));
        // CB 05 0390
        gbc.setState(0x7e3c, 0x2a8b, 0x81a0, 0x3a87, 0x5cc1, 0x7b2b, 0x1, 0x1);
        gbc.writeMem(0x7e3c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2a8b, gbc.sp());
        EXPECT(0x7e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0391
        gbc.setState(0xc7a5, 0xc77f, 0xa890, 0xb446, 0x7830, 0x3af6, 0x1, 0x0);
        gbc.writeMem(0xc7a5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc77f, gbc.sp());
        EXPECT(0xc7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a5));
        EXPECT(0x5, gbc.readMem(0xc7a6));
        // CB 05 0392
        gbc.setState(0x8438, 0xc95, 0x3890, 0xc9d, 0x5eaa, 0x39b1, 0x1, 0x0);
        gbc.writeMem(0x8438, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc95, gbc.sp());
        EXPECT(0x843a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8438));
        EXPECT(0x5, gbc.readMem(0x8439));
        // CB 05 0393
        gbc.setState(0x1e2e, 0x8f53, 0x390, 0x8f23, 0x2e5, 0xea33, 0x1, 0x1);
        gbc.writeMem(0x1e2e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0x1e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0394
        gbc.setState(0x93e9, 0xae71, 0x7f20, 0x24e, 0x42d3, 0x35b7, 0x1, 0x1);
        gbc.writeMem(0x93e9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xae71, gbc.sp());
        EXPECT(0x93eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e9));
        EXPECT(0x5, gbc.readMem(0x93ea));
        // CB 05 0396
        gbc.setState(0x6423, 0x97b2, 0x67b0, 0x2945, 0x2690, 0xcc5b, 0x0, 0x1);
        gbc.writeMem(0x6423, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x97b2, gbc.sp());
        EXPECT(0x6425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0397
        gbc.setState(0x2a78, 0x4eca, 0x4a0, 0x5ee0, 0xf069, 0x146c, 0x1, 0x1);
        gbc.writeMem(0x2a78, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4eca, gbc.sp());
        EXPECT(0x2a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0398
        gbc.setState(0x1334, 0xfb4f, 0xa020, 0x11cb, 0x9e7c, 0x3b58, 0x0, 0x1);
        gbc.writeMem(0x1334, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfb4f, gbc.sp());
        EXPECT(0x1336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 0399
        gbc.setState(0x17c6, 0xb17e, 0xc4c0, 0xa955, 0xa8b0, 0x3fd5, 0x0, 0x0);
        gbc.writeMem(0x17c6, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb17e, gbc.sp());
        EXPECT(0x17c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 039A
        gbc.setState(0x624e, 0x62e6, 0x2ef0, 0xcdda, 0xc2f9, 0x625d, 0x1, 0x0);
        gbc.writeMem(0x624e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x62e6, gbc.sp());
        EXPECT(0x6250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 039B
        gbc.setState(0x37a5, 0xcf5a, 0xa310, 0xfa2a, 0x4096, 0x59be, 0x0, 0x0);
        gbc.writeMem(0x37a5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcf5a, gbc.sp());
        EXPECT(0x37a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 039C
        gbc.setState(0xdcef, 0xce0b, 0xcd20, 0xf1bb, 0x5784, 0x2a3b, 0x1, 0x1);
        gbc.writeMem(0xdcef, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xce0b, gbc.sp());
        EXPECT(0xdcf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcef));
        EXPECT(0x5, gbc.readMem(0xdcf0));
        // CB 05 039D
        gbc.setState(0x794b, 0x599f, 0x79d0, 0x7515, 0xb9b9, 0x39d3, 0x1, 0x0);
        gbc.writeMem(0x794b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x599f, gbc.sp());
        EXPECT(0x794d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 039E
        gbc.setState(0x6e05, 0x4cc9, 0xcb20, 0x7496, 0xb19f, 0x6d5, 0x1, 0x0);
        gbc.writeMem(0x6e05, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4cc9, gbc.sp());
        EXPECT(0x6e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 039F
        gbc.setState(0x9181, 0x6d7a, 0xb0e0, 0xda7c, 0x59fa, 0xdc27, 0x1, 0x1);
        gbc.writeMem(0x9181, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6d7a, gbc.sp());
        EXPECT(0x9183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9181));
        EXPECT(0x5, gbc.readMem(0x9182));
        // CB 05 03A0
        gbc.setState(0x1aeb, 0x66a5, 0x33a0, 0x48db, 0xf2dc, 0xefb1, 0x1, 0x1);
        gbc.writeMem(0x1aeb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x66a5, gbc.sp());
        EXPECT(0x1aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03A1
        gbc.setState(0x3ade, 0x98f6, 0xc990, 0xe2f9, 0xf623, 0xfe2b, 0x0, 0x1);
        gbc.writeMem(0x3ade, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x98f6, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03A2
        gbc.setState(0x5d74, 0xb2a2, 0x1e40, 0x87d5, 0x7aae, 0x2ff2, 0x0, 0x0);
        gbc.writeMem(0x5d74, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb2a2, gbc.sp());
        EXPECT(0x5d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03A3
        gbc.setState(0x630d, 0x41e2, 0xb0b0, 0xc83c, 0x1fe4, 0x3f55, 0x0, 0x1);
        gbc.writeMem(0x630d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x41e2, gbc.sp());
        EXPECT(0x630f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03A4
        gbc.setState(0x2949, 0xcb06, 0x9a30, 0xe4e1, 0xb14, 0x64cb, 0x0, 0x1);
        gbc.writeMem(0x2949, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcb06, gbc.sp());
        EXPECT(0x294b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03A5
        gbc.setState(0x6a1e, 0xc20b, 0xbd10, 0x1d43, 0xce29, 0x5c, 0x1, 0x1);
        gbc.writeMem(0x6a1e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc20b, gbc.sp());
        EXPECT(0x6a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03A6
        gbc.setState(0xaf0e, 0x6421, 0x720, 0x300d, 0x7739, 0xe39d, 0x1, 0x0);
        gbc.writeMem(0xaf0e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6421, gbc.sp());
        EXPECT(0xaf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0e));
        EXPECT(0x5, gbc.readMem(0xaf0f));
        // CB 05 03A7
        gbc.setState(0xa4a0, 0xd1c, 0xd330, 0xf0fe, 0x94b1, 0x69f4, 0x1, 0x0);
        gbc.writeMem(0xa4a0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd1c, gbc.sp());
        EXPECT(0xa4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a0));
        EXPECT(0x5, gbc.readMem(0xa4a1));
        // CB 05 03A8
        gbc.setState(0x7250, 0x3fb3, 0xbe60, 0xc52b, 0xa7c5, 0x2e76, 0x1, 0x1);
        gbc.writeMem(0x7250, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3fb3, gbc.sp());
        EXPECT(0x7252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03A9
        gbc.setState(0xe72f, 0xc6f1, 0x8ae0, 0xf7e9, 0x30d9, 0x3eb1, 0x1, 0x1);
        gbc.writeMem(0xe72f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc6f1, gbc.sp());
        EXPECT(0xe731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72f));
        EXPECT(0x5, gbc.readMem(0xe730));
        // CB 05 03AA
        gbc.setState(0x6138, 0xd857, 0x12b0, 0xcff8, 0x8c62, 0x8141, 0x1, 0x1);
        gbc.writeMem(0x6138, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd857, gbc.sp());
        EXPECT(0x613a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03AB
        gbc.setState(0xb1bb, 0xb82a, 0x430, 0x8947, 0x46ea, 0x41dd, 0x0, 0x0);
        gbc.writeMem(0xb1bb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb82a, gbc.sp());
        EXPECT(0xb1bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1bb));
        EXPECT(0x5, gbc.readMem(0xb1bc));
        // CB 05 03AC
        gbc.setState(0x9353, 0x2b44, 0xb520, 0xfe75, 0x2ea7, 0x35a8, 0x1, 0x1);
        gbc.writeMem(0x9353, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2b44, gbc.sp());
        EXPECT(0x9355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9353));
        EXPECT(0x5, gbc.readMem(0x9354));
        // CB 05 03AD
        gbc.setState(0x237f, 0xf2ff, 0x6930, 0xa054, 0x2cd7, 0x38e9, 0x1, 0x0);
        gbc.writeMem(0x237f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf2ff, gbc.sp());
        EXPECT(0x2381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03AE
        gbc.setState(0x737, 0xac6a, 0xcfc0, 0x56c8, 0x7e67, 0x11b0, 0x1, 0x0);
        gbc.writeMem(0x737, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xac6a, gbc.sp());
        EXPECT(0x739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03AF
        gbc.setState(0xb301, 0xd8ee, 0x2e30, 0xe46b, 0x4e98, 0x25f3, 0x1, 0x1);
        gbc.writeMem(0xb301, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd8ee, gbc.sp());
        EXPECT(0xb303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb301));
        EXPECT(0x5, gbc.readMem(0xb302));
        // CB 05 03B0
        gbc.setState(0x354f, 0x7787, 0xf9d0, 0xb21a, 0x42b3, 0x964c, 0x1, 0x0);
        gbc.writeMem(0x354f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7787, gbc.sp());
        EXPECT(0x3551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03B1
        gbc.setState(0x6ee2, 0xece7, 0xb660, 0x600a, 0xd737, 0xa8b7, 0x1, 0x0);
        gbc.writeMem(0x6ee2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xece7, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03B2
        gbc.setState(0xd89c, 0xd4a6, 0x9850, 0xd3b4, 0xec7a, 0x6d0a, 0x0, 0x0);
        gbc.writeMem(0xd89c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd4a6, gbc.sp());
        EXPECT(0xd89e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89c));
        EXPECT(0x5, gbc.readMem(0xd89d));
        // CB 05 03B3
        gbc.setState(0x742e, 0x1a97, 0xe1f0, 0xb082, 0x5a8, 0x4997, 0x0, 0x0);
        gbc.writeMem(0x742e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1a97, gbc.sp());
        EXPECT(0x7430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03B4
        gbc.setState(0x4c73, 0xb8c4, 0x52e0, 0x776b, 0x1b29, 0x45c4, 0x0, 0x1);
        gbc.writeMem(0x4c73, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb8c4, gbc.sp());
        EXPECT(0x4c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03B5
        gbc.setState(0xb1bb, 0x8dd4, 0xa3e0, 0x7c, 0x2319, 0xba47, 0x1, 0x1);
        gbc.writeMem(0xb1bb, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8dd4, gbc.sp());
        EXPECT(0xb1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1bb));
        EXPECT(0x5, gbc.readMem(0xb1bc));
        // CB 05 03B6
        gbc.setState(0x9bb7, 0x107f, 0xefc0, 0x89cd, 0x2d13, 0x2845, 0x1, 0x0);
        gbc.writeMem(0x9bb7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x107f, gbc.sp());
        EXPECT(0x9bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb7));
        EXPECT(0x5, gbc.readMem(0x9bb8));
        // CB 05 03B7
        gbc.setState(0x3f59, 0x91fa, 0x89f0, 0xda28, 0x825b, 0x7748, 0x1, 0x0);
        gbc.writeMem(0x3f59, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x91fa, gbc.sp());
        EXPECT(0x3f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03B8
        gbc.setState(0xa015, 0x4258, 0xd200, 0xb9cd, 0xfe90, 0x7840, 0x1, 0x0);
        gbc.writeMem(0xa015, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4258, gbc.sp());
        EXPECT(0xa017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa015));
        EXPECT(0x5, gbc.readMem(0xa016));
        // CB 05 03B9
        gbc.setState(0xde88, 0x71a3, 0x22c0, 0xbbc4, 0xff39, 0x65f8, 0x0, 0x0);
        gbc.writeMem(0xde88, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x71a3, gbc.sp());
        EXPECT(0xde8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde88));
        EXPECT(0x5, gbc.readMem(0xde89));
        // CB 05 03BA
        gbc.setState(0x91ba, 0x293f, 0x6ae0, 0xbeeb, 0x1878, 0x1be8, 0x1, 0x0);
        gbc.writeMem(0x91ba, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x293f, gbc.sp());
        EXPECT(0x91bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ba));
        EXPECT(0x5, gbc.readMem(0x91bb));
        // CB 05 03BB
        gbc.setState(0x3991, 0x278c, 0x8750, 0x896b, 0x6f14, 0x51e8, 0x0, 0x0);
        gbc.writeMem(0x3991, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x278c, gbc.sp());
        EXPECT(0x3993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03BC
        gbc.setState(0xbc5c, 0xe7d9, 0xe680, 0xa811, 0x95e2, 0x2be3, 0x0, 0x0);
        gbc.writeMem(0xbc5c, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe7d9, gbc.sp());
        EXPECT(0xbc5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5c));
        EXPECT(0x5, gbc.readMem(0xbc5d));
        // CB 05 03BD
        gbc.setState(0x9053, 0x1eba, 0x1be0, 0x5935, 0x90bc, 0xb8b1, 0x1, 0x1);
        gbc.writeMem(0x9053, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1eba, gbc.sp());
        EXPECT(0x9055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9053));
        EXPECT(0x5, gbc.readMem(0x9054));
        // CB 05 03BE
        gbc.setState(0xe8a8, 0xb7e1, 0xb640, 0xaf0a, 0x5a99, 0x2540, 0x1, 0x1);
        gbc.writeMem(0xe8a8, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb7e1, gbc.sp());
        EXPECT(0xe8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a8));
        EXPECT(0x5, gbc.readMem(0xe8a9));
        // CB 05 03BF
        gbc.setState(0xe025, 0x656c, 0x95b0, 0xe795, 0xaa78, 0xa6cd, 0x0, 0x1);
        gbc.writeMem(0xe025, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x656c, gbc.sp());
        EXPECT(0xe027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe025));
        EXPECT(0x5, gbc.readMem(0xe026));
        // CB 05 03C0
        gbc.setState(0x8727, 0x3c9c, 0x1350, 0xdeb2, 0xf7e3, 0x1d2e, 0x1, 0x0);
        gbc.writeMem(0x8727, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3c9c, gbc.sp());
        EXPECT(0x8729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8727));
        EXPECT(0x5, gbc.readMem(0x8728));
        // CB 05 03C1
        gbc.setState(0x938, 0x5c7a, 0xf970, 0x7e58, 0xb88c, 0xdec5, 0x0, 0x1);
        gbc.writeMem(0x938, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5c7a, gbc.sp());
        EXPECT(0x93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03C2
        gbc.setState(0xb2cc, 0xec72, 0xce70, 0x16f3, 0xd90b, 0xf078, 0x1, 0x1);
        gbc.writeMem(0xb2cc, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xec72, gbc.sp());
        EXPECT(0xb2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2cc));
        EXPECT(0x5, gbc.readMem(0xb2cd));
        // CB 05 03C3
        gbc.setState(0x6f43, 0xa652, 0x1e80, 0xe220, 0xbc94, 0xad9b, 0x1, 0x0);
        gbc.writeMem(0x6f43, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa652, gbc.sp());
        EXPECT(0x6f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03C4
        gbc.setState(0x40c7, 0x6287, 0x7a00, 0x2603, 0xa56b, 0x5ce6, 0x0, 0x1);
        gbc.writeMem(0x40c7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6287, gbc.sp());
        EXPECT(0x40c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03C5
        gbc.setState(0x23ca, 0x8719, 0xf940, 0xf7cf, 0x6f18, 0x218d, 0x0, 0x0);
        gbc.writeMem(0x23ca, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8719, gbc.sp());
        EXPECT(0x23cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03C6
        gbc.setState(0x7e3d, 0xf9f, 0x31d0, 0xb5fd, 0xb5f, 0xde39, 0x1, 0x0);
        gbc.writeMem(0x7e3d, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf9f, gbc.sp());
        EXPECT(0x7e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03C7
        gbc.setState(0x6d7b, 0x311b, 0x1840, 0x3ff9, 0x6fea, 0x88d5, 0x1, 0x1);
        gbc.writeMem(0x6d7b, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x311b, gbc.sp());
        EXPECT(0x6d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03C8
        gbc.setState(0x3db0, 0xb960, 0x7df0, 0x5a2c, 0xa097, 0x25f8, 0x0, 0x0);
        gbc.writeMem(0x3db0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb960, gbc.sp());
        EXPECT(0x3db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03C9
        gbc.setState(0x4f8e, 0x119d, 0x9a50, 0x9a4a, 0x9917, 0xb5c0, 0x1, 0x0);
        gbc.writeMem(0x4f8e, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x119d, gbc.sp());
        EXPECT(0x4f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03CA
        gbc.setState(0xa5a5, 0xbd3f, 0x6d10, 0x4106, 0x2d8e, 0x2551, 0x0, 0x1);
        gbc.writeMem(0xa5a5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbd3f, gbc.sp());
        EXPECT(0xa5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a5));
        EXPECT(0x5, gbc.readMem(0xa5a6));
        // CB 05 03CB
        gbc.setState(0xe74, 0x45ff, 0x810, 0x691, 0xcbbd, 0xd4dd, 0x0, 0x0);
        gbc.writeMem(0xe74, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x45ff, gbc.sp());
        EXPECT(0xe76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03CC
        gbc.setState(0x5b3a, 0x31b9, 0x6a40, 0x2a7, 0x5b69, 0x7e97, 0x0, 0x0);
        gbc.writeMem(0x5b3a, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x31b9, gbc.sp());
        EXPECT(0x5b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03CD
        gbc.setState(0x8456, 0x3ec5, 0x6a50, 0x606e, 0x33c, 0x44dc, 0x1, 0x1);
        gbc.writeMem(0x8456, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3ec5, gbc.sp());
        EXPECT(0x8458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8456));
        EXPECT(0x5, gbc.readMem(0x8457));
        // CB 05 03CE
        gbc.setState(0x1094, 0xa52d, 0x9980, 0xf4ef, 0xfdfe, 0xd541, 0x0, 0x0);
        gbc.writeMem(0x1094, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa52d, gbc.sp());
        EXPECT(0x1096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03CF
        gbc.setState(0x3f72, 0x9b35, 0x12f0, 0xe01f, 0xe5cb, 0xab31, 0x1, 0x1);
        gbc.writeMem(0x3f72, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9b35, gbc.sp());
        EXPECT(0x3f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03D0
        gbc.setState(0x9466, 0xd23e, 0x5e90, 0xffe7, 0x141a, 0xbcc4, 0x1, 0x0);
        gbc.writeMem(0x9466, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd23e, gbc.sp());
        EXPECT(0x9468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9466));
        EXPECT(0x5, gbc.readMem(0x9467));
        // CB 05 03D1
        gbc.setState(0x2e25, 0x7cff, 0x6040, 0x6014, 0xc2b6, 0x8159, 0x1, 0x0);
        gbc.writeMem(0x2e25, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7cff, gbc.sp());
        EXPECT(0x2e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03D2
        gbc.setState(0x553f, 0x71e4, 0x66f0, 0x6132, 0xf7af, 0xc4f1, 0x0, 0x0);
        gbc.writeMem(0x553f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x71e4, gbc.sp());
        EXPECT(0x5541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03D3
        gbc.setState(0x728, 0x67e4, 0x47b0, 0x8b4, 0xd437, 0x9663, 0x0, 0x0);
        gbc.writeMem(0x728, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x67e4, gbc.sp());
        EXPECT(0x72a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03D4
        gbc.setState(0x9f5f, 0x8a5b, 0xbe20, 0x20f0, 0x1485, 0xff92, 0x1, 0x1);
        gbc.writeMem(0x9f5f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8a5b, gbc.sp());
        EXPECT(0x9f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5f));
        EXPECT(0x5, gbc.readMem(0x9f60));
        // CB 05 03D5
        gbc.setState(0x75f7, 0xb6b3, 0x9250, 0x752b, 0x326a, 0xa9e2, 0x1, 0x1);
        gbc.writeMem(0x75f7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb6b3, gbc.sp());
        EXPECT(0x75f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 05 03D6
        gbc.setState(0xac7f, 0x6139, 0x3060, 0x492a, 0xc8ad, 0xf7f6, 0x0, 0x0);
        gbc.writeMem(0xac7f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6139, gbc.sp());
        EXPECT(0xac81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7f));
        EXPECT(0x5, gbc.readMem(0xac80));
        // CB 05 03D7
        gbc.setState(0xb976, 0xd4fe, 0xe210, 0x5d29, 0x3e85, 0x857, 0x0, 0x1);
        gbc.writeMem(0xb976, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd4fe, gbc.sp());
        EXPECT(0xb978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb976));
        EXPECT(0x5, gbc.readMem(0xb977));
        // CB 05 03D8
        gbc.setState(0xd2d9, 0xb7fd, 0x2180, 0x4299, 0x1de7, 0xf55, 0x1, 0x1);
        gbc.writeMem(0xd2d9, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb7fd, gbc.sp());
        EXPECT(0xd2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d9));
        EXPECT(0x5, gbc.readMem(0xd2da));
        // CB 05 03D9
        gbc.setState(0x5920, 0x64f9, 0xdf50, 0x5130, 0x378c, 0x9b1d, 0x0, 0x0);
        gbc.writeMem(0x5920, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x64f9, gbc.sp());
        EXPECT(0x5922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 05 03DA
        gbc.setState(0xb414, 0x5436, 0xf630, 0xcf2c, 0x6503, 0x9bda, 0x0, 0x0);
        gbc.writeMem(0xb414, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5436, gbc.sp());
        EXPECT(0xb416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb414));
        EXPECT(0x5, gbc.readMem(0xb415));
        // CB 05 03DB
        gbc.setState(0xc1d5, 0x71e9, 0xda40, 0x7149, 0x3b3b, 0x1a, 0x0, 0x1);
        gbc.writeMem(0xc1d5, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x71e9, gbc.sp());
        EXPECT(0xc1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d5));
        EXPECT(0x5, gbc.readMem(0xc1d6));
        // CB 05 03DC
        gbc.setState(0xcf79, 0x92f2, 0x6f10, 0xe545, 0xf14, 0x6155, 0x1, 0x0);
        gbc.writeMem(0xcf79, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x92f2, gbc.sp());
        EXPECT(0xcf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf79));
        EXPECT(0x5, gbc.readMem(0xcf7a));
        // CB 05 03DD
        gbc.setState(0xeb6f, 0xfc6d, 0xa2f0, 0x9895, 0x83cc, 0x8555, 0x1, 0x0);
        gbc.writeMem(0xeb6f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfc6d, gbc.sp());
        EXPECT(0xeb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6f));
        EXPECT(0x5, gbc.readMem(0xeb70));
        // CB 05 03DE
        gbc.setState(0xdde2, 0x992, 0xfff0, 0xea64, 0xf048, 0xad26, 0x0, 0x1);
        gbc.writeMem(0xdde2, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x992, gbc.sp());
        EXPECT(0xdde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde2));
        EXPECT(0x5, gbc.readMem(0xdde3));
        // CB 05 03DF
        gbc.setState(0xa2dd, 0x2f06, 0x9ca0, 0xe179, 0x7233, 0xdfd3, 0x0, 0x0);
        gbc.writeMem(0xa2dd, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2f06, gbc.sp());
        EXPECT(0xa2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2dd));
        EXPECT(0x5, gbc.readMem(0xa2de));
        // CB 05 03E0
        gbc.setState(0x96f7, 0xbd46, 0x77e0, 0x8a, 0xf60b, 0xd732, 0x1, 0x1);
        gbc.writeMem(0x96f7, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbd46, gbc.sp());
        EXPECT(0x96f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f7));
        EXPECT(0x5, gbc.readMem(0x96f8));
        // CB 05 03E1
        gbc.setState(0xbc17, 0x46e2, 0x6410, 0x94ae, 0x1d07, 0xfcf8, 0x1, 0x1);
        gbc.writeMem(0xbc17, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x46e2, gbc.sp());
        EXPECT(0xbc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc17));
        EXPECT(0x5, gbc.readMem(0xbc18));
        // CB 05 03E2
        gbc.setState(0xd93f, 0x9fd6, 0x7210, 0x2e03, 0x256b, 0xae3e, 0x1, 0x1);
        gbc.writeMem(0xd93f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9fd6, gbc.sp());
        EXPECT(0xd941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd93f));
        EXPECT(0x5, gbc.readMem(0xd940));
        // CB 05 03E3
        gbc.setState(0xa1c0, 0x53e7, 0x36b0, 0x2147, 0x5e51, 0xe5f1, 0x1, 0x0);
        gbc.writeMem(0xa1c0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x53e7, gbc.sp());
        EXPECT(0xa1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c0));
        EXPECT(0x5, gbc.readMem(0xa1c1));
        // CB 05 03E4
        gbc.setState(0x9a7f, 0xfb69, 0xf390, 0x8a53, 0x6156, 0x52b0, 0x1, 0x1);
        gbc.writeMem(0x9a7f, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfb69, gbc.sp());
        EXPECT(0x9a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7f));
        EXPECT(0x5, gbc.readMem(0x9a80));
        // CB 05 03E5
        gbc.setState(0xbdef, 0x237a, 0x4ae0, 0xef96, 0xd2fb, 0xd63e, 0x0, 0x1);
        gbc.writeMem(0xbdef, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x237a, gbc.sp());
        EXPECT(0xbdf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdef));
        EXPECT(0x5, gbc.readMem(0xbdf0));
        // CB 05 03E7
        gbc.setState(0x88f0, 0xc06c, 0xbc70, 0x9c57, 0x8427, 0xc339, 0x1, 0x1);
        gbc.writeMem(0x88f0, { 0xcb, 0x5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc06c, gbc.sp());
        EXPECT(0x88f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f0));
        EXPECT(0x5, gbc.readMem(0x88f1));
    }
