    TEST(gbcemu, opcode_43) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 43 0002
        gbc.setState(0xa48, 0x5bbf, 0x920, 0x6cb, 0x39c, 0x6386, 0x0, 0x0);
        gbc.writeMem(0xa48, { 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5bbf, gbc.sp());
        EXPECT(0xa49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0003
        gbc.setState(0xab1b, 0x103, 0xd910, 0x5473, 0xc105, 0xc596, 0x0, 0x0);
        gbc.writeMem(0xab1b, { 0x43 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x103, gbc.sp());
        EXPECT(0xab1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xab1b));
        // 43 0004
        gbc.setState(0x1c2e, 0xb60d, 0xf070, 0x50b0, 0xdc86, 0xfae0, 0x1, 0x1);
        gbc.writeMem(0x1c2e, { 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb60d, gbc.sp());
        EXPECT(0x1c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0005
        gbc.setState(0xc062, 0x4c4f, 0x2820, 0xcc10, 0x18d3, 0x5aef, 0x1, 0x1);
        gbc.writeMem(0xc062, { 0x43 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4c4f, gbc.sp());
        EXPECT(0xc063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc062));
        // 43 0006
        gbc.setState(0x8fab, 0x54b8, 0xd640, 0xc7e0, 0xaf45, 0x3c22, 0x1, 0x0);
        gbc.writeMem(0x8fab, { 0x43 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x54b8, gbc.sp());
        EXPECT(0x8fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8fab));
        // 43 0007
        gbc.setState(0xc022, 0xb6be, 0xaaa0, 0xd32a, 0x15c9, 0x311, 0x0, 0x1);
        gbc.writeMem(0xc022, { 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb6be, gbc.sp());
        EXPECT(0xc023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc022));
        // 43 0008
        gbc.setState(0x3fd2, 0x881e, 0x2cc0, 0xf8ea, 0xd174, 0x2467, 0x1, 0x1);
        gbc.writeMem(0x3fd2, { 0x43 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x881e, gbc.sp());
        EXPECT(0x3fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0009
        gbc.setState(0xce83, 0x18aa, 0xcc00, 0x1c02, 0x9c63, 0xe986, 0x1, 0x1);
        gbc.writeMem(0xce83, { 0x43 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x18aa, gbc.sp());
        EXPECT(0xce84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xce83));
        // 43 000A
        gbc.setState(0x8589, 0x5266, 0x70e0, 0x7f66, 0xbf7a, 0x157c, 0x0, 0x0);
        gbc.writeMem(0x8589, { 0x43 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5266, gbc.sp());
        EXPECT(0x858a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8589));
        // 43 000B
        gbc.setState(0xdded, 0x85e8, 0x2bb0, 0xb1d, 0x9b88, 0x958e, 0x1, 0x0);
        gbc.writeMem(0xdded, { 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x85e8, gbc.sp());
        EXPECT(0xddee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdded));
        // 43 000C
        gbc.setState(0x8801, 0xccc2, 0x7a60, 0x8981, 0xee7, 0xfeea, 0x0, 0x0);
        gbc.writeMem(0x8801, { 0x43 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xccc2, gbc.sp());
        EXPECT(0x8802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8801));
        // 43 000D
        gbc.setState(0x8763, 0x2270, 0xca80, 0x9d99, 0x6a2e, 0x89a1, 0x1, 0x0);
        gbc.writeMem(0x8763, { 0x43 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2270, gbc.sp());
        EXPECT(0x8764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8763));
        // 43 000E
        gbc.setState(0x2201, 0x30f, 0x9c0, 0x697, 0x9903, 0x291b, 0x1, 0x0);
        gbc.writeMem(0x2201, { 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x30f, gbc.sp());
        EXPECT(0x2202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 000F
        gbc.setState(0xdfcb, 0x3f38, 0x98d0, 0x6be4, 0x41ca, 0x70c7, 0x0, 0x0);
        gbc.writeMem(0xdfcb, { 0x43 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3f38, gbc.sp());
        EXPECT(0xdfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdfcb));
        // 43 0010
        gbc.setState(0x4639, 0xa150, 0x4f30, 0x9b9f, 0x6fec, 0x735, 0x1, 0x0);
        gbc.writeMem(0x4639, { 0x43 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa150, gbc.sp());
        EXPECT(0x463a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0011
        gbc.setState(0x6760, 0x847c, 0xff30, 0x813d, 0x29dd, 0x595e, 0x0, 0x0);
        gbc.writeMem(0x6760, { 0x43 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x847c, gbc.sp());
        EXPECT(0x6761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0012
        gbc.setState(0x81f, 0xdac7, 0xe490, 0x207, 0xd04c, 0x630d, 0x1, 0x0);
        gbc.writeMem(0x81f, { 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdac7, gbc.sp());
        EXPECT(0x820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0013
        gbc.setState(0x489b, 0x4777, 0xeae0, 0xe219, 0x2859, 0x344, 0x1, 0x0);
        gbc.writeMem(0x489b, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4777, gbc.sp());
        EXPECT(0x489c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0015
        gbc.setState(0x56f0, 0xbdf5, 0xbd30, 0x892a, 0xa7c6, 0x67f6, 0x1, 0x0);
        gbc.writeMem(0x56f0, { 0x43 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbdf5, gbc.sp());
        EXPECT(0x56f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0016
        gbc.setState(0x90ab, 0x8895, 0xb1f0, 0xd574, 0x390a, 0xbf95, 0x1, 0x1);
        gbc.writeMem(0x90ab, { 0x43 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8895, gbc.sp());
        EXPECT(0x90ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x90ab));
        // 43 0017
        gbc.setState(0xb222, 0xbb6e, 0x94c0, 0x375c, 0xb7e3, 0x8ecb, 0x1, 0x1);
        gbc.writeMem(0xb222, { 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbb6e, gbc.sp());
        EXPECT(0xb223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb222));
        // 43 0018
        gbc.setState(0xcbb8, 0x7449, 0xae20, 0xb515, 0x3866, 0xebcd, 0x0, 0x0);
        gbc.writeMem(0xcbb8, { 0x43 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7449, gbc.sp());
        EXPECT(0xcbb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcbb8));
        // 43 0019
        gbc.setState(0x3d6b, 0x541b, 0x8dd0, 0x86, 0x7131, 0xcea2, 0x1, 0x0);
        gbc.writeMem(0x3d6b, { 0x43 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x541b, gbc.sp());
        EXPECT(0x3d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 001A
        gbc.setState(0x7d65, 0x17f9, 0x5940, 0x2735, 0x4cfc, 0x4bf8, 0x1, 0x0);
        gbc.writeMem(0x7d65, { 0x43 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x17f9, gbc.sp());
        EXPECT(0x7d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 001B
        gbc.setState(0xaf22, 0x3907, 0x3470, 0x5334, 0x4f5c, 0xc887, 0x1, 0x0);
        gbc.writeMem(0xaf22, { 0x43 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3907, gbc.sp());
        EXPECT(0xaf23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xaf22));
        // 43 001C
        gbc.setState(0x1889, 0x9ce, 0x9150, 0x21db, 0x862, 0xc68d, 0x0, 0x1);
        gbc.writeMem(0x1889, { 0x43 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9ce, gbc.sp());
        EXPECT(0x188a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 001D
        gbc.setState(0xb3be, 0x5adf, 0xc900, 0xc35c, 0x3e9d, 0x8d8c, 0x0, 0x1);
        gbc.writeMem(0xb3be, { 0x43 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5adf, gbc.sp());
        EXPECT(0xb3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb3be));
        // 43 001F
        gbc.setState(0x6181, 0x5dda, 0x87c0, 0xceec, 0x9dcf, 0xb483, 0x1, 0x0);
        gbc.writeMem(0x6181, { 0x43 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5dda, gbc.sp());
        EXPECT(0x6182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0020
        gbc.setState(0xe955, 0x67b9, 0x75e0, 0xb594, 0xe58f, 0x819c, 0x1, 0x1);
        gbc.writeMem(0xe955, { 0x43 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x67b9, gbc.sp());
        EXPECT(0xe956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe955));
        // 43 0021
        gbc.setState(0xaaba, 0xc0af, 0xeb20, 0x7299, 0x90b2, 0xa553, 0x0, 0x1);
        gbc.writeMem(0xaaba, { 0x43 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc0af, gbc.sp());
        EXPECT(0xaabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xaaba));
        // 43 0022
        gbc.setState(0x3d2c, 0xaebd, 0xfd30, 0x239a, 0x89e4, 0x4570, 0x1, 0x1);
        gbc.writeMem(0x3d2c, { 0x43 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaebd, gbc.sp());
        EXPECT(0x3d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0023
        gbc.setState(0x8b1c, 0xede2, 0x7bc0, 0x6c6c, 0x1460, 0xe11b, 0x0, 0x0);
        gbc.writeMem(0x8b1c, { 0x43 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xede2, gbc.sp());
        EXPECT(0x8b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8b1c));
        // 43 0024
        gbc.setState(0x7e29, 0x176b, 0x1670, 0x193d, 0xe166, 0xf6ba, 0x1, 0x1);
        gbc.writeMem(0x7e29, { 0x43 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x176b, gbc.sp());
        EXPECT(0x7e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0025
        gbc.setState(0xedfe, 0xec2b, 0x60a0, 0xc012, 0x562, 0xeb01, 0x0, 0x1);
        gbc.writeMem(0xedfe, { 0x43 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xec2b, gbc.sp());
        EXPECT(0xedff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xedfe));
        // 43 0026
        gbc.setState(0x9708, 0xb23b, 0x80f0, 0xd8dc, 0x8b04, 0xdd5e, 0x1, 0x1);
        gbc.writeMem(0x9708, { 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb23b, gbc.sp());
        EXPECT(0x9709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9708));
        // 43 0027
        gbc.setState(0xcd72, 0xe6a5, 0xf40, 0x3580, 0x9655, 0x240f, 0x0, 0x0);
        gbc.writeMem(0xcd72, { 0x43 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe6a5, gbc.sp());
        EXPECT(0xcd73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcd72));
        // 43 0028
        gbc.setState(0x1975, 0x920b, 0x8de0, 0xe644, 0xa7b1, 0xa60d, 0x0, 0x1);
        gbc.writeMem(0x1975, { 0x43 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x920b, gbc.sp());
        EXPECT(0x1976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0029
        gbc.setState(0x91eb, 0xa8b5, 0x4ec0, 0x2e5a, 0xe6de, 0x5b9a, 0x0, 0x0);
        gbc.writeMem(0x91eb, { 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa8b5, gbc.sp());
        EXPECT(0x91ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x91eb));
        // 43 002A
        gbc.setState(0x8184, 0x3640, 0xf440, 0x9686, 0xabaa, 0xd386, 0x0, 0x0);
        gbc.writeMem(0x8184, { 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3640, gbc.sp());
        EXPECT(0x8185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8184));
        // 43 002B
        gbc.setState(0x2cbc, 0xab5c, 0x1b20, 0x81f3, 0xba84, 0x7789, 0x0, 0x1);
        gbc.writeMem(0x2cbc, { 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xab5c, gbc.sp());
        EXPECT(0x2cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 002C
        gbc.setState(0x2957, 0x6345, 0xbe30, 0x79d, 0x4973, 0xf41e, 0x1, 0x0);
        gbc.writeMem(0x2957, { 0x43 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6345, gbc.sp());
        EXPECT(0x2958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 002D
        gbc.setState(0x1508, 0x6b9c, 0xe5c0, 0xa84f, 0x9975, 0x59af, 0x0, 0x1);
        gbc.writeMem(0x1508, { 0x43 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6b9c, gbc.sp());
        EXPECT(0x1509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 002E
        gbc.setState(0x63a5, 0x8b93, 0xc500, 0x2434, 0x229e, 0x4650, 0x1, 0x0);
        gbc.writeMem(0x63a5, { 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8b93, gbc.sp());
        EXPECT(0x63a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 002F
        gbc.setState(0x888b, 0x2194, 0x60e0, 0xe8f3, 0x43fe, 0x6045, 0x1, 0x0);
        gbc.writeMem(0x888b, { 0x43 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2194, gbc.sp());
        EXPECT(0x888c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x888b));
        // 43 0031
        gbc.setState(0xba1e, 0x3863, 0xd70, 0xcb49, 0x9cfa, 0x7f74, 0x0, 0x1);
        gbc.writeMem(0xba1e, { 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3863, gbc.sp());
        EXPECT(0xba1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xba1e));
        // 43 0032
        gbc.setState(0xc2fc, 0xe9af, 0x19f0, 0xa55f, 0xc2c3, 0x5cb5, 0x0, 0x1);
        gbc.writeMem(0xc2fc, { 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe9af, gbc.sp());
        EXPECT(0xc2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc2fc));
        // 43 0033
        gbc.setState(0x49f7, 0x5bd, 0x4350, 0x7654, 0x66a0, 0x4034, 0x0, 0x1);
        gbc.writeMem(0x49f7, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5bd, gbc.sp());
        EXPECT(0x49f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0034
        gbc.setState(0x2c51, 0x79f0, 0x5370, 0x3ced, 0xe864, 0x5d9e, 0x0, 0x0);
        gbc.writeMem(0x2c51, { 0x43 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x79f0, gbc.sp());
        EXPECT(0x2c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0035
        gbc.setState(0x1eac, 0xa76e, 0x5880, 0x96f1, 0x26bb, 0x79d8, 0x0, 0x1);
        gbc.writeMem(0x1eac, { 0x43 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa76e, gbc.sp());
        EXPECT(0x1ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0036
        gbc.setState(0x21a2, 0x4faf, 0x1c30, 0x31e8, 0xd2bc, 0xfbc1, 0x1, 0x0);
        gbc.writeMem(0x21a2, { 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4faf, gbc.sp());
        EXPECT(0x21a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0037
        gbc.setState(0xa539, 0x5be9, 0x78a0, 0xfc4e, 0x59a4, 0xce8f, 0x1, 0x1);
        gbc.writeMem(0xa539, { 0x43 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5be9, gbc.sp());
        EXPECT(0xa53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa539));
        // 43 0038
        gbc.setState(0x532f, 0x26f, 0xf270, 0x8916, 0x76de, 0x8d59, 0x1, 0x1);
        gbc.writeMem(0x532f, { 0x43 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x26f, gbc.sp());
        EXPECT(0x5330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0039
        gbc.setState(0x26b9, 0xaa71, 0xaa00, 0xa76f, 0x98f8, 0x89bc, 0x1, 0x0);
        gbc.writeMem(0x26b9, { 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaa71, gbc.sp());
        EXPECT(0x26ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 003A
        gbc.setState(0x48bc, 0x6c7c, 0xd020, 0xf9f0, 0xcbfb, 0x126c, 0x0, 0x0);
        gbc.writeMem(0x48bc, { 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6c7c, gbc.sp());
        EXPECT(0x48bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 003B
        gbc.setState(0x4c7d, 0xa326, 0xa4d0, 0xbcf6, 0x53c7, 0xc23a, 0x1, 0x0);
        gbc.writeMem(0x4c7d, { 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa326, gbc.sp());
        EXPECT(0x4c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 003C
        gbc.setState(0x3c16, 0xef25, 0x5bd0, 0xc3, 0x6884, 0xd7e9, 0x0, 0x1);
        gbc.writeMem(0x3c16, { 0x43 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xef25, gbc.sp());
        EXPECT(0x3c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 003D
        gbc.setState(0x3c6b, 0x12b7, 0xf5c0, 0xeacb, 0xb57d, 0x6900, 0x0, 0x1);
        gbc.writeMem(0x3c6b, { 0x43 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x12b7, gbc.sp());
        EXPECT(0x3c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 003E
        gbc.setState(0x8301, 0x7e79, 0x9800, 0xbd15, 0x3fa5, 0x4adb, 0x1, 0x0);
        gbc.writeMem(0x8301, { 0x43 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7e79, gbc.sp());
        EXPECT(0x8302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8301));
        // 43 003F
        gbc.setState(0xc8c1, 0xac78, 0x7d0, 0x1d20, 0x52de, 0x8d5d, 0x0, 0x0);
        gbc.writeMem(0xc8c1, { 0x43 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xac78, gbc.sp());
        EXPECT(0xc8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc8c1));
        // 43 0040
        gbc.setState(0xc1d7, 0x8edf, 0x1520, 0xbe20, 0x5d24, 0x3e36, 0x1, 0x0);
        gbc.writeMem(0xc1d7, { 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8edf, gbc.sp());
        EXPECT(0xc1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc1d7));
        // 43 0041
        gbc.setState(0xe9a3, 0xb5c4, 0x9b20, 0xfac8, 0xa1c, 0x4e58, 0x1, 0x1);
        gbc.writeMem(0xe9a3, { 0x43 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb5c4, gbc.sp());
        EXPECT(0xe9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe9a3));
        // 43 0042
        gbc.setState(0x40d6, 0xec7b, 0x6b60, 0x8215, 0xbdc7, 0x14d0, 0x0, 0x1);
        gbc.writeMem(0x40d6, { 0x43 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xec7b, gbc.sp());
        EXPECT(0x40d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0043
        gbc.setState(0x2118, 0x1405, 0x4220, 0x3692, 0x54ce, 0x11e7, 0x0, 0x0);
        gbc.writeMem(0x2118, { 0x43 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1405, gbc.sp());
        EXPECT(0x2119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0044
        gbc.setState(0x71b4, 0x7115, 0x3840, 0x3c55, 0xa606, 0x4131, 0x1, 0x1);
        gbc.writeMem(0x71b4, { 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7115, gbc.sp());
        EXPECT(0x71b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0046
        gbc.setState(0x1bac, 0x910, 0xd0e0, 0xf3d7, 0xcb65, 0x20a1, 0x1, 0x0);
        gbc.writeMem(0x1bac, { 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x910, gbc.sp());
        EXPECT(0x1bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0047
        gbc.setState(0x4b25, 0xb995, 0xc980, 0xc867, 0x1427, 0x17fc, 0x0, 0x1);
        gbc.writeMem(0x4b25, { 0x43 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb995, gbc.sp());
        EXPECT(0x4b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0048
        gbc.setState(0xa961, 0x55b9, 0xaae0, 0x6474, 0xee60, 0x7682, 0x1, 0x0);
        gbc.writeMem(0xa961, { 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x55b9, gbc.sp());
        EXPECT(0xa962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa961));
        // 43 0049
        gbc.setState(0x6a2b, 0x1f8c, 0x4490, 0xf175, 0x15e4, 0x2e24, 0x0, 0x1);
        gbc.writeMem(0x6a2b, { 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1f8c, gbc.sp());
        EXPECT(0x6a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 004A
        gbc.setState(0x14a0, 0x425a, 0x9ec0, 0x4aca, 0x619a, 0x5d94, 0x0, 0x0);
        gbc.writeMem(0x14a0, { 0x43 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x425a, gbc.sp());
        EXPECT(0x14a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 004B
        gbc.setState(0x63e, 0x3cc0, 0xca40, 0xfd9a, 0x1041, 0x1960, 0x1, 0x1);
        gbc.writeMem(0x63e, { 0x43 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3cc0, gbc.sp());
        EXPECT(0x63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 004C
        gbc.setState(0x64af, 0x8ba, 0x3f0, 0xf8d6, 0xb31d, 0xb972, 0x1, 0x0);
        gbc.writeMem(0x64af, { 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8ba, gbc.sp());
        EXPECT(0x64b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 004D
        gbc.setState(0x69cb, 0xd924, 0xad30, 0xebf8, 0xe117, 0xc405, 0x0, 0x0);
        gbc.writeMem(0x69cb, { 0x43 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd924, gbc.sp());
        EXPECT(0x69cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 004E
        gbc.setState(0x96c1, 0xbefc, 0xe920, 0x6f1c, 0x5d9d, 0x6027, 0x1, 0x1);
        gbc.writeMem(0x96c1, { 0x43 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbefc, gbc.sp());
        EXPECT(0x96c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x96c1));
        // 43 004F
        gbc.setState(0x2f3e, 0xfc23, 0xab90, 0xe63, 0xf214, 0x76e7, 0x0, 0x1);
        gbc.writeMem(0x2f3e, { 0x43 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfc23, gbc.sp());
        EXPECT(0x2f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0050
        gbc.setState(0x414f, 0x3077, 0x60e0, 0x3ef0, 0xe2c, 0x834e, 0x1, 0x0);
        gbc.writeMem(0x414f, { 0x43 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3077, gbc.sp());
        EXPECT(0x4150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0051
        gbc.setState(0x6fec, 0x68f7, 0x6b60, 0x7434, 0x70f5, 0xc46b, 0x1, 0x0);
        gbc.writeMem(0x6fec, { 0x43 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x68f7, gbc.sp());
        EXPECT(0x6fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0052
        gbc.setState(0x527e, 0xdcde, 0x2db0, 0xa659, 0x3c22, 0x773c, 0x1, 0x0);
        gbc.writeMem(0x527e, { 0x43 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdcde, gbc.sp());
        EXPECT(0x527f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0053
        gbc.setState(0xb64c, 0xcb93, 0x15a0, 0xaa11, 0x5199, 0xe724, 0x1, 0x0);
        gbc.writeMem(0xb64c, { 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcb93, gbc.sp());
        EXPECT(0xb64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb64c));
        // 43 0054
        gbc.setState(0xd101, 0x7be2, 0xb4c0, 0xaa88, 0xa1c6, 0xc5d1, 0x1, 0x1);
        gbc.writeMem(0xd101, { 0x43 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7be2, gbc.sp());
        EXPECT(0xd102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd101));
        // 43 0057
        gbc.setState(0x7cdc, 0x77cc, 0x14d0, 0x9bcc, 0xe22e, 0xeef9, 0x0, 0x1);
        gbc.writeMem(0x7cdc, { 0x43 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x77cc, gbc.sp());
        EXPECT(0x7cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0058
        gbc.setState(0x6647, 0x6dc8, 0x5f10, 0x8c43, 0x34a2, 0x1efe, 0x0, 0x1);
        gbc.writeMem(0x6647, { 0x43 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6dc8, gbc.sp());
        EXPECT(0x6648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0059
        gbc.setState(0xb59a, 0x14fe, 0x37d0, 0x2e1e, 0xa20e, 0xeff0, 0x0, 0x1);
        gbc.writeMem(0xb59a, { 0x43 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x14fe, gbc.sp());
        EXPECT(0xb59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb59a));
        // 43 005A
        gbc.setState(0xdb9f, 0x63de, 0x6040, 0x4744, 0x1229, 0xf78d, 0x0, 0x1);
        gbc.writeMem(0xdb9f, { 0x43 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x63de, gbc.sp());
        EXPECT(0xdba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdb9f));
        // 43 005B
        gbc.setState(0xe8a0, 0x2f59, 0x1cc0, 0x7e62, 0x2e17, 0x785b, 0x0, 0x1);
        gbc.writeMem(0xe8a0, { 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2f59, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe8a0));
        // 43 005C
        gbc.setState(0x4a8b, 0x2c70, 0x9440, 0xd03, 0x5db2, 0xbf90, 0x0, 0x1);
        gbc.writeMem(0x4a8b, { 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2c70, gbc.sp());
        EXPECT(0x4a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 005E
        gbc.setState(0xabe4, 0x8d57, 0x6ef0, 0xc585, 0xc1a2, 0xd273, 0x1, 0x1);
        gbc.writeMem(0xabe4, { 0x43 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8d57, gbc.sp());
        EXPECT(0xabe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xabe4));
        // 43 005F
        gbc.setState(0x1a20, 0xa17e, 0x1980, 0xdcb, 0x508, 0x683f, 0x0, 0x1);
        gbc.writeMem(0x1a20, { 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa17e, gbc.sp());
        EXPECT(0x1a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0060
        gbc.setState(0x52d0, 0xea64, 0x17a0, 0x7237, 0xdccb, 0x4df, 0x1, 0x1);
        gbc.writeMem(0x52d0, { 0x43 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xea64, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0061
        gbc.setState(0x86f3, 0xba6b, 0xa2e0, 0x3f23, 0x1a21, 0xc786, 0x1, 0x1);
        gbc.writeMem(0x86f3, { 0x43 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xba6b, gbc.sp());
        EXPECT(0x86f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x86f3));
        // 43 0062
        gbc.setState(0x76ab, 0xac7b, 0xfb00, 0xe8fe, 0xa4d3, 0xb062, 0x1, 0x1);
        gbc.writeMem(0x76ab, { 0x43 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xac7b, gbc.sp());
        EXPECT(0x76ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0063
        gbc.setState(0xe22f, 0xf284, 0xc360, 0x469c, 0x3ea, 0xe60b, 0x0, 0x1);
        gbc.writeMem(0xe22f, { 0x43 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf284, gbc.sp());
        EXPECT(0xe230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe22f));
        // 43 0064
        gbc.setState(0xcf9b, 0x3436, 0x3700, 0xfe4b, 0x48a8, 0xb178, 0x0, 0x1);
        gbc.writeMem(0xcf9b, { 0x43 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3436, gbc.sp());
        EXPECT(0xcf9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcf9b));
        // 43 0065
        gbc.setState(0x1e7f, 0x1016, 0xb980, 0xb239, 0xc588, 0xcb93, 0x0, 0x1);
        gbc.writeMem(0x1e7f, { 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1016, gbc.sp());
        EXPECT(0x1e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0066
        gbc.setState(0x1c32, 0xf09e, 0x61d0, 0x982e, 0xe8db, 0x3e7e, 0x0, 0x0);
        gbc.writeMem(0x1c32, { 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf09e, gbc.sp());
        EXPECT(0x1c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0067
        gbc.setState(0x746b, 0xc0aa, 0xb2b0, 0x5adb, 0x6de9, 0xcce2, 0x0, 0x0);
        gbc.writeMem(0x746b, { 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc0aa, gbc.sp());
        EXPECT(0x746c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0068
        gbc.setState(0x3221, 0xa6a1, 0xf0c0, 0x3434, 0x7fa9, 0xc6b9, 0x0, 0x1);
        gbc.writeMem(0x3221, { 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa6a1, gbc.sp());
        EXPECT(0x3222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0069
        gbc.setState(0x8be7, 0xd48c, 0xd7a0, 0x1b19, 0x6b24, 0x225, 0x0, 0x0);
        gbc.writeMem(0x8be7, { 0x43 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd48c, gbc.sp());
        EXPECT(0x8be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8be7));
        // 43 006A
        gbc.setState(0x722d, 0xe816, 0xa520, 0x5eb5, 0x4fa5, 0x95ed, 0x0, 0x1);
        gbc.writeMem(0x722d, { 0x43 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe816, gbc.sp());
        EXPECT(0x722e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 006B
        gbc.setState(0x64ff, 0xc806, 0xdbd0, 0x2891, 0x913c, 0xbc46, 0x0, 0x0);
        gbc.writeMem(0x64ff, { 0x43 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc806, gbc.sp());
        EXPECT(0x6500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 006C
        gbc.setState(0xeddb, 0xc1bb, 0x1410, 0xa66b, 0x58de, 0xab60, 0x0, 0x1);
        gbc.writeMem(0xeddb, { 0x43 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc1bb, gbc.sp());
        EXPECT(0xeddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xeddb));
        // 43 006E
        gbc.setState(0x5ebb, 0x67b2, 0xcd70, 0x6e45, 0xfd7e, 0xc287, 0x1, 0x0);
        gbc.writeMem(0x5ebb, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x67b2, gbc.sp());
        EXPECT(0x5ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 006F
        gbc.setState(0xc9f8, 0x8057, 0xb1f0, 0x10f7, 0xac21, 0x3295, 0x1, 0x0);
        gbc.writeMem(0xc9f8, { 0x43 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8057, gbc.sp());
        EXPECT(0xc9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc9f8));
        // 43 0070
        gbc.setState(0x2f22, 0x961e, 0x94e0, 0x70cf, 0xbb6e, 0x4be2, 0x1, 0x0);
        gbc.writeMem(0x2f22, { 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x961e, gbc.sp());
        EXPECT(0x2f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0071
        gbc.setState(0xd2ae, 0x88a7, 0xfa60, 0x779a, 0x1a21, 0xbc5c, 0x1, 0x1);
        gbc.writeMem(0xd2ae, { 0x43 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x88a7, gbc.sp());
        EXPECT(0xd2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd2ae));
        // 43 0072
        gbc.setState(0x83c8, 0xdeeb, 0xcd20, 0x6779, 0xcd5, 0x95fc, 0x1, 0x0);
        gbc.writeMem(0x83c8, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdeeb, gbc.sp());
        EXPECT(0x83c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x83c8));
        // 43 0073
        gbc.setState(0x4b08, 0xb75c, 0xe780, 0x4b07, 0xe5e7, 0x565d, 0x1, 0x1);
        gbc.writeMem(0x4b08, { 0x43 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb75c, gbc.sp());
        EXPECT(0x4b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0074
        gbc.setState(0xe4d0, 0xab18, 0xcd20, 0xdb79, 0xea83, 0x385e, 0x1, 0x1);
        gbc.writeMem(0xe4d0, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xab18, gbc.sp());
        EXPECT(0xe4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe4d0));
        // 43 0075
        gbc.setState(0x7e4d, 0x4fab, 0xf4c0, 0x6d5a, 0xe73e, 0x8652, 0x1, 0x0);
        gbc.writeMem(0x7e4d, { 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4fab, gbc.sp());
        EXPECT(0x7e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0076
        gbc.setState(0x103f, 0x2e4c, 0x3160, 0x44f9, 0xcde, 0x77fc, 0x1, 0x0);
        gbc.writeMem(0x103f, { 0x43 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2e4c, gbc.sp());
        EXPECT(0x1040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0077
        gbc.setState(0xce04, 0x32a, 0x6a40, 0x2a1b, 0x9346, 0x1cba, 0x1, 0x0);
        gbc.writeMem(0xce04, { 0x43 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x32a, gbc.sp());
        EXPECT(0xce05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xce04));
        // 43 0078
        gbc.setState(0x8810, 0x4361, 0x8820, 0xf9ac, 0x7867, 0x323c, 0x1, 0x1);
        gbc.writeMem(0x8810, { 0x43 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4361, gbc.sp());
        EXPECT(0x8811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8810));
        // 43 0079
        gbc.setState(0x5f89, 0x9376, 0xcdf0, 0xf286, 0x1f32, 0x4e01, 0x1, 0x0);
        gbc.writeMem(0x5f89, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9376, gbc.sp());
        EXPECT(0x5f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 007B
        gbc.setState(0x1c5f, 0x53cc, 0x2f40, 0x9fb9, 0xa6e1, 0x2feb, 0x1, 0x0);
        gbc.writeMem(0x1c5f, { 0x43 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x53cc, gbc.sp());
        EXPECT(0x1c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 007C
        gbc.setState(0xca2d, 0x26c6, 0x1590, 0x88e3, 0x56cd, 0xedc9, 0x0, 0x0);
        gbc.writeMem(0xca2d, { 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x26c6, gbc.sp());
        EXPECT(0xca2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xca2d));
        // 43 007D
        gbc.setState(0x19f9, 0x1f28, 0xfee0, 0x37d4, 0xeb7a, 0x8e1b, 0x1, 0x0);
        gbc.writeMem(0x19f9, { 0x43 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1f28, gbc.sp());
        EXPECT(0x19fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 007E
        gbc.setState(0x3862, 0x701b, 0x680, 0x4b99, 0xa734, 0x1bb5, 0x0, 0x1);
        gbc.writeMem(0x3862, { 0x43 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x701b, gbc.sp());
        EXPECT(0x3863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 007F
        gbc.setState(0x54df, 0x4ee4, 0x21e0, 0x2d5a, 0xbe0, 0xad53, 0x0, 0x0);
        gbc.writeMem(0x54df, { 0x43 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4ee4, gbc.sp());
        EXPECT(0x54e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0080
        gbc.setState(0x6c4, 0x5800, 0xecb0, 0x14e7, 0xc318, 0xefd2, 0x1, 0x1);
        gbc.writeMem(0x6c4, { 0x43 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5800, gbc.sp());
        EXPECT(0x6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0081
        gbc.setState(0xa344, 0x627f, 0xd8d0, 0x64d, 0x430a, 0xb674, 0x0, 0x1);
        gbc.writeMem(0xa344, { 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x627f, gbc.sp());
        EXPECT(0xa345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa344));
        // 43 0082
        gbc.setState(0xaa32, 0x53b4, 0xc650, 0xe3d1, 0x1f9b, 0xbe1c, 0x1, 0x1);
        gbc.writeMem(0xaa32, { 0x43 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x53b4, gbc.sp());
        EXPECT(0xaa33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xaa32));
        // 43 0083
        gbc.setState(0x5ad, 0xcb46, 0x3f60, 0x7858, 0x69e9, 0x2cc, 0x0, 0x0);
        gbc.writeMem(0x5ad, { 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcb46, gbc.sp());
        EXPECT(0x5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0084
        gbc.setState(0x331e, 0xe152, 0xe8d0, 0xf81d, 0xd89f, 0x9c19, 0x0, 0x1);
        gbc.writeMem(0x331e, { 0x43 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe152, gbc.sp());
        EXPECT(0x331f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0085
        gbc.setState(0x8589, 0x34b0, 0xcd60, 0x4, 0x9981, 0xad4d, 0x0, 0x0);
        gbc.writeMem(0x8589, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x34b0, gbc.sp());
        EXPECT(0x858a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8589));
        // 43 0086
        gbc.setState(0x3160, 0xc282, 0x6410, 0x493d, 0xcee4, 0x3f17, 0x0, 0x1);
        gbc.writeMem(0x3160, { 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc282, gbc.sp());
        EXPECT(0x3161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0087
        gbc.setState(0x368, 0x2d6b, 0x8080, 0x5626, 0x2d81, 0x9388, 0x0, 0x0);
        gbc.writeMem(0x368, { 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2d6b, gbc.sp());
        EXPECT(0x369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0088
        gbc.setState(0x881, 0xb990, 0x6df0, 0x4bef, 0x12f3, 0x1ee0, 0x0, 0x0);
        gbc.writeMem(0x881, { 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb990, gbc.sp());
        EXPECT(0x882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0089
        gbc.setState(0x6330, 0x61ed, 0x2550, 0x5815, 0x73e3, 0x2e38, 0x0, 0x1);
        gbc.writeMem(0x6330, { 0x43 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x61ed, gbc.sp());
        EXPECT(0x6331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 008A
        gbc.setState(0x53cd, 0x1876, 0x4cf0, 0x8978, 0x6784, 0x901, 0x0, 0x1);
        gbc.writeMem(0x53cd, { 0x43 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1876, gbc.sp());
        EXPECT(0x53ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 008C
        gbc.setState(0x1285, 0xb622, 0x49f0, 0x3ec4, 0x80b8, 0x88b, 0x0, 0x1);
        gbc.writeMem(0x1285, { 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb622, gbc.sp());
        EXPECT(0x1286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 008D
        gbc.setState(0x7043, 0xb118, 0x39b0, 0xbdfe, 0x3f19, 0xab6f, 0x1, 0x1);
        gbc.writeMem(0x7043, { 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb118, gbc.sp());
        EXPECT(0x7044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 008E
        gbc.setState(0x10b6, 0xe306, 0x33e0, 0x3c0f, 0x3192, 0xb68, 0x1, 0x1);
        gbc.writeMem(0x10b6, { 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe306, gbc.sp());
        EXPECT(0x10b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 008F
        gbc.setState(0x4c30, 0x5110, 0xe220, 0xa061, 0x87db, 0x2510, 0x1, 0x0);
        gbc.writeMem(0x4c30, { 0x43 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5110, gbc.sp());
        EXPECT(0x4c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0090
        gbc.setState(0x1395, 0x1093, 0xf320, 0xe6ce, 0x2036, 0xca3d, 0x1, 0x0);
        gbc.writeMem(0x1395, { 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1093, gbc.sp());
        EXPECT(0x1396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0091
        gbc.setState(0x55b5, 0xd29f, 0xebe0, 0x35b8, 0xdb65, 0x53d6, 0x1, 0x1);
        gbc.writeMem(0x55b5, { 0x43 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd29f, gbc.sp());
        EXPECT(0x55b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0092
        gbc.setState(0xc56b, 0x1c81, 0x38f0, 0xa039, 0xeaab, 0xbe4b, 0x0, 0x1);
        gbc.writeMem(0xc56b, { 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1c81, gbc.sp());
        EXPECT(0xc56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc56b));
        // 43 0093
        gbc.setState(0x45e5, 0x6145, 0x4b90, 0xeefe, 0x3f32, 0x4fa6, 0x0, 0x1);
        gbc.writeMem(0x45e5, { 0x43 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6145, gbc.sp());
        EXPECT(0x45e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0094
        gbc.setState(0x18e9, 0x8ba6, 0x4c20, 0x2423, 0x30e7, 0x4b78, 0x1, 0x1);
        gbc.writeMem(0x18e9, { 0x43 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8ba6, gbc.sp());
        EXPECT(0x18ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0095
        gbc.setState(0x12e, 0x364a, 0xc600, 0x3713, 0xe7e7, 0x61a8, 0x1, 0x1);
        gbc.writeMem(0x12e, { 0x43 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x364a, gbc.sp());
        EXPECT(0x12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0096
        gbc.setState(0x6f24, 0xb9e6, 0x5670, 0x6507, 0xd76d, 0xc279, 0x1, 0x0);
        gbc.writeMem(0x6f24, { 0x43 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb9e6, gbc.sp());
        EXPECT(0x6f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0097
        gbc.setState(0x9ba1, 0x317a, 0xcc50, 0xb679, 0xe483, 0x66a3, 0x0, 0x0);
        gbc.writeMem(0x9ba1, { 0x43 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x317a, gbc.sp());
        EXPECT(0x9ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9ba1));
        // 43 0098
        gbc.setState(0x9fc7, 0x5ef4, 0x4560, 0xf761, 0x60ba, 0x984f, 0x1, 0x1);
        gbc.writeMem(0x9fc7, { 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5ef4, gbc.sp());
        EXPECT(0x9fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9fc7));
        // 43 0099
        gbc.setState(0xca46, 0x26c3, 0xf4c0, 0x1215, 0xf86f, 0xab1, 0x1, 0x0);
        gbc.writeMem(0xca46, { 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x26c3, gbc.sp());
        EXPECT(0xca47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xca46));
        // 43 009A
        gbc.setState(0xdc89, 0x29f0, 0xa520, 0x2393, 0x2df0, 0x2d58, 0x1, 0x0);
        gbc.writeMem(0xdc89, { 0x43 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x29f0, gbc.sp());
        EXPECT(0xdc8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdc89));
        // 43 009B
        gbc.setState(0xa430, 0x6b7a, 0x8630, 0xf5f6, 0xb48c, 0x1d05, 0x1, 0x1);
        gbc.writeMem(0xa430, { 0x43 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6b7a, gbc.sp());
        EXPECT(0xa431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa430));
        // 43 009C
        gbc.setState(0x8fb6, 0xd080, 0x1060, 0x4d64, 0x821b, 0xdb5, 0x0, 0x1);
        gbc.writeMem(0x8fb6, { 0x43 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0x8fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8fb6));
        // 43 009D
        gbc.setState(0xb372, 0x67cc, 0xc410, 0x764d, 0xb9e8, 0xb7e7, 0x0, 0x1);
        gbc.writeMem(0xb372, { 0x43 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x67cc, gbc.sp());
        EXPECT(0xb373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb372));
        // 43 009E
        gbc.setState(0x8a9, 0x12a1, 0x8570, 0xb1e2, 0x95f1, 0x7c4e, 0x0, 0x0);
        gbc.writeMem(0x8a9, { 0x43 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x12a1, gbc.sp());
        EXPECT(0x8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00A0
        gbc.setState(0xa60e, 0x3517, 0x7a70, 0x5d3b, 0xf44b, 0x395, 0x0, 0x1);
        gbc.writeMem(0xa60e, { 0x43 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3517, gbc.sp());
        EXPECT(0xa60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa60e));
        // 43 00A1
        gbc.setState(0xa7e5, 0x4727, 0x1280, 0xb5d7, 0x2a98, 0xe3b3, 0x1, 0x1);
        gbc.writeMem(0xa7e5, { 0x43 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4727, gbc.sp());
        EXPECT(0xa7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa7e5));
        // 43 00A3
        gbc.setState(0x95c1, 0x551a, 0xb040, 0xbbe7, 0x2146, 0xf09f, 0x1, 0x1);
        gbc.writeMem(0x95c1, { 0x43 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x551a, gbc.sp());
        EXPECT(0x95c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x95c1));
        // 43 00A4
        gbc.setState(0x7376, 0x1ce5, 0x4360, 0x9cb4, 0xe2d0, 0xbeb7, 0x0, 0x0);
        gbc.writeMem(0x7376, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1ce5, gbc.sp());
        EXPECT(0x7377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00A5
        gbc.setState(0x953b, 0x35eb, 0x35e0, 0x8954, 0x6264, 0x6f34, 0x0, 0x0);
        gbc.writeMem(0x953b, { 0x43 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x35eb, gbc.sp());
        EXPECT(0x953c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x953b));
        // 43 00A6
        gbc.setState(0x41ce, 0xe785, 0xef40, 0xb26b, 0x2b60, 0x5f26, 0x1, 0x1);
        gbc.writeMem(0x41ce, { 0x43 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe785, gbc.sp());
        EXPECT(0x41cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00A7
        gbc.setState(0xa520, 0x10db, 0x4380, 0xabe7, 0x1f85, 0x490, 0x1, 0x0);
        gbc.writeMem(0xa520, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x10db, gbc.sp());
        EXPECT(0xa521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa520));
        // 43 00A8
        gbc.setState(0x534d, 0x7f8a, 0x1f0, 0xaace, 0x741d, 0xc2c9, 0x0, 0x0);
        gbc.writeMem(0x534d, { 0x43 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7f8a, gbc.sp());
        EXPECT(0x534e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00A9
        gbc.setState(0x7b58, 0xac21, 0x15d0, 0x17f7, 0x50e2, 0x38bf, 0x1, 0x1);
        gbc.writeMem(0x7b58, { 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xac21, gbc.sp());
        EXPECT(0x7b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00AA
        gbc.setState(0x389, 0x37cb, 0x3530, 0xfb81, 0xcdc0, 0x41d6, 0x1, 0x1);
        gbc.writeMem(0x389, { 0x43 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x37cb, gbc.sp());
        EXPECT(0x38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00AB
        gbc.setState(0x3c98, 0xb5d3, 0xd30, 0x438a, 0xe256, 0x8bc3, 0x0, 0x0);
        gbc.writeMem(0x3c98, { 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb5d3, gbc.sp());
        EXPECT(0x3c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00AC
        gbc.setState(0x746f, 0x15ff, 0x1350, 0xac6, 0x3363, 0x6df9, 0x0, 0x0);
        gbc.writeMem(0x746f, { 0x43 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x15ff, gbc.sp());
        EXPECT(0x7470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00AD
        gbc.setState(0xa665, 0x4e59, 0x6200, 0xb039, 0xb06f, 0x5432, 0x0, 0x1);
        gbc.writeMem(0xa665, { 0x43 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4e59, gbc.sp());
        EXPECT(0xa666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa665));
        // 43 00AE
        gbc.setState(0x6fbe, 0xb45b, 0xf180, 0x953c, 0x88a5, 0x42ef, 0x0, 0x0);
        gbc.writeMem(0x6fbe, { 0x43 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb45b, gbc.sp());
        EXPECT(0x6fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00AF
        gbc.setState(0xb9ca, 0x3133, 0x4860, 0x5e8f, 0xbe29, 0x7082, 0x0, 0x0);
        gbc.writeMem(0xb9ca, { 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3133, gbc.sp());
        EXPECT(0xb9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb9ca));
        // 43 00B0
        gbc.setState(0x927b, 0xe229, 0x5ea0, 0xf434, 0x9ad7, 0x5c78, 0x0, 0x0);
        gbc.writeMem(0x927b, { 0x43 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe229, gbc.sp());
        EXPECT(0x927c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x927b));
        // 43 00B1
        gbc.setState(0x39c, 0x8499, 0x36a0, 0x4a2f, 0xbb87, 0x571b, 0x0, 0x0);
        gbc.writeMem(0x39c, { 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8499, gbc.sp());
        EXPECT(0x39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00B2
        gbc.setState(0xe0f6, 0xf9f7, 0xa710, 0xa9a1, 0x4885, 0xc3ef, 0x0, 0x1);
        gbc.writeMem(0xe0f6, { 0x43 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf9f7, gbc.sp());
        EXPECT(0xe0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe0f6));
        // 43 00B3
        gbc.setState(0x22fd, 0x30a9, 0x2a10, 0x7d05, 0xfe3, 0x30c7, 0x0, 0x0);
        gbc.writeMem(0x22fd, { 0x43 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x30a9, gbc.sp());
        EXPECT(0x22fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00B4
        gbc.setState(0xc4b3, 0xc809, 0x6280, 0x5d3b, 0xabd9, 0x8837, 0x1, 0x0);
        gbc.writeMem(0xc4b3, { 0x43 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc809, gbc.sp());
        EXPECT(0xc4b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc4b3));
        // 43 00B5
        gbc.setState(0x81d9, 0x280c, 0x5540, 0xdc0e, 0x53b7, 0xfac7, 0x0, 0x1);
        gbc.writeMem(0x81d9, { 0x43 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x280c, gbc.sp());
        EXPECT(0x81da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x81d9));
        // 43 00B7
        gbc.setState(0xde2e, 0x1f0e, 0x1ff0, 0x207d, 0xf1d0, 0x24cc, 0x0, 0x1);
        gbc.writeMem(0xde2e, { 0x43 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1f0e, gbc.sp());
        EXPECT(0xde2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xde2e));
        // 43 00B8
        gbc.setState(0x2be, 0xdcb7, 0x4d40, 0x232c, 0xc2a9, 0xe6fc, 0x1, 0x1);
        gbc.writeMem(0x2be, { 0x43 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdcb7, gbc.sp());
        EXPECT(0x2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00B9
        gbc.setState(0xe261, 0x65bb, 0x7dc0, 0x78c, 0xbf19, 0xce70, 0x1, 0x1);
        gbc.writeMem(0xe261, { 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x65bb, gbc.sp());
        EXPECT(0xe262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe261));
        // 43 00BA
        gbc.setState(0xa9a8, 0x696f, 0xdfe0, 0xe3ab, 0x62d0, 0xb862, 0x0, 0x0);
        gbc.writeMem(0xa9a8, { 0x43 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x696f, gbc.sp());
        EXPECT(0xa9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa9a8));
        // 43 00BB
        gbc.setState(0xc964, 0x91e2, 0xfa90, 0x8062, 0x8faf, 0x16de, 0x1, 0x1);
        gbc.writeMem(0xc964, { 0x43 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x91e2, gbc.sp());
        EXPECT(0xc965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc964));
        // 43 00BC
        gbc.setState(0x7b06, 0xb6f, 0x1f30, 0x15c1, 0xf9af, 0xd30d, 0x1, 0x0);
        gbc.writeMem(0x7b06, { 0x43 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb6f, gbc.sp());
        EXPECT(0x7b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00BD
        gbc.setState(0xd83a, 0xde69, 0x7180, 0x1f72, 0xcb6a, 0xa048, 0x1, 0x1);
        gbc.writeMem(0xd83a, { 0x43 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xde69, gbc.sp());
        EXPECT(0xd83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd83a));
        // 43 00BE
        gbc.setState(0xd76b, 0xb145, 0xb2e0, 0xe223, 0x4dfa, 0x9f00, 0x1, 0x0);
        gbc.writeMem(0xd76b, { 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb145, gbc.sp());
        EXPECT(0xd76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd76b));
        // 43 00BF
        gbc.setState(0x6dd3, 0x2e2e, 0xddd0, 0x5923, 0x32a2, 0x8654, 0x1, 0x0);
        gbc.writeMem(0x6dd3, { 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2e2e, gbc.sp());
        EXPECT(0x6dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00C0
        gbc.setState(0x5f34, 0xd04c, 0x8d0, 0xb56c, 0xef09, 0x36e2, 0x0, 0x1);
        gbc.writeMem(0x5f34, { 0x43 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd04c, gbc.sp());
        EXPECT(0x5f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00C1
        gbc.setState(0x888d, 0x456f, 0x6690, 0x1b8c, 0x5ce5, 0xf393, 0x0, 0x1);
        gbc.writeMem(0x888d, { 0x43 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x456f, gbc.sp());
        EXPECT(0x888e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x888d));
        // 43 00C2
        gbc.setState(0xb15c, 0x2aee, 0x1a80, 0x95b0, 0x2960, 0x976d, 0x1, 0x1);
        gbc.writeMem(0xb15c, { 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2aee, gbc.sp());
        EXPECT(0xb15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb15c));
        // 43 00C3
        gbc.setState(0x3972, 0xf34a, 0xa50, 0xcb08, 0xd9fa, 0xb410, 0x1, 0x0);
        gbc.writeMem(0x3972, { 0x43 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf34a, gbc.sp());
        EXPECT(0x3973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00C4
        gbc.setState(0xc528, 0x7fee, 0xcef0, 0xbdec, 0xfb78, 0x89df, 0x0, 0x0);
        gbc.writeMem(0xc528, { 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7fee, gbc.sp());
        EXPECT(0xc529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc528));
        // 43 00C5
        gbc.setState(0x7549, 0xb366, 0x3c70, 0x1065, 0x2e9a, 0xa83a, 0x0, 0x0);
        gbc.writeMem(0x7549, { 0x43 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0x754a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00C6
        gbc.setState(0x9cb6, 0x7a29, 0x9600, 0x7e8f, 0xc9ff, 0xaa4d, 0x1, 0x0);
        gbc.writeMem(0x9cb6, { 0x43 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7a29, gbc.sp());
        EXPECT(0x9cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9cb6));
        // 43 00C7
        gbc.setState(0x28b8, 0xd3d7, 0xa510, 0xfe30, 0x9d6, 0x6533, 0x1, 0x0);
        gbc.writeMem(0x28b8, { 0x43 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd3d7, gbc.sp());
        EXPECT(0x28b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00C8
        gbc.setState(0x8966, 0xe1d0, 0x9f50, 0x8859, 0xc88a, 0x8200, 0x1, 0x1);
        gbc.writeMem(0x8966, { 0x43 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe1d0, gbc.sp());
        EXPECT(0x8967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8966));
        // 43 00C9
        gbc.setState(0x8685, 0xbd41, 0x6920, 0xb74, 0x375d, 0x1d62, 0x1, 0x1);
        gbc.writeMem(0x8685, { 0x43 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbd41, gbc.sp());
        EXPECT(0x8686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8685));
        // 43 00CA
        gbc.setState(0xb6db, 0x1cd3, 0x7100, 0x818b, 0xe6c9, 0x2ff2, 0x0, 0x0);
        gbc.writeMem(0xb6db, { 0x43 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1cd3, gbc.sp());
        EXPECT(0xb6dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb6db));
        // 43 00CB
        gbc.setState(0x25f3, 0x1769, 0x9ec0, 0x665, 0x5030, 0xffa0, 0x0, 0x1);
        gbc.writeMem(0x25f3, { 0x43 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1769, gbc.sp());
        EXPECT(0x25f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00CC
        gbc.setState(0x8b46, 0x8432, 0xf150, 0xf079, 0xd945, 0xa4d2, 0x1, 0x0);
        gbc.writeMem(0x8b46, { 0x43 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8432, gbc.sp());
        EXPECT(0x8b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8b46));
        // 43 00CD
        gbc.setState(0x7c47, 0x1660, 0xed50, 0xd957, 0x3b4f, 0x19ba, 0x0, 0x1);
        gbc.writeMem(0x7c47, { 0x43 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1660, gbc.sp());
        EXPECT(0x7c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00CE
        gbc.setState(0xabb9, 0xfc0c, 0x1060, 0x5429, 0xfe5c, 0x883b, 0x1, 0x0);
        gbc.writeMem(0xabb9, { 0x43 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfc0c, gbc.sp());
        EXPECT(0xabba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xabb9));
        // 43 00CF
        gbc.setState(0x3a3f, 0x748b, 0x7ad0, 0x6315, 0xc961, 0x9519, 0x1, 0x0);
        gbc.writeMem(0x3a3f, { 0x43 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x748b, gbc.sp());
        EXPECT(0x3a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00D0
        gbc.setState(0xb3d4, 0x6cb3, 0xa190, 0xebb6, 0xbed0, 0x4077, 0x1, 0x1);
        gbc.writeMem(0xb3d4, { 0x43 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6cb3, gbc.sp());
        EXPECT(0xb3d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb3d4));
        // 43 00D1
        gbc.setState(0x456f, 0xdabb, 0x97c0, 0xd3d9, 0xdaaf, 0xffb3, 0x0, 0x0);
        gbc.writeMem(0x456f, { 0x43 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdabb, gbc.sp());
        EXPECT(0x4570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00D2
        gbc.setState(0xc2a3, 0x71bb, 0x9af0, 0x5e7e, 0xc27, 0x4858, 0x1, 0x1);
        gbc.writeMem(0xc2a3, { 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x71bb, gbc.sp());
        EXPECT(0xc2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc2a3));
        // 43 00D3
        gbc.setState(0xaa49, 0x13df, 0xd630, 0x773d, 0xd4da, 0x7c26, 0x0, 0x1);
        gbc.writeMem(0xaa49, { 0x43 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x13df, gbc.sp());
        EXPECT(0xaa4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xaa49));
        // 43 00D4
        gbc.setState(0xdd67, 0x2aa6, 0xfd50, 0x4303, 0xc796, 0x8893, 0x0, 0x0);
        gbc.writeMem(0xdd67, { 0x43 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2aa6, gbc.sp());
        EXPECT(0xdd68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdd67));
        // 43 00D6
        gbc.setState(0x1958, 0x186f, 0x2670, 0xd78f, 0x5bbf, 0x7bd0, 0x1, 0x0);
        gbc.writeMem(0x1958, { 0x43 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x186f, gbc.sp());
        EXPECT(0x1959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00D7
        gbc.setState(0xea05, 0xb5f8, 0xb680, 0xba12, 0x8bfe, 0x4865, 0x0, 0x1);
        gbc.writeMem(0xea05, { 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb5f8, gbc.sp());
        EXPECT(0xea06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xea05));
        // 43 00D8
        gbc.setState(0x76b1, 0xa283, 0xa4c0, 0x6c09, 0xe1e7, 0x846e, 0x0, 0x1);
        gbc.writeMem(0x76b1, { 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa283, gbc.sp());
        EXPECT(0x76b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00D9
        gbc.setState(0xd897, 0xe2c8, 0x60f0, 0x1453, 0xae7f, 0xcb58, 0x1, 0x0);
        gbc.writeMem(0xd897, { 0x43 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe2c8, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd897));
        // 43 00DA
        gbc.setState(0x5430, 0x562f, 0x3130, 0xece, 0x26fb, 0x7c53, 0x1, 0x1);
        gbc.writeMem(0x5430, { 0x43 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x562f, gbc.sp());
        EXPECT(0x5431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00DB
        gbc.setState(0x99ae, 0x81e5, 0x8150, 0x46f6, 0x7f2f, 0xa6a7, 0x1, 0x0);
        gbc.writeMem(0x99ae, { 0x43 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x81e5, gbc.sp());
        EXPECT(0x99af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x99ae));
        // 43 00DC
        gbc.setState(0xbabc, 0x893c, 0x5d40, 0xb7f0, 0x6edf, 0x12a2, 0x1, 0x1);
        gbc.writeMem(0xbabc, { 0x43 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x893c, gbc.sp());
        EXPECT(0xbabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbabc));
        // 43 00DD
        gbc.setState(0xc88d, 0xc32f, 0xa100, 0xd38e, 0x6ff2, 0x1f4c, 0x1, 0x1);
        gbc.writeMem(0xc88d, { 0x43 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc32f, gbc.sp());
        EXPECT(0xc88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc88d));
        // 43 00DE
        gbc.setState(0x5bb6, 0x9f1, 0xac70, 0x182d, 0x9da7, 0xbefd, 0x0, 0x1);
        gbc.writeMem(0x5bb6, { 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9f1, gbc.sp());
        EXPECT(0x5bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00DF
        gbc.setState(0xe19a, 0x2eca, 0xb410, 0xa5c, 0xbf03, 0xfb2e, 0x0, 0x1);
        gbc.writeMem(0xe19a, { 0x43 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2eca, gbc.sp());
        EXPECT(0xe19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe19a));
        // 43 00E0
        gbc.setState(0x282a, 0x29fe, 0x8c40, 0xd357, 0xea2f, 0x7b70, 0x1, 0x1);
        gbc.writeMem(0x282a, { 0x43 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0x282b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00E1
        gbc.setState(0xe13c, 0xe86e, 0x4260, 0x82d3, 0x6a9d, 0x15de, 0x0, 0x1);
        gbc.writeMem(0xe13c, { 0x43 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe86e, gbc.sp());
        EXPECT(0xe13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe13c));
        // 43 00E2
        gbc.setState(0xe976, 0x2148, 0xc880, 0x1d5c, 0xc348, 0xb928, 0x1, 0x0);
        gbc.writeMem(0xe976, { 0x43 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2148, gbc.sp());
        EXPECT(0xe977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe976));
        // 43 00E3
        gbc.setState(0x3845, 0xe8a0, 0xa920, 0xbb72, 0x4005, 0xe618, 0x1, 0x0);
        gbc.writeMem(0x3845, { 0x43 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe8a0, gbc.sp());
        EXPECT(0x3846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00E4
        gbc.setState(0x7220, 0xab3f, 0xd200, 0xdbba, 0x7b16, 0x7ea9, 0x0, 0x0);
        gbc.writeMem(0x7220, { 0x43 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xab3f, gbc.sp());
        EXPECT(0x7221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00E5
        gbc.setState(0xf75, 0xbe0f, 0x69e0, 0x26a8, 0xfd0f, 0xa1bf, 0x0, 0x1);
        gbc.writeMem(0xf75, { 0x43 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbe0f, gbc.sp());
        EXPECT(0xf76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00E6
        gbc.setState(0x64dc, 0xfac, 0x1530, 0x26a4, 0x15d8, 0x8343, 0x1, 0x0);
        gbc.writeMem(0x64dc, { 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfac, gbc.sp());
        EXPECT(0x64dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00E7
        gbc.setState(0xce46, 0xcd39, 0x1e70, 0x371a, 0xdfa, 0x5e06, 0x1, 0x0);
        gbc.writeMem(0xce46, { 0x43 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcd39, gbc.sp());
        EXPECT(0xce47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xce46));
        // 43 00E8
        gbc.setState(0x93de, 0x57d3, 0x1e0, 0x7146, 0x1900, 0x4600, 0x0, 0x0);
        gbc.writeMem(0x93de, { 0x43 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x57d3, gbc.sp());
        EXPECT(0x93df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x93de));
        // 43 00E9
        gbc.setState(0xb7c7, 0xc621, 0xcd70, 0x5931, 0x2e1c, 0x5446, 0x0, 0x0);
        gbc.writeMem(0xb7c7, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc621, gbc.sp());
        EXPECT(0xb7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb7c7));
        // 43 00EA
        gbc.setState(0xaa00, 0xe6c2, 0x9480, 0xc89d, 0x801a, 0x8c3, 0x1, 0x0);
        gbc.writeMem(0xaa00, { 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe6c2, gbc.sp());
        EXPECT(0xaa01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xaa00));
        // 43 00EB
        gbc.setState(0x7caf, 0x6726, 0xa2b0, 0x14e4, 0x3ef0, 0xe66a, 0x0, 0x0);
        gbc.writeMem(0x7caf, { 0x43 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6726, gbc.sp());
        EXPECT(0x7cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00ED
        gbc.setState(0xde85, 0xee37, 0xbd90, 0x2a6e, 0xe8a, 0x349d, 0x1, 0x0);
        gbc.writeMem(0xde85, { 0x43 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xee37, gbc.sp());
        EXPECT(0xde86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xde85));
        // 43 00EE
        gbc.setState(0xa226, 0x4d45, 0x29f0, 0xf8cb, 0xbf0b, 0xc0, 0x1, 0x0);
        gbc.writeMem(0xa226, { 0x43 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4d45, gbc.sp());
        EXPECT(0xa227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa226));
        // 43 00EF
        gbc.setState(0xda25, 0xc111, 0x3540, 0xf120, 0x7c7e, 0x2093, 0x0, 0x1);
        gbc.writeMem(0xda25, { 0x43 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc111, gbc.sp());
        EXPECT(0xda26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xda25));
        // 43 00F0
        gbc.setState(0x4c4, 0x8a19, 0x8800, 0x8041, 0x2efd, 0xe0b7, 0x0, 0x0);
        gbc.writeMem(0x4c4, { 0x43 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8a19, gbc.sp());
        EXPECT(0x4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00F1
        gbc.setState(0x52fe, 0x4838, 0xb770, 0x9e19, 0x82e3, 0x6ef5, 0x0, 0x0);
        gbc.writeMem(0x52fe, { 0x43 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4838, gbc.sp());
        EXPECT(0x52ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00F2
        gbc.setState(0xd77b, 0xc1a7, 0x2b70, 0xf55a, 0x58a4, 0xea1, 0x1, 0x1);
        gbc.writeMem(0xd77b, { 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc1a7, gbc.sp());
        EXPECT(0xd77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd77b));
        // 43 00F3
        gbc.setState(0x6cd2, 0xe3eb, 0x3720, 0x66fb, 0xb741, 0xed28, 0x1, 0x1);
        gbc.writeMem(0x6cd2, { 0x43 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe3eb, gbc.sp());
        EXPECT(0x6cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00F4
        gbc.setState(0x3bd4, 0x4db9, 0xea60, 0x4e55, 0x7fe8, 0xc581, 0x1, 0x1);
        gbc.writeMem(0x3bd4, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4db9, gbc.sp());
        EXPECT(0x3bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00F5
        gbc.setState(0x9743, 0x8e0, 0x960, 0x2a8b, 0x3604, 0x954f, 0x1, 0x1);
        gbc.writeMem(0x9743, { 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8e0, gbc.sp());
        EXPECT(0x9744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9743));
        // 43 00F6
        gbc.setState(0xd843, 0xde89, 0x8300, 0x2413, 0xd544, 0xb86b, 0x0, 0x0);
        gbc.writeMem(0xd843, { 0x43 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xde89, gbc.sp());
        EXPECT(0xd844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd843));
        // 43 00F7
        gbc.setState(0xce32, 0x9ad4, 0x5780, 0x2626, 0x8b2b, 0x9e70, 0x1, 0x0);
        gbc.writeMem(0xce32, { 0x43 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0xce33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xce32));
        // 43 00F8
        gbc.setState(0x1117, 0xb35d, 0x9b70, 0xd5ce, 0x82c5, 0x931a, 0x1, 0x0);
        gbc.writeMem(0x1117, { 0x43 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb35d, gbc.sp());
        EXPECT(0x1118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00FA
        gbc.setState(0xbd02, 0x2d7d, 0x96d0, 0x2fe1, 0xff76, 0x4e0b, 0x0, 0x0);
        gbc.writeMem(0xbd02, { 0x43 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2d7d, gbc.sp());
        EXPECT(0xbd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbd02));
        // 43 00FC
        gbc.setState(0x4ce9, 0x4a64, 0x8840, 0x2be9, 0xcf59, 0xfce0, 0x1, 0x1);
        gbc.writeMem(0x4ce9, { 0x43 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4a64, gbc.sp());
        EXPECT(0x4cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 00FD
        gbc.setState(0x4b04, 0x30ff, 0x11d0, 0x9012, 0x4cd7, 0x61e3, 0x0, 0x0);
        gbc.writeMem(0x4b04, { 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x30ff, gbc.sp());
        EXPECT(0x4b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 00FE
        gbc.setState(0xba5f, 0x9307, 0x58a0, 0x5820, 0xf939, 0x6256, 0x0, 0x0);
        gbc.writeMem(0xba5f, { 0x43 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9307, gbc.sp());
        EXPECT(0xba60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xba5f));
        // 43 00FF
        gbc.setState(0x90a0, 0x6e87, 0x8430, 0x5c1e, 0x255, 0x545b, 0x1, 0x0);
        gbc.writeMem(0x90a0, { 0x43 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6e87, gbc.sp());
        EXPECT(0x90a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x90a0));
        // 43 0100
        gbc.setState(0x9e93, 0x87fc, 0xd030, 0x2252, 0x8362, 0xb7ba, 0x1, 0x1);
        gbc.writeMem(0x9e93, { 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x87fc, gbc.sp());
        EXPECT(0x9e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9e93));
        // 43 0101
        gbc.setState(0x6796, 0xdd5, 0xd310, 0xed9, 0x6c63, 0xf23f, 0x0, 0x1);
        gbc.writeMem(0x6796, { 0x43 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdd5, gbc.sp());
        EXPECT(0x6797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0102
        gbc.setState(0xd0db, 0x9bb3, 0x5a90, 0xe6cd, 0x990, 0x544a, 0x0, 0x0);
        gbc.writeMem(0xd0db, { 0x43 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9bb3, gbc.sp());
        EXPECT(0xd0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd0db));
        // 43 0103
        gbc.setState(0xedc4, 0x921a, 0xe5d0, 0x93ce, 0x33d9, 0x2bda, 0x0, 0x0);
        gbc.writeMem(0xedc4, { 0x43 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x921a, gbc.sp());
        EXPECT(0xedc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xedc4));
        // 43 0104
        gbc.setState(0x5152, 0x1438, 0x2da0, 0xf7f9, 0x36da, 0x9337, 0x0, 0x0);
        gbc.writeMem(0x5152, { 0x43 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1438, gbc.sp());
        EXPECT(0x5153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0105
        gbc.setState(0x5b4f, 0x24c1, 0xaeb0, 0x699f, 0x33e6, 0x6729, 0x1, 0x1);
        gbc.writeMem(0x5b4f, { 0x43 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x24c1, gbc.sp());
        EXPECT(0x5b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0106
        gbc.setState(0x91ce, 0x2b58, 0xcd20, 0x29d3, 0xf343, 0x6796, 0x0, 0x1);
        gbc.writeMem(0x91ce, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2b58, gbc.sp());
        EXPECT(0x91cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x91ce));
        // 43 0107
        gbc.setState(0x3c88, 0x4396, 0x8ab0, 0xa24f, 0xadce, 0x59c1, 0x0, 0x0);
        gbc.writeMem(0x3c88, { 0x43 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4396, gbc.sp());
        EXPECT(0x3c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0108
        gbc.setState(0xe5f7, 0xeb77, 0x1370, 0xfecd, 0x833, 0x6b01, 0x0, 0x1);
        gbc.writeMem(0xe5f7, { 0x43 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeb77, gbc.sp());
        EXPECT(0xe5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe5f7));
        // 43 0109
        gbc.setState(0x510, 0xd339, 0x1f00, 0x4548, 0xd314, 0xbde7, 0x0, 0x1);
        gbc.writeMem(0x510, { 0x43 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd339, gbc.sp());
        EXPECT(0x511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 010A
        gbc.setState(0x5357, 0xadc, 0x1230, 0x8f5, 0x3798, 0x895e, 0x0, 0x1);
        gbc.writeMem(0x5357, { 0x43 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xadc, gbc.sp());
        EXPECT(0x5358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 010B
        gbc.setState(0x16e6, 0xe93b, 0xdb0, 0x8b68, 0xf8fd, 0x2615, 0x0, 0x1);
        gbc.writeMem(0x16e6, { 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe93b, gbc.sp());
        EXPECT(0x16e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 010C
        gbc.setState(0x4d5, 0xac2e, 0x1db0, 0x2dd9, 0xea73, 0x66bb, 0x0, 0x1);
        gbc.writeMem(0x4d5, { 0x43 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xac2e, gbc.sp());
        EXPECT(0x4d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 010D
        gbc.setState(0xda96, 0x4169, 0xeaa0, 0x8a75, 0x4209, 0x84b7, 0x0, 0x0);
        gbc.writeMem(0xda96, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4169, gbc.sp());
        EXPECT(0xda97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xda96));
        // 43 0110
        gbc.setState(0x7005, 0xbfb4, 0xd760, 0x1894, 0xbfaf, 0xa6ed, 0x0, 0x0);
        gbc.writeMem(0x7005, { 0x43 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbfb4, gbc.sp());
        EXPECT(0x7006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0111
        gbc.setState(0x6a58, 0x6206, 0x8a60, 0x897c, 0x4e58, 0x6fb, 0x1, 0x1);
        gbc.writeMem(0x6a58, { 0x43 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6206, gbc.sp());
        EXPECT(0x6a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0112
        gbc.setState(0xe1cb, 0xb41f, 0xace0, 0xf03f, 0xb2b1, 0x770f, 0x1, 0x0);
        gbc.writeMem(0xe1cb, { 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb41f, gbc.sp());
        EXPECT(0xe1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe1cb));
        // 43 0113
        gbc.setState(0xb937, 0x3cc0, 0x90, 0x959, 0xefc, 0x32ca, 0x0, 0x0);
        gbc.writeMem(0xb937, { 0x43 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3cc0, gbc.sp());
        EXPECT(0xb938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb937));
        // 43 0114
        gbc.setState(0xc185, 0xb510, 0x3980, 0xa760, 0xc36f, 0x5df2, 0x1, 0x0);
        gbc.writeMem(0xc185, { 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb510, gbc.sp());
        EXPECT(0xc186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc185));
        // 43 0115
        gbc.setState(0x554a, 0x6e77, 0xd540, 0xb883, 0xf207, 0x758d, 0x0, 0x1);
        gbc.writeMem(0x554a, { 0x43 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6e77, gbc.sp());
        EXPECT(0x554b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0116
        gbc.setState(0x96ea, 0x1cdc, 0x4f70, 0xaa21, 0xddec, 0x413e, 0x0, 0x1);
        gbc.writeMem(0x96ea, { 0x43 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1cdc, gbc.sp());
        EXPECT(0x96eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x96ea));
        // 43 0117
        gbc.setState(0xa322, 0xb21a, 0x87b0, 0x8c6a, 0x95f0, 0xe31c, 0x1, 0x1);
        gbc.writeMem(0xa322, { 0x43 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb21a, gbc.sp());
        EXPECT(0xa323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa322));
        // 43 0118
        gbc.setState(0x4d7d, 0xdfb7, 0x1230, 0x1843, 0xa9df, 0x9874, 0x0, 0x0);
        gbc.writeMem(0x4d7d, { 0x43 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdfb7, gbc.sp());
        EXPECT(0x4d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0119
        gbc.setState(0x8a5a, 0xf866, 0xf050, 0x1b94, 0x77d4, 0x75e6, 0x0, 0x1);
        gbc.writeMem(0x8a5a, { 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf866, gbc.sp());
        EXPECT(0x8a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8a5a));
        // 43 011A
        gbc.setState(0x6b37, 0x4e, 0xfae0, 0xf63a, 0xd738, 0x4d47, 0x0, 0x0);
        gbc.writeMem(0x6b37, { 0x43 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4e, gbc.sp());
        EXPECT(0x6b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 011B
        gbc.setState(0xa161, 0x5570, 0x75c0, 0x7f81, 0xab05, 0xc078, 0x1, 0x1);
        gbc.writeMem(0xa161, { 0x43 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5570, gbc.sp());
        EXPECT(0xa162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa161));
        // 43 011C
        gbc.setState(0x2367, 0xf003, 0x7e00, 0x8830, 0x6eef, 0x28d6, 0x0, 0x0);
        gbc.writeMem(0x2367, { 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf003, gbc.sp());
        EXPECT(0x2368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 011D
        gbc.setState(0xe230, 0x418c, 0xf8c0, 0xfd90, 0xcfe9, 0xac05, 0x1, 0x0);
        gbc.writeMem(0xe230, { 0x43 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x418c, gbc.sp());
        EXPECT(0xe231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe230));
        // 43 011E
        gbc.setState(0xc25f, 0x11b9, 0xbbb0, 0x7405, 0x2ed6, 0x4553, 0x1, 0x0);
        gbc.writeMem(0xc25f, { 0x43 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x11b9, gbc.sp());
        EXPECT(0xc260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc25f));
        // 43 011F
        gbc.setState(0x5849, 0x8974, 0x88c0, 0x797a, 0x220c, 0x9f44, 0x0, 0x1);
        gbc.writeMem(0x5849, { 0x43 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8974, gbc.sp());
        EXPECT(0x584a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0120
        gbc.setState(0x747a, 0x3f31, 0xc9b0, 0xc42d, 0xa51, 0x8830, 0x1, 0x1);
        gbc.writeMem(0x747a, { 0x43 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3f31, gbc.sp());
        EXPECT(0x747b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0122
        gbc.setState(0x1448, 0x49ff, 0x59a0, 0x5153, 0xd776, 0x5b0e, 0x0, 0x1);
        gbc.writeMem(0x1448, { 0x43 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x49ff, gbc.sp());
        EXPECT(0x1449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0123
        gbc.setState(0x3c95, 0x514a, 0xccb0, 0x29ec, 0xf7b4, 0xece5, 0x0, 0x0);
        gbc.writeMem(0x3c95, { 0x43 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x514a, gbc.sp());
        EXPECT(0x3c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0124
        gbc.setState(0x9387, 0xcaf9, 0x8b20, 0x3377, 0x842c, 0x9a08, 0x0, 0x0);
        gbc.writeMem(0x9387, { 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcaf9, gbc.sp());
        EXPECT(0x9388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9387));
        // 43 0125
        gbc.setState(0x29cb, 0x7100, 0xcd40, 0x96c3, 0xfd9d, 0x1cdc, 0x0, 0x1);
        gbc.writeMem(0x29cb, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7100, gbc.sp());
        EXPECT(0x29cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0126
        gbc.setState(0x2be9, 0x77a3, 0x69e0, 0xaf52, 0xd7d4, 0x325e, 0x1, 0x1);
        gbc.writeMem(0x2be9, { 0x43 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x77a3, gbc.sp());
        EXPECT(0x2bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0127
        gbc.setState(0x50, 0x4a01, 0x12d0, 0xb1bf, 0x50a0, 0x7bd6, 0x0, 0x1);
        gbc.writeMem(0x50, { 0x43 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4a01, gbc.sp());
        EXPECT(0x51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0128
        gbc.setState(0x9b8b, 0xb976, 0x7d90, 0x655e, 0xfc92, 0x7f06, 0x0, 0x0);
        gbc.writeMem(0x9b8b, { 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb976, gbc.sp());
        EXPECT(0x9b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9b8b));
        // 43 0129
        gbc.setState(0x711b, 0xb2e3, 0x29d0, 0x9a30, 0x3587, 0x5adb, 0x1, 0x0);
        gbc.writeMem(0x711b, { 0x43 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb2e3, gbc.sp());
        EXPECT(0x711c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 012A
        gbc.setState(0x22af, 0xd15c, 0x40b0, 0x27ed, 0xd3d1, 0x7fd5, 0x1, 0x0);
        gbc.writeMem(0x22af, { 0x43 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd15c, gbc.sp());
        EXPECT(0x22b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 012B
        gbc.setState(0x8f0b, 0x7703, 0x8990, 0x688d, 0xcd75, 0x2e1a, 0x0, 0x1);
        gbc.writeMem(0x8f0b, { 0x43 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7703, gbc.sp());
        EXPECT(0x8f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8f0b));
        // 43 012C
        gbc.setState(0x5692, 0x1a1c, 0x7a00, 0x8e60, 0x6bf9, 0x3bd4, 0x0, 0x1);
        gbc.writeMem(0x5692, { 0x43 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1a1c, gbc.sp());
        EXPECT(0x5693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 012D
        gbc.setState(0x7dc5, 0xaf7e, 0x4320, 0xe8b9, 0xc021, 0xd934, 0x0, 0x1);
        gbc.writeMem(0x7dc5, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaf7e, gbc.sp());
        EXPECT(0x7dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 012E
        gbc.setState(0x8469, 0x85b1, 0x90b0, 0x8207, 0x34d0, 0xd4f4, 0x1, 0x0);
        gbc.writeMem(0x8469, { 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x85b1, gbc.sp());
        EXPECT(0x846a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8469));
        // 43 012F
        gbc.setState(0x7631, 0xb09, 0x6190, 0xcf5b, 0x66c4, 0xdb4a, 0x1, 0x1);
        gbc.writeMem(0x7631, { 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb09, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0130
        gbc.setState(0x7c97, 0xe024, 0x4ae0, 0x7816, 0x8556, 0xb3c9, 0x0, 0x1);
        gbc.writeMem(0x7c97, { 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe024, gbc.sp());
        EXPECT(0x7c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0131
        gbc.setState(0x243e, 0xbc25, 0x32b0, 0xe52a, 0x20db, 0xf699, 0x1, 0x0);
        gbc.writeMem(0x243e, { 0x43 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbc25, gbc.sp());
        EXPECT(0x243f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0132
        gbc.setState(0x4b0b, 0x15a, 0xaf50, 0xe1c5, 0x634b, 0xa5bf, 0x1, 0x1);
        gbc.writeMem(0x4b0b, { 0x43 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x15a, gbc.sp());
        EXPECT(0x4b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0133
        gbc.setState(0xeee1, 0x971c, 0x6f70, 0x13af, 0x8ae0, 0xe618, 0x0, 0x1);
        gbc.writeMem(0xeee1, { 0x43 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x971c, gbc.sp());
        EXPECT(0xeee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xeee1));
        // 43 0134
        gbc.setState(0x4f4c, 0x56a, 0x4ff0, 0x8bbe, 0x2fab, 0xf64d, 0x1, 0x1);
        gbc.writeMem(0x4f4c, { 0x43 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x56a, gbc.sp());
        EXPECT(0x4f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0135
        gbc.setState(0x2ad4, 0x2aed, 0x7150, 0xbb42, 0x389a, 0x2196, 0x0, 0x1);
        gbc.writeMem(0x2ad4, { 0x43 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2aed, gbc.sp());
        EXPECT(0x2ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0136
        gbc.setState(0x3005, 0x6925, 0x54b0, 0xc328, 0x4ad0, 0x32ab, 0x0, 0x1);
        gbc.writeMem(0x3005, { 0x43 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6925, gbc.sp());
        EXPECT(0x3006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0138
        gbc.setState(0x2a33, 0xc895, 0x3660, 0x4fc4, 0xf11b, 0x8ae5, 0x0, 0x0);
        gbc.writeMem(0x2a33, { 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc895, gbc.sp());
        EXPECT(0x2a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0139
        gbc.setState(0x2992, 0x7b6c, 0x38e0, 0x5d01, 0xcae3, 0x8033, 0x0, 0x0);
        gbc.writeMem(0x2992, { 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7b6c, gbc.sp());
        EXPECT(0x2993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 013A
        gbc.setState(0xa64a, 0x9daf, 0xe030, 0x42f1, 0x37e4, 0xd4a0, 0x0, 0x1);
        gbc.writeMem(0xa64a, { 0x43 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9daf, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa64a));
        // 43 013B
        gbc.setState(0xbbf5, 0x55a0, 0x6ba0, 0xbcaf, 0x3e5e, 0x5d52, 0x1, 0x1);
        gbc.writeMem(0xbbf5, { 0x43 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x55a0, gbc.sp());
        EXPECT(0xbbf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbbf5));
        // 43 013C
        gbc.setState(0xd685, 0x6742, 0xca30, 0xa681, 0x6a46, 0x62e2, 0x0, 0x1);
        gbc.writeMem(0xd685, { 0x43 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6742, gbc.sp());
        EXPECT(0xd686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd685));
        // 43 013D
        gbc.setState(0x82d2, 0xf369, 0x7b40, 0x3390, 0x85e1, 0x3212, 0x1, 0x0);
        gbc.writeMem(0x82d2, { 0x43 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf369, gbc.sp());
        EXPECT(0x82d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x82d2));
        // 43 013E
        gbc.setState(0xb87, 0x8903, 0x67c0, 0x9ae9, 0x30c9, 0x65b7, 0x1, 0x0);
        gbc.writeMem(0xb87, { 0x43 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8903, gbc.sp());
        EXPECT(0xb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 013F
        gbc.setState(0x2f28, 0x1f9d, 0x2b30, 0x143d, 0xc6f, 0x8d83, 0x0, 0x0);
        gbc.writeMem(0x2f28, { 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1f9d, gbc.sp());
        EXPECT(0x2f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0140
        gbc.setState(0x148e, 0x6718, 0xc170, 0xb34a, 0x95c5, 0xe0e0, 0x1, 0x0);
        gbc.writeMem(0x148e, { 0x43 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6718, gbc.sp());
        EXPECT(0x148f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0141
        gbc.setState(0x2b8e, 0x4090, 0x1cd0, 0xe551, 0x674, 0x2b5f, 0x0, 0x0);
        gbc.writeMem(0x2b8e, { 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4090, gbc.sp());
        EXPECT(0x2b8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0142
        gbc.setState(0x3de5, 0x6474, 0x8320, 0xed9c, 0x9851, 0xe4a9, 0x1, 0x1);
        gbc.writeMem(0x3de5, { 0x43 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6474, gbc.sp());
        EXPECT(0x3de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0143
        gbc.setState(0xa6df, 0x5108, 0xe0, 0x8bad, 0x9e9b, 0x448f, 0x0, 0x1);
        gbc.writeMem(0xa6df, { 0x43 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5108, gbc.sp());
        EXPECT(0xa6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa6df));
        // 43 0144
        gbc.setState(0x76f1, 0x83f3, 0x6b60, 0x925b, 0xbc90, 0xacc1, 0x1, 0x0);
        gbc.writeMem(0x76f1, { 0x43 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x83f3, gbc.sp());
        EXPECT(0x76f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0145
        gbc.setState(0xafb7, 0x19b9, 0x4e80, 0xa555, 0xa13, 0xf141, 0x0, 0x1);
        gbc.writeMem(0xafb7, { 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x19b9, gbc.sp());
        EXPECT(0xafb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xafb7));
        // 43 0146
        gbc.setState(0x6b04, 0xa6, 0x8e0, 0xd67, 0x3a, 0xacb7, 0x0, 0x1);
        gbc.writeMem(0x6b04, { 0x43 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa6, gbc.sp());
        EXPECT(0x6b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0147
        gbc.setState(0x527a, 0x3730, 0x87a0, 0xc47f, 0xf025, 0xb9a2, 0x1, 0x1);
        gbc.writeMem(0x527a, { 0x43 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3730, gbc.sp());
        EXPECT(0x527b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0148
        gbc.setState(0x1a3e, 0x2b57, 0xa8c0, 0x4366, 0x771c, 0x41bc, 0x0, 0x1);
        gbc.writeMem(0x1a3e, { 0x43 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2b57, gbc.sp());
        EXPECT(0x1a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0149
        gbc.setState(0x5a75, 0x1036, 0x4ab0, 0xfdf4, 0xdee2, 0xf4d1, 0x1, 0x0);
        gbc.writeMem(0x5a75, { 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1036, gbc.sp());
        EXPECT(0x5a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 014A
        gbc.setState(0xadc3, 0x65f5, 0xdcf0, 0x659d, 0xe786, 0xc0f5, 0x0, 0x0);
        gbc.writeMem(0xadc3, { 0x43 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x65f5, gbc.sp());
        EXPECT(0xadc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xadc3));
        // 43 014B
        gbc.setState(0xbd48, 0x45ba, 0xba10, 0x7a75, 0x4bb4, 0xd547, 0x1, 0x0);
        gbc.writeMem(0xbd48, { 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x45ba, gbc.sp());
        EXPECT(0xbd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbd48));
        // 43 014C
        gbc.setState(0x3973, 0x23c4, 0xd590, 0xf925, 0xaf6c, 0x8bf7, 0x0, 0x1);
        gbc.writeMem(0x3973, { 0x43 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x23c4, gbc.sp());
        EXPECT(0x3974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 014D
        gbc.setState(0xd59c, 0xfd3f, 0x12c0, 0xdc3b, 0x3aa9, 0x7a25, 0x1, 0x1);
        gbc.writeMem(0xd59c, { 0x43 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfd3f, gbc.sp());
        EXPECT(0xd59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd59c));
        // 43 014E
        gbc.setState(0x314b, 0xfbd6, 0x1ba0, 0x2699, 0xbd37, 0x4229, 0x0, 0x1);
        gbc.writeMem(0x314b, { 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfbd6, gbc.sp());
        EXPECT(0x314c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 014F
        gbc.setState(0x96b8, 0x80ed, 0x2d20, 0xe0d, 0xa243, 0x77df, 0x1, 0x0);
        gbc.writeMem(0x96b8, { 0x43 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x80ed, gbc.sp());
        EXPECT(0x96b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x96b8));
        // 43 0150
        gbc.setState(0x8a82, 0x73d1, 0x7f40, 0x3db7, 0x5b5c, 0x974d, 0x0, 0x1);
        gbc.writeMem(0x8a82, { 0x43 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x73d1, gbc.sp());
        EXPECT(0x8a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8a82));
        // 43 0151
        gbc.setState(0x38a1, 0x9aa5, 0xdcd0, 0x9581, 0xd98b, 0x1895, 0x1, 0x0);
        gbc.writeMem(0x38a1, { 0x43 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9aa5, gbc.sp());
        EXPECT(0x38a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0152
        gbc.setState(0xa827, 0x160c, 0x7e70, 0x83a, 0x83b7, 0x259f, 0x0, 0x1);
        gbc.writeMem(0xa827, { 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x160c, gbc.sp());
        EXPECT(0xa828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa827));
        // 43 0153
        gbc.setState(0x1f7e, 0xf78c, 0x60b0, 0xf909, 0xff8f, 0x512c, 0x1, 0x0);
        gbc.writeMem(0x1f7e, { 0x43 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf78c, gbc.sp());
        EXPECT(0x1f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0154
        gbc.setState(0x17f7, 0xd578, 0xca00, 0x2377, 0x5cdf, 0xde8a, 0x0, 0x1);
        gbc.writeMem(0x17f7, { 0x43 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd578, gbc.sp());
        EXPECT(0x17f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0155
        gbc.setState(0x18ec, 0x4d79, 0xce60, 0x9702, 0x2265, 0x4745, 0x1, 0x0);
        gbc.writeMem(0x18ec, { 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4d79, gbc.sp());
        EXPECT(0x18ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0157
        gbc.setState(0x782e, 0xba1e, 0x19c0, 0x875b, 0x24c7, 0xde3c, 0x0, 0x0);
        gbc.writeMem(0x782e, { 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xba1e, gbc.sp());
        EXPECT(0x782f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0158
        gbc.setState(0x1804, 0x7e12, 0xf850, 0x2e71, 0x39f7, 0x74a4, 0x0, 0x1);
        gbc.writeMem(0x1804, { 0x43 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7e12, gbc.sp());
        EXPECT(0x1805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0159
        gbc.setState(0x6669, 0x31dd, 0xbd80, 0x79e3, 0x763c, 0xb509, 0x1, 0x0);
        gbc.writeMem(0x6669, { 0x43 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x31dd, gbc.sp());
        EXPECT(0x666a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 015A
        gbc.setState(0xa45e, 0xd866, 0xe190, 0x3283, 0xfd7c, 0x52f, 0x1, 0x1);
        gbc.writeMem(0xa45e, { 0x43 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd866, gbc.sp());
        EXPECT(0xa45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa45e));
        // 43 015C
        gbc.setState(0xb393, 0x1b96, 0xecb0, 0x58a6, 0xd904, 0xa12a, 0x0, 0x1);
        gbc.writeMem(0xb393, { 0x43 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1b96, gbc.sp());
        EXPECT(0xb394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb393));
        // 43 015D
        gbc.setState(0x646b, 0xb270, 0xf480, 0x6406, 0x89d2, 0x4f2b, 0x0, 0x0);
        gbc.writeMem(0x646b, { 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb270, gbc.sp());
        EXPECT(0x646c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 015E
        gbc.setState(0xe65d, 0xa885, 0xf000, 0x824b, 0x3616, 0xe181, 0x0, 0x0);
        gbc.writeMem(0xe65d, { 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa885, gbc.sp());
        EXPECT(0xe65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe65d));
        // 43 0161
        gbc.setState(0xa9ef, 0x5e27, 0x2b60, 0xf3ef, 0xc90a, 0x227e, 0x1, 0x1);
        gbc.writeMem(0xa9ef, { 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5e27, gbc.sp());
        EXPECT(0xa9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa9ef));
        // 43 0162
        gbc.setState(0x77aa, 0x5cf9, 0x1210, 0xbe2c, 0xf2e8, 0x7c0, 0x1, 0x0);
        gbc.writeMem(0x77aa, { 0x43 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5cf9, gbc.sp());
        EXPECT(0x77ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0163
        gbc.setState(0x7716, 0x5924, 0xb510, 0x55fd, 0xe3d8, 0xb638, 0x1, 0x0);
        gbc.writeMem(0x7716, { 0x43 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5924, gbc.sp());
        EXPECT(0x7717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0164
        gbc.setState(0x2486, 0x3310, 0x6f00, 0x6f6f, 0x44af, 0x8d15, 0x0, 0x1);
        gbc.writeMem(0x2486, { 0x43 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3310, gbc.sp());
        EXPECT(0x2487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0165
        gbc.setState(0x4b89, 0x9020, 0xa080, 0x9c09, 0x52f3, 0x939, 0x1, 0x0);
        gbc.writeMem(0x4b89, { 0x43 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9020, gbc.sp());
        EXPECT(0x4b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0166
        gbc.setState(0x848a, 0x8563, 0x4940, 0x6aae, 0x328c, 0x7ffc, 0x1, 0x1);
        gbc.writeMem(0x848a, { 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8563, gbc.sp());
        EXPECT(0x848b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x848a));
        // 43 0167
        gbc.setState(0xa0f6, 0xa70d, 0x58b0, 0x9a7e, 0x8823, 0xe24b, 0x1, 0x0);
        gbc.writeMem(0xa0f6, { 0x43 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa70d, gbc.sp());
        EXPECT(0xa0f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa0f6));
        // 43 0168
        gbc.setState(0x295f, 0x9157, 0x7a70, 0x7188, 0x76fd, 0x708b, 0x0, 0x1);
        gbc.writeMem(0x295f, { 0x43 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9157, gbc.sp());
        EXPECT(0x2960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0169
        gbc.setState(0x9605, 0x2c2a, 0xace0, 0xfab, 0xcd90, 0x48e5, 0x0, 0x1);
        gbc.writeMem(0x9605, { 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2c2a, gbc.sp());
        EXPECT(0x9606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9605));
        // 43 016A
        gbc.setState(0x43c1, 0xba20, 0x9c0, 0xc55a, 0x60d2, 0x122f, 0x0, 0x1);
        gbc.writeMem(0x43c1, { 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xba20, gbc.sp());
        EXPECT(0x43c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 016C
        gbc.setState(0x7f02, 0x6136, 0xd8c0, 0x8adc, 0xe9f0, 0x9e37, 0x1, 0x1);
        gbc.writeMem(0x7f02, { 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6136, gbc.sp());
        EXPECT(0x7f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 016D
        gbc.setState(0x7db1, 0x95e6, 0xe660, 0x1263, 0x8f62, 0xc6d9, 0x1, 0x1);
        gbc.writeMem(0x7db1, { 0x43 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x95e6, gbc.sp());
        EXPECT(0x7db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 016E
        gbc.setState(0xc444, 0xf1b4, 0xff10, 0x82cc, 0x2d2f, 0xbab3, 0x1, 0x0);
        gbc.writeMem(0xc444, { 0x43 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf1b4, gbc.sp());
        EXPECT(0xc445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc444));
        // 43 016F
        gbc.setState(0x8009, 0x8ece, 0x8220, 0x4438, 0xe25e, 0x3212, 0x0, 0x0);
        gbc.writeMem(0x8009, { 0x43 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8ece, gbc.sp());
        EXPECT(0x800a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8009));
        // 43 0170
        gbc.setState(0xbc22, 0xe687, 0x65b0, 0x4ad0, 0x1af7, 0x8458, 0x0, 0x0);
        gbc.writeMem(0xbc22, { 0x43 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe687, gbc.sp());
        EXPECT(0xbc23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbc22));
        // 43 0171
        gbc.setState(0x7eff, 0x576f, 0x33b0, 0xe9b2, 0xc7de, 0xbd58, 0x0, 0x1);
        gbc.writeMem(0x7eff, { 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x576f, gbc.sp());
        EXPECT(0x7f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0172
        gbc.setState(0x327b, 0x6f0a, 0x7d00, 0x7d3e, 0x1860, 0xdce, 0x0, 0x0);
        gbc.writeMem(0x327b, { 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6f0a, gbc.sp());
        EXPECT(0x327c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0173
        gbc.setState(0x7987, 0x62c1, 0x7690, 0x68ef, 0xd648, 0x12be, 0x0, 0x1);
        gbc.writeMem(0x7987, { 0x43 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x62c1, gbc.sp());
        EXPECT(0x7988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0175
        gbc.setState(0x335b, 0xdb6d, 0xd6d0, 0xaa9f, 0x73d7, 0x6dfa, 0x0, 0x1);
        gbc.writeMem(0x335b, { 0x43 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdb6d, gbc.sp());
        EXPECT(0x335c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0176
        gbc.setState(0x86d2, 0x4fe5, 0x4290, 0x8b9c, 0x436c, 0x9df7, 0x1, 0x0);
        gbc.writeMem(0x86d2, { 0x43 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4fe5, gbc.sp());
        EXPECT(0x86d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x86d2));
        // 43 0177
        gbc.setState(0xab2a, 0xa72e, 0xdaa0, 0x9c46, 0xa2a0, 0x3718, 0x0, 0x1);
        gbc.writeMem(0xab2a, { 0x43 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa72e, gbc.sp());
        EXPECT(0xab2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xab2a));
        // 43 0178
        gbc.setState(0x2e5b, 0x9650, 0x1af0, 0x7916, 0x9e5c, 0x7b0, 0x1, 0x1);
        gbc.writeMem(0x2e5b, { 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9650, gbc.sp());
        EXPECT(0x2e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0179
        gbc.setState(0xdf4a, 0x75e1, 0x6090, 0x1783, 0x5ac1, 0x44bd, 0x0, 0x0);
        gbc.writeMem(0xdf4a, { 0x43 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x75e1, gbc.sp());
        EXPECT(0xdf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdf4a));
        // 43 017A
        gbc.setState(0x464c, 0x5dfb, 0xea70, 0x14af, 0x2879, 0x9e3e, 0x1, 0x0);
        gbc.writeMem(0x464c, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5dfb, gbc.sp());
        EXPECT(0x464d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 017B
        gbc.setState(0x91b5, 0x5320, 0x3b0, 0x6eb4, 0x27ff, 0xea87, 0x0, 0x1);
        gbc.writeMem(0x91b5, { 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5320, gbc.sp());
        EXPECT(0x91b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x91b5));
        // 43 017C
        gbc.setState(0x264f, 0x52d3, 0x2890, 0x7d69, 0x6612, 0x7357, 0x1, 0x0);
        gbc.writeMem(0x264f, { 0x43 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x52d3, gbc.sp());
        EXPECT(0x2650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 017D
        gbc.setState(0xede, 0xb7ea, 0x3f20, 0x233c, 0xfcd4, 0x8566, 0x0, 0x1);
        gbc.writeMem(0xede, { 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb7ea, gbc.sp());
        EXPECT(0xedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 017E
        gbc.setState(0x3650, 0x46c7, 0xf440, 0xfbec, 0x9a8f, 0x79b0, 0x0, 0x1);
        gbc.writeMem(0x3650, { 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x46c7, gbc.sp());
        EXPECT(0x3651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 017F
        gbc.setState(0x218d, 0xf48, 0xf630, 0x5bca, 0x6927, 0xaa5c, 0x1, 0x1);
        gbc.writeMem(0x218d, { 0x43 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf48, gbc.sp());
        EXPECT(0x218e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0180
        gbc.setState(0x3db1, 0xcce, 0x8790, 0x12cb, 0x8654, 0xb79c, 0x1, 0x1);
        gbc.writeMem(0x3db1, { 0x43 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcce, gbc.sp());
        EXPECT(0x3db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0181
        gbc.setState(0x3da0, 0x132, 0x84f0, 0x24cb, 0x268b, 0xf3f, 0x0, 0x1);
        gbc.writeMem(0x3da0, { 0x43 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x132, gbc.sp());
        EXPECT(0x3da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0182
        gbc.setState(0x930d, 0xa6da, 0xb1b0, 0xcb80, 0xd1ae, 0xad3c, 0x0, 0x0);
        gbc.writeMem(0x930d, { 0x43 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa6da, gbc.sp());
        EXPECT(0x930e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x930d));
        // 43 0183
        gbc.setState(0x8f11, 0x6072, 0xa170, 0x630, 0x162e, 0x3225, 0x0, 0x0);
        gbc.writeMem(0x8f11, { 0x43 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6072, gbc.sp());
        EXPECT(0x8f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8f11));
        // 43 0184
        gbc.setState(0x7773, 0x8d24, 0xe860, 0x2eb9, 0xd19d, 0x284b, 0x0, 0x1);
        gbc.writeMem(0x7773, { 0x43 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8d24, gbc.sp());
        EXPECT(0x7774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0185
        gbc.setState(0x7e7c, 0x59fb, 0x4ad0, 0x9408, 0x1a14, 0xa237, 0x1, 0x0);
        gbc.writeMem(0x7e7c, { 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x59fb, gbc.sp());
        EXPECT(0x7e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0186
        gbc.setState(0xa031, 0xf8f7, 0xfe10, 0x81ca, 0x5e59, 0x5e18, 0x0, 0x1);
        gbc.writeMem(0xa031, { 0x43 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf8f7, gbc.sp());
        EXPECT(0xa032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa031));
        // 43 0188
        gbc.setState(0xb85, 0x900, 0x9cf0, 0x8999, 0xd8c5, 0x1ebd, 0x0, 0x0);
        gbc.writeMem(0xb85, { 0x43 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x900, gbc.sp());
        EXPECT(0xb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0189
        gbc.setState(0x5990, 0xb065, 0x9090, 0x8f3f, 0x8d05, 0xb1d2, 0x0, 0x0);
        gbc.writeMem(0x5990, { 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb065, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 018A
        gbc.setState(0xc756, 0xeb7, 0x8b90, 0xa6da, 0x39fe, 0x4dde, 0x1, 0x1);
        gbc.writeMem(0xc756, { 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeb7, gbc.sp());
        EXPECT(0xc757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc756));
        // 43 018B
        gbc.setState(0xac8a, 0x1824, 0x95d0, 0x683d, 0xf5a2, 0x9500, 0x1, 0x0);
        gbc.writeMem(0xac8a, { 0x43 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1824, gbc.sp());
        EXPECT(0xac8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xac8a));
        // 43 018C
        gbc.setState(0xa75f, 0xb7f2, 0xd80, 0xadb0, 0xe424, 0x42f1, 0x0, 0x0);
        gbc.writeMem(0xa75f, { 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb7f2, gbc.sp());
        EXPECT(0xa760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa75f));
        // 43 018D
        gbc.setState(0x644c, 0xd56f, 0x810, 0x1ba2, 0xbef3, 0x8293, 0x0, 0x1);
        gbc.writeMem(0x644c, { 0x43 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd56f, gbc.sp());
        EXPECT(0x644d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 018E
        gbc.setState(0xb25a, 0x5841, 0x72e0, 0xbb96, 0x346a, 0x79fe, 0x1, 0x1);
        gbc.writeMem(0xb25a, { 0x43 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5841, gbc.sp());
        EXPECT(0xb25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb25a));
        // 43 018F
        gbc.setState(0xa386, 0xd02f, 0x2a90, 0xd5bb, 0x290b, 0x4931, 0x0, 0x0);
        gbc.writeMem(0xa386, { 0x43 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd02f, gbc.sp());
        EXPECT(0xa387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa386));
        // 43 0190
        gbc.setState(0x34cc, 0xd683, 0x3ab0, 0x463e, 0xac71, 0xa679, 0x1, 0x1);
        gbc.writeMem(0x34cc, { 0x43 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd683, gbc.sp());
        EXPECT(0x34cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0191
        gbc.setState(0xa8b, 0x8227, 0xb8d0, 0x1921, 0x2e55, 0x963e, 0x1, 0x0);
        gbc.writeMem(0xa8b, { 0x43 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8227, gbc.sp());
        EXPECT(0xa8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0192
        gbc.setState(0xeef, 0x7a31, 0x8c60, 0x5f8e, 0xf08a, 0x74c2, 0x1, 0x0);
        gbc.writeMem(0xeef, { 0x43 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7a31, gbc.sp());
        EXPECT(0xef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0193
        gbc.setState(0x71e0, 0x2864, 0x720, 0x8060, 0x2f9a, 0x9aa7, 0x1, 0x0);
        gbc.writeMem(0x71e0, { 0x43 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2864, gbc.sp());
        EXPECT(0x71e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0194
        gbc.setState(0x2dba, 0xfea0, 0x97f0, 0xcd14, 0xc00b, 0x8756, 0x1, 0x0);
        gbc.writeMem(0x2dba, { 0x43 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfea0, gbc.sp());
        EXPECT(0x2dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0195
        gbc.setState(0xef85, 0x8124, 0x2a60, 0x6bf3, 0x4db8, 0x154f, 0x1, 0x0);
        gbc.writeMem(0xef85, { 0x43 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8124, gbc.sp());
        EXPECT(0xef86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xef85));
        // 43 0196
        gbc.setState(0x5ed4, 0xc3a, 0xc390, 0x691, 0xd129, 0x21be, 0x1, 0x0);
        gbc.writeMem(0x5ed4, { 0x43 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc3a, gbc.sp());
        EXPECT(0x5ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0197
        gbc.setState(0x2645, 0xe9b1, 0x8ac0, 0x72d6, 0xaee8, 0x190a, 0x1, 0x0);
        gbc.writeMem(0x2645, { 0x43 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe9b1, gbc.sp());
        EXPECT(0x2646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0198
        gbc.setState(0xe698, 0xec80, 0x8c00, 0x1307, 0xacb2, 0xa8da, 0x0, 0x0);
        gbc.writeMem(0xe698, { 0x43 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xec80, gbc.sp());
        EXPECT(0xe699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe698));
        // 43 0199
        gbc.setState(0x33e1, 0x7947, 0x39b0, 0x4263, 0xf092, 0xd4f0, 0x0, 0x0);
        gbc.writeMem(0x33e1, { 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7947, gbc.sp());
        EXPECT(0x33e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 019A
        gbc.setState(0xa451, 0xc21b, 0x7160, 0xf3d4, 0x2f23, 0x877f, 0x0, 0x0);
        gbc.writeMem(0xa451, { 0x43 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc21b, gbc.sp());
        EXPECT(0xa452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa451));
        // 43 019B
        gbc.setState(0x7842, 0x691c, 0x78e0, 0xab61, 0x8bda, 0xbb34, 0x0, 0x0);
        gbc.writeMem(0x7842, { 0x43 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x691c, gbc.sp());
        EXPECT(0x7843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 019C
        gbc.setState(0x7d5d, 0x137f, 0xa4c0, 0x706, 0x92d, 0xe049, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x137f, gbc.sp());
        EXPECT(0x7d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 019F
        gbc.setState(0x402d, 0x16da, 0xdf70, 0x1237, 0x701c, 0xbf14, 0x0, 0x1);
        gbc.writeMem(0x402d, { 0x43 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x16da, gbc.sp());
        EXPECT(0x402e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01A0
        gbc.setState(0x1b7a, 0x49ef, 0x4690, 0x878f, 0x1556, 0xc6ab, 0x1, 0x0);
        gbc.writeMem(0x1b7a, { 0x43 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x49ef, gbc.sp());
        EXPECT(0x1b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01A1
        gbc.setState(0x8a01, 0xd900, 0xcf10, 0x112e, 0xf7ce, 0x7072, 0x0, 0x0);
        gbc.writeMem(0x8a01, { 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd900, gbc.sp());
        EXPECT(0x8a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8a01));
        // 43 01A2
        gbc.setState(0x5245, 0x537d, 0x8700, 0x1b2f, 0xcb78, 0x695c, 0x0, 0x1);
        gbc.writeMem(0x5245, { 0x43 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x537d, gbc.sp());
        EXPECT(0x5246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01A4
        gbc.setState(0x2244, 0xaec0, 0xebf0, 0x790e, 0x56be, 0xaf77, 0x1, 0x0);
        gbc.writeMem(0x2244, { 0x43 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaec0, gbc.sp());
        EXPECT(0x2245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01A6
        gbc.setState(0xe18d, 0xff46, 0x8900, 0x2ea0, 0x6f29, 0x27cf, 0x1, 0x0);
        gbc.writeMem(0xe18d, { 0x43 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xff46, gbc.sp());
        EXPECT(0xe18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe18d));
        // 43 01A7
        gbc.setState(0xa72e, 0xfc92, 0xbe20, 0x2653, 0xf2e7, 0x2a67, 0x0, 0x0);
        gbc.writeMem(0xa72e, { 0x43 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfc92, gbc.sp());
        EXPECT(0xa72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa72e));
        // 43 01A8
        gbc.setState(0x6d4b, 0x9ca5, 0xcdc0, 0xf121, 0x9677, 0x6195, 0x1, 0x0);
        gbc.writeMem(0x6d4b, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9ca5, gbc.sp());
        EXPECT(0x6d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01A9
        gbc.setState(0x5020, 0x2ae0, 0xd750, 0x8582, 0x48a8, 0x4e4a, 0x1, 0x1);
        gbc.writeMem(0x5020, { 0x43 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2ae0, gbc.sp());
        EXPECT(0x5021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01AA
        gbc.setState(0x6194, 0x3757, 0xa6e0, 0xb89d, 0x22a1, 0xc0b9, 0x0, 0x1);
        gbc.writeMem(0x6194, { 0x43 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3757, gbc.sp());
        EXPECT(0x6195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01AB
        gbc.setState(0xa9c8, 0x54bc, 0x4e80, 0x7249, 0xab04, 0xbaea, 0x0, 0x0);
        gbc.writeMem(0xa9c8, { 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x54bc, gbc.sp());
        EXPECT(0xa9c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa9c8));
        // 43 01AC
        gbc.setState(0x2832, 0xe8d4, 0xc750, 0x6063, 0x606e, 0x2178, 0x1, 0x1);
        gbc.writeMem(0x2832, { 0x43 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe8d4, gbc.sp());
        EXPECT(0x2833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01AD
        gbc.setState(0x2dcb, 0x4151, 0xb3b0, 0x9190, 0x1291, 0xb2c9, 0x0, 0x1);
        gbc.writeMem(0x2dcb, { 0x43 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4151, gbc.sp());
        EXPECT(0x2dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01AE
        gbc.setState(0xc10c, 0xe416, 0x4940, 0x7b43, 0xc5fc, 0xcb54, 0x0, 0x0);
        gbc.writeMem(0xc10c, { 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe416, gbc.sp());
        EXPECT(0xc10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc10c));
        // 43 01AF
        gbc.setState(0x365f, 0xbf76, 0x9a40, 0x6306, 0xc438, 0x6aee, 0x0, 0x0);
        gbc.writeMem(0x365f, { 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbf76, gbc.sp());
        EXPECT(0x3660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01B0
        gbc.setState(0x9d12, 0xf27d, 0x1420, 0xab20, 0xa87d, 0xe962, 0x0, 0x0);
        gbc.writeMem(0x9d12, { 0x43 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf27d, gbc.sp());
        EXPECT(0x9d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9d12));
        // 43 01B1
        gbc.setState(0x395, 0x7deb, 0x48b0, 0xd21c, 0x3a42, 0x5720, 0x1, 0x0);
        gbc.writeMem(0x395, { 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7deb, gbc.sp());
        EXPECT(0x396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01B2
        gbc.setState(0xce9c, 0x2a4d, 0x2bf0, 0x9afc, 0xaa11, 0xd949, 0x1, 0x1);
        gbc.writeMem(0xce9c, { 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2a4d, gbc.sp());
        EXPECT(0xce9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xce9c));
        // 43 01B3
        gbc.setState(0x8d79, 0x3bf5, 0x4d50, 0xa813, 0x4c0e, 0x84b7, 0x1, 0x0);
        gbc.writeMem(0x8d79, { 0x43 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3bf5, gbc.sp());
        EXPECT(0x8d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8d79));
        // 43 01B4
        gbc.setState(0x4295, 0x6592, 0xbb80, 0xdbd7, 0x7910, 0x3bb9, 0x1, 0x1);
        gbc.writeMem(0x4295, { 0x43 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6592, gbc.sp());
        EXPECT(0x4296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01B5
        gbc.setState(0xddb3, 0x8a70, 0x6f20, 0x9df7, 0x3144, 0x63b5, 0x1, 0x0);
        gbc.writeMem(0xddb3, { 0x43 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8a70, gbc.sp());
        EXPECT(0xddb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xddb3));
        // 43 01B6
        gbc.setState(0x6594, 0xf612, 0xde50, 0xe674, 0x359a, 0x2d0e, 0x1, 0x1);
        gbc.writeMem(0x6594, { 0x43 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf612, gbc.sp());
        EXPECT(0x6595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01B7
        gbc.setState(0x738c, 0xb37, 0xa20, 0x8983, 0x50d9, 0x55a9, 0x1, 0x0);
        gbc.writeMem(0x738c, { 0x43 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb37, gbc.sp());
        EXPECT(0x738d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01B8
        gbc.setState(0x5d, 0xbfd7, 0xd60, 0xa4b5, 0x36c4, 0x886e, 0x0, 0x1);
        gbc.writeMem(0x5d, { 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbfd7, gbc.sp());
        EXPECT(0x5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01B9
        gbc.setState(0xa4dd, 0x1479, 0xd7d0, 0xbe8e, 0x89e2, 0x673, 0x1, 0x0);
        gbc.writeMem(0xa4dd, { 0x43 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1479, gbc.sp());
        EXPECT(0xa4de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa4dd));
        // 43 01BA
        gbc.setState(0xd76c, 0xee00, 0xd080, 0xd170, 0xea47, 0x823e, 0x1, 0x0);
        gbc.writeMem(0xd76c, { 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xee00, gbc.sp());
        EXPECT(0xd76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd76c));
        // 43 01BB
        gbc.setState(0x300, 0xa2a2, 0x5920, 0x2a5a, 0xbaf0, 0x19af, 0x0, 0x1);
        gbc.writeMem(0x300, { 0x43 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa2a2, gbc.sp());
        EXPECT(0x301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01BC
        gbc.setState(0xa5fa, 0xc9f7, 0x3a70, 0xf693, 0xbec, 0xecfe, 0x1, 0x1);
        gbc.writeMem(0xa5fa, { 0x43 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc9f7, gbc.sp());
        EXPECT(0xa5fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa5fa));
        // 43 01BD
        gbc.setState(0xb447, 0xda2f, 0x9a00, 0x301a, 0x4cd, 0xcd90, 0x0, 0x0);
        gbc.writeMem(0xb447, { 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xda2f, gbc.sp());
        EXPECT(0xb448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb447));
        // 43 01BE
        gbc.setState(0xd135, 0x9ed, 0x1d40, 0x41aa, 0x1294, 0x53b9, 0x0, 0x1);
        gbc.writeMem(0xd135, { 0x43 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9ed, gbc.sp());
        EXPECT(0xd136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd135));
        // 43 01BF
        gbc.setState(0xa20a, 0x4284, 0xef70, 0x5df5, 0x5f01, 0xb741, 0x0, 0x1);
        gbc.writeMem(0xa20a, { 0x43 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4284, gbc.sp());
        EXPECT(0xa20b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa20a));
        // 43 01C0
        gbc.setState(0x5f05, 0x1132, 0x930, 0xa82b, 0x8d84, 0xc5dd, 0x1, 0x0);
        gbc.writeMem(0x5f05, { 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1132, gbc.sp());
        EXPECT(0x5f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01C1
        gbc.setState(0x556c, 0x3384, 0xfef0, 0xcf82, 0x58c1, 0x5f16, 0x1, 0x1);
        gbc.writeMem(0x556c, { 0x43 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3384, gbc.sp());
        EXPECT(0x556d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01C2
        gbc.setState(0xae76, 0x388a, 0x6530, 0x8587, 0xd42, 0x40ab, 0x1, 0x1);
        gbc.writeMem(0xae76, { 0x43 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x388a, gbc.sp());
        EXPECT(0xae77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xae76));
        // 43 01C3
        gbc.setState(0x8ab8, 0xaa1f, 0x5170, 0xddba, 0xb9c9, 0x153e, 0x1, 0x1);
        gbc.writeMem(0x8ab8, { 0x43 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaa1f, gbc.sp());
        EXPECT(0x8ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8ab8));
        // 43 01C4
        gbc.setState(0x84e7, 0x4655, 0xd270, 0xf525, 0x7250, 0xe04c, 0x1, 0x0);
        gbc.writeMem(0x84e7, { 0x43 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4655, gbc.sp());
        EXPECT(0x84e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x84e7));
        // 43 01C5
        gbc.setState(0xdf6e, 0x604f, 0x74a0, 0x58b, 0xeb08, 0x6d3e, 0x0, 0x1);
        gbc.writeMem(0xdf6e, { 0x43 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x604f, gbc.sp());
        EXPECT(0xdf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdf6e));
        // 43 01C6
        gbc.setState(0x7169, 0xced, 0x1400, 0xb1e5, 0x895e, 0xcfc7, 0x0, 0x1);
        gbc.writeMem(0x7169, { 0x43 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xced, gbc.sp());
        EXPECT(0x716a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01C7
        gbc.setState(0x95a8, 0x3b1b, 0x7f0, 0xf7d7, 0x982d, 0x61e, 0x1, 0x1);
        gbc.writeMem(0x95a8, { 0x43 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3b1b, gbc.sp());
        EXPECT(0x95a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x95a8));
        // 43 01C8
        gbc.setState(0x5324, 0xcac4, 0x7530, 0xdd8b, 0x1799, 0x82a3, 0x1, 0x0);
        gbc.writeMem(0x5324, { 0x43 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcac4, gbc.sp());
        EXPECT(0x5325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01C9
        gbc.setState(0x5eb, 0x717c, 0x1870, 0x37e6, 0x46b0, 0x426d, 0x1, 0x0);
        gbc.writeMem(0x5eb, { 0x43 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x717c, gbc.sp());
        EXPECT(0x5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01CA
        gbc.setState(0xccc6, 0x67fa, 0x8080, 0xbf8, 0x9c41, 0x4d06, 0x0, 0x0);
        gbc.writeMem(0xccc6, { 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x67fa, gbc.sp());
        EXPECT(0xccc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xccc6));
        // 43 01CB
        gbc.setState(0xddbe, 0xe337, 0x2770, 0x8936, 0x67c4, 0x479c, 0x0, 0x0);
        gbc.writeMem(0xddbe, { 0x43 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe337, gbc.sp());
        EXPECT(0xddbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xddbe));
        // 43 01CC
        gbc.setState(0x7d66, 0xaf40, 0xdd40, 0x71c5, 0x3274, 0x747a, 0x1, 0x1);
        gbc.writeMem(0x7d66, { 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xaf40, gbc.sp());
        EXPECT(0x7d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01CD
        gbc.setState(0x1692, 0x12cd, 0x2b30, 0x90ee, 0x40b3, 0x8bd6, 0x0, 0x0);
        gbc.writeMem(0x1692, { 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x12cd, gbc.sp());
        EXPECT(0x1693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01CE
        gbc.setState(0x168, 0x420, 0x64f0, 0x7cb5, 0x7f0b, 0x8417, 0x0, 0x0);
        gbc.writeMem(0x168, { 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x420, gbc.sp());
        EXPECT(0x169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01CF
        gbc.setState(0xafcb, 0x6eba, 0xe060, 0x8a13, 0xed45, 0xb440, 0x0, 0x1);
        gbc.writeMem(0xafcb, { 0x43 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6eba, gbc.sp());
        EXPECT(0xafcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xafcb));
        // 43 01D0
        gbc.setState(0x587a, 0xb547, 0xb6e0, 0x23d5, 0x9604, 0xe28c, 0x0, 0x0);
        gbc.writeMem(0x587a, { 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb547, gbc.sp());
        EXPECT(0x587b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01D1
        gbc.setState(0x7b3c, 0x755, 0xe060, 0x52aa, 0x4fb8, 0x8761, 0x0, 0x1);
        gbc.writeMem(0x7b3c, { 0x43 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x755, gbc.sp());
        EXPECT(0x7b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01D2
        gbc.setState(0x39c7, 0x5a9d, 0xca60, 0xdb2d, 0x864a, 0x1823, 0x1, 0x1);
        gbc.writeMem(0x39c7, { 0x43 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5a9d, gbc.sp());
        EXPECT(0x39c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01D3
        gbc.setState(0x7e6a, 0x7758, 0x4470, 0xfaea, 0x9d1, 0x72bd, 0x0, 0x0);
        gbc.writeMem(0x7e6a, { 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7758, gbc.sp());
        EXPECT(0x7e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01D4
        gbc.setState(0x7fc6, 0xb760, 0x8d00, 0x63e5, 0x793b, 0x8e59, 0x0, 0x1);
        gbc.writeMem(0x7fc6, { 0x43 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb760, gbc.sp());
        EXPECT(0x7fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01D5
        gbc.setState(0xbda6, 0xc304, 0xe2e0, 0x7793, 0x6d59, 0xb010, 0x0, 0x1);
        gbc.writeMem(0xbda6, { 0x43 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc304, gbc.sp());
        EXPECT(0xbda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbda6));
        // 43 01D6
        gbc.setState(0xd881, 0x4f23, 0x4900, 0x9e53, 0x311e, 0x5837, 0x1, 0x0);
        gbc.writeMem(0xd881, { 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4f23, gbc.sp());
        EXPECT(0xd882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd881));
        // 43 01D7
        gbc.setState(0xde85, 0x9440, 0x9650, 0x61f8, 0xdbbb, 0xb01d, 0x0, 0x1);
        gbc.writeMem(0xde85, { 0x43 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9440, gbc.sp());
        EXPECT(0xde86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xde85));
        // 43 01D8
        gbc.setState(0x33b8, 0xb509, 0x7d90, 0x5f8, 0x7b3a, 0xc06f, 0x1, 0x0);
        gbc.writeMem(0x33b8, { 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb509, gbc.sp());
        EXPECT(0x33b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01D9
        gbc.setState(0xb976, 0x7b79, 0x80d0, 0x1d4a, 0x9c05, 0x694, 0x1, 0x0);
        gbc.writeMem(0xb976, { 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7b79, gbc.sp());
        EXPECT(0xb977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb976));
        // 43 01DA
        gbc.setState(0x760, 0xe324, 0x6240, 0x28a8, 0xb704, 0xa43, 0x0, 0x1);
        gbc.writeMem(0x760, { 0x43 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe324, gbc.sp());
        EXPECT(0x761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01DC
        gbc.setState(0xb666, 0x2c24, 0xefc0, 0xaeba, 0xc62, 0xb013, 0x1, 0x1);
        gbc.writeMem(0xb666, { 0x43 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2c24, gbc.sp());
        EXPECT(0xb667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb666));
        // 43 01DD
        gbc.setState(0x71be, 0x1e51, 0xbd80, 0xbaee, 0xf578, 0x99f0, 0x0, 0x1);
        gbc.writeMem(0x71be, { 0x43 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1e51, gbc.sp());
        EXPECT(0x71bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01DE
        gbc.setState(0x13f1, 0xebab, 0x83e0, 0x3345, 0x28b9, 0x9230, 0x1, 0x0);
        gbc.writeMem(0x13f1, { 0x43 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xebab, gbc.sp());
        EXPECT(0x13f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01DF
        gbc.setState(0x5553, 0x865b, 0x1c80, 0xeb5f, 0x32b7, 0xb803, 0x1, 0x1);
        gbc.writeMem(0x5553, { 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x865b, gbc.sp());
        EXPECT(0x5554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01E0
        gbc.setState(0x3e24, 0xcb1e, 0xbe00, 0xc4ab, 0xaf20, 0xa14e, 0x1, 0x0);
        gbc.writeMem(0x3e24, { 0x43 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcb1e, gbc.sp());
        EXPECT(0x3e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01E2
        gbc.setState(0x90a6, 0xec7d, 0xd680, 0xd61d, 0xffb1, 0x894a, 0x0, 0x0);
        gbc.writeMem(0x90a6, { 0x43 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xec7d, gbc.sp());
        EXPECT(0x90a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x90a6));
        // 43 01E3
        gbc.setState(0xcad8, 0xaa9e, 0x67c0, 0xbb8e, 0x795a, 0x3ef8, 0x0, 0x0);
        gbc.writeMem(0xcad8, { 0x43 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0xcad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcad8));
        // 43 01E4
        gbc.setState(0xd425, 0xf23b, 0x7cd0, 0x1e9c, 0xc71c, 0xc270, 0x1, 0x0);
        gbc.writeMem(0xd425, { 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf23b, gbc.sp());
        EXPECT(0xd426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd425));
        // 43 01E5
        gbc.setState(0xc4f, 0xa2e, 0xe5b0, 0xc420, 0x6439, 0x3d3, 0x1, 0x0);
        gbc.writeMem(0xc4f, { 0x43 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa2e, gbc.sp());
        EXPECT(0xc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01E6
        gbc.setState(0x2985, 0x9afd, 0x2e50, 0xebde, 0xf14d, 0x9f78, 0x0, 0x1);
        gbc.writeMem(0x2985, { 0x43 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9afd, gbc.sp());
        EXPECT(0x2986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01E7
        gbc.setState(0xcdd0, 0x408b, 0xfaf0, 0xdaec, 0xb664, 0x21c3, 0x1, 0x1);
        gbc.writeMem(0xcdd0, { 0x43 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x408b, gbc.sp());
        EXPECT(0xcdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcdd0));
        // 43 01E8
        gbc.setState(0xaf29, 0x994c, 0x1250, 0x9352, 0xf12c, 0x836f, 0x1, 0x1);
        gbc.writeMem(0xaf29, { 0x43 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x994c, gbc.sp());
        EXPECT(0xaf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xaf29));
        // 43 01E9
        gbc.setState(0xe1a0, 0x2ed9, 0xfbc0, 0x9773, 0x9f15, 0xb0e7, 0x0, 0x0);
        gbc.writeMem(0xe1a0, { 0x43 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2ed9, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe1a0));
        // 43 01EA
        gbc.setState(0x98a7, 0x71e, 0x8da0, 0x7e4b, 0x8fb5, 0x317a, 0x1, 0x0);
        gbc.writeMem(0x98a7, { 0x43 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x71e, gbc.sp());
        EXPECT(0x98a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x98a7));
        // 43 01EB
        gbc.setState(0x1ad5, 0xf946, 0xf5b0, 0xd0ed, 0xcc10, 0x1016, 0x1, 0x1);
        gbc.writeMem(0x1ad5, { 0x43 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf946, gbc.sp());
        EXPECT(0x1ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01EC
        gbc.setState(0x73f5, 0x2f98, 0x4a60, 0x4404, 0x8e2, 0x219, 0x0, 0x1);
        gbc.writeMem(0x73f5, { 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2f98, gbc.sp());
        EXPECT(0x73f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01ED
        gbc.setState(0x2466, 0x90df, 0xab90, 0x9e8c, 0xcaa9, 0x3041, 0x0, 0x0);
        gbc.writeMem(0x2466, { 0x43 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x90df, gbc.sp());
        EXPECT(0x2467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01EE
        gbc.setState(0xeea2, 0x8957, 0x48e0, 0xc535, 0x47d, 0x4e9d, 0x0, 0x0);
        gbc.writeMem(0xeea2, { 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8957, gbc.sp());
        EXPECT(0xeea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xeea2));
        // 43 01EF
        gbc.setState(0x1113, 0x659f, 0x8020, 0x162f, 0xb232, 0xd97b, 0x1, 0x0);
        gbc.writeMem(0x1113, { 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x659f, gbc.sp());
        EXPECT(0x1114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01F0
        gbc.setState(0x8d96, 0xb0ef, 0xa290, 0xa20c, 0xa9f5, 0x6c17, 0x1, 0x0);
        gbc.writeMem(0x8d96, { 0x43 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb0ef, gbc.sp());
        EXPECT(0x8d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8d96));
        // 43 01F1
        gbc.setState(0xa5c2, 0xac05, 0x2a60, 0x288e, 0x851f, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0xa5c2, { 0x43 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xac05, gbc.sp());
        EXPECT(0xa5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa5c2));
        // 43 01F2
        gbc.setState(0x527a, 0x6517, 0x350, 0x91bf, 0x1595, 0x3a2a, 0x0, 0x1);
        gbc.writeMem(0x527a, { 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6517, gbc.sp());
        EXPECT(0x527b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01F3
        gbc.setState(0x4ed9, 0x1c08, 0x15d0, 0x8ee1, 0x7b50, 0xff3b, 0x0, 0x1);
        gbc.writeMem(0x4ed9, { 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1c08, gbc.sp());
        EXPECT(0x4eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01F4
        gbc.setState(0x2ef1, 0x224d, 0x38c0, 0xd3b4, 0x6a36, 0x84c8, 0x0, 0x0);
        gbc.writeMem(0x2ef1, { 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x224d, gbc.sp());
        EXPECT(0x2ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01F5
        gbc.setState(0x23f2, 0xe2c4, 0xa7e0, 0x5295, 0x1379, 0x4d55, 0x1, 0x0);
        gbc.writeMem(0x23f2, { 0x43 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe2c4, gbc.sp());
        EXPECT(0x23f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01F6
        gbc.setState(0xe878, 0xb497, 0x4850, 0xcf48, 0xc4a4, 0xf55d, 0x0, 0x1);
        gbc.writeMem(0xe878, { 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb497, gbc.sp());
        EXPECT(0xe879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe878));
        // 43 01F7
        gbc.setState(0xc1d9, 0xe35b, 0xb6f0, 0xd9dd, 0x3b75, 0x536f, 0x1, 0x0);
        gbc.writeMem(0xc1d9, { 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe35b, gbc.sp());
        EXPECT(0xc1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc1d9));
        // 43 01F8
        gbc.setState(0x79b8, 0x315, 0x7990, 0x1f21, 0x666c, 0x35db, 0x1, 0x1);
        gbc.writeMem(0x79b8, { 0x43 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x315, gbc.sp());
        EXPECT(0x79b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01F9
        gbc.setState(0x9ad3, 0x2fd7, 0x5830, 0x2e12, 0x2d58, 0x689a, 0x0, 0x0);
        gbc.writeMem(0x9ad3, { 0x43 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2fd7, gbc.sp());
        EXPECT(0x9ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9ad3));
        // 43 01FA
        gbc.setState(0x7d5c, 0x5cd6, 0x8a60, 0xd425, 0xd55e, 0x33a9, 0x1, 0x1);
        gbc.writeMem(0x7d5c, { 0x43 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5cd6, gbc.sp());
        EXPECT(0x7d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01FB
        gbc.setState(0xacdc, 0xd0e2, 0x2200, 0x53b9, 0x57f7, 0x744, 0x1, 0x0);
        gbc.writeMem(0xacdc, { 0x43 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd0e2, gbc.sp());
        EXPECT(0xacdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xacdc));
        // 43 01FC
        gbc.setState(0x37bc, 0xb5e6, 0xa4d0, 0xcfdf, 0xac0a, 0xf15b, 0x1, 0x1);
        gbc.writeMem(0x37bc, { 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb5e6, gbc.sp());
        EXPECT(0x37bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 01FD
        gbc.setState(0xa27, 0x863d, 0xd160, 0xac2c, 0xed1c, 0x65c7, 0x1, 0x1);
        gbc.writeMem(0xa27, { 0x43 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x863d, gbc.sp());
        EXPECT(0xa28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01FE
        gbc.setState(0x7511, 0xc6d9, 0xde20, 0x2af6, 0x4375, 0x22e2, 0x1, 0x0);
        gbc.writeMem(0x7511, { 0x43 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc6d9, gbc.sp());
        EXPECT(0x7512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 01FF
        gbc.setState(0x92bc, 0x7b26, 0x9c80, 0x76d6, 0x345f, 0x371c, 0x0, 0x0);
        gbc.writeMem(0x92bc, { 0x43 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7b26, gbc.sp());
        EXPECT(0x92bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x92bc));
        // 43 0200
        gbc.setState(0xcc86, 0xe6ce, 0xcef0, 0x6c88, 0x6080, 0x1b91, 0x1, 0x0);
        gbc.writeMem(0xcc86, { 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe6ce, gbc.sp());
        EXPECT(0xcc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcc86));
        // 43 0201
        gbc.setState(0xaf9, 0xab8, 0x6950, 0x6512, 0x3c1e, 0x226a, 0x0, 0x1);
        gbc.writeMem(0xaf9, { 0x43 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xab8, gbc.sp());
        EXPECT(0xafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0202
        gbc.setState(0x53b7, 0x1adc, 0x4360, 0x6815, 0xe8d1, 0xef18, 0x0, 0x0);
        gbc.writeMem(0x53b7, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1adc, gbc.sp());
        EXPECT(0x53b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0203
        gbc.setState(0x386b, 0x93fe, 0x43a0, 0x17f3, 0x904f, 0x17f, 0x0, 0x0);
        gbc.writeMem(0x386b, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x93fe, gbc.sp());
        EXPECT(0x386c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0204
        gbc.setState(0x93ce, 0x85d9, 0x4bc0, 0x55c5, 0xbe20, 0x8de3, 0x0, 0x0);
        gbc.writeMem(0x93ce, { 0x43 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x85d9, gbc.sp());
        EXPECT(0x93cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x93ce));
        // 43 0205
        gbc.setState(0x9ab2, 0xce61, 0xbe50, 0xfcf5, 0xabd5, 0x5d8d, 0x0, 0x1);
        gbc.writeMem(0x9ab2, { 0x43 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xce61, gbc.sp());
        EXPECT(0x9ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9ab2));
        // 43 0206
        gbc.setState(0x6fc1, 0x1255, 0xc590, 0x3173, 0x3f08, 0x4938, 0x0, 0x1);
        gbc.writeMem(0x6fc1, { 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1255, gbc.sp());
        EXPECT(0x6fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0207
        gbc.setState(0x86c9, 0x8382, 0x3f80, 0x7522, 0x4efe, 0xc24c, 0x1, 0x1);
        gbc.writeMem(0x86c9, { 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8382, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x86c9));
        // 43 0208
        gbc.setState(0x439, 0xa5f8, 0x5ba0, 0x81a8, 0xf780, 0x638c, 0x1, 0x0);
        gbc.writeMem(0x439, { 0x43 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa5f8, gbc.sp());
        EXPECT(0x43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0209
        gbc.setState(0x288a, 0xfd3c, 0xc5a0, 0xd240, 0x9868, 0xdaad, 0x0, 0x1);
        gbc.writeMem(0x288a, { 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfd3c, gbc.sp());
        EXPECT(0x288b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 020A
        gbc.setState(0x31c9, 0xbd95, 0x2490, 0x3a26, 0x8377, 0xe015, 0x0, 0x0);
        gbc.writeMem(0x31c9, { 0x43 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbd95, gbc.sp());
        EXPECT(0x31ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 020B
        gbc.setState(0xa16a, 0x84d2, 0x6dd0, 0xeaeb, 0x8145, 0x3f34, 0x1, 0x0);
        gbc.writeMem(0xa16a, { 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x84d2, gbc.sp());
        EXPECT(0xa16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa16a));
        // 43 020D
        gbc.setState(0xb783, 0x2e92, 0xcc80, 0x94b5, 0x55a7, 0xf84f, 0x0, 0x0);
        gbc.writeMem(0xb783, { 0x43 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2e92, gbc.sp());
        EXPECT(0xb784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb783));
        // 43 020E
        gbc.setState(0x5065, 0xb623, 0x2090, 0x6959, 0xffd7, 0xd10d, 0x1, 0x0);
        gbc.writeMem(0x5065, { 0x43 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb623, gbc.sp());
        EXPECT(0x5066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 020F
        gbc.setState(0x974b, 0x5ded, 0x8920, 0xc300, 0x46ef, 0xb2a5, 0x0, 0x0);
        gbc.writeMem(0x974b, { 0x43 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5ded, gbc.sp());
        EXPECT(0x974c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x974b));
        // 43 0210
        gbc.setState(0xda9e, 0x90c6, 0xa9c0, 0x82a6, 0x9518, 0x79b6, 0x0, 0x1);
        gbc.writeMem(0xda9e, { 0x43 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x90c6, gbc.sp());
        EXPECT(0xda9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xda9e));
        // 43 0211
        gbc.setState(0xde48, 0x929a, 0x29c0, 0xc677, 0xcd40, 0x23a7, 0x0, 0x1);
        gbc.writeMem(0xde48, { 0x43 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x929a, gbc.sp());
        EXPECT(0xde49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xde48));
        // 43 0213
        gbc.setState(0x44a, 0x3d60, 0xc940, 0x4196, 0x96c4, 0x950b, 0x1, 0x1);
        gbc.writeMem(0x44a, { 0x43 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3d60, gbc.sp());
        EXPECT(0x44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0214
        gbc.setState(0xa7ea, 0x814, 0x22d0, 0xe4ab, 0xe2ff, 0x452d, 0x0, 0x1);
        gbc.writeMem(0xa7ea, { 0x43 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x814, gbc.sp());
        EXPECT(0xa7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa7ea));
        // 43 0215
        gbc.setState(0x2dee, 0xdba0, 0x5c30, 0xf01b, 0x51a5, 0x6437, 0x0, 0x0);
        gbc.writeMem(0x2dee, { 0x43 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdba0, gbc.sp());
        EXPECT(0x2def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0216
        gbc.setState(0x7dbf, 0xf2a8, 0xed90, 0xce7, 0x8778, 0xb173, 0x1, 0x0);
        gbc.writeMem(0x7dbf, { 0x43 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf2a8, gbc.sp());
        EXPECT(0x7dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0217
        gbc.setState(0xbaed, 0x4696, 0x41e0, 0xc565, 0x6c9a, 0xb6c6, 0x1, 0x0);
        gbc.writeMem(0xbaed, { 0x43 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4696, gbc.sp());
        EXPECT(0xbaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbaed));
        // 43 0218
        gbc.setState(0x87c7, 0x1870, 0x4a70, 0x2e95, 0xfac0, 0xdc57, 0x0, 0x1);
        gbc.writeMem(0x87c7, { 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1870, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x87c7));
        // 43 0219
        gbc.setState(0xf3b, 0x9878, 0x11c0, 0xcb66, 0xca90, 0xa658, 0x1, 0x1);
        gbc.writeMem(0xf3b, { 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9878, gbc.sp());
        EXPECT(0xf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 021A
        gbc.setState(0xcfab, 0x2955, 0xdaa0, 0x84fb, 0xde3a, 0xf05b, 0x1, 0x0);
        gbc.writeMem(0xcfab, { 0x43 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2955, gbc.sp());
        EXPECT(0xcfac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcfab));
        // 43 021B
        gbc.setState(0x93f9, 0xc02f, 0x39a0, 0xf642, 0x54df, 0x8a67, 0x1, 0x1);
        gbc.writeMem(0x93f9, { 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc02f, gbc.sp());
        EXPECT(0x93fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x93f9));
        // 43 021C
        gbc.setState(0x6c61, 0xaca0, 0x1fb0, 0x6cf0, 0xa1b6, 0x5b64, 0x0, 0x1);
        gbc.writeMem(0x6c61, { 0x43 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaca0, gbc.sp());
        EXPECT(0x6c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 021D
        gbc.setState(0x68c5, 0x1d7a, 0xdd40, 0x8c9f, 0xc7c4, 0xa7fc, 0x0, 0x0);
        gbc.writeMem(0x68c5, { 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1d7a, gbc.sp());
        EXPECT(0x68c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 021E
        gbc.setState(0x4bb5, 0xb40c, 0xa6d0, 0x78e2, 0xba75, 0xa181, 0x0, 0x0);
        gbc.writeMem(0x4bb5, { 0x43 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb40c, gbc.sp());
        EXPECT(0x4bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 021F
        gbc.setState(0xe8d8, 0x92df, 0xc730, 0x7161, 0xd2ef, 0x8697, 0x0, 0x0);
        gbc.writeMem(0xe8d8, { 0x43 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x92df, gbc.sp());
        EXPECT(0xe8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe8d8));
        // 43 0220
        gbc.setState(0xa20a, 0x9907, 0x4f90, 0x5483, 0xd2f6, 0x82a1, 0x1, 0x0);
        gbc.writeMem(0xa20a, { 0x43 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9907, gbc.sp());
        EXPECT(0xa20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa20a));
        // 43 0221
        gbc.setState(0x259b, 0x990f, 0x4a80, 0x28df, 0x48ee, 0x7a29, 0x1, 0x0);
        gbc.writeMem(0x259b, { 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x990f, gbc.sp());
        EXPECT(0x259c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0222
        gbc.setState(0xa729, 0xe064, 0xacc0, 0x2764, 0xa06b, 0x3807, 0x0, 0x0);
        gbc.writeMem(0xa729, { 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe064, gbc.sp());
        EXPECT(0xa72a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa729));
        // 43 0223
        gbc.setState(0xe088, 0x3b3, 0x9ae0, 0x9ba4, 0xc10f, 0x6645, 0x1, 0x0);
        gbc.writeMem(0xe088, { 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3b3, gbc.sp());
        EXPECT(0xe089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe088));
        // 43 0224
        gbc.setState(0x1a96, 0x4e91, 0x4e40, 0xb826, 0x82d1, 0x4901, 0x0, 0x1);
        gbc.writeMem(0x1a96, { 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4e91, gbc.sp());
        EXPECT(0x1a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0225
        gbc.setState(0x4bb1, 0xff21, 0xce50, 0x3beb, 0xbdc, 0xf828, 0x0, 0x1);
        gbc.writeMem(0x4bb1, { 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xff21, gbc.sp());
        EXPECT(0x4bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0226
        gbc.setState(0xe12f, 0x5cc, 0xe4d0, 0x4ec, 0x1378, 0x5c91, 0x1, 0x1);
        gbc.writeMem(0xe12f, { 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5cc, gbc.sp());
        EXPECT(0xe130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe12f));
        // 43 0227
        gbc.setState(0x2d08, 0x27a6, 0xd810, 0xd28d, 0x47dd, 0x9aff, 0x0, 0x1);
        gbc.writeMem(0x2d08, { 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x27a6, gbc.sp());
        EXPECT(0x2d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0229
        gbc.setState(0xab29, 0xa076, 0x4a80, 0x80b3, 0x6cb0, 0x419b, 0x1, 0x1);
        gbc.writeMem(0xab29, { 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa076, gbc.sp());
        EXPECT(0xab2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xab29));
        // 43 022A
        gbc.setState(0xc5d1, 0x4723, 0xa400, 0x37a1, 0xdc59, 0x3e7f, 0x0, 0x0);
        gbc.writeMem(0xc5d1, { 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4723, gbc.sp());
        EXPECT(0xc5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc5d1));
        // 43 022B
        gbc.setState(0x6248, 0xfd63, 0x2370, 0x9419, 0x9f0c, 0x37c7, 0x0, 0x0);
        gbc.writeMem(0x6248, { 0x43 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfd63, gbc.sp());
        EXPECT(0x6249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 022C
        gbc.setState(0x1460, 0x6597, 0xf8e0, 0xb6a9, 0x7f83, 0xd7fc, 0x1, 0x1);
        gbc.writeMem(0x1460, { 0x43 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6597, gbc.sp());
        EXPECT(0x1461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 022D
        gbc.setState(0xb179, 0xd31, 0x6540, 0x132, 0x5085, 0x9448, 0x1, 0x0);
        gbc.writeMem(0xb179, { 0x43 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd31, gbc.sp());
        EXPECT(0xb17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb179));
        // 43 022E
        gbc.setState(0x6578, 0x9c1, 0x5220, 0x40bd, 0xe518, 0x6046, 0x1, 0x1);
        gbc.writeMem(0x6578, { 0x43 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9c1, gbc.sp());
        EXPECT(0x6579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 022F
        gbc.setState(0x58ca, 0x1c61, 0xea20, 0x547e, 0x92ad, 0x6e71, 0x1, 0x0);
        gbc.writeMem(0x58ca, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1c61, gbc.sp());
        EXPECT(0x58cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0230
        gbc.setState(0x7969, 0x2f7c, 0xbe00, 0x5932, 0xa212, 0xcb64, 0x1, 0x0);
        gbc.writeMem(0x7969, { 0x43 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2f7c, gbc.sp());
        EXPECT(0x796a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0232
        gbc.setState(0xb3d, 0x6679, 0x3440, 0x7c75, 0xd250, 0x9e33, 0x0, 0x0);
        gbc.writeMem(0xb3d, { 0x43 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6679, gbc.sp());
        EXPECT(0xb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0233
        gbc.setState(0xcbb8, 0x2792, 0x5ac0, 0x12b8, 0xc8d9, 0x7b14, 0x0, 0x0);
        gbc.writeMem(0xcbb8, { 0x43 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2792, gbc.sp());
        EXPECT(0xcbb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcbb8));
        // 43 0234
        gbc.setState(0x396b, 0x3123, 0xd3f0, 0xe719, 0x7f63, 0xc57, 0x1, 0x0);
        gbc.writeMem(0x396b, { 0x43 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3123, gbc.sp());
        EXPECT(0x396c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0235
        gbc.setState(0x8aee, 0x7bed, 0x8f90, 0xb59e, 0xb200, 0xd4b3, 0x0, 0x0);
        gbc.writeMem(0x8aee, { 0x43 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7bed, gbc.sp());
        EXPECT(0x8aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8aee));
        // 43 0236
        gbc.setState(0xe36a, 0x6f31, 0x9480, 0x2543, 0xb2a1, 0xc268, 0x0, 0x0);
        gbc.writeMem(0xe36a, { 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6f31, gbc.sp());
        EXPECT(0xe36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe36a));
        // 43 0237
        gbc.setState(0x5262, 0x660c, 0xd880, 0x5042, 0x6e9e, 0xfd46, 0x0, 0x0);
        gbc.writeMem(0x5262, { 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x660c, gbc.sp());
        EXPECT(0x5263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0238
        gbc.setState(0xda24, 0x4d56, 0x670, 0xdd9f, 0xa572, 0xf989, 0x1, 0x1);
        gbc.writeMem(0xda24, { 0x43 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4d56, gbc.sp());
        EXPECT(0xda25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xda24));
        // 43 0239
        gbc.setState(0x7978, 0x4057, 0xc990, 0xc63b, 0x866f, 0x5da3, 0x0, 0x1);
        gbc.writeMem(0x7978, { 0x43 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4057, gbc.sp());
        EXPECT(0x7979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 023A
        gbc.setState(0x62ad, 0x930a, 0xd5c0, 0xc0d4, 0x5299, 0xcf96, 0x0, 0x0);
        gbc.writeMem(0x62ad, { 0x43 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x930a, gbc.sp());
        EXPECT(0x62ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 023B
        gbc.setState(0xc1aa, 0x6e07, 0x7050, 0x57e1, 0xd675, 0xe8dc, 0x0, 0x0);
        gbc.writeMem(0xc1aa, { 0x43 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6e07, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc1aa));
        // 43 023D
        gbc.setState(0x32fa, 0x302, 0xbff0, 0x402a, 0xf14f, 0xa6b4, 0x1, 0x0);
        gbc.writeMem(0x32fa, { 0x43 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x302, gbc.sp());
        EXPECT(0x32fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 023E
        gbc.setState(0x8a7d, 0x1919, 0x6880, 0x61a4, 0x4670, 0xaa5, 0x0, 0x0);
        gbc.writeMem(0x8a7d, { 0x43 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1919, gbc.sp());
        EXPECT(0x8a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8a7d));
        // 43 023F
        gbc.setState(0x98e3, 0x83de, 0xd370, 0xa2d6, 0x66f9, 0x378e, 0x0, 0x0);
        gbc.writeMem(0x98e3, { 0x43 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x83de, gbc.sp());
        EXPECT(0x98e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x98e3));
        // 43 0240
        gbc.setState(0x44b7, 0x59e3, 0x94a0, 0x6944, 0xa243, 0xc776, 0x1, 0x1);
        gbc.writeMem(0x44b7, { 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x59e3, gbc.sp());
        EXPECT(0x44b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0242
        gbc.setState(0x3b91, 0xac8d, 0x96d0, 0x5612, 0xc9fa, 0xadd7, 0x0, 0x0);
        gbc.writeMem(0x3b91, { 0x43 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xac8d, gbc.sp());
        EXPECT(0x3b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0243
        gbc.setState(0x7858, 0xb980, 0xa680, 0x3b7a, 0x5fef, 0x6c05, 0x0, 0x0);
        gbc.writeMem(0x7858, { 0x43 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb980, gbc.sp());
        EXPECT(0x7859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0244
        gbc.setState(0x18a5, 0xef3b, 0xa9c0, 0x5c10, 0xeca9, 0x85b7, 0x0, 0x1);
        gbc.writeMem(0x18a5, { 0x43 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xef3b, gbc.sp());
        EXPECT(0x18a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0246
        gbc.setState(0xccaa, 0xe063, 0xfb10, 0xb85b, 0x8309, 0x49df, 0x0, 0x1);
        gbc.writeMem(0xccaa, { 0x43 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe063, gbc.sp());
        EXPECT(0xccab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xccaa));
        // 43 0247
        gbc.setState(0x8663, 0xffb8, 0x410, 0xcb6, 0xd255, 0x6e68, 0x0, 0x0);
        gbc.writeMem(0x8663, { 0x43 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xffb8, gbc.sp());
        EXPECT(0x8664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8663));
        // 43 0248
        gbc.setState(0x44b5, 0x75ca, 0x7a70, 0x9e6b, 0x206c, 0xff69, 0x0, 0x1);
        gbc.writeMem(0x44b5, { 0x43 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x75ca, gbc.sp());
        EXPECT(0x44b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0249
        gbc.setState(0xdfa0, 0xb506, 0xe630, 0xd5e4, 0x9400, 0x998f, 0x1, 0x0);
        gbc.writeMem(0xdfa0, { 0x43 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb506, gbc.sp());
        EXPECT(0xdfa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdfa0));
        // 43 024A
        gbc.setState(0x869c, 0xda80, 0x9190, 0x9ba9, 0x3b72, 0x311c, 0x1, 0x1);
        gbc.writeMem(0x869c, { 0x43 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xda80, gbc.sp());
        EXPECT(0x869d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x869c));
        // 43 024B
        gbc.setState(0xecb3, 0xf65a, 0xae10, 0x6445, 0x99de, 0x731, 0x1, 0x1);
        gbc.writeMem(0xecb3, { 0x43 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf65a, gbc.sp());
        EXPECT(0xecb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xecb3));
        // 43 024C
        gbc.setState(0x3cf1, 0xa91f, 0x820, 0x27dd, 0xcd96, 0x9d74, 0x1, 0x1);
        gbc.writeMem(0x3cf1, { 0x43 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa91f, gbc.sp());
        EXPECT(0x3cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 024D
        gbc.setState(0x7d4, 0x761c, 0x380, 0xcde7, 0x1d7b, 0x7ec3, 0x1, 0x0);
        gbc.writeMem(0x7d4, { 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x761c, gbc.sp());
        EXPECT(0x7d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 024E
        gbc.setState(0x7731, 0x42f2, 0x1cd0, 0xa295, 0x5707, 0xca6b, 0x0, 0x0);
        gbc.writeMem(0x7731, { 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x42f2, gbc.sp());
        EXPECT(0x7732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 024F
        gbc.setState(0x3f2, 0xcf77, 0xaa10, 0xbe2c, 0x4e38, 0xa105, 0x0, 0x0);
        gbc.writeMem(0x3f2, { 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcf77, gbc.sp());
        EXPECT(0x3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0250
        gbc.setState(0x91db, 0x9ccb, 0x2130, 0x270c, 0x3199, 0xd72f, 0x1, 0x1);
        gbc.writeMem(0x91db, { 0x43 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9ccb, gbc.sp());
        EXPECT(0x91dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x91db));
        // 43 0251
        gbc.setState(0x41eb, 0x95f3, 0xc1d0, 0x1ab5, 0x793, 0x527a, 0x0, 0x0);
        gbc.writeMem(0x41eb, { 0x43 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x95f3, gbc.sp());
        EXPECT(0x41ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0252
        gbc.setState(0x545f, 0x8c3a, 0x4230, 0x6a13, 0x379a, 0x63c5, 0x0, 0x0);
        gbc.writeMem(0x545f, { 0x43 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8c3a, gbc.sp());
        EXPECT(0x5460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0253
        gbc.setState(0xc34c, 0x3795, 0x4280, 0x3c06, 0xdf9c, 0x60e9, 0x1, 0x1);
        gbc.writeMem(0xc34c, { 0x43 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3795, gbc.sp());
        EXPECT(0xc34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc34c));
        // 43 0254
        gbc.setState(0xc63b, 0x6c8b, 0xd260, 0x3432, 0x791a, 0x9a9a, 0x1, 0x0);
        gbc.writeMem(0xc63b, { 0x43 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6c8b, gbc.sp());
        EXPECT(0xc63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc63b));
        // 43 0255
        gbc.setState(0xe8be, 0x35df, 0xbdd0, 0x34fe, 0xb2f5, 0x204a, 0x0, 0x0);
        gbc.writeMem(0xe8be, { 0x43 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x35df, gbc.sp());
        EXPECT(0xe8bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe8be));
        // 43 0257
        gbc.setState(0x1e81, 0xdcf8, 0x55f0, 0xfc8a, 0xb7df, 0x3809, 0x0, 0x1);
        gbc.writeMem(0x1e81, { 0x43 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdcf8, gbc.sp());
        EXPECT(0x1e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0258
        gbc.setState(0x72b0, 0x4a5c, 0xa620, 0x299f, 0x11d9, 0xdef6, 0x1, 0x1);
        gbc.writeMem(0x72b0, { 0x43 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4a5c, gbc.sp());
        EXPECT(0x72b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0259
        gbc.setState(0x9d0f, 0x89b7, 0xba10, 0xa101, 0x1b1e, 0x474d, 0x0, 0x0);
        gbc.writeMem(0x9d0f, { 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x89b7, gbc.sp());
        EXPECT(0x9d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9d0f));
        // 43 025A
        gbc.setState(0xcd4e, 0x6566, 0x4ad0, 0x84e7, 0xa9d7, 0x5f5b, 0x1, 0x0);
        gbc.writeMem(0xcd4e, { 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6566, gbc.sp());
        EXPECT(0xcd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcd4e));
        // 43 025B
        gbc.setState(0xdeda, 0x51af, 0x2ec0, 0xf01e, 0x5c24, 0x5af5, 0x0, 0x0);
        gbc.writeMem(0xdeda, { 0x43 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x51af, gbc.sp());
        EXPECT(0xdedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdeda));
        // 43 025C
        gbc.setState(0x5d19, 0x4f2c, 0x76a0, 0x437, 0x2911, 0x1cd3, 0x1, 0x1);
        gbc.writeMem(0x5d19, { 0x43 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4f2c, gbc.sp());
        EXPECT(0x5d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 025D
        gbc.setState(0x8ec3, 0x373c, 0x6150, 0x974e, 0xeadf, 0x88e8, 0x1, 0x1);
        gbc.writeMem(0x8ec3, { 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x373c, gbc.sp());
        EXPECT(0x8ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8ec3));
        // 43 025E
        gbc.setState(0xae62, 0xa370, 0xe1d0, 0xecf4, 0x5766, 0x4e41, 0x1, 0x0);
        gbc.writeMem(0xae62, { 0x43 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa370, gbc.sp());
        EXPECT(0xae63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xae62));
        // 43 025F
        gbc.setState(0x6f5b, 0x5e14, 0xf5e0, 0x7d54, 0xb199, 0x80a6, 0x1, 0x0);
        gbc.writeMem(0x6f5b, { 0x43 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5e14, gbc.sp());
        EXPECT(0x6f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0260
        gbc.setState(0xebf3, 0xacab, 0x3350, 0x202b, 0x1b50, 0x42b6, 0x0, 0x1);
        gbc.writeMem(0xebf3, { 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xacab, gbc.sp());
        EXPECT(0xebf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xebf3));
        // 43 0261
        gbc.setState(0x4711, 0x83d6, 0x5b40, 0xc5b4, 0xaec1, 0x2921, 0x1, 0x1);
        gbc.writeMem(0x4711, { 0x43 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x83d6, gbc.sp());
        EXPECT(0x4712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0262
        gbc.setState(0x2c8f, 0xc3b0, 0x3e80, 0x2e4c, 0xbb71, 0x6a6a, 0x0, 0x1);
        gbc.writeMem(0x2c8f, { 0x43 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc3b0, gbc.sp());
        EXPECT(0x2c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0263
        gbc.setState(0x9c3f, 0x8257, 0x2140, 0x63c4, 0xffd2, 0xe6a2, 0x1, 0x1);
        gbc.writeMem(0x9c3f, { 0x43 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8257, gbc.sp());
        EXPECT(0x9c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9c3f));
        // 43 0264
        gbc.setState(0x8c06, 0xc497, 0x6150, 0xea5c, 0x7d5a, 0x6131, 0x1, 0x0);
        gbc.writeMem(0x8c06, { 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc497, gbc.sp());
        EXPECT(0x8c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8c06));
        // 43 0265
        gbc.setState(0x2deb, 0x97ba, 0x7fa0, 0xc148, 0x8d42, 0xf619, 0x0, 0x0);
        gbc.writeMem(0x2deb, { 0x43 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x97ba, gbc.sp());
        EXPECT(0x2dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0266
        gbc.setState(0x69, 0x7bc1, 0xd920, 0xfbe7, 0xad49, 0xd45b, 0x0, 0x0);
        gbc.writeMem(0x69, { 0x43 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7bc1, gbc.sp());
        EXPECT(0x6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0267
        gbc.setState(0xd0ac, 0x95, 0x3940, 0x9b40, 0xce24, 0x8ee4, 0x0, 0x1);
        gbc.writeMem(0xd0ac, { 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x95, gbc.sp());
        EXPECT(0xd0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd0ac));
        // 43 0268
        gbc.setState(0xac78, 0xd404, 0xf40, 0xb493, 0x6d61, 0xcd9c, 0x0, 0x1);
        gbc.writeMem(0xac78, { 0x43 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd404, gbc.sp());
        EXPECT(0xac79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xac78));
        // 43 0269
        gbc.setState(0x4ad, 0x8ec7, 0xe950, 0x33e0, 0x1bd0, 0x383b, 0x0, 0x0);
        gbc.writeMem(0x4ad, { 0x43 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8ec7, gbc.sp());
        EXPECT(0x4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 026A
        gbc.setState(0x8e1, 0x83cb, 0x64b0, 0xa72e, 0xf906, 0xf467, 0x1, 0x0);
        gbc.writeMem(0x8e1, { 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x83cb, gbc.sp());
        EXPECT(0x8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 026B
        gbc.setState(0x2829, 0x135c, 0x9030, 0x321d, 0xc02a, 0x1590, 0x0, 0x0);
        gbc.writeMem(0x2829, { 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x135c, gbc.sp());
        EXPECT(0x282a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 026E
        gbc.setState(0xb69a, 0xbbde, 0x24a0, 0x609c, 0x362f, 0xe58b, 0x0, 0x1);
        gbc.writeMem(0xb69a, { 0x43 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbbde, gbc.sp());
        EXPECT(0xb69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb69a));
        // 43 026F
        gbc.setState(0x51c4, 0xaf6e, 0xc750, 0x2867, 0xc8c7, 0xbc9a, 0x1, 0x1);
        gbc.writeMem(0x51c4, { 0x43 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xaf6e, gbc.sp());
        EXPECT(0x51c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0270
        gbc.setState(0x4cc6, 0x67f8, 0xf660, 0x4c6, 0xa854, 0x5e50, 0x1, 0x1);
        gbc.writeMem(0x4cc6, { 0x43 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x67f8, gbc.sp());
        EXPECT(0x4cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0271
        gbc.setState(0xddb4, 0xe014, 0x3350, 0x69, 0xe48, 0xd697, 0x1, 0x1);
        gbc.writeMem(0xddb4, { 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe014, gbc.sp());
        EXPECT(0xddb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xddb4));
        // 43 0272
        gbc.setState(0xa365, 0x969, 0xf3a0, 0x9518, 0xa8dd, 0xa8a5, 0x0, 0x1);
        gbc.writeMem(0xa365, { 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x969, gbc.sp());
        EXPECT(0xa366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa365));
        // 43 0274
        gbc.setState(0x3e1a, 0xf050, 0xddf0, 0x70cd, 0x374, 0xa39d, 0x0, 0x1);
        gbc.writeMem(0x3e1a, { 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf050, gbc.sp());
        EXPECT(0x3e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0276
        gbc.setState(0x8a1a, 0x341e, 0x19d0, 0x5de5, 0x34cb, 0xb0cc, 0x1, 0x0);
        gbc.writeMem(0x8a1a, { 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x341e, gbc.sp());
        EXPECT(0x8a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8a1a));
        // 43 0277
        gbc.setState(0x915b, 0x5d53, 0x96d0, 0x1436, 0xff5f, 0x3e71, 0x0, 0x1);
        gbc.writeMem(0x915b, { 0x43 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5d53, gbc.sp());
        EXPECT(0x915c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x915b));
        // 43 0278
        gbc.setState(0x4463, 0x1211, 0x38e0, 0xb365, 0xf887, 0x244a, 0x0, 0x1);
        gbc.writeMem(0x4463, { 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1211, gbc.sp());
        EXPECT(0x4464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 027A
        gbc.setState(0xeb74, 0xe13a, 0xec20, 0x19d, 0x1d15, 0x6abe, 0x1, 0x0);
        gbc.writeMem(0xeb74, { 0x43 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe13a, gbc.sp());
        EXPECT(0xeb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xeb74));
        // 43 027B
        gbc.setState(0x6db6, 0x42c9, 0x6ac0, 0x9dca, 0x461d, 0xc040, 0x0, 0x0);
        gbc.writeMem(0x6db6, { 0x43 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x42c9, gbc.sp());
        EXPECT(0x6db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 027C
        gbc.setState(0x691e, 0x5b4, 0xb6a0, 0xa0c5, 0x48dd, 0x5b94, 0x1, 0x0);
        gbc.writeMem(0x691e, { 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5b4, gbc.sp());
        EXPECT(0x691f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 027D
        gbc.setState(0xcf30, 0x46ca, 0x6a60, 0x138e, 0x3c48, 0x2066, 0x1, 0x0);
        gbc.writeMem(0xcf30, { 0x43 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x46ca, gbc.sp());
        EXPECT(0xcf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcf30));
        // 43 027E
        gbc.setState(0xc128, 0xb662, 0xa8e0, 0xfadc, 0x3cc5, 0x2762, 0x1, 0x1);
        gbc.writeMem(0xc128, { 0x43 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb662, gbc.sp());
        EXPECT(0xc129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc128));
        // 43 027F
        gbc.setState(0xdee4, 0xfb1, 0x2360, 0x992b, 0x1be3, 0x39a6, 0x1, 0x1);
        gbc.writeMem(0xdee4, { 0x43 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfb1, gbc.sp());
        EXPECT(0xdee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdee4));
        // 43 0280
        gbc.setState(0x6733, 0x9cd8, 0xddc0, 0x9d8a, 0x98e1, 0xd226, 0x1, 0x0);
        gbc.writeMem(0x6733, { 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9cd8, gbc.sp());
        EXPECT(0x6734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0281
        gbc.setState(0x45b4, 0xdc33, 0x6800, 0x2c3e, 0x40db, 0xa6c8, 0x1, 0x0);
        gbc.writeMem(0x45b4, { 0x43 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdc33, gbc.sp());
        EXPECT(0x45b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0282
        gbc.setState(0xbc65, 0x5a99, 0xe7a0, 0x799d, 0x98eb, 0xf8a7, 0x1, 0x0);
        gbc.writeMem(0xbc65, { 0x43 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5a99, gbc.sp());
        EXPECT(0xbc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbc65));
        // 43 0283
        gbc.setState(0x14bd, 0xe8de, 0x1810, 0xdaed, 0xb565, 0x3f90, 0x0, 0x1);
        gbc.writeMem(0x14bd, { 0x43 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe8de, gbc.sp());
        EXPECT(0x14be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0284
        gbc.setState(0x9684, 0x13af, 0x7350, 0x5c7f, 0x834e, 0x9c51, 0x1, 0x0);
        gbc.writeMem(0x9684, { 0x43 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x13af, gbc.sp());
        EXPECT(0x9685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9684));
        // 43 0286
        gbc.setState(0x9b83, 0x24d9, 0x6bb0, 0x2a6e, 0x1b7d, 0xa8b, 0x0, 0x1);
        gbc.writeMem(0x9b83, { 0x43 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x24d9, gbc.sp());
        EXPECT(0x9b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9b83));
        // 43 0287
        gbc.setState(0xa3ab, 0xfe3, 0x650, 0x3938, 0xb791, 0xd47b, 0x0, 0x0);
        gbc.writeMem(0xa3ab, { 0x43 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfe3, gbc.sp());
        EXPECT(0xa3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa3ab));
        // 43 0288
        gbc.setState(0xb6d6, 0x9082, 0xf3e0, 0x9425, 0xd935, 0x83bd, 0x1, 0x1);
        gbc.writeMem(0xb6d6, { 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9082, gbc.sp());
        EXPECT(0xb6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb6d6));
        // 43 0289
        gbc.setState(0x3e8e, 0x1039, 0x9a30, 0x23eb, 0x78e7, 0x7e0b, 0x1, 0x1);
        gbc.writeMem(0x3e8e, { 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1039, gbc.sp());
        EXPECT(0x3e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 028A
        gbc.setState(0xe83e, 0xf111, 0x7f30, 0x36a, 0xb29e, 0xaf1f, 0x1, 0x0);
        gbc.writeMem(0xe83e, { 0x43 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf111, gbc.sp());
        EXPECT(0xe83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe83e));
        // 43 028B
        gbc.setState(0x2c1b, 0x12d4, 0xc2e0, 0x3d85, 0x2509, 0x3ef9, 0x1, 0x0);
        gbc.writeMem(0x2c1b, { 0x43 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x12d4, gbc.sp());
        EXPECT(0x2c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 028C
        gbc.setState(0x32c1, 0x185a, 0x91e0, 0x2843, 0x68ff, 0x8ba7, 0x1, 0x0);
        gbc.writeMem(0x32c1, { 0x43 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x185a, gbc.sp());
        EXPECT(0x32c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 028D
        gbc.setState(0xc07c, 0xce4e, 0x4450, 0xb25c, 0x3057, 0xf026, 0x1, 0x1);
        gbc.writeMem(0xc07c, { 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xce4e, gbc.sp());
        EXPECT(0xc07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc07c));
        // 43 028E
        gbc.setState(0x76a8, 0xcdca, 0xbb70, 0x1850, 0x7397, 0x8e12, 0x0, 0x1);
        gbc.writeMem(0x76a8, { 0x43 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcdca, gbc.sp());
        EXPECT(0x76a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 028F
        gbc.setState(0x9fb0, 0x3047, 0x2fa0, 0x7938, 0xff68, 0xe4a0, 0x1, 0x0);
        gbc.writeMem(0x9fb0, { 0x43 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3047, gbc.sp());
        EXPECT(0x9fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9fb0));
        // 43 0290
        gbc.setState(0xb8b3, 0x2fd3, 0x9a90, 0x77ed, 0x84b1, 0xfa47, 0x0, 0x1);
        gbc.writeMem(0xb8b3, { 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2fd3, gbc.sp());
        EXPECT(0xb8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb8b3));
        // 43 0291
        gbc.setState(0x8c18, 0xa585, 0x1bf0, 0x451c, 0x31e4, 0xd347, 0x0, 0x0);
        gbc.writeMem(0x8c18, { 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa585, gbc.sp());
        EXPECT(0x8c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8c18));
        // 43 0292
        gbc.setState(0xad22, 0xbe1c, 0xf6b0, 0xdeb6, 0xb365, 0xa79e, 0x1, 0x1);
        gbc.writeMem(0xad22, { 0x43 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbe1c, gbc.sp());
        EXPECT(0xad23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xad22));
        // 43 0293
        gbc.setState(0xdf36, 0xe02d, 0x9530, 0xc9fe, 0x58b2, 0x4a8c, 0x1, 0x0);
        gbc.writeMem(0xdf36, { 0x43 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe02d, gbc.sp());
        EXPECT(0xdf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdf36));
        // 43 0294
        gbc.setState(0x6567, 0x4edd, 0x2700, 0xeca8, 0x7dd4, 0x75d2, 0x1, 0x0);
        gbc.writeMem(0x6567, { 0x43 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4edd, gbc.sp());
        EXPECT(0x6568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0295
        gbc.setState(0x337a, 0x370f, 0x9d70, 0x67f2, 0xfff6, 0x1ec7, 0x1, 0x0);
        gbc.writeMem(0x337a, { 0x43 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x370f, gbc.sp());
        EXPECT(0x337b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0296
        gbc.setState(0xa315, 0x1741, 0x200, 0x1b88, 0xf5d, 0x825, 0x1, 0x1);
        gbc.writeMem(0xa315, { 0x43 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1741, gbc.sp());
        EXPECT(0xa316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa315));
        // 43 0297
        gbc.setState(0x6871, 0xd0fc, 0xbfb0, 0x280, 0xe3be, 0x619f, 0x0, 0x1);
        gbc.writeMem(0x6871, { 0x43 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd0fc, gbc.sp());
        EXPECT(0x6872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0298
        gbc.setState(0x561e, 0xc50c, 0x1070, 0xdd77, 0x7d48, 0x862, 0x1, 0x0);
        gbc.writeMem(0x561e, { 0x43 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc50c, gbc.sp());
        EXPECT(0x561f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0299
        gbc.setState(0x7a03, 0x716f, 0xbfc0, 0xf337, 0x1328, 0x9d35, 0x1, 0x0);
        gbc.writeMem(0x7a03, { 0x43 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x716f, gbc.sp());
        EXPECT(0x7a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 029A
        gbc.setState(0xc98f, 0xe0d7, 0xc4b0, 0x44ca, 0x8127, 0x6a38, 0x0, 0x0);
        gbc.writeMem(0xc98f, { 0x43 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe0d7, gbc.sp());
        EXPECT(0xc990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc98f));
        // 43 029B
        gbc.setState(0x8ed1, 0xffc8, 0x7e40, 0xbc19, 0xe16c, 0xced1, 0x1, 0x1);
        gbc.writeMem(0x8ed1, { 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xffc8, gbc.sp());
        EXPECT(0x8ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8ed1));
        // 43 029C
        gbc.setState(0x52fc, 0xce04, 0x4b50, 0x21d7, 0x316d, 0xd1cd, 0x1, 0x1);
        gbc.writeMem(0x52fc, { 0x43 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xce04, gbc.sp());
        EXPECT(0x52fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 029E
        gbc.setState(0xef08, 0xe665, 0x1960, 0xa755, 0xb07e, 0x1163, 0x0, 0x0);
        gbc.writeMem(0xef08, { 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe665, gbc.sp());
        EXPECT(0xef09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xef08));
        // 43 029F
        gbc.setState(0x7949, 0x198, 0x6db0, 0x8d1a, 0x8218, 0xb46b, 0x0, 0x0);
        gbc.writeMem(0x7949, { 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x198, gbc.sp());
        EXPECT(0x794a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02A0
        gbc.setState(0x906b, 0x666d, 0xcd80, 0xbf75, 0xd140, 0x3da8, 0x1, 0x0);
        gbc.writeMem(0x906b, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x666d, gbc.sp());
        EXPECT(0x906c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x906b));
        // 43 02A1
        gbc.setState(0x8028, 0x8281, 0x1530, 0xfbf9, 0xfb05, 0x30f5, 0x1, 0x0);
        gbc.writeMem(0x8028, { 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8281, gbc.sp());
        EXPECT(0x8029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8028));
        // 43 02A2
        gbc.setState(0x8760, 0xa011, 0xb9b0, 0x6975, 0x43a3, 0x587c, 0x0, 0x0);
        gbc.writeMem(0x8760, { 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa011, gbc.sp());
        EXPECT(0x8761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8760));
        // 43 02A3
        gbc.setState(0xbf11, 0xfdbf, 0xec60, 0xf36f, 0x6d1e, 0x5b65, 0x0, 0x1);
        gbc.writeMem(0xbf11, { 0x43 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfdbf, gbc.sp());
        EXPECT(0xbf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbf11));
        // 43 02A4
        gbc.setState(0xa85d, 0x204f, 0x1360, 0x10, 0xbbd2, 0xc9d2, 0x0, 0x0);
        gbc.writeMem(0xa85d, { 0x43 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x204f, gbc.sp());
        EXPECT(0xa85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa85d));
        // 43 02A5
        gbc.setState(0xbd55, 0x1165, 0xc4d0, 0xb236, 0xea4, 0x89f3, 0x1, 0x1);
        gbc.writeMem(0xbd55, { 0x43 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1165, gbc.sp());
        EXPECT(0xbd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbd55));
        // 43 02A6
        gbc.setState(0xbc06, 0x489c, 0xe5c0, 0xc75d, 0x2173, 0x575b, 0x0, 0x0);
        gbc.writeMem(0xbc06, { 0x43 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x489c, gbc.sp());
        EXPECT(0xbc07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbc06));
        // 43 02A7
        gbc.setState(0xc37f, 0xe7b9, 0x2c70, 0xd2ea, 0x94a9, 0x9da6, 0x0, 0x0);
        gbc.writeMem(0xc37f, { 0x43 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe7b9, gbc.sp());
        EXPECT(0xc380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc37f));
        // 43 02A8
        gbc.setState(0x36e0, 0x65ba, 0x8080, 0x23a, 0x6e06, 0x6019, 0x1, 0x1);
        gbc.writeMem(0x36e0, { 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x65ba, gbc.sp());
        EXPECT(0x36e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02A9
        gbc.setState(0xc2c0, 0x43e, 0xcaa0, 0x29ab, 0x1f05, 0x1486, 0x1, 0x0);
        gbc.writeMem(0xc2c0, { 0x43 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x43e, gbc.sp());
        EXPECT(0xc2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc2c0));
        // 43 02AA
        gbc.setState(0xac1f, 0x2437, 0xe720, 0x6248, 0xaf8e, 0x8d4f, 0x0, 0x1);
        gbc.writeMem(0xac1f, { 0x43 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2437, gbc.sp());
        EXPECT(0xac20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xac1f));
        // 43 02AB
        gbc.setState(0x8560, 0x6d4, 0xf4e0, 0xf9f3, 0x4b03, 0xab00, 0x0, 0x1);
        gbc.writeMem(0x8560, { 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6d4, gbc.sp());
        EXPECT(0x8561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8560));
        // 43 02AD
        gbc.setState(0x2bb6, 0x9267, 0xea70, 0x53f7, 0x84bb, 0x2ea6, 0x1, 0x1);
        gbc.writeMem(0x2bb6, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9267, gbc.sp());
        EXPECT(0x2bb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02AE
        gbc.setState(0x86b3, 0x57f9, 0x6700, 0xfc3b, 0x2a5c, 0xb07b, 0x1, 0x0);
        gbc.writeMem(0x86b3, { 0x43 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x57f9, gbc.sp());
        EXPECT(0x86b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x86b3));
        // 43 02AF
        gbc.setState(0xddbf, 0x6fed, 0x6de0, 0x1579, 0x6889, 0xb25f, 0x0, 0x0);
        gbc.writeMem(0xddbf, { 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6fed, gbc.sp());
        EXPECT(0xddc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xddbf));
        // 43 02B0
        gbc.setState(0xbebd, 0x21d7, 0x9050, 0xf47, 0x3993, 0x95d9, 0x1, 0x1);
        gbc.writeMem(0xbebd, { 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x21d7, gbc.sp());
        EXPECT(0xbebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbebd));
        // 43 02B1
        gbc.setState(0x719a, 0xec3b, 0xfe00, 0xcc8c, 0x7be2, 0x8e26, 0x0, 0x0);
        gbc.writeMem(0x719a, { 0x43 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xec3b, gbc.sp());
        EXPECT(0x719b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02B3
        gbc.setState(0x29e3, 0x6c6b, 0xda90, 0x6acd, 0x23ee, 0x95d1, 0x1, 0x1);
        gbc.writeMem(0x29e3, { 0x43 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6c6b, gbc.sp());
        EXPECT(0x29e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02B4
        gbc.setState(0x21c9, 0xd68f, 0x8180, 0xee07, 0x7ba8, 0xe087, 0x0, 0x1);
        gbc.writeMem(0x21c9, { 0x43 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd68f, gbc.sp());
        EXPECT(0x21ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02B5
        gbc.setState(0xca0d, 0xc7fa, 0x8be0, 0x8fd8, 0xae0a, 0x7829, 0x0, 0x0);
        gbc.writeMem(0xca0d, { 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc7fa, gbc.sp());
        EXPECT(0xca0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xca0d));
        // 43 02B6
        gbc.setState(0x2d8, 0xb926, 0x380, 0x81f9, 0x7ad3, 0x4182, 0x0, 0x1);
        gbc.writeMem(0x2d8, { 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb926, gbc.sp());
        EXPECT(0x2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02B7
        gbc.setState(0xe1a0, 0x7477, 0x3990, 0x152a, 0xc704, 0x791c, 0x0, 0x1);
        gbc.writeMem(0xe1a0, { 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7477, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe1a0));
        // 43 02B8
        gbc.setState(0xa163, 0x7bd0, 0x7b90, 0xb80e, 0x34b5, 0x25dd, 0x1, 0x1);
        gbc.writeMem(0xa163, { 0x43 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7bd0, gbc.sp());
        EXPECT(0xa164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa163));
        // 43 02B9
        gbc.setState(0x54b8, 0x589e, 0xca0, 0x41d1, 0x5b65, 0x39df, 0x1, 0x0);
        gbc.writeMem(0x54b8, { 0x43 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x589e, gbc.sp());
        EXPECT(0x54b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02BA
        gbc.setState(0xe4d4, 0x8b1b, 0x2560, 0x5680, 0x2985, 0xce34, 0x0, 0x0);
        gbc.writeMem(0xe4d4, { 0x43 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8b1b, gbc.sp());
        EXPECT(0xe4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe4d4));
        // 43 02BB
        gbc.setState(0x3f04, 0xd4c, 0x3940, 0x2518, 0xa26e, 0x6b47, 0x0, 0x1);
        gbc.writeMem(0x3f04, { 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd4c, gbc.sp());
        EXPECT(0x3f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02BC
        gbc.setState(0x7c1a, 0x4ed3, 0xe4a0, 0x6558, 0xc8f7, 0x2b5a, 0x1, 0x1);
        gbc.writeMem(0x7c1a, { 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ed3, gbc.sp());
        EXPECT(0x7c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02BE
        gbc.setState(0xe41c, 0xad18, 0xeed0, 0x42c9, 0x8a34, 0xd7aa, 0x0, 0x1);
        gbc.writeMem(0xe41c, { 0x43 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xad18, gbc.sp());
        EXPECT(0xe41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe41c));
        // 43 02BF
        gbc.setState(0x87ee, 0xc321, 0xbe50, 0xa688, 0xef8, 0xb3f7, 0x0, 0x1);
        gbc.writeMem(0x87ee, { 0x43 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc321, gbc.sp());
        EXPECT(0x87ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x87ee));
        // 43 02C0
        gbc.setState(0x53f7, 0x363c, 0x5c70, 0x5f2a, 0x8c2d, 0xb984, 0x1, 0x0);
        gbc.writeMem(0x53f7, { 0x43 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x363c, gbc.sp());
        EXPECT(0x53f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02C1
        gbc.setState(0xa620, 0x6959, 0xdad0, 0xe3d7, 0x74c7, 0x996c, 0x1, 0x1);
        gbc.writeMem(0xa620, { 0x43 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6959, gbc.sp());
        EXPECT(0xa621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa620));
        // 43 02C2
        gbc.setState(0x45f2, 0xcb2e, 0x5250, 0xa682, 0xc030, 0x3a20, 0x1, 0x1);
        gbc.writeMem(0x45f2, { 0x43 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcb2e, gbc.sp());
        EXPECT(0x45f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02C3
        gbc.setState(0x81a9, 0x5c1d, 0x95e0, 0xcd26, 0x7bf2, 0xeba5, 0x1, 0x1);
        gbc.writeMem(0x81a9, { 0x43 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5c1d, gbc.sp());
        EXPECT(0x81aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x81a9));
        // 43 02C5
        gbc.setState(0x416d, 0x5963, 0x63b0, 0xc217, 0x3fc7, 0xa60a, 0x0, 0x0);
        gbc.writeMem(0x416d, { 0x43 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5963, gbc.sp());
        EXPECT(0x416e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02C6
        gbc.setState(0xc4c3, 0x1758, 0x42a0, 0x5323, 0x77e4, 0x9fee, 0x1, 0x1);
        gbc.writeMem(0xc4c3, { 0x43 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1758, gbc.sp());
        EXPECT(0xc4c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc4c3));
        // 43 02C7
        gbc.setState(0xd898, 0x4b2, 0xe550, 0x8849, 0xd5fb, 0x6b65, 0x0, 0x1);
        gbc.writeMem(0xd898, { 0x43 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4b2, gbc.sp());
        EXPECT(0xd899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd898));
        // 43 02C8
        gbc.setState(0x31e1, 0x4f7a, 0x7fd0, 0xd9e, 0x3fb7, 0xa569, 0x1, 0x0);
        gbc.writeMem(0x31e1, { 0x43 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4f7a, gbc.sp());
        EXPECT(0x31e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02C9
        gbc.setState(0x1fc5, 0x8236, 0x9730, 0xd521, 0x1e79, 0x3113, 0x0, 0x0);
        gbc.writeMem(0x1fc5, { 0x43 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8236, gbc.sp());
        EXPECT(0x1fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02CA
        gbc.setState(0x856d, 0xfba8, 0x4930, 0x2b47, 0x38d3, 0xa966, 0x0, 0x1);
        gbc.writeMem(0x856d, { 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfba8, gbc.sp());
        EXPECT(0x856e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x856d));
        // 43 02CB
        gbc.setState(0x3ef4, 0x7787, 0xc8b0, 0x7f0, 0x44dd, 0x1191, 0x0, 0x1);
        gbc.writeMem(0x3ef4, { 0x43 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7787, gbc.sp());
        EXPECT(0x3ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02CC
        gbc.setState(0xb493, 0x5bb6, 0xe4f0, 0x7b93, 0x3cb3, 0xd46b, 0x0, 0x0);
        gbc.writeMem(0xb493, { 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5bb6, gbc.sp());
        EXPECT(0xb494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb493));
        // 43 02CD
        gbc.setState(0xa7c, 0x55e, 0xeab0, 0xf89f, 0x8f12, 0xddfe, 0x0, 0x1);
        gbc.writeMem(0xa7c, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x55e, gbc.sp());
        EXPECT(0xa7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02CE
        gbc.setState(0x347c, 0x74ab, 0x38e0, 0x124, 0xf9dd, 0x8351, 0x0, 0x0);
        gbc.writeMem(0x347c, { 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x74ab, gbc.sp());
        EXPECT(0x347d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02CF
        gbc.setState(0x30d0, 0x2cbc, 0x80d0, 0x6d2c, 0x8f0e, 0xc457, 0x0, 0x1);
        gbc.writeMem(0x30d0, { 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2cbc, gbc.sp());
        EXPECT(0x30d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02D0
        gbc.setState(0xddb3, 0xc27e, 0x6ee0, 0x50b4, 0xad6c, 0x5cd2, 0x1, 0x1);
        gbc.writeMem(0xddb3, { 0x43 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc27e, gbc.sp());
        EXPECT(0xddb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xddb3));
        // 43 02D1
        gbc.setState(0x867f, 0xa116, 0xa750, 0xc34c, 0xbfac, 0xf2a0, 0x0, 0x0);
        gbc.writeMem(0x867f, { 0x43 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa116, gbc.sp());
        EXPECT(0x8680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x867f));
        // 43 02D2
        gbc.setState(0xcda8, 0x3a8f, 0xc120, 0xb4a4, 0x267a, 0x82ed, 0x1, 0x1);
        gbc.writeMem(0xcda8, { 0x43 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3a8f, gbc.sp());
        EXPECT(0xcda9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcda8));
        // 43 02D3
        gbc.setState(0xefb5, 0x2150, 0x2160, 0x8c34, 0x9766, 0xafcd, 0x0, 0x0);
        gbc.writeMem(0xefb5, { 0x43 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2150, gbc.sp());
        EXPECT(0xefb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xefb5));
        // 43 02D4
        gbc.setState(0x86f9, 0xde20, 0x2b50, 0xccba, 0x8d5e, 0xc32b, 0x0, 0x0);
        gbc.writeMem(0x86f9, { 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xde20, gbc.sp());
        EXPECT(0x86fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x86f9));
        // 43 02D5
        gbc.setState(0x6c16, 0x3672, 0x52b0, 0xb184, 0x4b16, 0xa906, 0x1, 0x1);
        gbc.writeMem(0x6c16, { 0x43 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3672, gbc.sp());
        EXPECT(0x6c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02D6
        gbc.setState(0x6f13, 0x4d0b, 0x19b0, 0x957b, 0xb6ac, 0x8a44, 0x1, 0x1);
        gbc.writeMem(0x6f13, { 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4d0b, gbc.sp());
        EXPECT(0x6f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02D7
        gbc.setState(0xebe3, 0x9d99, 0xc5b0, 0x920e, 0xd777, 0xa146, 0x0, 0x1);
        gbc.writeMem(0xebe3, { 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9d99, gbc.sp());
        EXPECT(0xebe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xebe3));
        // 43 02D8
        gbc.setState(0x8655, 0x40c0, 0x7e50, 0x5184, 0x7f41, 0x55c, 0x0, 0x1);
        gbc.writeMem(0x8655, { 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x40c0, gbc.sp());
        EXPECT(0x8656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8655));
        // 43 02D9
        gbc.setState(0xa855, 0xcc8f, 0xb280, 0xb4aa, 0x7b57, 0x6084, 0x0, 0x0);
        gbc.writeMem(0xa855, { 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcc8f, gbc.sp());
        EXPECT(0xa856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa855));
        // 43 02DA
        gbc.setState(0x4994, 0x3456, 0xdf40, 0x3ede, 0x23e7, 0x9c51, 0x0, 0x1);
        gbc.writeMem(0x4994, { 0x43 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3456, gbc.sp());
        EXPECT(0x4995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02DC
        gbc.setState(0xc16f, 0xe161, 0x1ef0, 0xe710, 0x4178, 0xa572, 0x0, 0x1);
        gbc.writeMem(0xc16f, { 0x43 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe161, gbc.sp());
        EXPECT(0xc170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc16f));
        // 43 02DD
        gbc.setState(0xdea8, 0x7ab7, 0x66d0, 0x1724, 0xb1de, 0xadd0, 0x0, 0x0);
        gbc.writeMem(0xdea8, { 0x43 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7ab7, gbc.sp());
        EXPECT(0xdea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdea8));
        // 43 02DE
        gbc.setState(0xca85, 0xaec8, 0xcf50, 0xec8d, 0x4a53, 0x8f4b, 0x0, 0x1);
        gbc.writeMem(0xca85, { 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xaec8, gbc.sp());
        EXPECT(0xca86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xca85));
        // 43 02DF
        gbc.setState(0x37c3, 0x795c, 0xc0a0, 0x7a54, 0x7b3a, 0x96fc, 0x0, 0x0);
        gbc.writeMem(0x37c3, { 0x43 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x795c, gbc.sp());
        EXPECT(0x37c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02E1
        gbc.setState(0xeb28, 0x5b5f, 0x9730, 0xc434, 0xe749, 0xce74, 0x1, 0x1);
        gbc.writeMem(0xeb28, { 0x43 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5b5f, gbc.sp());
        EXPECT(0xeb29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xeb28));
        // 43 02E2
        gbc.setState(0x5393, 0x8817, 0xd0a0, 0xf3fa, 0x34b1, 0x4c82, 0x0, 0x1);
        gbc.writeMem(0x5393, { 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8817, gbc.sp());
        EXPECT(0x5394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02E3
        gbc.setState(0xd889, 0x264b, 0x1a60, 0xa284, 0x4314, 0x18f7, 0x0, 0x1);
        gbc.writeMem(0xd889, { 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x264b, gbc.sp());
        EXPECT(0xd88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd889));
        // 43 02E4
        gbc.setState(0x7e30, 0xcae8, 0x8b20, 0x4b54, 0xd127, 0xcd32, 0x1, 0x1);
        gbc.writeMem(0x7e30, { 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcae8, gbc.sp());
        EXPECT(0x7e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02E5
        gbc.setState(0xb6aa, 0x5ca2, 0xb0e0, 0x5a32, 0xa920, 0x2150, 0x1, 0x1);
        gbc.writeMem(0xb6aa, { 0x43 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5ca2, gbc.sp());
        EXPECT(0xb6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb6aa));
        // 43 02E6
        gbc.setState(0x938b, 0xd832, 0xb700, 0x4e19, 0xf13d, 0x3d45, 0x0, 0x0);
        gbc.writeMem(0x938b, { 0x43 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd832, gbc.sp());
        EXPECT(0x938c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x938b));
        // 43 02E7
        gbc.setState(0x5473, 0xef32, 0x30, 0x3a91, 0x6650, 0xe658, 0x0, 0x1);
        gbc.writeMem(0x5473, { 0x43 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xef32, gbc.sp());
        EXPECT(0x5474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02E8
        gbc.setState(0x37ee, 0x56c6, 0x3260, 0x6a48, 0xf09a, 0x5b52, 0x1, 0x0);
        gbc.writeMem(0x37ee, { 0x43 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x56c6, gbc.sp());
        EXPECT(0x37ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02E9
        gbc.setState(0x4671, 0x90f9, 0xaf70, 0x7494, 0x31e0, 0x99f5, 0x1, 0x1);
        gbc.writeMem(0x4671, { 0x43 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x90f9, gbc.sp());
        EXPECT(0x4672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02EA
        gbc.setState(0xa705, 0x5b83, 0x6a00, 0x3dcb, 0xe680, 0x6f2, 0x0, 0x1);
        gbc.writeMem(0xa705, { 0x43 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5b83, gbc.sp());
        EXPECT(0xa706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa705));
        // 43 02EB
        gbc.setState(0xa967, 0x63eb, 0xf0f0, 0xb113, 0xc241, 0x1210, 0x1, 0x0);
        gbc.writeMem(0xa967, { 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x63eb, gbc.sp());
        EXPECT(0xa968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa967));
        // 43 02ED
        gbc.setState(0x2a2e, 0xbbff, 0x990, 0x5884, 0x74f, 0x4059, 0x1, 0x1);
        gbc.writeMem(0x2a2e, { 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbbff, gbc.sp());
        EXPECT(0x2a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02EE
        gbc.setState(0x2f97, 0x4190, 0x4a80, 0xc6ca, 0x2bb4, 0x5e86, 0x0, 0x1);
        gbc.writeMem(0x2f97, { 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4190, gbc.sp());
        EXPECT(0x2f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02EF
        gbc.setState(0x28b0, 0xbcf5, 0xff90, 0xe12c, 0xeeaf, 0x9891, 0x0, 0x0);
        gbc.writeMem(0x28b0, { 0x43 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbcf5, gbc.sp());
        EXPECT(0x28b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02F0
        gbc.setState(0x970b, 0xc41, 0xdc50, 0x379a, 0xece9, 0x2d35, 0x1, 0x1);
        gbc.writeMem(0x970b, { 0x43 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc41, gbc.sp());
        EXPECT(0x970c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x970b));
        // 43 02F1
        gbc.setState(0x369, 0xb9d8, 0x72a0, 0x6ae3, 0xa64a, 0xa144, 0x0, 0x0);
        gbc.writeMem(0x369, { 0x43 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb9d8, gbc.sp());
        EXPECT(0x36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02F2
        gbc.setState(0x726e, 0x957d, 0xc560, 0x7a76, 0x35bd, 0x4b93, 0x0, 0x0);
        gbc.writeMem(0x726e, { 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x957d, gbc.sp());
        EXPECT(0x726f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02F3
        gbc.setState(0x75fd, 0xe54d, 0xbf10, 0xaf4, 0xa165, 0x9e53, 0x0, 0x1);
        gbc.writeMem(0x75fd, { 0x43 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe54d, gbc.sp());
        EXPECT(0x75fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02F4
        gbc.setState(0x919b, 0x9f49, 0x39a0, 0x54c2, 0xbf00, 0x59ab, 0x0, 0x0);
        gbc.writeMem(0x919b, { 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9f49, gbc.sp());
        EXPECT(0x919c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x919b));
        // 43 02F5
        gbc.setState(0x7688, 0x12a7, 0x86e0, 0x7c2b, 0x544f, 0x1dbb, 0x0, 0x0);
        gbc.writeMem(0x7688, { 0x43 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x12a7, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02F6
        gbc.setState(0xd764, 0xdcd5, 0x31d0, 0x1dad, 0xa7d8, 0x2a5b, 0x0, 0x1);
        gbc.writeMem(0xd764, { 0x43 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xdcd5, gbc.sp());
        EXPECT(0xd765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd764));
        // 43 02F7
        gbc.setState(0xdffb, 0x9752, 0x5f20, 0xe4d8, 0x7bcd, 0x8779, 0x0, 0x0);
        gbc.writeMem(0xdffb, { 0x43 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9752, gbc.sp());
        EXPECT(0xdffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdffb));
        // 43 02F8
        gbc.setState(0x120e, 0x6b48, 0xa40, 0xd1b4, 0x1a07, 0x329d, 0x1, 0x1);
        gbc.writeMem(0x120e, { 0x43 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6b48, gbc.sp());
        EXPECT(0x120f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02F9
        gbc.setState(0x4420, 0x3e9, 0x64e0, 0x600b, 0xfdcc, 0x3de5, 0x0, 0x1);
        gbc.writeMem(0x4420, { 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3e9, gbc.sp());
        EXPECT(0x4421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 02FA
        gbc.setState(0xc7a1, 0xd643, 0xd120, 0x18c5, 0xa299, 0xe3a, 0x1, 0x1);
        gbc.writeMem(0xc7a1, { 0x43 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd643, gbc.sp());
        EXPECT(0xc7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc7a1));
        // 43 02FB
        gbc.setState(0xa34e, 0xbc24, 0xf9f0, 0xb414, 0x2f2, 0x11e3, 0x0, 0x0);
        gbc.writeMem(0xa34e, { 0x43 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbc24, gbc.sp());
        EXPECT(0xa34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa34e));
        // 43 02FC
        gbc.setState(0x5d98, 0x85fe, 0x30, 0x7a5c, 0x80d1, 0x689, 0x0, 0x1);
        gbc.writeMem(0x5d98, { 0x43 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x85fe, gbc.sp());
        EXPECT(0x5d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 02FD
        gbc.setState(0xbb27, 0xab32, 0xe4d0, 0x88b9, 0xe9a2, 0x886f, 0x1, 0x1);
        gbc.writeMem(0xbb27, { 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xab32, gbc.sp());
        EXPECT(0xbb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbb27));
        // 43 02FE
        gbc.setState(0x950e, 0x9985, 0x64c0, 0xd246, 0x37ce, 0x4717, 0x0, 0x1);
        gbc.writeMem(0x950e, { 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9985, gbc.sp());
        EXPECT(0x950f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x950e));
        // 43 02FF
        gbc.setState(0x12b5, 0x5f1d, 0xb1c0, 0x2f95, 0x43c6, 0x4d6, 0x0, 0x1);
        gbc.writeMem(0x12b5, { 0x43 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5f1d, gbc.sp());
        EXPECT(0x12b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0300
        gbc.setState(0x6f15, 0x8811, 0xd50, 0xdddc, 0xfef3, 0x9f02, 0x0, 0x1);
        gbc.writeMem(0x6f15, { 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8811, gbc.sp());
        EXPECT(0x6f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0301
        gbc.setState(0x546, 0x4290, 0x620, 0x45c0, 0x8fa6, 0x1c78, 0x0, 0x0);
        gbc.writeMem(0x546, { 0x43 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4290, gbc.sp());
        EXPECT(0x547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0302
        gbc.setState(0xaea6, 0x102f, 0x3b70, 0x7e55, 0xd55c, 0x50d5, 0x0, 0x1);
        gbc.writeMem(0xaea6, { 0x43 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x102f, gbc.sp());
        EXPECT(0xaea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xaea6));
        // 43 0303
        gbc.setState(0x738a, 0xae0d, 0xeae0, 0x1b90, 0xe21e, 0x8d3a, 0x0, 0x0);
        gbc.writeMem(0x738a, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xae0d, gbc.sp());
        EXPECT(0x738b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0304
        gbc.setState(0xa8f9, 0x25d, 0x68c0, 0xfb8f, 0xba0f, 0x7f10, 0x1, 0x1);
        gbc.writeMem(0xa8f9, { 0x43 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x25d, gbc.sp());
        EXPECT(0xa8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa8f9));
        // 43 0305
        gbc.setState(0x8067, 0x74d9, 0xc320, 0xb396, 0xe0f9, 0x3611, 0x0, 0x1);
        gbc.writeMem(0x8067, { 0x43 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x74d9, gbc.sp());
        EXPECT(0x8068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8067));
        // 43 0306
        gbc.setState(0xe5c0, 0x4d46, 0x10b0, 0x934, 0xc1c5, 0x4c40, 0x0, 0x0);
        gbc.writeMem(0xe5c0, { 0x43 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4d46, gbc.sp());
        EXPECT(0xe5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe5c0));
        // 43 0307
        gbc.setState(0x3575, 0x7202, 0x76a0, 0x5b9, 0xbdbe, 0x82fd, 0x1, 0x1);
        gbc.writeMem(0x3575, { 0x43 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7202, gbc.sp());
        EXPECT(0x3576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0308
        gbc.setState(0x57e0, 0x2bde, 0xf3f0, 0x173d, 0x71f8, 0x8cec, 0x0, 0x1);
        gbc.writeMem(0x57e0, { 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2bde, gbc.sp());
        EXPECT(0x57e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0309
        gbc.setState(0x1f6d, 0x7d95, 0x8b10, 0x398f, 0x9e0, 0x9357, 0x1, 0x1);
        gbc.writeMem(0x1f6d, { 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7d95, gbc.sp());
        EXPECT(0x1f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 030A
        gbc.setState(0x82a3, 0xd36b, 0x2cf0, 0xa640, 0x8832, 0x42a4, 0x1, 0x1);
        gbc.writeMem(0x82a3, { 0x43 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd36b, gbc.sp());
        EXPECT(0x82a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x82a3));
        // 43 030B
        gbc.setState(0xe262, 0x6dfa, 0xd1a0, 0x302e, 0x8c7e, 0x481b, 0x1, 0x1);
        gbc.writeMem(0xe262, { 0x43 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6dfa, gbc.sp());
        EXPECT(0xe263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe262));
        // 43 030C
        gbc.setState(0x1729, 0xd3d9, 0xc240, 0x7a9c, 0x1d9a, 0xae34, 0x0, 0x0);
        gbc.writeMem(0x1729, { 0x43 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd3d9, gbc.sp());
        EXPECT(0x172a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 030D
        gbc.setState(0xb965, 0x4c70, 0x9040, 0x4870, 0x2c18, 0xb28, 0x0, 0x1);
        gbc.writeMem(0xb965, { 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4c70, gbc.sp());
        EXPECT(0xb966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb965));
        // 43 030E
        gbc.setState(0x1b81, 0xc856, 0x2490, 0xce0, 0x895b, 0xa6f0, 0x0, 0x0);
        gbc.writeMem(0x1b81, { 0x43 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc856, gbc.sp());
        EXPECT(0x1b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 030F
        gbc.setState(0x912c, 0x5485, 0x99d0, 0xdad6, 0xf240, 0xffef, 0x1, 0x1);
        gbc.writeMem(0x912c, { 0x43 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5485, gbc.sp());
        EXPECT(0x912d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x912c));
        // 43 0310
        gbc.setState(0x2dc8, 0x6777, 0xa7e0, 0xe008, 0x3144, 0x9a7d, 0x1, 0x1);
        gbc.writeMem(0x2dc8, { 0x43 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6777, gbc.sp());
        EXPECT(0x2dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0311
        gbc.setState(0x94fb, 0x178b, 0xde00, 0x7808, 0x7dbd, 0x5092, 0x0, 0x1);
        gbc.writeMem(0x94fb, { 0x43 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x178b, gbc.sp());
        EXPECT(0x94fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x94fb));
        // 43 0313
        gbc.setState(0xa4c1, 0x700f, 0xa460, 0x4796, 0x4a67, 0xc54d, 0x0, 0x1);
        gbc.writeMem(0xa4c1, { 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x700f, gbc.sp());
        EXPECT(0xa4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa4c1));
        // 43 0314
        gbc.setState(0x4c2f, 0x97c1, 0x5f40, 0x4678, 0x1d64, 0xb6e0, 0x1, 0x0);
        gbc.writeMem(0x4c2f, { 0x43 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x97c1, gbc.sp());
        EXPECT(0x4c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0315
        gbc.setState(0x8e90, 0xbf1a, 0x34b0, 0x46ab, 0xebe2, 0xe9a2, 0x1, 0x1);
        gbc.writeMem(0x8e90, { 0x43 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbf1a, gbc.sp());
        EXPECT(0x8e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8e90));
        // 43 0316
        gbc.setState(0x33e2, 0xa806, 0xa520, 0x977e, 0xeb8a, 0x4fa3, 0x0, 0x0);
        gbc.writeMem(0x33e2, { 0x43 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa806, gbc.sp());
        EXPECT(0x33e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0317
        gbc.setState(0x7fee, 0x71c, 0x9b30, 0x524c, 0x9bd, 0x2521, 0x1, 0x0);
        gbc.writeMem(0x7fee, { 0x43 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x71c, gbc.sp());
        EXPECT(0x7fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0318
        gbc.setState(0x47b4, 0x8674, 0x2560, 0xbb7e, 0x9ee9, 0x38aa, 0x1, 0x0);
        gbc.writeMem(0x47b4, { 0x43 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8674, gbc.sp());
        EXPECT(0x47b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0319
        gbc.setState(0x27b, 0xc363, 0x2a00, 0x8c3d, 0x20f0, 0xb604, 0x0, 0x1);
        gbc.writeMem(0x27b, { 0x43 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc363, gbc.sp());
        EXPECT(0x27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 031A
        gbc.setState(0xcdd0, 0x2c82, 0x7cc0, 0x9f51, 0x95da, 0x8ee4, 0x1, 0x0);
        gbc.writeMem(0xcdd0, { 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2c82, gbc.sp());
        EXPECT(0xcdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcdd0));
        // 43 031B
        gbc.setState(0x4ea6, 0x77bf, 0xa9d0, 0x6b41, 0x38e0, 0xc70b, 0x1, 0x0);
        gbc.writeMem(0x4ea6, { 0x43 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x77bf, gbc.sp());
        EXPECT(0x4ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 031C
        gbc.setState(0xa715, 0x3a0c, 0xd6a0, 0x308a, 0xf7b1, 0xb885, 0x1, 0x0);
        gbc.writeMem(0xa715, { 0x43 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3a0c, gbc.sp());
        EXPECT(0xa716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa715));
        // 43 031D
        gbc.setState(0xbb41, 0x6fce, 0x5660, 0xc746, 0x448d, 0x8abf, 0x0, 0x0);
        gbc.writeMem(0xbb41, { 0x43 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6fce, gbc.sp());
        EXPECT(0xbb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbb41));
        // 43 031E
        gbc.setState(0x14e1, 0xa0e5, 0xd8c0, 0x34b, 0x10c, 0xc41, 0x0, 0x0);
        gbc.writeMem(0x14e1, { 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa0e5, gbc.sp());
        EXPECT(0x14e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 031F
        gbc.setState(0xb029, 0xdea, 0x7cd0, 0x7fdd, 0xb2ad, 0xbb8b, 0x0, 0x0);
        gbc.writeMem(0xb029, { 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdea, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb029));
        // 43 0320
        gbc.setState(0xc6de, 0x6ce6, 0x1320, 0x3fd6, 0x7c2b, 0xd42e, 0x1, 0x1);
        gbc.writeMem(0xc6de, { 0x43 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6ce6, gbc.sp());
        EXPECT(0xc6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc6de));
        // 43 0321
        gbc.setState(0x69c9, 0x8c85, 0x2280, 0xe8cb, 0x43a2, 0x3ac2, 0x1, 0x0);
        gbc.writeMem(0x69c9, { 0x43 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8c85, gbc.sp());
        EXPECT(0x69ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0322
        gbc.setState(0x3d12, 0x1c6c, 0x5100, 0x659c, 0x9641, 0x1a13, 0x0, 0x1);
        gbc.writeMem(0x3d12, { 0x43 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1c6c, gbc.sp());
        EXPECT(0x3d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0323
        gbc.setState(0x9e0e, 0xdbe5, 0xb230, 0x4abc, 0x4ddf, 0xae0d, 0x1, 0x1);
        gbc.writeMem(0x9e0e, { 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdbe5, gbc.sp());
        EXPECT(0x9e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9e0e));
        // 43 0324
        gbc.setState(0xa70f, 0x8225, 0xfe10, 0x4ff9, 0xbd4f, 0xe05, 0x1, 0x0);
        gbc.writeMem(0xa70f, { 0x43 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8225, gbc.sp());
        EXPECT(0xa710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa70f));
        // 43 0325
        gbc.setState(0x52a0, 0xb245, 0xe960, 0xa760, 0xe1a, 0x4fec, 0x1, 0x1);
        gbc.writeMem(0x52a0, { 0x43 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb245, gbc.sp());
        EXPECT(0x52a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0326
        gbc.setState(0xa154, 0x9bca, 0x5f40, 0x93e6, 0xc851, 0x1107, 0x1, 0x1);
        gbc.writeMem(0xa154, { 0x43 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9bca, gbc.sp());
        EXPECT(0xa155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa154));
        // 43 0327
        gbc.setState(0x99ff, 0x8214, 0x1a70, 0x8fd7, 0xf70, 0xc94d, 0x1, 0x1);
        gbc.writeMem(0x99ff, { 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8214, gbc.sp());
        EXPECT(0x9a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x99ff));
        // 43 0328
        gbc.setState(0x75d, 0x2d9a, 0x49a0, 0x6606, 0x9e8a, 0x3e04, 0x0, 0x1);
        gbc.writeMem(0x75d, { 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2d9a, gbc.sp());
        EXPECT(0x75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0329
        gbc.setState(0x2db1, 0xde03, 0xdbb0, 0x1431, 0xe5ac, 0x4bbf, 0x0, 0x1);
        gbc.writeMem(0x2db1, { 0x43 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xde03, gbc.sp());
        EXPECT(0x2db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 032A
        gbc.setState(0x24b7, 0xba89, 0x4c60, 0x15b, 0x64af, 0xb1dc, 0x1, 0x0);
        gbc.writeMem(0x24b7, { 0x43 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xba89, gbc.sp());
        EXPECT(0x24b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 032B
        gbc.setState(0x1af4, 0x4824, 0xd890, 0x6659, 0x2413, 0xe65a, 0x1, 0x1);
        gbc.writeMem(0x1af4, { 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4824, gbc.sp());
        EXPECT(0x1af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 032C
        gbc.setState(0xdebb, 0xecf2, 0x8490, 0xe8cb, 0xf78b, 0x1c32, 0x0, 0x1);
        gbc.writeMem(0xdebb, { 0x43 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xecf2, gbc.sp());
        EXPECT(0xdebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdebb));
        // 43 032D
        gbc.setState(0x1946, 0x32f4, 0x93d0, 0xc9ef, 0xd9e2, 0x2c74, 0x0, 0x0);
        gbc.writeMem(0x1946, { 0x43 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x32f4, gbc.sp());
        EXPECT(0x1947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 032E
        gbc.setState(0x2c6e, 0x2fe6, 0x2010, 0xda24, 0x76e0, 0xc951, 0x0, 0x1);
        gbc.writeMem(0x2c6e, { 0x43 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2fe6, gbc.sp());
        EXPECT(0x2c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 032F
        gbc.setState(0x4281, 0xe787, 0x9a80, 0xc3f2, 0xea56, 0xeee3, 0x1, 0x1);
        gbc.writeMem(0x4281, { 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe787, gbc.sp());
        EXPECT(0x4282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0330
        gbc.setState(0xc88f, 0x7867, 0x30b0, 0xbdfc, 0x246c, 0x6277, 0x1, 0x0);
        gbc.writeMem(0xc88f, { 0x43 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7867, gbc.sp());
        EXPECT(0xc890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc88f));
        // 43 0331
        gbc.setState(0x3dda, 0xcfe1, 0x2060, 0x843c, 0xaec1, 0x8025, 0x1, 0x1);
        gbc.writeMem(0x3dda, { 0x43 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcfe1, gbc.sp());
        EXPECT(0x3ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0332
        gbc.setState(0xd904, 0x913c, 0x680, 0x1fd0, 0xf416, 0x9ad7, 0x0, 0x1);
        gbc.writeMem(0xd904, { 0x43 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x913c, gbc.sp());
        EXPECT(0xd905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd904));
        // 43 0333
        gbc.setState(0x133e, 0xb176, 0xb5c0, 0x16d3, 0x173f, 0x4ee7, 0x1, 0x1);
        gbc.writeMem(0x133e, { 0x43 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb176, gbc.sp());
        EXPECT(0x133f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0334
        gbc.setState(0x6281, 0x9ef4, 0xb1c0, 0x4d12, 0x92b0, 0x98e, 0x1, 0x1);
        gbc.writeMem(0x6281, { 0x43 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9ef4, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0335
        gbc.setState(0xbd05, 0xf6c7, 0xc710, 0x5ba4, 0xbebb, 0x80a3, 0x1, 0x0);
        gbc.writeMem(0xbd05, { 0x43 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf6c7, gbc.sp());
        EXPECT(0xbd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbd05));
        // 43 0336
        gbc.setState(0xaafa, 0x74d1, 0x4c40, 0x613b, 0x4b8b, 0x3b9e, 0x0, 0x0);
        gbc.writeMem(0xaafa, { 0x43 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x74d1, gbc.sp());
        EXPECT(0xaafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xaafa));
        // 43 0337
        gbc.setState(0x8417, 0x3e70, 0x4980, 0x9f4e, 0xb848, 0x1725, 0x1, 0x1);
        gbc.writeMem(0x8417, { 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3e70, gbc.sp());
        EXPECT(0x8418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8417));
        // 43 0338
        gbc.setState(0x4a22, 0xda58, 0x30d0, 0xaba4, 0xb4b0, 0xd92a, 0x1, 0x0);
        gbc.writeMem(0x4a22, { 0x43 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xda58, gbc.sp());
        EXPECT(0x4a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0339
        gbc.setState(0x13c0, 0x6595, 0xcd60, 0xa613, 0xb185, 0x575e, 0x1, 0x0);
        gbc.writeMem(0x13c0, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6595, gbc.sp());
        EXPECT(0x13c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 033A
        gbc.setState(0x908c, 0x7ece, 0x5a30, 0x8806, 0x2c02, 0xf075, 0x0, 0x1);
        gbc.writeMem(0x908c, { 0x43 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7ece, gbc.sp());
        EXPECT(0x908d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x908c));
        // 43 033B
        gbc.setState(0x91bf, 0x7771, 0xea90, 0x4349, 0xb0a9, 0xcf1d, 0x1, 0x1);
        gbc.writeMem(0x91bf, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7771, gbc.sp());
        EXPECT(0x91c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x91bf));
        // 43 033C
        gbc.setState(0x9db8, 0x9d06, 0x62c0, 0x4a09, 0x4084, 0xee8d, 0x1, 0x0);
        gbc.writeMem(0x9db8, { 0x43 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9d06, gbc.sp());
        EXPECT(0x9db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9db8));
        // 43 033D
        gbc.setState(0xad07, 0xeb1c, 0x5890, 0xa48d, 0xd2d1, 0x3bc2, 0x1, 0x0);
        gbc.writeMem(0xad07, { 0x43 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xeb1c, gbc.sp());
        EXPECT(0xad08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xad07));
        // 43 033E
        gbc.setState(0xa456, 0xc547, 0x6180, 0x100d, 0x22b9, 0x771e, 0x1, 0x0);
        gbc.writeMem(0xa456, { 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc547, gbc.sp());
        EXPECT(0xa457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa456));
        // 43 0340
        gbc.setState(0x2d3c, 0xfc05, 0xb1d0, 0x3b70, 0x27b5, 0xbffc, 0x0, 0x0);
        gbc.writeMem(0x2d3c, { 0x43 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfc05, gbc.sp());
        EXPECT(0x2d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0341
        gbc.setState(0x482c, 0x3823, 0xde50, 0xfe3c, 0xbfd5, 0x2e6b, 0x1, 0x1);
        gbc.writeMem(0x482c, { 0x43 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3823, gbc.sp());
        EXPECT(0x482d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0342
        gbc.setState(0x5bff, 0x1e, 0xd6c0, 0xc77b, 0xd4ba, 0xcd92, 0x0, 0x1);
        gbc.writeMem(0x5bff, { 0x43 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1e, gbc.sp());
        EXPECT(0x5c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0343
        gbc.setState(0x826e, 0xe9b4, 0xdd10, 0x7561, 0x2965, 0xbe44, 0x1, 0x1);
        gbc.writeMem(0x826e, { 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe9b4, gbc.sp());
        EXPECT(0x826f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x826e));
        // 43 0344
        gbc.setState(0x32e, 0x9ef7, 0x6f60, 0x17b1, 0x106e, 0x152e, 0x1, 0x0);
        gbc.writeMem(0x32e, { 0x43 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9ef7, gbc.sp());
        EXPECT(0x32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0345
        gbc.setState(0x8a71, 0xa9d5, 0x4e40, 0xa943, 0x3acc, 0x3eab, 0x1, 0x0);
        gbc.writeMem(0x8a71, { 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa9d5, gbc.sp());
        EXPECT(0x8a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8a71));
        // 43 0346
        gbc.setState(0x3356, 0x5dbb, 0x16f0, 0x9f91, 0x524f, 0x33a, 0x0, 0x1);
        gbc.writeMem(0x3356, { 0x43 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5dbb, gbc.sp());
        EXPECT(0x3357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0347
        gbc.setState(0x3553, 0xcfa5, 0xb330, 0xa54e, 0x7c16, 0xa0de, 0x1, 0x1);
        gbc.writeMem(0x3553, { 0x43 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcfa5, gbc.sp());
        EXPECT(0x3554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0348
        gbc.setState(0x52e, 0xcdd1, 0x6b90, 0xfb94, 0x2aa8, 0x9e2b, 0x0, 0x1);
        gbc.writeMem(0x52e, { 0x43 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcdd1, gbc.sp());
        EXPECT(0x52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0349
        gbc.setState(0x4162, 0x89bd, 0x4580, 0xd5a, 0x785a, 0xb4aa, 0x0, 0x1);
        gbc.writeMem(0x4162, { 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x89bd, gbc.sp());
        EXPECT(0x4163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 034A
        gbc.setState(0x3865, 0x4a51, 0x3f80, 0xebc4, 0x3a67, 0x353a, 0x0, 0x0);
        gbc.writeMem(0x3865, { 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4a51, gbc.sp());
        EXPECT(0x3866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 034B
        gbc.setState(0x4c66, 0xdd47, 0xd6d0, 0x8f69, 0x7f5c, 0x7813, 0x0, 0x1);
        gbc.writeMem(0x4c66, { 0x43 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdd47, gbc.sp());
        EXPECT(0x4c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 034C
        gbc.setState(0xc233, 0x8fc, 0xfe30, 0xc32f, 0x864, 0xf893, 0x0, 0x1);
        gbc.writeMem(0xc233, { 0x43 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8fc, gbc.sp());
        EXPECT(0xc234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc233));
        // 43 034D
        gbc.setState(0xa2d6, 0xef58, 0xa280, 0x69a8, 0x5257, 0xc58c, 0x0, 0x0);
        gbc.writeMem(0xa2d6, { 0x43 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xef58, gbc.sp());
        EXPECT(0xa2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa2d6));
        // 43 034E
        gbc.setState(0x6db2, 0x4c5e, 0x49f0, 0xd100, 0xbd84, 0x6115, 0x0, 0x1);
        gbc.writeMem(0x6db2, { 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4c5e, gbc.sp());
        EXPECT(0x6db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 034F
        gbc.setState(0x87c6, 0x6620, 0xac20, 0xc5f3, 0xf31e, 0x5d3c, 0x0, 0x1);
        gbc.writeMem(0x87c6, { 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6620, gbc.sp());
        EXPECT(0x87c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x87c6));
        // 43 0351
        gbc.setState(0x740e, 0xe9f8, 0xe0c0, 0x7874, 0xa8b3, 0xa997, 0x1, 0x0);
        gbc.writeMem(0x740e, { 0x43 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe9f8, gbc.sp());
        EXPECT(0x740f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0352
        gbc.setState(0xae47, 0x5666, 0x3d60, 0x44a8, 0xed45, 0xe3c6, 0x0, 0x1);
        gbc.writeMem(0xae47, { 0x43 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5666, gbc.sp());
        EXPECT(0xae48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xae47));
        // 43 0353
        gbc.setState(0xe345, 0xed15, 0x8b00, 0xf508, 0xa03, 0xefb9, 0x0, 0x1);
        gbc.writeMem(0xe345, { 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xed15, gbc.sp());
        EXPECT(0xe346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe345));
        // 43 0354
        gbc.setState(0x113f, 0x5872, 0x6da0, 0xa57, 0x66f5, 0xfa73, 0x0, 0x1);
        gbc.writeMem(0x113f, { 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5872, gbc.sp());
        EXPECT(0x1140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0355
        gbc.setState(0x4c1a, 0x988a, 0x2300, 0x7c53, 0xa6af, 0x64cd, 0x0, 0x1);
        gbc.writeMem(0x4c1a, { 0x43 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x988a, gbc.sp());
        EXPECT(0x4c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0356
        gbc.setState(0x19c6, 0xa087, 0xd600, 0x93b6, 0xbd7, 0x4ed6, 0x0, 0x1);
        gbc.writeMem(0x19c6, { 0x43 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa087, gbc.sp());
        EXPECT(0x19c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0357
        gbc.setState(0x59d5, 0xc19a, 0xce0, 0xf0a5, 0x58c7, 0xafac, 0x0, 0x1);
        gbc.writeMem(0x59d5, { 0x43 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc19a, gbc.sp());
        EXPECT(0x59d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0358
        gbc.setState(0x3f42, 0x467c, 0x8d80, 0x2e1a, 0x9064, 0xa113, 0x0, 0x0);
        gbc.writeMem(0x3f42, { 0x43 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x467c, gbc.sp());
        EXPECT(0x3f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0359
        gbc.setState(0x3b17, 0x6ec1, 0x5050, 0x998c, 0x564d, 0x7178, 0x1, 0x1);
        gbc.writeMem(0x3b17, { 0x43 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6ec1, gbc.sp());
        EXPECT(0x3b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 035A
        gbc.setState(0x370d, 0x8199, 0xaba0, 0xd33d, 0xbe76, 0x9544, 0x1, 0x1);
        gbc.writeMem(0x370d, { 0x43 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8199, gbc.sp());
        EXPECT(0x370e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 035B
        gbc.setState(0x9b29, 0x9ccd, 0x93c0, 0x9af3, 0x550e, 0xa87a, 0x1, 0x0);
        gbc.writeMem(0x9b29, { 0x43 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9ccd, gbc.sp());
        EXPECT(0x9b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9b29));
        // 43 035C
        gbc.setState(0x7ce0, 0x614d, 0xc520, 0xa8ee, 0xf68d, 0xb32, 0x0, 0x0);
        gbc.writeMem(0x7ce0, { 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x614d, gbc.sp());
        EXPECT(0x7ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 035D
        gbc.setState(0x76e5, 0x2037, 0xbd10, 0x567d, 0xb41e, 0x7b9d, 0x1, 0x0);
        gbc.writeMem(0x76e5, { 0x43 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2037, gbc.sp());
        EXPECT(0x76e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 035E
        gbc.setState(0x7bf0, 0xbeaa, 0x14d0, 0x773a, 0xe0ac, 0x604e, 0x0, 0x0);
        gbc.writeMem(0x7bf0, { 0x43 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbeaa, gbc.sp());
        EXPECT(0x7bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 035F
        gbc.setState(0xc804, 0xe85b, 0x39f0, 0x49ba, 0x7b30, 0x54bc, 0x0, 0x0);
        gbc.writeMem(0xc804, { 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe85b, gbc.sp());
        EXPECT(0xc805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc804));
        // 43 0360
        gbc.setState(0x2db0, 0xcf09, 0x1380, 0x6738, 0x114e, 0x3666, 0x0, 0x1);
        gbc.writeMem(0x2db0, { 0x43 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcf09, gbc.sp());
        EXPECT(0x2db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0361
        gbc.setState(0xb466, 0xf89e, 0xa180, 0xe51e, 0x9214, 0xc23f, 0x0, 0x0);
        gbc.writeMem(0xb466, { 0x43 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf89e, gbc.sp());
        EXPECT(0xb467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb466));
        // 43 0362
        gbc.setState(0xab8b, 0x13de, 0xdf70, 0xcdbb, 0x96a1, 0x809d, 0x1, 0x1);
        gbc.writeMem(0xab8b, { 0x43 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x13de, gbc.sp());
        EXPECT(0xab8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xab8b));
        // 43 0363
        gbc.setState(0x3167, 0x82f0, 0x5060, 0x93c7, 0x32e4, 0xbf61, 0x1, 0x0);
        gbc.writeMem(0x3167, { 0x43 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x82f0, gbc.sp());
        EXPECT(0x3168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0364
        gbc.setState(0x9a9b, 0x3992, 0xdd10, 0x580, 0xd3ac, 0xa7dc, 0x0, 0x1);
        gbc.writeMem(0x9a9b, { 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3992, gbc.sp());
        EXPECT(0x9a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9a9b));
        // 43 0365
        gbc.setState(0x1e18, 0x81ef, 0xcc30, 0xb3aa, 0x71c9, 0x2515, 0x0, 0x1);
        gbc.writeMem(0x1e18, { 0x43 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x81ef, gbc.sp());
        EXPECT(0x1e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0366
        gbc.setState(0x6e31, 0xe70, 0x92b0, 0x9c1d, 0xa5ec, 0x982d, 0x1, 0x1);
        gbc.writeMem(0x6e31, { 0x43 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe70, gbc.sp());
        EXPECT(0x6e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0367
        gbc.setState(0x71a9, 0x5063, 0xbaa0, 0x8a35, 0xd86e, 0xe56d, 0x1, 0x1);
        gbc.writeMem(0x71a9, { 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5063, gbc.sp());
        EXPECT(0x71aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0368
        gbc.setState(0x5878, 0x73d1, 0xcaa0, 0xfb7e, 0x8bd8, 0xac1f, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0x43 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x73d1, gbc.sp());
        EXPECT(0x5879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0369
        gbc.setState(0xec37, 0xdbad, 0x3780, 0x1538, 0xcb07, 0x3e8b, 0x0, 0x0);
        gbc.writeMem(0xec37, { 0x43 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdbad, gbc.sp());
        EXPECT(0xec38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xec37));
        // 43 036A
        gbc.setState(0x9d11, 0xfcc2, 0x2160, 0xd739, 0xdd1a, 0xa1c4, 0x1, 0x0);
        gbc.writeMem(0x9d11, { 0x43 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfcc2, gbc.sp());
        EXPECT(0x9d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9d11));
        // 43 036B
        gbc.setState(0xb0e, 0xf1d2, 0xa0b0, 0x35d3, 0x7405, 0xb9e, 0x0, 0x1);
        gbc.writeMem(0xb0e, { 0x43 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf1d2, gbc.sp());
        EXPECT(0xb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 036C
        gbc.setState(0xa321, 0xe7a2, 0x1230, 0x3b1a, 0x2597, 0x15fd, 0x1, 0x1);
        gbc.writeMem(0xa321, { 0x43 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe7a2, gbc.sp());
        EXPECT(0xa322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa321));
        // 43 036D
        gbc.setState(0x1334, 0xbc19, 0x7e40, 0x626a, 0x46c5, 0x7037, 0x1, 0x0);
        gbc.writeMem(0x1334, { 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbc19, gbc.sp());
        EXPECT(0x1335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 036E
        gbc.setState(0xbf33, 0x39c7, 0x5df0, 0xa4e, 0x9aef, 0xdfbc, 0x1, 0x0);
        gbc.writeMem(0xbf33, { 0x43 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x39c7, gbc.sp());
        EXPECT(0xbf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbf33));
        // 43 036F
        gbc.setState(0xeed9, 0xeb73, 0xa1d0, 0xdc10, 0x6acb, 0x4081, 0x0, 0x0);
        gbc.writeMem(0xeed9, { 0x43 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xeb73, gbc.sp());
        EXPECT(0xeeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xeed9));
        // 43 0370
        gbc.setState(0xbafb, 0x2d32, 0xc800, 0xe26c, 0x9ed6, 0x1a31, 0x1, 0x1);
        gbc.writeMem(0xbafb, { 0x43 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2d32, gbc.sp());
        EXPECT(0xbafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbafb));
        // 43 0371
        gbc.setState(0x5bb0, 0x806, 0x7980, 0x2515, 0x1905, 0x20ce, 0x1, 0x0);
        gbc.writeMem(0x5bb0, { 0x43 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x806, gbc.sp());
        EXPECT(0x5bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0372
        gbc.setState(0x983c, 0x64a5, 0x3d60, 0x110d, 0xa6fe, 0x4811, 0x0, 0x1);
        gbc.writeMem(0x983c, { 0x43 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x64a5, gbc.sp());
        EXPECT(0x983d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x983c));
        // 43 0373
        gbc.setState(0xc69, 0x1154, 0x9ab0, 0x8d58, 0x5263, 0x9380, 0x1, 0x1);
        gbc.writeMem(0xc69, { 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1154, gbc.sp());
        EXPECT(0xc6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0375
        gbc.setState(0xc756, 0x8299, 0xba50, 0xd5d6, 0xd1e7, 0xde26, 0x0, 0x1);
        gbc.writeMem(0xc756, { 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8299, gbc.sp());
        EXPECT(0xc757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc756));
        // 43 0376
        gbc.setState(0x7035, 0x33e3, 0xd710, 0xc0c9, 0xc362, 0xbfa, 0x1, 0x0);
        gbc.writeMem(0x7035, { 0x43 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x33e3, gbc.sp());
        EXPECT(0x7036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0377
        gbc.setState(0xabf5, 0x4dc1, 0x8540, 0xdbdd, 0x2d96, 0x68b9, 0x0, 0x1);
        gbc.writeMem(0xabf5, { 0x43 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0xabf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xabf5));
        // 43 0378
        gbc.setState(0xd69b, 0xbc90, 0x44b0, 0xd0f7, 0xab93, 0x5074, 0x0, 0x1);
        gbc.writeMem(0xd69b, { 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbc90, gbc.sp());
        EXPECT(0xd69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd69b));
        // 43 0379
        gbc.setState(0x8f5, 0x35c1, 0x2550, 0x4990, 0x4a7c, 0xc4a1, 0x0, 0x0);
        gbc.writeMem(0x8f5, { 0x43 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x35c1, gbc.sp());
        EXPECT(0x8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 037A
        gbc.setState(0xc228, 0x2008, 0x7800, 0x47f4, 0xee83, 0xfc95, 0x0, 0x1);
        gbc.writeMem(0xc228, { 0x43 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2008, gbc.sp());
        EXPECT(0xc229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc228));
        // 43 037B
        gbc.setState(0x6123, 0x607f, 0x3d90, 0x27df, 0xc12a, 0x926b, 0x1, 0x0);
        gbc.writeMem(0x6123, { 0x43 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x607f, gbc.sp());
        EXPECT(0x6124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 037C
        gbc.setState(0x88fb, 0x1c41, 0x1590, 0x5d6, 0x1900, 0xa9c8, 0x1, 0x0);
        gbc.writeMem(0x88fb, { 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1c41, gbc.sp());
        EXPECT(0x88fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x88fb));
        // 43 037D
        gbc.setState(0xc896, 0x36ac, 0xd280, 0xc811, 0x2ba7, 0x6e2d, 0x0, 0x0);
        gbc.writeMem(0xc896, { 0x43 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x36ac, gbc.sp());
        EXPECT(0xc897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc896));
        // 43 037E
        gbc.setState(0x3f5a, 0xa8c1, 0xd680, 0x8409, 0x3f72, 0xbae5, 0x1, 0x1);
        gbc.writeMem(0x3f5a, { 0x43 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa8c1, gbc.sp());
        EXPECT(0x3f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 037F
        gbc.setState(0x886f, 0x8eed, 0xbb20, 0x4b5c, 0xd036, 0x9d0b, 0x0, 0x1);
        gbc.writeMem(0x886f, { 0x43 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8eed, gbc.sp());
        EXPECT(0x8870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x886f));
        // 43 0380
        gbc.setState(0x5078, 0xcdf3, 0x8de0, 0x78b4, 0x92e6, 0xe45a, 0x0, 0x0);
        gbc.writeMem(0x5078, { 0x43 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcdf3, gbc.sp());
        EXPECT(0x5079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0381
        gbc.setState(0xcf30, 0x84e7, 0x64a0, 0xab6d, 0xbc33, 0x3329, 0x1, 0x1);
        gbc.writeMem(0xcf30, { 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x84e7, gbc.sp());
        EXPECT(0xcf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcf30));
        // 43 0383
        gbc.setState(0xc49d, 0x8f90, 0x25a0, 0xc472, 0x5441, 0x1c5a, 0x0, 0x1);
        gbc.writeMem(0xc49d, { 0x43 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8f90, gbc.sp());
        EXPECT(0xc49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc49d));
        // 43 0384
        gbc.setState(0x4ba6, 0x636c, 0xaad0, 0x73cc, 0x8d1b, 0xc59f, 0x1, 0x0);
        gbc.writeMem(0x4ba6, { 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x636c, gbc.sp());
        EXPECT(0x4ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0385
        gbc.setState(0xd555, 0x53e7, 0xe060, 0x85a8, 0xfbea, 0x419d, 0x1, 0x1);
        gbc.writeMem(0xd555, { 0x43 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x53e7, gbc.sp());
        EXPECT(0xd556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd555));
        // 43 0386
        gbc.setState(0xa9e2, 0xc665, 0x9c60, 0x8da2, 0xdf52, 0x3610, 0x1, 0x0);
        gbc.writeMem(0xa9e2, { 0x43 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc665, gbc.sp());
        EXPECT(0xa9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa9e2));
        // 43 0387
        gbc.setState(0xa22f, 0xb30, 0x6960, 0x8ebc, 0x6568, 0xe30a, 0x1, 0x0);
        gbc.writeMem(0xa22f, { 0x43 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb30, gbc.sp());
        EXPECT(0xa230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa22f));
        // 43 0388
        gbc.setState(0x40a, 0xcd7d, 0x1cb0, 0xca20, 0x3162, 0xe4c0, 0x1, 0x0);
        gbc.writeMem(0x40a, { 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcd7d, gbc.sp());
        EXPECT(0x40b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0389
        gbc.setState(0x96f7, 0x879c, 0xd030, 0xf6b4, 0xe2e4, 0x4966, 0x1, 0x0);
        gbc.writeMem(0x96f7, { 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x879c, gbc.sp());
        EXPECT(0x96f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x96f7));
        // 43 038A
        gbc.setState(0x82f3, 0x5ed5, 0xf2d0, 0x47ab, 0x5e2a, 0xbe47, 0x1, 0x1);
        gbc.writeMem(0x82f3, { 0x43 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5ed5, gbc.sp());
        EXPECT(0x82f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x82f3));
        // 43 038B
        gbc.setState(0x460b, 0x82fa, 0x20c0, 0x7e24, 0xdfa3, 0xc77c, 0x0, 0x0);
        gbc.writeMem(0x460b, { 0x43 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x82fa, gbc.sp());
        EXPECT(0x460c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 038C
        gbc.setState(0xb028, 0x2ec3, 0xd560, 0x1e25, 0x3fff, 0x4a1b, 0x0, 0x0);
        gbc.writeMem(0xb028, { 0x43 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2ec3, gbc.sp());
        EXPECT(0xb029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb028));
        // 43 038D
        gbc.setState(0x79b0, 0xa075, 0x98f0, 0x5372, 0xb7c1, 0x84e3, 0x0, 0x0);
        gbc.writeMem(0x79b0, { 0x43 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa075, gbc.sp());
        EXPECT(0x79b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 038E
        gbc.setState(0xed4b, 0xe68f, 0xfc30, 0x7e55, 0x5539, 0x6b04, 0x0, 0x1);
        gbc.writeMem(0xed4b, { 0x43 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe68f, gbc.sp());
        EXPECT(0xed4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xed4b));
        // 43 038F
        gbc.setState(0xaff4, 0xe970, 0x95d0, 0xd072, 0x3e75, 0x3916, 0x1, 0x0);
        gbc.writeMem(0xaff4, { 0x43 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe970, gbc.sp());
        EXPECT(0xaff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xaff4));
        // 43 0390
        gbc.setState(0x4ebf, 0xca3d, 0x2b50, 0x994, 0x1845, 0x5826, 0x0, 0x0);
        gbc.writeMem(0x4ebf, { 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xca3d, gbc.sp());
        EXPECT(0x4ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0391
        gbc.setState(0xa19e, 0x2464, 0x9390, 0xf161, 0x49c8, 0x5a88, 0x1, 0x0);
        gbc.writeMem(0xa19e, { 0x43 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2464, gbc.sp());
        EXPECT(0xa19f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa19e));
        // 43 0392
        gbc.setState(0x2ed1, 0x8343, 0x9c0, 0x9c9f, 0x2cea, 0xa4ba, 0x0, 0x0);
        gbc.writeMem(0x2ed1, { 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8343, gbc.sp());
        EXPECT(0x2ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 0393
        gbc.setState(0x1b04, 0x789d, 0xc0f0, 0xfe1b, 0xa508, 0x7e2b, 0x0, 0x1);
        gbc.writeMem(0x1b04, { 0x43 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x789d, gbc.sp());
        EXPECT(0x1b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0394
        gbc.setState(0xa39a, 0x5393, 0x1cc0, 0x6223, 0xdb0b, 0x8a82, 0x1, 0x1);
        gbc.writeMem(0xa39a, { 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5393, gbc.sp());
        EXPECT(0xa39b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa39a));
        // 43 0395
        gbc.setState(0x89e2, 0x6bd, 0x64e0, 0x34d1, 0xdedb, 0x40d3, 0x1, 0x0);
        gbc.writeMem(0x89e2, { 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6bd, gbc.sp());
        EXPECT(0x89e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x89e2));
        // 43 0396
        gbc.setState(0xd8de, 0x527d, 0x4200, 0xb07c, 0x3965, 0x7cb, 0x1, 0x0);
        gbc.writeMem(0xd8de, { 0x43 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x527d, gbc.sp());
        EXPECT(0xd8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd8de));
        // 43 0397
        gbc.setState(0x6a63, 0x8127, 0x7c70, 0x4331, 0xa87d, 0xbd7b, 0x1, 0x0);
        gbc.writeMem(0x6a63, { 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8127, gbc.sp());
        EXPECT(0x6a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 0398
        gbc.setState(0xaed6, 0x89d6, 0xb6f0, 0x5077, 0x1b1f, 0x8f4, 0x1, 0x1);
        gbc.writeMem(0xaed6, { 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x89d6, gbc.sp());
        EXPECT(0xaed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xaed6));
        // 43 0399
        gbc.setState(0xb013, 0x45f, 0x28d0, 0xce85, 0x541b, 0x664c, 0x1, 0x1);
        gbc.writeMem(0xb013, { 0x43 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x45f, gbc.sp());
        EXPECT(0xb014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb013));
        // 43 039B
        gbc.setState(0x10e0, 0xd554, 0xb330, 0xc55, 0x11d5, 0x1071, 0x0, 0x1);
        gbc.writeMem(0x10e0, { 0x43 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd554, gbc.sp());
        EXPECT(0x10e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 039C
        gbc.setState(0x650f, 0xb9a, 0x3d80, 0x60a, 0x6473, 0x29a0, 0x1, 0x0);
        gbc.writeMem(0x650f, { 0x43 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb9a, gbc.sp());
        EXPECT(0x6510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 039D
        gbc.setState(0x35f0, 0x23f7, 0xe940, 0xc6ce, 0x553b, 0x149b, 0x0, 0x1);
        gbc.writeMem(0x35f0, { 0x43 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x23f7, gbc.sp());
        EXPECT(0x35f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 039E
        gbc.setState(0x39f3, 0x594e, 0xce0, 0xde20, 0x9951, 0x5168, 0x1, 0x0);
        gbc.writeMem(0x39f3, { 0x43 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x594e, gbc.sp());
        EXPECT(0x39f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 039F
        gbc.setState(0x7b7d, 0xee31, 0x6710, 0x6ade, 0x5e64, 0x6c2e, 0x1, 0x0);
        gbc.writeMem(0x7b7d, { 0x43 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xee31, gbc.sp());
        EXPECT(0x7b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03A0
        gbc.setState(0x6959, 0x629a, 0x41f0, 0x286e, 0xd39d, 0xe671, 0x0, 0x0);
        gbc.writeMem(0x6959, { 0x43 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x629a, gbc.sp());
        EXPECT(0x695a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03A1
        gbc.setState(0xe69, 0xa09e, 0xf950, 0xd945, 0x7b90, 0xe611, 0x0, 0x1);
        gbc.writeMem(0xe69, { 0x43 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa09e, gbc.sp());
        EXPECT(0xe6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03A2
        gbc.setState(0xe984, 0xc5d5, 0x8fa0, 0xc06c, 0xd862, 0x4068, 0x0, 0x0);
        gbc.writeMem(0xe984, { 0x43 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc5d5, gbc.sp());
        EXPECT(0xe985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe984));
        // 43 03A3
        gbc.setState(0x5033, 0x4850, 0xef0, 0xcd34, 0x7f76, 0xada, 0x0, 0x1);
        gbc.writeMem(0x5033, { 0x43 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4850, gbc.sp());
        EXPECT(0x5034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03A4
        gbc.setState(0x2a9e, 0x30a8, 0xd2a0, 0xfd2e, 0x4f34, 0x663d, 0x0, 0x1);
        gbc.writeMem(0x2a9e, { 0x43 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x30a8, gbc.sp());
        EXPECT(0x2a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03A5
        gbc.setState(0x5972, 0x2f99, 0x6b70, 0xe0a1, 0xf28a, 0xdaf3, 0x1, 0x0);
        gbc.writeMem(0x5972, { 0x43 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2f99, gbc.sp());
        EXPECT(0x5973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03A6
        gbc.setState(0x270e, 0x6252, 0x6e40, 0x2654, 0xb938, 0xd685, 0x0, 0x1);
        gbc.writeMem(0x270e, { 0x43 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6252, gbc.sp());
        EXPECT(0x270f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03A7
        gbc.setState(0x12cc, 0x85f1, 0x2710, 0x8e92, 0xeb02, 0x6b9, 0x0, 0x1);
        gbc.writeMem(0x12cc, { 0x43 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x85f1, gbc.sp());
        EXPECT(0x12cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03A8
        gbc.setState(0x4016, 0x96a2, 0xb050, 0x7409, 0xaea, 0x871, 0x0, 0x1);
        gbc.writeMem(0x4016, { 0x43 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x96a2, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03A9
        gbc.setState(0x160b, 0xe5f2, 0xa140, 0xfdf4, 0xdb40, 0x770, 0x0, 0x1);
        gbc.writeMem(0x160b, { 0x43 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe5f2, gbc.sp());
        EXPECT(0x160c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03AA
        gbc.setState(0xe3d6, 0x5587, 0x9ab0, 0xff74, 0xd47d, 0xb096, 0x0, 0x0);
        gbc.writeMem(0xe3d6, { 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5587, gbc.sp());
        EXPECT(0xe3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe3d6));
        // 43 03AB
        gbc.setState(0xd2a0, 0x8aac, 0x3d70, 0xa774, 0x1b00, 0x809, 0x1, 0x1);
        gbc.writeMem(0xd2a0, { 0x43 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8aac, gbc.sp());
        EXPECT(0xd2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd2a0));
        // 43 03AC
        gbc.setState(0x6422, 0x485a, 0x83c0, 0xf828, 0x2c74, 0x16dc, 0x1, 0x1);
        gbc.writeMem(0x6422, { 0x43 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x485a, gbc.sp());
        EXPECT(0x6423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03AD
        gbc.setState(0x5816, 0x9d02, 0x7b60, 0xf1f9, 0xfe84, 0x9845, 0x0, 0x1);
        gbc.writeMem(0x5816, { 0x43 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9d02, gbc.sp());
        EXPECT(0x5817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03AE
        gbc.setState(0x30ae, 0x5fed, 0xb4b0, 0x57fc, 0x9e7f, 0xa139, 0x1, 0x1);
        gbc.writeMem(0x30ae, { 0x43 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5fed, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03AF
        gbc.setState(0xc1d9, 0x2a1d, 0x8240, 0xe247, 0xbd11, 0x8233, 0x0, 0x0);
        gbc.writeMem(0xc1d9, { 0x43 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2a1d, gbc.sp());
        EXPECT(0xc1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc1d9));
        // 43 03B0
        gbc.setState(0xe2c6, 0xf2b0, 0x3610, 0xe527, 0x807f, 0xe0f4, 0x0, 0x1);
        gbc.writeMem(0xe2c6, { 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf2b0, gbc.sp());
        EXPECT(0xe2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe2c6));
        // 43 03B1
        gbc.setState(0xb1fc, 0xaeca, 0x49d0, 0xada3, 0x7381, 0x186e, 0x0, 0x0);
        gbc.writeMem(0xb1fc, { 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaeca, gbc.sp());
        EXPECT(0xb1fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb1fc));
        // 43 03B2
        gbc.setState(0x84a0, 0x612e, 0x40e0, 0xa260, 0x4151, 0x2b6a, 0x1, 0x0);
        gbc.writeMem(0x84a0, { 0x43 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x612e, gbc.sp());
        EXPECT(0x84a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x84a0));
        // 43 03B3
        gbc.setState(0x2baf, 0x774c, 0xea20, 0x514b, 0xa289, 0xfb41, 0x1, 0x1);
        gbc.writeMem(0x2baf, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x774c, gbc.sp());
        EXPECT(0x2bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03B4
        gbc.setState(0x7b7c, 0x4f63, 0xb8a0, 0x8dab, 0x949d, 0xb36e, 0x1, 0x1);
        gbc.writeMem(0x7b7c, { 0x43 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4f63, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03B5
        gbc.setState(0x2859, 0x801c, 0x9990, 0xb632, 0x62c, 0x9f9, 0x1, 0x1);
        gbc.writeMem(0x2859, { 0x43 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0x285a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03B6
        gbc.setState(0x54a1, 0x4957, 0xf5f0, 0x1718, 0x1e42, 0xb9c4, 0x0, 0x0);
        gbc.writeMem(0x54a1, { 0x43 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4957, gbc.sp());
        EXPECT(0x54a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03B7
        gbc.setState(0x6fdf, 0xfb0d, 0xe650, 0xf18, 0xccc4, 0x6175, 0x1, 0x0);
        gbc.writeMem(0x6fdf, { 0x43 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfb0d, gbc.sp());
        EXPECT(0x6fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03B8
        gbc.setState(0xe9cc, 0x1cca, 0xc380, 0xcccc, 0xf45e, 0x7671, 0x1, 0x1);
        gbc.writeMem(0xe9cc, { 0x43 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1cca, gbc.sp());
        EXPECT(0xe9cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe9cc));
        // 43 03B9
        gbc.setState(0x3e2c, 0xf234, 0x55f0, 0x2807, 0xe345, 0x5420, 0x1, 0x1);
        gbc.writeMem(0x3e2c, { 0x43 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf234, gbc.sp());
        EXPECT(0x3e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03BA
        gbc.setState(0x64eb, 0x2bc8, 0xfb40, 0xb416, 0xd3e0, 0x9886, 0x0, 0x0);
        gbc.writeMem(0x64eb, { 0x43 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2bc8, gbc.sp());
        EXPECT(0x64ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03BB
        gbc.setState(0xb6a7, 0x7156, 0x1330, 0x12ca, 0x1393, 0xe54f, 0x1, 0x0);
        gbc.writeMem(0xb6a7, { 0x43 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7156, gbc.sp());
        EXPECT(0xb6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb6a7));
        // 43 03BC
        gbc.setState(0x3bf, 0x7ba6, 0x17b0, 0x2da4, 0x6a59, 0xed8, 0x1, 0x0);
        gbc.writeMem(0x3bf, { 0x43 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7ba6, gbc.sp());
        EXPECT(0x3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03BD
        gbc.setState(0xa7d3, 0x9923, 0xeae0, 0x989d, 0xbf94, 0x707e, 0x1, 0x1);
        gbc.writeMem(0xa7d3, { 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9923, gbc.sp());
        EXPECT(0xa7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa7d3));
        // 43 03BE
        gbc.setState(0x8a92, 0x6678, 0xe460, 0x95d9, 0xc557, 0x92c4, 0x1, 0x1);
        gbc.writeMem(0x8a92, { 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6678, gbc.sp());
        EXPECT(0x8a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8a92));
        // 43 03BF
        gbc.setState(0x3a11, 0xbe28, 0xb610, 0x697d, 0x75f8, 0x74c8, 0x1, 0x0);
        gbc.writeMem(0x3a11, { 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbe28, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03C1
        gbc.setState(0xee1c, 0x505, 0x2250, 0xc42f, 0x358a, 0xa3c9, 0x1, 0x0);
        gbc.writeMem(0xee1c, { 0x43 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x505, gbc.sp());
        EXPECT(0xee1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xee1c));
        // 43 03C2
        gbc.setState(0x25c2, 0xc38, 0xf6e0, 0x9b54, 0xe403, 0xb074, 0x1, 0x1);
        gbc.writeMem(0x25c2, { 0x43 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc38, gbc.sp());
        EXPECT(0x25c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03C3
        gbc.setState(0x40bc, 0xdfa5, 0x5f10, 0x7642, 0xb6d2, 0x7488, 0x1, 0x0);
        gbc.writeMem(0x40bc, { 0x43 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdfa5, gbc.sp());
        EXPECT(0x40bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03C4
        gbc.setState(0xa59c, 0x6c5d, 0x4b60, 0xc3f5, 0x79bc, 0xf043, 0x1, 0x0);
        gbc.writeMem(0xa59c, { 0x43 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6c5d, gbc.sp());
        EXPECT(0xa59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa59c));
        // 43 03C5
        gbc.setState(0x1769, 0x6160, 0x46e0, 0x30d6, 0xa95b, 0xe77e, 0x1, 0x1);
        gbc.writeMem(0x1769, { 0x43 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6160, gbc.sp());
        EXPECT(0x176a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03C6
        gbc.setState(0xee09, 0x4f2, 0xba00, 0x98c9, 0x9d54, 0x2b6f, 0x0, 0x0);
        gbc.writeMem(0xee09, { 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4f2, gbc.sp());
        EXPECT(0xee0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xee09));
        // 43 03C7
        gbc.setState(0x35f8, 0xc0fd, 0x2a40, 0xafe8, 0x1fff, 0x5609, 0x1, 0x0);
        gbc.writeMem(0x35f8, { 0x43 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc0fd, gbc.sp());
        EXPECT(0x35f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03C8
        gbc.setState(0x74ed, 0x87be, 0x1590, 0x803a, 0xd67, 0x5030, 0x0, 0x0);
        gbc.writeMem(0x74ed, { 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x87be, gbc.sp());
        EXPECT(0x74ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03C9
        gbc.setState(0x5b2, 0x838c, 0x50e0, 0xc1b5, 0xcf5e, 0xc19e, 0x1, 0x1);
        gbc.writeMem(0x5b2, { 0x43 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x838c, gbc.sp());
        EXPECT(0x5b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03CA
        gbc.setState(0xee6e, 0xd0d6, 0x2f0, 0x23a9, 0xb909, 0x8f47, 0x1, 0x1);
        gbc.writeMem(0xee6e, { 0x43 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd0d6, gbc.sp());
        EXPECT(0xee6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xee6e));
        // 43 03CB
        gbc.setState(0x4413, 0x3638, 0x1a30, 0xbfe0, 0x5f91, 0x176, 0x0, 0x1);
        gbc.writeMem(0x4413, { 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3638, gbc.sp());
        EXPECT(0x4414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03CC
        gbc.setState(0xc243, 0x4e5e, 0xf8a0, 0x43b9, 0xaf49, 0x89d, 0x1, 0x0);
        gbc.writeMem(0xc243, { 0x43 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4e5e, gbc.sp());
        EXPECT(0xc244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc243));
        // 43 03CD
        gbc.setState(0x7dcb, 0x6459, 0x8a10, 0x5c87, 0xf65e, 0xeeb3, 0x0, 0x1);
        gbc.writeMem(0x7dcb, { 0x43 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6459, gbc.sp());
        EXPECT(0x7dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03CE
        gbc.setState(0x70ef, 0xaf92, 0xb850, 0xa3ba, 0xc1c0, 0x8dc6, 0x0, 0x0);
        gbc.writeMem(0x70ef, { 0x43 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xaf92, gbc.sp());
        EXPECT(0x70f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03CF
        gbc.setState(0xb041, 0xa1da, 0x4420, 0xab8c, 0x9573, 0x8e7b, 0x1, 0x1);
        gbc.writeMem(0xb041, { 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa1da, gbc.sp());
        EXPECT(0xb042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb041));
        // 43 03D0
        gbc.setState(0x3485, 0x4268, 0xd0a0, 0x88dd, 0xaa4a, 0x75ad, 0x0, 0x0);
        gbc.writeMem(0x3485, { 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4268, gbc.sp());
        EXPECT(0x3486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03D1
        gbc.setState(0x365a, 0x76d5, 0xf4d0, 0x2ef6, 0xb34c, 0xf4d7, 0x1, 0x0);
        gbc.writeMem(0x365a, { 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x76d5, gbc.sp());
        EXPECT(0x365b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03D2
        gbc.setState(0xcc81, 0x6574, 0x300, 0xe94d, 0x9bbf, 0x4f85, 0x0, 0x0);
        gbc.writeMem(0xcc81, { 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6574, gbc.sp());
        EXPECT(0xcc82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcc81));
        // 43 03D3
        gbc.setState(0x1d84, 0x6a67, 0xc090, 0xd240, 0x902d, 0x8776, 0x0, 0x0);
        gbc.writeMem(0x1d84, { 0x43 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6a67, gbc.sp());
        EXPECT(0x1d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03D4
        gbc.setState(0x4773, 0xd33f, 0xdb60, 0xcb8a, 0x8b73, 0x7227, 0x1, 0x0);
        gbc.writeMem(0x4773, { 0x43 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd33f, gbc.sp());
        EXPECT(0x4774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03D6
        gbc.setState(0xce4f, 0xb8a7, 0xdac0, 0x61e2, 0x9d9b, 0x4501, 0x0, 0x1);
        gbc.writeMem(0xce4f, { 0x43 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb8a7, gbc.sp());
        EXPECT(0xce50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xce4f));
        // 43 03D7
        gbc.setState(0x74d5, 0x4cfa, 0x89e0, 0xcb80, 0x48a8, 0xb0c6, 0x0, 0x1);
        gbc.writeMem(0x74d5, { 0x43 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4cfa, gbc.sp());
        EXPECT(0x74d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03D8
        gbc.setState(0x228d, 0xcf13, 0x500, 0x1685, 0xb7fe, 0xfb15, 0x0, 0x0);
        gbc.writeMem(0x228d, { 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcf13, gbc.sp());
        EXPECT(0x228e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03D9
        gbc.setState(0xb891, 0xbc, 0xdda0, 0x2ce, 0xb182, 0x11e, 0x0, 0x0);
        gbc.writeMem(0xb891, { 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbc, gbc.sp());
        EXPECT(0xb892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb891));
        // 43 03DA
        gbc.setState(0xb0df, 0x8d22, 0xe480, 0x8f1e, 0x5bfe, 0x11e, 0x1, 0x0);
        gbc.writeMem(0xb0df, { 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8d22, gbc.sp());
        EXPECT(0xb0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb0df));
        // 43 03DB
        gbc.setState(0x9ca, 0x22f0, 0x6990, 0xe15e, 0xca5b, 0xba65, 0x1, 0x1);
        gbc.writeMem(0x9ca, { 0x43 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x22f0, gbc.sp());
        EXPECT(0x9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03DC
        gbc.setState(0x93d2, 0xf1e, 0x3350, 0xd638, 0x142, 0xf849, 0x1, 0x0);
        gbc.writeMem(0x93d2, { 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf1e, gbc.sp());
        EXPECT(0x93d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x93d2));
        // 43 03DD
        gbc.setState(0x4d43, 0x6648, 0x1ae0, 0xab55, 0xc39d, 0x1e20, 0x1, 0x0);
        gbc.writeMem(0x4d43, { 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6648, gbc.sp());
        EXPECT(0x4d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03DE
        gbc.setState(0x183d, 0xe529, 0x9770, 0x4c2f, 0x9ba2, 0x899a, 0x0, 0x0);
        gbc.writeMem(0x183d, { 0x43 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe529, gbc.sp());
        EXPECT(0x183e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03DF
        gbc.setState(0x9bbb, 0xa485, 0xf100, 0x4f81, 0xc423, 0x681d, 0x1, 0x0);
        gbc.writeMem(0x9bbb, { 0x43 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa485, gbc.sp());
        EXPECT(0x9bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9bbb));
        // 43 03E0
        gbc.setState(0xd0df, 0x6a06, 0xac00, 0x7b5, 0xf0f9, 0xc941, 0x0, 0x0);
        gbc.writeMem(0xd0df, { 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6a06, gbc.sp());
        EXPECT(0xd0e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd0df));
        // 43 03E1
        gbc.setState(0x4db8, 0xe545, 0x1f30, 0x2173, 0x80aa, 0x3018, 0x0, 0x1);
        gbc.writeMem(0x4db8, { 0x43 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe545, gbc.sp());
        EXPECT(0x4db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03E2
        gbc.setState(0x433, 0x2eeb, 0xf90, 0x363f, 0xd015, 0xdb4d, 0x1, 0x0);
        gbc.writeMem(0x433, { 0x43 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2eeb, gbc.sp());
        EXPECT(0x434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03E3
        gbc.setState(0x9461, 0xbd1f, 0x5bd0, 0x93, 0x49d0, 0xb4bb, 0x1, 0x0);
        gbc.writeMem(0x9461, { 0x43 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbd1f, gbc.sp());
        EXPECT(0x9462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9461));
        // 43 03E4
        gbc.setState(0xb58c, 0x4b8, 0x5a40, 0xad10, 0x6035, 0x7ca7, 0x0, 0x1);
        gbc.writeMem(0xb58c, { 0x43 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4b8, gbc.sp());
        EXPECT(0xb58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb58c));
        // 43 03E5
        gbc.setState(0x449b, 0x3167, 0x8cb0, 0x111c, 0xfd32, 0x44f2, 0x0, 0x0);
        gbc.writeMem(0x449b, { 0x43 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3167, gbc.sp());
        EXPECT(0x449c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 43 03E6
        gbc.setState(0x41bd, 0x98cb, 0x2160, 0x9598, 0xe1dc, 0x3e7b, 0x1, 0x0);
        gbc.writeMem(0x41bd, { 0x43 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x98cb, gbc.sp());
        EXPECT(0x41be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 43 03E7
        gbc.setState(0xb3f5, 0xfb0d, 0x7d70, 0x6a00, 0x3bee, 0xc3c7, 0x1, 0x0);
        gbc.writeMem(0xb3f5, { 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfb0d, gbc.sp());
        EXPECT(0xb3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb3f5));
    }
