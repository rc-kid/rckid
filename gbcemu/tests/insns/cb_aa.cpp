#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_aa)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_aa) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB AA 0000
        gbc.setState(0xe22d, 0x2711, 0x1a70, 0xae7e, 0x9d89, 0x2c2c, 0x0, 0x0);
        gbc.writeMem(0xe22d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2711);
        EXPECT(gbc.pc(), 0xe22f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22d), 0xcb);
        EXPECT(gbc.readMem(0xe22e), 0xaa);
        // CB AA 0001
        gbc.setState(0xe3fe, 0x28d1, 0xd120, 0x4e7, 0x4b36, 0xcbe8, 0x1, 0x1);
        gbc.writeMem(0xe3fe, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x28d1);
        EXPECT(gbc.pc(), 0xe400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3fe), 0xcb);
        EXPECT(gbc.readMem(0xe3ff), 0xaa);
        // CB AA 0002
        gbc.setState(0xe31c, 0x1737, 0x6f40, 0x1d0e, 0x752f, 0x4675, 0x0, 0x1);
        gbc.writeMem(0xe31c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1737);
        EXPECT(gbc.pc(), 0xe31e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31c), 0xcb);
        EXPECT(gbc.readMem(0xe31d), 0xaa);
        // CB AA 0003
        gbc.setState(0x4d9, 0xf446, 0x2ed0, 0x5ffa, 0x53cb, 0xa416, 0x0, 0x0);
        gbc.writeMem(0x4d9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf446);
        EXPECT(gbc.pc(), 0x4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0005
        gbc.setState(0x3aa4, 0x43eb, 0xb4e0, 0x15cc, 0x60dd, 0x4852, 0x1, 0x0);
        gbc.writeMem(0x3aa4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x43eb);
        EXPECT(gbc.pc(), 0x3aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0006
        gbc.setState(0x5214, 0x70a, 0x5990, 0xcfe6, 0x3b7f, 0x693e, 0x0, 0x0);
        gbc.writeMem(0x5214, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x70a);
        EXPECT(gbc.pc(), 0x5216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0007
        gbc.setState(0x4c7b, 0x384f, 0xbca0, 0x228c, 0x51ac, 0xb669, 0x0, 0x0);
        gbc.writeMem(0x4c7b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x384f);
        EXPECT(gbc.pc(), 0x4c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0008
        gbc.setState(0x9923, 0xccf1, 0xa220, 0x1dc2, 0x9c65, 0xf1a4, 0x1, 0x1);
        gbc.writeMem(0x9923, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xccf1);
        EXPECT(gbc.pc(), 0x9925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9923), 0xcb);
        EXPECT(gbc.readMem(0x9924), 0xaa);
        // CB AA 0009
        gbc.setState(0x9fe9, 0xad73, 0x87c0, 0x73f1, 0x8d62, 0xcfad, 0x0, 0x1);
        gbc.writeMem(0x9fe9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xad73);
        EXPECT(gbc.pc(), 0x9feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe9), 0xcb);
        EXPECT(gbc.readMem(0x9fea), 0xaa);
        // CB AA 000A
        gbc.setState(0x4f50, 0x415c, 0xe1b0, 0xcb18, 0x353c, 0x16dd, 0x1, 0x1);
        gbc.writeMem(0x4f50, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x415c);
        EXPECT(gbc.pc(), 0x4f52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 000C
        gbc.setState(0x5b10, 0x4a60, 0xca80, 0x5b38, 0xbe76, 0x61c0, 0x1, 0x1);
        gbc.writeMem(0x5b10, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4a60);
        EXPECT(gbc.pc(), 0x5b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 000D
        gbc.setState(0xd421, 0x35fd, 0xf510, 0x3c1b, 0x772f, 0xd5d, 0x1, 0x1);
        gbc.writeMem(0xd421, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x35fd);
        EXPECT(gbc.pc(), 0xd423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd421), 0xcb);
        EXPECT(gbc.readMem(0xd422), 0xaa);
        // CB AA 000E
        gbc.setState(0xc7d9, 0xc765, 0x3840, 0xf4e8, 0x5cab, 0x4d7c, 0x1, 0x0);
        gbc.writeMem(0xc7d9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc765);
        EXPECT(gbc.pc(), 0xc7db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d9), 0xcb);
        EXPECT(gbc.readMem(0xc7da), 0xaa);
        // CB AA 0010
        gbc.setState(0x61e, 0xd7b6, 0xd150, 0x8bff, 0x7ee2, 0x7eed, 0x1, 0x0);
        gbc.writeMem(0x61e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd7b6);
        EXPECT(gbc.pc(), 0x620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0011
        gbc.setState(0x1166, 0xfce5, 0x65b0, 0xee9b, 0x4511, 0x3355, 0x0, 0x0);
        gbc.writeMem(0x1166, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfce5);
        EXPECT(gbc.pc(), 0x1168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0012
        gbc.setState(0x7bac, 0xa2e6, 0x63c0, 0x9fa3, 0xe21f, 0xd89e, 0x0, 0x0);
        gbc.writeMem(0x7bac, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa2e6);
        EXPECT(gbc.pc(), 0x7bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0013
        gbc.setState(0x2b3c, 0xc42e, 0xf1d0, 0x407b, 0xd6c2, 0xea8, 0x0, 0x0);
        gbc.writeMem(0x2b3c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc42e);
        EXPECT(gbc.pc(), 0x2b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0014
        gbc.setState(0xdaa6, 0xbd60, 0x3d60, 0xb584, 0xac6a, 0x3e3e, 0x0, 0x0);
        gbc.writeMem(0xdaa6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbd60);
        EXPECT(gbc.pc(), 0xdaa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa6), 0xcb);
        EXPECT(gbc.readMem(0xdaa7), 0xaa);
        // CB AA 0015
        gbc.setState(0x8084, 0x3803, 0x1c90, 0xebb6, 0xb0b7, 0x64aa, 0x1, 0x1);
        gbc.writeMem(0x8084, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3803);
        EXPECT(gbc.pc(), 0x8086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8084), 0xcb);
        EXPECT(gbc.readMem(0x8085), 0xaa);
        // CB AA 0016
        gbc.setState(0x699d, 0x222, 0x2d40, 0xf57f, 0x6b59, 0x7f1f, 0x1, 0x1);
        gbc.writeMem(0x699d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x222);
        EXPECT(gbc.pc(), 0x699f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0017
        gbc.setState(0xce03, 0xc926, 0x7790, 0xef2a, 0x16aa, 0xda47, 0x1, 0x0);
        gbc.writeMem(0xce03, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc926);
        EXPECT(gbc.pc(), 0xce05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce03), 0xcb);
        EXPECT(gbc.readMem(0xce04), 0xaa);
        // CB AA 0018
        gbc.setState(0x7d93, 0x2ca4, 0xb2c0, 0xb65f, 0xc4f4, 0xb199, 0x1, 0x1);
        gbc.writeMem(0x7d93, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2ca4);
        EXPECT(gbc.pc(), 0x7d95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0019
        gbc.setState(0x1f59, 0xe12f, 0xb870, 0x3d3b, 0x64c1, 0x8a97, 0x1, 0x0);
        gbc.writeMem(0x1f59, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe12f);
        EXPECT(gbc.pc(), 0x1f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 001A
        gbc.setState(0x2b79, 0x867c, 0x5e70, 0xa96b, 0x99c4, 0x9d15, 0x0, 0x0);
        gbc.writeMem(0x2b79, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x867c);
        EXPECT(gbc.pc(), 0x2b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 001B
        gbc.setState(0xb3a4, 0x7f52, 0x8980, 0x95e3, 0x1223, 0x1287, 0x1, 0x1);
        gbc.writeMem(0xb3a4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7f52);
        EXPECT(gbc.pc(), 0xb3a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a4), 0xcb);
        EXPECT(gbc.readMem(0xb3a5), 0xaa);
        // CB AA 001C
        gbc.setState(0xc07b, 0xf1e, 0xc780, 0xf1b7, 0x9a52, 0xb53f, 0x0, 0x0);
        gbc.writeMem(0xc07b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf1e);
        EXPECT(gbc.pc(), 0xc07d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07b), 0xcb);
        EXPECT(gbc.readMem(0xc07c), 0xaa);
        // CB AA 001D
        gbc.setState(0x4559, 0xe8e8, 0xfaa0, 0x169b, 0x3a9a, 0xaaf2, 0x0, 0x0);
        gbc.writeMem(0x4559, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe8e8);
        EXPECT(gbc.pc(), 0x455b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 001E
        gbc.setState(0x8295, 0x7dc6, 0xe0b0, 0xee0, 0x882a, 0xc014, 0x1, 0x1);
        gbc.writeMem(0x8295, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7dc6);
        EXPECT(gbc.pc(), 0x8297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8295), 0xcb);
        EXPECT(gbc.readMem(0x8296), 0xaa);
        // CB AA 001F
        gbc.setState(0x9a40, 0x40a4, 0x51c0, 0x6bcd, 0xfe7e, 0x5db3, 0x0, 0x0);
        gbc.writeMem(0x9a40, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x40a4);
        EXPECT(gbc.pc(), 0x9a42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a40), 0xcb);
        EXPECT(gbc.readMem(0x9a41), 0xaa);
        // CB AA 0021
        gbc.setState(0x1ca9, 0xb5a6, 0xb7e0, 0xecce, 0x44a, 0xb151, 0x1, 0x1);
        gbc.writeMem(0x1ca9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb5a6);
        EXPECT(gbc.pc(), 0x1cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0022
        gbc.setState(0xfd4, 0xea2e, 0x5a30, 0xac12, 0xdc13, 0x29bc, 0x1, 0x0);
        gbc.writeMem(0xfd4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xea2e);
        EXPECT(gbc.pc(), 0xfd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0023
        gbc.setState(0x5257, 0x31e7, 0xa430, 0x87e2, 0x4301, 0x6e65, 0x1, 0x1);
        gbc.writeMem(0x5257, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x31e7);
        EXPECT(gbc.pc(), 0x5259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0024
        gbc.setState(0x92ba, 0x9b82, 0x8190, 0x338e, 0x533b, 0xc1ea, 0x1, 0x1);
        gbc.writeMem(0x92ba, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9b82);
        EXPECT(gbc.pc(), 0x92bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ba), 0xcb);
        EXPECT(gbc.readMem(0x92bb), 0xaa);
        // CB AA 0025
        gbc.setState(0x21c9, 0x6027, 0xb7a0, 0x6fb6, 0xf006, 0x2f75, 0x0, 0x0);
        gbc.writeMem(0x21c9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6027);
        EXPECT(gbc.pc(), 0x21cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0026
        gbc.setState(0xac2a, 0xa5c4, 0x3d90, 0x918e, 0x1370, 0xb8b3, 0x1, 0x1);
        gbc.writeMem(0xac2a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa5c4);
        EXPECT(gbc.pc(), 0xac2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2a), 0xcb);
        EXPECT(gbc.readMem(0xac2b), 0xaa);
        // CB AA 0027
        gbc.setState(0xb509, 0x6c8b, 0x3d10, 0x516b, 0x3ae6, 0x3235, 0x0, 0x0);
        gbc.writeMem(0xb509, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6c8b);
        EXPECT(gbc.pc(), 0xb50b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb509), 0xcb);
        EXPECT(gbc.readMem(0xb50a), 0xaa);
        // CB AA 0028
        gbc.setState(0xa83a, 0x3c3a, 0x4ff0, 0x61a7, 0x5c63, 0x4457, 0x1, 0x1);
        gbc.writeMem(0xa83a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3c3a);
        EXPECT(gbc.pc(), 0xa83c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa83a), 0xcb);
        EXPECT(gbc.readMem(0xa83b), 0xaa);
        // CB AA 0029
        gbc.setState(0x8c9d, 0xe019, 0x59d0, 0xe8ea, 0x4042, 0x2868, 0x1, 0x0);
        gbc.writeMem(0x8c9d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe019);
        EXPECT(gbc.pc(), 0x8c9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c9d), 0xcb);
        EXPECT(gbc.readMem(0x8c9e), 0xaa);
        // CB AA 002A
        gbc.setState(0xda30, 0xfdf4, 0x8c20, 0x9563, 0xd5bd, 0x5e5a, 0x0, 0x0);
        gbc.writeMem(0xda30, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfdf4);
        EXPECT(gbc.pc(), 0xda32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda30), 0xcb);
        EXPECT(gbc.readMem(0xda31), 0xaa);
        // CB AA 002B
        gbc.setState(0x1cc1, 0x863a, 0x2dd0, 0xe780, 0x8df5, 0x53a0, 0x1, 0x0);
        gbc.writeMem(0x1cc1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x863a);
        EXPECT(gbc.pc(), 0x1cc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 002C
        gbc.setState(0x1b09, 0x4eca, 0x6fe0, 0x31f, 0x7913, 0x5256, 0x1, 0x1);
        gbc.writeMem(0x1b09, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4eca);
        EXPECT(gbc.pc(), 0x1b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 002D
        gbc.setState(0x3267, 0x20bc, 0xc1a0, 0x50ef, 0x1a98, 0xbe7b, 0x0, 0x0);
        gbc.writeMem(0x3267, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x20bc);
        EXPECT(gbc.pc(), 0x3269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 002E
        gbc.setState(0x3c43, 0x3883, 0x9670, 0x679a, 0x8742, 0xbded, 0x0, 0x1);
        gbc.writeMem(0x3c43, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3883);
        EXPECT(gbc.pc(), 0x3c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 002F
        gbc.setState(0xc80d, 0x9851, 0xf8b0, 0xa519, 0xaa5a, 0xa3d2, 0x0, 0x0);
        gbc.writeMem(0xc80d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9851);
        EXPECT(gbc.pc(), 0xc80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc80d), 0xcb);
        EXPECT(gbc.readMem(0xc80e), 0xaa);
        // CB AA 0030
        gbc.setState(0x3edc, 0x31c1, 0x71b0, 0x7ab9, 0x6f88, 0x4865, 0x0, 0x0);
        gbc.writeMem(0x3edc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x31c1);
        EXPECT(gbc.pc(), 0x3ede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0031
        gbc.setState(0x58e9, 0xfd36, 0x63c0, 0x70d2, 0x1444, 0x1af8, 0x0, 0x0);
        gbc.writeMem(0x58e9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfd36);
        EXPECT(gbc.pc(), 0x58eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0032
        gbc.setState(0x5e89, 0xdf52, 0x9100, 0x4ec9, 0x28aa, 0xcc9b, 0x0, 0x0);
        gbc.writeMem(0x5e89, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdf52);
        EXPECT(gbc.pc(), 0x5e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0033
        gbc.setState(0x2304, 0x6630, 0x76c0, 0xa527, 0x5d64, 0x2486, 0x0, 0x1);
        gbc.writeMem(0x2304, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6630);
        EXPECT(gbc.pc(), 0x2306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0035
        gbc.setState(0xe6d3, 0xb5f7, 0x2270, 0xc218, 0x29b4, 0x7a2a, 0x0, 0x1);
        gbc.writeMem(0xe6d3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb5f7);
        EXPECT(gbc.pc(), 0xe6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d3), 0xcb);
        EXPECT(gbc.readMem(0xe6d4), 0xaa);
        // CB AA 0036
        gbc.setState(0x8a8f, 0x2493, 0xe200, 0xac5c, 0x54bb, 0x9ff3, 0x0, 0x1);
        gbc.writeMem(0x8a8f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2493);
        EXPECT(gbc.pc(), 0x8a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a8f), 0xcb);
        EXPECT(gbc.readMem(0x8a90), 0xaa);
        // CB AA 0037
        gbc.setState(0x2dfc, 0x7d0c, 0xe300, 0x44a7, 0x2819, 0xb7a0, 0x0, 0x1);
        gbc.writeMem(0x2dfc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7d0c);
        EXPECT(gbc.pc(), 0x2dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0038
        gbc.setState(0x4ad7, 0x820, 0x850, 0x97ec, 0xe9c9, 0xc751, 0x0, 0x1);
        gbc.writeMem(0x4ad7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x820);
        EXPECT(gbc.pc(), 0x4ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0039
        gbc.setState(0x40bf, 0x7bb0, 0x5ab0, 0xb65, 0x5, 0x9072, 0x0, 0x0);
        gbc.writeMem(0x40bf, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7bb0);
        EXPECT(gbc.pc(), 0x40c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 003A
        gbc.setState(0x91fa, 0x7ba5, 0xa4f0, 0xc68c, 0xfc1c, 0x1acf, 0x1, 0x1);
        gbc.writeMem(0x91fa, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7ba5);
        EXPECT(gbc.pc(), 0x91fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91fa), 0xcb);
        EXPECT(gbc.readMem(0x91fb), 0xaa);
        // CB AA 003B
        gbc.setState(0xbf90, 0x9c14, 0xb110, 0xf81b, 0x7248, 0x809a, 0x1, 0x0);
        gbc.writeMem(0xbf90, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9c14);
        EXPECT(gbc.pc(), 0xbf92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf90), 0xcb);
        EXPECT(gbc.readMem(0xbf91), 0xaa);
        // CB AA 003C
        gbc.setState(0x413, 0x68e1, 0x1630, 0xb12c, 0x517f, 0xa95d, 0x1, 0x0);
        gbc.writeMem(0x413, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x68e1);
        EXPECT(gbc.pc(), 0x415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 003D
        gbc.setState(0x85d2, 0x538c, 0x98d0, 0xb243, 0x9b3f, 0xe006, 0x1, 0x0);
        gbc.writeMem(0x85d2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x538c);
        EXPECT(gbc.pc(), 0x85d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d2), 0xcb);
        EXPECT(gbc.readMem(0x85d3), 0xaa);
        // CB AA 003E
        gbc.setState(0xae86, 0x7c64, 0x60, 0x2d01, 0xc1ed, 0x149, 0x0, 0x0);
        gbc.writeMem(0xae86, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7c64);
        EXPECT(gbc.pc(), 0xae88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae86), 0xcb);
        EXPECT(gbc.readMem(0xae87), 0xaa);
        // CB AA 003F
        gbc.setState(0x9c75, 0x2a1f, 0x87b0, 0x51ac, 0x239c, 0x3cf3, 0x1, 0x0);
        gbc.writeMem(0x9c75, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2a1f);
        EXPECT(gbc.pc(), 0x9c77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c75), 0xcb);
        EXPECT(gbc.readMem(0x9c76), 0xaa);
        // CB AA 0040
        gbc.setState(0xb9f, 0x4a23, 0x790, 0x7bb1, 0x6e1e, 0xc94c, 0x1, 0x0);
        gbc.writeMem(0xb9f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4a23);
        EXPECT(gbc.pc(), 0xba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0041
        gbc.setState(0x4e16, 0xf2fd, 0x5600, 0x4c07, 0x43b, 0x561b, 0x0, 0x0);
        gbc.writeMem(0x4e16, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf2fd);
        EXPECT(gbc.pc(), 0x4e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0042
        gbc.setState(0x67a, 0xabd8, 0x9670, 0xbd42, 0xee30, 0x6548, 0x0, 0x1);
        gbc.writeMem(0x67a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xabd8);
        EXPECT(gbc.pc(), 0x67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0043
        gbc.setState(0xee80, 0xba96, 0xc0b0, 0x7c15, 0xf656, 0xe54c, 0x0, 0x1);
        gbc.writeMem(0xee80, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xba96);
        EXPECT(gbc.pc(), 0xee82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee80), 0xcb);
        EXPECT(gbc.readMem(0xee81), 0xaa);
        // CB AA 0044
        gbc.setState(0x5c52, 0x2ef8, 0x6c70, 0xf86b, 0x9f82, 0x2f88, 0x1, 0x0);
        gbc.writeMem(0x5c52, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2ef8);
        EXPECT(gbc.pc(), 0x5c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0045
        gbc.setState(0xa137, 0xdf03, 0xa770, 0xe69a, 0xcbab, 0x7422, 0x0, 0x1);
        gbc.writeMem(0xa137, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xdf03);
        EXPECT(gbc.pc(), 0xa139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa137), 0xcb);
        EXPECT(gbc.readMem(0xa138), 0xaa);
        // CB AA 0046
        gbc.setState(0xb897, 0x766b, 0xfbc0, 0xbbf5, 0xbb9a, 0xfb20, 0x0, 0x0);
        gbc.writeMem(0xb897, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x766b);
        EXPECT(gbc.pc(), 0xb899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb897), 0xcb);
        EXPECT(gbc.readMem(0xb898), 0xaa);
        // CB AA 0047
        gbc.setState(0xe6ca, 0x19e2, 0xa60, 0x2bbb, 0xb19c, 0xeb4e, 0x1, 0x0);
        gbc.writeMem(0xe6ca, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x19e2);
        EXPECT(gbc.pc(), 0xe6cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ca), 0xcb);
        EXPECT(gbc.readMem(0xe6cb), 0xaa);
        // CB AA 0048
        gbc.setState(0xddab, 0xeb09, 0x2010, 0x956a, 0xb674, 0x6492, 0x1, 0x1);
        gbc.writeMem(0xddab, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xeb09);
        EXPECT(gbc.pc(), 0xddad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddab), 0xcb);
        EXPECT(gbc.readMem(0xddac), 0xaa);
        // CB AA 0049
        gbc.setState(0x2690, 0x2f8, 0x34f0, 0x9597, 0x5e50, 0xfb95, 0x1, 0x1);
        gbc.writeMem(0x2690, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2f8);
        EXPECT(gbc.pc(), 0x2692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 004A
        gbc.setState(0x8bbc, 0xfb0c, 0xb840, 0xde91, 0x7e5, 0x8abf, 0x1, 0x1);
        gbc.writeMem(0x8bbc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfb0c);
        EXPECT(gbc.pc(), 0x8bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bbc), 0xcb);
        EXPECT(gbc.readMem(0x8bbd), 0xaa);
        // CB AA 004B
        gbc.setState(0x95e2, 0x9e66, 0x3410, 0xc6d0, 0x81da, 0xd53, 0x1, 0x0);
        gbc.writeMem(0x95e2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9e66);
        EXPECT(gbc.pc(), 0x95e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e2), 0xcb);
        EXPECT(gbc.readMem(0x95e3), 0xaa);
        // CB AA 004C
        gbc.setState(0x5f1f, 0xc1a8, 0x26e0, 0xfe22, 0xc7f5, 0xa57d, 0x0, 0x1);
        gbc.writeMem(0x5f1f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc1a8);
        EXPECT(gbc.pc(), 0x5f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 004D
        gbc.setState(0xa577, 0x494e, 0x80f0, 0x9bef, 0x95a1, 0x5375, 0x0, 0x1);
        gbc.writeMem(0xa577, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x494e);
        EXPECT(gbc.pc(), 0xa579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa577), 0xcb);
        EXPECT(gbc.readMem(0xa578), 0xaa);
        // CB AA 004E
        gbc.setState(0x4625, 0xf315, 0x4f10, 0xccdd, 0xdf9a, 0x317b, 0x0, 0x1);
        gbc.writeMem(0x4625, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf315);
        EXPECT(gbc.pc(), 0x4627);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 004F
        gbc.setState(0x79b9, 0xf4fa, 0x75e0, 0x93d, 0xe979, 0x1a06, 0x1, 0x1);
        gbc.writeMem(0x79b9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf4fa);
        EXPECT(gbc.pc(), 0x79bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0050
        gbc.setState(0xdd39, 0xa946, 0x2710, 0x9ce1, 0xd30, 0xf2de, 0x0, 0x1);
        gbc.writeMem(0xdd39, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa946);
        EXPECT(gbc.pc(), 0xdd3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd39), 0xcb);
        EXPECT(gbc.readMem(0xdd3a), 0xaa);
        // CB AA 0051
        gbc.setState(0xb1f1, 0x548, 0x4dc0, 0x2ea9, 0xa1c6, 0xe99, 0x1, 0x0);
        gbc.writeMem(0xb1f1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x548);
        EXPECT(gbc.pc(), 0xb1f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f1), 0xcb);
        EXPECT(gbc.readMem(0xb1f2), 0xaa);
        // CB AA 0052
        gbc.setState(0x9fe8, 0x75be, 0xcc70, 0x59df, 0xe4de, 0x6a77, 0x0, 0x1);
        gbc.writeMem(0x9fe8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x75be);
        EXPECT(gbc.pc(), 0x9fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe8), 0xcb);
        EXPECT(gbc.readMem(0x9fe9), 0xaa);
        // CB AA 0053
        gbc.setState(0xc774, 0xd15b, 0x7b60, 0x8330, 0x7634, 0x9c7c, 0x1, 0x0);
        gbc.writeMem(0xc774, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd15b);
        EXPECT(gbc.pc(), 0xc776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc774), 0xcb);
        EXPECT(gbc.readMem(0xc775), 0xaa);
        // CB AA 0054
        gbc.setState(0x2f1d, 0xbf7c, 0x9550, 0xb8bf, 0x5672, 0x8ec3, 0x1, 0x1);
        gbc.writeMem(0x2f1d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbf7c);
        EXPECT(gbc.pc(), 0x2f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0055
        gbc.setState(0xc4d9, 0x9cf4, 0x8280, 0xcd42, 0x2e0a, 0xa99d, 0x0, 0x0);
        gbc.writeMem(0xc4d9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9cf4);
        EXPECT(gbc.pc(), 0xc4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d9), 0xcb);
        EXPECT(gbc.readMem(0xc4da), 0xaa);
        // CB AA 0056
        gbc.setState(0x210, 0xde71, 0x82d0, 0x9380, 0x911e, 0x4b71, 0x1, 0x1);
        gbc.writeMem(0x210, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xde71);
        EXPECT(gbc.pc(), 0x212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0057
        gbc.setState(0x215a, 0xa67f, 0xc370, 0xcebe, 0xb5c0, 0x187c, 0x1, 0x1);
        gbc.writeMem(0x215a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa67f);
        EXPECT(gbc.pc(), 0x215c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0058
        gbc.setState(0xcfd6, 0xf363, 0x37e0, 0x7ba2, 0xdff4, 0x8b53, 0x1, 0x0);
        gbc.writeMem(0xcfd6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf363);
        EXPECT(gbc.pc(), 0xcfd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd6), 0xcb);
        EXPECT(gbc.readMem(0xcfd7), 0xaa);
        // CB AA 0059
        gbc.setState(0xe85a, 0x5a52, 0xb010, 0xc345, 0xb96b, 0xcc75, 0x1, 0x1);
        gbc.writeMem(0xe85a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5a52);
        EXPECT(gbc.pc(), 0xe85c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85a), 0xcb);
        EXPECT(gbc.readMem(0xe85b), 0xaa);
        // CB AA 005A
        gbc.setState(0xda3d, 0x97bb, 0x5690, 0xd256, 0x7a2d, 0xd55f, 0x0, 0x0);
        gbc.writeMem(0xda3d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x97bb);
        EXPECT(gbc.pc(), 0xda3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda3d), 0xcb);
        EXPECT(gbc.readMem(0xda3e), 0xaa);
        // CB AA 005B
        gbc.setState(0x54e1, 0x21cb, 0xdfa0, 0x8441, 0x195, 0xe483, 0x0, 0x1);
        gbc.writeMem(0x54e1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x21cb);
        EXPECT(gbc.pc(), 0x54e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 005C
        gbc.setState(0xb7d2, 0x3010, 0xdc30, 0x84e2, 0xaccd, 0x6fbe, 0x0, 0x0);
        gbc.writeMem(0xb7d2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3010);
        EXPECT(gbc.pc(), 0xb7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d2), 0xcb);
        EXPECT(gbc.readMem(0xb7d3), 0xaa);
        // CB AA 005D
        gbc.setState(0x49f, 0xe329, 0xf620, 0x1008, 0xea66, 0x5280, 0x1, 0x0);
        gbc.writeMem(0x49f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe329);
        EXPECT(gbc.pc(), 0x4a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 005E
        gbc.setState(0xc076, 0x457f, 0x6350, 0x6eff, 0x8b85, 0xf24, 0x0, 0x1);
        gbc.writeMem(0xc076, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x457f);
        EXPECT(gbc.pc(), 0xc078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc076), 0xcb);
        EXPECT(gbc.readMem(0xc077), 0xaa);
        // CB AA 005F
        gbc.setState(0xb91b, 0xd9af, 0xc620, 0x4c3e, 0x9859, 0x8c2, 0x1, 0x0);
        gbc.writeMem(0xb91b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd9af);
        EXPECT(gbc.pc(), 0xb91d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb91b), 0xcb);
        EXPECT(gbc.readMem(0xb91c), 0xaa);
        // CB AA 0060
        gbc.setState(0xc044, 0x4d83, 0xb480, 0x4d20, 0x3c46, 0xa842, 0x0, 0x1);
        gbc.writeMem(0xc044, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4d83);
        EXPECT(gbc.pc(), 0xc046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc044), 0xcb);
        EXPECT(gbc.readMem(0xc045), 0xaa);
        // CB AA 0061
        gbc.setState(0x8062, 0x6836, 0xc2d0, 0xfa3b, 0xd010, 0xb741, 0x0, 0x1);
        gbc.writeMem(0x8062, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6836);
        EXPECT(gbc.pc(), 0x8064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8062), 0xcb);
        EXPECT(gbc.readMem(0x8063), 0xaa);
        // CB AA 0063
        gbc.setState(0x14b2, 0xc305, 0x89d0, 0x6012, 0x5f35, 0xf16c, 0x1, 0x0);
        gbc.writeMem(0x14b2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc305);
        EXPECT(gbc.pc(), 0x14b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0064
        gbc.setState(0xcb60, 0xbc5a, 0x4b70, 0x3b0, 0x655e, 0xb6d6, 0x0, 0x0);
        gbc.writeMem(0xcb60, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbc5a);
        EXPECT(gbc.pc(), 0xcb62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb60), 0xcb);
        EXPECT(gbc.readMem(0xcb61), 0xaa);
        // CB AA 0065
        gbc.setState(0x2557, 0xd131, 0x1bd0, 0x2b88, 0x5763, 0xe5f3, 0x1, 0x1);
        gbc.writeMem(0x2557, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd131);
        EXPECT(gbc.pc(), 0x2559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0066
        gbc.setState(0x2857, 0x95be, 0x66c0, 0xa927, 0xbd75, 0xcbc8, 0x1, 0x1);
        gbc.writeMem(0x2857, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x95be);
        EXPECT(gbc.pc(), 0x2859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0067
        gbc.setState(0xa113, 0xc863, 0x2ab0, 0x8b9a, 0xcf9b, 0xdb21, 0x0, 0x1);
        gbc.writeMem(0xa113, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc863);
        EXPECT(gbc.pc(), 0xa115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa113), 0xcb);
        EXPECT(gbc.readMem(0xa114), 0xaa);
        // CB AA 0068
        gbc.setState(0xba6b, 0x3318, 0x5d70, 0x5c9b, 0x1b11, 0xc6f3, 0x1, 0x0);
        gbc.writeMem(0xba6b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3318);
        EXPECT(gbc.pc(), 0xba6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6b), 0xcb);
        EXPECT(gbc.readMem(0xba6c), 0xaa);
        // CB AA 006A
        gbc.setState(0x97a0, 0xdd7d, 0x3d90, 0xd03d, 0x6e0, 0x2db5, 0x1, 0x1);
        gbc.writeMem(0x97a0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdd7d);
        EXPECT(gbc.pc(), 0x97a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a0), 0xcb);
        EXPECT(gbc.readMem(0x97a1), 0xaa);
        // CB AA 006B
        gbc.setState(0x952d, 0xb560, 0xe810, 0x478c, 0x82cc, 0x9cd3, 0x1, 0x1);
        gbc.writeMem(0x952d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb560);
        EXPECT(gbc.pc(), 0x952f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x952d), 0xcb);
        EXPECT(gbc.readMem(0x952e), 0xaa);
        // CB AA 006C
        gbc.setState(0x6fcc, 0x4ac4, 0xc80, 0x7805, 0xd9fa, 0x4e38, 0x1, 0x0);
        gbc.writeMem(0x6fcc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4ac4);
        EXPECT(gbc.pc(), 0x6fce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 006D
        gbc.setState(0x1e87, 0x1066, 0x6440, 0xa272, 0x7b19, 0x1baf, 0x1, 0x0);
        gbc.writeMem(0x1e87, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1066);
        EXPECT(gbc.pc(), 0x1e89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 006E
        gbc.setState(0x633d, 0xdf59, 0x7220, 0x30d5, 0xfb0a, 0x5e1, 0x0, 0x0);
        gbc.writeMem(0x633d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdf59);
        EXPECT(gbc.pc(), 0x633f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 006F
        gbc.setState(0x3364, 0xad13, 0xa680, 0xd52, 0xa2b0, 0x8a23, 0x0, 0x1);
        gbc.writeMem(0x3364, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xad13);
        EXPECT(gbc.pc(), 0x3366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0070
        gbc.setState(0x2880, 0xca17, 0xf1a0, 0x3b9e, 0xdac, 0xfb8b, 0x1, 0x1);
        gbc.writeMem(0x2880, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xca17);
        EXPECT(gbc.pc(), 0x2882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0071
        gbc.setState(0x6a75, 0x999d, 0x2770, 0x9573, 0x7db1, 0x7901, 0x1, 0x0);
        gbc.writeMem(0x6a75, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x999d);
        EXPECT(gbc.pc(), 0x6a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0072
        gbc.setState(0x4920, 0xc2e2, 0xc530, 0xf736, 0x4a37, 0x8e2d, 0x1, 0x0);
        gbc.writeMem(0x4920, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc2e2);
        EXPECT(gbc.pc(), 0x4922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0073
        gbc.setState(0xa0a5, 0x3298, 0x61b0, 0x3cef, 0xf230, 0x321b, 0x1, 0x1);
        gbc.writeMem(0xa0a5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3298);
        EXPECT(gbc.pc(), 0xa0a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a5), 0xcb);
        EXPECT(gbc.readMem(0xa0a6), 0xaa);
        // CB AA 0074
        gbc.setState(0x6487, 0x3c60, 0xa1b0, 0x79c7, 0x3bce, 0x5952, 0x0, 0x1);
        gbc.writeMem(0x6487, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3c60);
        EXPECT(gbc.pc(), 0x6489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0075
        gbc.setState(0x10a0, 0x6eef, 0xe940, 0x6584, 0xbbc6, 0x5445, 0x1, 0x1);
        gbc.writeMem(0x10a0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6eef);
        EXPECT(gbc.pc(), 0x10a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0076
        gbc.setState(0x6c26, 0x6acb, 0xc410, 0xc027, 0xd16d, 0xf109, 0x0, 0x1);
        gbc.writeMem(0x6c26, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6acb);
        EXPECT(gbc.pc(), 0x6c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0077
        gbc.setState(0x677f, 0x1cc5, 0xd030, 0xe53b, 0xe903, 0xd8f9, 0x1, 0x0);
        gbc.writeMem(0x677f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1cc5);
        EXPECT(gbc.pc(), 0x6781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0078
        gbc.setState(0xc1f1, 0x7f9c, 0xea10, 0x5e55, 0x28b9, 0x31c3, 0x0, 0x1);
        gbc.writeMem(0xc1f1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7f9c);
        EXPECT(gbc.pc(), 0xc1f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f1), 0xcb);
        EXPECT(gbc.readMem(0xc1f2), 0xaa);
        // CB AA 0079
        gbc.setState(0x1b4d, 0x4c0d, 0x7b00, 0x8afb, 0x350a, 0x8c1, 0x0, 0x1);
        gbc.writeMem(0x1b4d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4c0d);
        EXPECT(gbc.pc(), 0x1b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 007A
        gbc.setState(0x318c, 0x6073, 0xd470, 0x55d6, 0xd426, 0xe40d, 0x0, 0x1);
        gbc.writeMem(0x318c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6073);
        EXPECT(gbc.pc(), 0x318e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 007B
        gbc.setState(0xea4b, 0xf50, 0xc640, 0xebcf, 0xf3f4, 0x1dc9, 0x0, 0x0);
        gbc.writeMem(0xea4b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf50);
        EXPECT(gbc.pc(), 0xea4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea4b), 0xcb);
        EXPECT(gbc.readMem(0xea4c), 0xaa);
        // CB AA 007C
        gbc.setState(0xc9be, 0x87c9, 0xc630, 0xc955, 0xfec0, 0xe398, 0x0, 0x0);
        gbc.writeMem(0xc9be, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x87c9);
        EXPECT(gbc.pc(), 0xc9c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9be), 0xcb);
        EXPECT(gbc.readMem(0xc9bf), 0xaa);
        // CB AA 007D
        gbc.setState(0x5f49, 0xe239, 0xd870, 0x7bd8, 0xfcb9, 0xeacd, 0x0, 0x1);
        gbc.writeMem(0x5f49, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe239);
        EXPECT(gbc.pc(), 0x5f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 007E
        gbc.setState(0x698b, 0x1554, 0x5fa0, 0x79da, 0x72ca, 0x2485, 0x0, 0x0);
        gbc.writeMem(0x698b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1554);
        EXPECT(gbc.pc(), 0x698d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 007F
        gbc.setState(0x57ab, 0xc4ec, 0x1a00, 0xd3a, 0x8b31, 0x61e7, 0x1, 0x1);
        gbc.writeMem(0x57ab, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc4ec);
        EXPECT(gbc.pc(), 0x57ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0080
        gbc.setState(0x12d4, 0x997, 0x4ef0, 0x2132, 0xc0e4, 0x7e14, 0x0, 0x0);
        gbc.writeMem(0x12d4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x997);
        EXPECT(gbc.pc(), 0x12d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0081
        gbc.setState(0x94de, 0xb994, 0x14a0, 0xc6fe, 0x431b, 0xa6ea, 0x1, 0x0);
        gbc.writeMem(0x94de, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb994);
        EXPECT(gbc.pc(), 0x94e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94de), 0xcb);
        EXPECT(gbc.readMem(0x94df), 0xaa);
        // CB AA 0082
        gbc.setState(0x3c9d, 0x81f5, 0x34c0, 0x584, 0x4cea, 0x2339, 0x1, 0x0);
        gbc.writeMem(0x3c9d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x81f5);
        EXPECT(gbc.pc(), 0x3c9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0083
        gbc.setState(0x4984, 0x81de, 0xeb60, 0x68ff, 0x8377, 0xb54b, 0x1, 0x0);
        gbc.writeMem(0x4984, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x81de);
        EXPECT(gbc.pc(), 0x4986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0084
        gbc.setState(0x7344, 0x69e0, 0x6a70, 0xd4e3, 0x233c, 0x546d, 0x1, 0x1);
        gbc.writeMem(0x7344, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x69e0);
        EXPECT(gbc.pc(), 0x7346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0085
        gbc.setState(0x14d8, 0xfbbc, 0xadc0, 0x916e, 0xd581, 0xca76, 0x1, 0x0);
        gbc.writeMem(0x14d8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfbbc);
        EXPECT(gbc.pc(), 0x14da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0086
        gbc.setState(0xa257, 0x2be, 0x67e0, 0x280b, 0x602b, 0xc1b2, 0x1, 0x0);
        gbc.writeMem(0xa257, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2be);
        EXPECT(gbc.pc(), 0xa259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa257), 0xcb);
        EXPECT(gbc.readMem(0xa258), 0xaa);
        // CB AA 0087
        gbc.setState(0xd5a7, 0xe6e6, 0x4060, 0x97ae, 0x2055, 0x79be, 0x0, 0x0);
        gbc.writeMem(0xd5a7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe6e6);
        EXPECT(gbc.pc(), 0xd5a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5a7), 0xcb);
        EXPECT(gbc.readMem(0xd5a8), 0xaa);
        // CB AA 0088
        gbc.setState(0xc7c0, 0x98f1, 0x8900, 0xe680, 0x38ec, 0x1ad3, 0x1, 0x1);
        gbc.writeMem(0xc7c0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x98f1);
        EXPECT(gbc.pc(), 0xc7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c0), 0xcb);
        EXPECT(gbc.readMem(0xc7c1), 0xaa);
        // CB AA 0089
        gbc.setState(0xd2dd, 0xb2db, 0xe00, 0xb459, 0xb92b, 0xb913, 0x0, 0x0);
        gbc.writeMem(0xd2dd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb2db);
        EXPECT(gbc.pc(), 0xd2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2dd), 0xcb);
        EXPECT(gbc.readMem(0xd2de), 0xaa);
        // CB AA 008A
        gbc.setState(0xa7ca, 0x5655, 0xcf80, 0xb028, 0xd590, 0xc64d, 0x0, 0x0);
        gbc.writeMem(0xa7ca, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5655);
        EXPECT(gbc.pc(), 0xa7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ca), 0xcb);
        EXPECT(gbc.readMem(0xa7cb), 0xaa);
        // CB AA 008B
        gbc.setState(0xeb51, 0x5a1f, 0x9f70, 0x613e, 0x98f1, 0xebfb, 0x1, 0x0);
        gbc.writeMem(0xeb51, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5a1f);
        EXPECT(gbc.pc(), 0xeb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb51), 0xcb);
        EXPECT(gbc.readMem(0xeb52), 0xaa);
        // CB AA 008D
        gbc.setState(0x7861, 0x879c, 0xa170, 0xd14e, 0x5053, 0x1a4b, 0x1, 0x1);
        gbc.writeMem(0x7861, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x879c);
        EXPECT(gbc.pc(), 0x7863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 008E
        gbc.setState(0xa5dc, 0xd615, 0x42c0, 0x39e5, 0xf72, 0x16bd, 0x0, 0x0);
        gbc.writeMem(0xa5dc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd615);
        EXPECT(gbc.pc(), 0xa5de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5dc), 0xcb);
        EXPECT(gbc.readMem(0xa5dd), 0xaa);
        // CB AA 008F
        gbc.setState(0xc9ce, 0xc5e2, 0x1b60, 0xdb09, 0x8778, 0x5fb5, 0x1, 0x1);
        gbc.writeMem(0xc9ce, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc5e2);
        EXPECT(gbc.pc(), 0xc9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ce), 0xcb);
        EXPECT(gbc.readMem(0xc9cf), 0xaa);
        // CB AA 0090
        gbc.setState(0x8072, 0x1354, 0x91b0, 0xca8a, 0xd37, 0x8854, 0x0, 0x1);
        gbc.writeMem(0x8072, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1354);
        EXPECT(gbc.pc(), 0x8074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8072), 0xcb);
        EXPECT(gbc.readMem(0x8073), 0xaa);
        // CB AA 0091
        gbc.setState(0xd905, 0xbceb, 0xafb0, 0x472, 0x1b8f, 0x92c4, 0x0, 0x0);
        gbc.writeMem(0xd905, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbceb);
        EXPECT(gbc.pc(), 0xd907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd905), 0xcb);
        EXPECT(gbc.readMem(0xd906), 0xaa);
        // CB AA 0092
        gbc.setState(0xae07, 0x16f2, 0x5ac0, 0xcb54, 0xdd02, 0x8033, 0x0, 0x1);
        gbc.writeMem(0xae07, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x16f2);
        EXPECT(gbc.pc(), 0xae09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae07), 0xcb);
        EXPECT(gbc.readMem(0xae08), 0xaa);
        // CB AA 0093
        gbc.setState(0x8105, 0xef1a, 0xe340, 0x3b8, 0x81a8, 0x5eb6, 0x1, 0x0);
        gbc.writeMem(0x8105, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xef1a);
        EXPECT(gbc.pc(), 0x8107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8105), 0xcb);
        EXPECT(gbc.readMem(0x8106), 0xaa);
        // CB AA 0094
        gbc.setState(0x42b0, 0x64ed, 0xd770, 0x976a, 0xc8d4, 0x9624, 0x0, 0x1);
        gbc.writeMem(0x42b0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x64ed);
        EXPECT(gbc.pc(), 0x42b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0095
        gbc.setState(0xecb8, 0x8bbd, 0x3b60, 0x9063, 0x11f7, 0xca19, 0x1, 0x1);
        gbc.writeMem(0xecb8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8bbd);
        EXPECT(gbc.pc(), 0xecba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecb8), 0xcb);
        EXPECT(gbc.readMem(0xecb9), 0xaa);
        // CB AA 0096
        gbc.setState(0x1547, 0x13c0, 0xeaf0, 0xd499, 0xe4f6, 0x8e25, 0x0, 0x1);
        gbc.writeMem(0x1547, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x13c0);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0097
        gbc.setState(0x693, 0x6791, 0xa9f0, 0x3947, 0x9ac0, 0x706f, 0x1, 0x1);
        gbc.writeMem(0x693, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6791);
        EXPECT(gbc.pc(), 0x695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0098
        gbc.setState(0x9749, 0x596a, 0x6fe0, 0x4b8b, 0x270c, 0x632b, 0x0, 0x1);
        gbc.writeMem(0x9749, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x596a);
        EXPECT(gbc.pc(), 0x974b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9749), 0xcb);
        EXPECT(gbc.readMem(0x974a), 0xaa);
        // CB AA 009A
        gbc.setState(0xb1dc, 0x37cf, 0xb0f0, 0xe29a, 0xf193, 0x1423, 0x0, 0x0);
        gbc.writeMem(0xb1dc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x37cf);
        EXPECT(gbc.pc(), 0xb1de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1dc), 0xcb);
        EXPECT(gbc.readMem(0xb1dd), 0xaa);
        // CB AA 009B
        gbc.setState(0x506a, 0x8a5a, 0xde90, 0xd083, 0x5db6, 0x2b7, 0x0, 0x1);
        gbc.writeMem(0x506a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8a5a);
        EXPECT(gbc.pc(), 0x506c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 009C
        gbc.setState(0x32ab, 0xba90, 0x3100, 0xa61b, 0xc692, 0xd130, 0x0, 0x0);
        gbc.writeMem(0x32ab, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xba90);
        EXPECT(gbc.pc(), 0x32ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 009D
        gbc.setState(0xd794, 0x3a00, 0x9420, 0xa190, 0x3b0a, 0xab6d, 0x0, 0x0);
        gbc.writeMem(0xd794, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3a00);
        EXPECT(gbc.pc(), 0xd796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd794), 0xcb);
        EXPECT(gbc.readMem(0xd795), 0xaa);
        // CB AA 009E
        gbc.setState(0xddf6, 0xfe00, 0x1ff0, 0xb54, 0x7919, 0xda41, 0x0, 0x0);
        gbc.writeMem(0xddf6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xfe00);
        EXPECT(gbc.pc(), 0xddf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf6), 0xcb);
        EXPECT(gbc.readMem(0xddf7), 0xaa);
        // CB AA 009F
        gbc.setState(0x39e1, 0xbca1, 0x3440, 0xeb2, 0x3268, 0x65af, 0x1, 0x1);
        gbc.writeMem(0x39e1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbca1);
        EXPECT(gbc.pc(), 0x39e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00A0
        gbc.setState(0xecea, 0x52d9, 0x14e0, 0x785, 0x7e91, 0xbb1c, 0x1, 0x1);
        gbc.writeMem(0xecea, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x52d9);
        EXPECT(gbc.pc(), 0xecec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecea), 0xcb);
        EXPECT(gbc.readMem(0xeceb), 0xaa);
        // CB AA 00A1
        gbc.setState(0x72d, 0xc60, 0x4b10, 0x97af, 0x470e, 0x70cc, 0x1, 0x1);
        gbc.writeMem(0x72d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc60);
        EXPECT(gbc.pc(), 0x72f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00A2
        gbc.setState(0x1260, 0xda5c, 0xb5b0, 0xf65d, 0xd4c0, 0x6295, 0x1, 0x1);
        gbc.writeMem(0x1260, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xda5c);
        EXPECT(gbc.pc(), 0x1262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00A3
        gbc.setState(0xecef, 0x587f, 0x6b20, 0x84f3, 0xd2f8, 0x7a89, 0x1, 0x0);
        gbc.writeMem(0xecef, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x587f);
        EXPECT(gbc.pc(), 0xecf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecef), 0xcb);
        EXPECT(gbc.readMem(0xecf0), 0xaa);
        // CB AA 00A4
        gbc.setState(0x19b8, 0xd197, 0xc650, 0x8b90, 0x9b00, 0xce15, 0x1, 0x1);
        gbc.writeMem(0x19b8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd197);
        EXPECT(gbc.pc(), 0x19ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00A5
        gbc.setState(0x1556, 0x739e, 0xdf90, 0x2ed8, 0x744c, 0xecbd, 0x1, 0x1);
        gbc.writeMem(0x1556, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x739e);
        EXPECT(gbc.pc(), 0x1558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00A6
        gbc.setState(0xb504, 0xdbe8, 0x97b0, 0x3e85, 0xf50c, 0x3749, 0x1, 0x0);
        gbc.writeMem(0xb504, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdbe8);
        EXPECT(gbc.pc(), 0xb506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb504), 0xcb);
        EXPECT(gbc.readMem(0xb505), 0xaa);
        // CB AA 00A7
        gbc.setState(0xc98e, 0x39db, 0xae90, 0x37a7, 0xe8cf, 0x2f25, 0x0, 0x1);
        gbc.writeMem(0xc98e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x39db);
        EXPECT(gbc.pc(), 0xc990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98e), 0xcb);
        EXPECT(gbc.readMem(0xc98f), 0xaa);
        // CB AA 00A8
        gbc.setState(0x1f6e, 0xed0a, 0x3400, 0x16a9, 0xc105, 0xe18a, 0x1, 0x0);
        gbc.writeMem(0x1f6e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xed0a);
        EXPECT(gbc.pc(), 0x1f70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00A9
        gbc.setState(0x80f4, 0x82cd, 0x4ad0, 0xecf0, 0xbcc6, 0xe3ab, 0x1, 0x0);
        gbc.writeMem(0x80f4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x82cd);
        EXPECT(gbc.pc(), 0x80f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f4), 0xcb);
        EXPECT(gbc.readMem(0x80f5), 0xaa);
        // CB AA 00AA
        gbc.setState(0xbe8, 0xf34f, 0x4ec0, 0x61f3, 0x54d2, 0xdd18, 0x1, 0x0);
        gbc.writeMem(0xbe8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf34f);
        EXPECT(gbc.pc(), 0xbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00AB
        gbc.setState(0x21a4, 0xe0d5, 0x4b50, 0xc3cb, 0xf4e8, 0x68b8, 0x1, 0x0);
        gbc.writeMem(0x21a4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe0d5);
        EXPECT(gbc.pc(), 0x21a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00AC
        gbc.setState(0xa5e0, 0x6710, 0xe7c0, 0x8d36, 0x787f, 0xbf19, 0x0, 0x1);
        gbc.writeMem(0xa5e0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6710);
        EXPECT(gbc.pc(), 0xa5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e0), 0xcb);
        EXPECT(gbc.readMem(0xa5e1), 0xaa);
        // CB AA 00AD
        gbc.setState(0x6f1e, 0xbe45, 0x6340, 0xb8a9, 0xdc4e, 0x9f01, 0x0, 0x0);
        gbc.writeMem(0x6f1e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbe45);
        EXPECT(gbc.pc(), 0x6f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00AE
        gbc.setState(0x5afb, 0x6075, 0x52f0, 0xd1c5, 0x7612, 0x692b, 0x0, 0x0);
        gbc.writeMem(0x5afb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6075);
        EXPECT(gbc.pc(), 0x5afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00AF
        gbc.setState(0x7d9a, 0xfc26, 0x1ee0, 0xbc26, 0x27b, 0x9359, 0x1, 0x0);
        gbc.writeMem(0x7d9a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfc26);
        EXPECT(gbc.pc(), 0x7d9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00B0
        gbc.setState(0xa9bf, 0x7394, 0x3190, 0x621a, 0x81c5, 0x7e54, 0x0, 0x0);
        gbc.writeMem(0xa9bf, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7394);
        EXPECT(gbc.pc(), 0xa9c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9bf), 0xcb);
        EXPECT(gbc.readMem(0xa9c0), 0xaa);
        // CB AA 00B1
        gbc.setState(0x5c72, 0x1de0, 0x4a0, 0x8707, 0x16d0, 0xcb5e, 0x1, 0x1);
        gbc.writeMem(0x5c72, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1de0);
        EXPECT(gbc.pc(), 0x5c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00B2
        gbc.setState(0x4a47, 0x1013, 0x6310, 0x3b41, 0x3eee, 0x7c74, 0x0, 0x1);
        gbc.writeMem(0x4a47, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1013);
        EXPECT(gbc.pc(), 0x4a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00B3
        gbc.setState(0x69c7, 0x5d92, 0x9d10, 0x74ea, 0x25cd, 0x1095, 0x1, 0x0);
        gbc.writeMem(0x69c7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5d92);
        EXPECT(gbc.pc(), 0x69c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00B4
        gbc.setState(0x659c, 0x37ce, 0x3380, 0x4232, 0x826, 0x30c3, 0x0, 0x1);
        gbc.writeMem(0x659c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x37ce);
        EXPECT(gbc.pc(), 0x659e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00B5
        gbc.setState(0x5799, 0xe71d, 0xbfe0, 0x7c06, 0x920f, 0x40a8, 0x1, 0x1);
        gbc.writeMem(0x5799, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe71d);
        EXPECT(gbc.pc(), 0x579b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00B6
        gbc.setState(0x4445, 0x502f, 0xf050, 0x40db, 0xa6d2, 0x11c4, 0x0, 0x0);
        gbc.writeMem(0x4445, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x502f);
        EXPECT(gbc.pc(), 0x4447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00B7
        gbc.setState(0x60e7, 0xed30, 0x5af0, 0xffe7, 0x6e54, 0xd196, 0x0, 0x1);
        gbc.writeMem(0x60e7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xed30);
        EXPECT(gbc.pc(), 0x60e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00B8
        gbc.setState(0xb42e, 0x881b, 0x6cf0, 0xb9e1, 0xe7fd, 0x6df8, 0x1, 0x0);
        gbc.writeMem(0xb42e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x881b);
        EXPECT(gbc.pc(), 0xb430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42e), 0xcb);
        EXPECT(gbc.readMem(0xb42f), 0xaa);
        // CB AA 00B9
        gbc.setState(0x7441, 0xc929, 0x8960, 0x272c, 0xbbf5, 0x95cf, 0x0, 0x1);
        gbc.writeMem(0x7441, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc929);
        EXPECT(gbc.pc(), 0x7443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00BA
        gbc.setState(0xb386, 0x2a30, 0x80, 0x6f5, 0x8709, 0x50a7, 0x0, 0x1);
        gbc.writeMem(0xb386, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2a30);
        EXPECT(gbc.pc(), 0xb388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb386), 0xcb);
        EXPECT(gbc.readMem(0xb387), 0xaa);
        // CB AA 00BB
        gbc.setState(0x6c92, 0x3bdb, 0x1cf0, 0xb61c, 0x37f3, 0xf432, 0x0, 0x0);
        gbc.writeMem(0x6c92, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3bdb);
        EXPECT(gbc.pc(), 0x6c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00BC
        gbc.setState(0xdbda, 0xcfaa, 0x6610, 0xdd24, 0xac87, 0x72a5, 0x0, 0x0);
        gbc.writeMem(0xdbda, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcfaa);
        EXPECT(gbc.pc(), 0xdbdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbda), 0xcb);
        EXPECT(gbc.readMem(0xdbdb), 0xaa);
        // CB AA 00BD
        gbc.setState(0x17cd, 0x1871, 0xcac0, 0xb4c7, 0x8b5e, 0x650c, 0x1, 0x0);
        gbc.writeMem(0x17cd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1871);
        EXPECT(gbc.pc(), 0x17cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00BE
        gbc.setState(0xef11, 0x58f7, 0xce30, 0xcc05, 0x2b0b, 0x4082, 0x0, 0x0);
        gbc.writeMem(0xef11, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x58f7);
        EXPECT(gbc.pc(), 0xef13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef11), 0xcb);
        EXPECT(gbc.readMem(0xef12), 0xaa);
        // CB AA 00C0
        gbc.setState(0xc6d5, 0xf23f, 0xcca0, 0xeeff, 0x26ad, 0xfd5b, 0x1, 0x1);
        gbc.writeMem(0xc6d5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf23f);
        EXPECT(gbc.pc(), 0xc6d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d5), 0xcb);
        EXPECT(gbc.readMem(0xc6d6), 0xaa);
        // CB AA 00C1
        gbc.setState(0x9057, 0x6eea, 0xcf60, 0x52b9, 0xd3e3, 0x7215, 0x1, 0x0);
        gbc.writeMem(0x9057, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6eea);
        EXPECT(gbc.pc(), 0x9059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9057), 0xcb);
        EXPECT(gbc.readMem(0x9058), 0xaa);
        // CB AA 00C2
        gbc.setState(0x92c9, 0x7c66, 0xe0e0, 0x5367, 0xc35d, 0xc1c0, 0x0, 0x0);
        gbc.writeMem(0x92c9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7c66);
        EXPECT(gbc.pc(), 0x92cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c9), 0xcb);
        EXPECT(gbc.readMem(0x92ca), 0xaa);
        // CB AA 00C3
        gbc.setState(0xc61b, 0x16df, 0xfc00, 0x2893, 0x80ea, 0x277e, 0x1, 0x1);
        gbc.writeMem(0xc61b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x16df);
        EXPECT(gbc.pc(), 0xc61d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc61b), 0xcb);
        EXPECT(gbc.readMem(0xc61c), 0xaa);
        // CB AA 00C4
        gbc.setState(0x2981, 0x650d, 0xf610, 0x270, 0x689d, 0x5c37, 0x0, 0x1);
        gbc.writeMem(0x2981, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x650d);
        EXPECT(gbc.pc(), 0x2983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00C5
        gbc.setState(0x2c47, 0x45c3, 0x4120, 0x9dc6, 0x8e03, 0xe68c, 0x0, 0x1);
        gbc.writeMem(0x2c47, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x45c3);
        EXPECT(gbc.pc(), 0x2c49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00C6
        gbc.setState(0x6ed5, 0xf9e7, 0x9f40, 0xdf5f, 0x6475, 0x58ae, 0x0, 0x0);
        gbc.writeMem(0x6ed5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf9e7);
        EXPECT(gbc.pc(), 0x6ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00C7
        gbc.setState(0x7971, 0x413e, 0x4680, 0x3064, 0x9354, 0x2c2c, 0x0, 0x1);
        gbc.writeMem(0x7971, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x413e);
        EXPECT(gbc.pc(), 0x7973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00C8
        gbc.setState(0xa7d9, 0x175c, 0xc600, 0x163, 0xbb1c, 0xbbc7, 0x0, 0x0);
        gbc.writeMem(0xa7d9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x175c);
        EXPECT(gbc.pc(), 0xa7db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d9), 0xcb);
        EXPECT(gbc.readMem(0xa7da), 0xaa);
        // CB AA 00C9
        gbc.setState(0x1695, 0x992c, 0x1b30, 0xe040, 0xc935, 0xac16, 0x0, 0x0);
        gbc.writeMem(0x1695, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x992c);
        EXPECT(gbc.pc(), 0x1697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00CA
        gbc.setState(0xa7ad, 0xfd92, 0x6030, 0x8175, 0x43f0, 0xf713, 0x1, 0x0);
        gbc.writeMem(0xa7ad, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfd92);
        EXPECT(gbc.pc(), 0xa7af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ad), 0xcb);
        EXPECT(gbc.readMem(0xa7ae), 0xaa);
        // CB AA 00CB
        gbc.setState(0x6d73, 0xfa97, 0xf240, 0x1291, 0xd985, 0x2cac, 0x0, 0x1);
        gbc.writeMem(0x6d73, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfa97);
        EXPECT(gbc.pc(), 0x6d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00CC
        gbc.setState(0xa8c9, 0xbd86, 0xda0, 0x1337, 0x11c0, 0xf468, 0x0, 0x1);
        gbc.writeMem(0xa8c9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbd86);
        EXPECT(gbc.pc(), 0xa8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c9), 0xcb);
        EXPECT(gbc.readMem(0xa8ca), 0xaa);
        // CB AA 00CD
        gbc.setState(0x2a35, 0x453c, 0xc130, 0x2a2, 0x81be, 0xabe7, 0x1, 0x0);
        gbc.writeMem(0x2a35, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x453c);
        EXPECT(gbc.pc(), 0x2a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00CE
        gbc.setState(0xb661, 0x8066, 0x96d0, 0x649f, 0x13b6, 0xe4ff, 0x1, 0x0);
        gbc.writeMem(0xb661, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8066);
        EXPECT(gbc.pc(), 0xb663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb661), 0xcb);
        EXPECT(gbc.readMem(0xb662), 0xaa);
        // CB AA 00CF
        gbc.setState(0x13e0, 0x9bf8, 0xdd10, 0x3b4a, 0x54, 0xecf0, 0x1, 0x0);
        gbc.writeMem(0x13e0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9bf8);
        EXPECT(gbc.pc(), 0x13e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00D0
        gbc.setState(0x4a29, 0x5feb, 0x3b00, 0x7161, 0xbe5, 0x3d20, 0x0, 0x0);
        gbc.writeMem(0x4a29, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5feb);
        EXPECT(gbc.pc(), 0x4a2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00D1
        gbc.setState(0xe55c, 0x9d6f, 0x47b0, 0x78f7, 0x4a80, 0xe9ef, 0x1, 0x1);
        gbc.writeMem(0xe55c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9d6f);
        EXPECT(gbc.pc(), 0xe55e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe55c), 0xcb);
        EXPECT(gbc.readMem(0xe55d), 0xaa);
        // CB AA 00D2
        gbc.setState(0xe93a, 0x37a2, 0xf7d0, 0x419a, 0x388d, 0xb735, 0x0, 0x0);
        gbc.writeMem(0xe93a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x37a2);
        EXPECT(gbc.pc(), 0xe93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93a), 0xcb);
        EXPECT(gbc.readMem(0xe93b), 0xaa);
        // CB AA 00D3
        gbc.setState(0x5dcb, 0xaf97, 0xf940, 0xdaed, 0x9021, 0x549e, 0x1, 0x0);
        gbc.writeMem(0x5dcb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xaf97);
        EXPECT(gbc.pc(), 0x5dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00D4
        gbc.setState(0x9a40, 0x9c79, 0x5190, 0xddb0, 0x17e3, 0x1ced, 0x1, 0x1);
        gbc.writeMem(0x9a40, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9c79);
        EXPECT(gbc.pc(), 0x9a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a40), 0xcb);
        EXPECT(gbc.readMem(0x9a41), 0xaa);
        // CB AA 00D5
        gbc.setState(0x5673, 0xfec, 0x5a10, 0x6b2, 0x1c73, 0xcb42, 0x1, 0x0);
        gbc.writeMem(0x5673, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfec);
        EXPECT(gbc.pc(), 0x5675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00D6
        gbc.setState(0x1f7f, 0x8c38, 0x2900, 0xf20b, 0xce3c, 0xa7ab, 0x1, 0x0);
        gbc.writeMem(0x1f7f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8c38);
        EXPECT(gbc.pc(), 0x1f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00D7
        gbc.setState(0x1da9, 0xfd3e, 0xe0f0, 0x4ae9, 0x5e51, 0xc542, 0x1, 0x0);
        gbc.writeMem(0x1da9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfd3e);
        EXPECT(gbc.pc(), 0x1dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00D8
        gbc.setState(0xc637, 0x1436, 0xa260, 0xe808, 0xaee6, 0xfbb6, 0x0, 0x0);
        gbc.writeMem(0xc637, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1436);
        EXPECT(gbc.pc(), 0xc639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc637), 0xcb);
        EXPECT(gbc.readMem(0xc638), 0xaa);
        // CB AA 00D9
        gbc.setState(0x502f, 0xd303, 0x75c0, 0xfb4d, 0x8e7, 0xac11, 0x0, 0x0);
        gbc.writeMem(0x502f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd303);
        EXPECT(gbc.pc(), 0x5031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00DA
        gbc.setState(0x7978, 0x81b9, 0xf6c0, 0x7185, 0x9ad4, 0xf798, 0x1, 0x1);
        gbc.writeMem(0x7978, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x81b9);
        EXPECT(gbc.pc(), 0x797a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00DB
        gbc.setState(0x5017, 0x61b4, 0xb170, 0x6aa0, 0xd527, 0xcffc, 0x0, 0x1);
        gbc.writeMem(0x5017, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x61b4);
        EXPECT(gbc.pc(), 0x5019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00DC
        gbc.setState(0x8a20, 0x43fe, 0x21d0, 0xa82f, 0xccc4, 0x1428, 0x0, 0x1);
        gbc.writeMem(0x8a20, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x43fe);
        EXPECT(gbc.pc(), 0x8a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a20), 0xcb);
        EXPECT(gbc.readMem(0x8a21), 0xaa);
        // CB AA 00DD
        gbc.setState(0xbf6c, 0x2713, 0xb9d0, 0x4912, 0xf3ba, 0x3bbe, 0x0, 0x1);
        gbc.writeMem(0xbf6c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2713);
        EXPECT(gbc.pc(), 0xbf6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf6c), 0xcb);
        EXPECT(gbc.readMem(0xbf6d), 0xaa);
        // CB AA 00DE
        gbc.setState(0x5404, 0x35a6, 0xc090, 0xc9, 0x549, 0xa24d, 0x1, 0x1);
        gbc.writeMem(0x5404, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x35a6);
        EXPECT(gbc.pc(), 0x5406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00DF
        gbc.setState(0xccbe, 0x8d50, 0x2de0, 0x3a10, 0xf01, 0x79b3, 0x0, 0x0);
        gbc.writeMem(0xccbe, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8d50);
        EXPECT(gbc.pc(), 0xccc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccbe), 0xcb);
        EXPECT(gbc.readMem(0xccbf), 0xaa);
        // CB AA 00E0
        gbc.setState(0x7ab3, 0x9c86, 0x8cb0, 0xd14c, 0xde16, 0x16eb, 0x1, 0x0);
        gbc.writeMem(0x7ab3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9c86);
        EXPECT(gbc.pc(), 0x7ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00E1
        gbc.setState(0x898e, 0x131e, 0x2b60, 0x86d6, 0x1f41, 0xfcb9, 0x0, 0x1);
        gbc.writeMem(0x898e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x131e);
        EXPECT(gbc.pc(), 0x8990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898e), 0xcb);
        EXPECT(gbc.readMem(0x898f), 0xaa);
        // CB AA 00E2
        gbc.setState(0x74da, 0xcb13, 0xeb00, 0xa133, 0x2339, 0xdba0, 0x1, 0x1);
        gbc.writeMem(0x74da, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcb13);
        EXPECT(gbc.pc(), 0x74dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00E3
        gbc.setState(0x1f0d, 0xf2b4, 0x1fb0, 0x5845, 0xd2f9, 0x81a5, 0x0, 0x0);
        gbc.writeMem(0x1f0d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf2b4);
        EXPECT(gbc.pc(), 0x1f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00E4
        gbc.setState(0xacf, 0xbc60, 0xe5a0, 0x2276, 0xe4e0, 0x59e5, 0x1, 0x0);
        gbc.writeMem(0xacf, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbc60);
        EXPECT(gbc.pc(), 0xad1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00E5
        gbc.setState(0x4d3, 0x5644, 0x67e0, 0xc5f, 0xdc1b, 0x4b2, 0x1, 0x0);
        gbc.writeMem(0x4d3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5644);
        EXPECT(gbc.pc(), 0x4d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00E6
        gbc.setState(0x50bb, 0x58c5, 0x8110, 0x99bc, 0xb246, 0xaf0f, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x58c5);
        EXPECT(gbc.pc(), 0x50bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00E7
        gbc.setState(0xa112, 0x36a4, 0x260, 0xd37, 0xb647, 0xe5, 0x0, 0x0);
        gbc.writeMem(0xa112, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x36a4);
        EXPECT(gbc.pc(), 0xa114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa112), 0xcb);
        EXPECT(gbc.readMem(0xa113), 0xaa);
        // CB AA 00E8
        gbc.setState(0x4321, 0x8a1a, 0xaa90, 0x2745, 0xdbb4, 0xf917, 0x0, 0x1);
        gbc.writeMem(0x4321, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8a1a);
        EXPECT(gbc.pc(), 0x4323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00E9
        gbc.setState(0xd0b0, 0xe71e, 0x73c0, 0x8afb, 0xf1b6, 0xa83d, 0x0, 0x1);
        gbc.writeMem(0xd0b0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe71e);
        EXPECT(gbc.pc(), 0xd0b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b0), 0xcb);
        EXPECT(gbc.readMem(0xd0b1), 0xaa);
        // CB AA 00EA
        gbc.setState(0x895d, 0x5e3e, 0x2da0, 0xf8ee, 0x2df9, 0x7a, 0x0, 0x1);
        gbc.writeMem(0x895d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5e3e);
        EXPECT(gbc.pc(), 0x895f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x895d), 0xcb);
        EXPECT(gbc.readMem(0x895e), 0xaa);
        // CB AA 00EB
        gbc.setState(0x20ba, 0xc281, 0x1eb0, 0xf245, 0xedf5, 0x3774, 0x0, 0x0);
        gbc.writeMem(0x20ba, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc281);
        EXPECT(gbc.pc(), 0x20bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00EC
        gbc.setState(0x9e28, 0x2825, 0x90f0, 0xd231, 0x888f, 0xb6d, 0x0, 0x0);
        gbc.writeMem(0x9e28, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2825);
        EXPECT(gbc.pc(), 0x9e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e28), 0xcb);
        EXPECT(gbc.readMem(0x9e29), 0xaa);
        // CB AA 00ED
        gbc.setState(0x264f, 0x7005, 0xf190, 0x770a, 0x4fa8, 0xa5f6, 0x1, 0x1);
        gbc.writeMem(0x264f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7005);
        EXPECT(gbc.pc(), 0x2651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00EE
        gbc.setState(0x5fe3, 0x746d, 0x28e0, 0x7982, 0x3de9, 0x2f51, 0x1, 0x0);
        gbc.writeMem(0x5fe3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x746d);
        EXPECT(gbc.pc(), 0x5fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00EF
        gbc.setState(0x4cdb, 0x4032, 0x1820, 0x1f2f, 0xe966, 0x32ee, 0x0, 0x1);
        gbc.writeMem(0x4cdb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4032);
        EXPECT(gbc.pc(), 0x4cdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00F0
        gbc.setState(0x30ce, 0xa216, 0xd8b0, 0xebc1, 0x28ca, 0x8031, 0x0, 0x1);
        gbc.writeMem(0x30ce, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa216);
        EXPECT(gbc.pc(), 0x30d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00F1
        gbc.setState(0x3874, 0x3637, 0xef90, 0x3653, 0xbf58, 0x5cfa, 0x0, 0x1);
        gbc.writeMem(0x3874, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3637);
        EXPECT(gbc.pc(), 0x3876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00F2
        gbc.setState(0x9a79, 0xcce6, 0x5370, 0x5ab7, 0x5d7b, 0x618b, 0x0, 0x0);
        gbc.writeMem(0x9a79, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcce6);
        EXPECT(gbc.pc(), 0x9a7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a79), 0xcb);
        EXPECT(gbc.readMem(0x9a7a), 0xaa);
        // CB AA 00F3
        gbc.setState(0x2c52, 0x4354, 0xef80, 0x77, 0xaa48, 0x89e4, 0x1, 0x0);
        gbc.writeMem(0x2c52, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4354);
        EXPECT(gbc.pc(), 0x2c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00F4
        gbc.setState(0x87c8, 0xbd61, 0x22a0, 0xbc8d, 0x3e6b, 0x809a, 0x1, 0x1);
        gbc.writeMem(0x87c8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbd61);
        EXPECT(gbc.pc(), 0x87ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c8), 0xcb);
        EXPECT(gbc.readMem(0x87c9), 0xaa);
        // CB AA 00F5
        gbc.setState(0x2be8, 0x93d1, 0x39b0, 0x850d, 0xf98f, 0xa47f, 0x0, 0x1);
        gbc.writeMem(0x2be8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x93d1);
        EXPECT(gbc.pc(), 0x2bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00F6
        gbc.setState(0x8eba, 0xf875, 0x3a80, 0x1834, 0x65a0, 0x837f, 0x1, 0x0);
        gbc.writeMem(0x8eba, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf875);
        EXPECT(gbc.pc(), 0x8ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eba), 0xcb);
        EXPECT(gbc.readMem(0x8ebb), 0xaa);
        // CB AA 00F7
        gbc.setState(0xb46d, 0x5da9, 0xb3c0, 0x935e, 0xc3fa, 0xf477, 0x0, 0x0);
        gbc.writeMem(0xb46d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5da9);
        EXPECT(gbc.pc(), 0xb46f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb46d), 0xcb);
        EXPECT(gbc.readMem(0xb46e), 0xaa);
        // CB AA 00F8
        gbc.setState(0xabb, 0x4231, 0x9c20, 0xb75, 0x8757, 0x8e95, 0x1, 0x0);
        gbc.writeMem(0xabb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4231);
        EXPECT(gbc.pc(), 0xabd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00F9
        gbc.setState(0xee02, 0x4935, 0x8b60, 0xdf44, 0x2783, 0x4b23, 0x1, 0x0);
        gbc.writeMem(0xee02, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4935);
        EXPECT(gbc.pc(), 0xee04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee02), 0xcb);
        EXPECT(gbc.readMem(0xee03), 0xaa);
        // CB AA 00FA
        gbc.setState(0x56c4, 0xab2d, 0x93e0, 0xb336, 0x7bfd, 0xa83c, 0x0, 0x1);
        gbc.writeMem(0x56c4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xab2d);
        EXPECT(gbc.pc(), 0x56c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00FB
        gbc.setState(0x6260, 0xa6df, 0x70e0, 0x8feb, 0x8ec4, 0xd3b3, 0x0, 0x1);
        gbc.writeMem(0x6260, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa6df);
        EXPECT(gbc.pc(), 0x6262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00FC
        gbc.setState(0x312, 0xc063, 0xae70, 0x7d07, 0x922d, 0xf67, 0x0, 0x1);
        gbc.writeMem(0x312, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc063);
        EXPECT(gbc.pc(), 0x314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 00FD
        gbc.setState(0x7356, 0xf5b2, 0x8da0, 0xc752, 0x75a2, 0xdd0f, 0x1, 0x0);
        gbc.writeMem(0x7356, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf5b2);
        EXPECT(gbc.pc(), 0x7358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00FE
        gbc.setState(0x22d7, 0x875b, 0xaaa0, 0xf618, 0xc55e, 0x1db7, 0x0, 0x0);
        gbc.writeMem(0x22d7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x875b);
        EXPECT(gbc.pc(), 0x22d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 00FF
        gbc.setState(0xbfc0, 0x5af6, 0xe800, 0xaf78, 0xbf3a, 0xbc5b, 0x0, 0x0);
        gbc.writeMem(0xbfc0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5af6);
        EXPECT(gbc.pc(), 0xbfc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc0), 0xcb);
        EXPECT(gbc.readMem(0xbfc1), 0xaa);
        // CB AA 0100
        gbc.setState(0x590b, 0xf305, 0x8070, 0x15c7, 0xd2ce, 0x5c23, 0x0, 0x0);
        gbc.writeMem(0x590b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf305);
        EXPECT(gbc.pc(), 0x590d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0101
        gbc.setState(0xedcb, 0x3d81, 0x4d60, 0xfeed, 0xad24, 0xcb0c, 0x0, 0x1);
        gbc.writeMem(0xedcb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3d81);
        EXPECT(gbc.pc(), 0xedcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedcb), 0xcb);
        EXPECT(gbc.readMem(0xedcc), 0xaa);
        // CB AA 0102
        gbc.setState(0x46c9, 0xf1e5, 0xbfe0, 0x3edf, 0xbba4, 0x3867, 0x0, 0x0);
        gbc.writeMem(0x46c9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf1e5);
        EXPECT(gbc.pc(), 0x46cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0103
        gbc.setState(0xc86c, 0x65af, 0xdca0, 0xf5dc, 0x1201, 0xb59, 0x0, 0x0);
        gbc.writeMem(0xc86c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x65af);
        EXPECT(gbc.pc(), 0xc86e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc86c), 0xcb);
        EXPECT(gbc.readMem(0xc86d), 0xaa);
        // CB AA 0104
        gbc.setState(0x522b, 0x69e5, 0xa8e0, 0xfb4d, 0x7baf, 0xb56c, 0x1, 0x0);
        gbc.writeMem(0x522b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x69e5);
        EXPECT(gbc.pc(), 0x522d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0105
        gbc.setState(0xd69b, 0xfab9, 0x9710, 0xdd2b, 0xba83, 0x3c92, 0x0, 0x1);
        gbc.writeMem(0xd69b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfab9);
        EXPECT(gbc.pc(), 0xd69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69b), 0xcb);
        EXPECT(gbc.readMem(0xd69c), 0xaa);
        // CB AA 0107
        gbc.setState(0x82cc, 0x4595, 0xd5e0, 0x4917, 0x9404, 0x9e1b, 0x1, 0x1);
        gbc.writeMem(0x82cc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4595);
        EXPECT(gbc.pc(), 0x82ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82cc), 0xcb);
        EXPECT(gbc.readMem(0x82cd), 0xaa);
        // CB AA 0109
        gbc.setState(0xeb36, 0x2eba, 0x5dc0, 0x4776, 0xc42b, 0xc3e4, 0x0, 0x1);
        gbc.writeMem(0xeb36, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2eba);
        EXPECT(gbc.pc(), 0xeb38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb36), 0xcb);
        EXPECT(gbc.readMem(0xeb37), 0xaa);
        // CB AA 010A
        gbc.setState(0xa435, 0x59fa, 0x8910, 0x10e0, 0xf83a, 0xa314, 0x1, 0x0);
        gbc.writeMem(0xa435, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x59fa);
        EXPECT(gbc.pc(), 0xa437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa435), 0xcb);
        EXPECT(gbc.readMem(0xa436), 0xaa);
        // CB AA 010B
        gbc.setState(0x793c, 0x8f9d, 0xbd0, 0x3e2d, 0xa6bb, 0xa09a, 0x0, 0x1);
        gbc.writeMem(0x793c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8f9d);
        EXPECT(gbc.pc(), 0x793e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 010C
        gbc.setState(0x44f, 0x5395, 0xa060, 0x35d3, 0x566d, 0xaad6, 0x1, 0x0);
        gbc.writeMem(0x44f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5395);
        EXPECT(gbc.pc(), 0x451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 010D
        gbc.setState(0x2b79, 0x3545, 0x9f40, 0x6ba0, 0xc972, 0xd6e9, 0x1, 0x0);
        gbc.writeMem(0x2b79, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3545);
        EXPECT(gbc.pc(), 0x2b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 010E
        gbc.setState(0x3ddd, 0x643a, 0x8610, 0xc686, 0x4496, 0xbd10, 0x0, 0x0);
        gbc.writeMem(0x3ddd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x643a);
        EXPECT(gbc.pc(), 0x3ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 010F
        gbc.setState(0x16b6, 0x6bc9, 0x18d0, 0xc790, 0x4cd7, 0xc307, 0x0, 0x1);
        gbc.writeMem(0x16b6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6bc9);
        EXPECT(gbc.pc(), 0x16b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0110
        gbc.setState(0xd2fa, 0xf21f, 0xe290, 0x3f9, 0x1bb7, 0x928f, 0x0, 0x1);
        gbc.writeMem(0xd2fa, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf21f);
        EXPECT(gbc.pc(), 0xd2fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2fa), 0xcb);
        EXPECT(gbc.readMem(0xd2fb), 0xaa);
        // CB AA 0111
        gbc.setState(0x6050, 0xce6f, 0xa9e0, 0x7912, 0xf502, 0xda33, 0x0, 0x1);
        gbc.writeMem(0x6050, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xce6f);
        EXPECT(gbc.pc(), 0x6052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0112
        gbc.setState(0x65ad, 0x41fa, 0xb100, 0x1256, 0x5b99, 0x2c44, 0x1, 0x0);
        gbc.writeMem(0x65ad, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x41fa);
        EXPECT(gbc.pc(), 0x65af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0113
        gbc.setState(0x65a5, 0x18a2, 0x8ff0, 0x52f, 0x227c, 0x6b93, 0x1, 0x1);
        gbc.writeMem(0x65a5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x18a2);
        EXPECT(gbc.pc(), 0x65a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0115
        gbc.setState(0x6792, 0x6aec, 0x280, 0x6c14, 0x9746, 0xd5f4, 0x0, 0x0);
        gbc.writeMem(0x6792, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6aec);
        EXPECT(gbc.pc(), 0x6794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0116
        gbc.setState(0x45e, 0xd0be, 0x630, 0x74bc, 0xcd83, 0x3e15, 0x1, 0x1);
        gbc.writeMem(0x45e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd0be);
        EXPECT(gbc.pc(), 0x460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0117
        gbc.setState(0x2e0d, 0xd7b6, 0xa1b0, 0xf79f, 0x2960, 0x5583, 0x1, 0x0);
        gbc.writeMem(0x2e0d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd7b6);
        EXPECT(gbc.pc(), 0x2e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0118
        gbc.setState(0x34a3, 0xec4f, 0xdf80, 0xc700, 0xdbaf, 0x1a9f, 0x1, 0x0);
        gbc.writeMem(0x34a3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xec4f);
        EXPECT(gbc.pc(), 0x34a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0119
        gbc.setState(0x9d3e, 0x7887, 0x40f0, 0x7c, 0xaf1e, 0x6466, 0x0, 0x0);
        gbc.writeMem(0x9d3e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7887);
        EXPECT(gbc.pc(), 0x9d40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d3e), 0xcb);
        EXPECT(gbc.readMem(0x9d3f), 0xaa);
        // CB AA 011A
        gbc.setState(0xb5c1, 0x5b45, 0x4780, 0x4735, 0xfc44, 0xd4f5, 0x0, 0x1);
        gbc.writeMem(0xb5c1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5b45);
        EXPECT(gbc.pc(), 0xb5c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c1), 0xcb);
        EXPECT(gbc.readMem(0xb5c2), 0xaa);
        // CB AA 011B
        gbc.setState(0x7561, 0x525c, 0x660, 0x3a73, 0x45f1, 0x49b7, 0x1, 0x0);
        gbc.writeMem(0x7561, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x525c);
        EXPECT(gbc.pc(), 0x7563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 011C
        gbc.setState(0xca68, 0xada1, 0x6030, 0x97c8, 0x7c97, 0xdab0, 0x0, 0x1);
        gbc.writeMem(0xca68, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xada1);
        EXPECT(gbc.pc(), 0xca6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca68), 0xcb);
        EXPECT(gbc.readMem(0xca69), 0xaa);
        // CB AA 011D
        gbc.setState(0xaace, 0xaed2, 0xb150, 0xcc0a, 0x40dd, 0xf288, 0x1, 0x0);
        gbc.writeMem(0xaace, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xaed2);
        EXPECT(gbc.pc(), 0xaad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaace), 0xcb);
        EXPECT(gbc.readMem(0xaacf), 0xaa);
        // CB AA 011E
        gbc.setState(0x7e27, 0x3569, 0xe360, 0xa105, 0x4e91, 0xf5d7, 0x0, 0x0);
        gbc.writeMem(0x7e27, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3569);
        EXPECT(gbc.pc(), 0x7e29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 011F
        gbc.setState(0x50bd, 0x785e, 0x5650, 0x1c54, 0x5cef, 0x943a, 0x0, 0x1);
        gbc.writeMem(0x50bd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x785e);
        EXPECT(gbc.pc(), 0x50bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0120
        gbc.setState(0x8518, 0x1d10, 0x8720, 0xfbec, 0xf5ad, 0x8ae7, 0x0, 0x1);
        gbc.writeMem(0x8518, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1d10);
        EXPECT(gbc.pc(), 0x851a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8518), 0xcb);
        EXPECT(gbc.readMem(0x8519), 0xaa);
        // CB AA 0121
        gbc.setState(0xc9b3, 0xead6, 0xce30, 0x1822, 0x2c00, 0x379d, 0x0, 0x1);
        gbc.writeMem(0xc9b3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xead6);
        EXPECT(gbc.pc(), 0xc9b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b3), 0xcb);
        EXPECT(gbc.readMem(0xc9b4), 0xaa);
        // CB AA 0122
        gbc.setState(0x1d33, 0x8e67, 0x5c70, 0xee30, 0x9191, 0x1e26, 0x0, 0x1);
        gbc.writeMem(0x1d33, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8e67);
        EXPECT(gbc.pc(), 0x1d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0123
        gbc.setState(0xccac, 0xe973, 0x5b80, 0x89be, 0x1060, 0xc317, 0x0, 0x0);
        gbc.writeMem(0xccac, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe973);
        EXPECT(gbc.pc(), 0xccae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccac), 0xcb);
        EXPECT(gbc.readMem(0xccad), 0xaa);
        // CB AA 0124
        gbc.setState(0x1194, 0x75a8, 0xe2b0, 0xecc8, 0xd577, 0x5991, 0x0, 0x1);
        gbc.writeMem(0x1194, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x75a8);
        EXPECT(gbc.pc(), 0x1196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0125
        gbc.setState(0x211a, 0xa9ba, 0xe320, 0x7a22, 0xa08a, 0xf4d5, 0x1, 0x0);
        gbc.writeMem(0x211a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa9ba);
        EXPECT(gbc.pc(), 0x211c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0126
        gbc.setState(0x5c24, 0x2f1e, 0x8b90, 0x3472, 0x7b06, 0xc8dd, 0x1, 0x1);
        gbc.writeMem(0x5c24, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2f1e);
        EXPECT(gbc.pc(), 0x5c26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0127
        gbc.setState(0x1bd5, 0x2863, 0x49c0, 0xe548, 0x9789, 0xa85c, 0x1, 0x1);
        gbc.writeMem(0x1bd5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2863);
        EXPECT(gbc.pc(), 0x1bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0128
        gbc.setState(0x2745, 0x62d8, 0xa8a0, 0x5bb9, 0xc6eb, 0x6119, 0x0, 0x1);
        gbc.writeMem(0x2745, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x62d8);
        EXPECT(gbc.pc(), 0x2747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0129
        gbc.setState(0x8a9d, 0x59b8, 0x8070, 0x4ea8, 0x2a31, 0x6863, 0x0, 0x1);
        gbc.writeMem(0x8a9d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x59b8);
        EXPECT(gbc.pc(), 0x8a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a9d), 0xcb);
        EXPECT(gbc.readMem(0x8a9e), 0xaa);
        // CB AA 012A
        gbc.setState(0xc063, 0xfca4, 0xda20, 0xf9c5, 0xc9aa, 0x31f, 0x1, 0x1);
        gbc.writeMem(0xc063, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfca4);
        EXPECT(gbc.pc(), 0xc065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc063), 0xcb);
        EXPECT(gbc.readMem(0xc064), 0xaa);
        // CB AA 012C
        gbc.setState(0x8a6e, 0x6ab3, 0xda40, 0x97de, 0x8058, 0x9a37, 0x1, 0x1);
        gbc.writeMem(0x8a6e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6ab3);
        EXPECT(gbc.pc(), 0x8a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a6e), 0xcb);
        EXPECT(gbc.readMem(0x8a6f), 0xaa);
        // CB AA 012D
        gbc.setState(0x743a, 0xef74, 0x210, 0x90, 0x922, 0x4d83, 0x0, 0x0);
        gbc.writeMem(0x743a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xef74);
        EXPECT(gbc.pc(), 0x743c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 012E
        gbc.setState(0x28ba, 0xdd3e, 0x2b0, 0xe77f, 0x6440, 0x4423, 0x1, 0x1);
        gbc.writeMem(0x28ba, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdd3e);
        EXPECT(gbc.pc(), 0x28bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 012F
        gbc.setState(0xdb88, 0x2fcf, 0x99b0, 0x7ee8, 0x6b0e, 0x7efb, 0x0, 0x1);
        gbc.writeMem(0xdb88, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2fcf);
        EXPECT(gbc.pc(), 0xdb8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb88), 0xcb);
        EXPECT(gbc.readMem(0xdb89), 0xaa);
        // CB AA 0130
        gbc.setState(0x1d7b, 0x5bd8, 0x5930, 0x8198, 0x8999, 0xb819, 0x1, 0x1);
        gbc.writeMem(0x1d7b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5bd8);
        EXPECT(gbc.pc(), 0x1d7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0131
        gbc.setState(0x68a5, 0xc8e0, 0x9ef0, 0xa824, 0xdcdc, 0xf7d9, 0x0, 0x1);
        gbc.writeMem(0x68a5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc8e0);
        EXPECT(gbc.pc(), 0x68a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0132
        gbc.setState(0xb794, 0x1ff6, 0xca30, 0xb464, 0x2d60, 0x96be, 0x1, 0x0);
        gbc.writeMem(0xb794, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1ff6);
        EXPECT(gbc.pc(), 0xb796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb794), 0xcb);
        EXPECT(gbc.readMem(0xb795), 0xaa);
        // CB AA 0133
        gbc.setState(0x890a, 0x5e3a, 0xfde0, 0x51ff, 0xe290, 0xb32c, 0x0, 0x0);
        gbc.writeMem(0x890a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5e3a);
        EXPECT(gbc.pc(), 0x890c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890a), 0xcb);
        EXPECT(gbc.readMem(0x890b), 0xaa);
        // CB AA 0134
        gbc.setState(0xaa2a, 0x38e6, 0xe6e0, 0x77c3, 0xca5, 0x716, 0x1, 0x1);
        gbc.writeMem(0xaa2a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x38e6);
        EXPECT(gbc.pc(), 0xaa2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa2a), 0xcb);
        EXPECT(gbc.readMem(0xaa2b), 0xaa);
        // CB AA 0135
        gbc.setState(0x7267, 0xfe0d, 0xae40, 0xbecf, 0x489f, 0x49bc, 0x1, 0x0);
        gbc.writeMem(0x7267, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfe0d);
        EXPECT(gbc.pc(), 0x7269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0136
        gbc.setState(0x1699, 0x3b15, 0x270, 0xa5d0, 0x45bf, 0x53df, 0x1, 0x1);
        gbc.writeMem(0x1699, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3b15);
        EXPECT(gbc.pc(), 0x169b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0137
        gbc.setState(0x39a3, 0x1737, 0xb220, 0x756d, 0x655c, 0x8d0c, 0x1, 0x0);
        gbc.writeMem(0x39a3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1737);
        EXPECT(gbc.pc(), 0x39a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0138
        gbc.setState(0xdb56, 0xdc8, 0xba80, 0x3dff, 0x94f3, 0xb617, 0x1, 0x1);
        gbc.writeMem(0xdb56, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdc8);
        EXPECT(gbc.pc(), 0xdb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb56), 0xcb);
        EXPECT(gbc.readMem(0xdb57), 0xaa);
        // CB AA 0139
        gbc.setState(0x989f, 0xa955, 0x9f70, 0xd74, 0xf0f4, 0x3f50, 0x1, 0x1);
        gbc.writeMem(0x989f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa955);
        EXPECT(gbc.pc(), 0x98a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989f), 0xcb);
        EXPECT(gbc.readMem(0x98a0), 0xaa);
        // CB AA 013A
        gbc.setState(0xa29b, 0x6878, 0x6d60, 0xef33, 0xcaae, 0x3d4f, 0x0, 0x1);
        gbc.writeMem(0xa29b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6878);
        EXPECT(gbc.pc(), 0xa29d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29b), 0xcb);
        EXPECT(gbc.readMem(0xa29c), 0xaa);
        // CB AA 013B
        gbc.setState(0x54a8, 0x1100, 0xbf80, 0x816e, 0x5f99, 0x21b2, 0x1, 0x1);
        gbc.writeMem(0x54a8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1100);
        EXPECT(gbc.pc(), 0x54aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 013C
        gbc.setState(0x67b3, 0xe145, 0xd110, 0xfb70, 0x3897, 0xd81f, 0x0, 0x1);
        gbc.writeMem(0x67b3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe145);
        EXPECT(gbc.pc(), 0x67b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 013D
        gbc.setState(0x70b2, 0x2e3d, 0x2aa0, 0x22fb, 0x6c5b, 0xce8b, 0x0, 0x0);
        gbc.writeMem(0x70b2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2e3d);
        EXPECT(gbc.pc(), 0x70b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 013E
        gbc.setState(0xdcae, 0xfd71, 0x940, 0x5586, 0xca65, 0x2386, 0x0, 0x0);
        gbc.writeMem(0xdcae, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xfd71);
        EXPECT(gbc.pc(), 0xdcb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcae), 0xcb);
        EXPECT(gbc.readMem(0xdcaf), 0xaa);
        // CB AA 013F
        gbc.setState(0xb6a0, 0x79f6, 0x6330, 0x8a9c, 0xff55, 0xbf5b, 0x0, 0x0);
        gbc.writeMem(0xb6a0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x79f6);
        EXPECT(gbc.pc(), 0xb6a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a0), 0xcb);
        EXPECT(gbc.readMem(0xb6a1), 0xaa);
        // CB AA 0140
        gbc.setState(0x2c2, 0x27a1, 0x6950, 0xe949, 0x98ff, 0x3b35, 0x0, 0x0);
        gbc.writeMem(0x2c2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x27a1);
        EXPECT(gbc.pc(), 0x2c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0141
        gbc.setState(0x3d98, 0x2bdd, 0xb3d0, 0x84cc, 0xe6d2, 0x3092, 0x1, 0x0);
        gbc.writeMem(0x3d98, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2bdd);
        EXPECT(gbc.pc(), 0x3d9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0142
        gbc.setState(0xb615, 0x30ce, 0x1960, 0x6121, 0xf03a, 0xf06b, 0x0, 0x1);
        gbc.writeMem(0xb615, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x30ce);
        EXPECT(gbc.pc(), 0xb617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb615), 0xcb);
        EXPECT(gbc.readMem(0xb616), 0xaa);
        // CB AA 0143
        gbc.setState(0xd7ba, 0x4d7c, 0xc110, 0x443b, 0x2206, 0xb8fa, 0x0, 0x0);
        gbc.writeMem(0xd7ba, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4d7c);
        EXPECT(gbc.pc(), 0xd7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ba), 0xcb);
        EXPECT(gbc.readMem(0xd7bb), 0xaa);
        // CB AA 0144
        gbc.setState(0xbd25, 0x68d1, 0xf050, 0xfe5d, 0x8f, 0x69e8, 0x1, 0x0);
        gbc.writeMem(0xbd25, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x68d1);
        EXPECT(gbc.pc(), 0xbd27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd25), 0xcb);
        EXPECT(gbc.readMem(0xbd26), 0xaa);
        // CB AA 0147
        gbc.setState(0xc498, 0xe032, 0x3440, 0x2284, 0xe63a, 0x4852, 0x1, 0x0);
        gbc.writeMem(0xc498, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe032);
        EXPECT(gbc.pc(), 0xc49a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc498), 0xcb);
        EXPECT(gbc.readMem(0xc499), 0xaa);
        // CB AA 0148
        gbc.setState(0x3811, 0x2f77, 0x71e0, 0xb568, 0x2909, 0x9857, 0x0, 0x0);
        gbc.writeMem(0x3811, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2f77);
        EXPECT(gbc.pc(), 0x3813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0149
        gbc.setState(0xa413, 0x5098, 0x1dd0, 0x35b, 0x8ecd, 0x60bc, 0x0, 0x1);
        gbc.writeMem(0xa413, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5098);
        EXPECT(gbc.pc(), 0xa415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa413), 0xcb);
        EXPECT(gbc.readMem(0xa414), 0xaa);
        // CB AA 014A
        gbc.setState(0xc739, 0x6ac9, 0x4940, 0x226d, 0x97ba, 0x1172, 0x1, 0x1);
        gbc.writeMem(0xc739, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6ac9);
        EXPECT(gbc.pc(), 0xc73b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc739), 0xcb);
        EXPECT(gbc.readMem(0xc73a), 0xaa);
        // CB AA 014B
        gbc.setState(0xcaf9, 0x2d2b, 0x76e0, 0xd0a0, 0x44bd, 0x3638, 0x0, 0x0);
        gbc.writeMem(0xcaf9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2d2b);
        EXPECT(gbc.pc(), 0xcafb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf9), 0xcb);
        EXPECT(gbc.readMem(0xcafa), 0xaa);
        // CB AA 014C
        gbc.setState(0x8d26, 0x54e4, 0x1340, 0xddf6, 0x6901, 0xa043, 0x0, 0x0);
        gbc.writeMem(0x8d26, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x54e4);
        EXPECT(gbc.pc(), 0x8d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d26), 0xcb);
        EXPECT(gbc.readMem(0x8d27), 0xaa);
        // CB AA 014D
        gbc.setState(0xe845, 0x1d49, 0xb7c0, 0x766a, 0xb3f4, 0x6eea, 0x1, 0x0);
        gbc.writeMem(0xe845, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1d49);
        EXPECT(gbc.pc(), 0xe847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe845), 0xcb);
        EXPECT(gbc.readMem(0xe846), 0xaa);
        // CB AA 014F
        gbc.setState(0x13e9, 0xeed9, 0xa0, 0x42a, 0x4dab, 0x1d1c, 0x0, 0x1);
        gbc.writeMem(0x13e9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xeed9);
        EXPECT(gbc.pc(), 0x13eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0150
        gbc.setState(0x8d52, 0xc259, 0x3e70, 0x8844, 0x6e28, 0x9b5a, 0x0, 0x1);
        gbc.writeMem(0x8d52, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc259);
        EXPECT(gbc.pc(), 0x8d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d52), 0xcb);
        EXPECT(gbc.readMem(0x8d53), 0xaa);
        // CB AA 0151
        gbc.setState(0xdca6, 0x4c2c, 0xf7a0, 0xed8a, 0x3efc, 0x9e6f, 0x0, 0x1);
        gbc.writeMem(0xdca6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4c2c);
        EXPECT(gbc.pc(), 0xdca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca6), 0xcb);
        EXPECT(gbc.readMem(0xdca7), 0xaa);
        // CB AA 0152
        gbc.setState(0xa76c, 0xd849, 0x5d00, 0x81b3, 0xc4e2, 0xb2a9, 0x0, 0x1);
        gbc.writeMem(0xa76c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd849);
        EXPECT(gbc.pc(), 0xa76e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa76c), 0xcb);
        EXPECT(gbc.readMem(0xa76d), 0xaa);
        // CB AA 0153
        gbc.setState(0xd373, 0x6be5, 0x5c00, 0xe86a, 0xc965, 0xb470, 0x0, 0x1);
        gbc.writeMem(0xd373, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6be5);
        EXPECT(gbc.pc(), 0xd375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd373), 0xcb);
        EXPECT(gbc.readMem(0xd374), 0xaa);
        // CB AA 0154
        gbc.setState(0x6d2e, 0xf041, 0x7bd0, 0xa8dc, 0x77d4, 0xe72e, 0x1, 0x1);
        gbc.writeMem(0x6d2e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf041);
        EXPECT(gbc.pc(), 0x6d30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0155
        gbc.setState(0x40a3, 0xf58b, 0xc3c0, 0x233c, 0x64db, 0x6f59, 0x1, 0x1);
        gbc.writeMem(0x40a3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf58b);
        EXPECT(gbc.pc(), 0x40a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0156
        gbc.setState(0x2670, 0xe026, 0x3bb0, 0x6c45, 0x4af9, 0xb05f, 0x0, 0x0);
        gbc.writeMem(0x2670, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe026);
        EXPECT(gbc.pc(), 0x2672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0157
        gbc.setState(0xa79f, 0xf1e6, 0xf3d0, 0x9195, 0x3902, 0xdea1, 0x1, 0x0);
        gbc.writeMem(0xa79f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf1e6);
        EXPECT(gbc.pc(), 0xa7a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79f), 0xcb);
        EXPECT(gbc.readMem(0xa7a0), 0xaa);
        // CB AA 0158
        gbc.setState(0xea70, 0x3e4f, 0x7380, 0xfb7c, 0xb4ea, 0xfcdf, 0x1, 0x1);
        gbc.writeMem(0xea70, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3e4f);
        EXPECT(gbc.pc(), 0xea72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea70), 0xcb);
        EXPECT(gbc.readMem(0xea71), 0xaa);
        // CB AA 0159
        gbc.setState(0x2a70, 0x8004, 0xd400, 0x8850, 0x133b, 0x20d, 0x1, 0x0);
        gbc.writeMem(0x2a70, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8004);
        EXPECT(gbc.pc(), 0x2a72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 015A
        gbc.setState(0x9ca2, 0xc4e7, 0x1400, 0x27b9, 0x2063, 0xbb51, 0x1, 0x1);
        gbc.writeMem(0x9ca2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc4e7);
        EXPECT(gbc.pc(), 0x9ca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca2), 0xcb);
        EXPECT(gbc.readMem(0x9ca3), 0xaa);
        // CB AA 015B
        gbc.setState(0x2248, 0xcfd8, 0x7750, 0x3c00, 0xcc89, 0x6aa4, 0x1, 0x1);
        gbc.writeMem(0x2248, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcfd8);
        EXPECT(gbc.pc(), 0x224a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 015C
        gbc.setState(0x4243, 0x5a4a, 0x5f90, 0x582f, 0x987d, 0x56dc, 0x0, 0x1);
        gbc.writeMem(0x4243, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5a4a);
        EXPECT(gbc.pc(), 0x4245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 015D
        gbc.setState(0x4bc4, 0xaf5d, 0x1d70, 0x78eb, 0xafd1, 0x9eed, 0x1, 0x0);
        gbc.writeMem(0x4bc4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xaf5d);
        EXPECT(gbc.pc(), 0x4bc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 015E
        gbc.setState(0xef4b, 0xd597, 0x4080, 0xf0b0, 0xf1ed, 0x864e, 0x0, 0x1);
        gbc.writeMem(0xef4b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd597);
        EXPECT(gbc.pc(), 0xef4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4b), 0xcb);
        EXPECT(gbc.readMem(0xef4c), 0xaa);
        // CB AA 015F
        gbc.setState(0xab75, 0x5447, 0x2c00, 0xc488, 0x1c81, 0x7bf4, 0x0, 0x0);
        gbc.writeMem(0xab75, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5447);
        EXPECT(gbc.pc(), 0xab77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab75), 0xcb);
        EXPECT(gbc.readMem(0xab76), 0xaa);
        // CB AA 0160
        gbc.setState(0xe381, 0xa0ec, 0x2330, 0x976f, 0xd789, 0xa990, 0x1, 0x1);
        gbc.writeMem(0xe381, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa0ec);
        EXPECT(gbc.pc(), 0xe383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe381), 0xcb);
        EXPECT(gbc.readMem(0xe382), 0xaa);
        // CB AA 0161
        gbc.setState(0x203a, 0x80e8, 0x30c0, 0x5d1b, 0xcc2a, 0x2694, 0x0, 0x0);
        gbc.writeMem(0x203a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x80e8);
        EXPECT(gbc.pc(), 0x203c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0162
        gbc.setState(0xd1ff, 0xdd82, 0xf4d0, 0xa54d, 0x7830, 0xd85c, 0x0, 0x0);
        gbc.writeMem(0xd1ff, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdd82);
        EXPECT(gbc.pc(), 0xd201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ff), 0xcb);
        EXPECT(gbc.readMem(0xd200), 0xaa);
        // CB AA 0163
        gbc.setState(0xd1cc, 0x3c9, 0x6360, 0x6743, 0xbc1, 0x6d4a, 0x1, 0x0);
        gbc.writeMem(0xd1cc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3c9);
        EXPECT(gbc.pc(), 0xd1ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1cc), 0xcb);
        EXPECT(gbc.readMem(0xd1cd), 0xaa);
        // CB AA 0164
        gbc.setState(0xe8d6, 0x4208, 0xd50, 0xa3fa, 0x8dec, 0x66b, 0x1, 0x1);
        gbc.writeMem(0xe8d6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4208);
        EXPECT(gbc.pc(), 0xe8d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8d6), 0xcb);
        EXPECT(gbc.readMem(0xe8d7), 0xaa);
        // CB AA 0165
        gbc.setState(0x587d, 0x785c, 0x9cf0, 0xbfcb, 0x8392, 0x6ee, 0x0, 0x1);
        gbc.writeMem(0x587d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x785c);
        EXPECT(gbc.pc(), 0x587f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0166
        gbc.setState(0x8a85, 0x3326, 0xba80, 0xe2ab, 0xf57b, 0xe239, 0x0, 0x0);
        gbc.writeMem(0x8a85, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3326);
        EXPECT(gbc.pc(), 0x8a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a85), 0xcb);
        EXPECT(gbc.readMem(0x8a86), 0xaa);
        // CB AA 0167
        gbc.setState(0x5aa7, 0xe1c5, 0x5980, 0x82b5, 0x523a, 0x47b8, 0x0, 0x1);
        gbc.writeMem(0x5aa7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe1c5);
        EXPECT(gbc.pc(), 0x5aa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0168
        gbc.setState(0xabd5, 0xd09c, 0x5090, 0xacc6, 0x659b, 0xa92e, 0x0, 0x0);
        gbc.writeMem(0xabd5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd09c);
        EXPECT(gbc.pc(), 0xabd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd5), 0xcb);
        EXPECT(gbc.readMem(0xabd6), 0xaa);
        // CB AA 0169
        gbc.setState(0x8a5a, 0xbd9b, 0x9690, 0x1da7, 0x94d8, 0x31e, 0x1, 0x1);
        gbc.writeMem(0x8a5a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbd9b);
        EXPECT(gbc.pc(), 0x8a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a5a), 0xcb);
        EXPECT(gbc.readMem(0x8a5b), 0xaa);
        // CB AA 016A
        gbc.setState(0x82ff, 0x8646, 0x4aa0, 0xce75, 0x8a43, 0x51a2, 0x0, 0x0);
        gbc.writeMem(0x82ff, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8646);
        EXPECT(gbc.pc(), 0x8301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ff), 0xcb);
        EXPECT(gbc.readMem(0x8300), 0xaa);
        // CB AA 016C
        gbc.setState(0x1472, 0x5c0e, 0xa620, 0x5fba, 0xef8e, 0x84eb, 0x1, 0x0);
        gbc.writeMem(0x1472, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5c0e);
        EXPECT(gbc.pc(), 0x1474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 016D
        gbc.setState(0x8ceb, 0x360, 0xfce0, 0x95a0, 0x8ca7, 0x2243, 0x1, 0x0);
        gbc.writeMem(0x8ceb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x360);
        EXPECT(gbc.pc(), 0x8ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ceb), 0xcb);
        EXPECT(gbc.readMem(0x8cec), 0xaa);
        // CB AA 016E
        gbc.setState(0x63e7, 0xfce9, 0xf6a0, 0x3878, 0x3edc, 0x6664, 0x1, 0x1);
        gbc.writeMem(0x63e7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfce9);
        EXPECT(gbc.pc(), 0x63e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 016F
        gbc.setState(0x6f1f, 0xc23d, 0xe070, 0x15bc, 0xa68d, 0x350c, 0x0, 0x1);
        gbc.writeMem(0x6f1f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc23d);
        EXPECT(gbc.pc(), 0x6f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0170
        gbc.setState(0xa2b9, 0x2264, 0x45f0, 0xbe68, 0x50c, 0xddbb, 0x1, 0x0);
        gbc.writeMem(0xa2b9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2264);
        EXPECT(gbc.pc(), 0xa2bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b9), 0xcb);
        EXPECT(gbc.readMem(0xa2ba), 0xaa);
        // CB AA 0172
        gbc.setState(0x6cc5, 0xe182, 0xefc0, 0x7a46, 0xd231, 0xb72b, 0x0, 0x1);
        gbc.writeMem(0x6cc5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe182);
        EXPECT(gbc.pc(), 0x6cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0173
        gbc.setState(0x78db, 0xa211, 0x7eb0, 0xffe5, 0x2134, 0x1ca1, 0x1, 0x1);
        gbc.writeMem(0x78db, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa211);
        EXPECT(gbc.pc(), 0x78dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0174
        gbc.setState(0x60ee, 0x56b3, 0x9820, 0x63a, 0x58d8, 0xa2fd, 0x0, 0x0);
        gbc.writeMem(0x60ee, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x56b3);
        EXPECT(gbc.pc(), 0x60f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0175
        gbc.setState(0xda33, 0x230e, 0x58a0, 0x8607, 0x545d, 0x73cb, 0x0, 0x0);
        gbc.writeMem(0xda33, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x230e);
        EXPECT(gbc.pc(), 0xda35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda33), 0xcb);
        EXPECT(gbc.readMem(0xda34), 0xaa);
        // CB AA 0176
        gbc.setState(0xc2d4, 0xa429, 0x1790, 0x1a5d, 0x48bc, 0x2204, 0x1, 0x0);
        gbc.writeMem(0xc2d4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa429);
        EXPECT(gbc.pc(), 0xc2d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d4), 0xcb);
        EXPECT(gbc.readMem(0xc2d5), 0xaa);
        // CB AA 0178
        gbc.setState(0xb6a2, 0x928f, 0x32c0, 0x4349, 0x800f, 0xb72a, 0x0, 0x1);
        gbc.writeMem(0xb6a2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x928f);
        EXPECT(gbc.pc(), 0xb6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a2), 0xcb);
        EXPECT(gbc.readMem(0xb6a3), 0xaa);
        // CB AA 0179
        gbc.setState(0xae70, 0x7613, 0x4ed0, 0x3026, 0x3572, 0x4223, 0x0, 0x1);
        gbc.writeMem(0xae70, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7613);
        EXPECT(gbc.pc(), 0xae72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae70), 0xcb);
        EXPECT(gbc.readMem(0xae71), 0xaa);
        // CB AA 017A
        gbc.setState(0x942c, 0xb3d, 0xaf50, 0x40c7, 0x8b8b, 0x7e4b, 0x1, 0x1);
        gbc.writeMem(0x942c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb3d);
        EXPECT(gbc.pc(), 0x942e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x942c), 0xcb);
        EXPECT(gbc.readMem(0x942d), 0xaa);
        // CB AA 017B
        gbc.setState(0x5e82, 0x90c4, 0xf1b0, 0xc9, 0x9450, 0x1ebf, 0x1, 0x1);
        gbc.writeMem(0x5e82, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x90c4);
        EXPECT(gbc.pc(), 0x5e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 017C
        gbc.setState(0x8693, 0xeb84, 0xa7a0, 0x5d66, 0x1c6e, 0x17ed, 0x0, 0x0);
        gbc.writeMem(0x8693, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xeb84);
        EXPECT(gbc.pc(), 0x8695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8693), 0xcb);
        EXPECT(gbc.readMem(0x8694), 0xaa);
        // CB AA 017D
        gbc.setState(0xa8f5, 0x638a, 0xa680, 0x1e53, 0xd6bf, 0x29ff, 0x0, 0x1);
        gbc.writeMem(0xa8f5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x638a);
        EXPECT(gbc.pc(), 0xa8f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f5), 0xcb);
        EXPECT(gbc.readMem(0xa8f6), 0xaa);
        // CB AA 017E
        gbc.setState(0x9d5f, 0x38f7, 0x1c90, 0xe657, 0xeb1e, 0x72d5, 0x1, 0x1);
        gbc.writeMem(0x9d5f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x38f7);
        EXPECT(gbc.pc(), 0x9d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5f), 0xcb);
        EXPECT(gbc.readMem(0x9d60), 0xaa);
        // CB AA 017F
        gbc.setState(0xd5ba, 0x74af, 0x11d0, 0xcf59, 0x52e1, 0xc1b5, 0x0, 0x1);
        gbc.writeMem(0xd5ba, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x74af);
        EXPECT(gbc.pc(), 0xd5bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ba), 0xcb);
        EXPECT(gbc.readMem(0xd5bb), 0xaa);
        // CB AA 0180
        gbc.setState(0x464f, 0xbf74, 0x2bd0, 0xc5cb, 0x9aaf, 0x4b7c, 0x0, 0x1);
        gbc.writeMem(0x464f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbf74);
        EXPECT(gbc.pc(), 0x4651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0181
        gbc.setState(0x96cb, 0x9cd4, 0xaa20, 0x4caf, 0xf007, 0xd2c0, 0x1, 0x1);
        gbc.writeMem(0x96cb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9cd4);
        EXPECT(gbc.pc(), 0x96cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96cb), 0xcb);
        EXPECT(gbc.readMem(0x96cc), 0xaa);
        // CB AA 0182
        gbc.setState(0xadbc, 0xf3f8, 0xe230, 0xe6be, 0x25de, 0xcf0a, 0x0, 0x0);
        gbc.writeMem(0xadbc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf3f8);
        EXPECT(gbc.pc(), 0xadbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadbc), 0xcb);
        EXPECT(gbc.readMem(0xadbd), 0xaa);
        // CB AA 0183
        gbc.setState(0x9c78, 0x3967, 0x5a0, 0x9765, 0x3c90, 0x60aa, 0x0, 0x0);
        gbc.writeMem(0x9c78, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3967);
        EXPECT(gbc.pc(), 0x9c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c78), 0xcb);
        EXPECT(gbc.readMem(0x9c79), 0xaa);
        // CB AA 0185
        gbc.setState(0x5b1e, 0x936c, 0x4ef0, 0xc978, 0xa58b, 0x7de0, 0x0, 0x0);
        gbc.writeMem(0x5b1e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x936c);
        EXPECT(gbc.pc(), 0x5b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0186
        gbc.setState(0x38db, 0xf4ad, 0x49d0, 0xc256, 0xd079, 0xe3a4, 0x0, 0x1);
        gbc.writeMem(0x38db, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf4ad);
        EXPECT(gbc.pc(), 0x38dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0187
        gbc.setState(0xd7b8, 0xcb9a, 0xcd50, 0xa73b, 0x7165, 0x8b14, 0x0, 0x1);
        gbc.writeMem(0xd7b8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcb9a);
        EXPECT(gbc.pc(), 0xd7ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b8), 0xcb);
        EXPECT(gbc.readMem(0xd7b9), 0xaa);
        // CB AA 0188
        gbc.setState(0x7636, 0xd4f9, 0x56c0, 0xfe13, 0xfb7d, 0x2a86, 0x0, 0x0);
        gbc.writeMem(0x7636, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd4f9);
        EXPECT(gbc.pc(), 0x7638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0189
        gbc.setState(0xc5c7, 0x9383, 0x6380, 0x10c0, 0xc8e4, 0x9e26, 0x0, 0x0);
        gbc.writeMem(0xc5c7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9383);
        EXPECT(gbc.pc(), 0xc5c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c7), 0xcb);
        EXPECT(gbc.readMem(0xc5c8), 0xaa);
        // CB AA 018A
        gbc.setState(0xd8d9, 0x3a88, 0xc7c0, 0x7676, 0x6a42, 0x7a8b, 0x0, 0x1);
        gbc.writeMem(0xd8d9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3a88);
        EXPECT(gbc.pc(), 0xd8db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d9), 0xcb);
        EXPECT(gbc.readMem(0xd8da), 0xaa);
        // CB AA 018B
        gbc.setState(0x774, 0xb29d, 0x6f70, 0x1e51, 0xd3ab, 0x6e49, 0x1, 0x0);
        gbc.writeMem(0x774, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb29d);
        EXPECT(gbc.pc(), 0x776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 018C
        gbc.setState(0x99fa, 0x18ad, 0xe860, 0xb76c, 0x3b9e, 0x2103, 0x1, 0x0);
        gbc.writeMem(0x99fa, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x18ad);
        EXPECT(gbc.pc(), 0x99fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99fa), 0xcb);
        EXPECT(gbc.readMem(0x99fb), 0xaa);
        // CB AA 018D
        gbc.setState(0x2705, 0xdb05, 0x3500, 0xfaa3, 0x7508, 0xd4e9, 0x0, 0x1);
        gbc.writeMem(0x2705, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdb05);
        EXPECT(gbc.pc(), 0x2707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 018E
        gbc.setState(0xc189, 0x3331, 0xa820, 0xc426, 0xa7b7, 0x96ef, 0x0, 0x0);
        gbc.writeMem(0xc189, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3331);
        EXPECT(gbc.pc(), 0xc18b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc189), 0xcb);
        EXPECT(gbc.readMem(0xc18a), 0xaa);
        // CB AA 018F
        gbc.setState(0x3e1, 0x9fa8, 0x9b50, 0xcbad, 0x55b3, 0x9557, 0x0, 0x1);
        gbc.writeMem(0x3e1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9fa8);
        EXPECT(gbc.pc(), 0x3e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0190
        gbc.setState(0x1dfb, 0xb0c7, 0xf3b0, 0x1766, 0x2aa3, 0x82ec, 0x1, 0x0);
        gbc.writeMem(0x1dfb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb0c7);
        EXPECT(gbc.pc(), 0x1dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0191
        gbc.setState(0x8a63, 0x6b05, 0xf610, 0xb779, 0xa5e5, 0x6020, 0x0, 0x0);
        gbc.writeMem(0x8a63, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6b05);
        EXPECT(gbc.pc(), 0x8a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a63), 0xcb);
        EXPECT(gbc.readMem(0x8a64), 0xaa);
        // CB AA 0192
        gbc.setState(0xbb06, 0xd3a9, 0x57f0, 0x2e19, 0xdbf9, 0x1b21, 0x0, 0x0);
        gbc.writeMem(0xbb06, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd3a9);
        EXPECT(gbc.pc(), 0xbb08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb06), 0xcb);
        EXPECT(gbc.readMem(0xbb07), 0xaa);
        // CB AA 0194
        gbc.setState(0x3c96, 0x57b2, 0x10d0, 0x7522, 0x262a, 0x84d1, 0x0, 0x0);
        gbc.writeMem(0x3c96, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x57b2);
        EXPECT(gbc.pc(), 0x3c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0195
        gbc.setState(0x990, 0xd0, 0x9930, 0x4cee, 0x56a8, 0xd35a, 0x0, 0x1);
        gbc.writeMem(0x990, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd0);
        EXPECT(gbc.pc(), 0x992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0196
        gbc.setState(0x1a84, 0x1cda, 0xe820, 0xee1b, 0xdbe5, 0x2024, 0x1, 0x0);
        gbc.writeMem(0x1a84, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1cda);
        EXPECT(gbc.pc(), 0x1a86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0198
        gbc.setState(0x818, 0xd613, 0x39a0, 0x7a8f, 0xb983, 0x1222, 0x0, 0x0);
        gbc.writeMem(0x818, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd613);
        EXPECT(gbc.pc(), 0x81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0199
        gbc.setState(0x4c84, 0xfe03, 0xd890, 0x60ba, 0x4ec8, 0x63e, 0x0, 0x1);
        gbc.writeMem(0x4c84, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfe03);
        EXPECT(gbc.pc(), 0x4c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 019A
        gbc.setState(0xbd23, 0xaeb0, 0x57b0, 0x2eb1, 0x1f99, 0xba9, 0x0, 0x0);
        gbc.writeMem(0xbd23, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xaeb0);
        EXPECT(gbc.pc(), 0xbd25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd23), 0xcb);
        EXPECT(gbc.readMem(0xbd24), 0xaa);
        // CB AA 019B
        gbc.setState(0x4be7, 0x5d26, 0x4ad0, 0xf19f, 0xb760, 0xaa42, 0x0, 0x1);
        gbc.writeMem(0x4be7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5d26);
        EXPECT(gbc.pc(), 0x4be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 019C
        gbc.setState(0x19be, 0xdf08, 0x1680, 0x9018, 0x9d5a, 0x59b0, 0x1, 0x0);
        gbc.writeMem(0x19be, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdf08);
        EXPECT(gbc.pc(), 0x19c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 019D
        gbc.setState(0x82b0, 0xd270, 0xd150, 0x5db7, 0xd857, 0xce08, 0x1, 0x1);
        gbc.writeMem(0x82b0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd270);
        EXPECT(gbc.pc(), 0x82b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b0), 0xcb);
        EXPECT(gbc.readMem(0x82b1), 0xaa);
        // CB AA 019E
        gbc.setState(0xcd0f, 0x436a, 0x8850, 0x6615, 0x4dcc, 0x2f8e, 0x0, 0x1);
        gbc.writeMem(0xcd0f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x436a);
        EXPECT(gbc.pc(), 0xcd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd0f), 0xcb);
        EXPECT(gbc.readMem(0xcd10), 0xaa);
        // CB AA 019F
        gbc.setState(0xc02f, 0x1332, 0xe3b0, 0x75be, 0x349, 0x7a9c, 0x1, 0x1);
        gbc.writeMem(0xc02f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1332);
        EXPECT(gbc.pc(), 0xc031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc02f), 0xcb);
        EXPECT(gbc.readMem(0xc030), 0xaa);
        // CB AA 01A0
        gbc.setState(0xa7b1, 0x30c3, 0x3830, 0x1e86, 0xc1bb, 0x8965, 0x1, 0x1);
        gbc.writeMem(0xa7b1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x30c3);
        EXPECT(gbc.pc(), 0xa7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b1), 0xcb);
        EXPECT(gbc.readMem(0xa7b2), 0xaa);
        // CB AA 01A1
        gbc.setState(0x740f, 0x2ce1, 0x9880, 0xa750, 0xfdc9, 0xeed3, 0x1, 0x0);
        gbc.writeMem(0x740f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2ce1);
        EXPECT(gbc.pc(), 0x7411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01A2
        gbc.setState(0x4868, 0xe5c5, 0x8a30, 0xcbfc, 0x3d98, 0x3783, 0x1, 0x1);
        gbc.writeMem(0x4868, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe5c5);
        EXPECT(gbc.pc(), 0x486a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01A3
        gbc.setState(0x6847, 0x2a93, 0xa4b0, 0x5ad3, 0x7450, 0x575c, 0x0, 0x1);
        gbc.writeMem(0x6847, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2a93);
        EXPECT(gbc.pc(), 0x6849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01A4
        gbc.setState(0xdbce, 0xd419, 0x1640, 0x796e, 0x1d62, 0x8f41, 0x0, 0x1);
        gbc.writeMem(0xdbce, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd419);
        EXPECT(gbc.pc(), 0xdbd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbce), 0xcb);
        EXPECT(gbc.readMem(0xdbcf), 0xaa);
        // CB AA 01A5
        gbc.setState(0x40b5, 0xc6fb, 0x5490, 0x5ca6, 0xce01, 0xdc04, 0x1, 0x1);
        gbc.writeMem(0x40b5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc6fb);
        EXPECT(gbc.pc(), 0x40b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01A6
        gbc.setState(0x886c, 0xa6ff, 0x6c40, 0x6fb8, 0x4cb0, 0x5e4e, 0x0, 0x0);
        gbc.writeMem(0x886c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa6ff);
        EXPECT(gbc.pc(), 0x886e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886c), 0xcb);
        EXPECT(gbc.readMem(0x886d), 0xaa);
        // CB AA 01A7
        gbc.setState(0x79fe, 0x8ea2, 0xc410, 0xa713, 0xa9e7, 0x43e1, 0x0, 0x1);
        gbc.writeMem(0x79fe, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8ea2);
        EXPECT(gbc.pc(), 0x7a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01A8
        gbc.setState(0x6c67, 0x1163, 0x7fd0, 0xb22e, 0x7c90, 0xdf1d, 0x1, 0x1);
        gbc.writeMem(0x6c67, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1163);
        EXPECT(gbc.pc(), 0x6c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01A9
        gbc.setState(0xaf15, 0x5b99, 0x6520, 0x8afc, 0xac8c, 0xfc31, 0x0, 0x1);
        gbc.writeMem(0xaf15, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5b99);
        EXPECT(gbc.pc(), 0xaf17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf15), 0xcb);
        EXPECT(gbc.readMem(0xaf16), 0xaa);
        // CB AA 01AA
        gbc.setState(0x1a02, 0x4c8, 0xc800, 0x9699, 0x8636, 0x5aa7, 0x1, 0x0);
        gbc.writeMem(0x1a02, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4c8);
        EXPECT(gbc.pc(), 0x1a04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01AB
        gbc.setState(0xaa1d, 0xbbba, 0xc0f0, 0x9f50, 0xc20c, 0xbf55, 0x1, 0x0);
        gbc.writeMem(0xaa1d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xbbba);
        EXPECT(gbc.pc(), 0xaa1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa1d), 0xcb);
        EXPECT(gbc.readMem(0xaa1e), 0xaa);
        // CB AA 01AC
        gbc.setState(0x325c, 0xba1b, 0xd860, 0xf2b9, 0x9679, 0x9f39, 0x0, 0x0);
        gbc.writeMem(0x325c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xba1b);
        EXPECT(gbc.pc(), 0x325e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01AE
        gbc.setState(0x5c4, 0xfad6, 0x7ad0, 0x88a3, 0x8729, 0x3bf8, 0x1, 0x0);
        gbc.writeMem(0x5c4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfad6);
        EXPECT(gbc.pc(), 0x5c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01AF
        gbc.setState(0x2bf0, 0xc2b7, 0xbfd0, 0xb387, 0x66b9, 0x561f, 0x0, 0x0);
        gbc.writeMem(0x2bf0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc2b7);
        EXPECT(gbc.pc(), 0x2bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01B0
        gbc.setState(0xb479, 0xa8ab, 0x63f0, 0x1d45, 0x3952, 0x3a9c, 0x0, 0x0);
        gbc.writeMem(0xb479, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa8ab);
        EXPECT(gbc.pc(), 0xb47b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb479), 0xcb);
        EXPECT(gbc.readMem(0xb47a), 0xaa);
        // CB AA 01B1
        gbc.setState(0xc09a, 0x93fb, 0xecd0, 0x8394, 0xad54, 0x740, 0x1, 0x1);
        gbc.writeMem(0xc09a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x93fb);
        EXPECT(gbc.pc(), 0xc09c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc09a), 0xcb);
        EXPECT(gbc.readMem(0xc09b), 0xaa);
        // CB AA 01B2
        gbc.setState(0xefac, 0x12ff, 0x29a0, 0x6b3a, 0x142e, 0xaca5, 0x1, 0x1);
        gbc.writeMem(0xefac, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x12ff);
        EXPECT(gbc.pc(), 0xefae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefac), 0xcb);
        EXPECT(gbc.readMem(0xefad), 0xaa);
        // CB AA 01B3
        gbc.setState(0x7a98, 0xc623, 0x4800, 0xda5, 0xd6dd, 0x61a, 0x1, 0x1);
        gbc.writeMem(0x7a98, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc623);
        EXPECT(gbc.pc(), 0x7a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01B4
        gbc.setState(0x194b, 0x727b, 0xdee0, 0x278b, 0x43a1, 0x17f0, 0x0, 0x0);
        gbc.writeMem(0x194b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x727b);
        EXPECT(gbc.pc(), 0x194d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01B5
        gbc.setState(0x2796, 0x5cd5, 0x4c10, 0x5bea, 0xc160, 0x56da, 0x0, 0x1);
        gbc.writeMem(0x2796, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5cd5);
        EXPECT(gbc.pc(), 0x2798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01B6
        gbc.setState(0x64d2, 0xcac9, 0xde60, 0xb3d3, 0xd706, 0x22ca, 0x1, 0x0);
        gbc.writeMem(0x64d2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcac9);
        EXPECT(gbc.pc(), 0x64d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01B7
        gbc.setState(0x52fd, 0xf041, 0x5600, 0x6184, 0x9dc2, 0x25af, 0x1, 0x0);
        gbc.writeMem(0x52fd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf041);
        EXPECT(gbc.pc(), 0x52ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01B8
        gbc.setState(0xc3d3, 0xdc40, 0x18b0, 0xb116, 0xc4c8, 0xfce5, 0x0, 0x1);
        gbc.writeMem(0xc3d3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xdc40);
        EXPECT(gbc.pc(), 0xc3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d3), 0xcb);
        EXPECT(gbc.readMem(0xc3d4), 0xaa);
        // CB AA 01B9
        gbc.setState(0xd7d6, 0xb034, 0x4ed0, 0x783d, 0x52f7, 0xb9bb, 0x1, 0x0);
        gbc.writeMem(0xd7d6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb034);
        EXPECT(gbc.pc(), 0xd7d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d6), 0xcb);
        EXPECT(gbc.readMem(0xd7d7), 0xaa);
        // CB AA 01BB
        gbc.setState(0x94b3, 0x584b, 0x3160, 0xb15d, 0xe9be, 0x1988, 0x1, 0x1);
        gbc.writeMem(0x94b3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x584b);
        EXPECT(gbc.pc(), 0x94b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b3), 0xcb);
        EXPECT(gbc.readMem(0x94b4), 0xaa);
        // CB AA 01BC
        gbc.setState(0x6a18, 0x10e2, 0xdd20, 0x1f19, 0x20b0, 0xe0da, 0x0, 0x0);
        gbc.writeMem(0x6a18, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x10e2);
        EXPECT(gbc.pc(), 0x6a1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01BD
        gbc.setState(0x34ac, 0xbf80, 0xceb0, 0x5584, 0x299e, 0x15e3, 0x1, 0x0);
        gbc.writeMem(0x34ac, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbf80);
        EXPECT(gbc.pc(), 0x34ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01BE
        gbc.setState(0x494e, 0x8a19, 0x41b0, 0x5308, 0xe6db, 0x1925, 0x0, 0x0);
        gbc.writeMem(0x494e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8a19);
        EXPECT(gbc.pc(), 0x4950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01BF
        gbc.setState(0x3573, 0xf768, 0xc0c0, 0xb8f2, 0x7e43, 0x80b3, 0x0, 0x0);
        gbc.writeMem(0x3573, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf768);
        EXPECT(gbc.pc(), 0x3575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01C0
        gbc.setState(0xa22b, 0x7674, 0x21c0, 0xb462, 0xaca4, 0xa18c, 0x0, 0x1);
        gbc.writeMem(0xa22b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7674);
        EXPECT(gbc.pc(), 0xa22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa22b), 0xcb);
        EXPECT(gbc.readMem(0xa22c), 0xaa);
        // CB AA 01C1
        gbc.setState(0xa185, 0x9352, 0x8ce0, 0x949, 0x69d8, 0xf5f1, 0x1, 0x0);
        gbc.writeMem(0xa185, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9352);
        EXPECT(gbc.pc(), 0xa187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa185), 0xcb);
        EXPECT(gbc.readMem(0xa186), 0xaa);
        // CB AA 01C2
        gbc.setState(0x8391, 0x3e16, 0xfd70, 0x4ed2, 0x1bf3, 0xb0bc, 0x0, 0x0);
        gbc.writeMem(0x8391, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3e16);
        EXPECT(gbc.pc(), 0x8393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8391), 0xcb);
        EXPECT(gbc.readMem(0x8392), 0xaa);
        // CB AA 01C3
        gbc.setState(0xada, 0x6ba1, 0x8e10, 0xb710, 0xd482, 0x40d0, 0x1, 0x0);
        gbc.writeMem(0xada, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6ba1);
        EXPECT(gbc.pc(), 0xadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01C4
        gbc.setState(0x46aa, 0xda58, 0xb800, 0x6bc1, 0x1b4a, 0xb62, 0x0, 0x0);
        gbc.writeMem(0x46aa, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xda58);
        EXPECT(gbc.pc(), 0x46ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01C5
        gbc.setState(0xe5b3, 0xb27, 0xaf30, 0xbff1, 0x64bb, 0x15a9, 0x1, 0x1);
        gbc.writeMem(0xe5b3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb27);
        EXPECT(gbc.pc(), 0xe5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b3), 0xcb);
        EXPECT(gbc.readMem(0xe5b4), 0xaa);
        // CB AA 01C6
        gbc.setState(0x6009, 0xa62e, 0xc460, 0xabbc, 0xb24b, 0xf1e4, 0x0, 0x0);
        gbc.writeMem(0x6009, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa62e);
        EXPECT(gbc.pc(), 0x600b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01C7
        gbc.setState(0x4917, 0x47ce, 0xf100, 0x4b1, 0x8a4a, 0xe9ea, 0x0, 0x0);
        gbc.writeMem(0x4917, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x47ce);
        EXPECT(gbc.pc(), 0x4919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01C9
        gbc.setState(0xb55f, 0x2a6a, 0x4dc0, 0x780e, 0x88a6, 0xdca5, 0x1, 0x0);
        gbc.writeMem(0xb55f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2a6a);
        EXPECT(gbc.pc(), 0xb561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb55f), 0xcb);
        EXPECT(gbc.readMem(0xb560), 0xaa);
        // CB AA 01CA
        gbc.setState(0x4a86, 0x4dda, 0x240, 0x2e5, 0xd080, 0xe049, 0x1, 0x1);
        gbc.writeMem(0x4a86, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4dda);
        EXPECT(gbc.pc(), 0x4a88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01CB
        gbc.setState(0x1bb1, 0xbf15, 0x7d70, 0x50b4, 0xc9fa, 0x598c, 0x0, 0x1);
        gbc.writeMem(0x1bb1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbf15);
        EXPECT(gbc.pc(), 0x1bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01CC
        gbc.setState(0xbfb5, 0x9f80, 0x81e0, 0xa394, 0x1b82, 0x7a29, 0x1, 0x0);
        gbc.writeMem(0xbfb5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9f80);
        EXPECT(gbc.pc(), 0xbfb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb5), 0xcb);
        EXPECT(gbc.readMem(0xbfb6), 0xaa);
        // CB AA 01CD
        gbc.setState(0x4817, 0xe79b, 0x6240, 0x97c7, 0x34dc, 0xfc7c, 0x1, 0x0);
        gbc.writeMem(0x4817, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe79b);
        EXPECT(gbc.pc(), 0x4819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01CE
        gbc.setState(0xa02f, 0xde1e, 0x4520, 0x5321, 0xd09d, 0x15a0, 0x0, 0x1);
        gbc.writeMem(0xa02f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xde1e);
        EXPECT(gbc.pc(), 0xa031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02f), 0xcb);
        EXPECT(gbc.readMem(0xa030), 0xaa);
        // CB AA 01CF
        gbc.setState(0xd149, 0x5f90, 0x3a0, 0xc040, 0x363a, 0xba74, 0x1, 0x0);
        gbc.writeMem(0xd149, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5f90);
        EXPECT(gbc.pc(), 0xd14b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd149), 0xcb);
        EXPECT(gbc.readMem(0xd14a), 0xaa);
        // CB AA 01D0
        gbc.setState(0x3548, 0x7ed3, 0xf670, 0xa1cf, 0x4863, 0x5866, 0x0, 0x1);
        gbc.writeMem(0x3548, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7ed3);
        EXPECT(gbc.pc(), 0x354a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01D1
        gbc.setState(0x9798, 0x120f, 0x7560, 0x1e4c, 0x6bf5, 0x76c2, 0x0, 0x0);
        gbc.writeMem(0x9798, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x120f);
        EXPECT(gbc.pc(), 0x979a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9798), 0xcb);
        EXPECT(gbc.readMem(0x9799), 0xaa);
        // CB AA 01D2
        gbc.setState(0x22d3, 0x30fb, 0x8bd0, 0x22c5, 0xc295, 0x4f1, 0x0, 0x1);
        gbc.writeMem(0x22d3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x30fb);
        EXPECT(gbc.pc(), 0x22d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01D3
        gbc.setState(0xe311, 0xfa38, 0xfdf0, 0x9fba, 0xd128, 0xb8e8, 0x1, 0x1);
        gbc.writeMem(0xe311, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xfa38);
        EXPECT(gbc.pc(), 0xe313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe311), 0xcb);
        EXPECT(gbc.readMem(0xe312), 0xaa);
        // CB AA 01D4
        gbc.setState(0x4cd9, 0x4c40, 0xddf0, 0x68c2, 0x8eab, 0x6cfa, 0x1, 0x1);
        gbc.writeMem(0x4cd9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4c40);
        EXPECT(gbc.pc(), 0x4cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01D5
        gbc.setState(0x4831, 0xed77, 0x3020, 0x73ac, 0xaf77, 0x9958, 0x0, 0x0);
        gbc.writeMem(0x4831, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xed77);
        EXPECT(gbc.pc(), 0x4833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01D6
        gbc.setState(0x1a61, 0x9d25, 0x1280, 0x7d6d, 0x13b8, 0xb837, 0x0, 0x1);
        gbc.writeMem(0x1a61, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9d25);
        EXPECT(gbc.pc(), 0x1a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01D7
        gbc.setState(0x9c02, 0xedd6, 0xbe80, 0x23b8, 0x4253, 0xb0e9, 0x1, 0x0);
        gbc.writeMem(0x9c02, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xedd6);
        EXPECT(gbc.pc(), 0x9c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c02), 0xcb);
        EXPECT(gbc.readMem(0x9c03), 0xaa);
        // CB AA 01D8
        gbc.setState(0x7b37, 0xd953, 0x6e40, 0x5843, 0x3e89, 0x22bb, 0x1, 0x0);
        gbc.writeMem(0x7b37, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd953);
        EXPECT(gbc.pc(), 0x7b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01D9
        gbc.setState(0xdaee, 0xb989, 0x1b80, 0x7596, 0x332f, 0x8965, 0x0, 0x1);
        gbc.writeMem(0xdaee, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb989);
        EXPECT(gbc.pc(), 0xdaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaee), 0xcb);
        EXPECT(gbc.readMem(0xdaef), 0xaa);
        // CB AA 01DA
        gbc.setState(0x7d20, 0x145c, 0x3420, 0x7b84, 0xcd39, 0xe0ea, 0x0, 0x0);
        gbc.writeMem(0x7d20, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x145c);
        EXPECT(gbc.pc(), 0x7d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01DB
        gbc.setState(0x5d3c, 0x9bb2, 0x14d0, 0x4a05, 0x1677, 0x1a90, 0x0, 0x0);
        gbc.writeMem(0x5d3c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9bb2);
        EXPECT(gbc.pc(), 0x5d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01DD
        gbc.setState(0xc491, 0x9906, 0x7990, 0xb9b3, 0x8bfa, 0xdd9a, 0x1, 0x0);
        gbc.writeMem(0xc491, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9906);
        EXPECT(gbc.pc(), 0xc493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc491), 0xcb);
        EXPECT(gbc.readMem(0xc492), 0xaa);
        // CB AA 01DF
        gbc.setState(0xaeb1, 0xc972, 0x72c0, 0x4dbf, 0x1cca, 0xd170, 0x0, 0x0);
        gbc.writeMem(0xaeb1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc972);
        EXPECT(gbc.pc(), 0xaeb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb1), 0xcb);
        EXPECT(gbc.readMem(0xaeb2), 0xaa);
        // CB AA 01E0
        gbc.setState(0xd07d, 0x6068, 0x5fe0, 0xe163, 0x70ea, 0x9d18, 0x1, 0x0);
        gbc.writeMem(0xd07d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6068);
        EXPECT(gbc.pc(), 0xd07f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd07d), 0xcb);
        EXPECT(gbc.readMem(0xd07e), 0xaa);
        // CB AA 01E1
        gbc.setState(0xefeb, 0x399a, 0x9110, 0x7c2b, 0x6d99, 0x54e5, 0x0, 0x1);
        gbc.writeMem(0xefeb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x399a);
        EXPECT(gbc.pc(), 0xefed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefeb), 0xcb);
        EXPECT(gbc.readMem(0xefec), 0xaa);
        // CB AA 01E2
        gbc.setState(0xb423, 0xeac6, 0x6b50, 0xe128, 0xbe0c, 0xe3c, 0x1, 0x1);
        gbc.writeMem(0xb423, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xeac6);
        EXPECT(gbc.pc(), 0xb425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb423), 0xcb);
        EXPECT(gbc.readMem(0xb424), 0xaa);
        // CB AA 01E3
        gbc.setState(0x5e17, 0x3970, 0xe1b0, 0x3774, 0xc112, 0xf27a, 0x1, 0x1);
        gbc.writeMem(0x5e17, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3970);
        EXPECT(gbc.pc(), 0x5e19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01E4
        gbc.setState(0xa0d, 0xa39d, 0x2af0, 0x83b5, 0x18ab, 0x1c82, 0x0, 0x1);
        gbc.writeMem(0xa0d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa39d);
        EXPECT(gbc.pc(), 0xa0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01E5
        gbc.setState(0x4ad9, 0xd89e, 0xefc0, 0xd684, 0x9e38, 0xb936, 0x0, 0x1);
        gbc.writeMem(0x4ad9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd89e);
        EXPECT(gbc.pc(), 0x4adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01E6
        gbc.setState(0x90e0, 0x91e7, 0x93a0, 0x82f8, 0xb4a8, 0xfb64, 0x1, 0x1);
        gbc.writeMem(0x90e0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x91e7);
        EXPECT(gbc.pc(), 0x90e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e0), 0xcb);
        EXPECT(gbc.readMem(0x90e1), 0xaa);
        // CB AA 01E7
        gbc.setState(0x2d1f, 0x8465, 0x4d0, 0x812d, 0x6149, 0x9f9e, 0x0, 0x0);
        gbc.writeMem(0x2d1f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8465);
        EXPECT(gbc.pc(), 0x2d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01E8
        gbc.setState(0x913f, 0x56ab, 0x5860, 0x94a8, 0x7fdd, 0xd398, 0x1, 0x0);
        gbc.writeMem(0x913f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x56ab);
        EXPECT(gbc.pc(), 0x9141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x913f), 0xcb);
        EXPECT(gbc.readMem(0x9140), 0xaa);
        // CB AA 01E9
        gbc.setState(0x1e61, 0xdedd, 0x5c60, 0xda63, 0xad06, 0xf4b4, 0x0, 0x0);
        gbc.writeMem(0x1e61, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdedd);
        EXPECT(gbc.pc(), 0x1e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01EA
        gbc.setState(0x56a0, 0xc83d, 0x1180, 0xab29, 0xd5ec, 0xcbb6, 0x1, 0x1);
        gbc.writeMem(0x56a0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc83d);
        EXPECT(gbc.pc(), 0x56a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01EB
        gbc.setState(0xd3ce, 0x9169, 0x7640, 0xf360, 0x8aea, 0xb770, 0x0, 0x0);
        gbc.writeMem(0xd3ce, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9169);
        EXPECT(gbc.pc(), 0xd3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ce), 0xcb);
        EXPECT(gbc.readMem(0xd3cf), 0xaa);
        // CB AA 01EC
        gbc.setState(0x8d3d, 0xb265, 0x5840, 0x80d0, 0x6a9d, 0x7c85, 0x1, 0x0);
        gbc.writeMem(0x8d3d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb265);
        EXPECT(gbc.pc(), 0x8d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d3d), 0xcb);
        EXPECT(gbc.readMem(0x8d3e), 0xaa);
        // CB AA 01ED
        gbc.setState(0x6870, 0x7b40, 0x7190, 0xddf6, 0x6ce2, 0x3da0, 0x0, 0x1);
        gbc.writeMem(0x6870, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7b40);
        EXPECT(gbc.pc(), 0x6872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01EE
        gbc.setState(0xd603, 0x67b1, 0xe2d0, 0x5fd4, 0x3517, 0x19c8, 0x0, 0x1);
        gbc.writeMem(0xd603, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x67b1);
        EXPECT(gbc.pc(), 0xd605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd603), 0xcb);
        EXPECT(gbc.readMem(0xd604), 0xaa);
        // CB AA 01EF
        gbc.setState(0x99f2, 0x5ea6, 0x7210, 0xe56b, 0x45ed, 0x60dc, 0x1, 0x0);
        gbc.writeMem(0x99f2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5ea6);
        EXPECT(gbc.pc(), 0x99f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f2), 0xcb);
        EXPECT(gbc.readMem(0x99f3), 0xaa);
        // CB AA 01F0
        gbc.setState(0x313d, 0x6181, 0xdd40, 0x9e04, 0x85e6, 0x1174, 0x1, 0x0);
        gbc.writeMem(0x313d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6181);
        EXPECT(gbc.pc(), 0x313f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01F1
        gbc.setState(0xef0d, 0x2b5d, 0x6690, 0xaa34, 0xd257, 0x25ab, 0x1, 0x1);
        gbc.writeMem(0xef0d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2b5d);
        EXPECT(gbc.pc(), 0xef0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef0d), 0xcb);
        EXPECT(gbc.readMem(0xef0e), 0xaa);
        // CB AA 01F2
        gbc.setState(0x487a, 0x615b, 0x9bc0, 0xadc2, 0xeb1e, 0x380d, 0x1, 0x1);
        gbc.writeMem(0x487a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x615b);
        EXPECT(gbc.pc(), 0x487c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01F3
        gbc.setState(0xb8d4, 0xafaf, 0x6360, 0xafaa, 0x394d, 0xaba9, 0x1, 0x1);
        gbc.writeMem(0xb8d4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xafaf);
        EXPECT(gbc.pc(), 0xb8d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d4), 0xcb);
        EXPECT(gbc.readMem(0xb8d5), 0xaa);
        // CB AA 01F4
        gbc.setState(0x753a, 0x1900, 0x2120, 0xf419, 0x8cc6, 0x7d8e, 0x0, 0x0);
        gbc.writeMem(0x753a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1900);
        EXPECT(gbc.pc(), 0x753c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01F5
        gbc.setState(0xcea5, 0x5d6f, 0x9580, 0xcb18, 0x632a, 0x6f1f, 0x1, 0x1);
        gbc.writeMem(0xcea5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5d6f);
        EXPECT(gbc.pc(), 0xcea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea5), 0xcb);
        EXPECT(gbc.readMem(0xcea6), 0xaa);
        // CB AA 01F7
        gbc.setState(0x38e2, 0x2fdf, 0xad40, 0x93ba, 0x2939, 0x9d4d, 0x1, 0x1);
        gbc.writeMem(0x38e2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2fdf);
        EXPECT(gbc.pc(), 0x38e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01F8
        gbc.setState(0x650b, 0x546a, 0x3d40, 0x6f94, 0x1707, 0x397, 0x0, 0x1);
        gbc.writeMem(0x650b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x546a);
        EXPECT(gbc.pc(), 0x650d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01F9
        gbc.setState(0xb6f7, 0xc930, 0xae00, 0x309e, 0x6d7d, 0xd351, 0x1, 0x0);
        gbc.writeMem(0xb6f7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc930);
        EXPECT(gbc.pc(), 0xb6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f7), 0xcb);
        EXPECT(gbc.readMem(0xb6f8), 0xaa);
        // CB AA 01FA
        gbc.setState(0x69a8, 0x66b7, 0x6180, 0xfdab, 0xe5aa, 0x5c4f, 0x1, 0x0);
        gbc.writeMem(0x69a8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x66b7);
        EXPECT(gbc.pc(), 0x69aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 01FB
        gbc.setState(0x993f, 0x3f5e, 0x5700, 0x86ed, 0xd4c8, 0xe30b, 0x1, 0x1);
        gbc.writeMem(0x993f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3f5e);
        EXPECT(gbc.pc(), 0x9941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x993f), 0xcb);
        EXPECT(gbc.readMem(0x9940), 0xaa);
        // CB AA 01FC
        gbc.setState(0x3466, 0xe3ad, 0x9590, 0x12fe, 0xbde7, 0xa90f, 0x1, 0x0);
        gbc.writeMem(0x3466, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe3ad);
        EXPECT(gbc.pc(), 0x3468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 01FD
        gbc.setState(0xdf35, 0x8be8, 0xe1f0, 0x4353, 0xc096, 0xc3a7, 0x1, 0x1);
        gbc.writeMem(0xdf35, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8be8);
        EXPECT(gbc.pc(), 0xdf37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf35), 0xcb);
        EXPECT(gbc.readMem(0xdf36), 0xaa);
        // CB AA 01FE
        gbc.setState(0x8d83, 0x4987, 0x3100, 0xf5c7, 0x6ee9, 0xd1fb, 0x1, 0x0);
        gbc.writeMem(0x8d83, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4987);
        EXPECT(gbc.pc(), 0x8d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d83), 0xcb);
        EXPECT(gbc.readMem(0x8d84), 0xaa);
        // CB AA 0200
        gbc.setState(0x2e54, 0xcc16, 0x6fd0, 0x9d43, 0x459, 0x3358, 0x1, 0x0);
        gbc.writeMem(0x2e54, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xcc16);
        EXPECT(gbc.pc(), 0x2e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0201
        gbc.setState(0x6e5c, 0xc2c1, 0x55f0, 0xf017, 0x5808, 0x8ac0, 0x0, 0x1);
        gbc.writeMem(0x6e5c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc2c1);
        EXPECT(gbc.pc(), 0x6e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0202
        gbc.setState(0xa07f, 0x61d0, 0x74d0, 0x360f, 0xefc4, 0x46a0, 0x1, 0x0);
        gbc.writeMem(0xa07f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x61d0);
        EXPECT(gbc.pc(), 0xa081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07f), 0xcb);
        EXPECT(gbc.readMem(0xa080), 0xaa);
        // CB AA 0203
        gbc.setState(0x5e36, 0x9771, 0x9de0, 0x6de5, 0x539b, 0xbe7e, 0x0, 0x0);
        gbc.writeMem(0x5e36, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9771);
        EXPECT(gbc.pc(), 0x5e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0204
        gbc.setState(0x82b0, 0x3ae9, 0x7b40, 0x6ef9, 0x2402, 0xafe0, 0x1, 0x1);
        gbc.writeMem(0x82b0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3ae9);
        EXPECT(gbc.pc(), 0x82b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b0), 0xcb);
        EXPECT(gbc.readMem(0x82b1), 0xaa);
        // CB AA 0205
        gbc.setState(0x418c, 0x8f72, 0xb170, 0xcf6c, 0xcef1, 0x43a1, 0x1, 0x1);
        gbc.writeMem(0x418c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8f72);
        EXPECT(gbc.pc(), 0x418e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0206
        gbc.setState(0x3177, 0x5079, 0x9ef0, 0x48d6, 0xcef9, 0x20ae, 0x1, 0x0);
        gbc.writeMem(0x3177, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5079);
        EXPECT(gbc.pc(), 0x3179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0207
        gbc.setState(0xd33c, 0xb019, 0x66a0, 0xcb43, 0xa10f, 0x377f, 0x1, 0x1);
        gbc.writeMem(0xd33c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb019);
        EXPECT(gbc.pc(), 0xd33e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33c), 0xcb);
        EXPECT(gbc.readMem(0xd33d), 0xaa);
        // CB AA 0208
        gbc.setState(0x649f, 0x1cf, 0xd720, 0x1482, 0x3d0, 0x2356, 0x1, 0x1);
        gbc.writeMem(0x649f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1cf);
        EXPECT(gbc.pc(), 0x64a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0209
        gbc.setState(0x6120, 0x76c0, 0x1870, 0x6d12, 0xe494, 0x4e13, 0x0, 0x1);
        gbc.writeMem(0x6120, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x76c0);
        EXPECT(gbc.pc(), 0x6122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 020A
        gbc.setState(0xeb32, 0x5fff, 0xcb00, 0x3564, 0xfd09, 0x8e89, 0x0, 0x0);
        gbc.writeMem(0xeb32, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5fff);
        EXPECT(gbc.pc(), 0xeb34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb32), 0xcb);
        EXPECT(gbc.readMem(0xeb33), 0xaa);
        // CB AA 020B
        gbc.setState(0x890b, 0xf5eb, 0x2780, 0x111, 0x5a42, 0x4807, 0x1, 0x0);
        gbc.writeMem(0x890b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf5eb);
        EXPECT(gbc.pc(), 0x890d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890b), 0xcb);
        EXPECT(gbc.readMem(0x890c), 0xaa);
        // CB AA 020C
        gbc.setState(0x2326, 0x11aa, 0x7c50, 0xabf2, 0x882d, 0x39c9, 0x0, 0x1);
        gbc.writeMem(0x2326, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x11aa);
        EXPECT(gbc.pc(), 0x2328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 020D
        gbc.setState(0xc412, 0xa40b, 0x8de0, 0x9949, 0xbd55, 0xacfa, 0x1, 0x0);
        gbc.writeMem(0xc412, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa40b);
        EXPECT(gbc.pc(), 0xc414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc412), 0xcb);
        EXPECT(gbc.readMem(0xc413), 0xaa);
        // CB AA 020E
        gbc.setState(0x8abb, 0x3c14, 0x4730, 0xf576, 0x6059, 0xad03, 0x0, 0x1);
        gbc.writeMem(0x8abb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3c14);
        EXPECT(gbc.pc(), 0x8abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8abb), 0xcb);
        EXPECT(gbc.readMem(0x8abc), 0xaa);
        // CB AA 020F
        gbc.setState(0x35ae, 0x1e1a, 0x8040, 0x6550, 0xf358, 0x99cb, 0x0, 0x0);
        gbc.writeMem(0x35ae, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1e1a);
        EXPECT(gbc.pc(), 0x35b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0210
        gbc.setState(0xb1de, 0x9be6, 0x1b50, 0x5745, 0x4592, 0x24de, 0x0, 0x0);
        gbc.writeMem(0xb1de, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9be6);
        EXPECT(gbc.pc(), 0xb1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1de), 0xcb);
        EXPECT(gbc.readMem(0xb1df), 0xaa);
        // CB AA 0211
        gbc.setState(0x7bfc, 0x4e6e, 0xf000, 0xb96f, 0xf105, 0xa0f7, 0x1, 0x1);
        gbc.writeMem(0x7bfc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4e6e);
        EXPECT(gbc.pc(), 0x7bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0212
        gbc.setState(0xbfa6, 0xe67f, 0xbe00, 0xc5e2, 0x55bf, 0xc089, 0x0, 0x1);
        gbc.writeMem(0xbfa6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe67f);
        EXPECT(gbc.pc(), 0xbfa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfa6), 0xcb);
        EXPECT(gbc.readMem(0xbfa7), 0xaa);
        // CB AA 0213
        gbc.setState(0x5367, 0x61f7, 0x7970, 0x9536, 0xb6f8, 0x4449, 0x0, 0x0);
        gbc.writeMem(0x5367, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x61f7);
        EXPECT(gbc.pc(), 0x5369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0214
        gbc.setState(0x457, 0x9b96, 0x4b20, 0xe6e0, 0x1442, 0x15ca, 0x1, 0x1);
        gbc.writeMem(0x457, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9b96);
        EXPECT(gbc.pc(), 0x459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0215
        gbc.setState(0x3fcf, 0x5131, 0xdf70, 0xc268, 0x865, 0xef95, 0x0, 0x1);
        gbc.writeMem(0x3fcf, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5131);
        EXPECT(gbc.pc(), 0x3fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0216
        gbc.setState(0x4e67, 0x5489, 0x8950, 0xf0ed, 0x7c7c, 0xd5a6, 0x0, 0x1);
        gbc.writeMem(0x4e67, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5489);
        EXPECT(gbc.pc(), 0x4e69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0217
        gbc.setState(0xdca5, 0x5f52, 0x1c80, 0x8186, 0xb561, 0x529f, 0x0, 0x0);
        gbc.writeMem(0xdca5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5f52);
        EXPECT(gbc.pc(), 0xdca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca5), 0xcb);
        EXPECT(gbc.readMem(0xdca6), 0xaa);
        // CB AA 0218
        gbc.setState(0x21c7, 0x7125, 0x6f40, 0xded2, 0x35bc, 0x367, 0x0, 0x0);
        gbc.writeMem(0x21c7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7125);
        EXPECT(gbc.pc(), 0x21c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0219
        gbc.setState(0x873d, 0xf529, 0x80b0, 0x5c13, 0xcd24, 0x88c3, 0x1, 0x0);
        gbc.writeMem(0x873d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf529);
        EXPECT(gbc.pc(), 0x873f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873d), 0xcb);
        EXPECT(gbc.readMem(0x873e), 0xaa);
        // CB AA 021A
        gbc.setState(0x4b13, 0x5249, 0xe4c0, 0x2bce, 0xe435, 0x826e, 0x0, 0x0);
        gbc.writeMem(0x4b13, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5249);
        EXPECT(gbc.pc(), 0x4b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 021B
        gbc.setState(0x15e1, 0x52c1, 0x53a0, 0x82fb, 0xe3f7, 0xc903, 0x0, 0x1);
        gbc.writeMem(0x15e1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x52c1);
        EXPECT(gbc.pc(), 0x15e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 021C
        gbc.setState(0x2baa, 0x60d8, 0xf2d0, 0xf8b4, 0xc2a9, 0x7642, 0x1, 0x0);
        gbc.writeMem(0x2baa, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x60d8);
        EXPECT(gbc.pc(), 0x2bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 021E
        gbc.setState(0xbfaa, 0x52c5, 0x7f90, 0x9a2d, 0xc95e, 0x6420, 0x1, 0x0);
        gbc.writeMem(0xbfaa, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x52c5);
        EXPECT(gbc.pc(), 0xbfac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfaa), 0xcb);
        EXPECT(gbc.readMem(0xbfab), 0xaa);
        // CB AA 021F
        gbc.setState(0x66b, 0x4e3d, 0x8610, 0x5a00, 0xa1f2, 0x77ee, 0x0, 0x0);
        gbc.writeMem(0x66b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4e3d);
        EXPECT(gbc.pc(), 0x66d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0220
        gbc.setState(0xc22e, 0x3430, 0xb190, 0xf907, 0x98c1, 0xfc3e, 0x0, 0x1);
        gbc.writeMem(0xc22e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3430);
        EXPECT(gbc.pc(), 0xc230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22e), 0xcb);
        EXPECT(gbc.readMem(0xc22f), 0xaa);
        // CB AA 0221
        gbc.setState(0x99d2, 0x13d0, 0x85e0, 0x8cad, 0x7723, 0x34d4, 0x1, 0x1);
        gbc.writeMem(0x99d2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x13d0);
        EXPECT(gbc.pc(), 0x99d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d2), 0xcb);
        EXPECT(gbc.readMem(0x99d3), 0xaa);
        // CB AA 0222
        gbc.setState(0x188a, 0x31fc, 0xe8d0, 0x48eb, 0x5acc, 0xec30, 0x0, 0x1);
        gbc.writeMem(0x188a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x31fc);
        EXPECT(gbc.pc(), 0x188c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0223
        gbc.setState(0x5fec, 0x1c6d, 0x8b10, 0x78e7, 0xdf19, 0xd481, 0x0, 0x1);
        gbc.writeMem(0x5fec, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1c6d);
        EXPECT(gbc.pc(), 0x5fee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0224
        gbc.setState(0xc558, 0x802a, 0xe3e0, 0x7456, 0x81df, 0x39bd, 0x1, 0x1);
        gbc.writeMem(0xc558, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x802a);
        EXPECT(gbc.pc(), 0xc55a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc558), 0xcb);
        EXPECT(gbc.readMem(0xc559), 0xaa);
        // CB AA 0225
        gbc.setState(0x436e, 0x510, 0x1310, 0x5fa4, 0x2b6a, 0x51ee, 0x1, 0x0);
        gbc.writeMem(0x436e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x510);
        EXPECT(gbc.pc(), 0x4370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0226
        gbc.setState(0x2aea, 0x91f9, 0xe480, 0x5721, 0xbb37, 0x7d58, 0x1, 0x0);
        gbc.writeMem(0x2aea, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x91f9);
        EXPECT(gbc.pc(), 0x2aec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0227
        gbc.setState(0x254a, 0xcafa, 0x1c40, 0x5440, 0xed24, 0xc8cf, 0x1, 0x0);
        gbc.writeMem(0x254a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcafa);
        EXPECT(gbc.pc(), 0x254c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0228
        gbc.setState(0xebcc, 0xa1d8, 0xe7d0, 0xe757, 0x4b87, 0x85c8, 0x1, 0x1);
        gbc.writeMem(0xebcc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa1d8);
        EXPECT(gbc.pc(), 0xebce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcc), 0xcb);
        EXPECT(gbc.readMem(0xebcd), 0xaa);
        // CB AA 0229
        gbc.setState(0xd2dd, 0xd283, 0xc3f0, 0x8ee9, 0x24fc, 0x7eeb, 0x0, 0x1);
        gbc.writeMem(0xd2dd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd283);
        EXPECT(gbc.pc(), 0xd2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2dd), 0xcb);
        EXPECT(gbc.readMem(0xd2de), 0xaa);
        // CB AA 022A
        gbc.setState(0xb119, 0x36bc, 0xd3f0, 0xfc05, 0x6d8d, 0x6867, 0x1, 0x1);
        gbc.writeMem(0xb119, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x36bc);
        EXPECT(gbc.pc(), 0xb11b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb119), 0xcb);
        EXPECT(gbc.readMem(0xb11a), 0xaa);
        // CB AA 022B
        gbc.setState(0xc83d, 0x494b, 0x9450, 0x2138, 0xeb8, 0xc3c8, 0x1, 0x1);
        gbc.writeMem(0xc83d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x494b);
        EXPECT(gbc.pc(), 0xc83f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc83d), 0xcb);
        EXPECT(gbc.readMem(0xc83e), 0xaa);
        // CB AA 022C
        gbc.setState(0x68e1, 0x23f9, 0x4a50, 0x392e, 0x51ed, 0xed6a, 0x1, 0x0);
        gbc.writeMem(0x68e1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x23f9);
        EXPECT(gbc.pc(), 0x68e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 022D
        gbc.setState(0x22b9, 0x917b, 0x63c0, 0xdb1f, 0x3973, 0xb55d, 0x0, 0x1);
        gbc.writeMem(0x22b9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x917b);
        EXPECT(gbc.pc(), 0x22bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 022E
        gbc.setState(0x1308, 0x310b, 0xeb60, 0x9fc9, 0xec11, 0xc08, 0x0, 0x0);
        gbc.writeMem(0x1308, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x310b);
        EXPECT(gbc.pc(), 0x130a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0230
        gbc.setState(0xd8ce, 0xfd1f, 0xd130, 0x94cf, 0xe0c8, 0x97f8, 0x1, 0x1);
        gbc.writeMem(0xd8ce, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfd1f);
        EXPECT(gbc.pc(), 0xd8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8ce), 0xcb);
        EXPECT(gbc.readMem(0xd8cf), 0xaa);
        // CB AA 0231
        gbc.setState(0xb601, 0xea6, 0xfc70, 0xe72c, 0x278f, 0x9dfb, 0x1, 0x1);
        gbc.writeMem(0xb601, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xea6);
        EXPECT(gbc.pc(), 0xb603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb601), 0xcb);
        EXPECT(gbc.readMem(0xb602), 0xaa);
        // CB AA 0232
        gbc.setState(0x5166, 0xf05f, 0x9c60, 0x5660, 0x1784, 0xff77, 0x0, 0x1);
        gbc.writeMem(0x5166, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf05f);
        EXPECT(gbc.pc(), 0x5168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0233
        gbc.setState(0x632e, 0x427e, 0x5e60, 0x2536, 0x7f10, 0x3024, 0x0, 0x0);
        gbc.writeMem(0x632e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x427e);
        EXPECT(gbc.pc(), 0x6330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0234
        gbc.setState(0xc161, 0x5937, 0x87c0, 0x58ec, 0x72de, 0x2e40, 0x0, 0x0);
        gbc.writeMem(0xc161, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5937);
        EXPECT(gbc.pc(), 0xc163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc161), 0xcb);
        EXPECT(gbc.readMem(0xc162), 0xaa);
        // CB AA 0235
        gbc.setState(0x5d10, 0xea27, 0xd150, 0xe194, 0x2edc, 0x7126, 0x1, 0x1);
        gbc.writeMem(0x5d10, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xea27);
        EXPECT(gbc.pc(), 0x5d12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0236
        gbc.setState(0xc7ba, 0x4f2e, 0xf3f0, 0x205b, 0xbef3, 0xa77e, 0x1, 0x1);
        gbc.writeMem(0xc7ba, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4f2e);
        EXPECT(gbc.pc(), 0xc7bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ba), 0xcb);
        EXPECT(gbc.readMem(0xc7bb), 0xaa);
        // CB AA 0237
        gbc.setState(0xcbc, 0xc021, 0x56b0, 0x19de, 0x44ca, 0x2d82, 0x1, 0x0);
        gbc.writeMem(0xcbc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc021);
        EXPECT(gbc.pc(), 0xcbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0238
        gbc.setState(0x3a9b, 0xe946, 0x2270, 0x79f, 0xf85b, 0x17e6, 0x0, 0x0);
        gbc.writeMem(0x3a9b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe946);
        EXPECT(gbc.pc(), 0x3a9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0239
        gbc.setState(0x1455, 0x2db5, 0x4c60, 0x6902, 0x7335, 0x227d, 0x0, 0x0);
        gbc.writeMem(0x1455, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2db5);
        EXPECT(gbc.pc(), 0x1457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 023A
        gbc.setState(0x677c, 0x689e, 0xa870, 0x94a1, 0x244e, 0xe43, 0x1, 0x1);
        gbc.writeMem(0x677c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x689e);
        EXPECT(gbc.pc(), 0x677e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 023B
        gbc.setState(0x50c9, 0x9ac4, 0x8fc0, 0xf263, 0x3ad6, 0xdeac, 0x1, 0x1);
        gbc.writeMem(0x50c9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9ac4);
        EXPECT(gbc.pc(), 0x50cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 023C
        gbc.setState(0xb200, 0x83e2, 0x4910, 0xe797, 0x57b8, 0xdbf5, 0x1, 0x1);
        gbc.writeMem(0xb200, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x83e2);
        EXPECT(gbc.pc(), 0xb202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb200), 0xcb);
        EXPECT(gbc.readMem(0xb201), 0xaa);
        // CB AA 023D
        gbc.setState(0x3b59, 0xe7bb, 0xb380, 0xea37, 0x83f1, 0x717, 0x1, 0x1);
        gbc.writeMem(0x3b59, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe7bb);
        EXPECT(gbc.pc(), 0x3b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 023E
        gbc.setState(0xc462, 0xf428, 0x7b70, 0xe133, 0x7d69, 0x398f, 0x1, 0x0);
        gbc.writeMem(0xc462, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf428);
        EXPECT(gbc.pc(), 0xc464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc462), 0xcb);
        EXPECT(gbc.readMem(0xc463), 0xaa);
        // CB AA 023F
        gbc.setState(0x2bda, 0x1191, 0xe680, 0x54d5, 0x3422, 0x6299, 0x1, 0x0);
        gbc.writeMem(0x2bda, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1191);
        EXPECT(gbc.pc(), 0x2bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0240
        gbc.setState(0x89c0, 0x3797, 0xe960, 0x9401, 0xbd7, 0x24af, 0x0, 0x0);
        gbc.writeMem(0x89c0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3797);
        EXPECT(gbc.pc(), 0x89c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c0), 0xcb);
        EXPECT(gbc.readMem(0x89c1), 0xaa);
        // CB AA 0241
        gbc.setState(0xe108, 0x4158, 0xbb10, 0x4a03, 0xcc16, 0xf01a, 0x0, 0x0);
        gbc.writeMem(0xe108, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4158);
        EXPECT(gbc.pc(), 0xe10a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe108), 0xcb);
        EXPECT(gbc.readMem(0xe109), 0xaa);
        // CB AA 0242
        gbc.setState(0xa121, 0xbbf2, 0xd970, 0x5df8, 0xef2a, 0xe5b0, 0x1, 0x0);
        gbc.writeMem(0xa121, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xbbf2);
        EXPECT(gbc.pc(), 0xa123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa121), 0xcb);
        EXPECT(gbc.readMem(0xa122), 0xaa);
        // CB AA 0243
        gbc.setState(0x38e8, 0xc27b, 0x6490, 0x653c, 0x8f00, 0x9a84, 0x0, 0x0);
        gbc.writeMem(0x38e8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc27b);
        EXPECT(gbc.pc(), 0x38ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0244
        gbc.setState(0x76b1, 0xfd60, 0x5ca0, 0xacb3, 0xf088, 0xa7ec, 0x0, 0x1);
        gbc.writeMem(0x76b1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfd60);
        EXPECT(gbc.pc(), 0x76b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0245
        gbc.setState(0x2c8d, 0xf800, 0xe330, 0xce6f, 0xef62, 0x29e, 0x0, 0x1);
        gbc.writeMem(0x2c8d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf800);
        EXPECT(gbc.pc(), 0x2c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0246
        gbc.setState(0x545b, 0xe02, 0xf5b0, 0x4f45, 0x8a15, 0x775b, 0x1, 0x0);
        gbc.writeMem(0x545b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe02);
        EXPECT(gbc.pc(), 0x545d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0248
        gbc.setState(0xb120, 0xec1e, 0x9e0, 0xe3bc, 0x7ead, 0x42ca, 0x0, 0x0);
        gbc.writeMem(0xb120, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xec1e);
        EXPECT(gbc.pc(), 0xb122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb120), 0xcb);
        EXPECT(gbc.readMem(0xb121), 0xaa);
        // CB AA 0249
        gbc.setState(0x5c01, 0x42f, 0x9cb0, 0xaa90, 0x6301, 0x87cd, 0x0, 0x1);
        gbc.writeMem(0x5c01, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x42f);
        EXPECT(gbc.pc(), 0x5c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 024A
        gbc.setState(0xecbd, 0xb7d8, 0xd860, 0x680, 0xf302, 0xad24, 0x0, 0x0);
        gbc.writeMem(0xecbd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb7d8);
        EXPECT(gbc.pc(), 0xecbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbd), 0xcb);
        EXPECT(gbc.readMem(0xecbe), 0xaa);
        // CB AA 024B
        gbc.setState(0x227c, 0xc702, 0x3960, 0xdc3, 0xb92d, 0xf96c, 0x0, 0x0);
        gbc.writeMem(0x227c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc702);
        EXPECT(gbc.pc(), 0x227e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 024C
        gbc.setState(0xc35c, 0x34d, 0x5d60, 0xc152, 0x8f4e, 0x4aca, 0x0, 0x1);
        gbc.writeMem(0xc35c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x34d);
        EXPECT(gbc.pc(), 0xc35e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc35c), 0xcb);
        EXPECT(gbc.readMem(0xc35d), 0xaa);
        // CB AA 024D
        gbc.setState(0x61f8, 0xbad2, 0xf6b0, 0xdca, 0x911c, 0xf97, 0x0, 0x1);
        gbc.writeMem(0x61f8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbad2);
        EXPECT(gbc.pc(), 0x61fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 024E
        gbc.setState(0xd60a, 0x7d38, 0x20b0, 0x3d3b, 0xcc22, 0x1823, 0x0, 0x1);
        gbc.writeMem(0xd60a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7d38);
        EXPECT(gbc.pc(), 0xd60c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd60a), 0xcb);
        EXPECT(gbc.readMem(0xd60b), 0xaa);
        // CB AA 024F
        gbc.setState(0x6e63, 0x142, 0xd2e0, 0x5e33, 0x7516, 0xbf26, 0x0, 0x0);
        gbc.writeMem(0x6e63, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x142);
        EXPECT(gbc.pc(), 0x6e65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0250
        gbc.setState(0x2403, 0x24ac, 0xa510, 0x8f70, 0x4189, 0xbd2, 0x1, 0x1);
        gbc.writeMem(0x2403, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x24ac);
        EXPECT(gbc.pc(), 0x2405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0251
        gbc.setState(0xf76, 0xa4dd, 0xbfb0, 0x2add, 0x7887, 0xb76b, 0x0, 0x0);
        gbc.writeMem(0xf76, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa4dd);
        EXPECT(gbc.pc(), 0xf78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0253
        gbc.setState(0x39c, 0x1c78, 0xe410, 0x848e, 0xb4f, 0x4d64, 0x1, 0x1);
        gbc.writeMem(0x39c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1c78);
        EXPECT(gbc.pc(), 0x39e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0254
        gbc.setState(0xa7e3, 0xaaeb, 0xca10, 0xb4d5, 0x1add, 0x7c36, 0x0, 0x1);
        gbc.writeMem(0xa7e3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xaaeb);
        EXPECT(gbc.pc(), 0xa7e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e3), 0xcb);
        EXPECT(gbc.readMem(0xa7e4), 0xaa);
        // CB AA 0255
        gbc.setState(0xb788, 0x438a, 0x920, 0xcb76, 0x4fc8, 0x336d, 0x1, 0x0);
        gbc.writeMem(0xb788, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x438a);
        EXPECT(gbc.pc(), 0xb78a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb788), 0xcb);
        EXPECT(gbc.readMem(0xb789), 0xaa);
        // CB AA 0256
        gbc.setState(0x61a9, 0xf89c, 0x9400, 0x6207, 0xe464, 0x49b1, 0x1, 0x0);
        gbc.writeMem(0x61a9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf89c);
        EXPECT(gbc.pc(), 0x61ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0257
        gbc.setState(0xea35, 0xc03a, 0xa590, 0x667d, 0xf35f, 0xbffa, 0x1, 0x1);
        gbc.writeMem(0xea35, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc03a);
        EXPECT(gbc.pc(), 0xea37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea35), 0xcb);
        EXPECT(gbc.readMem(0xea36), 0xaa);
        // CB AA 0258
        gbc.setState(0x1497, 0x9190, 0x8f50, 0xc465, 0x3843, 0x7a17, 0x1, 0x1);
        gbc.writeMem(0x1497, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9190);
        EXPECT(gbc.pc(), 0x1499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0259
        gbc.setState(0x454e, 0xb6b5, 0x7ea0, 0x16e2, 0xa047, 0x8b71, 0x1, 0x1);
        gbc.writeMem(0x454e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb6b5);
        EXPECT(gbc.pc(), 0x4550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 025A
        gbc.setState(0xeef7, 0x4202, 0x4740, 0xa25d, 0xa73c, 0x1aba, 0x0, 0x0);
        gbc.writeMem(0xeef7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4202);
        EXPECT(gbc.pc(), 0xeef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef7), 0xcb);
        EXPECT(gbc.readMem(0xeef8), 0xaa);
        // CB AA 025C
        gbc.setState(0x4e5a, 0x146c, 0x8ce0, 0x5185, 0xbd07, 0xec1c, 0x0, 0x1);
        gbc.writeMem(0x4e5a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x146c);
        EXPECT(gbc.pc(), 0x4e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 025E
        gbc.setState(0x25e1, 0x16d6, 0x78f0, 0x5d03, 0x1713, 0xedc7, 0x1, 0x1);
        gbc.writeMem(0x25e1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x16d6);
        EXPECT(gbc.pc(), 0x25e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 025F
        gbc.setState(0x86fa, 0x78c, 0x74c0, 0x816b, 0xad79, 0x55f3, 0x0, 0x1);
        gbc.writeMem(0x86fa, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x78c);
        EXPECT(gbc.pc(), 0x86fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86fa), 0xcb);
        EXPECT(gbc.readMem(0x86fb), 0xaa);
        // CB AA 0260
        gbc.setState(0xb5c6, 0x7533, 0xca0, 0x26b6, 0x4892, 0xc306, 0x1, 0x1);
        gbc.writeMem(0xb5c6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7533);
        EXPECT(gbc.pc(), 0xb5c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c6), 0xcb);
        EXPECT(gbc.readMem(0xb5c7), 0xaa);
        // CB AA 0261
        gbc.setState(0x7cc2, 0x83b3, 0x2040, 0xe5ca, 0x8869, 0x84c2, 0x0, 0x1);
        gbc.writeMem(0x7cc2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x83b3);
        EXPECT(gbc.pc(), 0x7cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0262
        gbc.setState(0x4e8, 0xc750, 0xb060, 0xffab, 0x66ab, 0xa141, 0x0, 0x0);
        gbc.writeMem(0x4e8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc750);
        EXPECT(gbc.pc(), 0x4ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0263
        gbc.setState(0xe98e, 0xa9b7, 0x5440, 0x9e95, 0xf7d9, 0x27cd, 0x0, 0x1);
        gbc.writeMem(0xe98e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa9b7);
        EXPECT(gbc.pc(), 0xe990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe98e), 0xcb);
        EXPECT(gbc.readMem(0xe98f), 0xaa);
        // CB AA 0264
        gbc.setState(0xd1d, 0x62c4, 0xa520, 0x5fed, 0x87c7, 0x1699, 0x0, 0x1);
        gbc.writeMem(0xd1d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x62c4);
        EXPECT(gbc.pc(), 0xd1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0265
        gbc.setState(0x5b4c, 0xae90, 0xfde0, 0x4f3, 0x7881, 0x6d44, 0x0, 0x1);
        gbc.writeMem(0x5b4c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xae90);
        EXPECT(gbc.pc(), 0x5b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0266
        gbc.setState(0xef24, 0x9e74, 0xae00, 0x764a, 0xbb2b, 0x5444, 0x0, 0x0);
        gbc.writeMem(0xef24, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9e74);
        EXPECT(gbc.pc(), 0xef26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef24), 0xcb);
        EXPECT(gbc.readMem(0xef25), 0xaa);
        // CB AA 0267
        gbc.setState(0x8dad, 0xa645, 0xddf0, 0xd122, 0xb981, 0x6f2f, 0x1, 0x1);
        gbc.writeMem(0x8dad, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa645);
        EXPECT(gbc.pc(), 0x8daf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dad), 0xcb);
        EXPECT(gbc.readMem(0x8dae), 0xaa);
        // CB AA 0268
        gbc.setState(0x6b13, 0x23d, 0x4bf0, 0x579e, 0x2ff2, 0xbcb5, 0x0, 0x1);
        gbc.writeMem(0x6b13, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x23d);
        EXPECT(gbc.pc(), 0x6b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0269
        gbc.setState(0x9bc8, 0x4e1d, 0xcd40, 0xf6f5, 0x9e6a, 0xd7bf, 0x1, 0x0);
        gbc.writeMem(0x9bc8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4e1d);
        EXPECT(gbc.pc(), 0x9bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc8), 0xcb);
        EXPECT(gbc.readMem(0x9bc9), 0xaa);
        // CB AA 026A
        gbc.setState(0x2e5f, 0x6a38, 0x2bd0, 0xff75, 0x9aca, 0xa9d, 0x0, 0x1);
        gbc.writeMem(0x2e5f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6a38);
        EXPECT(gbc.pc(), 0x2e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 026B
        gbc.setState(0xc8ad, 0xb411, 0x8a0, 0x9f6d, 0x6422, 0x9e62, 0x1, 0x1);
        gbc.writeMem(0xc8ad, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb411);
        EXPECT(gbc.pc(), 0xc8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ad), 0xcb);
        EXPECT(gbc.readMem(0xc8ae), 0xaa);
        // CB AA 026C
        gbc.setState(0x99d6, 0xaa1e, 0x610, 0xd9bf, 0x9abb, 0xb644, 0x0, 0x0);
        gbc.writeMem(0x99d6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xaa1e);
        EXPECT(gbc.pc(), 0x99d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d6), 0xcb);
        EXPECT(gbc.readMem(0x99d7), 0xaa);
        // CB AA 026D
        gbc.setState(0x2301, 0xdd22, 0x8ce0, 0xdd39, 0xf8ad, 0xcf12, 0x0, 0x0);
        gbc.writeMem(0x2301, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdd22);
        EXPECT(gbc.pc(), 0x2303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 026E
        gbc.setState(0x49eb, 0x8293, 0x76c0, 0xefb2, 0xae80, 0xab1f, 0x1, 0x1);
        gbc.writeMem(0x49eb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8293);
        EXPECT(gbc.pc(), 0x49ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 026F
        gbc.setState(0xc32a, 0x1a45, 0x8e00, 0x25f3, 0xc2f8, 0x8b3f, 0x0, 0x0);
        gbc.writeMem(0xc32a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1a45);
        EXPECT(gbc.pc(), 0xc32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc32a), 0xcb);
        EXPECT(gbc.readMem(0xc32b), 0xaa);
        // CB AA 0270
        gbc.setState(0x41ef, 0x51a6, 0x95b0, 0x4c8a, 0xcfde, 0x9cd9, 0x1, 0x1);
        gbc.writeMem(0x41ef, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x51a6);
        EXPECT(gbc.pc(), 0x41f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0271
        gbc.setState(0x3a30, 0xd917, 0xafe0, 0xb8d2, 0x2455, 0x13d0, 0x1, 0x1);
        gbc.writeMem(0x3a30, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd917);
        EXPECT(gbc.pc(), 0x3a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0272
        gbc.setState(0x633f, 0x8a0b, 0x7400, 0xa4e5, 0x11bf, 0xc00, 0x1, 0x1);
        gbc.writeMem(0x633f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8a0b);
        EXPECT(gbc.pc(), 0x6341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0273
        gbc.setState(0x440e, 0x9eff, 0x7490, 0x6b81, 0x8552, 0xea91, 0x1, 0x0);
        gbc.writeMem(0x440e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9eff);
        EXPECT(gbc.pc(), 0x4410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0274
        gbc.setState(0x4019, 0x7729, 0x4f0, 0xe896, 0xb747, 0xaedf, 0x1, 0x0);
        gbc.writeMem(0x4019, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7729);
        EXPECT(gbc.pc(), 0x401b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0275
        gbc.setState(0x64f2, 0x3b70, 0x7a10, 0x558, 0x3467, 0xf0dc, 0x0, 0x1);
        gbc.writeMem(0x64f2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3b70);
        EXPECT(gbc.pc(), 0x64f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0276
        gbc.setState(0xcc52, 0xaccf, 0xfec0, 0xa219, 0x3376, 0xa240, 0x0, 0x1);
        gbc.writeMem(0xcc52, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xaccf);
        EXPECT(gbc.pc(), 0xcc54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc52), 0xcb);
        EXPECT(gbc.readMem(0xcc53), 0xaa);
        // CB AA 0277
        gbc.setState(0xe7ca, 0x5c87, 0x8450, 0xed8f, 0x951, 0x45c6, 0x0, 0x0);
        gbc.writeMem(0xe7ca, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5c87);
        EXPECT(gbc.pc(), 0xe7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ca), 0xcb);
        EXPECT(gbc.readMem(0xe7cb), 0xaa);
        // CB AA 0278
        gbc.setState(0x3ffe, 0x807a, 0xea10, 0xf48, 0xbe7a, 0x5cdf, 0x0, 0x1);
        gbc.writeMem(0x3ffe, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x807a);
        EXPECT(gbc.pc(), 0x4000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0279
        gbc.setState(0xa53c, 0x9c63, 0x7d70, 0x4b, 0x7a5c, 0x275d, 0x1, 0x0);
        gbc.writeMem(0xa53c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9c63);
        EXPECT(gbc.pc(), 0xa53e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa53c), 0xcb);
        EXPECT(gbc.readMem(0xa53d), 0xaa);
        // CB AA 027A
        gbc.setState(0xe731, 0x937f, 0x90a0, 0x2bd8, 0x3dc8, 0x7b4a, 0x0, 0x1);
        gbc.writeMem(0xe731, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x937f);
        EXPECT(gbc.pc(), 0xe733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe731), 0xcb);
        EXPECT(gbc.readMem(0xe732), 0xaa);
        // CB AA 027B
        gbc.setState(0x7b18, 0xd3d0, 0xea50, 0xda29, 0x3587, 0xbda5, 0x1, 0x1);
        gbc.writeMem(0x7b18, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd3d0);
        EXPECT(gbc.pc(), 0x7b1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 027C
        gbc.setState(0x2ed5, 0x9d99, 0x8600, 0x8377, 0x67d9, 0xdaea, 0x1, 0x0);
        gbc.writeMem(0x2ed5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9d99);
        EXPECT(gbc.pc(), 0x2ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 027E
        gbc.setState(0x2b2b, 0xa52f, 0xe8d0, 0x3318, 0x7297, 0x56a0, 0x1, 0x1);
        gbc.writeMem(0x2b2b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa52f);
        EXPECT(gbc.pc(), 0x2b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 027F
        gbc.setState(0x8d6b, 0xbec4, 0x3220, 0x7d0e, 0x5c57, 0x9bf8, 0x1, 0x0);
        gbc.writeMem(0x8d6b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbec4);
        EXPECT(gbc.pc(), 0x8d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6b), 0xcb);
        EXPECT(gbc.readMem(0x8d6c), 0xaa);
        // CB AA 0280
        gbc.setState(0x9004, 0xa670, 0xbd50, 0x8010, 0x7d62, 0xa192, 0x1, 0x0);
        gbc.writeMem(0x9004, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa670);
        EXPECT(gbc.pc(), 0x9006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9004), 0xcb);
        EXPECT(gbc.readMem(0x9005), 0xaa);
        // CB AA 0281
        gbc.setState(0xef2d, 0xa1c1, 0x580, 0x5a4a, 0x23cb, 0x926, 0x1, 0x0);
        gbc.writeMem(0xef2d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa1c1);
        EXPECT(gbc.pc(), 0xef2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef2d), 0xcb);
        EXPECT(gbc.readMem(0xef2e), 0xaa);
        // CB AA 0282
        gbc.setState(0x2c41, 0x64ae, 0x4f80, 0xf6be, 0xca3a, 0xa428, 0x1, 0x0);
        gbc.writeMem(0x2c41, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x64ae);
        EXPECT(gbc.pc(), 0x2c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0283
        gbc.setState(0x449f, 0x9a1f, 0x2b30, 0xe51, 0x74fb, 0x4e9c, 0x1, 0x0);
        gbc.writeMem(0x449f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9a1f);
        EXPECT(gbc.pc(), 0x44a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0284
        gbc.setState(0x12c9, 0x7206, 0x6510, 0x1ff6, 0xf586, 0x9829, 0x0, 0x1);
        gbc.writeMem(0x12c9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7206);
        EXPECT(gbc.pc(), 0x12cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0285
        gbc.setState(0x9fbf, 0xaaab, 0xa7d0, 0x3c9d, 0x86f9, 0x1299, 0x0, 0x1);
        gbc.writeMem(0x9fbf, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xaaab);
        EXPECT(gbc.pc(), 0x9fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbf), 0xcb);
        EXPECT(gbc.readMem(0x9fc0), 0xaa);
        // CB AA 0286
        gbc.setState(0x7642, 0xb8e6, 0xc090, 0x7a96, 0x99f3, 0xc7de, 0x0, 0x0);
        gbc.writeMem(0x7642, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb8e6);
        EXPECT(gbc.pc(), 0x7644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0287
        gbc.setState(0x54ca, 0x3563, 0x4620, 0xb790, 0x8f06, 0xe23a, 0x0, 0x1);
        gbc.writeMem(0x54ca, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3563);
        EXPECT(gbc.pc(), 0x54cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0288
        gbc.setState(0x9d2c, 0xef4e, 0x1530, 0x4434, 0x1f8e, 0x5d, 0x0, 0x1);
        gbc.writeMem(0x9d2c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xef4e);
        EXPECT(gbc.pc(), 0x9d2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d2c), 0xcb);
        EXPECT(gbc.readMem(0x9d2d), 0xaa);
        // CB AA 0289
        gbc.setState(0x84, 0xe9cd, 0xd760, 0x56e7, 0x4280, 0x9b14, 0x0, 0x0);
        gbc.writeMem(0x84, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe9cd);
        EXPECT(gbc.pc(), 0x86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 028A
        gbc.setState(0x22bc, 0xa355, 0x110, 0xb0ed, 0x31cf, 0x45f2, 0x0, 0x1);
        gbc.writeMem(0x22bc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa355);
        EXPECT(gbc.pc(), 0x22be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 028B
        gbc.setState(0x4efe, 0xf5de, 0x8df0, 0xc53c, 0x6779, 0x30f8, 0x1, 0x1);
        gbc.writeMem(0x4efe, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf5de);
        EXPECT(gbc.pc(), 0x4f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 028C
        gbc.setState(0x6983, 0x8067, 0xa620, 0x30a3, 0xa04e, 0xec4a, 0x0, 0x0);
        gbc.writeMem(0x6983, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8067);
        EXPECT(gbc.pc(), 0x6985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 028D
        gbc.setState(0x1718, 0x5340, 0x960, 0x8a22, 0xaf37, 0x7844, 0x0, 0x0);
        gbc.writeMem(0x1718, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5340);
        EXPECT(gbc.pc(), 0x171a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 028E
        gbc.setState(0x66b1, 0x23c6, 0x1d80, 0x7530, 0x5a10, 0x75f2, 0x0, 0x1);
        gbc.writeMem(0x66b1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x23c6);
        EXPECT(gbc.pc(), 0x66b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 028F
        gbc.setState(0x6f66, 0x3c5c, 0x5fc0, 0x8f89, 0x7f91, 0x181c, 0x1, 0x1);
        gbc.writeMem(0x6f66, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3c5c);
        EXPECT(gbc.pc(), 0x6f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0290
        gbc.setState(0x22a9, 0xa718, 0x90f0, 0x2a68, 0xf7f6, 0xf60a, 0x0, 0x0);
        gbc.writeMem(0x22a9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa718);
        EXPECT(gbc.pc(), 0x22ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0291
        gbc.setState(0x5ebd, 0x6444, 0x1410, 0xc1fb, 0xa547, 0x2052, 0x0, 0x1);
        gbc.writeMem(0x5ebd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6444);
        EXPECT(gbc.pc(), 0x5ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0292
        gbc.setState(0x91e8, 0x1f6b, 0x3bc0, 0xb122, 0x695c, 0x22d2, 0x1, 0x1);
        gbc.writeMem(0x91e8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1f6b);
        EXPECT(gbc.pc(), 0x91ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e8), 0xcb);
        EXPECT(gbc.readMem(0x91e9), 0xaa);
        // CB AA 0293
        gbc.setState(0x7fce, 0xada2, 0xd8b0, 0xb22d, 0x763f, 0x85d2, 0x1, 0x0);
        gbc.writeMem(0x7fce, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xada2);
        EXPECT(gbc.pc(), 0x7fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0294
        gbc.setState(0x5c11, 0x5c49, 0x8a80, 0xb44a, 0x5132, 0x91ef, 0x1, 0x1);
        gbc.writeMem(0x5c11, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5c49);
        EXPECT(gbc.pc(), 0x5c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0295
        gbc.setState(0x1bba, 0x7d6, 0xe070, 0xdd98, 0x3cfe, 0xbeb1, 0x0, 0x0);
        gbc.writeMem(0x1bba, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7d6);
        EXPECT(gbc.pc(), 0x1bbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0296
        gbc.setState(0x546a, 0xbad3, 0x5e10, 0x10e2, 0xadbb, 0x2576, 0x0, 0x1);
        gbc.writeMem(0x546a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbad3);
        EXPECT(gbc.pc(), 0x546c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0297
        gbc.setState(0xbeca, 0xf0ef, 0xac0, 0x4dde, 0x3109, 0x21e3, 0x0, 0x0);
        gbc.writeMem(0xbeca, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf0ef);
        EXPECT(gbc.pc(), 0xbecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeca), 0xcb);
        EXPECT(gbc.readMem(0xbecb), 0xaa);
        // CB AA 0298
        gbc.setState(0xa1e0, 0xc4a9, 0x9140, 0x3515, 0x683a, 0xbb18, 0x0, 0x1);
        gbc.writeMem(0xa1e0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc4a9);
        EXPECT(gbc.pc(), 0xa1e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e0), 0xcb);
        EXPECT(gbc.readMem(0xa1e1), 0xaa);
        // CB AA 0299
        gbc.setState(0xe885, 0x50c2, 0xc2e0, 0x4577, 0x662c, 0x11b8, 0x1, 0x1);
        gbc.writeMem(0xe885, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x50c2);
        EXPECT(gbc.pc(), 0xe887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe885), 0xcb);
        EXPECT(gbc.readMem(0xe886), 0xaa);
        // CB AA 029A
        gbc.setState(0x85df, 0xa26, 0xadb0, 0x72b2, 0x3a7, 0x4ff8, 0x0, 0x1);
        gbc.writeMem(0x85df, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa26);
        EXPECT(gbc.pc(), 0x85e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85df), 0xcb);
        EXPECT(gbc.readMem(0x85e0), 0xaa);
        // CB AA 029B
        gbc.setState(0x896c, 0xbac, 0xa7b0, 0x8b4f, 0x19d8, 0xf30c, 0x1, 0x0);
        gbc.writeMem(0x896c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbac);
        EXPECT(gbc.pc(), 0x896e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x896c), 0xcb);
        EXPECT(gbc.readMem(0x896d), 0xaa);
        // CB AA 029C
        gbc.setState(0xa4a8, 0x18b4, 0x60e0, 0x56f6, 0x13d2, 0x3b99, 0x1, 0x0);
        gbc.writeMem(0xa4a8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x18b4);
        EXPECT(gbc.pc(), 0xa4aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a8), 0xcb);
        EXPECT(gbc.readMem(0xa4a9), 0xaa);
        // CB AA 029D
        gbc.setState(0x144f, 0x73f4, 0x90b0, 0xbc31, 0xbfdf, 0x851f, 0x0, 0x1);
        gbc.writeMem(0x144f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x73f4);
        EXPECT(gbc.pc(), 0x1451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 029E
        gbc.setState(0x64f, 0xaa86, 0x10d0, 0xa821, 0xbff8, 0xe5f0, 0x1, 0x0);
        gbc.writeMem(0x64f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xaa86);
        EXPECT(gbc.pc(), 0x651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 029F
        gbc.setState(0x675a, 0x80fd, 0x98a0, 0x8979, 0x48fc, 0x9e32, 0x0, 0x0);
        gbc.writeMem(0x675a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x80fd);
        EXPECT(gbc.pc(), 0x675c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02A0
        gbc.setState(0x7a30, 0x9caa, 0xd120, 0x8c3f, 0xb746, 0x530d, 0x1, 0x0);
        gbc.writeMem(0x7a30, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9caa);
        EXPECT(gbc.pc(), 0x7a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02A1
        gbc.setState(0x44c9, 0x37c3, 0xc910, 0x90dd, 0x1b98, 0xec61, 0x0, 0x0);
        gbc.writeMem(0x44c9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x37c3);
        EXPECT(gbc.pc(), 0x44cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02A3
        gbc.setState(0x7c58, 0x2b7, 0x5240, 0x8c64, 0xac95, 0x6c6d, 0x0, 0x1);
        gbc.writeMem(0x7c58, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2b7);
        EXPECT(gbc.pc(), 0x7c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02A4
        gbc.setState(0xc8e9, 0xc88, 0x2080, 0x3178, 0x5b78, 0x17e0, 0x0, 0x0);
        gbc.writeMem(0xc8e9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc88);
        EXPECT(gbc.pc(), 0xc8eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e9), 0xcb);
        EXPECT(gbc.readMem(0xc8ea), 0xaa);
        // CB AA 02A5
        gbc.setState(0x8353, 0x38ea, 0x20, 0xc69, 0x4486, 0xe51a, 0x0, 0x1);
        gbc.writeMem(0x8353, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x38ea);
        EXPECT(gbc.pc(), 0x8355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8353), 0xcb);
        EXPECT(gbc.readMem(0x8354), 0xaa);
        // CB AA 02A6
        gbc.setState(0xd45b, 0x9397, 0x4020, 0x15ec, 0x2f2, 0xe51, 0x0, 0x0);
        gbc.writeMem(0xd45b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9397);
        EXPECT(gbc.pc(), 0xd45d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd45b), 0xcb);
        EXPECT(gbc.readMem(0xd45c), 0xaa);
        // CB AA 02A7
        gbc.setState(0xeb00, 0xaca6, 0x69a0, 0xe47e, 0x2967, 0xc518, 0x0, 0x1);
        gbc.writeMem(0xeb00, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xaca6);
        EXPECT(gbc.pc(), 0xeb02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb00), 0xcb);
        EXPECT(gbc.readMem(0xeb01), 0xaa);
        // CB AA 02A8
        gbc.setState(0x6640, 0xdc1b, 0x32a0, 0x97d4, 0x4c9e, 0x7ee6, 0x1, 0x0);
        gbc.writeMem(0x6640, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdc1b);
        EXPECT(gbc.pc(), 0x6642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02A9
        gbc.setState(0x6ad8, 0x4ddb, 0x75c0, 0x3c92, 0xd0d7, 0x6a3d, 0x0, 0x1);
        gbc.writeMem(0x6ad8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4ddb);
        EXPECT(gbc.pc(), 0x6ada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02AA
        gbc.setState(0x934, 0x3513, 0x3d50, 0xb515, 0xd68b, 0xfd97, 0x0, 0x0);
        gbc.writeMem(0x934, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3513);
        EXPECT(gbc.pc(), 0x936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02AB
        gbc.setState(0x3a29, 0xb0c6, 0xbf90, 0xe928, 0xd503, 0x3d4, 0x0, 0x1);
        gbc.writeMem(0x3a29, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb0c6);
        EXPECT(gbc.pc(), 0x3a2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02AC
        gbc.setState(0x677b, 0x4d80, 0x3840, 0x26cc, 0x3033, 0xf893, 0x0, 0x0);
        gbc.writeMem(0x677b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4d80);
        EXPECT(gbc.pc(), 0x677d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02AD
        gbc.setState(0x62b6, 0x4b09, 0xd3c0, 0xab65, 0xc4f1, 0x21cb, 0x1, 0x1);
        gbc.writeMem(0x62b6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4b09);
        EXPECT(gbc.pc(), 0x62b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02AE
        gbc.setState(0x9c46, 0xc184, 0xc0a0, 0x792f, 0xe0ac, 0xab0, 0x0, 0x1);
        gbc.writeMem(0x9c46, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc184);
        EXPECT(gbc.pc(), 0x9c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c46), 0xcb);
        EXPECT(gbc.readMem(0x9c47), 0xaa);
        // CB AA 02AF
        gbc.setState(0x5439, 0xaebe, 0x2110, 0xf22a, 0x852e, 0xc94e, 0x1, 0x1);
        gbc.writeMem(0x5439, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xaebe);
        EXPECT(gbc.pc(), 0x543b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02B0
        gbc.setState(0x5f6c, 0x393c, 0xada0, 0xa60a, 0xf275, 0xf57d, 0x1, 0x0);
        gbc.writeMem(0x5f6c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x393c);
        EXPECT(gbc.pc(), 0x5f6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02B1
        gbc.setState(0x1eb, 0x93c8, 0xb390, 0xe962, 0xf89, 0x4637, 0x0, 0x1);
        gbc.writeMem(0x1eb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x93c8);
        EXPECT(gbc.pc(), 0x1ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02B2
        gbc.setState(0xed38, 0x22e, 0x70b0, 0x6db4, 0x65f7, 0xd46b, 0x1, 0x1);
        gbc.writeMem(0xed38, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x22e);
        EXPECT(gbc.pc(), 0xed3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed38), 0xcb);
        EXPECT(gbc.readMem(0xed39), 0xaa);
        // CB AA 02B4
        gbc.setState(0x9423, 0x563d, 0xc1f0, 0x5f8d, 0x84e, 0x8a23, 0x0, 0x1);
        gbc.writeMem(0x9423, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x563d);
        EXPECT(gbc.pc(), 0x9425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9423), 0xcb);
        EXPECT(gbc.readMem(0x9424), 0xaa);
        // CB AA 02B5
        gbc.setState(0xa924, 0x54cc, 0x1a00, 0x6cbb, 0x51e6, 0xff5e, 0x0, 0x1);
        gbc.writeMem(0xa924, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x54cc);
        EXPECT(gbc.pc(), 0xa926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa924), 0xcb);
        EXPECT(gbc.readMem(0xa925), 0xaa);
        // CB AA 02B6
        gbc.setState(0x4681, 0x746c, 0x5f50, 0xe7a2, 0xe6ea, 0x323b, 0x1, 0x1);
        gbc.writeMem(0x4681, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x746c);
        EXPECT(gbc.pc(), 0x4683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02B7
        gbc.setState(0xbdc8, 0x30e5, 0xbd00, 0x7c27, 0x2a14, 0x47ac, 0x1, 0x1);
        gbc.writeMem(0xbdc8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x30e5);
        EXPECT(gbc.pc(), 0xbdca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc8), 0xcb);
        EXPECT(gbc.readMem(0xbdc9), 0xaa);
        // CB AA 02B8
        gbc.setState(0xb7e9, 0x2501, 0xb1e0, 0xcfcf, 0x9de0, 0x197, 0x1, 0x0);
        gbc.writeMem(0xb7e9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2501);
        EXPECT(gbc.pc(), 0xb7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e9), 0xcb);
        EXPECT(gbc.readMem(0xb7ea), 0xaa);
        // CB AA 02B9
        gbc.setState(0xb883, 0xd4a3, 0x4f80, 0x48f0, 0x6233, 0xf832, 0x0, 0x0);
        gbc.writeMem(0xb883, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd4a3);
        EXPECT(gbc.pc(), 0xb885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb883), 0xcb);
        EXPECT(gbc.readMem(0xb884), 0xaa);
        // CB AA 02BA
        gbc.setState(0x788d, 0x27d3, 0x3cd0, 0xa034, 0xaee6, 0x7db8, 0x0, 0x1);
        gbc.writeMem(0x788d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x27d3);
        EXPECT(gbc.pc(), 0x788f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02BB
        gbc.setState(0x4964, 0xff04, 0x2820, 0xa391, 0x3683, 0xc264, 0x1, 0x1);
        gbc.writeMem(0x4964, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xff04);
        EXPECT(gbc.pc(), 0x4966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02BC
        gbc.setState(0xe580, 0x51a, 0xfc40, 0x3ae4, 0x7722, 0xf07e, 0x1, 0x1);
        gbc.writeMem(0xe580, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x51a);
        EXPECT(gbc.pc(), 0xe582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe580), 0xcb);
        EXPECT(gbc.readMem(0xe581), 0xaa);
        // CB AA 02BD
        gbc.setState(0x6818, 0x6f62, 0x7080, 0xf611, 0xe587, 0x2d32, 0x0, 0x1);
        gbc.writeMem(0x6818, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6f62);
        EXPECT(gbc.pc(), 0x681a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02BE
        gbc.setState(0x6abc, 0x5b4d, 0xbb60, 0xc782, 0x772f, 0x5c90, 0x0, 0x0);
        gbc.writeMem(0x6abc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5b4d);
        EXPECT(gbc.pc(), 0x6abe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02BF
        gbc.setState(0x365e, 0x7214, 0xa900, 0x8a55, 0x5517, 0x2623, 0x0, 0x1);
        gbc.writeMem(0x365e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7214);
        EXPECT(gbc.pc(), 0x3660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02C0
        gbc.setState(0xdcd4, 0xc676, 0xf1f0, 0x92db, 0xb1df, 0xaa72, 0x1, 0x0);
        gbc.writeMem(0xdcd4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc676);
        EXPECT(gbc.pc(), 0xdcd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd4), 0xcb);
        EXPECT(gbc.readMem(0xdcd5), 0xaa);
        // CB AA 02C1
        gbc.setState(0x6287, 0x8829, 0x78b0, 0x5350, 0x5f6, 0x9d28, 0x0, 0x0);
        gbc.writeMem(0x6287, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8829);
        EXPECT(gbc.pc(), 0x6289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02C2
        gbc.setState(0xd4a2, 0xcbbf, 0xe9e0, 0x617c, 0x8ce5, 0x860a, 0x1, 0x0);
        gbc.writeMem(0xd4a2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcbbf);
        EXPECT(gbc.pc(), 0xd4a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a2), 0xcb);
        EXPECT(gbc.readMem(0xd4a3), 0xaa);
        // CB AA 02C3
        gbc.setState(0xbe9d, 0x9f0, 0x5ae0, 0x9457, 0xfaa6, 0x7bfb, 0x0, 0x1);
        gbc.writeMem(0xbe9d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9f0);
        EXPECT(gbc.pc(), 0xbe9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe9d), 0xcb);
        EXPECT(gbc.readMem(0xbe9e), 0xaa);
        // CB AA 02C4
        gbc.setState(0xe61d, 0x362, 0xdb60, 0x7798, 0x9806, 0xd7a3, 0x0, 0x0);
        gbc.writeMem(0xe61d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x362);
        EXPECT(gbc.pc(), 0xe61f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe61d), 0xcb);
        EXPECT(gbc.readMem(0xe61e), 0xaa);
        // CB AA 02C5
        gbc.setState(0xed97, 0x65b3, 0xe400, 0xb328, 0x79d, 0x8b04, 0x0, 0x0);
        gbc.writeMem(0xed97, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x65b3);
        EXPECT(gbc.pc(), 0xed99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed97), 0xcb);
        EXPECT(gbc.readMem(0xed98), 0xaa);
        // CB AA 02C6
        gbc.setState(0x8cfd, 0xfb34, 0x46a0, 0x2b9e, 0x67cc, 0x2ac9, 0x1, 0x1);
        gbc.writeMem(0x8cfd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfb34);
        EXPECT(gbc.pc(), 0x8cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cfd), 0xcb);
        EXPECT(gbc.readMem(0x8cfe), 0xaa);
        // CB AA 02C7
        gbc.setState(0x7b07, 0xef7b, 0x17d0, 0x44f3, 0x8937, 0xfce0, 0x1, 0x1);
        gbc.writeMem(0x7b07, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xef7b);
        EXPECT(gbc.pc(), 0x7b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02C8
        gbc.setState(0x9976, 0x22d5, 0x6910, 0x9304, 0xd589, 0x6ed0, 0x1, 0x1);
        gbc.writeMem(0x9976, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x22d5);
        EXPECT(gbc.pc(), 0x9978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9976), 0xcb);
        EXPECT(gbc.readMem(0x9977), 0xaa);
        // CB AA 02C9
        gbc.setState(0x39c2, 0x5f15, 0x8a00, 0xb727, 0x2a78, 0x4c07, 0x0, 0x0);
        gbc.writeMem(0x39c2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5f15);
        EXPECT(gbc.pc(), 0x39c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02CA
        gbc.setState(0x2be7, 0x2247, 0xe1c0, 0x395f, 0xad2, 0x80c6, 0x0, 0x0);
        gbc.writeMem(0x2be7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2247);
        EXPECT(gbc.pc(), 0x2be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02CC
        gbc.setState(0x8739, 0x268e, 0xc6a0, 0x4210, 0x1a38, 0xdc24, 0x0, 0x0);
        gbc.writeMem(0x8739, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x268e);
        EXPECT(gbc.pc(), 0x873b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8739), 0xcb);
        EXPECT(gbc.readMem(0x873a), 0xaa);
        // CB AA 02CD
        gbc.setState(0x947a, 0xa5dd, 0x11c0, 0x20f, 0x6c4f, 0x6140, 0x0, 0x1);
        gbc.writeMem(0x947a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa5dd);
        EXPECT(gbc.pc(), 0x947c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947a), 0xcb);
        EXPECT(gbc.readMem(0x947b), 0xaa);
        // CB AA 02CE
        gbc.setState(0x669d, 0x67da, 0x6d70, 0x12e6, 0x75db, 0x8ff6, 0x1, 0x1);
        gbc.writeMem(0x669d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x67da);
        EXPECT(gbc.pc(), 0x669f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02CF
        gbc.setState(0x3a77, 0xe96a, 0xb0d0, 0x5c72, 0x3628, 0x42a, 0x1, 0x0);
        gbc.writeMem(0x3a77, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe96a);
        EXPECT(gbc.pc(), 0x3a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02D0
        gbc.setState(0xefda, 0x6463, 0x8630, 0x8588, 0x9887, 0xabce, 0x0, 0x1);
        gbc.writeMem(0xefda, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6463);
        EXPECT(gbc.pc(), 0xefdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefda), 0xcb);
        EXPECT(gbc.readMem(0xefdb), 0xaa);
        // CB AA 02D1
        gbc.setState(0x55c3, 0x8467, 0xe400, 0xfef2, 0x370e, 0xca6a, 0x1, 0x0);
        gbc.writeMem(0x55c3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8467);
        EXPECT(gbc.pc(), 0x55c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02D2
        gbc.setState(0x3064, 0x8cac, 0x97d0, 0xbeda, 0xfdea, 0x40ca, 0x1, 0x0);
        gbc.writeMem(0x3064, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8cac);
        EXPECT(gbc.pc(), 0x3066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02D3
        gbc.setState(0x9e2, 0x9138, 0xb840, 0x2e27, 0x1b19, 0x5e59, 0x1, 0x1);
        gbc.writeMem(0x9e2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9138);
        EXPECT(gbc.pc(), 0x9e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02D4
        gbc.setState(0x53f2, 0x7bdd, 0x13e0, 0x1c0f, 0xd661, 0xb271, 0x1, 0x1);
        gbc.writeMem(0x53f2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7bdd);
        EXPECT(gbc.pc(), 0x53f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02D5
        gbc.setState(0xdb8, 0xf66c, 0x55f0, 0xd93b, 0x8e3c, 0xe4b7, 0x1, 0x0);
        gbc.writeMem(0xdb8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf66c);
        EXPECT(gbc.pc(), 0xdba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02D6
        gbc.setState(0xbb4, 0x1574, 0xf610, 0xbcb9, 0xeb2d, 0x1f8, 0x1, 0x0);
        gbc.writeMem(0xbb4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1574);
        EXPECT(gbc.pc(), 0xbb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02D7
        gbc.setState(0x8742, 0xf7fd, 0xd1c0, 0x1a97, 0x5531, 0xf08b, 0x1, 0x0);
        gbc.writeMem(0x8742, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf7fd);
        EXPECT(gbc.pc(), 0x8744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8742), 0xcb);
        EXPECT(gbc.readMem(0x8743), 0xaa);
        // CB AA 02D8
        gbc.setState(0xe1cf, 0xbd6d, 0x37f0, 0x4541, 0x6dab, 0xcee4, 0x1, 0x1);
        gbc.writeMem(0xe1cf, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbd6d);
        EXPECT(gbc.pc(), 0xe1d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1cf), 0xcb);
        EXPECT(gbc.readMem(0xe1d0), 0xaa);
        // CB AA 02D9
        gbc.setState(0xa999, 0xce74, 0x3940, 0x9116, 0x923b, 0xc32a, 0x1, 0x0);
        gbc.writeMem(0xa999, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xce74);
        EXPECT(gbc.pc(), 0xa99b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa999), 0xcb);
        EXPECT(gbc.readMem(0xa99a), 0xaa);
        // CB AA 02DA
        gbc.setState(0x33e4, 0x16b9, 0x7810, 0x8dad, 0xc618, 0x79, 0x0, 0x1);
        gbc.writeMem(0x33e4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x16b9);
        EXPECT(gbc.pc(), 0x33e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02DB
        gbc.setState(0x8896, 0xa7c1, 0x5be0, 0x9b33, 0x1fce, 0xf13a, 0x0, 0x1);
        gbc.writeMem(0x8896, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa7c1);
        EXPECT(gbc.pc(), 0x8898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8896), 0xcb);
        EXPECT(gbc.readMem(0x8897), 0xaa);
        // CB AA 02DC
        gbc.setState(0x6417, 0x2cc4, 0x32e0, 0xde0a, 0xa772, 0x9f79, 0x1, 0x0);
        gbc.writeMem(0x6417, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2cc4);
        EXPECT(gbc.pc(), 0x6419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02DD
        gbc.setState(0xa5f7, 0x5b75, 0xbae0, 0xa42c, 0xdf22, 0x50f9, 0x1, 0x0);
        gbc.writeMem(0xa5f7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5b75);
        EXPECT(gbc.pc(), 0xa5f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f7), 0xcb);
        EXPECT(gbc.readMem(0xa5f8), 0xaa);
        // CB AA 02DE
        gbc.setState(0x2072, 0x55a6, 0xf220, 0x1a5, 0xf9c6, 0xa42d, 0x1, 0x1);
        gbc.writeMem(0x2072, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x55a6);
        EXPECT(gbc.pc(), 0x2074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02DF
        gbc.setState(0xd079, 0x95, 0x1cc0, 0x346, 0xe4ce, 0xd932, 0x1, 0x1);
        gbc.writeMem(0xd079, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x95);
        EXPECT(gbc.pc(), 0xd07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd079), 0xcb);
        EXPECT(gbc.readMem(0xd07a), 0xaa);
        // CB AA 02E0
        gbc.setState(0x9dac, 0x4258, 0x610, 0x6cf4, 0xaea7, 0x1ef5, 0x0, 0x0);
        gbc.writeMem(0x9dac, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4258);
        EXPECT(gbc.pc(), 0x9dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dac), 0xcb);
        EXPECT(gbc.readMem(0x9dad), 0xaa);
        // CB AA 02E1
        gbc.setState(0x74c3, 0x64d4, 0xac00, 0xe535, 0x5436, 0x8515, 0x1, 0x1);
        gbc.writeMem(0x74c3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x64d4);
        EXPECT(gbc.pc(), 0x74c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02E2
        gbc.setState(0x38f3, 0x6f44, 0x4020, 0xe0e4, 0x2486, 0xc781, 0x1, 0x1);
        gbc.writeMem(0x38f3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6f44);
        EXPECT(gbc.pc(), 0x38f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02E3
        gbc.setState(0x9996, 0x10b7, 0xcf00, 0x8af8, 0x5260, 0x9273, 0x0, 0x0);
        gbc.writeMem(0x9996, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x10b7);
        EXPECT(gbc.pc(), 0x9998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9996), 0xcb);
        EXPECT(gbc.readMem(0x9997), 0xaa);
        // CB AA 02E4
        gbc.setState(0x5dc0, 0xccd, 0x4fe0, 0xa5a9, 0xd7e1, 0x790f, 0x1, 0x0);
        gbc.writeMem(0x5dc0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xccd);
        EXPECT(gbc.pc(), 0x5dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02E5
        gbc.setState(0xddfb, 0xd9b6, 0x7e30, 0x2995, 0x5728, 0x1554, 0x1, 0x0);
        gbc.writeMem(0xddfb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd9b6);
        EXPECT(gbc.pc(), 0xddfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddfb), 0xcb);
        EXPECT(gbc.readMem(0xddfc), 0xaa);
        // CB AA 02E6
        gbc.setState(0xc0e, 0x95c6, 0x1ff0, 0xdac2, 0xeb99, 0x5486, 0x0, 0x1);
        gbc.writeMem(0xc0e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x95c6);
        EXPECT(gbc.pc(), 0xc10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02E7
        gbc.setState(0xcdc1, 0xe806, 0x3510, 0x1ebf, 0x3630, 0x634d, 0x0, 0x0);
        gbc.writeMem(0xcdc1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe806);
        EXPECT(gbc.pc(), 0xcdc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc1), 0xcb);
        EXPECT(gbc.readMem(0xcdc2), 0xaa);
        // CB AA 02E9
        gbc.setState(0x1e6c, 0xc7bc, 0xa9c0, 0xe0c5, 0x724a, 0x9c8d, 0x1, 0x0);
        gbc.writeMem(0x1e6c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc7bc);
        EXPECT(gbc.pc(), 0x1e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02EA
        gbc.setState(0xdcd3, 0xaa88, 0xc9b0, 0x52b5, 0xef05, 0x4a97, 0x0, 0x0);
        gbc.writeMem(0xdcd3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xaa88);
        EXPECT(gbc.pc(), 0xdcd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd3), 0xcb);
        EXPECT(gbc.readMem(0xdcd4), 0xaa);
        // CB AA 02EB
        gbc.setState(0x7571, 0xde4c, 0x24d0, 0x2d7b, 0xba7f, 0xac94, 0x1, 0x0);
        gbc.writeMem(0x7571, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xde4c);
        EXPECT(gbc.pc(), 0x7573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02ED
        gbc.setState(0xa3d7, 0x7d27, 0x8db0, 0x33d1, 0xfd4f, 0xf159, 0x0, 0x1);
        gbc.writeMem(0xa3d7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7d27);
        EXPECT(gbc.pc(), 0xa3d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3d7), 0xcb);
        EXPECT(gbc.readMem(0xa3d8), 0xaa);
        // CB AA 02EE
        gbc.setState(0x1fb9, 0xf215, 0xde20, 0xa91a, 0x68fc, 0x40c2, 0x0, 0x0);
        gbc.writeMem(0x1fb9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf215);
        EXPECT(gbc.pc(), 0x1fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02EF
        gbc.setState(0xcc2b, 0x386b, 0x7e10, 0x18b4, 0xe819, 0xee6, 0x1, 0x1);
        gbc.writeMem(0xcc2b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x386b);
        EXPECT(gbc.pc(), 0xcc2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc2b), 0xcb);
        EXPECT(gbc.readMem(0xcc2c), 0xaa);
        // CB AA 02F0
        gbc.setState(0x2964, 0xecad, 0x3590, 0xa091, 0x1ea2, 0x6830, 0x0, 0x1);
        gbc.writeMem(0x2964, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xecad);
        EXPECT(gbc.pc(), 0x2966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02F1
        gbc.setState(0xbcae, 0x813e, 0x3ca0, 0x4e42, 0x1353, 0x3b5b, 0x1, 0x0);
        gbc.writeMem(0xbcae, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x813e);
        EXPECT(gbc.pc(), 0xbcb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcae), 0xcb);
        EXPECT(gbc.readMem(0xbcaf), 0xaa);
        // CB AA 02F2
        gbc.setState(0x4742, 0xcc81, 0x2070, 0x5893, 0x3be4, 0xe97b, 0x1, 0x0);
        gbc.writeMem(0x4742, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xcc81);
        EXPECT(gbc.pc(), 0x4744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02F3
        gbc.setState(0x5574, 0xa52f, 0xb9d0, 0x38df, 0xae50, 0xa5c9, 0x0, 0x1);
        gbc.writeMem(0x5574, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa52f);
        EXPECT(gbc.pc(), 0x5576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02F4
        gbc.setState(0xc9ce, 0x94f9, 0x9d40, 0xd128, 0xe325, 0x569f, 0x0, 0x1);
        gbc.writeMem(0xc9ce, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x94f9);
        EXPECT(gbc.pc(), 0xc9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ce), 0xcb);
        EXPECT(gbc.readMem(0xc9cf), 0xaa);
        // CB AA 02F5
        gbc.setState(0x7ccd, 0x9aae, 0xabd0, 0xc1a6, 0xa171, 0xf429, 0x1, 0x0);
        gbc.writeMem(0x7ccd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9aae);
        EXPECT(gbc.pc(), 0x7ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02F6
        gbc.setState(0x3da0, 0xb129, 0x4900, 0x5430, 0x2a39, 0xba03, 0x0, 0x1);
        gbc.writeMem(0x3da0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb129);
        EXPECT(gbc.pc(), 0x3da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02F7
        gbc.setState(0x41f0, 0xea69, 0x1740, 0x92e, 0x6581, 0xb31b, 0x0, 0x0);
        gbc.writeMem(0x41f0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xea69);
        EXPECT(gbc.pc(), 0x41f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02F8
        gbc.setState(0x4770, 0x7f52, 0x8d00, 0x8ff2, 0xa2bf, 0xe167, 0x1, 0x0);
        gbc.writeMem(0x4770, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7f52);
        EXPECT(gbc.pc(), 0x4772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02F9
        gbc.setState(0xdfc3, 0xbe66, 0x4330, 0xc37a, 0xa3e, 0x7876, 0x1, 0x0);
        gbc.writeMem(0xdfc3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbe66);
        EXPECT(gbc.pc(), 0xdfc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc3), 0xcb);
        EXPECT(gbc.readMem(0xdfc4), 0xaa);
        // CB AA 02FA
        gbc.setState(0x9129, 0x12b6, 0x840, 0x89c4, 0x502, 0xb983, 0x1, 0x0);
        gbc.writeMem(0x9129, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x12b6);
        EXPECT(gbc.pc(), 0x912b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9129), 0xcb);
        EXPECT(gbc.readMem(0x912a), 0xaa);
        // CB AA 02FB
        gbc.setState(0x141b, 0x16c8, 0xf400, 0x64e9, 0x1e55, 0x3ed3, 0x1, 0x1);
        gbc.writeMem(0x141b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x16c8);
        EXPECT(gbc.pc(), 0x141d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 02FC
        gbc.setState(0xd650, 0xa91c, 0xd710, 0xca1f, 0x544f, 0x3238, 0x0, 0x0);
        gbc.writeMem(0xd650, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa91c);
        EXPECT(gbc.pc(), 0xd652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd650), 0xcb);
        EXPECT(gbc.readMem(0xd651), 0xaa);
        // CB AA 02FD
        gbc.setState(0x2b07, 0x6525, 0xd490, 0xa72f, 0xbd, 0x85f0, 0x0, 0x1);
        gbc.writeMem(0x2b07, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6525);
        EXPECT(gbc.pc(), 0x2b09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 02FE
        gbc.setState(0xd4d3, 0x33ed, 0x6c30, 0x2340, 0x1ba1, 0x1938, 0x0, 0x1);
        gbc.writeMem(0xd4d3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x33ed);
        EXPECT(gbc.pc(), 0xd4d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d3), 0xcb);
        EXPECT(gbc.readMem(0xd4d4), 0xaa);
        // CB AA 02FF
        gbc.setState(0xb642, 0x43fc, 0x4690, 0xfb8c, 0x4d05, 0x1380, 0x1, 0x1);
        gbc.writeMem(0xb642, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x43fc);
        EXPECT(gbc.pc(), 0xb644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb642), 0xcb);
        EXPECT(gbc.readMem(0xb643), 0xaa);
        // CB AA 0300
        gbc.setState(0x6641, 0x4fc3, 0xcd60, 0xe7aa, 0x949, 0x4c2d, 0x1, 0x1);
        gbc.writeMem(0x6641, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4fc3);
        EXPECT(gbc.pc(), 0x6643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0301
        gbc.setState(0xae2a, 0x2667, 0x3910, 0x5a4c, 0x17dd, 0x9ff5, 0x1, 0x1);
        gbc.writeMem(0xae2a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2667);
        EXPECT(gbc.pc(), 0xae2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae2a), 0xcb);
        EXPECT(gbc.readMem(0xae2b), 0xaa);
        // CB AA 0302
        gbc.setState(0xe892, 0xee1d, 0xdee0, 0x59fb, 0xe0b9, 0x685f, 0x0, 0x0);
        gbc.writeMem(0xe892, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xee1d);
        EXPECT(gbc.pc(), 0xe894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe892), 0xcb);
        EXPECT(gbc.readMem(0xe893), 0xaa);
        // CB AA 0303
        gbc.setState(0xc8fc, 0x40b6, 0xfd20, 0xab27, 0x9f83, 0x2ce3, 0x0, 0x1);
        gbc.writeMem(0xc8fc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x40b6);
        EXPECT(gbc.pc(), 0xc8fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8fc), 0xcb);
        EXPECT(gbc.readMem(0xc8fd), 0xaa);
        // CB AA 0304
        gbc.setState(0xe066, 0x5b74, 0x9a0, 0x7546, 0xea1b, 0x48e1, 0x1, 0x1);
        gbc.writeMem(0xe066, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5b74);
        EXPECT(gbc.pc(), 0xe068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe066), 0xcb);
        EXPECT(gbc.readMem(0xe067), 0xaa);
        // CB AA 0305
        gbc.setState(0x5e07, 0x7655, 0xa3c0, 0x1d20, 0x2e80, 0x9d2f, 0x0, 0x0);
        gbc.writeMem(0x5e07, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7655);
        EXPECT(gbc.pc(), 0x5e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0306
        gbc.setState(0x96a7, 0x559e, 0x3f70, 0x3b10, 0x49e7, 0xf71b, 0x1, 0x0);
        gbc.writeMem(0x96a7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x559e);
        EXPECT(gbc.pc(), 0x96a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a7), 0xcb);
        EXPECT(gbc.readMem(0x96a8), 0xaa);
        // CB AA 0307
        gbc.setState(0x24f4, 0xb2bc, 0x1fa0, 0x4011, 0xb7eb, 0x49f7, 0x1, 0x1);
        gbc.writeMem(0x24f4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb2bc);
        EXPECT(gbc.pc(), 0x24f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0308
        gbc.setState(0xa0c6, 0x4385, 0xaac0, 0x1bf9, 0x7724, 0x5d49, 0x1, 0x0);
        gbc.writeMem(0xa0c6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4385);
        EXPECT(gbc.pc(), 0xa0c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c6), 0xcb);
        EXPECT(gbc.readMem(0xa0c7), 0xaa);
        // CB AA 0309
        gbc.setState(0x8365, 0x54b6, 0x71f0, 0x12d5, 0x485a, 0x57c1, 0x0, 0x0);
        gbc.writeMem(0x8365, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x54b6);
        EXPECT(gbc.pc(), 0x8367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8365), 0xcb);
        EXPECT(gbc.readMem(0x8366), 0xaa);
        // CB AA 030A
        gbc.setState(0xbe2f, 0xebe5, 0x2be0, 0x1093, 0x4599, 0x93f5, 0x1, 0x0);
        gbc.writeMem(0xbe2f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xebe5);
        EXPECT(gbc.pc(), 0xbe31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe2f), 0xcb);
        EXPECT(gbc.readMem(0xbe30), 0xaa);
        // CB AA 030B
        gbc.setState(0xaaf8, 0x2722, 0xe940, 0xd07e, 0x49b3, 0xbf88, 0x1, 0x1);
        gbc.writeMem(0xaaf8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2722);
        EXPECT(gbc.pc(), 0xaafa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf8), 0xcb);
        EXPECT(gbc.readMem(0xaaf9), 0xaa);
        // CB AA 030D
        gbc.setState(0x6e41, 0xfaac, 0xba60, 0x2659, 0x68a8, 0x549a, 0x0, 0x1);
        gbc.writeMem(0x6e41, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfaac);
        EXPECT(gbc.pc(), 0x6e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 030E
        gbc.setState(0xd563, 0x43cf, 0xc3d0, 0x1b27, 0x362, 0xa326, 0x0, 0x1);
        gbc.writeMem(0xd563, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x43cf);
        EXPECT(gbc.pc(), 0xd565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd563), 0xcb);
        EXPECT(gbc.readMem(0xd564), 0xaa);
        // CB AA 030F
        gbc.setState(0x5197, 0x4081, 0xe80, 0xb253, 0x5c44, 0x4286, 0x1, 0x0);
        gbc.writeMem(0x5197, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4081);
        EXPECT(gbc.pc(), 0x5199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0312
        gbc.setState(0xd173, 0xc240, 0xbb50, 0x480d, 0xbd85, 0x61fb, 0x1, 0x0);
        gbc.writeMem(0xd173, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc240);
        EXPECT(gbc.pc(), 0xd175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd173), 0xcb);
        EXPECT(gbc.readMem(0xd174), 0xaa);
        // CB AA 0313
        gbc.setState(0x400f, 0xc4c3, 0x2be0, 0xd6fe, 0xa618, 0x85e, 0x1, 0x0);
        gbc.writeMem(0x400f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc4c3);
        EXPECT(gbc.pc(), 0x4011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0314
        gbc.setState(0xecf, 0x8283, 0x510, 0xeaaa, 0xcdf2, 0x9c3, 0x0, 0x0);
        gbc.writeMem(0xecf, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8283);
        EXPECT(gbc.pc(), 0xed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0315
        gbc.setState(0x2723, 0x345e, 0x7b00, 0xf652, 0x30b7, 0xd3c, 0x0, 0x1);
        gbc.writeMem(0x2723, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x345e);
        EXPECT(gbc.pc(), 0x2725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0316
        gbc.setState(0x70db, 0x3db6, 0x2b0, 0xf1d8, 0xd226, 0x5668, 0x0, 0x0);
        gbc.writeMem(0x70db, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3db6);
        EXPECT(gbc.pc(), 0x70dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0317
        gbc.setState(0xb30e, 0x63b7, 0x5990, 0x75a2, 0xe4fd, 0x472d, 0x0, 0x1);
        gbc.writeMem(0xb30e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x63b7);
        EXPECT(gbc.pc(), 0xb310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb30e), 0xcb);
        EXPECT(gbc.readMem(0xb30f), 0xaa);
        // CB AA 0318
        gbc.setState(0xfe6, 0x29b2, 0x68a0, 0x34f6, 0xc357, 0xecc, 0x0, 0x0);
        gbc.writeMem(0xfe6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x29b2);
        EXPECT(gbc.pc(), 0xfe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0319
        gbc.setState(0x25b9, 0x42d1, 0x7e90, 0xa41d, 0x2132, 0xf423, 0x1, 0x1);
        gbc.writeMem(0x25b9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x42d1);
        EXPECT(gbc.pc(), 0x25bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 031A
        gbc.setState(0xc4e2, 0x9, 0xd840, 0xc58b, 0xd019, 0x2f59, 0x0, 0x1);
        gbc.writeMem(0xc4e2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9);
        EXPECT(gbc.pc(), 0xc4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e2), 0xcb);
        EXPECT(gbc.readMem(0xc4e3), 0xaa);
        // CB AA 031B
        gbc.setState(0xa6a6, 0xed93, 0xb120, 0xf9ba, 0xb875, 0x518a, 0x1, 0x1);
        gbc.writeMem(0xa6a6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xed93);
        EXPECT(gbc.pc(), 0xa6a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a6), 0xcb);
        EXPECT(gbc.readMem(0xa6a7), 0xaa);
        // CB AA 031C
        gbc.setState(0x1983, 0xa269, 0xb60, 0x14da, 0xe957, 0xe259, 0x0, 0x0);
        gbc.writeMem(0x1983, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa269);
        EXPECT(gbc.pc(), 0x1985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 031D
        gbc.setState(0xedc7, 0x1e61, 0x19f0, 0xfa46, 0xaa07, 0x6d20, 0x0, 0x1);
        gbc.writeMem(0xedc7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1e61);
        EXPECT(gbc.pc(), 0xedc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedc7), 0xcb);
        EXPECT(gbc.readMem(0xedc8), 0xaa);
        // CB AA 031E
        gbc.setState(0xcd70, 0xa52a, 0xe6d0, 0x762d, 0x9745, 0x47dd, 0x0, 0x0);
        gbc.writeMem(0xcd70, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa52a);
        EXPECT(gbc.pc(), 0xcd72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd70), 0xcb);
        EXPECT(gbc.readMem(0xcd71), 0xaa);
        // CB AA 031F
        gbc.setState(0x1d63, 0xef80, 0x5920, 0x995d, 0x858f, 0x92bf, 0x1, 0x1);
        gbc.writeMem(0x1d63, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xef80);
        EXPECT(gbc.pc(), 0x1d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0321
        gbc.setState(0x85f1, 0x917a, 0xb750, 0x91c7, 0xf9e, 0x60af, 0x1, 0x0);
        gbc.writeMem(0x85f1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x917a);
        EXPECT(gbc.pc(), 0x85f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f1), 0xcb);
        EXPECT(gbc.readMem(0x85f2), 0xaa);
        // CB AA 0322
        gbc.setState(0xdb1, 0xc244, 0xd060, 0x269f, 0x859e, 0x8375, 0x1, 0x0);
        gbc.writeMem(0xdb1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc244);
        EXPECT(gbc.pc(), 0xdb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0323
        gbc.setState(0x527a, 0xee5, 0x5200, 0xda80, 0xce1f, 0x3d07, 0x0, 0x1);
        gbc.writeMem(0x527a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xee5);
        EXPECT(gbc.pc(), 0x527c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0324
        gbc.setState(0x7898, 0xafc2, 0x2c80, 0x5ef3, 0x698, 0xefd3, 0x0, 0x0);
        gbc.writeMem(0x7898, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xafc2);
        EXPECT(gbc.pc(), 0x789a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0325
        gbc.setState(0x4ccc, 0xb603, 0x8460, 0x51d0, 0xc1b0, 0xcd8e, 0x1, 0x1);
        gbc.writeMem(0x4ccc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb603);
        EXPECT(gbc.pc(), 0x4cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0326
        gbc.setState(0x64c2, 0x149c, 0xbb50, 0xb077, 0xe92a, 0xd9d0, 0x0, 0x0);
        gbc.writeMem(0x64c2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x149c);
        EXPECT(gbc.pc(), 0x64c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0327
        gbc.setState(0xa60e, 0x8fee, 0x3ad0, 0x65b5, 0x3d1a, 0x1999, 0x1, 0x1);
        gbc.writeMem(0xa60e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8fee);
        EXPECT(gbc.pc(), 0xa610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60e), 0xcb);
        EXPECT(gbc.readMem(0xa60f), 0xaa);
        // CB AA 0328
        gbc.setState(0x7859, 0x2743, 0x8fd0, 0xe923, 0x6b45, 0xf8b, 0x0, 0x1);
        gbc.writeMem(0x7859, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2743);
        EXPECT(gbc.pc(), 0x785b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0329
        gbc.setState(0x7a25, 0x785b, 0x24e0, 0x72fd, 0xd34b, 0x86, 0x0, 0x0);
        gbc.writeMem(0x7a25, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x785b);
        EXPECT(gbc.pc(), 0x7a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 032A
        gbc.setState(0x42cc, 0x48b3, 0xec60, 0xcecc, 0xd5e, 0xb572, 0x0, 0x0);
        gbc.writeMem(0x42cc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x48b3);
        EXPECT(gbc.pc(), 0x42ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 032B
        gbc.setState(0x533e, 0x727c, 0x5730, 0x638c, 0x9086, 0xde81, 0x1, 0x1);
        gbc.writeMem(0x533e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x727c);
        EXPECT(gbc.pc(), 0x5340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 032C
        gbc.setState(0xd04c, 0xc08e, 0x6ca0, 0xd92b, 0x90a5, 0xde2e, 0x1, 0x1);
        gbc.writeMem(0xd04c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc08e);
        EXPECT(gbc.pc(), 0xd04e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd04c), 0xcb);
        EXPECT(gbc.readMem(0xd04d), 0xaa);
        // CB AA 032D
        gbc.setState(0x8bdc, 0x9531, 0x3de0, 0x53e4, 0xa757, 0x3a56, 0x0, 0x0);
        gbc.writeMem(0x8bdc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9531);
        EXPECT(gbc.pc(), 0x8bde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bdc), 0xcb);
        EXPECT(gbc.readMem(0x8bdd), 0xaa);
        // CB AA 032E
        gbc.setState(0x4d03, 0xee24, 0xe5a0, 0xc554, 0xa5a1, 0x2991, 0x1, 0x0);
        gbc.writeMem(0x4d03, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xee24);
        EXPECT(gbc.pc(), 0x4d05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 032F
        gbc.setState(0xa36d, 0x96cc, 0x9240, 0x3ac7, 0x9150, 0x8cf, 0x1, 0x1);
        gbc.writeMem(0xa36d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x96cc);
        EXPECT(gbc.pc(), 0xa36f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa36d), 0xcb);
        EXPECT(gbc.readMem(0xa36e), 0xaa);
        // CB AA 0331
        gbc.setState(0x7956, 0x9b37, 0x9df0, 0x131b, 0xeab3, 0x6a3c, 0x0, 0x0);
        gbc.writeMem(0x7956, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9b37);
        EXPECT(gbc.pc(), 0x7958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0332
        gbc.setState(0x931a, 0xa871, 0x300, 0x7065, 0x11f1, 0xc512, 0x1, 0x0);
        gbc.writeMem(0x931a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa871);
        EXPECT(gbc.pc(), 0x931c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x931a), 0xcb);
        EXPECT(gbc.readMem(0x931b), 0xaa);
        // CB AA 0333
        gbc.setState(0xaa24, 0xd495, 0x35e0, 0x4b25, 0xbcab, 0xb16d, 0x1, 0x0);
        gbc.writeMem(0xaa24, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd495);
        EXPECT(gbc.pc(), 0xaa26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa24), 0xcb);
        EXPECT(gbc.readMem(0xaa25), 0xaa);
        // CB AA 0334
        gbc.setState(0x7476, 0x7bc6, 0x4560, 0x606a, 0x3a4b, 0x9519, 0x0, 0x1);
        gbc.writeMem(0x7476, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7bc6);
        EXPECT(gbc.pc(), 0x7478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0335
        gbc.setState(0xecc3, 0x111c, 0x5d50, 0x12e3, 0xd9f0, 0xedf6, 0x1, 0x0);
        gbc.writeMem(0xecc3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x111c);
        EXPECT(gbc.pc(), 0xecc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc3), 0xcb);
        EXPECT(gbc.readMem(0xecc4), 0xaa);
        // CB AA 0336
        gbc.setState(0x3031, 0x6c9, 0xdc50, 0xd9bd, 0xcc92, 0x8614, 0x0, 0x1);
        gbc.writeMem(0x3031, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6c9);
        EXPECT(gbc.pc(), 0x3033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0337
        gbc.setState(0xcb5c, 0xad1c, 0x4010, 0xa9e1, 0xccf1, 0xdca1, 0x1, 0x0);
        gbc.writeMem(0xcb5c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xad1c);
        EXPECT(gbc.pc(), 0xcb5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb5c), 0xcb);
        EXPECT(gbc.readMem(0xcb5d), 0xaa);
        // CB AA 0338
        gbc.setState(0xb212, 0xc1ac, 0xd1b0, 0xdee8, 0xd2e6, 0xb269, 0x0, 0x1);
        gbc.writeMem(0xb212, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc1ac);
        EXPECT(gbc.pc(), 0xb214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb212), 0xcb);
        EXPECT(gbc.readMem(0xb213), 0xaa);
        // CB AA 0339
        gbc.setState(0x1961, 0x3135, 0xf7f0, 0x2174, 0xe7d2, 0x904b, 0x1, 0x1);
        gbc.writeMem(0x1961, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3135);
        EXPECT(gbc.pc(), 0x1963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 033A
        gbc.setState(0xa99, 0x763c, 0x9240, 0xd14a, 0xf820, 0x8a, 0x0, 0x0);
        gbc.writeMem(0xa99, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x763c);
        EXPECT(gbc.pc(), 0xa9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 033B
        gbc.setState(0x71cf, 0x374e, 0xd820, 0x384e, 0x18a, 0x7439, 0x1, 0x1);
        gbc.writeMem(0x71cf, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x374e);
        EXPECT(gbc.pc(), 0x71d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 033C
        gbc.setState(0x7345, 0xbdaf, 0x10f0, 0xe256, 0xbf02, 0x5bc3, 0x0, 0x1);
        gbc.writeMem(0x7345, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbdaf);
        EXPECT(gbc.pc(), 0x7347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 033D
        gbc.setState(0x2696, 0xeff2, 0xb6a0, 0xe3a8, 0xa443, 0xeb1f, 0x0, 0x1);
        gbc.writeMem(0x2696, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xeff2);
        EXPECT(gbc.pc(), 0x2698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 033E
        gbc.setState(0x46cc, 0x2bb8, 0xe500, 0x1729, 0xa1b3, 0xeb57, 0x1, 0x1);
        gbc.writeMem(0x46cc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2bb8);
        EXPECT(gbc.pc(), 0x46ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 033F
        gbc.setState(0x8088, 0xac5b, 0xf470, 0x8d9c, 0x6139, 0xac93, 0x0, 0x0);
        gbc.writeMem(0x8088, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xac5b);
        EXPECT(gbc.pc(), 0x808a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8088), 0xcb);
        EXPECT(gbc.readMem(0x8089), 0xaa);
        // CB AA 0340
        gbc.setState(0x6ff, 0x4337, 0xa680, 0x910e, 0x7633, 0xd937, 0x0, 0x0);
        gbc.writeMem(0x6ff, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4337);
        EXPECT(gbc.pc(), 0x701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0341
        gbc.setState(0x16ee, 0xbc27, 0x8040, 0xb63e, 0xee6a, 0x4499, 0x1, 0x0);
        gbc.writeMem(0x16ee, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbc27);
        EXPECT(gbc.pc(), 0x16f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0342
        gbc.setState(0x18c3, 0x3516, 0x6b80, 0x23fa, 0xa736, 0x2138, 0x1, 0x1);
        gbc.writeMem(0x18c3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3516);
        EXPECT(gbc.pc(), 0x18c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0344
        gbc.setState(0x914e, 0x5688, 0x5fe0, 0xcb0c, 0x651, 0x8059, 0x1, 0x0);
        gbc.writeMem(0x914e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5688);
        EXPECT(gbc.pc(), 0x9150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x914e), 0xcb);
        EXPECT(gbc.readMem(0x914f), 0xaa);
        // CB AA 0345
        gbc.setState(0x4f45, 0x3f4, 0xcf70, 0x60d2, 0xcfc4, 0x19e4, 0x0, 0x0);
        gbc.writeMem(0x4f45, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3f4);
        EXPECT(gbc.pc(), 0x4f47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0346
        gbc.setState(0x438f, 0x518d, 0xeb00, 0x7617, 0xdebd, 0x471c, 0x0, 0x1);
        gbc.writeMem(0x438f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x518d);
        EXPECT(gbc.pc(), 0x4391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0347
        gbc.setState(0x89cc, 0xe9b5, 0x14e0, 0xb506, 0x3f6d, 0x3e4, 0x0, 0x1);
        gbc.writeMem(0x89cc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe9b5);
        EXPECT(gbc.pc(), 0x89ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89cc), 0xcb);
        EXPECT(gbc.readMem(0x89cd), 0xaa);
        // CB AA 0349
        gbc.setState(0x3053, 0x4cd1, 0x2770, 0x5ab, 0xf9bd, 0x77f8, 0x0, 0x0);
        gbc.writeMem(0x3053, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4cd1);
        EXPECT(gbc.pc(), 0x3055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 034A
        gbc.setState(0xc069, 0x59c2, 0x93e0, 0x1198, 0xf879, 0xf349, 0x0, 0x1);
        gbc.writeMem(0xc069, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x59c2);
        EXPECT(gbc.pc(), 0xc06b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc069), 0xcb);
        EXPECT(gbc.readMem(0xc06a), 0xaa);
        // CB AA 034B
        gbc.setState(0x78ea, 0x4289, 0xb1b0, 0x77ad, 0xcb20, 0xc012, 0x0, 0x1);
        gbc.writeMem(0x78ea, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4289);
        EXPECT(gbc.pc(), 0x78ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 034C
        gbc.setState(0x13bb, 0xd78, 0x4eb0, 0xf3ce, 0xd38e, 0x9d34, 0x1, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd78);
        EXPECT(gbc.pc(), 0x13bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 034D
        gbc.setState(0x1bf8, 0xd4c6, 0x7f10, 0xef38, 0xa2f5, 0x3792, 0x1, 0x1);
        gbc.writeMem(0x1bf8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd4c6);
        EXPECT(gbc.pc(), 0x1bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 034E
        gbc.setState(0xcb87, 0x6abd, 0x7c40, 0x9bd5, 0xff55, 0x96ba, 0x0, 0x1);
        gbc.writeMem(0xcb87, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6abd);
        EXPECT(gbc.pc(), 0xcb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb87), 0xcb);
        EXPECT(gbc.readMem(0xcb88), 0xaa);
        // CB AA 034F
        gbc.setState(0xedcd, 0x2879, 0xa90, 0xd033, 0x6903, 0x96ec, 0x0, 0x0);
        gbc.writeMem(0xedcd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2879);
        EXPECT(gbc.pc(), 0xedcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedcd), 0xcb);
        EXPECT(gbc.readMem(0xedce), 0xaa);
        // CB AA 0350
        gbc.setState(0xa70c, 0x867b, 0x6b0, 0x7535, 0x7208, 0xbd20, 0x1, 0x1);
        gbc.writeMem(0xa70c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x867b);
        EXPECT(gbc.pc(), 0xa70e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70c), 0xcb);
        EXPECT(gbc.readMem(0xa70d), 0xaa);
        // CB AA 0351
        gbc.setState(0x6b55, 0xff5d, 0x6a00, 0x11f2, 0x6b31, 0x179, 0x1, 0x0);
        gbc.writeMem(0x6b55, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xff5d);
        EXPECT(gbc.pc(), 0x6b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0352
        gbc.setState(0xc08e, 0xcb7e, 0xb9f0, 0xf41d, 0xfca3, 0xfa55, 0x1, 0x0);
        gbc.writeMem(0xc08e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcb7e);
        EXPECT(gbc.pc(), 0xc090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc08e), 0xcb);
        EXPECT(gbc.readMem(0xc08f), 0xaa);
        // CB AA 0353
        gbc.setState(0x35f9, 0xea82, 0xa470, 0x6f8b, 0x6ed0, 0x21c0, 0x0, 0x0);
        gbc.writeMem(0x35f9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xea82);
        EXPECT(gbc.pc(), 0x35fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0354
        gbc.setState(0x5929, 0x8408, 0xb3f0, 0xed3b, 0xd47c, 0x67c7, 0x0, 0x1);
        gbc.writeMem(0x5929, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8408);
        EXPECT(gbc.pc(), 0x592b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0355
        gbc.setState(0x6a2b, 0xae17, 0x7080, 0xf625, 0x9f3, 0x289b, 0x0, 0x0);
        gbc.writeMem(0x6a2b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xae17);
        EXPECT(gbc.pc(), 0x6a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0356
        gbc.setState(0xc8b7, 0x948f, 0x35f0, 0xdc3, 0x7aa6, 0x24c, 0x1, 0x0);
        gbc.writeMem(0xc8b7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x948f);
        EXPECT(gbc.pc(), 0xc8b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b7), 0xcb);
        EXPECT(gbc.readMem(0xc8b8), 0xaa);
        // CB AA 0357
        gbc.setState(0x1d56, 0x1af5, 0x3950, 0xc268, 0x1686, 0x6bdd, 0x1, 0x0);
        gbc.writeMem(0x1d56, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1af5);
        EXPECT(gbc.pc(), 0x1d58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0358
        gbc.setState(0x7825, 0x4845, 0x60f0, 0x8386, 0xc8d4, 0x598b, 0x0, 0x0);
        gbc.writeMem(0x7825, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4845);
        EXPECT(gbc.pc(), 0x7827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 035A
        gbc.setState(0xad1a, 0x4915, 0x4cf0, 0x13f4, 0x9356, 0x1a9, 0x1, 0x1);
        gbc.writeMem(0xad1a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4915);
        EXPECT(gbc.pc(), 0xad1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad1a), 0xcb);
        EXPECT(gbc.readMem(0xad1b), 0xaa);
        // CB AA 035B
        gbc.setState(0xa6c0, 0xa822, 0xf680, 0xeba4, 0xe920, 0x4aed, 0x1, 0x0);
        gbc.writeMem(0xa6c0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa822);
        EXPECT(gbc.pc(), 0xa6c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c0), 0xcb);
        EXPECT(gbc.readMem(0xa6c1), 0xaa);
        // CB AA 035C
        gbc.setState(0xe170, 0x8e92, 0xb9d0, 0x64a9, 0x3f3f, 0x7df6, 0x0, 0x1);
        gbc.writeMem(0xe170, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8e92);
        EXPECT(gbc.pc(), 0xe172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe170), 0xcb);
        EXPECT(gbc.readMem(0xe171), 0xaa);
        // CB AA 035D
        gbc.setState(0x6fd3, 0x99be, 0xccb0, 0xdfec, 0x2f53, 0xdb71, 0x1, 0x1);
        gbc.writeMem(0x6fd3, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x99be);
        EXPECT(gbc.pc(), 0x6fd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 035E
        gbc.setState(0xee6f, 0x14b6, 0x1970, 0x2099, 0x9398, 0x743f, 0x0, 0x0);
        gbc.writeMem(0xee6f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x14b6);
        EXPECT(gbc.pc(), 0xee71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee6f), 0xcb);
        EXPECT(gbc.readMem(0xee70), 0xaa);
        // CB AA 035F
        gbc.setState(0x69fd, 0xd113, 0xb530, 0xa9d3, 0x601f, 0xd2cd, 0x0, 0x1);
        gbc.writeMem(0x69fd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd113);
        EXPECT(gbc.pc(), 0x69ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0360
        gbc.setState(0x56f8, 0x9431, 0x4850, 0x80ba, 0x5b5d, 0x4cc, 0x0, 0x0);
        gbc.writeMem(0x56f8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9431);
        EXPECT(gbc.pc(), 0x56fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0361
        gbc.setState(0x8822, 0x57cc, 0x4120, 0xb007, 0x859f, 0x72ec, 0x0, 0x0);
        gbc.writeMem(0x8822, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x57cc);
        EXPECT(gbc.pc(), 0x8824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8822), 0xcb);
        EXPECT(gbc.readMem(0x8823), 0xaa);
        // CB AA 0362
        gbc.setState(0x3c47, 0x6e28, 0x2fe0, 0xbe71, 0x4b9f, 0x5b38, 0x1, 0x0);
        gbc.writeMem(0x3c47, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6e28);
        EXPECT(gbc.pc(), 0x3c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0363
        gbc.setState(0x4d6, 0x7daf, 0x6b10, 0x48f7, 0xa413, 0x9ce9, 0x0, 0x0);
        gbc.writeMem(0x4d6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7daf);
        EXPECT(gbc.pc(), 0x4d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0364
        gbc.setState(0x523f, 0x1472, 0xe8d0, 0xea91, 0x4053, 0xf7c8, 0x1, 0x1);
        gbc.writeMem(0x523f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1472);
        EXPECT(gbc.pc(), 0x5241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0365
        gbc.setState(0x87e6, 0xc92a, 0xab50, 0x23f4, 0xe768, 0x61e3, 0x1, 0x1);
        gbc.writeMem(0x87e6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc92a);
        EXPECT(gbc.pc(), 0x87e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e6), 0xcb);
        EXPECT(gbc.readMem(0x87e7), 0xaa);
        // CB AA 0366
        gbc.setState(0xc5dd, 0x21be, 0x2bf0, 0xdbd4, 0x39de, 0xeea1, 0x0, 0x1);
        gbc.writeMem(0xc5dd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x21be);
        EXPECT(gbc.pc(), 0xc5df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5dd), 0xcb);
        EXPECT(gbc.readMem(0xc5de), 0xaa);
        // CB AA 0367
        gbc.setState(0x6e8c, 0xaa1b, 0xd9a0, 0x1435, 0x585a, 0x3e9e, 0x0, 0x0);
        gbc.writeMem(0x6e8c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xaa1b);
        EXPECT(gbc.pc(), 0x6e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0368
        gbc.setState(0x12bd, 0xc7fe, 0xfd20, 0xd4f1, 0x880f, 0xde38, 0x0, 0x0);
        gbc.writeMem(0x12bd, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc7fe);
        EXPECT(gbc.pc(), 0x12bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0369
        gbc.setState(0x3c82, 0xc0bd, 0xd1a0, 0x3918, 0x606b, 0xb8b5, 0x0, 0x1);
        gbc.writeMem(0x3c82, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc0bd);
        EXPECT(gbc.pc(), 0x3c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 036A
        gbc.setState(0xc62f, 0x9928, 0xf440, 0xfe0e, 0xae92, 0x11c8, 0x0, 0x1);
        gbc.writeMem(0xc62f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9928);
        EXPECT(gbc.pc(), 0xc631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62f), 0xcb);
        EXPECT(gbc.readMem(0xc630), 0xaa);
        // CB AA 036B
        gbc.setState(0xd27e, 0x22ee, 0xf880, 0x2462, 0x5d06, 0x56b6, 0x1, 0x0);
        gbc.writeMem(0xd27e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x22ee);
        EXPECT(gbc.pc(), 0xd280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27e), 0xcb);
        EXPECT(gbc.readMem(0xd27f), 0xaa);
        // CB AA 036C
        gbc.setState(0x26e9, 0x322f, 0x4c00, 0x610a, 0xc726, 0x319a, 0x1, 0x1);
        gbc.writeMem(0x26e9, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x322f);
        EXPECT(gbc.pc(), 0x26eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 036D
        gbc.setState(0xc954, 0xaca9, 0xdec0, 0x2a3d, 0xc943, 0x198b, 0x1, 0x0);
        gbc.writeMem(0xc954, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xaca9);
        EXPECT(gbc.pc(), 0xc956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc954), 0xcb);
        EXPECT(gbc.readMem(0xc955), 0xaa);
        // CB AA 036E
        gbc.setState(0xc669, 0x4531, 0x6780, 0x30b6, 0x42a6, 0x86fa, 0x1, 0x0);
        gbc.writeMem(0xc669, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4531);
        EXPECT(gbc.pc(), 0xc66b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc669), 0xcb);
        EXPECT(gbc.readMem(0xc66a), 0xaa);
        // CB AA 036F
        gbc.setState(0xcf26, 0x4812, 0x6580, 0xea5c, 0x3e71, 0xaa72, 0x0, 0x0);
        gbc.writeMem(0xcf26, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4812);
        EXPECT(gbc.pc(), 0xcf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf26), 0xcb);
        EXPECT(gbc.readMem(0xcf27), 0xaa);
        // CB AA 0370
        gbc.setState(0x1e7f, 0x9ff7, 0x93a0, 0xe917, 0x3c3a, 0x4dd1, 0x0, 0x0);
        gbc.writeMem(0x1e7f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9ff7);
        EXPECT(gbc.pc(), 0x1e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0371
        gbc.setState(0x28ba, 0x3f03, 0x81a0, 0x9e0b, 0xfb33, 0xca8c, 0x1, 0x1);
        gbc.writeMem(0x28ba, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3f03);
        EXPECT(gbc.pc(), 0x28bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0372
        gbc.setState(0xc873, 0xb632, 0xabe0, 0xf2b, 0x2d52, 0xa9ca, 0x0, 0x1);
        gbc.writeMem(0xc873, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb632);
        EXPECT(gbc.pc(), 0xc875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc873), 0xcb);
        EXPECT(gbc.readMem(0xc874), 0xaa);
        // CB AA 0373
        gbc.setState(0xa62b, 0xd738, 0x8650, 0xf571, 0xd854, 0x63f1, 0x1, 0x1);
        gbc.writeMem(0xa62b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd738);
        EXPECT(gbc.pc(), 0xa62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa62b), 0xcb);
        EXPECT(gbc.readMem(0xa62c), 0xaa);
        // CB AA 0375
        gbc.setState(0xb709, 0xfdbb, 0x43c0, 0x2f27, 0xf86b, 0x357, 0x0, 0x0);
        gbc.writeMem(0xb709, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfdbb);
        EXPECT(gbc.pc(), 0xb70b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb709), 0xcb);
        EXPECT(gbc.readMem(0xb70a), 0xaa);
        // CB AA 0376
        gbc.setState(0x39bf, 0xe845, 0x7340, 0x2f3d, 0xf76f, 0x1063, 0x0, 0x1);
        gbc.writeMem(0x39bf, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe845);
        EXPECT(gbc.pc(), 0x39c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0377
        gbc.setState(0x79aa, 0x318a, 0xfb80, 0x9bc6, 0x6bf8, 0x50cf, 0x1, 0x1);
        gbc.writeMem(0x79aa, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x318a);
        EXPECT(gbc.pc(), 0x79ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0378
        gbc.setState(0x491f, 0xc9, 0x4840, 0x3625, 0xf5a1, 0x518e, 0x0, 0x1);
        gbc.writeMem(0x491f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc9);
        EXPECT(gbc.pc(), 0x4921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 037A
        gbc.setState(0x3f09, 0x34d0, 0xf550, 0x7f5e, 0xc175, 0xf390, 0x0, 0x0);
        gbc.writeMem(0x3f09, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x34d0);
        EXPECT(gbc.pc(), 0x3f0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 037B
        gbc.setState(0x9de0, 0x7d4d, 0xd4b0, 0x17d8, 0xd117, 0xdef, 0x1, 0x1);
        gbc.writeMem(0x9de0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7d4d);
        EXPECT(gbc.pc(), 0x9de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de0), 0xcb);
        EXPECT(gbc.readMem(0x9de1), 0xaa);
        // CB AA 037C
        gbc.setState(0x62e, 0x1fd9, 0x6f60, 0xeb88, 0x9837, 0x95dd, 0x1, 0x1);
        gbc.writeMem(0x62e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1fd9);
        EXPECT(gbc.pc(), 0x630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 037D
        gbc.setState(0x3999, 0x8844, 0x2c20, 0x120c, 0x396a, 0x7d0f, 0x1, 0x0);
        gbc.writeMem(0x3999, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8844);
        EXPECT(gbc.pc(), 0x399b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 037E
        gbc.setState(0xda6d, 0xf492, 0xdff0, 0x5dfe, 0x3f11, 0x9a39, 0x1, 0x0);
        gbc.writeMem(0xda6d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf492);
        EXPECT(gbc.pc(), 0xda6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda6d), 0xcb);
        EXPECT(gbc.readMem(0xda6e), 0xaa);
        // CB AA 037F
        gbc.setState(0x4f86, 0xb11d, 0x1370, 0xcd8e, 0x13db, 0xedf5, 0x1, 0x1);
        gbc.writeMem(0x4f86, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb11d);
        EXPECT(gbc.pc(), 0x4f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0380
        gbc.setState(0x234a, 0x3b41, 0xb560, 0x673c, 0x5078, 0x7edd, 0x1, 0x0);
        gbc.writeMem(0x234a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3b41);
        EXPECT(gbc.pc(), 0x234c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0382
        gbc.setState(0x685d, 0x3e2d, 0x9270, 0x8e39, 0xcba1, 0xbdb0, 0x1, 0x1);
        gbc.writeMem(0x685d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3e2d);
        EXPECT(gbc.pc(), 0x685f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0384
        gbc.setState(0xb1fc, 0x70d2, 0x75e0, 0x41ff, 0x3eb8, 0x34f4, 0x0, 0x1);
        gbc.writeMem(0xb1fc, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x70d2);
        EXPECT(gbc.pc(), 0xb1fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1fc), 0xcb);
        EXPECT(gbc.readMem(0xb1fd), 0xaa);
        // CB AA 0385
        gbc.setState(0x2f89, 0x43d4, 0xf1d0, 0x792d, 0x5872, 0x434d, 0x1, 0x1);
        gbc.writeMem(0x2f89, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x43d4);
        EXPECT(gbc.pc(), 0x2f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0386
        gbc.setState(0x84a0, 0xc2f7, 0x6ca0, 0xed0, 0x700f, 0xba39, 0x1, 0x1);
        gbc.writeMem(0x84a0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc2f7);
        EXPECT(gbc.pc(), 0x84a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a0), 0xcb);
        EXPECT(gbc.readMem(0x84a1), 0xaa);
        // CB AA 0387
        gbc.setState(0x1368, 0xce9, 0xa290, 0x37e, 0x9057, 0x6204, 0x1, 0x0);
        gbc.writeMem(0x1368, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xce9);
        EXPECT(gbc.pc(), 0x136a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0388
        gbc.setState(0x9d76, 0x6d94, 0x34d0, 0x42c7, 0xfa3e, 0x4522, 0x0, 0x0);
        gbc.writeMem(0x9d76, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6d94);
        EXPECT(gbc.pc(), 0x9d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d76), 0xcb);
        EXPECT(gbc.readMem(0x9d77), 0xaa);
        // CB AA 0389
        gbc.setState(0x9923, 0x1f20, 0x49c0, 0x54b1, 0xc786, 0x7d9, 0x0, 0x0);
        gbc.writeMem(0x9923, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1f20);
        EXPECT(gbc.pc(), 0x9925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9923), 0xcb);
        EXPECT(gbc.readMem(0x9924), 0xaa);
        // CB AA 038A
        gbc.setState(0x5bb6, 0x9647, 0xf2d0, 0xec29, 0xf20c, 0x2fa, 0x1, 0x0);
        gbc.writeMem(0x5bb6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9647);
        EXPECT(gbc.pc(), 0x5bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 038B
        gbc.setState(0x63d, 0xa776, 0xdc10, 0x128c, 0x4c95, 0x17c0, 0x1, 0x0);
        gbc.writeMem(0x63d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa776);
        EXPECT(gbc.pc(), 0x63f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 038C
        gbc.setState(0x6a8e, 0x1872, 0x2030, 0xda90, 0x36b9, 0x452f, 0x1, 0x0);
        gbc.writeMem(0x6a8e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1872);
        EXPECT(gbc.pc(), 0x6a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 038D
        gbc.setState(0x48e, 0x288b, 0xbec0, 0x3e87, 0x8774, 0xe32d, 0x1, 0x1);
        gbc.writeMem(0x48e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x288b);
        EXPECT(gbc.pc(), 0x490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 038E
        gbc.setState(0x9565, 0x5502, 0x1d90, 0x9d6f, 0xa8f3, 0x23a, 0x1, 0x1);
        gbc.writeMem(0x9565, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5502);
        EXPECT(gbc.pc(), 0x9567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9565), 0xcb);
        EXPECT(gbc.readMem(0x9566), 0xaa);
        // CB AA 038F
        gbc.setState(0x5aa6, 0x174a, 0x25d0, 0x7002, 0xabf7, 0xc353, 0x0, 0x1);
        gbc.writeMem(0x5aa6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x174a);
        EXPECT(gbc.pc(), 0x5aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0391
        gbc.setState(0x4c7a, 0x6630, 0xa3f0, 0x41ed, 0xcdda, 0x7d0c, 0x0, 0x0);
        gbc.writeMem(0x4c7a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6630);
        EXPECT(gbc.pc(), 0x4c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0392
        gbc.setState(0x1693, 0xde64, 0x10f0, 0x25d3, 0x8602, 0x3c03, 0x1, 0x0);
        gbc.writeMem(0x1693, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xde64);
        EXPECT(gbc.pc(), 0x1695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0393
        gbc.setState(0xed6a, 0xb6f7, 0x14b0, 0x3b23, 0xa2cc, 0x156c, 0x1, 0x1);
        gbc.writeMem(0xed6a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb6f7);
        EXPECT(gbc.pc(), 0xed6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed6a), 0xcb);
        EXPECT(gbc.readMem(0xed6b), 0xaa);
        // CB AA 0394
        gbc.setState(0x5e76, 0x5bef, 0xf670, 0xf823, 0x57c5, 0x6c09, 0x0, 0x1);
        gbc.writeMem(0x5e76, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5bef);
        EXPECT(gbc.pc(), 0x5e78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 0395
        gbc.setState(0x965b, 0x61a6, 0x5890, 0x5824, 0x2092, 0x6e8c, 0x1, 0x1);
        gbc.writeMem(0x965b, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x61a6);
        EXPECT(gbc.pc(), 0x965d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x965b), 0xcb);
        EXPECT(gbc.readMem(0x965c), 0xaa);
        // CB AA 0396
        gbc.setState(0x2a86, 0xfe6c, 0x72e0, 0xc92e, 0x6db4, 0x106d, 0x0, 0x1);
        gbc.writeMem(0x2a86, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfe6c);
        EXPECT(gbc.pc(), 0x2a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0397
        gbc.setState(0x284, 0x68e3, 0xa7c0, 0x81f1, 0x8805, 0xfa6b, 0x1, 0x0);
        gbc.writeMem(0x284, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x68e3);
        EXPECT(gbc.pc(), 0x286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 0398
        gbc.setState(0xeda6, 0x1dbc, 0x8970, 0x2e18, 0x81ff, 0x8360, 0x0, 0x0);
        gbc.writeMem(0xeda6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1dbc);
        EXPECT(gbc.pc(), 0xeda8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda6), 0xcb);
        EXPECT(gbc.readMem(0xeda7), 0xaa);
        // CB AA 0399
        gbc.setState(0x491d, 0xebdf, 0x5230, 0xe211, 0x6ae1, 0xd68f, 0x0, 0x0);
        gbc.writeMem(0x491d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xebdf);
        EXPECT(gbc.pc(), 0x491f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 039A
        gbc.setState(0x9821, 0x3a7e, 0xc750, 0x4825, 0xc9dc, 0xd460, 0x0, 0x0);
        gbc.writeMem(0x9821, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3a7e);
        EXPECT(gbc.pc(), 0x9823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9821), 0xcb);
        EXPECT(gbc.readMem(0x9822), 0xaa);
        // CB AA 039B
        gbc.setState(0x7fe5, 0x9330, 0xf490, 0x361a, 0x140d, 0x19ce, 0x0, 0x0);
        gbc.writeMem(0x7fe5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9330);
        EXPECT(gbc.pc(), 0x7fe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 039C
        gbc.setState(0xbd72, 0xf87, 0x3ad0, 0x306f, 0xdf61, 0x7b55, 0x0, 0x0);
        gbc.writeMem(0xbd72, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf87);
        EXPECT(gbc.pc(), 0xbd74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd72), 0xcb);
        EXPECT(gbc.readMem(0xbd73), 0xaa);
        // CB AA 039E
        gbc.setState(0x1a34, 0x602a, 0x1e50, 0x4dd1, 0xb958, 0x24c5, 0x1, 0x0);
        gbc.writeMem(0x1a34, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x602a);
        EXPECT(gbc.pc(), 0x1a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03A0
        gbc.setState(0xbbe6, 0x6574, 0x8a0, 0x4f39, 0xf4a2, 0x739a, 0x1, 0x1);
        gbc.writeMem(0xbbe6, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6574);
        EXPECT(gbc.pc(), 0xbbe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe6), 0xcb);
        EXPECT(gbc.readMem(0xbbe7), 0xaa);
        // CB AA 03A1
        gbc.setState(0x832, 0x44d5, 0x9a50, 0xdbf1, 0x2e3c, 0x1f3e, 0x0, 0x0);
        gbc.writeMem(0x832, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x44d5);
        EXPECT(gbc.pc(), 0x834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03A2
        gbc.setState(0x722d, 0x7938, 0xf670, 0xbb8d, 0xee10, 0xcf66, 0x0, 0x0);
        gbc.writeMem(0x722d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7938);
        EXPECT(gbc.pc(), 0x722f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03A3
        gbc.setState(0xd9b1, 0xa2d1, 0x3b00, 0xe3e0, 0xd526, 0x1fa1, 0x1, 0x1);
        gbc.writeMem(0xd9b1, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa2d1);
        EXPECT(gbc.pc(), 0xd9b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b1), 0xcb);
        EXPECT(gbc.readMem(0xd9b2), 0xaa);
        // CB AA 03A4
        gbc.setState(0x63f7, 0x8725, 0x440, 0xa8a3, 0xbf69, 0x6d43, 0x0, 0x0);
        gbc.writeMem(0x63f7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8725);
        EXPECT(gbc.pc(), 0x63f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03A5
        gbc.setState(0xa277, 0x2ce, 0x6520, 0x44ce, 0x2ad2, 0x1e0e, 0x0, 0x1);
        gbc.writeMem(0xa277, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2ce);
        EXPECT(gbc.pc(), 0xa279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa277), 0xcb);
        EXPECT(gbc.readMem(0xa278), 0xaa);
        // CB AA 03A6
        gbc.setState(0x9e13, 0x4138, 0xef40, 0xb70f, 0x8788, 0xd73c, 0x1, 0x0);
        gbc.writeMem(0x9e13, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4138);
        EXPECT(gbc.pc(), 0x9e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e13), 0xcb);
        EXPECT(gbc.readMem(0x9e14), 0xaa);
        // CB AA 03A7
        gbc.setState(0x12, 0x2b70, 0x5660, 0xeab7, 0x3432, 0xc199, 0x0, 0x0);
        gbc.writeMem(0x12, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2b70);
        EXPECT(gbc.pc(), 0x14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03A8
        gbc.setState(0xa210, 0x7941, 0xbf30, 0x6674, 0x9e21, 0xf8c0, 0x1, 0x1);
        gbc.writeMem(0xa210, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7941);
        EXPECT(gbc.pc(), 0xa212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa210), 0xcb);
        EXPECT(gbc.readMem(0xa211), 0xaa);
        // CB AA 03A9
        gbc.setState(0xb2b4, 0x22ee, 0x1090, 0xf7e0, 0x324b, 0x45cb, 0x1, 0x1);
        gbc.writeMem(0xb2b4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x22ee);
        EXPECT(gbc.pc(), 0xb2b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b4), 0xcb);
        EXPECT(gbc.readMem(0xb2b5), 0xaa);
        // CB AA 03AA
        gbc.setState(0xa79d, 0xd63e, 0x15d0, 0xa005, 0x1966, 0x5824, 0x0, 0x1);
        gbc.writeMem(0xa79d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd63e);
        EXPECT(gbc.pc(), 0xa79f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79d), 0xcb);
        EXPECT(gbc.readMem(0xa79e), 0xaa);
        // CB AA 03AB
        gbc.setState(0x9edb, 0xcfe3, 0x62e0, 0x3bc0, 0xf126, 0x22c3, 0x0, 0x1);
        gbc.writeMem(0x9edb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xcfe3);
        EXPECT(gbc.pc(), 0x9edd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9edb), 0xcb);
        EXPECT(gbc.readMem(0x9edc), 0xaa);
        // CB AA 03AC
        gbc.setState(0xc38, 0xa4bb, 0x660, 0xf02, 0x5f70, 0x3152, 0x1, 0x1);
        gbc.writeMem(0xc38, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa4bb);
        EXPECT(gbc.pc(), 0xc3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03AD
        gbc.setState(0xce9c, 0xe00, 0x5ad0, 0xa7f7, 0x41a3, 0x5b3, 0x1, 0x0);
        gbc.writeMem(0xce9c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe00);
        EXPECT(gbc.pc(), 0xce9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce9c), 0xcb);
        EXPECT(gbc.readMem(0xce9d), 0xaa);
        // CB AA 03AE
        gbc.setState(0x669e, 0x356a, 0x78c0, 0x372b, 0xbca9, 0x9cf8, 0x0, 0x1);
        gbc.writeMem(0x669e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x356a);
        EXPECT(gbc.pc(), 0x66a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03AF
        gbc.setState(0xa662, 0xe9f0, 0x4eb0, 0xc5cf, 0x3fdb, 0x234f, 0x0, 0x1);
        gbc.writeMem(0xa662, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe9f0);
        EXPECT(gbc.pc(), 0xa664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa662), 0xcb);
        EXPECT(gbc.readMem(0xa663), 0xaa);
        // CB AA 03B0
        gbc.setState(0x6722, 0xed0d, 0x5bb0, 0x54a1, 0xf6eb, 0x4e8f, 0x1, 0x1);
        gbc.writeMem(0x6722, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xed0d);
        EXPECT(gbc.pc(), 0x6724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03B1
        gbc.setState(0x4e64, 0xae10, 0x2b80, 0xe355, 0x7f85, 0xfbb3, 0x0, 0x0);
        gbc.writeMem(0x4e64, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xae10);
        EXPECT(gbc.pc(), 0x4e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03B2
        gbc.setState(0xc50a, 0x16dc, 0xdd0, 0x653e, 0xf203, 0xebe, 0x0, 0x1);
        gbc.writeMem(0xc50a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x16dc);
        EXPECT(gbc.pc(), 0xc50c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50a), 0xcb);
        EXPECT(gbc.readMem(0xc50b), 0xaa);
        // CB AA 03B4
        gbc.setState(0xbfc5, 0x1dbb, 0x46c0, 0x892a, 0xab73, 0x5027, 0x1, 0x1);
        gbc.writeMem(0xbfc5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1dbb);
        EXPECT(gbc.pc(), 0xbfc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc5), 0xcb);
        EXPECT(gbc.readMem(0xbfc6), 0xaa);
        // CB AA 03B5
        gbc.setState(0xe4e2, 0x2420, 0xddb0, 0x8eb1, 0xa62e, 0x3504, 0x0, 0x0);
        gbc.writeMem(0xe4e2, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2420);
        EXPECT(gbc.pc(), 0xe4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4e2), 0xcb);
        EXPECT(gbc.readMem(0xe4e3), 0xaa);
        // CB AA 03B6
        gbc.setState(0x34d5, 0xe12d, 0x42c0, 0xd904, 0x69cb, 0x374c, 0x0, 0x1);
        gbc.writeMem(0x34d5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe12d);
        EXPECT(gbc.pc(), 0x34d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03B7
        gbc.setState(0x1e83, 0xcc7f, 0x3570, 0x1e9, 0x8ce8, 0x35f0, 0x1, 0x0);
        gbc.writeMem(0x1e83, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcc7f);
        EXPECT(gbc.pc(), 0x1e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03B8
        gbc.setState(0x59be, 0xdecf, 0xf020, 0x15fb, 0x5a26, 0x2d9c, 0x0, 0x1);
        gbc.writeMem(0x59be, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdecf);
        EXPECT(gbc.pc(), 0x59c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03B9
        gbc.setState(0x5b97, 0x8326, 0x8840, 0xdc14, 0xa180, 0xb7b7, 0x0, 0x1);
        gbc.writeMem(0x5b97, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8326);
        EXPECT(gbc.pc(), 0x5b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03BA
        gbc.setState(0xadfe, 0x14b2, 0x1390, 0x85dc, 0xb04f, 0xf47d, 0x0, 0x0);
        gbc.writeMem(0xadfe, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x14b2);
        EXPECT(gbc.pc(), 0xae00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadfe), 0xcb);
        EXPECT(gbc.readMem(0xadff), 0xaa);
        // CB AA 03BB
        gbc.setState(0xd26, 0xf207, 0x8700, 0x3aeb, 0x1601, 0xc513, 0x0, 0x0);
        gbc.writeMem(0xd26, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf207);
        EXPECT(gbc.pc(), 0xd28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03BD
        gbc.setState(0xa3d5, 0xcfc4, 0xbe00, 0xaa42, 0xb47f, 0x98c3, 0x1, 0x0);
        gbc.writeMem(0xa3d5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xcfc4);
        EXPECT(gbc.pc(), 0xa3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d5), 0xcb);
        EXPECT(gbc.readMem(0xa3d6), 0xaa);
        // CB AA 03BE
        gbc.setState(0x87b0, 0x73db, 0x1230, 0x4fe8, 0x15d6, 0x3cac, 0x1, 0x1);
        gbc.writeMem(0x87b0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x73db);
        EXPECT(gbc.pc(), 0x87b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87b0), 0xcb);
        EXPECT(gbc.readMem(0x87b1), 0xaa);
        // CB AA 03BF
        gbc.setState(0x304d, 0xa6e5, 0x7c50, 0xeca0, 0x8598, 0x4265, 0x0, 0x0);
        gbc.writeMem(0x304d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa6e5);
        EXPECT(gbc.pc(), 0x304f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03C0
        gbc.setState(0x7082, 0xb45e, 0x94d0, 0x5538, 0xb73d, 0xe9f9, 0x0, 0x0);
        gbc.writeMem(0x7082, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb45e);
        EXPECT(gbc.pc(), 0x7084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03C1
        gbc.setState(0x167c, 0x8d12, 0x8eb0, 0xb213, 0x1d19, 0xddb2, 0x1, 0x0);
        gbc.writeMem(0x167c, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8d12);
        EXPECT(gbc.pc(), 0x167e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03C2
        gbc.setState(0x4a58, 0x1654, 0x4080, 0xacfb, 0x86cb, 0x54bb, 0x0, 0x1);
        gbc.writeMem(0x4a58, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1654);
        EXPECT(gbc.pc(), 0x4a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03C3
        gbc.setState(0x8b64, 0xbb50, 0x9a40, 0xed19, 0xd1a1, 0x32d8, 0x1, 0x1);
        gbc.writeMem(0x8b64, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbb50);
        EXPECT(gbc.pc(), 0x8b66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b64), 0xcb);
        EXPECT(gbc.readMem(0x8b65), 0xaa);
        // CB AA 03C4
        gbc.setState(0x817f, 0xd208, 0x6540, 0xc6cc, 0x94a4, 0xe647, 0x1, 0x1);
        gbc.writeMem(0x817f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd208);
        EXPECT(gbc.pc(), 0x8181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817f), 0xcb);
        EXPECT(gbc.readMem(0x8180), 0xaa);
        // CB AA 03C5
        gbc.setState(0x8306, 0x8bfa, 0xddd0, 0xc1ef, 0xc04f, 0xce29, 0x0, 0x0);
        gbc.writeMem(0x8306, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8bfa);
        EXPECT(gbc.pc(), 0x8308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8306), 0xcb);
        EXPECT(gbc.readMem(0x8307), 0xaa);
        // CB AA 03C6
        gbc.setState(0xdf90, 0x2f9c, 0xba70, 0xc963, 0xa5d5, 0x795d, 0x1, 0x1);
        gbc.writeMem(0xdf90, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2f9c);
        EXPECT(gbc.pc(), 0xdf92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf90), 0xcb);
        EXPECT(gbc.readMem(0xdf91), 0xaa);
        // CB AA 03C7
        gbc.setState(0x5d53, 0x4732, 0x4b10, 0x6152, 0xc4dd, 0x80ee, 0x1, 0x1);
        gbc.writeMem(0x5d53, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4732);
        EXPECT(gbc.pc(), 0x5d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03C8
        gbc.setState(0x8cea, 0x4139, 0xbad0, 0xac22, 0xdc04, 0x766c, 0x1, 0x0);
        gbc.writeMem(0x8cea, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4139);
        EXPECT(gbc.pc(), 0x8cec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cea), 0xcb);
        EXPECT(gbc.readMem(0x8ceb), 0xaa);
        // CB AA 03C9
        gbc.setState(0x201e, 0xfcc4, 0x94b0, 0x7552, 0x2f89, 0x1f20, 0x1, 0x1);
        gbc.writeMem(0x201e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfcc4);
        EXPECT(gbc.pc(), 0x2020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03CA
        gbc.setState(0x8b6e, 0x3444, 0x5700, 0x6d76, 0x79af, 0x925d, 0x0, 0x0);
        gbc.writeMem(0x8b6e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3444);
        EXPECT(gbc.pc(), 0x8b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b6e), 0xcb);
        EXPECT(gbc.readMem(0x8b6f), 0xaa);
        // CB AA 03CB
        gbc.setState(0x7ceb, 0xcb42, 0x7030, 0xd0bb, 0x1491, 0x8dc7, 0x1, 0x1);
        gbc.writeMem(0x7ceb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcb42);
        EXPECT(gbc.pc(), 0x7ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03CC
        gbc.setState(0xa9de, 0x21bd, 0xad70, 0xa291, 0x6fcd, 0x4936, 0x0, 0x0);
        gbc.writeMem(0xa9de, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x21bd);
        EXPECT(gbc.pc(), 0xa9e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9de), 0xcb);
        EXPECT(gbc.readMem(0xa9df), 0xaa);
        // CB AA 03CD
        gbc.setState(0x9e55, 0xdccf, 0xc3c0, 0x3b76, 0x39df, 0x357e, 0x1, 0x0);
        gbc.writeMem(0x9e55, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdccf);
        EXPECT(gbc.pc(), 0x9e57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e55), 0xcb);
        EXPECT(gbc.readMem(0x9e56), 0xaa);
        // CB AA 03CE
        gbc.setState(0xb81d, 0xac75, 0xe880, 0xb79a, 0x14ed, 0x37bd, 0x0, 0x1);
        gbc.writeMem(0xb81d, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xac75);
        EXPECT(gbc.pc(), 0xb81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb81d), 0xcb);
        EXPECT(gbc.readMem(0xb81e), 0xaa);
        // CB AA 03CF
        gbc.setState(0x8b8a, 0xa030, 0x47f0, 0xd2b5, 0x8ce7, 0xd28a, 0x1, 0x1);
        gbc.writeMem(0x8b8a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa030);
        EXPECT(gbc.pc(), 0x8b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8a), 0xcb);
        EXPECT(gbc.readMem(0x8b8b), 0xaa);
        // CB AA 03D0
        gbc.setState(0xc212, 0xaeb0, 0x1c70, 0xbda1, 0xcaad, 0x4702, 0x0, 0x0);
        gbc.writeMem(0xc212, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xaeb0);
        EXPECT(gbc.pc(), 0xc214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc212), 0xcb);
        EXPECT(gbc.readMem(0xc213), 0xaa);
        // CB AA 03D1
        gbc.setState(0x6ba8, 0x9f59, 0xe660, 0x3e7d, 0x4386, 0x5c6c, 0x1, 0x1);
        gbc.writeMem(0x6ba8, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9f59);
        EXPECT(gbc.pc(), 0x6baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03D2
        gbc.setState(0x8a34, 0xd492, 0xc5c0, 0xce3b, 0x7144, 0xed32, 0x1, 0x1);
        gbc.writeMem(0x8a34, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd492);
        EXPECT(gbc.pc(), 0x8a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a34), 0xcb);
        EXPECT(gbc.readMem(0x8a35), 0xaa);
        // CB AA 03D3
        gbc.setState(0xc936, 0xfc68, 0x1ee0, 0x8f1b, 0xf0bc, 0x909, 0x0, 0x0);
        gbc.writeMem(0xc936, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xfc68);
        EXPECT(gbc.pc(), 0xc938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc936), 0xcb);
        EXPECT(gbc.readMem(0xc937), 0xaa);
        // CB AA 03D4
        gbc.setState(0xb05e, 0xade, 0xbef0, 0xa1a6, 0x418f, 0x79fa, 0x1, 0x1);
        gbc.writeMem(0xb05e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xade);
        EXPECT(gbc.pc(), 0xb060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05e), 0xcb);
        EXPECT(gbc.readMem(0xb05f), 0xaa);
        // CB AA 03D5
        gbc.setState(0xc35, 0xe361, 0xb530, 0x82ac, 0x14c, 0x4288, 0x1, 0x1);
        gbc.writeMem(0xc35, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe361);
        EXPECT(gbc.pc(), 0xc37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03D6
        gbc.setState(0x8838, 0x41d0, 0x18e0, 0xac3, 0x1124, 0xcb78, 0x0, 0x0);
        gbc.writeMem(0x8838, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x41d0);
        EXPECT(gbc.pc(), 0x883a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8838), 0xcb);
        EXPECT(gbc.readMem(0x8839), 0xaa);
        // CB AA 03D7
        gbc.setState(0x65c0, 0x9ce3, 0xaac0, 0x3dec, 0x4bc4, 0xe26d, 0x0, 0x0);
        gbc.writeMem(0x65c0, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9ce3);
        EXPECT(gbc.pc(), 0x65c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03D8
        gbc.setState(0x358f, 0x2e34, 0x450, 0xaf61, 0xfb70, 0x608f, 0x0, 0x1);
        gbc.writeMem(0x358f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2e34);
        EXPECT(gbc.pc(), 0x3591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03D9
        gbc.setState(0x4fbb, 0x93de, 0xd10, 0x41ac, 0x36e8, 0x2f2b, 0x1, 0x1);
        gbc.writeMem(0x4fbb, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x93de);
        EXPECT(gbc.pc(), 0x4fbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03DA
        gbc.setState(0x139e, 0x1f06, 0x9010, 0x5f92, 0x3a23, 0x718e, 0x1, 0x1);
        gbc.writeMem(0x139e, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1f06);
        EXPECT(gbc.pc(), 0x13a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03DB
        gbc.setState(0x6dfa, 0x5669, 0x94e0, 0x9ed, 0xbb29, 0x45f9, 0x0, 0x0);
        gbc.writeMem(0x6dfa, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5669);
        EXPECT(gbc.pc(), 0x6dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03DC
        gbc.setState(0xea5f, 0xd667, 0xf7a0, 0xb0fd, 0x8423, 0x3a5f, 0x0, 0x1);
        gbc.writeMem(0xea5f, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd667);
        EXPECT(gbc.pc(), 0xea61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5f), 0xcb);
        EXPECT(gbc.readMem(0xea60), 0xaa);
        // CB AA 03DD
        gbc.setState(0x8742, 0xcd32, 0x1cd0, 0xf526, 0x5c32, 0xdd79, 0x1, 0x1);
        gbc.writeMem(0x8742, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcd32);
        EXPECT(gbc.pc(), 0x8744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8742), 0xcb);
        EXPECT(gbc.readMem(0x8743), 0xaa);
        // CB AA 03DE
        gbc.setState(0x43c5, 0x16b7, 0x9e30, 0x32ed, 0x65ca, 0xe7c4, 0x1, 0x1);
        gbc.writeMem(0x43c5, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x16b7);
        EXPECT(gbc.pc(), 0x43c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03DF
        gbc.setState(0x7c05, 0xc6e3, 0xfaf0, 0x156e, 0xcba, 0x59c2, 0x1, 0x0);
        gbc.writeMem(0x7c05, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc6e3);
        EXPECT(gbc.pc(), 0x7c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03E0
        gbc.setState(0x29e7, 0x8427, 0xf8a0, 0x62f8, 0x73c5, 0xcd17, 0x1, 0x0);
        gbc.writeMem(0x29e7, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8427);
        EXPECT(gbc.pc(), 0x29e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03E1
        gbc.setState(0xaf56, 0x58d8, 0xb560, 0x11e2, 0xee46, 0xf0ee, 0x0, 0x1);
        gbc.writeMem(0xaf56, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x58d8);
        EXPECT(gbc.pc(), 0xaf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf56), 0xcb);
        EXPECT(gbc.readMem(0xaf57), 0xaa);
        // CB AA 03E2
        gbc.setState(0xb0ec, 0x6bd9, 0x5d20, 0xd9ae, 0xec8a, 0xbe23, 0x0, 0x1);
        gbc.writeMem(0xb0ec, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6bd9);
        EXPECT(gbc.pc(), 0xb0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ec), 0xcb);
        EXPECT(gbc.readMem(0xb0ed), 0xaa);
        // CB AA 03E3
        gbc.setState(0x3546, 0x4e90, 0x1fd0, 0xa3ed, 0x172f, 0xff65, 0x1, 0x1);
        gbc.writeMem(0x3546, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4e90);
        EXPECT(gbc.pc(), 0x3548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03E4
        gbc.setState(0x401a, 0x2592, 0x5790, 0x6349, 0x27ec, 0xbf88, 0x1, 0x1);
        gbc.writeMem(0x401a, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2592);
        EXPECT(gbc.pc(), 0x401c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AA 03E5
        gbc.setState(0x2d78, 0xbf05, 0x80a0, 0xa2cf, 0x609b, 0x3a22, 0x0, 0x1);
        gbc.writeMem(0x2d78, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbf05);
        EXPECT(gbc.pc(), 0x2d7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AA 03E6
        gbc.setState(0xe047, 0x5a09, 0x6150, 0xf467, 0x30ae, 0x7de0, 0x1, 0x1);
        gbc.writeMem(0xe047, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5a09);
        EXPECT(gbc.pc(), 0xe049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe047), 0xcb);
        EXPECT(gbc.readMem(0xe048), 0xaa);
        // CB AA 03E7
        gbc.setState(0xe2f4, 0xa762, 0x800, 0x3452, 0xb10c, 0xbb56, 0x0, 0x1);
        gbc.writeMem(0xe2f4, { 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa762);
        EXPECT(gbc.pc(), 0xe2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f4), 0xcb);
        EXPECT(gbc.readMem(0xe2f5), 0xaa);
    }
}
#endif
