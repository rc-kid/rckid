    TEST(gbcemu, opcode_2d) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 2D 0000
        gbc.setState(0x891d, 0xcddf, 0xadc0, 0x7010, 0xc2c8, 0xd713, 0x1, 0x0);
        gbc.writeMem(0x891d, { 0x2d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcddf, gbc.sp());
        EXPECT(0x891e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x891d));
        // 2D 0001
        gbc.setState(0xa056, 0x337d, 0xcd20, 0xf714, 0xea8, 0x527f, 0x1, 0x1);
        gbc.writeMem(0xa056, { 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x337d, gbc.sp());
        EXPECT(0xa057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa056));
        // 2D 0002
        gbc.setState(0x94d7, 0xfdd8, 0x8de0, 0xf4dc, 0xf78, 0xe2fa, 0x1, 0x0);
        gbc.writeMem(0x94d7, { 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfdd8, gbc.sp());
        EXPECT(0x94d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x94d7));
        // 2D 0003
        gbc.setState(0x55ad, 0x6340, 0xc640, 0xb2a3, 0xb368, 0x13d7, 0x1, 0x1);
        gbc.writeMem(0x55ad, { 0x2d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6340, gbc.sp());
        EXPECT(0x55ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0004
        gbc.setState(0x1ad3, 0xe2d8, 0x1c00, 0xcc94, 0xf24f, 0x9872, 0x1, 0x0);
        gbc.writeMem(0x1ad3, { 0x2d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe2d8, gbc.sp());
        EXPECT(0x1ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0005
        gbc.setState(0xd528, 0x779a, 0x6a40, 0xe47f, 0x18af, 0x2cea, 0x0, 0x0);
        gbc.writeMem(0xd528, { 0x2d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x779a, gbc.sp());
        EXPECT(0xd529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd528));
        // 2D 0006
        gbc.setState(0x2c51, 0x4be6, 0x2f70, 0x6dc6, 0x9856, 0x8b18, 0x0, 0x0);
        gbc.writeMem(0x2c51, { 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4be6, gbc.sp());
        EXPECT(0x2c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0007
        gbc.setState(0x821e, 0x7dae, 0x4710, 0x1691, 0x611d, 0xb736, 0x1, 0x0);
        gbc.writeMem(0x821e, { 0x2d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7dae, gbc.sp());
        EXPECT(0x821f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x821e));
        // 2D 0008
        gbc.setState(0xda9f, 0x28c5, 0x6430, 0x97a8, 0xe666, 0x8028, 0x0, 0x0);
        gbc.writeMem(0xda9f, { 0x2d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x28c5, gbc.sp());
        EXPECT(0xdaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xda9f));
        // 2D 0009
        gbc.setState(0x2b7f, 0x4f11, 0x810, 0x132c, 0x6c29, 0x325a, 0x1, 0x1);
        gbc.writeMem(0x2b7f, { 0x2d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4f11, gbc.sp());
        EXPECT(0x2b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 000A
        gbc.setState(0x9283, 0x520d, 0xc6e0, 0x47bc, 0x9552, 0x868c, 0x0, 0x0);
        gbc.writeMem(0x9283, { 0x2d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x520d, gbc.sp());
        EXPECT(0x9284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9283));
        // 2D 000B
        gbc.setState(0xc025, 0x3d9c, 0xdf80, 0x73fa, 0xc148, 0x99de, 0x1, 0x0);
        gbc.writeMem(0xc025, { 0x2d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3d9c, gbc.sp());
        EXPECT(0xc026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc025));
        // 2D 000D
        gbc.setState(0x46a2, 0xfb9c, 0xda60, 0x81f5, 0x3f8e, 0x3da1, 0x1, 0x0);
        gbc.writeMem(0x46a2, { 0x2d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfb9c, gbc.sp());
        EXPECT(0x46a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 000E
        gbc.setState(0x680b, 0x84c, 0x93c0, 0x3bd2, 0x1175, 0x181c, 0x0, 0x1);
        gbc.writeMem(0x680b, { 0x2d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x84c, gbc.sp());
        EXPECT(0x680c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 000F
        gbc.setState(0xafb0, 0x906a, 0x36f0, 0xa7c1, 0x8963, 0xb564, 0x0, 0x1);
        gbc.writeMem(0xafb0, { 0x2d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x906a, gbc.sp());
        EXPECT(0xafb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xafb0));
        // 2D 0010
        gbc.setState(0x324a, 0xe312, 0xe0, 0x5097, 0xe511, 0x9397, 0x0, 0x0);
        gbc.writeMem(0x324a, { 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe312, gbc.sp());
        EXPECT(0x324b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0011
        gbc.setState(0x5f04, 0x8966, 0x8060, 0xab1a, 0x36e, 0x9a7, 0x1, 0x0);
        gbc.writeMem(0x5f04, { 0x2d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8966, gbc.sp());
        EXPECT(0x5f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0012
        gbc.setState(0x8f9e, 0xb859, 0x5430, 0x126f, 0xa324, 0xf7e9, 0x1, 0x0);
        gbc.writeMem(0x8f9e, { 0x2d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb859, gbc.sp());
        EXPECT(0x8f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8f9e));
        // 2D 0013
        gbc.setState(0x824e, 0x2210, 0x44c0, 0xd80c, 0x42d, 0xbe96, 0x1, 0x1);
        gbc.writeMem(0x824e, { 0x2d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2210, gbc.sp());
        EXPECT(0x824f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x824e));
        // 2D 0014
        gbc.setState(0xefbb, 0x3852, 0x29c0, 0xef50, 0xcc0c, 0x2634, 0x1, 0x1);
        gbc.writeMem(0xefbb, { 0x2d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3852, gbc.sp());
        EXPECT(0xefbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xefbb));
        // 2D 0015
        gbc.setState(0xea7e, 0xfe67, 0x19f0, 0xbfe2, 0x4f04, 0xe948, 0x1, 0x1);
        gbc.writeMem(0xea7e, { 0x2d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfe67, gbc.sp());
        EXPECT(0xea7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xea7e));
        // 2D 0016
        gbc.setState(0x90e8, 0xbc6a, 0x4680, 0x9bcf, 0x5b6c, 0xd2e8, 0x1, 0x0);
        gbc.writeMem(0x90e8, { 0x2d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbc6a, gbc.sp());
        EXPECT(0x90e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x90e8));
        // 2D 0017
        gbc.setState(0xd84a, 0x5fc0, 0xe780, 0x8fb6, 0xc0f, 0x23cf, 0x1, 0x1);
        gbc.writeMem(0xd84a, { 0x2d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0xd84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd84a));
        // 2D 0018
        gbc.setState(0x2a61, 0x9163, 0x8ae0, 0xf71b, 0x8736, 0x5ff, 0x0, 0x1);
        gbc.writeMem(0x2a61, { 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9163, gbc.sp());
        EXPECT(0x2a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0019
        gbc.setState(0xc04, 0xc6b2, 0x4150, 0xdd5f, 0x94f3, 0xc95b, 0x1, 0x1);
        gbc.writeMem(0xc04, { 0x2d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc6b2, gbc.sp());
        EXPECT(0xc05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 001A
        gbc.setState(0x5949, 0x35ce, 0x650, 0x3286, 0xd611, 0x24f2, 0x0, 0x0);
        gbc.writeMem(0x5949, { 0x2d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x35ce, gbc.sp());
        EXPECT(0x594a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 001B
        gbc.setState(0x2d88, 0xb67a, 0x34a0, 0x7200, 0x3da5, 0x3b44, 0x0, 0x1);
        gbc.writeMem(0x2d88, { 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb67a, gbc.sp());
        EXPECT(0x2d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 001D
        gbc.setState(0x5c96, 0x8f35, 0xf850, 0xfcdc, 0xdc1c, 0x44bc, 0x1, 0x0);
        gbc.writeMem(0x5c96, { 0x2d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8f35, gbc.sp());
        EXPECT(0x5c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 001E
        gbc.setState(0x22f1, 0xd271, 0x59a0, 0x6094, 0x14ec, 0xc20a, 0x0, 0x1);
        gbc.writeMem(0x22f1, { 0x2d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd271, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 001F
        gbc.setState(0x62ac, 0x8b50, 0x9610, 0x19e9, 0x92d3, 0xd21f, 0x1, 0x0);
        gbc.writeMem(0x62ac, { 0x2d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8b50, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0021
        gbc.setState(0x26bb, 0xddb, 0x3920, 0xf397, 0x40f0, 0xefd9, 0x1, 0x0);
        gbc.writeMem(0x26bb, { 0x2d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xddb, gbc.sp());
        EXPECT(0x26bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0022
        gbc.setState(0x4769, 0x95ac, 0x44f0, 0x375b, 0xb9fd, 0x23, 0x1, 0x1);
        gbc.writeMem(0x4769, { 0x2d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x95ac, gbc.sp());
        EXPECT(0x476a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0024
        gbc.setState(0xe7c7, 0xd76, 0x2070, 0xc4db, 0xaf24, 0x789e, 0x0, 0x1);
        gbc.writeMem(0xe7c7, { 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd76, gbc.sp());
        EXPECT(0xe7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe7c7));
        // 2D 0026
        gbc.setState(0x4122, 0xb9ae, 0xb830, 0xe00e, 0xefe5, 0xd7c7, 0x1, 0x1);
        gbc.writeMem(0x4122, { 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb9ae, gbc.sp());
        EXPECT(0x4123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0027
        gbc.setState(0xd195, 0xe3e3, 0x20e0, 0x8452, 0xd3b0, 0x4af8, 0x1, 0x0);
        gbc.writeMem(0xd195, { 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe3e3, gbc.sp());
        EXPECT(0xd196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd195));
        // 2D 0028
        gbc.setState(0xafc1, 0x71a4, 0xdea0, 0x3173, 0x91a0, 0xfb0, 0x0, 0x0);
        gbc.writeMem(0xafc1, { 0x2d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x71a4, gbc.sp());
        EXPECT(0xafc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xafc1));
        // 2D 0029
        gbc.setState(0xa99b, 0x136e, 0x1fc0, 0x13b7, 0x103a, 0xa2c4, 0x0, 0x0);
        gbc.writeMem(0xa99b, { 0x2d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x136e, gbc.sp());
        EXPECT(0xa99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa99b));
        // 2D 002A
        gbc.setState(0x1502, 0x51e0, 0x9b0, 0x8f3a, 0xbcc5, 0x3c76, 0x1, 0x0);
        gbc.writeMem(0x1502, { 0x2d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x51e0, gbc.sp());
        EXPECT(0x1503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 002B
        gbc.setState(0x2fd3, 0x9fc4, 0x1e40, 0xc40f, 0xa2c0, 0x2a33, 0x1, 0x1);
        gbc.writeMem(0x2fd3, { 0x2d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9fc4, gbc.sp());
        EXPECT(0x2fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 002C
        gbc.setState(0xb18e, 0xf51b, 0xce20, 0x5710, 0xb5ef, 0xaeab, 0x0, 0x1);
        gbc.writeMem(0xb18e, { 0x2d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf51b, gbc.sp());
        EXPECT(0xb18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb18e));
        // 2D 002D
        gbc.setState(0x60db, 0xeae9, 0x29d0, 0x7d8, 0x5364, 0xbb1a, 0x0, 0x0);
        gbc.writeMem(0x60db, { 0x2d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xeae9, gbc.sp());
        EXPECT(0x60dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 002E
        gbc.setState(0x3db1, 0x46bc, 0xd210, 0x51b5, 0xa251, 0x1c9f, 0x0, 0x0);
        gbc.writeMem(0x3db1, { 0x2d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x46bc, gbc.sp());
        EXPECT(0x3db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 002F
        gbc.setState(0xa166, 0x5a62, 0xf770, 0xa9e0, 0x57, 0xd51c, 0x1, 0x1);
        gbc.writeMem(0xa166, { 0x2d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5a62, gbc.sp());
        EXPECT(0xa167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa166));
        // 2D 0030
        gbc.setState(0x9e49, 0x7b75, 0xd880, 0x4d40, 0xc919, 0xd100, 0x1, 0x1);
        gbc.writeMem(0x9e49, { 0x2d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7b75, gbc.sp());
        EXPECT(0x9e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9e49));
        // 2D 0031
        gbc.setState(0x8d62, 0x6e0d, 0x9ac0, 0x8db8, 0x4836, 0xe789, 0x0, 0x0);
        gbc.writeMem(0x8d62, { 0x2d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6e0d, gbc.sp());
        EXPECT(0x8d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8d62));
        // 2D 0032
        gbc.setState(0x1a23, 0x46d3, 0xc260, 0x4bd8, 0x8fc9, 0xa00, 0x0, 0x0);
        gbc.writeMem(0x1a23, { 0x2d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x46d3, gbc.sp());
        EXPECT(0x1a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0033
        gbc.setState(0x9bde, 0xc728, 0x4ac0, 0x1519, 0xf243, 0x8472, 0x1, 0x0);
        gbc.writeMem(0x9bde, { 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc728, gbc.sp());
        EXPECT(0x9bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9bde));
        // 2D 0034
        gbc.setState(0x8625, 0xc9e7, 0x36b0, 0x55f4, 0xcdcf, 0x5f10, 0x1, 0x0);
        gbc.writeMem(0x8625, { 0x2d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc9e7, gbc.sp());
        EXPECT(0x8626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8625));
        // 2D 0035
        gbc.setState(0xcddb, 0xb3d6, 0x9310, 0xf408, 0xd2a1, 0x101a, 0x1, 0x1);
        gbc.writeMem(0xcddb, { 0x2d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb3d6, gbc.sp());
        EXPECT(0xcddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcddb));
        // 2D 0036
        gbc.setState(0x2c35, 0x23eb, 0xde60, 0x6977, 0x8aff, 0x4585, 0x0, 0x1);
        gbc.writeMem(0x2c35, { 0x2d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x23eb, gbc.sp());
        EXPECT(0x2c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0037
        gbc.setState(0x4bab, 0x617e, 0x60d0, 0x242f, 0x50fc, 0x4200, 0x0, 0x0);
        gbc.writeMem(0x4bab, { 0x2d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x617e, gbc.sp());
        EXPECT(0x4bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0038
        gbc.setState(0x80f9, 0x854, 0xd7c0, 0x381, 0xa422, 0xa23f, 0x1, 0x0);
        gbc.writeMem(0x80f9, { 0x2d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x854, gbc.sp());
        EXPECT(0x80fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x80f9));
        // 2D 0039
        gbc.setState(0x2493, 0xa92b, 0x6cf0, 0x567e, 0x3ca0, 0x5d3e, 0x0, 0x1);
        gbc.writeMem(0x2493, { 0x2d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa92b, gbc.sp());
        EXPECT(0x2494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 003A
        gbc.setState(0xaac7, 0x8085, 0xc5c0, 0x4371, 0x60d5, 0xed44, 0x1, 0x0);
        gbc.writeMem(0xaac7, { 0x2d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8085, gbc.sp());
        EXPECT(0xaac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xaac7));
        // 2D 003B
        gbc.setState(0x45f9, 0x8105, 0x8870, 0xd2de, 0xe096, 0xbbf1, 0x1, 0x0);
        gbc.writeMem(0x45f9, { 0x2d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8105, gbc.sp());
        EXPECT(0x45fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 003C
        gbc.setState(0xc9ec, 0x82bf, 0xde10, 0xb03e, 0xba1b, 0x788f, 0x0, 0x1);
        gbc.writeMem(0xc9ec, { 0x2d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x82bf, gbc.sp());
        EXPECT(0xc9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc9ec));
        // 2D 003D
        gbc.setState(0xb569, 0xe0cb, 0xd70, 0x1c84, 0x49dd, 0x97b2, 0x0, 0x0);
        gbc.writeMem(0xb569, { 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe0cb, gbc.sp());
        EXPECT(0xb56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb569));
        // 2D 003E
        gbc.setState(0x1850, 0x377b, 0x3a90, 0xd4b3, 0xcc29, 0x3e82, 0x0, 0x0);
        gbc.writeMem(0x1850, { 0x2d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x377b, gbc.sp());
        EXPECT(0x1851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 003F
        gbc.setState(0x31f4, 0x65b6, 0xe0d0, 0xa11, 0xaf70, 0xc850, 0x0, 0x0);
        gbc.writeMem(0x31f4, { 0x2d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x65b6, gbc.sp());
        EXPECT(0x31f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0040
        gbc.setState(0xada7, 0xb28f, 0x6070, 0x892c, 0xd599, 0xe0a, 0x0, 0x0);
        gbc.writeMem(0xada7, { 0x2d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb28f, gbc.sp());
        EXPECT(0xada8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xada7));
        // 2D 0041
        gbc.setState(0x5f1e, 0xdb13, 0x7320, 0x8f20, 0x992a, 0x93e8, 0x0, 0x0);
        gbc.writeMem(0x5f1e, { 0x2d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdb13, gbc.sp());
        EXPECT(0x5f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0042
        gbc.setState(0xe29c, 0xa1a9, 0xaca0, 0xe48d, 0x4a39, 0x7472, 0x1, 0x0);
        gbc.writeMem(0xe29c, { 0x2d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa1a9, gbc.sp());
        EXPECT(0xe29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe29c));
        // 2D 0043
        gbc.setState(0xaa72, 0x71b6, 0xc270, 0x23b0, 0xe846, 0x8be0, 0x1, 0x1);
        gbc.writeMem(0xaa72, { 0x2d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x71b6, gbc.sp());
        EXPECT(0xaa73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xaa72));
        // 2D 0044
        gbc.setState(0xbeb7, 0x262c, 0x27f0, 0x2144, 0x3236, 0x19c2, 0x1, 0x0);
        gbc.writeMem(0xbeb7, { 0x2d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x262c, gbc.sp());
        EXPECT(0xbeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbeb7));
        // 2D 0045
        gbc.setState(0xdfd5, 0x4576, 0x1840, 0x58ee, 0x583a, 0xc6f6, 0x1, 0x1);
        gbc.writeMem(0xdfd5, { 0x2d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4576, gbc.sp());
        EXPECT(0xdfd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdfd5));
        // 2D 0046
        gbc.setState(0xe366, 0xc2f5, 0xddf0, 0x1b45, 0x822e, 0x6780, 0x1, 0x1);
        gbc.writeMem(0xe366, { 0x2d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc2f5, gbc.sp());
        EXPECT(0xe367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe366));
        // 2D 0047
        gbc.setState(0x609a, 0x2a7a, 0x87f0, 0x83a0, 0x30b9, 0x1c62, 0x1, 0x0);
        gbc.writeMem(0x609a, { 0x2d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2a7a, gbc.sp());
        EXPECT(0x609b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0048
        gbc.setState(0x120f, 0xa82, 0xa290, 0xe2c6, 0x4f52, 0x6ef5, 0x0, 0x0);
        gbc.writeMem(0x120f, { 0x2d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa82, gbc.sp());
        EXPECT(0x1210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 004B
        gbc.setState(0xb97b, 0x728b, 0x12e0, 0xb7e0, 0x8223, 0xb4c9, 0x0, 0x1);
        gbc.writeMem(0xb97b, { 0x2d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x728b, gbc.sp());
        EXPECT(0xb97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb97b));
        // 2D 004C
        gbc.setState(0xe5c5, 0x4609, 0x6ab0, 0xa871, 0xe0c7, 0x36bd, 0x1, 0x0);
        gbc.writeMem(0xe5c5, { 0x2d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4609, gbc.sp());
        EXPECT(0xe5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe5c5));
        // 2D 004D
        gbc.setState(0x561c, 0x732c, 0xe680, 0xafe3, 0xe1c5, 0x7df9, 0x0, 0x0);
        gbc.writeMem(0x561c, { 0x2d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x732c, gbc.sp());
        EXPECT(0x561d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 004E
        gbc.setState(0xc71c, 0x492a, 0x4d90, 0xf062, 0x1b4e, 0x6ae1, 0x1, 0x0);
        gbc.writeMem(0xc71c, { 0x2d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x492a, gbc.sp());
        EXPECT(0xc71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc71c));
        // 2D 004F
        gbc.setState(0x194a, 0x634, 0xdfb0, 0x8da5, 0xdd23, 0xe668, 0x1, 0x0);
        gbc.writeMem(0x194a, { 0x2d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x634, gbc.sp());
        EXPECT(0x194b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0050
        gbc.setState(0x9ddb, 0x342c, 0x99c0, 0x82e4, 0xcb58, 0x4c0c, 0x0, 0x0);
        gbc.writeMem(0x9ddb, { 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x342c, gbc.sp());
        EXPECT(0x9ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9ddb));
        // 2D 0051
        gbc.setState(0xcf6c, 0x5b33, 0xc8d0, 0x5ea6, 0xc360, 0xf2b4, 0x0, 0x0);
        gbc.writeMem(0xcf6c, { 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5b33, gbc.sp());
        EXPECT(0xcf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcf6c));
        // 2D 0052
        gbc.setState(0x253c, 0xf5ea, 0x81a0, 0x9e20, 0xf3dd, 0x45ad, 0x1, 0x0);
        gbc.writeMem(0x253c, { 0x2d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf5ea, gbc.sp());
        EXPECT(0x253d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0053
        gbc.setState(0x1ba6, 0x6a9c, 0x7470, 0x7645, 0xfee6, 0x2e33, 0x1, 0x0);
        gbc.writeMem(0x1ba6, { 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6a9c, gbc.sp());
        EXPECT(0x1ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0054
        gbc.setState(0x1814, 0xf378, 0xe5b0, 0x1bdd, 0x2079, 0x74f7, 0x1, 0x0);
        gbc.writeMem(0x1814, { 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf378, gbc.sp());
        EXPECT(0x1815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0055
        gbc.setState(0xb93f, 0x8b30, 0xe250, 0x1388, 0x3fbf, 0xcff9, 0x1, 0x0);
        gbc.writeMem(0xb93f, { 0x2d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8b30, gbc.sp());
        EXPECT(0xb940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb93f));
        // 2D 0056
        gbc.setState(0x67d8, 0x65a6, 0x60, 0xd831, 0x3049, 0x9d5b, 0x0, 0x1);
        gbc.writeMem(0x67d8, { 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x65a6, gbc.sp());
        EXPECT(0x67d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0057
        gbc.setState(0xba41, 0x9ec9, 0xf240, 0x99a5, 0x599d, 0xeb96, 0x0, 0x1);
        gbc.writeMem(0xba41, { 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9ec9, gbc.sp());
        EXPECT(0xba42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xba41));
        // 2D 0058
        gbc.setState(0x1aec, 0x4cfe, 0x3340, 0x1084, 0x46ef, 0xe5de, 0x0, 0x1);
        gbc.writeMem(0x1aec, { 0x2d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4cfe, gbc.sp());
        EXPECT(0x1aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0059
        gbc.setState(0x5a42, 0xc3e9, 0x3360, 0xa21, 0x4779, 0xc25c, 0x0, 0x1);
        gbc.writeMem(0x5a42, { 0x2d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc3e9, gbc.sp());
        EXPECT(0x5a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 005A
        gbc.setState(0x55b4, 0x97c5, 0x52e0, 0x41ba, 0xcb48, 0x385e, 0x1, 0x1);
        gbc.writeMem(0x55b4, { 0x2d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x97c5, gbc.sp());
        EXPECT(0x55b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 005B
        gbc.setState(0xbc0e, 0x937f, 0x69a0, 0x3e92, 0xffea, 0xd1c, 0x0, 0x1);
        gbc.writeMem(0xbc0e, { 0x2d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x937f, gbc.sp());
        EXPECT(0xbc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbc0e));
        // 2D 005C
        gbc.setState(0xee5c, 0x951b, 0xe620, 0x9c21, 0x956e, 0xf497, 0x0, 0x0);
        gbc.writeMem(0xee5c, { 0x2d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x951b, gbc.sp());
        EXPECT(0xee5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xee5c));
        // 2D 005D
        gbc.setState(0x4569, 0x4015, 0x8520, 0x23dc, 0x39ed, 0x777a, 0x0, 0x0);
        gbc.writeMem(0x4569, { 0x2d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4015, gbc.sp());
        EXPECT(0x456a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 005E
        gbc.setState(0x237a, 0xeb49, 0x4870, 0x389e, 0x26de, 0x3946, 0x1, 0x1);
        gbc.writeMem(0x237a, { 0x2d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xeb49, gbc.sp());
        EXPECT(0x237b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 005F
        gbc.setState(0x53c4, 0x14d0, 0xd230, 0x2e4d, 0x73d4, 0x891a, 0x1, 0x0);
        gbc.writeMem(0x53c4, { 0x2d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x14d0, gbc.sp());
        EXPECT(0x53c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0060
        gbc.setState(0xb5bd, 0xbc84, 0xa040, 0x5b97, 0xe0ff, 0x6ac0, 0x1, 0x1);
        gbc.writeMem(0xb5bd, { 0x2d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbc84, gbc.sp());
        EXPECT(0xb5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb5bd));
        // 2D 0061
        gbc.setState(0x333b, 0x22, 0x3e30, 0xed2c, 0xadc, 0x6f88, 0x0, 0x0);
        gbc.writeMem(0x333b, { 0x2d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x22, gbc.sp());
        EXPECT(0x333c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0062
        gbc.setState(0x3607, 0x27da, 0xd750, 0x2024, 0xe99d, 0x9b92, 0x0, 0x0);
        gbc.writeMem(0x3607, { 0x2d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x27da, gbc.sp());
        EXPECT(0x3608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0063
        gbc.setState(0x6325, 0x32be, 0x1da0, 0x3d45, 0x80f9, 0x3e32, 0x1, 0x0);
        gbc.writeMem(0x6325, { 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x32be, gbc.sp());
        EXPECT(0x6326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0064
        gbc.setState(0x16a, 0x401a, 0x47d0, 0x70c8, 0x64f3, 0x2859, 0x0, 0x1);
        gbc.writeMem(0x16a, { 0x2d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x401a, gbc.sp());
        EXPECT(0x16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0065
        gbc.setState(0xac1, 0xa56e, 0xd450, 0xd241, 0xbf82, 0x6db4, 0x0, 0x1);
        gbc.writeMem(0xac1, { 0x2d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa56e, gbc.sp());
        EXPECT(0xac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0066
        gbc.setState(0xdbdc, 0x976e, 0x3b90, 0x7331, 0xd897, 0xddf8, 0x0, 0x0);
        gbc.writeMem(0xdbdc, { 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x976e, gbc.sp());
        EXPECT(0xdbdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdbdc));
        // 2D 0067
        gbc.setState(0x5c22, 0x6902, 0x1e40, 0x3018, 0x33a1, 0xc4f4, 0x0, 0x0);
        gbc.writeMem(0x5c22, { 0x2d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6902, gbc.sp());
        EXPECT(0x5c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0068
        gbc.setState(0x79a8, 0xc686, 0x9f50, 0xe6db, 0x1c4f, 0xf394, 0x0, 0x1);
        gbc.writeMem(0x79a8, { 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc686, gbc.sp());
        EXPECT(0x79a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0069
        gbc.setState(0xc36c, 0x46ba, 0xe760, 0xa510, 0x7965, 0xd903, 0x1, 0x0);
        gbc.writeMem(0xc36c, { 0x2d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x46ba, gbc.sp());
        EXPECT(0xc36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc36c));
        // 2D 006A
        gbc.setState(0x2cf3, 0x17d4, 0x7670, 0x2d8, 0x5cdb, 0x6ec5, 0x1, 0x0);
        gbc.writeMem(0x2cf3, { 0x2d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x17d4, gbc.sp());
        EXPECT(0x2cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 006B
        gbc.setState(0x5b4e, 0x29cb, 0xfe90, 0x1eef, 0x5a26, 0x9ed4, 0x1, 0x1);
        gbc.writeMem(0x5b4e, { 0x2d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x29cb, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 006C
        gbc.setState(0x40a7, 0xd532, 0x5b10, 0x68bf, 0x7d51, 0xe1b2, 0x1, 0x1);
        gbc.writeMem(0x40a7, { 0x2d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd532, gbc.sp());
        EXPECT(0x40a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 006D
        gbc.setState(0xa0b3, 0xf99a, 0x4110, 0xa9a0, 0x35f4, 0x157, 0x1, 0x0);
        gbc.writeMem(0xa0b3, { 0x2d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf99a, gbc.sp());
        EXPECT(0xa0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa0b3));
        // 2D 006E
        gbc.setState(0x4130, 0x412d, 0xd2a0, 0x450, 0xcf01, 0xaa0e, 0x1, 0x1);
        gbc.writeMem(0x4130, { 0x2d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x412d, gbc.sp());
        EXPECT(0x4131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 006F
        gbc.setState(0x48b6, 0x16c4, 0xe640, 0xd46a, 0x545, 0x1b7b, 0x1, 0x1);
        gbc.writeMem(0x48b6, { 0x2d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x16c4, gbc.sp());
        EXPECT(0x48b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0071
        gbc.setState(0xc38a, 0x2646, 0x8670, 0xf877, 0x81b0, 0xc515, 0x1, 0x0);
        gbc.writeMem(0xc38a, { 0x2d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2646, gbc.sp());
        EXPECT(0xc38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc38a));
        // 2D 0072
        gbc.setState(0x3907, 0xf196, 0xef80, 0xb925, 0x2f55, 0xdd13, 0x1, 0x0);
        gbc.writeMem(0x3907, { 0x2d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf196, gbc.sp());
        EXPECT(0x3908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0073
        gbc.setState(0x81f9, 0xfde2, 0x5020, 0x8419, 0xa469, 0x2c98, 0x0, 0x0);
        gbc.writeMem(0x81f9, { 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfde2, gbc.sp());
        EXPECT(0x81fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x81f9));
        // 2D 0074
        gbc.setState(0x6449, 0x88dd, 0x96f0, 0xbab9, 0x33ff, 0x9159, 0x0, 0x0);
        gbc.writeMem(0x6449, { 0x2d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x88dd, gbc.sp());
        EXPECT(0x644a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0075
        gbc.setState(0x3942, 0x8967, 0xb8b0, 0xb826, 0xa673, 0x6b05, 0x0, 0x1);
        gbc.writeMem(0x3942, { 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8967, gbc.sp());
        EXPECT(0x3943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0076
        gbc.setState(0x9add, 0x9913, 0x6b80, 0x1094, 0x786e, 0x8b3b, 0x1, 0x1);
        gbc.writeMem(0x9add, { 0x2d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9913, gbc.sp());
        EXPECT(0x9ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9add));
        // 2D 0077
        gbc.setState(0x2427, 0xeb83, 0x8030, 0x868e, 0x426d, 0x99a, 0x1, 0x1);
        gbc.writeMem(0x2427, { 0x2d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xeb83, gbc.sp());
        EXPECT(0x2428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0078
        gbc.setState(0x6bf5, 0x1c5f, 0x1730, 0x7ff4, 0xb55b, 0xcda3, 0x1, 0x1);
        gbc.writeMem(0x6bf5, { 0x2d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1c5f, gbc.sp());
        EXPECT(0x6bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0079
        gbc.setState(0x2ce1, 0x3fa7, 0xfbf0, 0x77f2, 0xde14, 0x2f3c, 0x0, 0x0);
        gbc.writeMem(0x2ce1, { 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3fa7, gbc.sp());
        EXPECT(0x2ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 007A
        gbc.setState(0x814, 0x7dfd, 0xed40, 0x552a, 0xbc7a, 0xf68c, 0x0, 0x1);
        gbc.writeMem(0x814, { 0x2d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7dfd, gbc.sp());
        EXPECT(0x815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 007B
        gbc.setState(0x422f, 0xd4e8, 0x6af0, 0x433, 0xc4ca, 0xd02, 0x1, 0x1);
        gbc.writeMem(0x422f, { 0x2d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0x4230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 007C
        gbc.setState(0xe20c, 0x67a, 0x8240, 0xe518, 0x1ddd, 0xb6ea, 0x0, 0x1);
        gbc.writeMem(0xe20c, { 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x67a, gbc.sp());
        EXPECT(0xe20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe20c));
        // 2D 007D
        gbc.setState(0x3fa3, 0x59d5, 0xcee0, 0x2f7c, 0x6932, 0x9ea1, 0x0, 0x0);
        gbc.writeMem(0x3fa3, { 0x2d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x59d5, gbc.sp());
        EXPECT(0x3fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 007E
        gbc.setState(0x783c, 0x1a42, 0x1560, 0x537, 0xaba5, 0x18f6, 0x0, 0x1);
        gbc.writeMem(0x783c, { 0x2d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1a42, gbc.sp());
        EXPECT(0x783d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 007F
        gbc.setState(0x390d, 0xccec, 0x7ca0, 0x239e, 0x45e9, 0xcf49, 0x0, 0x1);
        gbc.writeMem(0x390d, { 0x2d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xccec, gbc.sp());
        EXPECT(0x390e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0080
        gbc.setState(0x2498, 0x5b28, 0x2fe0, 0x5537, 0x722d, 0x6404, 0x0, 0x0);
        gbc.writeMem(0x2498, { 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5b28, gbc.sp());
        EXPECT(0x2499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0082
        gbc.setState(0x388, 0xb2b0, 0xa590, 0xafc3, 0xd43b, 0x540e, 0x0, 0x0);
        gbc.writeMem(0x388, { 0x2d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb2b0, gbc.sp());
        EXPECT(0x389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0083
        gbc.setState(0x31b2, 0xe519, 0x1b70, 0xe8d7, 0xb47b, 0xf5b9, 0x0, 0x0);
        gbc.writeMem(0x31b2, { 0x2d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe519, gbc.sp());
        EXPECT(0x31b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0084
        gbc.setState(0x431d, 0x1518, 0x3740, 0xc33c, 0x553f, 0xcafe, 0x0, 0x1);
        gbc.writeMem(0x431d, { 0x2d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1518, gbc.sp());
        EXPECT(0x431e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0085
        gbc.setState(0xe64a, 0x4e6b, 0xa2b0, 0x89b9, 0xbc9e, 0x87cf, 0x0, 0x0);
        gbc.writeMem(0xe64a, { 0x2d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4e6b, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe64a));
        // 2D 0086
        gbc.setState(0xc067, 0xeb22, 0x2980, 0x9736, 0xd461, 0x62fc, 0x1, 0x1);
        gbc.writeMem(0xc067, { 0x2d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xeb22, gbc.sp());
        EXPECT(0xc068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc067));
        // 2D 0087
        gbc.setState(0x8c55, 0xb32f, 0x7990, 0xabf, 0xeea1, 0xcd0a, 0x0, 0x1);
        gbc.writeMem(0x8c55, { 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb32f, gbc.sp());
        EXPECT(0x8c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8c55));
        // 2D 0088
        gbc.setState(0xdd30, 0x2175, 0x760, 0x53b8, 0xcff, 0xb7e1, 0x0, 0x0);
        gbc.writeMem(0xdd30, { 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2175, gbc.sp());
        EXPECT(0xdd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdd30));
        // 2D 0089
        gbc.setState(0xc637, 0x8747, 0xf900, 0x7e4f, 0x8e8e, 0xaba6, 0x1, 0x0);
        gbc.writeMem(0xc637, { 0x2d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8747, gbc.sp());
        EXPECT(0xc638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc637));
        // 2D 008B
        gbc.setState(0xe7, 0x67ac, 0xcab0, 0xe4e1, 0xf2f9, 0xe1c6, 0x1, 0x0);
        gbc.writeMem(0xe7, { 0x2d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x67ac, gbc.sp());
        EXPECT(0xe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 008C
        gbc.setState(0x8b47, 0xa5e9, 0x2c40, 0xaa0e, 0xbf50, 0x77a7, 0x1, 0x0);
        gbc.writeMem(0x8b47, { 0x2d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa5e9, gbc.sp());
        EXPECT(0x8b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8b47));
        // 2D 008D
        gbc.setState(0x3665, 0x5b74, 0xc280, 0xa2b7, 0xf73c, 0x8971, 0x0, 0x1);
        gbc.writeMem(0x3665, { 0x2d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5b74, gbc.sp());
        EXPECT(0x3666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 008E
        gbc.setState(0x30f3, 0xe1fd, 0xc470, 0x5cd0, 0xc223, 0x714f, 0x1, 0x0);
        gbc.writeMem(0x30f3, { 0x2d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe1fd, gbc.sp());
        EXPECT(0x30f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 008F
        gbc.setState(0xb7f, 0xdf07, 0x6cf0, 0xd859, 0x7dc1, 0xa09c, 0x0, 0x1);
        gbc.writeMem(0xb7f, { 0x2d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdf07, gbc.sp());
        EXPECT(0xb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0090
        gbc.setState(0xbded, 0xfa20, 0x4b10, 0xdc4d, 0x8580, 0xd6d8, 0x0, 0x0);
        gbc.writeMem(0xbded, { 0x2d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfa20, gbc.sp());
        EXPECT(0xbdee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbded));
        // 2D 0091
        gbc.setState(0x150e, 0x21c2, 0xf9d0, 0xd756, 0x2587, 0x3f58, 0x1, 0x0);
        gbc.writeMem(0x150e, { 0x2d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x21c2, gbc.sp());
        EXPECT(0x150f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0092
        gbc.setState(0x3675, 0xe415, 0x4310, 0xf685, 0x651d, 0x877f, 0x1, 0x1);
        gbc.writeMem(0x3675, { 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe415, gbc.sp());
        EXPECT(0x3676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0093
        gbc.setState(0x44ee, 0x24f1, 0x8cc0, 0xb0a5, 0xf4c2, 0xf971, 0x0, 0x0);
        gbc.writeMem(0x44ee, { 0x2d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x24f1, gbc.sp());
        EXPECT(0x44ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0094
        gbc.setState(0x3464, 0xdc98, 0x65e0, 0x209c, 0x709d, 0xb594, 0x1, 0x1);
        gbc.writeMem(0x3464, { 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdc98, gbc.sp());
        EXPECT(0x3465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0095
        gbc.setState(0x880f, 0x3534, 0x3960, 0xd68, 0x9bb0, 0xed27, 0x0, 0x1);
        gbc.writeMem(0x880f, { 0x2d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3534, gbc.sp());
        EXPECT(0x8810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x880f));
        // 2D 0096
        gbc.setState(0x5f81, 0x1e8c, 0x5810, 0xaff1, 0x1bb1, 0x6908, 0x1, 0x1);
        gbc.writeMem(0x5f81, { 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1e8c, gbc.sp());
        EXPECT(0x5f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0097
        gbc.setState(0xdeb5, 0x2dd8, 0x2080, 0x3f7a, 0x7c05, 0xf902, 0x1, 0x0);
        gbc.writeMem(0xdeb5, { 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2dd8, gbc.sp());
        EXPECT(0xdeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdeb5));
        // 2D 0098
        gbc.setState(0xa9eb, 0x644d, 0xb4b0, 0xc611, 0x802e, 0x597e, 0x0, 0x1);
        gbc.writeMem(0xa9eb, { 0x2d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x644d, gbc.sp());
        EXPECT(0xa9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa9eb));
        // 2D 0099
        gbc.setState(0x9f9, 0xff62, 0x26e0, 0xc88c, 0x2c42, 0xbe3f, 0x1, 0x0);
        gbc.writeMem(0x9f9, { 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xff62, gbc.sp());
        EXPECT(0x9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 009A
        gbc.setState(0xd001, 0xed14, 0x590, 0xf8c5, 0x3d2b, 0xa447, 0x1, 0x0);
        gbc.writeMem(0xd001, { 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xed14, gbc.sp());
        EXPECT(0xd002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd001));
        // 2D 009D
        gbc.setState(0x1b4c, 0x274f, 0xcc70, 0x18f3, 0xa593, 0x612a, 0x0, 0x0);
        gbc.writeMem(0x1b4c, { 0x2d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x274f, gbc.sp());
        EXPECT(0x1b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 009E
        gbc.setState(0x7c30, 0x9d90, 0xab90, 0x347a, 0x2fa9, 0x7db5, 0x1, 0x1);
        gbc.writeMem(0x7c30, { 0x2d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9d90, gbc.sp());
        EXPECT(0x7c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 009F
        gbc.setState(0xaf0, 0x71ce, 0xb00, 0x7f83, 0xf3d1, 0x674b, 0x0, 0x0);
        gbc.writeMem(0xaf0, { 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x71ce, gbc.sp());
        EXPECT(0xaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00A0
        gbc.setState(0xadeb, 0x9f23, 0xd800, 0x1556, 0x688b, 0x4f0c, 0x0, 0x0);
        gbc.writeMem(0xadeb, { 0x2d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9f23, gbc.sp());
        EXPECT(0xadec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xadeb));
        // 2D 00A1
        gbc.setState(0xdb9d, 0x1d19, 0x4570, 0x7958, 0x85d3, 0x48ba, 0x0, 0x1);
        gbc.writeMem(0xdb9d, { 0x2d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1d19, gbc.sp());
        EXPECT(0xdb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdb9d));
        // 2D 00A2
        gbc.setState(0xc195, 0x50a5, 0x67d0, 0xc123, 0x7d1d, 0xbea6, 0x1, 0x1);
        gbc.writeMem(0xc195, { 0x2d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x50a5, gbc.sp());
        EXPECT(0xc196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc195));
        // 2D 00A3
        gbc.setState(0x4000, 0x2449, 0xc50, 0x9ca3, 0x6752, 0x886, 0x1, 0x0);
        gbc.writeMem(0x4000, { 0x2d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2449, gbc.sp());
        EXPECT(0x4001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00A4
        gbc.setState(0x6b0d, 0xc249, 0xb8d0, 0xa524, 0x176, 0x87da, 0x0, 0x0);
        gbc.writeMem(0x6b0d, { 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc249, gbc.sp());
        EXPECT(0x6b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00A5
        gbc.setState(0x3e8f, 0xfcc, 0xfcb0, 0xe9d3, 0x5318, 0xd666, 0x0, 0x1);
        gbc.writeMem(0x3e8f, { 0x2d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfcc, gbc.sp());
        EXPECT(0x3e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00A7
        gbc.setState(0x105f, 0x5b05, 0x74a0, 0xfbf5, 0xcc1c, 0xa65f, 0x0, 0x0);
        gbc.writeMem(0x105f, { 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5b05, gbc.sp());
        EXPECT(0x1060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00A8
        gbc.setState(0x8a49, 0xae18, 0xeb60, 0xf9a2, 0xe878, 0xa098, 0x0, 0x1);
        gbc.writeMem(0x8a49, { 0x2d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xae18, gbc.sp());
        EXPECT(0x8a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8a49));
        // 2D 00A9
        gbc.setState(0x9fd8, 0xd718, 0x3f50, 0xa718, 0x889, 0x5dfd, 0x0, 0x1);
        gbc.writeMem(0x9fd8, { 0x2d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd718, gbc.sp());
        EXPECT(0x9fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9fd8));
        // 2D 00AA
        gbc.setState(0x5390, 0xa8eb, 0x7160, 0x3326, 0x2afe, 0xd4b0, 0x1, 0x1);
        gbc.writeMem(0x5390, { 0x2d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa8eb, gbc.sp());
        EXPECT(0x5391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00AC
        gbc.setState(0x1da0, 0x74ab, 0x94a0, 0xf5f, 0xfec2, 0x12e, 0x0, 0x0);
        gbc.writeMem(0x1da0, { 0x2d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x74ab, gbc.sp());
        EXPECT(0x1da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00AD
        gbc.setState(0x8a72, 0xa9d4, 0x5080, 0x935d, 0xc588, 0xdad1, 0x1, 0x0);
        gbc.writeMem(0x8a72, { 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa9d4, gbc.sp());
        EXPECT(0x8a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8a72));
        // 2D 00AE
        gbc.setState(0xa30f, 0xab1c, 0xaee0, 0xd4ad, 0x36ca, 0x8858, 0x0, 0x0);
        gbc.writeMem(0xa30f, { 0x2d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xab1c, gbc.sp());
        EXPECT(0xa310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa30f));
        // 2D 00AF
        gbc.setState(0x2b2d, 0xd93a, 0x3ba0, 0x5ab9, 0x76f, 0x7048, 0x0, 0x0);
        gbc.writeMem(0x2b2d, { 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd93a, gbc.sp());
        EXPECT(0x2b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00B0
        gbc.setState(0xd0dc, 0xd56, 0xe850, 0x8f7d, 0x3880, 0xb277, 0x0, 0x1);
        gbc.writeMem(0xd0dc, { 0x2d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd56, gbc.sp());
        EXPECT(0xd0dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd0dc));
        // 2D 00B1
        gbc.setState(0x5a30, 0xa14a, 0x9090, 0x68db, 0x9ddd, 0x1f07, 0x1, 0x1);
        gbc.writeMem(0x5a30, { 0x2d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa14a, gbc.sp());
        EXPECT(0x5a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00B2
        gbc.setState(0x5037, 0x6c2a, 0x8d40, 0x5336, 0xfed4, 0x1756, 0x0, 0x1);
        gbc.writeMem(0x5037, { 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6c2a, gbc.sp());
        EXPECT(0x5038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00B3
        gbc.setState(0x2aa6, 0x4ef5, 0x9eb0, 0x6d6f, 0x3f7, 0xecf9, 0x1, 0x1);
        gbc.writeMem(0x2aa6, { 0x2d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4ef5, gbc.sp());
        EXPECT(0x2aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00B4
        gbc.setState(0xb239, 0xa68d, 0xed00, 0x1cb5, 0xf56, 0x9295, 0x1, 0x0);
        gbc.writeMem(0xb239, { 0x2d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa68d, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb239));
        // 2D 00B5
        gbc.setState(0x33eb, 0xf350, 0x510, 0xa084, 0x4b2a, 0x2837, 0x1, 0x1);
        gbc.writeMem(0x33eb, { 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf350, gbc.sp());
        EXPECT(0x33ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00B6
        gbc.setState(0xdf33, 0x3e9e, 0xb0a0, 0x7737, 0x37e3, 0xdd53, 0x0, 0x0);
        gbc.writeMem(0xdf33, { 0x2d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3e9e, gbc.sp());
        EXPECT(0xdf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdf33));
        // 2D 00B7
        gbc.setState(0xad39, 0x2fbf, 0x730, 0xa7dd, 0xd604, 0x28e2, 0x0, 0x0);
        gbc.writeMem(0xad39, { 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2fbf, gbc.sp());
        EXPECT(0xad3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xad39));
        // 2D 00B8
        gbc.setState(0x4935, 0x79be, 0x25a0, 0xb02a, 0x4b5b, 0xe674, 0x1, 0x0);
        gbc.writeMem(0x4935, { 0x2d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x79be, gbc.sp());
        EXPECT(0x4936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00B9
        gbc.setState(0x6431, 0x334d, 0x5d90, 0xb3f0, 0x6655, 0xa2d5, 0x1, 0x0);
        gbc.writeMem(0x6431, { 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x334d, gbc.sp());
        EXPECT(0x6432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00BB
        gbc.setState(0xbf1d, 0x91c, 0x1d50, 0x77b0, 0xf6c2, 0xbb5b, 0x1, 0x0);
        gbc.writeMem(0xbf1d, { 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x91c, gbc.sp());
        EXPECT(0xbf1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbf1d));
        // 2D 00BC
        gbc.setState(0x2cdb, 0x24c7, 0x3420, 0x9c21, 0x75f, 0x3bdb, 0x0, 0x1);
        gbc.writeMem(0x2cdb, { 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x24c7, gbc.sp());
        EXPECT(0x2cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00BD
        gbc.setState(0x9eb5, 0xd6bd, 0x63a0, 0x4296, 0x5e, 0xa62, 0x0, 0x1);
        gbc.writeMem(0x9eb5, { 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd6bd, gbc.sp());
        EXPECT(0x9eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9eb5));
        // 2D 00BE
        gbc.setState(0xcbdb, 0x1166, 0x88a0, 0x9ac, 0x14bb, 0x20ca, 0x1, 0x0);
        gbc.writeMem(0xcbdb, { 0x2d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1166, gbc.sp());
        EXPECT(0xcbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcbdb));
        // 2D 00BF
        gbc.setState(0xdc7b, 0x85fa, 0x1ef0, 0x9c9d, 0x290b, 0x8c9e, 0x0, 0x0);
        gbc.writeMem(0xdc7b, { 0x2d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x85fa, gbc.sp());
        EXPECT(0xdc7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdc7b));
        // 2D 00C0
        gbc.setState(0xd161, 0x7b45, 0xf2f0, 0x7d09, 0x1cb9, 0x9588, 0x1, 0x0);
        gbc.writeMem(0xd161, { 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7b45, gbc.sp());
        EXPECT(0xd162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd161));
        // 2D 00C2
        gbc.setState(0x26cf, 0x8e25, 0x1270, 0xe588, 0x8b6b, 0xf23d, 0x1, 0x0);
        gbc.writeMem(0x26cf, { 0x2d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8e25, gbc.sp());
        EXPECT(0x26d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00C3
        gbc.setState(0xa99c, 0x68df, 0x7500, 0xf838, 0x5a88, 0xdce1, 0x0, 0x0);
        gbc.writeMem(0xa99c, { 0x2d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x68df, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa99c));
        // 2D 00C4
        gbc.setState(0x5567, 0x5834, 0xe6b0, 0x31e7, 0x4eb6, 0x214, 0x1, 0x0);
        gbc.writeMem(0x5567, { 0x2d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5834, gbc.sp());
        EXPECT(0x5568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00C5
        gbc.setState(0x86ad, 0xd6a0, 0xe950, 0x6f1, 0xe0c3, 0x907e, 0x0, 0x0);
        gbc.writeMem(0x86ad, { 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd6a0, gbc.sp());
        EXPECT(0x86ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x86ad));
        // 2D 00C6
        gbc.setState(0xa09f, 0x3a41, 0x2bb0, 0xde7a, 0xa6fa, 0xe2c, 0x1, 0x1);
        gbc.writeMem(0xa09f, { 0x2d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3a41, gbc.sp());
        EXPECT(0xa0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa09f));
        // 2D 00C7
        gbc.setState(0x66e1, 0xcc85, 0xa410, 0x2dd2, 0x17ac, 0x24a8, 0x1, 0x1);
        gbc.writeMem(0x66e1, { 0x2d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcc85, gbc.sp());
        EXPECT(0x66e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00C8
        gbc.setState(0x9bc8, 0xb1a0, 0x71d0, 0xfe42, 0x9c2a, 0x8129, 0x1, 0x0);
        gbc.writeMem(0x9bc8, { 0x2d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb1a0, gbc.sp());
        EXPECT(0x9bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9bc8));
        // 2D 00C9
        gbc.setState(0x3fea, 0xb4b4, 0xa5e0, 0x8b48, 0x2fbe, 0xac6, 0x1, 0x1);
        gbc.writeMem(0x3fea, { 0x2d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb4b4, gbc.sp());
        EXPECT(0x3feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00CA
        gbc.setState(0xcfda, 0x2802, 0x2520, 0xbd99, 0x3617, 0x79d9, 0x1, 0x1);
        gbc.writeMem(0xcfda, { 0x2d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2802, gbc.sp());
        EXPECT(0xcfdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcfda));
        // 2D 00CB
        gbc.setState(0x32c0, 0x8feb, 0x74f0, 0xaefe, 0x6f2a, 0x19ad, 0x0, 0x0);
        gbc.writeMem(0x32c0, { 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8feb, gbc.sp());
        EXPECT(0x32c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00CC
        gbc.setState(0x4a0e, 0x8dc6, 0x65e0, 0xed12, 0x6234, 0x58f6, 0x1, 0x0);
        gbc.writeMem(0x4a0e, { 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8dc6, gbc.sp());
        EXPECT(0x4a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00CE
        gbc.setState(0xb40c, 0xa861, 0xddb0, 0xd30, 0x287, 0xca3e, 0x0, 0x1);
        gbc.writeMem(0xb40c, { 0x2d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa861, gbc.sp());
        EXPECT(0xb40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb40c));
        // 2D 00CF
        gbc.setState(0x34f, 0xc5fa, 0x2330, 0x4b4, 0xbf1d, 0xbe88, 0x1, 0x0);
        gbc.writeMem(0x34f, { 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc5fa, gbc.sp());
        EXPECT(0x350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00D1
        gbc.setState(0xcafa, 0x7f0a, 0x7170, 0x3f51, 0x690c, 0x3a1c, 0x0, 0x0);
        gbc.writeMem(0xcafa, { 0x2d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7f0a, gbc.sp());
        EXPECT(0xcafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcafa));
        // 2D 00D2
        gbc.setState(0x797a, 0x6384, 0x2f00, 0x9083, 0x8168, 0x61d2, 0x0, 0x0);
        gbc.writeMem(0x797a, { 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6384, gbc.sp());
        EXPECT(0x797b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00D3
        gbc.setState(0xb6ed, 0xcb08, 0x5520, 0xc5e6, 0xae4c, 0xe0a2, 0x1, 0x1);
        gbc.writeMem(0xb6ed, { 0x2d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcb08, gbc.sp());
        EXPECT(0xb6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb6ed));
        // 2D 00D4
        gbc.setState(0xa0a5, 0x75b9, 0x3190, 0x1d14, 0x94cd, 0x6ef3, 0x1, 0x0);
        gbc.writeMem(0xa0a5, { 0x2d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x75b9, gbc.sp());
        EXPECT(0xa0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa0a5));
        // 2D 00D5
        gbc.setState(0xc2a2, 0x8d40, 0xe780, 0xbfe1, 0xf7d, 0x60cf, 0x1, 0x0);
        gbc.writeMem(0xc2a2, { 0x2d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8d40, gbc.sp());
        EXPECT(0xc2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc2a2));
        // 2D 00D6
        gbc.setState(0x9aa3, 0x97fe, 0x1040, 0xabaa, 0x3b5d, 0x3606, 0x0, 0x1);
        gbc.writeMem(0x9aa3, { 0x2d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x97fe, gbc.sp());
        EXPECT(0x9aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9aa3));
        // 2D 00D7
        gbc.setState(0xc03d, 0xea71, 0xbbd0, 0x9dec, 0xcda0, 0x7793, 0x0, 0x0);
        gbc.writeMem(0xc03d, { 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xea71, gbc.sp());
        EXPECT(0xc03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc03d));
        // 2D 00D8
        gbc.setState(0x1d37, 0xdad4, 0x5970, 0xdf13, 0x543, 0xd8fa, 0x1, 0x1);
        gbc.writeMem(0x1d37, { 0x2d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdad4, gbc.sp());
        EXPECT(0x1d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00D9
        gbc.setState(0xaede, 0xbf6d, 0x2d50, 0x978f, 0x8f13, 0xdcc2, 0x1, 0x0);
        gbc.writeMem(0xaede, { 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbf6d, gbc.sp());
        EXPECT(0xaedf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xaede));
        // 2D 00DA
        gbc.setState(0x2b4f, 0xfb6a, 0x6190, 0x4f03, 0xccaa, 0x32b5, 0x0, 0x0);
        gbc.writeMem(0x2b4f, { 0x2d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfb6a, gbc.sp());
        EXPECT(0x2b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00DB
        gbc.setState(0x55de, 0x4eaa, 0xd1f0, 0xd51d, 0x1f11, 0x8e6b, 0x0, 0x0);
        gbc.writeMem(0x55de, { 0x2d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4eaa, gbc.sp());
        EXPECT(0x55df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00DC
        gbc.setState(0x826e, 0x834f, 0xa1a0, 0xac1b, 0x74bb, 0x61de, 0x0, 0x0);
        gbc.writeMem(0x826e, { 0x2d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x834f, gbc.sp());
        EXPECT(0x826f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x826e));
        // 2D 00DD
        gbc.setState(0x9782, 0xb894, 0xcd0, 0x2406, 0x2907, 0x7f37, 0x1, 0x1);
        gbc.writeMem(0x9782, { 0x2d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb894, gbc.sp());
        EXPECT(0x9783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9782));
        // 2D 00DE
        gbc.setState(0x60b, 0x2a36, 0xfe10, 0x3423, 0xd5a9, 0xf63d, 0x1, 0x0);
        gbc.writeMem(0x60b, { 0x2d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2a36, gbc.sp());
        EXPECT(0x60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00DF
        gbc.setState(0x78a9, 0x592c, 0xcb0, 0x798, 0xbd6f, 0x297d, 0x0, 0x0);
        gbc.writeMem(0x78a9, { 0x2d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x592c, gbc.sp());
        EXPECT(0x78aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00E0
        gbc.setState(0x922e, 0xd76e, 0x9390, 0xee12, 0x8c0f, 0x4671, 0x1, 0x0);
        gbc.writeMem(0x922e, { 0x2d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd76e, gbc.sp());
        EXPECT(0x922f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x922e));
        // 2D 00E1
        gbc.setState(0xe718, 0xefce, 0xbd0, 0x35a1, 0x4f06, 0xea31, 0x1, 0x1);
        gbc.writeMem(0xe718, { 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xefce, gbc.sp());
        EXPECT(0xe719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe718));
        // 2D 00E2
        gbc.setState(0x5fa8, 0x5a42, 0xe570, 0x8597, 0x4069, 0xdb5e, 0x1, 0x1);
        gbc.writeMem(0x5fa8, { 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5a42, gbc.sp());
        EXPECT(0x5fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00E3
        gbc.setState(0xa4f9, 0x4900, 0x97d0, 0x5f94, 0xf73a, 0x3f86, 0x0, 0x0);
        gbc.writeMem(0xa4f9, { 0x2d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4900, gbc.sp());
        EXPECT(0xa4fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa4f9));
        // 2D 00E4
        gbc.setState(0xeb46, 0xfffe, 0x8c00, 0x6a74, 0x3b03, 0x989e, 0x0, 0x0);
        gbc.writeMem(0xeb46, { 0x2d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfffe, gbc.sp());
        EXPECT(0xeb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xeb46));
        // 2D 00E5
        gbc.setState(0x9470, 0x7167, 0x4360, 0xc550, 0x93ac, 0x2fce, 0x1, 0x0);
        gbc.writeMem(0x9470, { 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7167, gbc.sp());
        EXPECT(0x9471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9470));
        // 2D 00E6
        gbc.setState(0x159f, 0x6045, 0xb960, 0x26b1, 0xc32e, 0x4d97, 0x1, 0x0);
        gbc.writeMem(0x159f, { 0x2d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6045, gbc.sp());
        EXPECT(0x15a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00E7
        gbc.setState(0x1b54, 0xee1d, 0xe0c0, 0x9648, 0x5f16, 0xb1ed, 0x0, 0x1);
        gbc.writeMem(0x1b54, { 0x2d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xee1d, gbc.sp());
        EXPECT(0x1b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00E8
        gbc.setState(0xcf63, 0xc21c, 0x190, 0xe179, 0xddff, 0x52d6, 0x0, 0x0);
        gbc.writeMem(0xcf63, { 0x2d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc21c, gbc.sp());
        EXPECT(0xcf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcf63));
        // 2D 00E9
        gbc.setState(0x72cf, 0x10a4, 0x9da0, 0xe0aa, 0xf0cf, 0x3b00, 0x0, 0x1);
        gbc.writeMem(0x72cf, { 0x2d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x10a4, gbc.sp());
        EXPECT(0x72d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00EA
        gbc.setState(0xb405, 0x912a, 0x1b40, 0x19b9, 0x932f, 0x94ff, 0x0, 0x0);
        gbc.writeMem(0xb405, { 0x2d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x912a, gbc.sp());
        EXPECT(0xb406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb405));
        // 2D 00EB
        gbc.setState(0x2b2, 0xfd54, 0xe110, 0x9d1c, 0xb8b8, 0x2ef6, 0x0, 0x0);
        gbc.writeMem(0x2b2, { 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfd54, gbc.sp());
        EXPECT(0x2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00EC
        gbc.setState(0x9e45, 0xe98, 0x6490, 0x31b9, 0xd5a5, 0xfb71, 0x0, 0x1);
        gbc.writeMem(0x9e45, { 0x2d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe98, gbc.sp());
        EXPECT(0x9e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9e45));
        // 2D 00ED
        gbc.setState(0x1a59, 0x152c, 0x1570, 0xb7ea, 0x1266, 0xff1d, 0x0, 0x0);
        gbc.writeMem(0x1a59, { 0x2d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x152c, gbc.sp());
        EXPECT(0x1a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00EE
        gbc.setState(0x7788, 0xb56d, 0x6d70, 0x2ff0, 0x241d, 0x3616, 0x0, 0x0);
        gbc.writeMem(0x7788, { 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb56d, gbc.sp());
        EXPECT(0x7789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00EF
        gbc.setState(0x8a16, 0xcc1a, 0x6190, 0xd8c8, 0x1c47, 0x72e2, 0x0, 0x0);
        gbc.writeMem(0x8a16, { 0x2d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcc1a, gbc.sp());
        EXPECT(0x8a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8a16));
        // 2D 00F0
        gbc.setState(0x922, 0x7e01, 0xa920, 0x1f5b, 0xe8cf, 0x3d26, 0x0, 0x1);
        gbc.writeMem(0x922, { 0x2d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7e01, gbc.sp());
        EXPECT(0x923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00F1
        gbc.setState(0x7c03, 0xa6d3, 0x5f70, 0x200, 0x9a20, 0x4796, 0x0, 0x1);
        gbc.writeMem(0x7c03, { 0x2d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa6d3, gbc.sp());
        EXPECT(0x7c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00F2
        gbc.setState(0x9bb1, 0x2847, 0x2a00, 0x9d13, 0xbcf9, 0x32b2, 0x1, 0x1);
        gbc.writeMem(0x9bb1, { 0x2d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2847, gbc.sp());
        EXPECT(0x9bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9bb1));
        // 2D 00F3
        gbc.setState(0x11a6, 0x1c96, 0x8f40, 0x6e01, 0xe40a, 0x35ec, 0x1, 0x1);
        gbc.writeMem(0x11a6, { 0x2d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1c96, gbc.sp());
        EXPECT(0x11a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00F4
        gbc.setState(0x5339, 0x7dec, 0x6d90, 0x4608, 0x871, 0xa4a5, 0x0, 0x1);
        gbc.writeMem(0x5339, { 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7dec, gbc.sp());
        EXPECT(0x533a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00F5
        gbc.setState(0x33d6, 0x68f4, 0x1320, 0xc2ae, 0xd675, 0xc90c, 0x1, 0x1);
        gbc.writeMem(0x33d6, { 0x2d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x68f4, gbc.sp());
        EXPECT(0x33d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00F6
        gbc.setState(0x64e8, 0x4bba, 0xa50, 0x7aa0, 0xddd1, 0x3fb7, 0x0, 0x0);
        gbc.writeMem(0x64e8, { 0x2d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4bba, gbc.sp());
        EXPECT(0x64e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00F7
        gbc.setState(0x855b, 0x6e83, 0x35f0, 0xfb2b, 0xb71c, 0x1a19, 0x0, 0x0);
        gbc.writeMem(0x855b, { 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6e83, gbc.sp());
        EXPECT(0x855c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x855b));
        // 2D 00F8
        gbc.setState(0xaa3d, 0x18bf, 0x2100, 0xecc4, 0xffd3, 0x6512, 0x1, 0x0);
        gbc.writeMem(0xaa3d, { 0x2d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x18bf, gbc.sp());
        EXPECT(0xaa3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xaa3d));
        // 2D 00FA
        gbc.setState(0x63d7, 0x8507, 0x8910, 0xc77e, 0xd142, 0x8fa5, 0x0, 0x1);
        gbc.writeMem(0x63d7, { 0x2d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8507, gbc.sp());
        EXPECT(0x63d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00FB
        gbc.setState(0xc3f7, 0x2fdc, 0x6890, 0x2e55, 0xea50, 0x20ce, 0x0, 0x1);
        gbc.writeMem(0xc3f7, { 0x2d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2fdc, gbc.sp());
        EXPECT(0xc3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc3f7));
        // 2D 00FC
        gbc.setState(0x94b2, 0x15bd, 0xd10, 0x3499, 0x902e, 0x247, 0x0, 0x0);
        gbc.writeMem(0x94b2, { 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x15bd, gbc.sp());
        EXPECT(0x94b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x94b2));
        // 2D 00FD
        gbc.setState(0x3c27, 0xa581, 0xcb50, 0x1027, 0xc4ea, 0x9bfc, 0x0, 0x0);
        gbc.writeMem(0x3c27, { 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa581, gbc.sp());
        EXPECT(0x3c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 00FE
        gbc.setState(0x62b4, 0xf731, 0x2760, 0xc8a8, 0x1c3f, 0xac1c, 0x1, 0x0);
        gbc.writeMem(0x62b4, { 0x2d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf731, gbc.sp());
        EXPECT(0x62b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 00FF
        gbc.setState(0x53dc, 0xd2ba, 0x630, 0x209, 0x7ee3, 0xe784, 0x1, 0x1);
        gbc.writeMem(0x53dc, { 0x2d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd2ba, gbc.sp());
        EXPECT(0x53dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0101
        gbc.setState(0x84fa, 0x3949, 0xf5c0, 0x459d, 0x86ad, 0xebd2, 0x0, 0x0);
        gbc.writeMem(0x84fa, { 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3949, gbc.sp());
        EXPECT(0x84fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x84fa));
        // 2D 0102
        gbc.setState(0x3187, 0xcb97, 0x15f0, 0x5919, 0xc666, 0xc735, 0x1, 0x1);
        gbc.writeMem(0x3187, { 0x2d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcb97, gbc.sp());
        EXPECT(0x3188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0103
        gbc.setState(0xbcff, 0x6366, 0x680, 0x5ab9, 0x1dad, 0x9e, 0x1, 0x0);
        gbc.writeMem(0xbcff, { 0x2d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6366, gbc.sp());
        EXPECT(0xbd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbcff));
        // 2D 0104
        gbc.setState(0x9115, 0xe739, 0x2010, 0x509c, 0x78c0, 0x780, 0x1, 0x1);
        gbc.writeMem(0x9115, { 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe739, gbc.sp());
        EXPECT(0x9116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9115));
        // 2D 0105
        gbc.setState(0xe050, 0x3a24, 0x9c80, 0x5c6b, 0x5174, 0x5d2, 0x0, 0x1);
        gbc.writeMem(0xe050, { 0x2d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3a24, gbc.sp());
        EXPECT(0xe051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe050));
        // 2D 0106
        gbc.setState(0x76f9, 0xf369, 0xc2e0, 0x8ed8, 0xeaed, 0xcc9d, 0x1, 0x1);
        gbc.writeMem(0x76f9, { 0x2d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf369, gbc.sp());
        EXPECT(0x76fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0107
        gbc.setState(0x77b4, 0xd980, 0xc4f0, 0xf6bd, 0xe270, 0x6a54, 0x1, 0x0);
        gbc.writeMem(0x77b4, { 0x2d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd980, gbc.sp());
        EXPECT(0x77b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0108
        gbc.setState(0x9e53, 0xcfde, 0x30b0, 0xafb2, 0x908e, 0xe8b7, 0x0, 0x0);
        gbc.writeMem(0x9e53, { 0x2d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcfde, gbc.sp());
        EXPECT(0x9e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9e53));
        // 2D 0109
        gbc.setState(0x421e, 0x7192, 0x2740, 0xc0f0, 0x8d34, 0xddea, 0x0, 0x0);
        gbc.writeMem(0x421e, { 0x2d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7192, gbc.sp());
        EXPECT(0x421f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 010A
        gbc.setState(0x93a0, 0xbf5a, 0xd7c0, 0xd091, 0x3ce7, 0x7f7a, 0x1, 0x1);
        gbc.writeMem(0x93a0, { 0x2d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbf5a, gbc.sp());
        EXPECT(0x93a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x93a0));
        // 2D 010B
        gbc.setState(0x9f44, 0x708, 0xb5f0, 0x439d, 0xe1fb, 0xa04f, 0x1, 0x1);
        gbc.writeMem(0x9f44, { 0x2d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x708, gbc.sp());
        EXPECT(0x9f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9f44));
        // 2D 010C
        gbc.setState(0x6377, 0x9144, 0x4340, 0x523b, 0x62c3, 0x1474, 0x1, 0x0);
        gbc.writeMem(0x6377, { 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9144, gbc.sp());
        EXPECT(0x6378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 010D
        gbc.setState(0x3c1d, 0xfb38, 0xbfc0, 0x76ee, 0x1b83, 0x7960, 0x1, 0x1);
        gbc.writeMem(0x3c1d, { 0x2d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfb38, gbc.sp());
        EXPECT(0x3c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 010E
        gbc.setState(0xa7a0, 0xed0b, 0x8d40, 0x57f1, 0xbdfb, 0xf98d, 0x1, 0x1);
        gbc.writeMem(0xa7a0, { 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0xa7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa7a0));
        // 2D 010F
        gbc.setState(0xc361, 0x64f6, 0xcb60, 0xd19d, 0x4639, 0x2662, 0x1, 0x1);
        gbc.writeMem(0xc361, { 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x64f6, gbc.sp());
        EXPECT(0xc362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc361));
        // 2D 0110
        gbc.setState(0xc013, 0x3ae9, 0xf4f0, 0x61a5, 0x9cad, 0x10d9, 0x1, 0x1);
        gbc.writeMem(0xc013, { 0x2d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3ae9, gbc.sp());
        EXPECT(0xc014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc013));
        // 2D 0111
        gbc.setState(0xe4b, 0x9b61, 0xe1e0, 0xd157, 0xda70, 0x47f9, 0x1, 0x0);
        gbc.writeMem(0xe4b, { 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9b61, gbc.sp());
        EXPECT(0xe4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0112
        gbc.setState(0x40d2, 0x74a7, 0x4100, 0x1681, 0xa612, 0x3435, 0x0, 0x1);
        gbc.writeMem(0x40d2, { 0x2d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x74a7, gbc.sp());
        EXPECT(0x40d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0113
        gbc.setState(0x3af1, 0x548, 0x2f30, 0x6407, 0xece1, 0x3ca8, 0x0, 0x0);
        gbc.writeMem(0x3af1, { 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x548, gbc.sp());
        EXPECT(0x3af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0114
        gbc.setState(0xa2ab, 0x5633, 0xba00, 0xf83, 0xb1c0, 0x7bed, 0x1, 0x0);
        gbc.writeMem(0xa2ab, { 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5633, gbc.sp());
        EXPECT(0xa2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa2ab));
        // 2D 0115
        gbc.setState(0xe76b, 0x3a23, 0xd950, 0x726, 0xcbf0, 0xf3a6, 0x1, 0x1);
        gbc.writeMem(0xe76b, { 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3a23, gbc.sp());
        EXPECT(0xe76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe76b));
        // 2D 0116
        gbc.setState(0x2e51, 0x4610, 0x6d30, 0xd303, 0x2085, 0xe296, 0x0, 0x1);
        gbc.writeMem(0x2e51, { 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4610, gbc.sp());
        EXPECT(0x2e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0117
        gbc.setState(0xa9b3, 0x450e, 0x8bf0, 0x52be, 0xb57f, 0xdba0, 0x1, 0x1);
        gbc.writeMem(0xa9b3, { 0x2d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x450e, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa9b3));
        // 2D 0118
        gbc.setState(0x6b4d, 0xff2e, 0x110, 0x383c, 0xdcec, 0x414e, 0x1, 0x0);
        gbc.writeMem(0x6b4d, { 0x2d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xff2e, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0119
        gbc.setState(0x8f86, 0xa022, 0xb0d0, 0x2da1, 0x4693, 0x2e73, 0x1, 0x1);
        gbc.writeMem(0x8f86, { 0x2d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa022, gbc.sp());
        EXPECT(0x8f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8f86));
        // 2D 011A
        gbc.setState(0x6f1c, 0x3c91, 0xbb50, 0x41f0, 0x4ef4, 0x142b, 0x1, 0x1);
        gbc.writeMem(0x6f1c, { 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3c91, gbc.sp());
        EXPECT(0x6f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 011B
        gbc.setState(0x6ce6, 0xa0d8, 0x8050, 0x3e7f, 0xa6df, 0x11e9, 0x1, 0x1);
        gbc.writeMem(0x6ce6, { 0x2d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0x6ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 011C
        gbc.setState(0x339d, 0xc65, 0x2b80, 0xa67c, 0x6031, 0x78cb, 0x1, 0x1);
        gbc.writeMem(0x339d, { 0x2d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc65, gbc.sp());
        EXPECT(0x339e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 011D
        gbc.setState(0xe58e, 0xff06, 0xc6a0, 0xece0, 0x2c9a, 0xd5ae, 0x0, 0x1);
        gbc.writeMem(0xe58e, { 0x2d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xff06, gbc.sp());
        EXPECT(0xe58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe58e));
        // 2D 011E
        gbc.setState(0x86fb, 0xb26d, 0x3440, 0xb06, 0x3dcc, 0xf93b, 0x0, 0x0);
        gbc.writeMem(0x86fb, { 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb26d, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x86fb));
        // 2D 011F
        gbc.setState(0xbc70, 0x8f0c, 0x18a0, 0xb77b, 0xa0bd, 0xff90, 0x0, 0x1);
        gbc.writeMem(0xbc70, { 0x2d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8f0c, gbc.sp());
        EXPECT(0xbc71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbc70));
        // 2D 0120
        gbc.setState(0x88fe, 0xdc44, 0x96b0, 0xeb3b, 0x3928, 0x577, 0x1, 0x0);
        gbc.writeMem(0x88fe, { 0x2d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdc44, gbc.sp());
        EXPECT(0x88ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x88fe));
        // 2D 0121
        gbc.setState(0x5d2c, 0xd856, 0xfd80, 0x56d0, 0x2c2b, 0x147d, 0x1, 0x1);
        gbc.writeMem(0x5d2c, { 0x2d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd856, gbc.sp());
        EXPECT(0x5d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0122
        gbc.setState(0xd3bb, 0x70, 0x1360, 0x6fea, 0x453c, 0x63c9, 0x1, 0x0);
        gbc.writeMem(0xd3bb, { 0x2d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x70, gbc.sp());
        EXPECT(0xd3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd3bb));
        // 2D 0123
        gbc.setState(0xdbe, 0xff87, 0x3360, 0xf72d, 0x2bc8, 0x7b8f, 0x1, 0x0);
        gbc.writeMem(0xdbe, { 0x2d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xff87, gbc.sp());
        EXPECT(0xdbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0124
        gbc.setState(0xd205, 0x37ca, 0xe660, 0xfc80, 0xdb59, 0x126a, 0x1, 0x0);
        gbc.writeMem(0xd205, { 0x2d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x37ca, gbc.sp());
        EXPECT(0xd206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd205));
        // 2D 0125
        gbc.setState(0xcf84, 0xab78, 0x4e30, 0x6a9a, 0x125, 0x8b22, 0x1, 0x1);
        gbc.writeMem(0xcf84, { 0x2d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xab78, gbc.sp());
        EXPECT(0xcf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcf84));
        // 2D 0126
        gbc.setState(0x95a, 0x9a40, 0xaaf0, 0x2b7d, 0x912f, 0xb111, 0x0, 0x1);
        gbc.writeMem(0x95a, { 0x2d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9a40, gbc.sp());
        EXPECT(0x95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0127
        gbc.setState(0x4c87, 0xaa1e, 0xbce0, 0x9a8a, 0x8bec, 0x55a2, 0x1, 0x0);
        gbc.writeMem(0x4c87, { 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xaa1e, gbc.sp());
        EXPECT(0x4c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0128
        gbc.setState(0x9635, 0x27dd, 0x48d0, 0x4828, 0x541d, 0x4316, 0x0, 0x0);
        gbc.writeMem(0x9635, { 0x2d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x27dd, gbc.sp());
        EXPECT(0x9636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9635));
        // 2D 0129
        gbc.setState(0x49dc, 0xed16, 0x4fb0, 0x87ad, 0x2bad, 0x93be, 0x0, 0x0);
        gbc.writeMem(0x49dc, { 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xed16, gbc.sp());
        EXPECT(0x49dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 012A
        gbc.setState(0xdab7, 0x6cb, 0x8670, 0xa294, 0xd880, 0x9d27, 0x1, 0x0);
        gbc.writeMem(0xdab7, { 0x2d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6cb, gbc.sp());
        EXPECT(0xdab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdab7));
        // 2D 012B
        gbc.setState(0xa3dd, 0x802a, 0x6d0, 0xa8e, 0x14b7, 0x675, 0x0, 0x1);
        gbc.writeMem(0xa3dd, { 0x2d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x802a, gbc.sp());
        EXPECT(0xa3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa3dd));
        // 2D 012C
        gbc.setState(0xda16, 0xeaf2, 0x22d0, 0x50f8, 0xd8ba, 0x22a4, 0x1, 0x1);
        gbc.writeMem(0xda16, { 0x2d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xeaf2, gbc.sp());
        EXPECT(0xda17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xda16));
        // 2D 012D
        gbc.setState(0x3f9b, 0xf421, 0xbab0, 0xa9e0, 0x853f, 0xe00f, 0x1, 0x1);
        gbc.writeMem(0x3f9b, { 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf421, gbc.sp());
        EXPECT(0x3f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 012E
        gbc.setState(0x46c6, 0xf9a6, 0x6d00, 0x6ab2, 0x6a39, 0x53d9, 0x0, 0x0);
        gbc.writeMem(0x46c6, { 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf9a6, gbc.sp());
        EXPECT(0x46c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 012F
        gbc.setState(0x802e, 0x232c, 0x2830, 0xf302, 0x8359, 0xcac9, 0x1, 0x0);
        gbc.writeMem(0x802e, { 0x2d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x232c, gbc.sp());
        EXPECT(0x802f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x802e));
        // 2D 0130
        gbc.setState(0x7938, 0x6a2c, 0xc860, 0xd87a, 0xb24a, 0x52dc, 0x1, 0x1);
        gbc.writeMem(0x7938, { 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6a2c, gbc.sp());
        EXPECT(0x7939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0131
        gbc.setState(0xd78a, 0x2fa1, 0x1c40, 0x614e, 0xb814, 0x2b53, 0x0, 0x0);
        gbc.writeMem(0xd78a, { 0x2d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2fa1, gbc.sp());
        EXPECT(0xd78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd78a));
        // 2D 0132
        gbc.setState(0xd2c0, 0xf5c0, 0xe5b0, 0x8211, 0x27b4, 0xe21f, 0x1, 0x1);
        gbc.writeMem(0xd2c0, { 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf5c0, gbc.sp());
        EXPECT(0xd2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd2c0));
        // 2D 0133
        gbc.setState(0x223f, 0xe2e3, 0xd300, 0x92b6, 0x5a71, 0x2ab0, 0x1, 0x1);
        gbc.writeMem(0x223f, { 0x2d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe2e3, gbc.sp());
        EXPECT(0x2240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0134
        gbc.setState(0x77b8, 0xade5, 0x4280, 0x7eb, 0x4529, 0x434f, 0x0, 0x1);
        gbc.writeMem(0x77b8, { 0x2d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xade5, gbc.sp());
        EXPECT(0x77b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0135
        gbc.setState(0x4e3a, 0x8eab, 0x6550, 0x172b, 0x24eb, 0xf34a, 0x0, 0x0);
        gbc.writeMem(0x4e3a, { 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8eab, gbc.sp());
        EXPECT(0x4e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0136
        gbc.setState(0x26e1, 0x7892, 0xcf60, 0xf821, 0x99d2, 0xadc1, 0x1, 0x0);
        gbc.writeMem(0x26e1, { 0x2d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7892, gbc.sp());
        EXPECT(0x26e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0137
        gbc.setState(0xc992, 0xc6a8, 0xbc40, 0x9bec, 0xb075, 0x7b05, 0x1, 0x1);
        gbc.writeMem(0xc992, { 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc6a8, gbc.sp());
        EXPECT(0xc993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc992));
        // 2D 0138
        gbc.setState(0x7e5b, 0xa60e, 0x2c20, 0x1688, 0x1e81, 0xa00b, 0x1, 0x0);
        gbc.writeMem(0x7e5b, { 0x2d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa60e, gbc.sp());
        EXPECT(0x7e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0139
        gbc.setState(0x7bbe, 0xa10f, 0xfe80, 0xc27a, 0x770d, 0x7e20, 0x1, 0x1);
        gbc.writeMem(0x7bbe, { 0x2d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa10f, gbc.sp());
        EXPECT(0x7bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 013A
        gbc.setState(0xcbe7, 0x3e45, 0x20, 0xd025, 0xc957, 0x4ef9, 0x1, 0x1);
        gbc.writeMem(0xcbe7, { 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3e45, gbc.sp());
        EXPECT(0xcbe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcbe7));
        // 2D 013B
        gbc.setState(0xa9f4, 0xf5ca, 0x1e70, 0x53cb, 0xbcb1, 0xcc81, 0x0, 0x1);
        gbc.writeMem(0xa9f4, { 0x2d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf5ca, gbc.sp());
        EXPECT(0xa9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa9f4));
        // 2D 013C
        gbc.setState(0xb3ce, 0xcd54, 0x3db0, 0x22e1, 0xed96, 0xa1f2, 0x1, 0x0);
        gbc.writeMem(0xb3ce, { 0x2d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcd54, gbc.sp());
        EXPECT(0xb3cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb3ce));
        // 2D 013D
        gbc.setState(0x6125, 0x8d96, 0x4ac0, 0x6be5, 0x7104, 0xe413, 0x1, 0x0);
        gbc.writeMem(0x6125, { 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8d96, gbc.sp());
        EXPECT(0x6126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 013E
        gbc.setState(0x3494, 0xb29e, 0x4690, 0x2adb, 0xce5c, 0xe74a, 0x1, 0x1);
        gbc.writeMem(0x3494, { 0x2d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb29e, gbc.sp());
        EXPECT(0x3495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 013F
        gbc.setState(0x2db1, 0xd6b2, 0xbe0, 0xc194, 0xa2b8, 0x3d74, 0x1, 0x1);
        gbc.writeMem(0x2db1, { 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd6b2, gbc.sp());
        EXPECT(0x2db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0140
        gbc.setState(0xfe8, 0x155e, 0x4840, 0xedf, 0xc8ba, 0x7484, 0x1, 0x1);
        gbc.writeMem(0xfe8, { 0x2d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x155e, gbc.sp());
        EXPECT(0xfe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0141
        gbc.setState(0x7f46, 0x6e89, 0x2b90, 0xea22, 0x8126, 0x6772, 0x1, 0x0);
        gbc.writeMem(0x7f46, { 0x2d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6e89, gbc.sp());
        EXPECT(0x7f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0142
        gbc.setState(0x53bd, 0x7e48, 0xa0c0, 0x260a, 0x2c64, 0x3512, 0x0, 0x0);
        gbc.writeMem(0x53bd, { 0x2d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7e48, gbc.sp());
        EXPECT(0x53be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0143
        gbc.setState(0xe062, 0x4f60, 0x8b20, 0x17fe, 0xaed0, 0x56de, 0x0, 0x1);
        gbc.writeMem(0xe062, { 0x2d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4f60, gbc.sp());
        EXPECT(0xe063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe062));
        // 2D 0144
        gbc.setState(0x5665, 0x907e, 0xeaf0, 0x41a3, 0xce49, 0x30c6, 0x1, 0x0);
        gbc.writeMem(0x5665, { 0x2d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x907e, gbc.sp());
        EXPECT(0x5666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0145
        gbc.setState(0x235c, 0xdb6d, 0x6a90, 0x347, 0xc0f1, 0x6dd0, 0x1, 0x0);
        gbc.writeMem(0x235c, { 0x2d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdb6d, gbc.sp());
        EXPECT(0x235d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0146
        gbc.setState(0x5795, 0x854a, 0xc0, 0x5806, 0x7ea5, 0xfb17, 0x1, 0x0);
        gbc.writeMem(0x5795, { 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x854a, gbc.sp());
        EXPECT(0x5796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0147
        gbc.setState(0x36b1, 0xdd10, 0xa500, 0x88ad, 0x11f2, 0xba2c, 0x0, 0x1);
        gbc.writeMem(0x36b1, { 0x2d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdd10, gbc.sp());
        EXPECT(0x36b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0148
        gbc.setState(0xef1c, 0x5f6a, 0xb990, 0xc589, 0x270d, 0x71b, 0x1, 0x1);
        gbc.writeMem(0xef1c, { 0x2d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5f6a, gbc.sp());
        EXPECT(0xef1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xef1c));
        // 2D 0149
        gbc.setState(0x6de7, 0x8d2, 0xe7b0, 0xfd96, 0x4e1f, 0x47af, 0x0, 0x0);
        gbc.writeMem(0x6de7, { 0x2d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8d2, gbc.sp());
        EXPECT(0x6de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 014A
        gbc.setState(0xebeb, 0x72ee, 0x68e0, 0x304d, 0xefae, 0x696f, 0x0, 0x0);
        gbc.writeMem(0xebeb, { 0x2d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x72ee, gbc.sp());
        EXPECT(0xebec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xebeb));
        // 2D 014B
        gbc.setState(0xda3b, 0x32f1, 0xd2f0, 0xa70e, 0x4813, 0xead5, 0x1, 0x0);
        gbc.writeMem(0xda3b, { 0x2d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x32f1, gbc.sp());
        EXPECT(0xda3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xda3b));
        // 2D 014C
        gbc.setState(0xb983, 0xff0f, 0x1630, 0xcfdf, 0xc184, 0x5180, 0x0, 0x0);
        gbc.writeMem(0xb983, { 0x2d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xff0f, gbc.sp());
        EXPECT(0xb984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb983));
        // 2D 014D
        gbc.setState(0xebe5, 0x3f20, 0xd470, 0x3d1b, 0xad54, 0x6f58, 0x1, 0x0);
        gbc.writeMem(0xebe5, { 0x2d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3f20, gbc.sp());
        EXPECT(0xebe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xebe5));
        // 2D 014E
        gbc.setState(0x6d28, 0x63b4, 0xb6e0, 0x4a06, 0x9641, 0xdf85, 0x0, 0x1);
        gbc.writeMem(0x6d28, { 0x2d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x63b4, gbc.sp());
        EXPECT(0x6d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 014F
        gbc.setState(0x88ed, 0x8c87, 0x1ec0, 0xdcbe, 0x9ed8, 0xdd0b, 0x1, 0x1);
        gbc.writeMem(0x88ed, { 0x2d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8c87, gbc.sp());
        EXPECT(0x88ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x88ed));
        // 2D 0150
        gbc.setState(0xa748, 0x2e0f, 0x8a30, 0x8cd2, 0xda28, 0x831e, 0x0, 0x0);
        gbc.writeMem(0xa748, { 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2e0f, gbc.sp());
        EXPECT(0xa749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa748));
        // 2D 0151
        gbc.setState(0x606e, 0x1458, 0x74a0, 0x9998, 0x9778, 0x7a3c, 0x1, 0x1);
        gbc.writeMem(0x606e, { 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1458, gbc.sp());
        EXPECT(0x606f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0152
        gbc.setState(0xc86, 0x88da, 0xfbd0, 0xe7ec, 0x7dc4, 0xc3c, 0x0, 0x1);
        gbc.writeMem(0xc86, { 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x88da, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0153
        gbc.setState(0xdc7, 0xfa97, 0xc720, 0xa05e, 0xeee, 0xdf99, 0x1, 0x1);
        gbc.writeMem(0xdc7, { 0x2d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfa97, gbc.sp());
        EXPECT(0xdc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0154
        gbc.setState(0x180a, 0x1e93, 0x7820, 0x15ac, 0xdd9b, 0xb716, 0x0, 0x1);
        gbc.writeMem(0x180a, { 0x2d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1e93, gbc.sp());
        EXPECT(0x180b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0155
        gbc.setState(0x3b7d, 0xe0e7, 0xd970, 0x823f, 0x80b, 0x64bb, 0x0, 0x1);
        gbc.writeMem(0x3b7d, { 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe0e7, gbc.sp());
        EXPECT(0x3b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0156
        gbc.setState(0x5a9f, 0x9dcd, 0x5640, 0xf251, 0x3519, 0x4c65, 0x1, 0x0);
        gbc.writeMem(0x5a9f, { 0x2d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9dcd, gbc.sp());
        EXPECT(0x5aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0157
        gbc.setState(0xd67, 0x7093, 0x4310, 0xe6f2, 0x94ec, 0x2ba4, 0x0, 0x0);
        gbc.writeMem(0xd67, { 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7093, gbc.sp());
        EXPECT(0xd68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0158
        gbc.setState(0x91e4, 0x791c, 0x2c10, 0x306, 0xf72, 0x39ed, 0x1, 0x1);
        gbc.writeMem(0x91e4, { 0x2d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x791c, gbc.sp());
        EXPECT(0x91e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x91e4));
        // 2D 0159
        gbc.setState(0x6224, 0x28ed, 0xf1f0, 0xd184, 0x4a62, 0x9ab0, 0x1, 0x1);
        gbc.writeMem(0x6224, { 0x2d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x28ed, gbc.sp());
        EXPECT(0x6225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 015A
        gbc.setState(0x8d20, 0x6135, 0x8bd0, 0x653e, 0xf9c7, 0x88a7, 0x1, 0x1);
        gbc.writeMem(0x8d20, { 0x2d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6135, gbc.sp());
        EXPECT(0x8d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8d20));
        // 2D 015B
        gbc.setState(0xb856, 0x4e52, 0x3340, 0x3c60, 0xfc2d, 0xbb45, 0x0, 0x0);
        gbc.writeMem(0xb856, { 0x2d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4e52, gbc.sp());
        EXPECT(0xb857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb856));
        // 2D 015C
        gbc.setState(0x792d, 0x16cd, 0xcc60, 0x8d94, 0xce34, 0x68f, 0x1, 0x1);
        gbc.writeMem(0x792d, { 0x2d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x16cd, gbc.sp());
        EXPECT(0x792e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 015D
        gbc.setState(0xd495, 0x861e, 0x9e60, 0x4271, 0x944f, 0x45da, 0x0, 0x0);
        gbc.writeMem(0xd495, { 0x2d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x861e, gbc.sp());
        EXPECT(0xd496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd495));
        // 2D 015E
        gbc.setState(0xb803, 0xd4d5, 0xe900, 0x4323, 0x7208, 0xd4cb, 0x1, 0x0);
        gbc.writeMem(0xb803, { 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd4d5, gbc.sp());
        EXPECT(0xb804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb803));
        // 2D 015F
        gbc.setState(0xcd0d, 0x6bac, 0x8110, 0x47de, 0xd67d, 0xfb45, 0x0, 0x1);
        gbc.writeMem(0xcd0d, { 0x2d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6bac, gbc.sp());
        EXPECT(0xcd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcd0d));
        // 2D 0160
        gbc.setState(0x2192, 0x69, 0xba60, 0xa5b5, 0xbdec, 0xbd9d, 0x0, 0x0);
        gbc.writeMem(0x2192, { 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x69, gbc.sp());
        EXPECT(0x2193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0161
        gbc.setState(0xa42f, 0x931e, 0x5f20, 0xd5a0, 0xa80d, 0x892f, 0x0, 0x1);
        gbc.writeMem(0xa42f, { 0x2d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x931e, gbc.sp());
        EXPECT(0xa430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa42f));
        // 2D 0162
        gbc.setState(0x6de5, 0x36a0, 0x2cc0, 0x80eb, 0xb68f, 0xdaf8, 0x0, 0x1);
        gbc.writeMem(0x6de5, { 0x2d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x36a0, gbc.sp());
        EXPECT(0x6de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0163
        gbc.setState(0xbbb7, 0x9638, 0xcb00, 0xe723, 0x2781, 0x850b, 0x0, 0x0);
        gbc.writeMem(0xbbb7, { 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9638, gbc.sp());
        EXPECT(0xbbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbbb7));
        // 2D 0164
        gbc.setState(0x5ab2, 0xa779, 0x23f0, 0x45ef, 0x5743, 0x7b7d, 0x1, 0x0);
        gbc.writeMem(0x5ab2, { 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa779, gbc.sp());
        EXPECT(0x5ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0165
        gbc.setState(0x76e5, 0x4da7, 0x7430, 0x114d, 0x4e51, 0x2543, 0x1, 0x0);
        gbc.writeMem(0x76e5, { 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4da7, gbc.sp());
        EXPECT(0x76e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0166
        gbc.setState(0x473f, 0x8022, 0xa3f0, 0xf163, 0xbc60, 0x5a30, 0x0, 0x1);
        gbc.writeMem(0x473f, { 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8022, gbc.sp());
        EXPECT(0x4740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0167
        gbc.setState(0x1edc, 0xda25, 0x7430, 0x661e, 0x7150, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0x1edc, { 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xda25, gbc.sp());
        EXPECT(0x1edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0168
        gbc.setState(0x6ae6, 0x9bbb, 0xf480, 0xe79e, 0xc860, 0xf34, 0x0, 0x1);
        gbc.writeMem(0x6ae6, { 0x2d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9bbb, gbc.sp());
        EXPECT(0x6ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0169
        gbc.setState(0x9a6c, 0x9772, 0x3bd0, 0x6240, 0xef3f, 0xa106, 0x0, 0x0);
        gbc.writeMem(0x9a6c, { 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9772, gbc.sp());
        EXPECT(0x9a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9a6c));
        // 2D 016A
        gbc.setState(0x39c4, 0x222e, 0x3610, 0x6bd3, 0x2ef, 0xf204, 0x0, 0x0);
        gbc.writeMem(0x39c4, { 0x2d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x222e, gbc.sp());
        EXPECT(0x39c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 016B
        gbc.setState(0x42db, 0xb251, 0x79b0, 0x2976, 0xadd3, 0x9884, 0x0, 0x0);
        gbc.writeMem(0x42db, { 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb251, gbc.sp());
        EXPECT(0x42dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 016C
        gbc.setState(0x53, 0x8c78, 0x2b10, 0xc04b, 0x63a3, 0x7c08, 0x1, 0x0);
        gbc.writeMem(0x53, { 0x2d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8c78, gbc.sp());
        EXPECT(0x54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 016D
        gbc.setState(0xa5c4, 0xc808, 0xc4b0, 0xbf51, 0x88a0, 0xdc71, 0x1, 0x1);
        gbc.writeMem(0xa5c4, { 0x2d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc808, gbc.sp());
        EXPECT(0xa5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa5c4));
        // 2D 016E
        gbc.setState(0x1471, 0xc3a8, 0x1ce0, 0x4881, 0x5db3, 0x9ab6, 0x1, 0x1);
        gbc.writeMem(0x1471, { 0x2d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc3a8, gbc.sp());
        EXPECT(0x1472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 016F
        gbc.setState(0xaef1, 0x9478, 0x6560, 0xbf0a, 0x3e61, 0xc522, 0x0, 0x0);
        gbc.writeMem(0xaef1, { 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9478, gbc.sp());
        EXPECT(0xaef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xaef1));
        // 2D 0170
        gbc.setState(0x7943, 0xde59, 0x8550, 0x2d45, 0xdece, 0x4e42, 0x1, 0x1);
        gbc.writeMem(0x7943, { 0x2d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xde59, gbc.sp());
        EXPECT(0x7944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0171
        gbc.setState(0x1e96, 0xbeea, 0x5d80, 0x692, 0x11e8, 0x3137, 0x1, 0x1);
        gbc.writeMem(0x1e96, { 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbeea, gbc.sp());
        EXPECT(0x1e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0172
        gbc.setState(0xd739, 0x1d8f, 0xbe60, 0xa9e9, 0xfdd, 0x835e, 0x1, 0x0);
        gbc.writeMem(0xd739, { 0x2d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1d8f, gbc.sp());
        EXPECT(0xd73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd739));
        // 2D 0173
        gbc.setState(0x81aa, 0x24f, 0xddb0, 0x5c00, 0x35b8, 0xecca, 0x1, 0x0);
        gbc.writeMem(0x81aa, { 0x2d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x24f, gbc.sp());
        EXPECT(0x81ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x81aa));
        // 2D 0174
        gbc.setState(0x45ac, 0xeb5a, 0xe7e0, 0x2ea, 0x244b, 0x8669, 0x1, 0x0);
        gbc.writeMem(0x45ac, { 0x2d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xeb5a, gbc.sp());
        EXPECT(0x45ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0175
        gbc.setState(0x677a, 0xd5dd, 0xa830, 0xbe29, 0xf4ca, 0xc6a1, 0x1, 0x0);
        gbc.writeMem(0x677a, { 0x2d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd5dd, gbc.sp());
        EXPECT(0x677b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0176
        gbc.setState(0xc6a8, 0x50cd, 0x2e00, 0x12ff, 0xfe1f, 0xb87a, 0x0, 0x1);
        gbc.writeMem(0xc6a8, { 0x2d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x50cd, gbc.sp());
        EXPECT(0xc6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc6a8));
        // 2D 0177
        gbc.setState(0x457a, 0x66ac, 0x1c90, 0xf20a, 0x327f, 0x5826, 0x0, 0x1);
        gbc.writeMem(0x457a, { 0x2d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x66ac, gbc.sp());
        EXPECT(0x457b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0178
        gbc.setState(0xa4f6, 0x2bd, 0xe0a0, 0x8ce6, 0x4324, 0x25d6, 0x1, 0x1);
        gbc.writeMem(0xa4f6, { 0x2d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2bd, gbc.sp());
        EXPECT(0xa4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa4f6));
        // 2D 0179
        gbc.setState(0x9ca1, 0x92fa, 0xec80, 0x2ee, 0xe6b7, 0xb694, 0x0, 0x1);
        gbc.writeMem(0x9ca1, { 0x2d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x92fa, gbc.sp());
        EXPECT(0x9ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9ca1));
        // 2D 017A
        gbc.setState(0xd5cc, 0xeaa7, 0x3dc0, 0x8f44, 0x4bf2, 0xeeb1, 0x0, 0x1);
        gbc.writeMem(0xd5cc, { 0x2d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xeaa7, gbc.sp());
        EXPECT(0xd5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd5cc));
        // 2D 017B
        gbc.setState(0xc916, 0x5c45, 0x9ef0, 0xe54c, 0x7bc6, 0xcaef, 0x0, 0x0);
        gbc.writeMem(0xc916, { 0x2d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5c45, gbc.sp());
        EXPECT(0xc917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc916));
        // 2D 017C
        gbc.setState(0x73f7, 0xf943, 0x8900, 0x9334, 0x6b19, 0xc7ef, 0x1, 0x0);
        gbc.writeMem(0x73f7, { 0x2d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf943, gbc.sp());
        EXPECT(0x73f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 017D
        gbc.setState(0x7596, 0x9ec2, 0x4270, 0x9eb9, 0x4926, 0x331d, 0x1, 0x1);
        gbc.writeMem(0x7596, { 0x2d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9ec2, gbc.sp());
        EXPECT(0x7597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 017E
        gbc.setState(0x9e2c, 0xe981, 0xb6a0, 0x1bae, 0x3ab0, 0x3ac6, 0x0, 0x1);
        gbc.writeMem(0x9e2c, { 0x2d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe981, gbc.sp());
        EXPECT(0x9e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9e2c));
        // 2D 017F
        gbc.setState(0x4fc0, 0x67f0, 0x1260, 0xa487, 0x1b7a, 0xb828, 0x1, 0x1);
        gbc.writeMem(0x4fc0, { 0x2d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x67f0, gbc.sp());
        EXPECT(0x4fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0180
        gbc.setState(0xe7a3, 0xcc6f, 0x2b0, 0x4613, 0x90ef, 0xb3b2, 0x1, 0x1);
        gbc.writeMem(0xe7a3, { 0x2d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcc6f, gbc.sp());
        EXPECT(0xe7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe7a3));
        // 2D 0181
        gbc.setState(0x40a5, 0xab09, 0x4500, 0x67c6, 0xe1a4, 0x6b57, 0x1, 0x0);
        gbc.writeMem(0x40a5, { 0x2d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xab09, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0182
        gbc.setState(0x5a65, 0xbc7f, 0xfe90, 0x55d4, 0x3d7b, 0x12e8, 0x1, 0x0);
        gbc.writeMem(0x5a65, { 0x2d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbc7f, gbc.sp());
        EXPECT(0x5a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0183
        gbc.setState(0xab44, 0x5e44, 0xc5b0, 0x7e32, 0x3720, 0xea69, 0x1, 0x1);
        gbc.writeMem(0xab44, { 0x2d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5e44, gbc.sp());
        EXPECT(0xab45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xab44));
        // 2D 0184
        gbc.setState(0xe1ab, 0x69de, 0x98e0, 0xf089, 0x791b, 0xb83e, 0x1, 0x0);
        gbc.writeMem(0xe1ab, { 0x2d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x69de, gbc.sp());
        EXPECT(0xe1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe1ab));
        // 2D 0185
        gbc.setState(0x63cf, 0xf59c, 0x4a10, 0xbf78, 0xe303, 0x7da4, 0x1, 0x0);
        gbc.writeMem(0x63cf, { 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf59c, gbc.sp());
        EXPECT(0x63d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0186
        gbc.setState(0xd78a, 0x17e1, 0x5dd0, 0x4b9a, 0x1fc2, 0xccc7, 0x1, 0x1);
        gbc.writeMem(0xd78a, { 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x17e1, gbc.sp());
        EXPECT(0xd78b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd78a));
        // 2D 0187
        gbc.setState(0xdab7, 0xd61, 0xac90, 0x586a, 0x8ac4, 0xce3d, 0x1, 0x0);
        gbc.writeMem(0xdab7, { 0x2d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd61, gbc.sp());
        EXPECT(0xdab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdab7));
        // 2D 0188
        gbc.setState(0xbeba, 0x9364, 0xbc70, 0x9663, 0x8cbe, 0xea45, 0x0, 0x1);
        gbc.writeMem(0xbeba, { 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9364, gbc.sp());
        EXPECT(0xbebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbeba));
        // 2D 0189
        gbc.setState(0x4c88, 0xd411, 0xf9f0, 0xe7da, 0x2c74, 0xe68f, 0x1, 0x1);
        gbc.writeMem(0x4c88, { 0x2d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd411, gbc.sp());
        EXPECT(0x4c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 018A
        gbc.setState(0x147d, 0x6e17, 0x1280, 0x9da6, 0x2dc9, 0x833e, 0x1, 0x0);
        gbc.writeMem(0x147d, { 0x2d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0x147e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 018B
        gbc.setState(0xe853, 0x3bee, 0xcee0, 0x1c04, 0x69dc, 0xc37f, 0x1, 0x0);
        gbc.writeMem(0xe853, { 0x2d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3bee, gbc.sp());
        EXPECT(0xe854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe853));
        // 2D 018C
        gbc.setState(0xa900, 0xdd69, 0x7b60, 0x4637, 0x98d9, 0x9a2a, 0x0, 0x1);
        gbc.writeMem(0xa900, { 0x2d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdd69, gbc.sp());
        EXPECT(0xa901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa900));
        // 2D 018D
        gbc.setState(0x29f3, 0x19c4, 0xfbb0, 0xa1bc, 0xaa35, 0xfb65, 0x0, 0x1);
        gbc.writeMem(0x29f3, { 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x19c4, gbc.sp());
        EXPECT(0x29f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 018E
        gbc.setState(0xdae9, 0x1f9f, 0x12a0, 0x2a20, 0x1cc5, 0xcccd, 0x0, 0x1);
        gbc.writeMem(0xdae9, { 0x2d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1f9f, gbc.sp());
        EXPECT(0xdaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdae9));
        // 2D 018F
        gbc.setState(0x6ac9, 0x5cb0, 0x3ee0, 0xf80e, 0x38c7, 0xb046, 0x1, 0x1);
        gbc.writeMem(0x6ac9, { 0x2d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5cb0, gbc.sp());
        EXPECT(0x6aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0190
        gbc.setState(0xd915, 0x3009, 0x87f0, 0xc14d, 0xfc12, 0x8054, 0x0, 0x0);
        gbc.writeMem(0xd915, { 0x2d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3009, gbc.sp());
        EXPECT(0xd916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd915));
        // 2D 0191
        gbc.setState(0xa5ec, 0xf11f, 0x7f30, 0x9341, 0x21c3, 0x17cb, 0x0, 0x0);
        gbc.writeMem(0xa5ec, { 0x2d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf11f, gbc.sp());
        EXPECT(0xa5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa5ec));
        // 2D 0192
        gbc.setState(0x9b32, 0x342a, 0xf0f0, 0xb932, 0xf4ba, 0xacbb, 0x1, 0x1);
        gbc.writeMem(0x9b32, { 0x2d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x342a, gbc.sp());
        EXPECT(0x9b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9b32));
        // 2D 0193
        gbc.setState(0xb55d, 0xc6a8, 0x26a0, 0x9f14, 0xb352, 0x15c9, 0x1, 0x1);
        gbc.writeMem(0xb55d, { 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc6a8, gbc.sp());
        EXPECT(0xb55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb55d));
        // 2D 0194
        gbc.setState(0xe864, 0xea8, 0xdcf0, 0x45cb, 0xe665, 0x27ee, 0x0, 0x1);
        gbc.writeMem(0xe864, { 0x2d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xea8, gbc.sp());
        EXPECT(0xe865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe864));
        // 2D 0195
        gbc.setState(0x1ece, 0x8fef, 0x2a50, 0x49a9, 0x57dc, 0xfddd, 0x0, 0x0);
        gbc.writeMem(0x1ece, { 0x2d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8fef, gbc.sp());
        EXPECT(0x1ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0196
        gbc.setState(0x3adf, 0xbae6, 0x6ad0, 0x7852, 0x5697, 0x2593, 0x0, 0x0);
        gbc.writeMem(0x3adf, { 0x2d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbae6, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0197
        gbc.setState(0x82a1, 0xb8fa, 0xa3a0, 0x66f, 0xda49, 0xd175, 0x0, 0x1);
        gbc.writeMem(0x82a1, { 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb8fa, gbc.sp());
        EXPECT(0x82a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x82a1));
        // 2D 0198
        gbc.setState(0x21b8, 0xefaa, 0x10c0, 0xec37, 0xd90, 0xb82d, 0x0, 0x0);
        gbc.writeMem(0x21b8, { 0x2d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xefaa, gbc.sp());
        EXPECT(0x21b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0199
        gbc.setState(0xa242, 0x6291, 0x9be0, 0xc202, 0xa31c, 0xf5e1, 0x0, 0x0);
        gbc.writeMem(0xa242, { 0x2d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6291, gbc.sp());
        EXPECT(0xa243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa242));
        // 2D 019A
        gbc.setState(0xcc04, 0xd81a, 0x91f0, 0x2857, 0x9e7c, 0xccb8, 0x1, 0x1);
        gbc.writeMem(0xcc04, { 0x2d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd81a, gbc.sp());
        EXPECT(0xcc05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcc04));
        // 2D 019B
        gbc.setState(0x1e11, 0x65cf, 0xc8e0, 0xb7fb, 0xace3, 0x2319, 0x1, 0x1);
        gbc.writeMem(0x1e11, { 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x65cf, gbc.sp());
        EXPECT(0x1e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 019C
        gbc.setState(0xb9d5, 0x2c97, 0x1c30, 0x53c9, 0xf8e8, 0x3f60, 0x0, 0x1);
        gbc.writeMem(0xb9d5, { 0x2d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2c97, gbc.sp());
        EXPECT(0xb9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb9d5));
        // 2D 019D
        gbc.setState(0x6fdb, 0x35aa, 0x8800, 0x1b4c, 0x6dec, 0x2ed2, 0x0, 0x1);
        gbc.writeMem(0x6fdb, { 0x2d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x35aa, gbc.sp());
        EXPECT(0x6fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 019F
        gbc.setState(0x4a90, 0x2b9, 0x2020, 0x5cf8, 0x4d7f, 0x1608, 0x1, 0x0);
        gbc.writeMem(0x4a90, { 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2b9, gbc.sp());
        EXPECT(0x4a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01A0
        gbc.setState(0x6388, 0x85e, 0x8110, 0xe507, 0xe43a, 0xc4b4, 0x0, 0x1);
        gbc.writeMem(0x6388, { 0x2d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x85e, gbc.sp());
        EXPECT(0x6389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01A1
        gbc.setState(0xcd8f, 0x4b72, 0x15d0, 0x51f1, 0xbf20, 0xb901, 0x1, 0x0);
        gbc.writeMem(0xcd8f, { 0x2d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4b72, gbc.sp());
        EXPECT(0xcd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcd8f));
        // 2D 01A2
        gbc.setState(0x7cde, 0x481e, 0x8670, 0x9e9f, 0xf63f, 0xd5eb, 0x0, 0x0);
        gbc.writeMem(0x7cde, { 0x2d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x481e, gbc.sp());
        EXPECT(0x7cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01A3
        gbc.setState(0x4c45, 0x58c3, 0xd2c0, 0x1129, 0x7d85, 0x710e, 0x1, 0x0);
        gbc.writeMem(0x4c45, { 0x2d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x58c3, gbc.sp());
        EXPECT(0x4c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01A4
        gbc.setState(0x9008, 0x398, 0xf760, 0xd7da, 0x2c4a, 0xd31b, 0x1, 0x1);
        gbc.writeMem(0x9008, { 0x2d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x398, gbc.sp());
        EXPECT(0x9009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9008));
        // 2D 01A5
        gbc.setState(0x7210, 0x28ff, 0xe820, 0x25a5, 0x6dda, 0xf493, 0x1, 0x1);
        gbc.writeMem(0x7210, { 0x2d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x28ff, gbc.sp());
        EXPECT(0x7211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01A6
        gbc.setState(0x8159, 0x1c71, 0x1a20, 0x2690, 0x1f25, 0xabc6, 0x1, 0x1);
        gbc.writeMem(0x8159, { 0x2d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1c71, gbc.sp());
        EXPECT(0x815a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8159));
        // 2D 01A7
        gbc.setState(0x5cb5, 0x3ef9, 0x2e60, 0x1dd0, 0xcfc5, 0x58ae, 0x0, 0x1);
        gbc.writeMem(0x5cb5, { 0x2d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3ef9, gbc.sp());
        EXPECT(0x5cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01A8
        gbc.setState(0x3aa0, 0x3bc9, 0x4520, 0x930a, 0xccc4, 0x52f0, 0x0, 0x1);
        gbc.writeMem(0x3aa0, { 0x2d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3bc9, gbc.sp());
        EXPECT(0x3aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01A9
        gbc.setState(0xdb14, 0x631a, 0xc4e0, 0x1bf9, 0x5cc8, 0x74e0, 0x0, 0x1);
        gbc.writeMem(0xdb14, { 0x2d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x631a, gbc.sp());
        EXPECT(0xdb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdb14));
        // 2D 01AA
        gbc.setState(0x67f9, 0x1d19, 0xcac0, 0x58f5, 0xcfa6, 0x41a7, 0x1, 0x0);
        gbc.writeMem(0x67f9, { 0x2d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1d19, gbc.sp());
        EXPECT(0x67fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01AB
        gbc.setState(0x8998, 0x6435, 0x8a10, 0x881c, 0x602b, 0x9b50, 0x0, 0x0);
        gbc.writeMem(0x8998, { 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6435, gbc.sp());
        EXPECT(0x8999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8998));
        // 2D 01AC
        gbc.setState(0xe2b8, 0xe290, 0x8230, 0xcd17, 0x4380, 0x3309, 0x0, 0x0);
        gbc.writeMem(0xe2b8, { 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe290, gbc.sp());
        EXPECT(0xe2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe2b8));
        // 2D 01AD
        gbc.setState(0xafab, 0xf3ad, 0x78a0, 0x6293, 0x84c0, 0x24f1, 0x0, 0x0);
        gbc.writeMem(0xafab, { 0x2d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf3ad, gbc.sp());
        EXPECT(0xafac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xafab));
        // 2D 01AE
        gbc.setState(0x15ae, 0x6259, 0xc9d0, 0x7c1f, 0x85f8, 0xee81, 0x0, 0x0);
        gbc.writeMem(0x15ae, { 0x2d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6259, gbc.sp());
        EXPECT(0x15af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01AF
        gbc.setState(0x95cc, 0xf0cf, 0x86b0, 0x7c9b, 0xbb37, 0xb8ff, 0x1, 0x1);
        gbc.writeMem(0x95cc, { 0x2d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf0cf, gbc.sp());
        EXPECT(0x95cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x95cc));
        // 2D 01B0
        gbc.setState(0x21ed, 0x9dbf, 0x4310, 0x7803, 0x5932, 0xed4, 0x0, 0x0);
        gbc.writeMem(0x21ed, { 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9dbf, gbc.sp());
        EXPECT(0x21ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01B1
        gbc.setState(0xe786, 0xbd1b, 0x5f30, 0x1c17, 0x942, 0x7677, 0x1, 0x1);
        gbc.writeMem(0xe786, { 0x2d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbd1b, gbc.sp());
        EXPECT(0xe787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe786));
        // 2D 01B3
        gbc.setState(0x2c64, 0x7f44, 0xa870, 0x4f1a, 0x21d6, 0x75a6, 0x0, 0x0);
        gbc.writeMem(0x2c64, { 0x2d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7f44, gbc.sp());
        EXPECT(0x2c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01B4
        gbc.setState(0x4bb3, 0xbfdd, 0xda0, 0xb3b2, 0x45ef, 0x8b60, 0x1, 0x1);
        gbc.writeMem(0x4bb3, { 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbfdd, gbc.sp());
        EXPECT(0x4bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01B5
        gbc.setState(0x990c, 0xfcc8, 0x3730, 0x7c14, 0xc18a, 0x38e9, 0x0, 0x1);
        gbc.writeMem(0x990c, { 0x2d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfcc8, gbc.sp());
        EXPECT(0x990d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x990c));
        // 2D 01B6
        gbc.setState(0xc88e, 0xc5c2, 0x2f10, 0xc9e1, 0xc1fa, 0x3578, 0x1, 0x1);
        gbc.writeMem(0xc88e, { 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc5c2, gbc.sp());
        EXPECT(0xc88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc88e));
        // 2D 01B7
        gbc.setState(0xc5b1, 0x2796, 0x89a0, 0x6368, 0x3dab, 0x6412, 0x1, 0x0);
        gbc.writeMem(0xc5b1, { 0x2d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2796, gbc.sp());
        EXPECT(0xc5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc5b1));
        // 2D 01B8
        gbc.setState(0xd060, 0x613d, 0x2e60, 0xaee7, 0x9fbc, 0x2c62, 0x0, 0x0);
        gbc.writeMem(0xd060, { 0x2d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x613d, gbc.sp());
        EXPECT(0xd061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd060));
        // 2D 01B9
        gbc.setState(0x2452, 0xce8, 0xc320, 0x832d, 0x3bb0, 0xaf57, 0x0, 0x1);
        gbc.writeMem(0x2452, { 0x2d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xce8, gbc.sp());
        EXPECT(0x2453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01BA
        gbc.setState(0x4b40, 0x641, 0xfbe0, 0x6db7, 0x9285, 0xe8f9, 0x0, 0x0);
        gbc.writeMem(0x4b40, { 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x641, gbc.sp());
        EXPECT(0x4b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01BB
        gbc.setState(0xa4e5, 0x5051, 0x5be0, 0x8931, 0xbc92, 0x8cc3, 0x0, 0x1);
        gbc.writeMem(0xa4e5, { 0x2d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5051, gbc.sp());
        EXPECT(0xa4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa4e5));
        // 2D 01BC
        gbc.setState(0x8d92, 0xf807, 0x7d40, 0xfa4d, 0xa8ab, 0x686a, 0x1, 0x0);
        gbc.writeMem(0x8d92, { 0x2d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf807, gbc.sp());
        EXPECT(0x8d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8d92));
        // 2D 01BE
        gbc.setState(0x585f, 0xc27c, 0xf360, 0x6737, 0x2e2f, 0xbf6a, 0x1, 0x1);
        gbc.writeMem(0x585f, { 0x2d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc27c, gbc.sp());
        EXPECT(0x5860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01BF
        gbc.setState(0xd3ca, 0x5f8f, 0x2ef0, 0xea29, 0x7bfd, 0x4310, 0x0, 0x1);
        gbc.writeMem(0xd3ca, { 0x2d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5f8f, gbc.sp());
        EXPECT(0xd3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd3ca));
        // 2D 01C0
        gbc.setState(0x62c3, 0xb327, 0x2be0, 0x8df9, 0x5855, 0xb613, 0x0, 0x1);
        gbc.writeMem(0x62c3, { 0x2d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb327, gbc.sp());
        EXPECT(0x62c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01C1
        gbc.setState(0xd5f4, 0xa5de, 0xf0b0, 0x60ab, 0xb16a, 0xa954, 0x0, 0x0);
        gbc.writeMem(0xd5f4, { 0x2d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa5de, gbc.sp());
        EXPECT(0xd5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd5f4));
        // 2D 01C2
        gbc.setState(0x3fd0, 0xd372, 0x9950, 0x9d67, 0x6ce6, 0x1d52, 0x0, 0x1);
        gbc.writeMem(0x3fd0, { 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd372, gbc.sp());
        EXPECT(0x3fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01C3
        gbc.setState(0x8c59, 0xc0fb, 0xa6d0, 0x7945, 0xd1dc, 0xe415, 0x1, 0x0);
        gbc.writeMem(0x8c59, { 0x2d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc0fb, gbc.sp());
        EXPECT(0x8c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8c59));
        // 2D 01C4
        gbc.setState(0xdd6d, 0x890c, 0xa2f0, 0x9910, 0x2a0, 0x1514, 0x0, 0x1);
        gbc.writeMem(0xdd6d, { 0x2d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x890c, gbc.sp());
        EXPECT(0xdd6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdd6d));
        // 2D 01C5
        gbc.setState(0xa6a9, 0x749d, 0xa220, 0xac7c, 0x53dc, 0x2a65, 0x0, 0x1);
        gbc.writeMem(0xa6a9, { 0x2d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x749d, gbc.sp());
        EXPECT(0xa6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa6a9));
        // 2D 01C6
        gbc.setState(0xc24f, 0x3cf5, 0xf7d0, 0x2018, 0x5eca, 0x2a8a, 0x1, 0x1);
        gbc.writeMem(0xc24f, { 0x2d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3cf5, gbc.sp());
        EXPECT(0xc250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc24f));
        // 2D 01C7
        gbc.setState(0xe409, 0x3cb0, 0xc00, 0x3761, 0x1ee8, 0x9a35, 0x0, 0x1);
        gbc.writeMem(0xe409, { 0x2d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0xe40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe409));
        // 2D 01C8
        gbc.setState(0xef1f, 0x736b, 0x5970, 0x114b, 0x352a, 0xcaf3, 0x1, 0x1);
        gbc.writeMem(0xef1f, { 0x2d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x736b, gbc.sp());
        EXPECT(0xef20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xef1f));
        // 2D 01C9
        gbc.setState(0xb3ca, 0x9da3, 0x8ab0, 0x5a6a, 0xc25f, 0x95c8, 0x0, 0x1);
        gbc.writeMem(0xb3ca, { 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9da3, gbc.sp());
        EXPECT(0xb3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb3ca));
        // 2D 01CA
        gbc.setState(0xbbb9, 0x85e8, 0x4110, 0x92b2, 0x7d62, 0x49e, 0x0, 0x0);
        gbc.writeMem(0xbbb9, { 0x2d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x85e8, gbc.sp());
        EXPECT(0xbbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbbb9));
        // 2D 01CB
        gbc.setState(0x5688, 0x1107, 0xf210, 0x1be9, 0xdf23, 0xb1ab, 0x0, 0x1);
        gbc.writeMem(0x5688, { 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1107, gbc.sp());
        EXPECT(0x5689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01CC
        gbc.setState(0x9e86, 0xf935, 0x4080, 0x6227, 0x5058, 0x714a, 0x1, 0x1);
        gbc.writeMem(0x9e86, { 0x2d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf935, gbc.sp());
        EXPECT(0x9e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9e86));
        // 2D 01CD
        gbc.setState(0x93e5, 0x675e, 0x5270, 0xa6c2, 0x2da1, 0x3a11, 0x1, 0x0);
        gbc.writeMem(0x93e5, { 0x2d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x675e, gbc.sp());
        EXPECT(0x93e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x93e5));
        // 2D 01CE
        gbc.setState(0xb15c, 0x19d7, 0xb720, 0xe9de, 0xa904, 0x73e8, 0x1, 0x0);
        gbc.writeMem(0xb15c, { 0x2d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x19d7, gbc.sp());
        EXPECT(0xb15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb15c));
        // 2D 01CF
        gbc.setState(0x21b0, 0x76e9, 0x2750, 0x2ea8, 0x7bca, 0x52f, 0x0, 0x1);
        gbc.writeMem(0x21b0, { 0x2d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x76e9, gbc.sp());
        EXPECT(0x21b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01D0
        gbc.setState(0x5a70, 0x778, 0x6de0, 0xa5ca, 0xd730, 0x9898, 0x1, 0x0);
        gbc.writeMem(0x5a70, { 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x778, gbc.sp());
        EXPECT(0x5a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01D1
        gbc.setState(0x4f6e, 0xe6, 0x3670, 0x62f2, 0x8402, 0x7a29, 0x1, 0x1);
        gbc.writeMem(0x4f6e, { 0x2d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe6, gbc.sp());
        EXPECT(0x4f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01D2
        gbc.setState(0x4bdf, 0xe8ad, 0xfc00, 0x3f41, 0xea10, 0x5568, 0x0, 0x0);
        gbc.writeMem(0x4bdf, { 0x2d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe8ad, gbc.sp());
        EXPECT(0x4be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01D3
        gbc.setState(0x3d09, 0xffa, 0x25e0, 0x2bb, 0xf68d, 0xb90a, 0x1, 0x0);
        gbc.writeMem(0x3d09, { 0x2d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xffa, gbc.sp());
        EXPECT(0x3d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01D4
        gbc.setState(0x191d, 0xec74, 0x73c0, 0xe9ad, 0x518f, 0x8e72, 0x1, 0x1);
        gbc.writeMem(0x191d, { 0x2d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xec74, gbc.sp());
        EXPECT(0x191e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01D5
        gbc.setState(0xece2, 0x955, 0xc7e0, 0x63f6, 0x6cbc, 0x2288, 0x0, 0x0);
        gbc.writeMem(0xece2, { 0x2d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x955, gbc.sp());
        EXPECT(0xece3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xece2));
        // 2D 01D6
        gbc.setState(0xafe2, 0xb373, 0x6db0, 0xbe61, 0xde0, 0x76ac, 0x0, 0x0);
        gbc.writeMem(0xafe2, { 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb373, gbc.sp());
        EXPECT(0xafe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xafe2));
        // 2D 01D7
        gbc.setState(0xc2d4, 0xbd80, 0xd950, 0xd5c1, 0xad0, 0x6867, 0x0, 0x1);
        gbc.writeMem(0xc2d4, { 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbd80, gbc.sp());
        EXPECT(0xc2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc2d4));
        // 2D 01D8
        gbc.setState(0xa8fb, 0x5a32, 0xd750, 0x3d94, 0x5826, 0x8b46, 0x1, 0x1);
        gbc.writeMem(0xa8fb, { 0x2d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5a32, gbc.sp());
        EXPECT(0xa8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa8fb));
        // 2D 01D9
        gbc.setState(0xc981, 0x9566, 0x190, 0x6f54, 0x2c01, 0xe07a, 0x1, 0x1);
        gbc.writeMem(0xc981, { 0x2d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9566, gbc.sp());
        EXPECT(0xc982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc981));
        // 2D 01DA
        gbc.setState(0x6b4, 0xa12e, 0xfd20, 0xb55c, 0x2b21, 0xd8a7, 0x1, 0x0);
        gbc.writeMem(0x6b4, { 0x2d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa12e, gbc.sp());
        EXPECT(0x6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01DB
        gbc.setState(0x50de, 0x7538, 0x4f50, 0x5ce9, 0x23c, 0x25d7, 0x1, 0x1);
        gbc.writeMem(0x50de, { 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7538, gbc.sp());
        EXPECT(0x50df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01DC
        gbc.setState(0x68da, 0xe6a3, 0x5b00, 0x5900, 0x1f28, 0x422e, 0x1, 0x0);
        gbc.writeMem(0x68da, { 0x2d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe6a3, gbc.sp());
        EXPECT(0x68db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01DD
        gbc.setState(0x80d9, 0x3165, 0x1f90, 0x3c66, 0x7980, 0x6ea9, 0x0, 0x1);
        gbc.writeMem(0x80d9, { 0x2d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3165, gbc.sp());
        EXPECT(0x80da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x80d9));
        // 2D 01DE
        gbc.setState(0x8e97, 0xb5f1, 0xa650, 0x1867, 0x4f7e, 0x5e4, 0x0, 0x0);
        gbc.writeMem(0x8e97, { 0x2d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb5f1, gbc.sp());
        EXPECT(0x8e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8e97));
        // 2D 01DF
        gbc.setState(0xca5, 0x5e74, 0xf2a0, 0x22ce, 0x4eda, 0xf83c, 0x1, 0x1);
        gbc.writeMem(0xca5, { 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5e74, gbc.sp());
        EXPECT(0xca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01E0
        gbc.setState(0xb8e2, 0x7af6, 0x4d20, 0xbd6d, 0x5bf7, 0xf9b0, 0x0, 0x0);
        gbc.writeMem(0xb8e2, { 0x2d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7af6, gbc.sp());
        EXPECT(0xb8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb8e2));
        // 2D 01E1
        gbc.setState(0xba5, 0xabc7, 0xcdc0, 0xcd42, 0x1a4b, 0xb399, 0x0, 0x1);
        gbc.writeMem(0xba5, { 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xabc7, gbc.sp());
        EXPECT(0xba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01E2
        gbc.setState(0x9ec6, 0x87de, 0x5ed0, 0xcec9, 0xf461, 0xf09a, 0x0, 0x1);
        gbc.writeMem(0x9ec6, { 0x2d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x87de, gbc.sp());
        EXPECT(0x9ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9ec6));
        // 2D 01E3
        gbc.setState(0x5e76, 0x74a1, 0x7fc0, 0x8102, 0x1d60, 0x93ef, 0x0, 0x0);
        gbc.writeMem(0x5e76, { 0x2d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0x5e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01E4
        gbc.setState(0xd8f2, 0x93eb, 0x9280, 0x9edf, 0x64d9, 0xcd7a, 0x1, 0x1);
        gbc.writeMem(0xd8f2, { 0x2d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x93eb, gbc.sp());
        EXPECT(0xd8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd8f2));
        // 2D 01E5
        gbc.setState(0x39c3, 0xb077, 0xf2c0, 0xe073, 0x559a, 0x4451, 0x0, 0x1);
        gbc.writeMem(0x39c3, { 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb077, gbc.sp());
        EXPECT(0x39c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01E6
        gbc.setState(0xc357, 0xd1e9, 0x5360, 0xba10, 0xc5fb, 0x96d3, 0x0, 0x1);
        gbc.writeMem(0xc357, { 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd1e9, gbc.sp());
        EXPECT(0xc358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc357));
        // 2D 01E7
        gbc.setState(0x4cd, 0xe2a6, 0x9220, 0x55fd, 0x71aa, 0x9b21, 0x0, 0x1);
        gbc.writeMem(0x4cd, { 0x2d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe2a6, gbc.sp());
        EXPECT(0x4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01E8
        gbc.setState(0xcb48, 0xa504, 0x4be0, 0x3621, 0xfbbe, 0xecf1, 0x1, 0x1);
        gbc.writeMem(0xcb48, { 0x2d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa504, gbc.sp());
        EXPECT(0xcb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcb48));
        // 2D 01E9
        gbc.setState(0x4cff, 0xd234, 0x87b0, 0xd46c, 0xa88d, 0xd7f1, 0x1, 0x0);
        gbc.writeMem(0x4cff, { 0x2d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd234, gbc.sp());
        EXPECT(0x4d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01EA
        gbc.setState(0x2f15, 0x7742, 0xd600, 0x944a, 0x7536, 0x98e3, 0x0, 0x0);
        gbc.writeMem(0x2f15, { 0x2d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7742, gbc.sp());
        EXPECT(0x2f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01EB
        gbc.setState(0xb4a2, 0x90c0, 0x5bf0, 0x256c, 0x908e, 0xb429, 0x1, 0x0);
        gbc.writeMem(0xb4a2, { 0x2d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x90c0, gbc.sp());
        EXPECT(0xb4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb4a2));
        // 2D 01EC
        gbc.setState(0x2f11, 0x8638, 0x75f0, 0xb705, 0x368, 0x4f25, 0x0, 0x1);
        gbc.writeMem(0x2f11, { 0x2d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8638, gbc.sp());
        EXPECT(0x2f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01ED
        gbc.setState(0x6427, 0xa713, 0xf540, 0x80cc, 0x4880, 0x79bf, 0x1, 0x0);
        gbc.writeMem(0x6427, { 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa713, gbc.sp());
        EXPECT(0x6428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01EE
        gbc.setState(0x194b, 0x74b7, 0x4d90, 0x9349, 0x2b60, 0x6a5a, 0x1, 0x1);
        gbc.writeMem(0x194b, { 0x2d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x74b7, gbc.sp());
        EXPECT(0x194c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01EF
        gbc.setState(0x7d3d, 0x402, 0xdb90, 0x44cf, 0x52ba, 0x62b, 0x0, 0x0);
        gbc.writeMem(0x7d3d, { 0x2d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x402, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01F0
        gbc.setState(0x7500, 0x1c87, 0x84a0, 0xac99, 0x5950, 0x54d6, 0x1, 0x0);
        gbc.writeMem(0x7500, { 0x2d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1c87, gbc.sp());
        EXPECT(0x7501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01F1
        gbc.setState(0x2c6b, 0xb493, 0x53f0, 0xc5d6, 0x6cf9, 0x16b3, 0x1, 0x1);
        gbc.writeMem(0x2c6b, { 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb493, gbc.sp());
        EXPECT(0x2c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01F2
        gbc.setState(0xe78, 0x15d, 0x40e0, 0xe451, 0xb3be, 0x4f5b, 0x1, 0x1);
        gbc.writeMem(0xe78, { 0x2d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x15d, gbc.sp());
        EXPECT(0xe79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01F3
        gbc.setState(0x1dd5, 0x8dc1, 0x4a00, 0x255, 0xf885, 0x23e1, 0x1, 0x0);
        gbc.writeMem(0x1dd5, { 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8dc1, gbc.sp());
        EXPECT(0x1dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01F4
        gbc.setState(0xedc7, 0x8d7e, 0xec0, 0xcd8b, 0x2b8c, 0x727d, 0x1, 0x1);
        gbc.writeMem(0xedc7, { 0x2d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8d7e, gbc.sp());
        EXPECT(0xedc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xedc7));
        // 2D 01F5
        gbc.setState(0x9044, 0x8b92, 0xba30, 0xc98c, 0x1986, 0xd9e2, 0x1, 0x0);
        gbc.writeMem(0x9044, { 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8b92, gbc.sp());
        EXPECT(0x9045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9044));
        // 2D 01F6
        gbc.setState(0x79c0, 0x998f, 0xe1a0, 0x6bb2, 0xbe44, 0x404f, 0x1, 0x1);
        gbc.writeMem(0x79c0, { 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x998f, gbc.sp());
        EXPECT(0x79c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 01F7
        gbc.setState(0x3dc1, 0xb43d, 0x8530, 0x27f8, 0x3af8, 0x199d, 0x0, 0x0);
        gbc.writeMem(0x3dc1, { 0x2d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb43d, gbc.sp());
        EXPECT(0x3dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01F8
        gbc.setState(0x271b, 0x559a, 0xc830, 0x5aa, 0x679c, 0xdc3f, 0x0, 0x1);
        gbc.writeMem(0x271b, { 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x559a, gbc.sp());
        EXPECT(0x271c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01F9
        gbc.setState(0x360a, 0x70af, 0x7a10, 0x791b, 0x190c, 0xac18, 0x0, 0x0);
        gbc.writeMem(0x360a, { 0x2d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x70af, gbc.sp());
        EXPECT(0x360b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01FA
        gbc.setState(0x9515, 0xe422, 0xc570, 0x7b02, 0x4282, 0xb2cd, 0x1, 0x1);
        gbc.writeMem(0x9515, { 0x2d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe422, gbc.sp());
        EXPECT(0x9516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9515));
        // 2D 01FB
        gbc.setState(0x2f03, 0x20f1, 0xbdf0, 0xfe6f, 0x2ec8, 0x4c53, 0x1, 0x1);
        gbc.writeMem(0x2f03, { 0x2d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x20f1, gbc.sp());
        EXPECT(0x2f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01FC
        gbc.setState(0xb698, 0x5c57, 0x4ae0, 0x6a58, 0xc2f7, 0xc46b, 0x0, 0x0);
        gbc.writeMem(0xb698, { 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5c57, gbc.sp());
        EXPECT(0xb699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb698));
        // 2D 01FD
        gbc.setState(0x6366, 0xed04, 0xcb50, 0x8945, 0xdc8e, 0x4d04, 0x0, 0x1);
        gbc.writeMem(0x6366, { 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xed04, gbc.sp());
        EXPECT(0x6367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 01FE
        gbc.setState(0xedc3, 0x920f, 0xd690, 0x4db0, 0x833d, 0x5f48, 0x0, 0x0);
        gbc.writeMem(0xedc3, { 0x2d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x920f, gbc.sp());
        EXPECT(0xedc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xedc3));
        // 2D 01FF
        gbc.setState(0xc780, 0xb6fb, 0x7620, 0x2943, 0x76ca, 0xba99, 0x0, 0x1);
        gbc.writeMem(0xc780, { 0x2d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb6fb, gbc.sp());
        EXPECT(0xc781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc780));
        // 2D 0200
        gbc.setState(0x268e, 0x1dd9, 0x3580, 0xec38, 0xb415, 0xae60, 0x0, 0x0);
        gbc.writeMem(0x268e, { 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1dd9, gbc.sp());
        EXPECT(0x268f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0203
        gbc.setState(0xba6b, 0x7181, 0xfd70, 0xa106, 0xcd7b, 0xc037, 0x0, 0x0);
        gbc.writeMem(0xba6b, { 0x2d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7181, gbc.sp());
        EXPECT(0xba6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xba6b));
        // 2D 0204
        gbc.setState(0x8f61, 0x438c, 0xe4f0, 0xdf4, 0x5a32, 0xc6d4, 0x1, 0x1);
        gbc.writeMem(0x8f61, { 0x2d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x438c, gbc.sp());
        EXPECT(0x8f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8f61));
        // 2D 0205
        gbc.setState(0x7cc8, 0xa39, 0xb8d0, 0xcc61, 0x49e0, 0x48e, 0x1, 0x1);
        gbc.writeMem(0x7cc8, { 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa39, gbc.sp());
        EXPECT(0x7cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0206
        gbc.setState(0x11e, 0xf2e6, 0x9cc0, 0xd353, 0x490c, 0x68fc, 0x0, 0x0);
        gbc.writeMem(0x11e, { 0x2d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x11f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0207
        gbc.setState(0x8a39, 0x7680, 0xe10, 0x8be2, 0x6bdc, 0x9528, 0x1, 0x0);
        gbc.writeMem(0x8a39, { 0x2d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7680, gbc.sp());
        EXPECT(0x8a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8a39));
        // 2D 0208
        gbc.setState(0xcd9c, 0x74e9, 0xc250, 0x33b6, 0x5d35, 0xe217, 0x0, 0x1);
        gbc.writeMem(0xcd9c, { 0x2d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x74e9, gbc.sp());
        EXPECT(0xcd9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcd9c));
        // 2D 0209
        gbc.setState(0x6b2d, 0x7963, 0xc3b0, 0xd64c, 0x58a1, 0x72ba, 0x0, 0x0);
        gbc.writeMem(0x6b2d, { 0x2d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7963, gbc.sp());
        EXPECT(0x6b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 020A
        gbc.setState(0x9745, 0xc5d4, 0xfe20, 0x825a, 0x50cf, 0xdcd4, 0x0, 0x0);
        gbc.writeMem(0x9745, { 0x2d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc5d4, gbc.sp());
        EXPECT(0x9746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9745));
        // 2D 020B
        gbc.setState(0x7cbd, 0x7557, 0x5130, 0x5982, 0x75c0, 0x808a, 0x0, 0x1);
        gbc.writeMem(0x7cbd, { 0x2d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7557, gbc.sp());
        EXPECT(0x7cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 020C
        gbc.setState(0xef6e, 0x9064, 0x140, 0xf895, 0x8af5, 0x2d19, 0x0, 0x0);
        gbc.writeMem(0xef6e, { 0x2d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9064, gbc.sp());
        EXPECT(0xef6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xef6e));
        // 2D 020D
        gbc.setState(0x8fd2, 0xbc, 0x5860, 0x8c82, 0x8a8a, 0x1cea, 0x1, 0x1);
        gbc.writeMem(0x8fd2, { 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc, gbc.sp());
        EXPECT(0x8fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8fd2));
        // 2D 020E
        gbc.setState(0x8b3a, 0xe2f5, 0x9600, 0x83d7, 0x2133, 0xf611, 0x1, 0x0);
        gbc.writeMem(0x8b3a, { 0x2d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe2f5, gbc.sp());
        EXPECT(0x8b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8b3a));
        // 2D 020F
        gbc.setState(0xa065, 0xd7b1, 0xd6a0, 0xc223, 0x8e91, 0xbab1, 0x0, 0x0);
        gbc.writeMem(0xa065, { 0x2d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd7b1, gbc.sp());
        EXPECT(0xa066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa065));
        // 2D 0210
        gbc.setState(0x4c2b, 0x3ed3, 0x940, 0xdc7a, 0x4ac7, 0xf8ff, 0x0, 0x0);
        gbc.writeMem(0x4c2b, { 0x2d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3ed3, gbc.sp());
        EXPECT(0x4c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0211
        gbc.setState(0xb0d3, 0x36fc, 0x7a80, 0x275, 0xd100, 0x2770, 0x0, 0x0);
        gbc.writeMem(0xb0d3, { 0x2d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x36fc, gbc.sp());
        EXPECT(0xb0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb0d3));
        // 2D 0212
        gbc.setState(0x858f, 0xac0a, 0x7510, 0x7f96, 0x530c, 0xa399, 0x0, 0x0);
        gbc.writeMem(0x858f, { 0x2d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xac0a, gbc.sp());
        EXPECT(0x8590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x858f));
        // 2D 0214
        gbc.setState(0x9e9c, 0x301c, 0x18a0, 0x8f48, 0xdb64, 0x4dae, 0x1, 0x1);
        gbc.writeMem(0x9e9c, { 0x2d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x301c, gbc.sp());
        EXPECT(0x9e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9e9c));
        // 2D 0215
        gbc.setState(0x9b3b, 0xb693, 0x1c40, 0xab40, 0xa494, 0x9764, 0x0, 0x1);
        gbc.writeMem(0x9b3b, { 0x2d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb693, gbc.sp());
        EXPECT(0x9b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9b3b));
        // 2D 0216
        gbc.setState(0x39aa, 0x96d7, 0xf710, 0xe983, 0xbd71, 0xc8e3, 0x0, 0x1);
        gbc.writeMem(0x39aa, { 0x2d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x96d7, gbc.sp());
        EXPECT(0x39ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0217
        gbc.setState(0xc55, 0xff83, 0xbeb0, 0xb3c2, 0xb218, 0xc250, 0x1, 0x0);
        gbc.writeMem(0xc55, { 0x2d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xff83, gbc.sp());
        EXPECT(0xc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0218
        gbc.setState(0x303c, 0x6ff6, 0xcfc0, 0x4acb, 0xc749, 0xdb8c, 0x1, 0x0);
        gbc.writeMem(0x303c, { 0x2d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6ff6, gbc.sp());
        EXPECT(0x303d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0219
        gbc.setState(0xcc8, 0x6f40, 0xa020, 0xd03d, 0xa849, 0xa2f3, 0x1, 0x1);
        gbc.writeMem(0xcc8, { 0x2d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6f40, gbc.sp());
        EXPECT(0xcc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 021A
        gbc.setState(0xb49f, 0x6996, 0xd600, 0x3438, 0x808c, 0xb966, 0x0, 0x0);
        gbc.writeMem(0xb49f, { 0x2d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6996, gbc.sp());
        EXPECT(0xb4a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb49f));
        // 2D 021B
        gbc.setState(0xdbaf, 0x59bb, 0x34b0, 0x2857, 0x3b17, 0xe0a6, 0x0, 0x0);
        gbc.writeMem(0xdbaf, { 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x59bb, gbc.sp());
        EXPECT(0xdbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdbaf));
        // 2D 021C
        gbc.setState(0xa2f9, 0xa999, 0xb3e0, 0x638f, 0xeeb7, 0x9669, 0x1, 0x0);
        gbc.writeMem(0xa2f9, { 0x2d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa999, gbc.sp());
        EXPECT(0xa2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa2f9));
        // 2D 021D
        gbc.setState(0xe563, 0x9600, 0x7730, 0x9f12, 0x9994, 0x24b2, 0x1, 0x1);
        gbc.writeMem(0xe563, { 0x2d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9600, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe563));
        // 2D 021E
        gbc.setState(0x433d, 0xc043, 0x26e0, 0x71f7, 0x630, 0x22a5, 0x0, 0x1);
        gbc.writeMem(0x433d, { 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc043, gbc.sp());
        EXPECT(0x433e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 021F
        gbc.setState(0x833f, 0xa04e, 0xec80, 0x6be, 0xb5d4, 0xe71c, 0x0, 0x1);
        gbc.writeMem(0x833f, { 0x2d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa04e, gbc.sp());
        EXPECT(0x8340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x833f));
        // 2D 0220
        gbc.setState(0xa955, 0xd3eb, 0xa7c0, 0x7452, 0x3dd, 0xbccc, 0x0, 0x0);
        gbc.writeMem(0xa955, { 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd3eb, gbc.sp());
        EXPECT(0xa956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa955));
        // 2D 0221
        gbc.setState(0x8d14, 0xf4bb, 0xdbc0, 0xeb51, 0x5dba, 0x5905, 0x0, 0x1);
        gbc.writeMem(0x8d14, { 0x2d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf4bb, gbc.sp());
        EXPECT(0x8d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8d14));
        // 2D 0222
        gbc.setState(0xb529, 0xfcd, 0x2410, 0xce21, 0xb0a7, 0xfd65, 0x0, 0x1);
        gbc.writeMem(0xb529, { 0x2d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfcd, gbc.sp());
        EXPECT(0xb52a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb529));
        // 2D 0223
        gbc.setState(0xc335, 0x26fc, 0xc0c0, 0xba0f, 0xe98, 0x23ee, 0x1, 0x0);
        gbc.writeMem(0xc335, { 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x26fc, gbc.sp());
        EXPECT(0xc336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc335));
        // 2D 0224
        gbc.setState(0xcbed, 0x517, 0xe570, 0xafa9, 0x1e97, 0x1b78, 0x1, 0x0);
        gbc.writeMem(0xcbed, { 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x517, gbc.sp());
        EXPECT(0xcbee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcbed));
        // 2D 0225
        gbc.setState(0x6a1a, 0xb88d, 0x8370, 0x3984, 0xba77, 0x5885, 0x0, 0x1);
        gbc.writeMem(0x6a1a, { 0x2d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb88d, gbc.sp());
        EXPECT(0x6a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0226
        gbc.setState(0x175, 0x7e4c, 0xdcb0, 0xffc2, 0xd0dc, 0x85b4, 0x1, 0x1);
        gbc.writeMem(0x175, { 0x2d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7e4c, gbc.sp());
        EXPECT(0x176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0227
        gbc.setState(0xd7d2, 0x41c9, 0x630, 0x96ac, 0x15da, 0xacca, 0x1, 0x0);
        gbc.writeMem(0xd7d2, { 0x2d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x41c9, gbc.sp());
        EXPECT(0xd7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd7d2));
        // 2D 0228
        gbc.setState(0x9f84, 0xb242, 0x4d40, 0x3844, 0x7012, 0xf75e, 0x1, 0x1);
        gbc.writeMem(0x9f84, { 0x2d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb242, gbc.sp());
        EXPECT(0x9f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9f84));
        // 2D 0229
        gbc.setState(0x4442, 0x2206, 0xe20, 0xeb3a, 0x7751, 0xb66b, 0x1, 0x0);
        gbc.writeMem(0x4442, { 0x2d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2206, gbc.sp());
        EXPECT(0x4443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 022A
        gbc.setState(0x868a, 0x94b2, 0x3cc0, 0x7550, 0x54fd, 0x35c7, 0x0, 0x1);
        gbc.writeMem(0x868a, { 0x2d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x94b2, gbc.sp());
        EXPECT(0x868b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x868a));
        // 2D 022B
        gbc.setState(0x438f, 0xe44e, 0x6ac0, 0xb511, 0xf349, 0x8303, 0x1, 0x1);
        gbc.writeMem(0x438f, { 0x2d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe44e, gbc.sp());
        EXPECT(0x4390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 022C
        gbc.setState(0x91b7, 0x8c56, 0xeb30, 0xff60, 0xc13a, 0x25b0, 0x0, 0x0);
        gbc.writeMem(0x91b7, { 0x2d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8c56, gbc.sp());
        EXPECT(0x91b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x91b7));
        // 2D 022D
        gbc.setState(0x9838, 0xbca5, 0xba20, 0x57b7, 0x528e, 0xcad5, 0x1, 0x0);
        gbc.writeMem(0x9838, { 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbca5, gbc.sp());
        EXPECT(0x9839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9838));
        // 2D 022E
        gbc.setState(0xc052, 0x8acb, 0x90a0, 0x5e49, 0x4091, 0x3108, 0x1, 0x0);
        gbc.writeMem(0xc052, { 0x2d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8acb, gbc.sp());
        EXPECT(0xc053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc052));
        // 2D 022F
        gbc.setState(0x6602, 0x8899, 0xc350, 0xdaff, 0xa9cc, 0x2416, 0x0, 0x0);
        gbc.writeMem(0x6602, { 0x2d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8899, gbc.sp());
        EXPECT(0x6603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0230
        gbc.setState(0x2a90, 0x4810, 0x6280, 0x150, 0xd915, 0x1d0c, 0x0, 0x1);
        gbc.writeMem(0x2a90, { 0x2d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4810, gbc.sp());
        EXPECT(0x2a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0231
        gbc.setState(0x5985, 0x871b, 0x3020, 0x157e, 0xbb55, 0xe7dc, 0x0, 0x0);
        gbc.writeMem(0x5985, { 0x2d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x871b, gbc.sp());
        EXPECT(0x5986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0232
        gbc.setState(0xd78b, 0x5d51, 0x1620, 0x1dea, 0x6f0f, 0xc1ed, 0x0, 0x1);
        gbc.writeMem(0xd78b, { 0x2d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5d51, gbc.sp());
        EXPECT(0xd78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd78b));
        // 2D 0233
        gbc.setState(0x6ee8, 0x6a3a, 0x21d0, 0x4213, 0xb3e8, 0x53f1, 0x1, 0x0);
        gbc.writeMem(0x6ee8, { 0x2d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6a3a, gbc.sp());
        EXPECT(0x6ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0234
        gbc.setState(0xc31b, 0x1ce1, 0xab30, 0xbdf3, 0x8463, 0xdbcc, 0x0, 0x1);
        gbc.writeMem(0xc31b, { 0x2d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1ce1, gbc.sp());
        EXPECT(0xc31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc31b));
        // 2D 0235
        gbc.setState(0x8fbb, 0x3130, 0x7c0, 0x2026, 0x21e4, 0x629e, 0x1, 0x1);
        gbc.writeMem(0x8fbb, { 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3130, gbc.sp());
        EXPECT(0x8fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8fbb));
        // 2D 0236
        gbc.setState(0x1662, 0xafc7, 0xc2f0, 0xa9fe, 0x99d4, 0x37cc, 0x0, 0x0);
        gbc.writeMem(0x1662, { 0x2d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xafc7, gbc.sp());
        EXPECT(0x1663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0237
        gbc.setState(0x8872, 0xda96, 0xfa60, 0x519a, 0x5b47, 0xfe57, 0x1, 0x1);
        gbc.writeMem(0x8872, { 0x2d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xda96, gbc.sp());
        EXPECT(0x8873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8872));
        // 2D 0238
        gbc.setState(0x3853, 0x373, 0x860, 0x7f7f, 0xe6d3, 0x9469, 0x0, 0x1);
        gbc.writeMem(0x3853, { 0x2d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x373, gbc.sp());
        EXPECT(0x3854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0239
        gbc.setState(0x51b, 0xcb57, 0x6290, 0xab72, 0x4111, 0xaa54, 0x1, 0x1);
        gbc.writeMem(0x51b, { 0x2d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcb57, gbc.sp());
        EXPECT(0x51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 023A
        gbc.setState(0x23b9, 0xc7c4, 0xae00, 0xe225, 0x5832, 0x8548, 0x1, 0x0);
        gbc.writeMem(0x23b9, { 0x2d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc7c4, gbc.sp());
        EXPECT(0x23ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 023B
        gbc.setState(0x9897, 0x2c9c, 0x6c60, 0x73f5, 0x5a17, 0x238, 0x1, 0x1);
        gbc.writeMem(0x9897, { 0x2d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2c9c, gbc.sp());
        EXPECT(0x9898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9897));
        // 2D 023C
        gbc.setState(0x1606, 0x6793, 0x1680, 0x2270, 0xa85f, 0xbc8c, 0x0, 0x1);
        gbc.writeMem(0x1606, { 0x2d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6793, gbc.sp());
        EXPECT(0x1607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 023D
        gbc.setState(0x18a4, 0xc594, 0x9fb0, 0xd27b, 0xf18a, 0xfe77, 0x1, 0x1);
        gbc.writeMem(0x18a4, { 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc594, gbc.sp());
        EXPECT(0x18a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 023E
        gbc.setState(0x7da0, 0x9f9, 0x1430, 0x650a, 0xf3bd, 0xdb70, 0x0, 0x0);
        gbc.writeMem(0x7da0, { 0x2d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9f9, gbc.sp());
        EXPECT(0x7da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 023F
        gbc.setState(0x51aa, 0x54a5, 0x3d0, 0x2f12, 0x2270, 0xe3e4, 0x0, 0x0);
        gbc.writeMem(0x51aa, { 0x2d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x54a5, gbc.sp());
        EXPECT(0x51ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0240
        gbc.setState(0xcf23, 0xd7f7, 0xe110, 0x564e, 0x2419, 0x93e8, 0x1, 0x1);
        gbc.writeMem(0xcf23, { 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd7f7, gbc.sp());
        EXPECT(0xcf24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcf23));
        // 2D 0241
        gbc.setState(0x26d4, 0x141f, 0x9130, 0x7a9e, 0x68c2, 0x21d9, 0x0, 0x1);
        gbc.writeMem(0x26d4, { 0x2d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x141f, gbc.sp());
        EXPECT(0x26d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0242
        gbc.setState(0x54c7, 0x252, 0x72b0, 0xbc2c, 0x11f2, 0x7c71, 0x0, 0x0);
        gbc.writeMem(0x54c7, { 0x2d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x252, gbc.sp());
        EXPECT(0x54c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0243
        gbc.setState(0xb7b5, 0x435f, 0x53d0, 0x90d6, 0x432f, 0x3cc2, 0x1, 0x1);
        gbc.writeMem(0xb7b5, { 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x435f, gbc.sp());
        EXPECT(0xb7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb7b5));
        // 2D 0244
        gbc.setState(0x3563, 0xe19b, 0x2490, 0x6595, 0x8eac, 0xa571, 0x1, 0x0);
        gbc.writeMem(0x3563, { 0x2d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe19b, gbc.sp());
        EXPECT(0x3564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0245
        gbc.setState(0x37, 0x354f, 0xcbd0, 0xaf8a, 0x260a, 0x565d, 0x0, 0x1);
        gbc.writeMem(0x37, { 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x354f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0246
        gbc.setState(0x9bb0, 0x4321, 0x8bd0, 0x7fb1, 0xf182, 0x98a9, 0x1, 0x0);
        gbc.writeMem(0x9bb0, { 0x2d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4321, gbc.sp());
        EXPECT(0x9bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9bb0));
        // 2D 0247
        gbc.setState(0xe22, 0xe111, 0x38c0, 0x5b71, 0x9caf, 0x56c7, 0x1, 0x1);
        gbc.writeMem(0xe22, { 0x2d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe111, gbc.sp());
        EXPECT(0xe23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0248
        gbc.setState(0x97d, 0xf037, 0xfa20, 0x8e1, 0xbad3, 0xb8d, 0x0, 0x1);
        gbc.writeMem(0x97d, { 0x2d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf037, gbc.sp());
        EXPECT(0x97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0249
        gbc.setState(0xa91b, 0xbfc6, 0xe220, 0x1c27, 0xaa6a, 0x5bd0, 0x1, 0x0);
        gbc.writeMem(0xa91b, { 0x2d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbfc6, gbc.sp());
        EXPECT(0xa91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa91b));
        // 2D 024B
        gbc.setState(0xf99, 0xa9aa, 0xaed0, 0x7da5, 0xfacf, 0x18fc, 0x1, 0x1);
        gbc.writeMem(0xf99, { 0x2d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa9aa, gbc.sp());
        EXPECT(0xf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 024C
        gbc.setState(0xc4be, 0x2789, 0x64d0, 0xf7e1, 0xf842, 0xbccc, 0x1, 0x1);
        gbc.writeMem(0xc4be, { 0x2d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2789, gbc.sp());
        EXPECT(0xc4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc4be));
        // 2D 024D
        gbc.setState(0xa1e, 0x6790, 0x9550, 0x355f, 0x7f09, 0x4986, 0x1, 0x1);
        gbc.writeMem(0xa1e, { 0x2d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6790, gbc.sp());
        EXPECT(0xa1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 024E
        gbc.setState(0x44f6, 0x5c55, 0x6ee0, 0x565e, 0xf288, 0x5454, 0x1, 0x0);
        gbc.writeMem(0x44f6, { 0x2d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5c55, gbc.sp());
        EXPECT(0x44f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 024F
        gbc.setState(0x8812, 0x20a1, 0x7af0, 0x4213, 0x5c32, 0xfd71, 0x1, 0x0);
        gbc.writeMem(0x8812, { 0x2d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x20a1, gbc.sp());
        EXPECT(0x8813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8812));
        // 2D 0250
        gbc.setState(0x195e, 0xbcc7, 0xd070, 0x28a4, 0x347e, 0x5cb5, 0x1, 0x0);
        gbc.writeMem(0x195e, { 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbcc7, gbc.sp());
        EXPECT(0x195f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0251
        gbc.setState(0x19f1, 0x4489, 0xe3c0, 0xaf81, 0xb365, 0xa697, 0x1, 0x0);
        gbc.writeMem(0x19f1, { 0x2d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4489, gbc.sp());
        EXPECT(0x19f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0252
        gbc.setState(0x6c6c, 0xbf6, 0xdbe0, 0xa8d1, 0xa863, 0xc547, 0x1, 0x1);
        gbc.writeMem(0x6c6c, { 0x2d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbf6, gbc.sp());
        EXPECT(0x6c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0253
        gbc.setState(0x1c35, 0xdfbf, 0x2db0, 0x6458, 0x74f9, 0x4013, 0x0, 0x0);
        gbc.writeMem(0x1c35, { 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdfbf, gbc.sp());
        EXPECT(0x1c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0254
        gbc.setState(0x32cc, 0x1ca6, 0xa7a0, 0xea15, 0xb043, 0xe9ff, 0x0, 0x0);
        gbc.writeMem(0x32cc, { 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1ca6, gbc.sp());
        EXPECT(0x32cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0255
        gbc.setState(0xd401, 0x8ddb, 0x170, 0x693, 0x60a9, 0x15f8, 0x1, 0x0);
        gbc.writeMem(0xd401, { 0x2d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8ddb, gbc.sp());
        EXPECT(0xd402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd401));
        // 2D 0256
        gbc.setState(0xbda8, 0xad5d, 0x7f40, 0x5ee8, 0x63e8, 0xceb, 0x0, 0x0);
        gbc.writeMem(0xbda8, { 0x2d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xad5d, gbc.sp());
        EXPECT(0xbda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbda8));
        // 2D 0258
        gbc.setState(0xc43d, 0xa6fc, 0x23e0, 0x9b5d, 0xc7ec, 0xd8, 0x0, 0x1);
        gbc.writeMem(0xc43d, { 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa6fc, gbc.sp());
        EXPECT(0xc43e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc43d));
        // 2D 0259
        gbc.setState(0xdbd4, 0x5fe1, 0x8270, 0xad08, 0x2b39, 0xf10f, 0x1, 0x1);
        gbc.writeMem(0xdbd4, { 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5fe1, gbc.sp());
        EXPECT(0xdbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdbd4));
        // 2D 025A
        gbc.setState(0xa889, 0x7c4b, 0x7a10, 0x651f, 0x4385, 0x3791, 0x1, 0x0);
        gbc.writeMem(0xa889, { 0x2d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7c4b, gbc.sp());
        EXPECT(0xa88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa889));
        // 2D 025B
        gbc.setState(0x572f, 0xb5c9, 0xf830, 0xe23e, 0x3a13, 0x5c15, 0x1, 0x1);
        gbc.writeMem(0x572f, { 0x2d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb5c9, gbc.sp());
        EXPECT(0x5730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 025C
        gbc.setState(0xbb6c, 0x9d6e, 0xd4d0, 0xa52d, 0x796a, 0x49f3, 0x0, 0x1);
        gbc.writeMem(0xbb6c, { 0x2d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9d6e, gbc.sp());
        EXPECT(0xbb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbb6c));
        // 2D 025D
        gbc.setState(0x9753, 0x4a04, 0x7390, 0xccaf, 0xe7b9, 0x75, 0x1, 0x1);
        gbc.writeMem(0x9753, { 0x2d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4a04, gbc.sp());
        EXPECT(0x9754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9753));
        // 2D 025E
        gbc.setState(0xdf31, 0xf9f1, 0x5b70, 0xfe47, 0x688e, 0x2978, 0x1, 0x1);
        gbc.writeMem(0xdf31, { 0x2d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf9f1, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdf31));
        // 2D 025F
        gbc.setState(0x5263, 0xfb49, 0x8460, 0xebcd, 0x7b8c, 0x4bd, 0x0, 0x0);
        gbc.writeMem(0x5263, { 0x2d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfb49, gbc.sp());
        EXPECT(0x5264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0260
        gbc.setState(0x4288, 0x9960, 0x2400, 0xd5cd, 0xa307, 0x448e, 0x1, 0x1);
        gbc.writeMem(0x4288, { 0x2d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9960, gbc.sp());
        EXPECT(0x4289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0261
        gbc.setState(0xecdf, 0x811e, 0x7fb0, 0xc542, 0x48fa, 0xf877, 0x0, 0x0);
        gbc.writeMem(0xecdf, { 0x2d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x811e, gbc.sp());
        EXPECT(0xece0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xecdf));
        // 2D 0263
        gbc.setState(0x4f7d, 0x453, 0xc140, 0xf92b, 0xe315, 0x595f, 0x1, 0x1);
        gbc.writeMem(0x4f7d, { 0x2d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x453, gbc.sp());
        EXPECT(0x4f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0264
        gbc.setState(0x6815, 0xd38a, 0x40c0, 0x4951, 0x45da, 0xfd71, 0x0, 0x0);
        gbc.writeMem(0x6815, { 0x2d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd38a, gbc.sp());
        EXPECT(0x6816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0265
        gbc.setState(0x39f4, 0x5da6, 0x69e0, 0x2cfd, 0xb8ec, 0xfd33, 0x0, 0x1);
        gbc.writeMem(0x39f4, { 0x2d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5da6, gbc.sp());
        EXPECT(0x39f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0266
        gbc.setState(0x4342, 0x884, 0xfb00, 0x3644, 0xb426, 0xdab0, 0x0, 0x0);
        gbc.writeMem(0x4342, { 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x884, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0267
        gbc.setState(0x7900, 0x7d10, 0xbba0, 0x5059, 0x362c, 0x55bb, 0x1, 0x0);
        gbc.writeMem(0x7900, { 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7d10, gbc.sp());
        EXPECT(0x7901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0268
        gbc.setState(0xa617, 0x4969, 0x2d0, 0xc92d, 0x3b62, 0xc35b, 0x0, 0x0);
        gbc.writeMem(0xa617, { 0x2d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4969, gbc.sp());
        EXPECT(0xa618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa617));
        // 2D 0269
        gbc.setState(0x7a33, 0xb472, 0x23e0, 0xe326, 0xf89f, 0x57eb, 0x1, 0x1);
        gbc.writeMem(0x7a33, { 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb472, gbc.sp());
        EXPECT(0x7a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 026A
        gbc.setState(0x8dde, 0x1718, 0xb280, 0xfffc, 0x12ed, 0xe90c, 0x1, 0x0);
        gbc.writeMem(0x8dde, { 0x2d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1718, gbc.sp());
        EXPECT(0x8ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8dde));
        // 2D 026B
        gbc.setState(0x3446, 0xc876, 0x3ce0, 0x11fe, 0xecf7, 0xf365, 0x1, 0x0);
        gbc.writeMem(0x3446, { 0x2d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc876, gbc.sp());
        EXPECT(0x3447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 026C
        gbc.setState(0x7616, 0x1, 0x3ce0, 0x4a34, 0x2afd, 0x40d2, 0x0, 0x0);
        gbc.writeMem(0x7616, { 0x2d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1, gbc.sp());
        EXPECT(0x7617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 026D
        gbc.setState(0x9a6f, 0x2aa0, 0x3430, 0xcb42, 0x3c7e, 0x8be7, 0x1, 0x0);
        gbc.writeMem(0x9a6f, { 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2aa0, gbc.sp());
        EXPECT(0x9a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9a6f));
        // 2D 026E
        gbc.setState(0x6396, 0x4384, 0x3a40, 0xa7d8, 0xec53, 0x76e7, 0x1, 0x1);
        gbc.writeMem(0x6396, { 0x2d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4384, gbc.sp());
        EXPECT(0x6397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 026F
        gbc.setState(0xa2ef, 0xaf86, 0x3520, 0xa3ae, 0x3726, 0xe7b8, 0x0, 0x0);
        gbc.writeMem(0xa2ef, { 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xaf86, gbc.sp());
        EXPECT(0xa2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa2ef));
        // 2D 0270
        gbc.setState(0x3ec5, 0xc840, 0x7880, 0x89b8, 0x5d11, 0x6400, 0x0, 0x1);
        gbc.writeMem(0x3ec5, { 0x2d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc840, gbc.sp());
        EXPECT(0x3ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0271
        gbc.setState(0x9d75, 0xa14c, 0xbba0, 0x7b3c, 0x928a, 0x15ed, 0x1, 0x1);
        gbc.writeMem(0x9d75, { 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa14c, gbc.sp());
        EXPECT(0x9d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9d75));
        // 2D 0272
        gbc.setState(0xaccb, 0x6c21, 0xc280, 0x1552, 0xbf12, 0x76f6, 0x0, 0x1);
        gbc.writeMem(0xaccb, { 0x2d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6c21, gbc.sp());
        EXPECT(0xaccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xaccb));
        // 2D 0273
        gbc.setState(0xa7b5, 0x525a, 0xe360, 0xc61c, 0xa768, 0x6106, 0x1, 0x0);
        gbc.writeMem(0xa7b5, { 0x2d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x525a, gbc.sp());
        EXPECT(0xa7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa7b5));
        // 2D 0274
        gbc.setState(0xd692, 0x1b82, 0xe280, 0xc80d, 0x64ea, 0x139a, 0x0, 0x0);
        gbc.writeMem(0xd692, { 0x2d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1b82, gbc.sp());
        EXPECT(0xd693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd692));
        // 2D 0275
        gbc.setState(0xba01, 0x6bb, 0x650, 0xdecc, 0xbcfb, 0xb84, 0x1, 0x0);
        gbc.writeMem(0xba01, { 0x2d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6bb, gbc.sp());
        EXPECT(0xba02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xba01));
        // 2D 0276
        gbc.setState(0x7ce1, 0xd9eb, 0xe080, 0xfe87, 0x4bd4, 0x5563, 0x1, 0x1);
        gbc.writeMem(0x7ce1, { 0x2d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd9eb, gbc.sp());
        EXPECT(0x7ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0277
        gbc.setState(0x177b, 0x9bf8, 0x3d60, 0xaf6a, 0x2cc3, 0xb7, 0x0, 0x1);
        gbc.writeMem(0x177b, { 0x2d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9bf8, gbc.sp());
        EXPECT(0x177c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0278
        gbc.setState(0x1cb2, 0x1e06, 0xc7c0, 0x16ed, 0xf2d4, 0x7147, 0x1, 0x1);
        gbc.writeMem(0x1cb2, { 0x2d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1e06, gbc.sp());
        EXPECT(0x1cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0279
        gbc.setState(0x6c9a, 0xe54a, 0x62c0, 0x38eb, 0xc511, 0x4a41, 0x1, 0x0);
        gbc.writeMem(0x6c9a, { 0x2d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe54a, gbc.sp());
        EXPECT(0x6c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 027A
        gbc.setState(0x7b2d, 0xd078, 0xd290, 0xb165, 0xc276, 0xfe18, 0x0, 0x0);
        gbc.writeMem(0x7b2d, { 0x2d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd078, gbc.sp());
        EXPECT(0x7b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 027B
        gbc.setState(0xb899, 0xdee8, 0x1a40, 0xee30, 0xc390, 0x3973, 0x0, 0x0);
        gbc.writeMem(0xb899, { 0x2d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdee8, gbc.sp());
        EXPECT(0xb89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb899));
        // 2D 027C
        gbc.setState(0x371d, 0x9827, 0xe050, 0x4df5, 0x40e1, 0xa08f, 0x1, 0x0);
        gbc.writeMem(0x371d, { 0x2d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9827, gbc.sp());
        EXPECT(0x371e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 027E
        gbc.setState(0x3b23, 0xfc9, 0x50a0, 0xd1bc, 0x3b53, 0x5a0d, 0x0, 0x1);
        gbc.writeMem(0x3b23, { 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfc9, gbc.sp());
        EXPECT(0x3b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 027F
        gbc.setState(0xb88d, 0xf8c5, 0x79c0, 0x682a, 0x274d, 0x7345, 0x1, 0x1);
        gbc.writeMem(0xb88d, { 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf8c5, gbc.sp());
        EXPECT(0xb88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb88d));
        // 2D 0280
        gbc.setState(0x5c8c, 0xac8, 0x3500, 0x9469, 0x82ec, 0x88a5, 0x1, 0x1);
        gbc.writeMem(0x5c8c, { 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xac8, gbc.sp());
        EXPECT(0x5c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0281
        gbc.setState(0x69d9, 0x5469, 0xbcc0, 0x7f42, 0x7395, 0x1a49, 0x1, 0x0);
        gbc.writeMem(0x69d9, { 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5469, gbc.sp());
        EXPECT(0x69da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0282
        gbc.setState(0xa8b2, 0x4fcd, 0xb930, 0xe87, 0xb7f7, 0x2e5c, 0x0, 0x0);
        gbc.writeMem(0xa8b2, { 0x2d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4fcd, gbc.sp());
        EXPECT(0xa8b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa8b2));
        // 2D 0283
        gbc.setState(0x5a0f, 0x54b, 0xc0e0, 0xe8e3, 0xa78e, 0x9e65, 0x1, 0x1);
        gbc.writeMem(0x5a0f, { 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x54b, gbc.sp());
        EXPECT(0x5a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0285
        gbc.setState(0xa531, 0xd6cb, 0x2560, 0x861a, 0x6b49, 0xed6, 0x1, 0x0);
        gbc.writeMem(0xa531, { 0x2d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd6cb, gbc.sp());
        EXPECT(0xa532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa531));
        // 2D 0286
        gbc.setState(0xc6f8, 0xefbb, 0xf1c0, 0xf6a7, 0x8200, 0x2f33, 0x1, 0x0);
        gbc.writeMem(0xc6f8, { 0x2d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xefbb, gbc.sp());
        EXPECT(0xc6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc6f8));
        // 2D 0287
        gbc.setState(0xa154, 0x547c, 0x1900, 0xba00, 0x6c1f, 0x14d4, 0x0, 0x1);
        gbc.writeMem(0xa154, { 0x2d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x547c, gbc.sp());
        EXPECT(0xa155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa154));
        // 2D 0288
        gbc.setState(0x7428, 0x66bc, 0xbc50, 0x1aed, 0xcfcc, 0x4cc1, 0x0, 0x0);
        gbc.writeMem(0x7428, { 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x66bc, gbc.sp());
        EXPECT(0x7429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0289
        gbc.setState(0x4fdb, 0x46bf, 0x79d0, 0x1c0, 0x5521, 0xfdd, 0x1, 0x1);
        gbc.writeMem(0x4fdb, { 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x46bf, gbc.sp());
        EXPECT(0x4fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 028A
        gbc.setState(0xc391, 0xe6b7, 0x8d10, 0x91e6, 0xf1d, 0xe1d5, 0x0, 0x0);
        gbc.writeMem(0xc391, { 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe6b7, gbc.sp());
        EXPECT(0xc392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc391));
        // 2D 028B
        gbc.setState(0xd189, 0x945, 0xeec0, 0x5692, 0x2e3b, 0x39ed, 0x1, 0x0);
        gbc.writeMem(0xd189, { 0x2d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x945, gbc.sp());
        EXPECT(0xd18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd189));
        // 2D 028C
        gbc.setState(0x8959, 0xbd95, 0xb90, 0xd0e7, 0xb2ec, 0xe472, 0x0, 0x1);
        gbc.writeMem(0x8959, { 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbd95, gbc.sp());
        EXPECT(0x895a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8959));
        // 2D 028D
        gbc.setState(0xdb5, 0x6344, 0x17f0, 0x13df, 0xd084, 0xbfdc, 0x0, 0x0);
        gbc.writeMem(0xdb5, { 0x2d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6344, gbc.sp());
        EXPECT(0xdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 028E
        gbc.setState(0xb0a0, 0xe730, 0x8d70, 0x1ed5, 0xc272, 0x1420, 0x1, 0x0);
        gbc.writeMem(0xb0a0, { 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe730, gbc.sp());
        EXPECT(0xb0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb0a0));
        // 2D 028F
        gbc.setState(0x9a95, 0xe48c, 0x5960, 0x5da, 0x95a9, 0xe507, 0x0, 0x1);
        gbc.writeMem(0x9a95, { 0x2d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe48c, gbc.sp());
        EXPECT(0x9a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9a95));
        // 2D 0290
        gbc.setState(0x5cda, 0x74e3, 0x86f0, 0x33ff, 0x72b4, 0xd003, 0x0, 0x1);
        gbc.writeMem(0x5cda, { 0x2d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x74e3, gbc.sp());
        EXPECT(0x5cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0291
        gbc.setState(0x5d58, 0xf9eb, 0x49c0, 0x3d2c, 0xe7c8, 0x1b2b, 0x1, 0x0);
        gbc.writeMem(0x5d58, { 0x2d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf9eb, gbc.sp());
        EXPECT(0x5d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0292
        gbc.setState(0x31b7, 0xa39f, 0xc620, 0x6313, 0xb122, 0xb351, 0x0, 0x0);
        gbc.writeMem(0x31b7, { 0x2d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa39f, gbc.sp());
        EXPECT(0x31b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0293
        gbc.setState(0xa5e3, 0x4afb, 0xb840, 0xa15, 0x2a80, 0xe920, 0x1, 0x1);
        gbc.writeMem(0xa5e3, { 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4afb, gbc.sp());
        EXPECT(0xa5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa5e3));
        // 2D 0295
        gbc.setState(0x1e26, 0xbfc5, 0xdbb0, 0x621a, 0x9808, 0xc61, 0x1, 0x1);
        gbc.writeMem(0x1e26, { 0x2d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbfc5, gbc.sp());
        EXPECT(0x1e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0296
        gbc.setState(0xb17f, 0xef9f, 0x5550, 0x2a75, 0x8328, 0x231a, 0x0, 0x0);
        gbc.writeMem(0xb17f, { 0x2d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xef9f, gbc.sp());
        EXPECT(0xb180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb17f));
        // 2D 0297
        gbc.setState(0x8244, 0x86c9, 0x70c0, 0x6bf8, 0x80dd, 0x17ac, 0x1, 0x1);
        gbc.writeMem(0x8244, { 0x2d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x86c9, gbc.sp());
        EXPECT(0x8245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8244));
        // 2D 0298
        gbc.setState(0xd7a2, 0xdb87, 0xc780, 0xc71d, 0x56b8, 0xa4ff, 0x1, 0x0);
        gbc.writeMem(0xd7a2, { 0x2d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdb87, gbc.sp());
        EXPECT(0xd7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd7a2));
        // 2D 0299
        gbc.setState(0xef33, 0xc253, 0x63d0, 0x2b32, 0x1f6a, 0x6f20, 0x0, 0x1);
        gbc.writeMem(0xef33, { 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc253, gbc.sp());
        EXPECT(0xef34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xef33));
        // 2D 029A
        gbc.setState(0x75fe, 0x4c67, 0x4cb0, 0x484f, 0xc7dd, 0xf893, 0x1, 0x0);
        gbc.writeMem(0x75fe, { 0x2d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4c67, gbc.sp());
        EXPECT(0x75ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 029B
        gbc.setState(0x8e9, 0x57d2, 0xd040, 0x41a, 0xa51e, 0x19a, 0x0, 0x1);
        gbc.writeMem(0x8e9, { 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x57d2, gbc.sp());
        EXPECT(0x8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 029C
        gbc.setState(0xdd1c, 0x7805, 0x9920, 0xcd4e, 0x7d1, 0x3597, 0x0, 0x1);
        gbc.writeMem(0xdd1c, { 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7805, gbc.sp());
        EXPECT(0xdd1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdd1c));
        // 2D 029D
        gbc.setState(0x974a, 0x8fe6, 0x4520, 0x626b, 0xee6, 0x3fa, 0x0, 0x0);
        gbc.writeMem(0x974a, { 0x2d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8fe6, gbc.sp());
        EXPECT(0x974b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x974a));
        // 2D 029E
        gbc.setState(0xd731, 0x2473, 0x400, 0xc93f, 0xc4dc, 0xc4c, 0x1, 0x0);
        gbc.writeMem(0xd731, { 0x2d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2473, gbc.sp());
        EXPECT(0xd732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd731));
        // 2D 029F
        gbc.setState(0x3897, 0xfb6, 0xcbf0, 0x4bbf, 0x28e8, 0x82a7, 0x0, 0x1);
        gbc.writeMem(0x3897, { 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0x3898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02A0
        gbc.setState(0x94d9, 0x3d26, 0x27c0, 0x9464, 0x345, 0x760, 0x1, 0x1);
        gbc.writeMem(0x94d9, { 0x2d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3d26, gbc.sp());
        EXPECT(0x94da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x94d9));
        // 2D 02A1
        gbc.setState(0xc11b, 0x50a2, 0xdc0, 0x824f, 0x2b7e, 0x58ca, 0x1, 0x0);
        gbc.writeMem(0xc11b, { 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x50a2, gbc.sp());
        EXPECT(0xc11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc11b));
        // 2D 02A2
        gbc.setState(0x96d3, 0x70d9, 0xb7c0, 0x4f06, 0x1f79, 0xa6ce, 0x1, 0x1);
        gbc.writeMem(0x96d3, { 0x2d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x70d9, gbc.sp());
        EXPECT(0x96d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x96d3));
        // 2D 02A3
        gbc.setState(0x8602, 0xabc6, 0x5700, 0xc8b1, 0x7f3e, 0x3927, 0x1, 0x1);
        gbc.writeMem(0x8602, { 0x2d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xabc6, gbc.sp());
        EXPECT(0x8603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8602));
        // 2D 02A5
        gbc.setState(0x619a, 0xceaa, 0xad0, 0xa789, 0x228b, 0x94c3, 0x0, 0x1);
        gbc.writeMem(0x619a, { 0x2d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xceaa, gbc.sp());
        EXPECT(0x619b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02A6
        gbc.setState(0xd52c, 0x8512, 0x42d0, 0xba7c, 0x7f92, 0x1b7, 0x0, 0x0);
        gbc.writeMem(0xd52c, { 0x2d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8512, gbc.sp());
        EXPECT(0xd52d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd52c));
        // 2D 02A7
        gbc.setState(0x13dc, 0xb4e2, 0xd050, 0xd8e3, 0x3956, 0xeac0, 0x0, 0x1);
        gbc.writeMem(0x13dc, { 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb4e2, gbc.sp());
        EXPECT(0x13dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02A8
        gbc.setState(0x6e05, 0xeed2, 0xf390, 0x8803, 0x4563, 0x124b, 0x1, 0x1);
        gbc.writeMem(0x6e05, { 0x2d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xeed2, gbc.sp());
        EXPECT(0x6e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02A9
        gbc.setState(0xb63b, 0x8cc1, 0xb790, 0x592c, 0xf622, 0x841a, 0x0, 0x0);
        gbc.writeMem(0xb63b, { 0x2d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8cc1, gbc.sp());
        EXPECT(0xb63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb63b));
        // 2D 02AA
        gbc.setState(0xcf9a, 0xff4f, 0x2a40, 0xa31c, 0xcb12, 0x16a6, 0x0, 0x0);
        gbc.writeMem(0xcf9a, { 0x2d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xff4f, gbc.sp());
        EXPECT(0xcf9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcf9a));
        // 2D 02AB
        gbc.setState(0x485, 0xd54d, 0xbed0, 0x5012, 0xb288, 0xb475, 0x0, 0x0);
        gbc.writeMem(0x485, { 0x2d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd54d, gbc.sp());
        EXPECT(0x486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02AC
        gbc.setState(0xe38e, 0x353f, 0x9f0, 0x8091, 0x83a8, 0x8f1d, 0x1, 0x1);
        gbc.writeMem(0xe38e, { 0x2d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x353f, gbc.sp());
        EXPECT(0xe38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe38e));
        // 2D 02AD
        gbc.setState(0xdcbf, 0xec6b, 0xcc60, 0xddb8, 0x77b0, 0xb0d7, 0x1, 0x1);
        gbc.writeMem(0xdcbf, { 0x2d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xec6b, gbc.sp());
        EXPECT(0xdcc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdcbf));
        // 2D 02AE
        gbc.setState(0x5d1a, 0x410e, 0x6b20, 0xc293, 0x6d6b, 0xd84, 0x1, 0x1);
        gbc.writeMem(0x5d1a, { 0x2d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x410e, gbc.sp());
        EXPECT(0x5d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02AF
        gbc.setState(0xdbd1, 0xbd6f, 0x3860, 0x6067, 0xa48f, 0x6416, 0x0, 0x0);
        gbc.writeMem(0xdbd1, { 0x2d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbd6f, gbc.sp());
        EXPECT(0xdbd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdbd1));
        // 2D 02B1
        gbc.setState(0xba1c, 0x803d, 0xd0d0, 0x50bf, 0xf821, 0xe34f, 0x0, 0x1);
        gbc.writeMem(0xba1c, { 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x803d, gbc.sp());
        EXPECT(0xba1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xba1c));
        // 2D 02B2
        gbc.setState(0x5038, 0xb1c, 0xcac0, 0x94f2, 0x7c56, 0x97d4, 0x0, 0x0);
        gbc.writeMem(0x5038, { 0x2d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb1c, gbc.sp());
        EXPECT(0x5039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02B3
        gbc.setState(0x40dc, 0x452d, 0xfaf0, 0x4a3e, 0x6ed4, 0x606f, 0x0, 0x1);
        gbc.writeMem(0x40dc, { 0x2d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x452d, gbc.sp());
        EXPECT(0x40dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02B4
        gbc.setState(0xb9b0, 0x429c, 0xc850, 0x4b7b, 0xe4e4, 0x6164, 0x0, 0x1);
        gbc.writeMem(0xb9b0, { 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x429c, gbc.sp());
        EXPECT(0xb9b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb9b0));
        // 2D 02B5
        gbc.setState(0x452c, 0x49b2, 0x4d30, 0x29d0, 0x28c7, 0x4220, 0x0, 0x1);
        gbc.writeMem(0x452c, { 0x2d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x49b2, gbc.sp());
        EXPECT(0x452d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02B6
        gbc.setState(0x6619, 0x9e65, 0x5800, 0xcf9d, 0x992a, 0xac01, 0x0, 0x1);
        gbc.writeMem(0x6619, { 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9e65, gbc.sp());
        EXPECT(0x661a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02B7
        gbc.setState(0xc397, 0xb58c, 0xb8f0, 0x99a2, 0x2ca7, 0xc4c2, 0x0, 0x1);
        gbc.writeMem(0xc397, { 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb58c, gbc.sp());
        EXPECT(0xc398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc397));
        // 2D 02B8
        gbc.setState(0xa403, 0x3bb, 0x5020, 0x51bd, 0x7cc0, 0xf339, 0x1, 0x0);
        gbc.writeMem(0xa403, { 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3bb, gbc.sp());
        EXPECT(0xa404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa403));
        // 2D 02B9
        gbc.setState(0x391e, 0x7e4f, 0xbc80, 0x41b6, 0xa542, 0x18d8, 0x1, 0x1);
        gbc.writeMem(0x391e, { 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7e4f, gbc.sp());
        EXPECT(0x391f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02BA
        gbc.setState(0x20d8, 0x98b2, 0xa300, 0x1a55, 0xfcc1, 0x8762, 0x0, 0x0);
        gbc.writeMem(0x20d8, { 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x98b2, gbc.sp());
        EXPECT(0x20d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02BB
        gbc.setState(0x3a19, 0x9617, 0x3480, 0xbeaa, 0x2fed, 0xbb29, 0x1, 0x0);
        gbc.writeMem(0x3a19, { 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9617, gbc.sp());
        EXPECT(0x3a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02BC
        gbc.setState(0x64b8, 0xaed1, 0x9f40, 0x84cf, 0x9784, 0x1af, 0x1, 0x1);
        gbc.writeMem(0x64b8, { 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaed1, gbc.sp());
        EXPECT(0x64b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02BD
        gbc.setState(0x1e12, 0x2ff2, 0x2f00, 0x8a2a, 0xc87e, 0xaded, 0x0, 0x1);
        gbc.writeMem(0x1e12, { 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2ff2, gbc.sp());
        EXPECT(0x1e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02BE
        gbc.setState(0xbdd5, 0xa0bb, 0x1d60, 0xb28e, 0x9cab, 0x59e2, 0x1, 0x0);
        gbc.writeMem(0xbdd5, { 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa0bb, gbc.sp());
        EXPECT(0xbdd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbdd5));
        // 2D 02BF
        gbc.setState(0xe8d1, 0x9b0a, 0xcf00, 0xa89e, 0xebb0, 0x838a, 0x1, 0x1);
        gbc.writeMem(0xe8d1, { 0x2d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9b0a, gbc.sp());
        EXPECT(0xe8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe8d1));
        // 2D 02C0
        gbc.setState(0xa44c, 0xbfed, 0xe800, 0x515a, 0x9ba1, 0xf8e5, 0x1, 0x0);
        gbc.writeMem(0xa44c, { 0x2d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbfed, gbc.sp());
        EXPECT(0xa44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa44c));
        // 2D 02C1
        gbc.setState(0x5717, 0xcd2, 0xe880, 0x871e, 0x3cf8, 0xc03f, 0x1, 0x0);
        gbc.writeMem(0x5717, { 0x2d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcd2, gbc.sp());
        EXPECT(0x5718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02C2
        gbc.setState(0x1a0c, 0x6e13, 0x6750, 0x6c4f, 0x6b14, 0x17fb, 0x0, 0x0);
        gbc.writeMem(0x1a0c, { 0x2d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6e13, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02C3
        gbc.setState(0x4028, 0xe873, 0xba50, 0x459d, 0x3911, 0x1866, 0x0, 0x1);
        gbc.writeMem(0x4028, { 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe873, gbc.sp());
        EXPECT(0x4029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02C4
        gbc.setState(0x181a, 0xc113, 0xa360, 0xb2d, 0x22e0, 0x4ccd, 0x1, 0x0);
        gbc.writeMem(0x181a, { 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc113, gbc.sp());
        EXPECT(0x181b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02C5
        gbc.setState(0x12cf, 0x3e15, 0x4150, 0xd17c, 0x37e8, 0x9565, 0x1, 0x0);
        gbc.writeMem(0x12cf, { 0x2d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3e15, gbc.sp());
        EXPECT(0x12d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02C6
        gbc.setState(0x4dd4, 0x3188, 0x1760, 0x586f, 0x834b, 0x2ded, 0x0, 0x1);
        gbc.writeMem(0x4dd4, { 0x2d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3188, gbc.sp());
        EXPECT(0x4dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02C7
        gbc.setState(0x8477, 0x190b, 0xa740, 0xed74, 0x2b10, 0x6ec0, 0x0, 0x1);
        gbc.writeMem(0x8477, { 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x190b, gbc.sp());
        EXPECT(0x8478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8477));
        // 2D 02C8
        gbc.setState(0x7d45, 0x589f, 0xbfe0, 0x6e7a, 0x78c9, 0x7cf7, 0x1, 0x1);
        gbc.writeMem(0x7d45, { 0x2d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x589f, gbc.sp());
        EXPECT(0x7d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02C9
        gbc.setState(0x4c57, 0x9da0, 0x72e0, 0x6377, 0x7721, 0x7f50, 0x0, 0x1);
        gbc.writeMem(0x4c57, { 0x2d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9da0, gbc.sp());
        EXPECT(0x4c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02CA
        gbc.setState(0x470b, 0x6342, 0x9580, 0x216d, 0x6eb1, 0xf3c4, 0x1, 0x1);
        gbc.writeMem(0x470b, { 0x2d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6342, gbc.sp());
        EXPECT(0x470c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02CB
        gbc.setState(0xd33d, 0x3f42, 0xc3c0, 0xa3f1, 0x72a9, 0x1336, 0x1, 0x1);
        gbc.writeMem(0xd33d, { 0x2d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3f42, gbc.sp());
        EXPECT(0xd33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd33d));
        // 2D 02CC
        gbc.setState(0xba48, 0x7ac0, 0x7280, 0xd489, 0xcfb0, 0xe4c4, 0x0, 0x1);
        gbc.writeMem(0xba48, { 0x2d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7ac0, gbc.sp());
        EXPECT(0xba49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xba48));
        // 2D 02CD
        gbc.setState(0x5c28, 0xf289, 0x9370, 0xb4c1, 0xa56b, 0xb4d8, 0x1, 0x1);
        gbc.writeMem(0x5c28, { 0x2d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf289, gbc.sp());
        EXPECT(0x5c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02CE
        gbc.setState(0xe30e, 0x90d0, 0x7270, 0x7a3e, 0xfcab, 0x6c96, 0x0, 0x1);
        gbc.writeMem(0xe30e, { 0x2d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x90d0, gbc.sp());
        EXPECT(0xe30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe30e));
        // 2D 02CF
        gbc.setState(0x1e53, 0x847e, 0x5a80, 0x3637, 0x9f14, 0x2649, 0x0, 0x1);
        gbc.writeMem(0x1e53, { 0x2d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x847e, gbc.sp());
        EXPECT(0x1e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02D0
        gbc.setState(0xbe0f, 0x1e5a, 0xd580, 0xb454, 0x6519, 0x790f, 0x0, 0x1);
        gbc.writeMem(0xbe0f, { 0x2d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1e5a, gbc.sp());
        EXPECT(0xbe10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbe0f));
        // 2D 02D1
        gbc.setState(0xa3ac, 0xd98a, 0x45b0, 0x9a7a, 0x8d39, 0xec8f, 0x0, 0x0);
        gbc.writeMem(0xa3ac, { 0x2d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd98a, gbc.sp());
        EXPECT(0xa3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa3ac));
        // 2D 02D2
        gbc.setState(0xcdd6, 0xf497, 0x8d70, 0xb71a, 0xac4f, 0x1504, 0x0, 0x0);
        gbc.writeMem(0xcdd6, { 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf497, gbc.sp());
        EXPECT(0xcdd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcdd6));
        // 2D 02D3
        gbc.setState(0xd1b2, 0x1ac4, 0x6260, 0xac3c, 0x46a2, 0xc129, 0x1, 0x1);
        gbc.writeMem(0xd1b2, { 0x2d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1ac4, gbc.sp());
        EXPECT(0xd1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd1b2));
        // 2D 02D4
        gbc.setState(0xd4b, 0x9132, 0x1250, 0xddf4, 0x64b7, 0x4e5, 0x1, 0x0);
        gbc.writeMem(0xd4b, { 0x2d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9132, gbc.sp());
        EXPECT(0xd4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02D5
        gbc.setState(0x3d2b, 0x62d7, 0x1590, 0xcd62, 0x96a0, 0xbcc2, 0x0, 0x0);
        gbc.writeMem(0x3d2b, { 0x2d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x62d7, gbc.sp());
        EXPECT(0x3d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02D6
        gbc.setState(0x27d2, 0xf562, 0x8e20, 0x8497, 0x2f3e, 0x10b8, 0x0, 0x1);
        gbc.writeMem(0x27d2, { 0x2d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf562, gbc.sp());
        EXPECT(0x27d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02D7
        gbc.setState(0xecc0, 0x4976, 0x6c50, 0x5f5c, 0x4758, 0xfd07, 0x0, 0x1);
        gbc.writeMem(0xecc0, { 0x2d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4976, gbc.sp());
        EXPECT(0xecc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xecc0));
        // 2D 02DA
        gbc.setState(0xc14b, 0x724, 0x2d30, 0x319e, 0x50b0, 0x5e3a, 0x1, 0x0);
        gbc.writeMem(0xc14b, { 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x724, gbc.sp());
        EXPECT(0xc14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc14b));
        // 2D 02DB
        gbc.setState(0x9b4e, 0x9fda, 0x2710, 0x173b, 0x58e8, 0xf5ec, 0x0, 0x0);
        gbc.writeMem(0x9b4e, { 0x2d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9fda, gbc.sp());
        EXPECT(0x9b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9b4e));
        // 2D 02DC
        gbc.setState(0xb875, 0x6fbe, 0x97c0, 0xc154, 0x30dd, 0x7a75, 0x1, 0x1);
        gbc.writeMem(0xb875, { 0x2d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6fbe, gbc.sp());
        EXPECT(0xb876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb875));
        // 2D 02DD
        gbc.setState(0x75ec, 0x3836, 0x7b10, 0xcd4, 0x1eea, 0x1d2c, 0x0, 0x1);
        gbc.writeMem(0x75ec, { 0x2d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3836, gbc.sp());
        EXPECT(0x75ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02DE
        gbc.setState(0x8a14, 0xf391, 0x5210, 0x53bc, 0x740a, 0x2b9, 0x1, 0x0);
        gbc.writeMem(0x8a14, { 0x2d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf391, gbc.sp());
        EXPECT(0x8a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8a14));
        // 2D 02DF
        gbc.setState(0xb2ab, 0x1850, 0x8b80, 0xf8e0, 0x8d5d, 0x48c0, 0x1, 0x0);
        gbc.writeMem(0xb2ab, { 0x2d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1850, gbc.sp());
        EXPECT(0xb2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb2ab));
        // 2D 02E0
        gbc.setState(0x3516, 0xc509, 0x9a00, 0x2172, 0xaeb1, 0xea1d, 0x0, 0x1);
        gbc.writeMem(0x3516, { 0x2d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc509, gbc.sp());
        EXPECT(0x3517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02E1
        gbc.setState(0x437e, 0x5dd7, 0x1d40, 0xc789, 0x290e, 0x186f, 0x1, 0x1);
        gbc.writeMem(0x437e, { 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5dd7, gbc.sp());
        EXPECT(0x437f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02E2
        gbc.setState(0x9cea, 0xeff2, 0x3530, 0xf6f3, 0x3426, 0x943, 0x0, 0x0);
        gbc.writeMem(0x9cea, { 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xeff2, gbc.sp());
        EXPECT(0x9ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9cea));
        // 2D 02E3
        gbc.setState(0x8e4a, 0x1d4f, 0x2c30, 0x1a25, 0x8953, 0x598c, 0x1, 0x1);
        gbc.writeMem(0x8e4a, { 0x2d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1d4f, gbc.sp());
        EXPECT(0x8e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8e4a));
        // 2D 02E4
        gbc.setState(0xc0af, 0xfa92, 0x12c0, 0x1eae, 0xa5a8, 0x2685, 0x1, 0x0);
        gbc.writeMem(0xc0af, { 0x2d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfa92, gbc.sp());
        EXPECT(0xc0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc0af));
        // 2D 02E5
        gbc.setState(0x7d25, 0x381a, 0x5810, 0x612c, 0x49f1, 0x6d87, 0x1, 0x1);
        gbc.writeMem(0x7d25, { 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x381a, gbc.sp());
        EXPECT(0x7d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02E6
        gbc.setState(0x9172, 0xedd9, 0x6120, 0xeca3, 0x1920, 0xab3d, 0x1, 0x1);
        gbc.writeMem(0x9172, { 0x2d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xedd9, gbc.sp());
        EXPECT(0x9173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9172));
        // 2D 02E7
        gbc.setState(0xba7b, 0xe4, 0x5a60, 0x543c, 0xffc, 0x1516, 0x0, 0x0);
        gbc.writeMem(0xba7b, { 0x2d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe4, gbc.sp());
        EXPECT(0xba7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xba7b));
        // 2D 02E8
        gbc.setState(0x76ee, 0xc6e0, 0x42e0, 0x36e1, 0xd457, 0x2339, 0x1, 0x1);
        gbc.writeMem(0x76ee, { 0x2d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc6e0, gbc.sp());
        EXPECT(0x76ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02E9
        gbc.setState(0x2017, 0x76cb, 0x7180, 0x9b5f, 0xc0f3, 0x74c9, 0x1, 0x0);
        gbc.writeMem(0x2017, { 0x2d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x76cb, gbc.sp());
        EXPECT(0x2018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02EA
        gbc.setState(0x9049, 0x3a81, 0x98f0, 0xaa57, 0x3963, 0xd403, 0x1, 0x0);
        gbc.writeMem(0x9049, { 0x2d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3a81, gbc.sp());
        EXPECT(0x904a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9049));
        // 2D 02EB
        gbc.setState(0x7315, 0x343e, 0x7f60, 0xfb89, 0x3345, 0xc398, 0x1, 0x0);
        gbc.writeMem(0x7315, { 0x2d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x343e, gbc.sp());
        EXPECT(0x7316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02EC
        gbc.setState(0xac20, 0x965a, 0x5330, 0xe412, 0x7517, 0xa780, 0x0, 0x1);
        gbc.writeMem(0xac20, { 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x965a, gbc.sp());
        EXPECT(0xac21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xac20));
        // 2D 02ED
        gbc.setState(0xe063, 0xd1a6, 0x8b00, 0x7ca3, 0xf30, 0xe1c0, 0x1, 0x1);
        gbc.writeMem(0xe063, { 0x2d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd1a6, gbc.sp());
        EXPECT(0xe064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe063));
        // 2D 02EE
        gbc.setState(0x6819, 0x86fe, 0xfb30, 0xea9c, 0x3f2a, 0xcf0b, 0x0, 0x0);
        gbc.writeMem(0x6819, { 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x86fe, gbc.sp());
        EXPECT(0x681a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02EF
        gbc.setState(0xccc0, 0xcde7, 0x7b20, 0x3791, 0xc9ed, 0xab2d, 0x0, 0x0);
        gbc.writeMem(0xccc0, { 0x2d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcde7, gbc.sp());
        EXPECT(0xccc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xccc0));
        // 2D 02F0
        gbc.setState(0xef0b, 0x18ba, 0xfb0, 0xbac2, 0xbbae, 0x2a16, 0x0, 0x0);
        gbc.writeMem(0xef0b, { 0x2d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x18ba, gbc.sp());
        EXPECT(0xef0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xef0b));
        // 2D 02F1
        gbc.setState(0x8811, 0x75cf, 0xf370, 0x1dce, 0x30d, 0x3e9e, 0x0, 0x0);
        gbc.writeMem(0x8811, { 0x2d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x75cf, gbc.sp());
        EXPECT(0x8812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8811));
        // 2D 02F2
        gbc.setState(0xb568, 0x6741, 0xa3d0, 0xce06, 0x7f50, 0x6fb4, 0x1, 0x0);
        gbc.writeMem(0xb568, { 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6741, gbc.sp());
        EXPECT(0xb569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb568));
        // 2D 02F3
        gbc.setState(0xe1bf, 0x9868, 0x8670, 0x6408, 0x9b23, 0x8912, 0x0, 0x1);
        gbc.writeMem(0xe1bf, { 0x2d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9868, gbc.sp());
        EXPECT(0xe1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe1bf));
        // 2D 02F4
        gbc.setState(0x2ee8, 0x70e3, 0x2020, 0x1def, 0x4330, 0x4854, 0x1, 0x0);
        gbc.writeMem(0x2ee8, { 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x70e3, gbc.sp());
        EXPECT(0x2ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 02F5
        gbc.setState(0x89e7, 0x23cf, 0xeb70, 0xa311, 0x435, 0x4d7, 0x1, 0x0);
        gbc.writeMem(0x89e7, { 0x2d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x23cf, gbc.sp());
        EXPECT(0x89e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x89e7));
        // 2D 02F6
        gbc.setState(0xacdc, 0x925e, 0x1370, 0xb8f9, 0xde80, 0x9c64, 0x0, 0x0);
        gbc.writeMem(0xacdc, { 0x2d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x925e, gbc.sp());
        EXPECT(0xacdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xacdc));
        // 2D 02F7
        gbc.setState(0xa906, 0x7be3, 0xcf30, 0xfa19, 0x911, 0x7716, 0x0, 0x0);
        gbc.writeMem(0xa906, { 0x2d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7be3, gbc.sp());
        EXPECT(0xa907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa906));
        // 2D 02F9
        gbc.setState(0x927f, 0x70c, 0x5150, 0xed6d, 0xe581, 0x6d2f, 0x0, 0x1);
        gbc.writeMem(0x927f, { 0x2d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x70c, gbc.sp());
        EXPECT(0x9280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x927f));
        // 2D 02FA
        gbc.setState(0xad57, 0x5ee, 0xbad0, 0x5b51, 0x8d83, 0xd3ab, 0x1, 0x1);
        gbc.writeMem(0xad57, { 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5ee, gbc.sp());
        EXPECT(0xad58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xad57));
        // 2D 02FB
        gbc.setState(0xcba6, 0x3161, 0xbce0, 0x67e5, 0x3f8, 0x5b2e, 0x1, 0x1);
        gbc.writeMem(0xcba6, { 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3161, gbc.sp());
        EXPECT(0xcba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcba6));
        // 2D 02FC
        gbc.setState(0x8c13, 0x2fbf, 0xd2c0, 0xa4d5, 0x3b, 0x9986, 0x1, 0x1);
        gbc.writeMem(0x8c13, { 0x2d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2fbf, gbc.sp());
        EXPECT(0x8c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8c13));
        // 2D 02FD
        gbc.setState(0xdd8c, 0x66f9, 0x6d00, 0xc543, 0x2fba, 0x96e8, 0x0, 0x1);
        gbc.writeMem(0xdd8c, { 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x66f9, gbc.sp());
        EXPECT(0xdd8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdd8c));
        // 2D 02FE
        gbc.setState(0x536f, 0xad8b, 0x3530, 0xb3c6, 0x1b12, 0x3d4a, 0x0, 0x0);
        gbc.writeMem(0x536f, { 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xad8b, gbc.sp());
        EXPECT(0x5370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 02FF
        gbc.setState(0x563a, 0x3e53, 0xcbe0, 0x4d0a, 0xdc60, 0x427c, 0x0, 0x0);
        gbc.writeMem(0x563a, { 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3e53, gbc.sp());
        EXPECT(0x563b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0300
        gbc.setState(0xeb20, 0xdb00, 0x25e0, 0xb84c, 0x75d2, 0x7beb, 0x0, 0x1);
        gbc.writeMem(0xeb20, { 0x2d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdb00, gbc.sp());
        EXPECT(0xeb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xeb20));
        // 2D 0302
        gbc.setState(0xb07f, 0x684b, 0x5a30, 0x4b2f, 0xf25e, 0x4d79, 0x0, 0x1);
        gbc.writeMem(0xb07f, { 0x2d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x684b, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb07f));
        // 2D 0303
        gbc.setState(0x8c1a, 0x8f9d, 0x2fc0, 0xf66c, 0xf6e4, 0xfb6e, 0x0, 0x0);
        gbc.writeMem(0x8c1a, { 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8f9d, gbc.sp());
        EXPECT(0x8c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8c1a));
        // 2D 0304
        gbc.setState(0x88f6, 0x4827, 0xcd30, 0xc101, 0x60e1, 0x65c3, 0x0, 0x0);
        gbc.writeMem(0x88f6, { 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4827, gbc.sp());
        EXPECT(0x88f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x88f6));
        // 2D 0305
        gbc.setState(0x92fe, 0xbbc6, 0xee80, 0x6efb, 0x51d, 0xead1, 0x0, 0x1);
        gbc.writeMem(0x92fe, { 0x2d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbbc6, gbc.sp());
        EXPECT(0x92ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x92fe));
        // 2D 0306
        gbc.setState(0x8d56, 0xa7ef, 0x4180, 0x8a3a, 0xfaeb, 0xacfd, 0x1, 0x0);
        gbc.writeMem(0x8d56, { 0x2d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa7ef, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8d56));
        // 2D 0307
        gbc.setState(0x893c, 0xc9ca, 0x8520, 0x3bb2, 0x9225, 0x8ee6, 0x1, 0x0);
        gbc.writeMem(0x893c, { 0x2d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc9ca, gbc.sp());
        EXPECT(0x893d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x893c));
        // 2D 0308
        gbc.setState(0x25ab, 0xe7f2, 0x1020, 0xffc0, 0xa163, 0xb44, 0x0, 0x1);
        gbc.writeMem(0x25ab, { 0x2d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe7f2, gbc.sp());
        EXPECT(0x25ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 030A
        gbc.setState(0x335d, 0xae00, 0xa210, 0xd85d, 0xd807, 0x6d12, 0x1, 0x0);
        gbc.writeMem(0x335d, { 0x2d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xae00, gbc.sp());
        EXPECT(0x335e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 030B
        gbc.setState(0x7cc0, 0x26d, 0x54e0, 0xedee, 0x8ac2, 0x1121, 0x1, 0x1);
        gbc.writeMem(0x7cc0, { 0x2d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x26d, gbc.sp());
        EXPECT(0x7cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 030C
        gbc.setState(0xaa0d, 0x3292, 0x6a80, 0x7f75, 0x6b2e, 0xf802, 0x1, 0x0);
        gbc.writeMem(0xaa0d, { 0x2d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3292, gbc.sp());
        EXPECT(0xaa0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xaa0d));
        // 2D 030D
        gbc.setState(0xee1f, 0x694c, 0x8ff0, 0xd89, 0xda61, 0x9bdf, 0x0, 0x1);
        gbc.writeMem(0xee1f, { 0x2d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0xee20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xee1f));
        // 2D 030E
        gbc.setState(0xc314, 0xacc9, 0xa720, 0xf73, 0xbe10, 0x80fe, 0x0, 0x1);
        gbc.writeMem(0xc314, { 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xacc9, gbc.sp());
        EXPECT(0xc315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc314));
        // 2D 030F
        gbc.setState(0x3b9f, 0xca3e, 0x43b0, 0x7641, 0xfebd, 0x7977, 0x1, 0x0);
        gbc.writeMem(0x3b9f, { 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xca3e, gbc.sp());
        EXPECT(0x3ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0310
        gbc.setState(0x44b4, 0x347a, 0x19d0, 0xa010, 0x4c4d, 0x4e59, 0x0, 0x0);
        gbc.writeMem(0x44b4, { 0x2d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x347a, gbc.sp());
        EXPECT(0x44b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0311
        gbc.setState(0xa094, 0xaac3, 0x9500, 0x4668, 0x289a, 0x7134, 0x1, 0x1);
        gbc.writeMem(0xa094, { 0x2d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xaac3, gbc.sp());
        EXPECT(0xa095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa094));
        // 2D 0312
        gbc.setState(0x909d, 0xcd1c, 0xe400, 0x83c9, 0x1f4d, 0x26cc, 0x0, 0x0);
        gbc.writeMem(0x909d, { 0x2d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcd1c, gbc.sp());
        EXPECT(0x909e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x909d));
        // 2D 0313
        gbc.setState(0x12f2, 0x51c9, 0xbfa0, 0xf95b, 0x436, 0x49cd, 0x0, 0x0);
        gbc.writeMem(0x12f2, { 0x2d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x51c9, gbc.sp());
        EXPECT(0x12f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0314
        gbc.setState(0xca54, 0x7b31, 0x89e0, 0x35ff, 0xf0b1, 0xeacd, 0x0, 0x0);
        gbc.writeMem(0xca54, { 0x2d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7b31, gbc.sp());
        EXPECT(0xca55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xca54));
        // 2D 0315
        gbc.setState(0xe9d0, 0x37a8, 0x6a0, 0xcc4b, 0x845d, 0x3b05, 0x0, 0x1);
        gbc.writeMem(0xe9d0, { 0x2d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x37a8, gbc.sp());
        EXPECT(0xe9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe9d0));
        // 2D 0316
        gbc.setState(0xda15, 0xb366, 0xe150, 0x1b7e, 0x1f3f, 0x6e9, 0x0, 0x0);
        gbc.writeMem(0xda15, { 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0xda16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xda15));
        // 2D 0317
        gbc.setState(0x64ea, 0xf777, 0x8020, 0xb505, 0x258f, 0x2b23, 0x1, 0x1);
        gbc.writeMem(0x64ea, { 0x2d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf777, gbc.sp());
        EXPECT(0x64eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0318
        gbc.setState(0x4cc9, 0xbe5, 0x3180, 0x4959, 0x607b, 0x4446, 0x1, 0x0);
        gbc.writeMem(0x4cc9, { 0x2d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbe5, gbc.sp());
        EXPECT(0x4cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0319
        gbc.setState(0x642c, 0xfe48, 0x3fe0, 0xa5f8, 0x92b, 0x8f58, 0x0, 0x1);
        gbc.writeMem(0x642c, { 0x2d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfe48, gbc.sp());
        EXPECT(0x642d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 031A
        gbc.setState(0x1d0, 0xf904, 0x31b0, 0x82b4, 0xf37c, 0x51d6, 0x0, 0x0);
        gbc.writeMem(0x1d0, { 0x2d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf904, gbc.sp());
        EXPECT(0x1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 031B
        gbc.setState(0x3309, 0xc2ee, 0x7380, 0x615a, 0x78c5, 0xf9fd, 0x1, 0x0);
        gbc.writeMem(0x3309, { 0x2d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc2ee, gbc.sp());
        EXPECT(0x330a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 031C
        gbc.setState(0x3d4d, 0xd6aa, 0xab80, 0xb914, 0xdd72, 0xdea4, 0x1, 0x0);
        gbc.writeMem(0x3d4d, { 0x2d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd6aa, gbc.sp());
        EXPECT(0x3d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 031D
        gbc.setState(0x1fc2, 0xf78a, 0x58c0, 0x88de, 0xbb52, 0x7c3c, 0x0, 0x1);
        gbc.writeMem(0x1fc2, { 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf78a, gbc.sp());
        EXPECT(0x1fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 031E
        gbc.setState(0x8c4f, 0x9ccf, 0xd850, 0x7f65, 0xce63, 0xfefd, 0x0, 0x0);
        gbc.writeMem(0x8c4f, { 0x2d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9ccf, gbc.sp());
        EXPECT(0x8c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8c4f));
        // 2D 031F
        gbc.setState(0x794f, 0xaf7e, 0x43f0, 0x6bcc, 0x2ada, 0x242c, 0x0, 0x1);
        gbc.writeMem(0x794f, { 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaf7e, gbc.sp());
        EXPECT(0x7950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0320
        gbc.setState(0x4ec9, 0xddd9, 0xe290, 0xbcbd, 0x4984, 0xdd08, 0x1, 0x1);
        gbc.writeMem(0x4ec9, { 0x2d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xddd9, gbc.sp());
        EXPECT(0x4eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0321
        gbc.setState(0x96af, 0xe2e5, 0x89c0, 0x7e10, 0x53cd, 0xe3d, 0x0, 0x0);
        gbc.writeMem(0x96af, { 0x2d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe2e5, gbc.sp());
        EXPECT(0x96b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x96af));
        // 2D 0322
        gbc.setState(0xbeb3, 0x5595, 0x48a0, 0x640, 0x6e26, 0xd0aa, 0x1, 0x0);
        gbc.writeMem(0xbeb3, { 0x2d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbeb3));
        // 2D 0323
        gbc.setState(0x88a0, 0x650e, 0x4cc0, 0x9e12, 0x421f, 0x1408, 0x0, 0x1);
        gbc.writeMem(0x88a0, { 0x2d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x650e, gbc.sp());
        EXPECT(0x88a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x88a0));
        // 2D 0324
        gbc.setState(0x4778, 0xe6ed, 0xc070, 0x9509, 0x5874, 0xe42e, 0x0, 0x0);
        gbc.writeMem(0x4778, { 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe6ed, gbc.sp());
        EXPECT(0x4779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0325
        gbc.setState(0xc569, 0x8c5f, 0xc510, 0x74ad, 0x766e, 0x55df, 0x1, 0x1);
        gbc.writeMem(0xc569, { 0x2d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8c5f, gbc.sp());
        EXPECT(0xc56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc569));
        // 2D 0327
        gbc.setState(0xe6d1, 0x32d0, 0x7680, 0x649c, 0xf03d, 0xb6bb, 0x1, 0x0);
        gbc.writeMem(0xe6d1, { 0x2d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x32d0, gbc.sp());
        EXPECT(0xe6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe6d1));
        // 2D 0328
        gbc.setState(0x122d, 0x8c0f, 0x35e0, 0xc4b9, 0xc682, 0x613e, 0x0, 0x0);
        gbc.writeMem(0x122d, { 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8c0f, gbc.sp());
        EXPECT(0x122e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 032B
        gbc.setState(0x1233, 0x5e62, 0x6ef0, 0x3ede, 0x88da, 0x1f31, 0x1, 0x1);
        gbc.writeMem(0x1233, { 0x2d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5e62, gbc.sp());
        EXPECT(0x1234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 032C
        gbc.setState(0xe6b7, 0xeb82, 0x2d0, 0x2412, 0xacbe, 0x2f48, 0x0, 0x0);
        gbc.writeMem(0xe6b7, { 0x2d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xeb82, gbc.sp());
        EXPECT(0xe6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe6b7));
        // 2D 032D
        gbc.setState(0xb229, 0xc154, 0x8f60, 0x3db0, 0x2ad2, 0x71d, 0x1, 0x1);
        gbc.writeMem(0xb229, { 0x2d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc154, gbc.sp());
        EXPECT(0xb22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb229));
        // 2D 032E
        gbc.setState(0x9fce, 0x6fc, 0xe260, 0xb854, 0xbd4f, 0x221c, 0x0, 0x1);
        gbc.writeMem(0x9fce, { 0x2d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6fc, gbc.sp());
        EXPECT(0x9fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9fce));
        // 2D 032F
        gbc.setState(0xe963, 0x6ca, 0x3240, 0xe711, 0x13a1, 0xe362, 0x1, 0x1);
        gbc.writeMem(0xe963, { 0x2d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6ca, gbc.sp());
        EXPECT(0xe964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe963));
        // 2D 0330
        gbc.setState(0xece7, 0x48b6, 0xb9e0, 0x9a5a, 0x4634, 0x8366, 0x0, 0x0);
        gbc.writeMem(0xece7, { 0x2d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x48b6, gbc.sp());
        EXPECT(0xece8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xece7));
        // 2D 0331
        gbc.setState(0x6d43, 0x751f, 0x2370, 0x32cb, 0x50e5, 0x8ce6, 0x0, 0x0);
        gbc.writeMem(0x6d43, { 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x751f, gbc.sp());
        EXPECT(0x6d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0332
        gbc.setState(0xd9f3, 0x874c, 0xbc60, 0xeed2, 0xdfc, 0x69f4, 0x0, 0x0);
        gbc.writeMem(0xd9f3, { 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x874c, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd9f3));
        // 2D 0333
        gbc.setState(0xcad2, 0x185e, 0x4cc0, 0xfe43, 0x2075, 0xf398, 0x0, 0x0);
        gbc.writeMem(0xcad2, { 0x2d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x185e, gbc.sp());
        EXPECT(0xcad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcad2));
        // 2D 0334
        gbc.setState(0x3fc0, 0xf846, 0x6ef0, 0x875a, 0xd429, 0x71dc, 0x1, 0x1);
        gbc.writeMem(0x3fc0, { 0x2d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf846, gbc.sp());
        EXPECT(0x3fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0335
        gbc.setState(0x1594, 0xa757, 0x36a0, 0x13d1, 0x5fdb, 0x2192, 0x1, 0x1);
        gbc.writeMem(0x1594, { 0x2d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa757, gbc.sp());
        EXPECT(0x1595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0336
        gbc.setState(0x2538, 0xb4f4, 0xbd90, 0x325a, 0x56bd, 0x6f46, 0x0, 0x1);
        gbc.writeMem(0x2538, { 0x2d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb4f4, gbc.sp());
        EXPECT(0x2539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0337
        gbc.setState(0x3adf, 0x1ad0, 0x14a0, 0xaf5c, 0x6f57, 0x6f1f, 0x1, 0x0);
        gbc.writeMem(0x3adf, { 0x2d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1ad0, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0338
        gbc.setState(0x602f, 0xf0c0, 0x8360, 0x69b1, 0x46c9, 0x1ab9, 0x1, 0x0);
        gbc.writeMem(0x602f, { 0x2d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf0c0, gbc.sp());
        EXPECT(0x6030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0339
        gbc.setState(0x38ba, 0xe823, 0xed0, 0xab2c, 0x1f20, 0x8215, 0x0, 0x0);
        gbc.writeMem(0x38ba, { 0x2d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe823, gbc.sp());
        EXPECT(0x38bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 033A
        gbc.setState(0x63a9, 0x949f, 0xd1f0, 0x7d9e, 0x46ed, 0xba20, 0x0, 0x0);
        gbc.writeMem(0x63a9, { 0x2d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x949f, gbc.sp());
        EXPECT(0x63aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 033B
        gbc.setState(0x3159, 0xe6d0, 0xafe0, 0x5831, 0xf952, 0x564d, 0x0, 0x0);
        gbc.writeMem(0x3159, { 0x2d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe6d0, gbc.sp());
        EXPECT(0x315a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 033C
        gbc.setState(0xd240, 0x700f, 0x9bd0, 0x4cc8, 0xb7c8, 0x7480, 0x1, 0x1);
        gbc.writeMem(0xd240, { 0x2d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x700f, gbc.sp());
        EXPECT(0xd241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd240));
        // 2D 033D
        gbc.setState(0x1ed7, 0xbbc4, 0x9990, 0xd3fa, 0x890d, 0x10d5, 0x1, 0x0);
        gbc.writeMem(0x1ed7, { 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbbc4, gbc.sp());
        EXPECT(0x1ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 033E
        gbc.setState(0x4b0a, 0x8363, 0x5600, 0x9894, 0xf16e, 0xb7e3, 0x0, 0x1);
        gbc.writeMem(0x4b0a, { 0x2d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8363, gbc.sp());
        EXPECT(0x4b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 033F
        gbc.setState(0x5b6f, 0xd136, 0x3dd0, 0xf0c, 0x42ce, 0x263f, 0x0, 0x0);
        gbc.writeMem(0x5b6f, { 0x2d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd136, gbc.sp());
        EXPECT(0x5b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0340
        gbc.setState(0xb7f2, 0x8c07, 0x2600, 0x9f51, 0xd61f, 0xc619, 0x0, 0x1);
        gbc.writeMem(0xb7f2, { 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8c07, gbc.sp());
        EXPECT(0xb7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb7f2));
        // 2D 0341
        gbc.setState(0x132, 0xf73b, 0x2df0, 0x58b9, 0xb23d, 0xafeb, 0x1, 0x1);
        gbc.writeMem(0x132, { 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf73b, gbc.sp());
        EXPECT(0x133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0342
        gbc.setState(0x600c, 0x83c2, 0x85b0, 0xc020, 0x9247, 0xbc49, 0x1, 0x0);
        gbc.writeMem(0x600c, { 0x2d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x83c2, gbc.sp());
        EXPECT(0x600d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0343
        gbc.setState(0xb9, 0x2052, 0x7110, 0x66f1, 0x41ec, 0xe352, 0x0, 0x0);
        gbc.writeMem(0xb9, { 0x2d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2052, gbc.sp());
        EXPECT(0xba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0344
        gbc.setState(0x5d96, 0xe0b1, 0x6d30, 0x3e98, 0xcd5a, 0x10b1, 0x0, 0x1);
        gbc.writeMem(0x5d96, { 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe0b1, gbc.sp());
        EXPECT(0x5d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0345
        gbc.setState(0x48c8, 0x92ff, 0x1f10, 0xcf41, 0xda94, 0xd6e5, 0x1, 0x1);
        gbc.writeMem(0x48c8, { 0x2d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x92ff, gbc.sp());
        EXPECT(0x48c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0346
        gbc.setState(0xeef5, 0xbd0, 0xb570, 0xa98c, 0x1f73, 0xc035, 0x1, 0x1);
        gbc.writeMem(0xeef5, { 0x2d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbd0, gbc.sp());
        EXPECT(0xeef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xeef5));
        // 2D 0347
        gbc.setState(0x7eec, 0xdbc, 0x9fd0, 0x7770, 0xb9b7, 0xde3c, 0x1, 0x1);
        gbc.writeMem(0x7eec, { 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdbc, gbc.sp());
        EXPECT(0x7eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0349
        gbc.setState(0x1670, 0x8db3, 0x84f0, 0x21f4, 0xffe8, 0xbeff, 0x0, 0x0);
        gbc.writeMem(0x1670, { 0x2d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8db3, gbc.sp());
        EXPECT(0x1671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 034A
        gbc.setState(0x8c1e, 0x4a70, 0xcb0, 0xbd9c, 0x8e83, 0x6da1, 0x1, 0x0);
        gbc.writeMem(0x8c1e, { 0x2d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4a70, gbc.sp());
        EXPECT(0x8c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8c1e));
        // 2D 034C
        gbc.setState(0x9e, 0x2e3, 0x9f30, 0x334a, 0x16de, 0xc791, 0x1, 0x0);
        gbc.writeMem(0x9e, { 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2e3, gbc.sp());
        EXPECT(0x9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 034D
        gbc.setState(0x4981, 0x851e, 0x5d80, 0x8cc1, 0xa8b3, 0xac3b, 0x0, 0x1);
        gbc.writeMem(0x4981, { 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x851e, gbc.sp());
        EXPECT(0x4982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 034E
        gbc.setState(0xe226, 0x1a42, 0x9260, 0x7665, 0xf92b, 0xbca8, 0x1, 0x1);
        gbc.writeMem(0xe226, { 0x2d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1a42, gbc.sp());
        EXPECT(0xe227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe226));
        // 2D 034F
        gbc.setState(0x5e11, 0x26ed, 0x8ef0, 0x3fb0, 0x4889, 0x9a1d, 0x1, 0x0);
        gbc.writeMem(0x5e11, { 0x2d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x26ed, gbc.sp());
        EXPECT(0x5e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0350
        gbc.setState(0x5f8c, 0x3841, 0x4ab0, 0x36df, 0x14be, 0xdde8, 0x0, 0x0);
        gbc.writeMem(0x5f8c, { 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3841, gbc.sp());
        EXPECT(0x5f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0351
        gbc.setState(0xef73, 0xb6d7, 0xbe00, 0x121e, 0xc6a3, 0x974e, 0x1, 0x1);
        gbc.writeMem(0xef73, { 0x2d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb6d7, gbc.sp());
        EXPECT(0xef74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xef73));
        // 2D 0352
        gbc.setState(0x44ee, 0x1f16, 0xfa80, 0x31cc, 0x98a2, 0x701, 0x1, 0x1);
        gbc.writeMem(0x44ee, { 0x2d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1f16, gbc.sp());
        EXPECT(0x44ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0353
        gbc.setState(0xe4ef, 0x3b0, 0xcb50, 0x9590, 0xed97, 0x1ef8, 0x1, 0x0);
        gbc.writeMem(0xe4ef, { 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3b0, gbc.sp());
        EXPECT(0xe4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe4ef));
        // 2D 0354
        gbc.setState(0x354d, 0x3af9, 0x8640, 0xa463, 0x6632, 0x8c8e, 0x0, 0x1);
        gbc.writeMem(0x354d, { 0x2d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0x354e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0355
        gbc.setState(0x85b3, 0xa551, 0xa240, 0xfa56, 0xa82d, 0x4566, 0x0, 0x1);
        gbc.writeMem(0x85b3, { 0x2d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa551, gbc.sp());
        EXPECT(0x85b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x85b3));
        // 2D 0357
        gbc.setState(0xc958, 0x43d3, 0x82a0, 0x4dc3, 0x4dcb, 0x1edb, 0x1, 0x1);
        gbc.writeMem(0xc958, { 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x43d3, gbc.sp());
        EXPECT(0xc959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc958));
        // 2D 0358
        gbc.setState(0x98c6, 0xb6ea, 0xf230, 0x35a3, 0x40b4, 0x38c4, 0x1, 0x1);
        gbc.writeMem(0x98c6, { 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb6ea, gbc.sp());
        EXPECT(0x98c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x98c6));
        // 2D 0359
        gbc.setState(0xb6df, 0x350c, 0xe040, 0x237d, 0xc0eb, 0xe665, 0x0, 0x0);
        gbc.writeMem(0xb6df, { 0x2d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x350c, gbc.sp());
        EXPECT(0xb6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb6df));
        // 2D 035A
        gbc.setState(0x919d, 0x138e, 0x5d10, 0xf57d, 0x6e4a, 0x90a8, 0x0, 0x0);
        gbc.writeMem(0x919d, { 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x138e, gbc.sp());
        EXPECT(0x919e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x919d));
        // 2D 035B
        gbc.setState(0x817e, 0x2d72, 0xa510, 0x52be, 0x7eef, 0xf269, 0x0, 0x1);
        gbc.writeMem(0x817e, { 0x2d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2d72, gbc.sp());
        EXPECT(0x817f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x817e));
        // 2D 035C
        gbc.setState(0x2a82, 0xca00, 0x8470, 0xa824, 0xa626, 0x7cb5, 0x1, 0x1);
        gbc.writeMem(0x2a82, { 0x2d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xca00, gbc.sp());
        EXPECT(0x2a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 035D
        gbc.setState(0x959a, 0x137a, 0x1d10, 0x6714, 0x8eb4, 0x2e43, 0x1, 0x1);
        gbc.writeMem(0x959a, { 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x137a, gbc.sp());
        EXPECT(0x959b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x959a));
        // 2D 035E
        gbc.setState(0x44d6, 0x9051, 0x4b60, 0x16fc, 0x199c, 0xc6c, 0x1, 0x1);
        gbc.writeMem(0x44d6, { 0x2d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9051, gbc.sp());
        EXPECT(0x44d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 035F
        gbc.setState(0x2271, 0x2f06, 0x43c0, 0x392f, 0x9368, 0x8e83, 0x1, 0x0);
        gbc.writeMem(0x2271, { 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2f06, gbc.sp());
        EXPECT(0x2272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0360
        gbc.setState(0x5a58, 0x4eb8, 0x9680, 0x56a7, 0x3a8a, 0xb5bb, 0x0, 0x1);
        gbc.writeMem(0x5a58, { 0x2d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4eb8, gbc.sp());
        EXPECT(0x5a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0361
        gbc.setState(0x9ec9, 0x7cd, 0x4b70, 0x196d, 0xc152, 0x60ba, 0x1, 0x0);
        gbc.writeMem(0x9ec9, { 0x2d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7cd, gbc.sp());
        EXPECT(0x9eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9ec9));
        // 2D 0362
        gbc.setState(0x9e46, 0x196f, 0xa900, 0xaaee, 0x19cd, 0x4faa, 0x0, 0x0);
        gbc.writeMem(0x9e46, { 0x2d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x196f, gbc.sp());
        EXPECT(0x9e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9e46));
        // 2D 0363
        gbc.setState(0xa469, 0x3b3b, 0x6f00, 0x2c8d, 0x74f5, 0x4db, 0x1, 0x0);
        gbc.writeMem(0xa469, { 0x2d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3b3b, gbc.sp());
        EXPECT(0xa46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa469));
        // 2D 0364
        gbc.setState(0xd73e, 0x70d1, 0xc0d0, 0x66d5, 0xd866, 0x6df5, 0x0, 0x1);
        gbc.writeMem(0xd73e, { 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x70d1, gbc.sp());
        EXPECT(0xd73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd73e));
        // 2D 0365
        gbc.setState(0xc96, 0xeb1b, 0x6470, 0x8426, 0xdf7a, 0x15aa, 0x0, 0x1);
        gbc.writeMem(0xc96, { 0x2d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xeb1b, gbc.sp());
        EXPECT(0xc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0366
        gbc.setState(0x133a, 0x98ec, 0x69d0, 0x31d, 0x83c2, 0xc337, 0x1, 0x1);
        gbc.writeMem(0x133a, { 0x2d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x98ec, gbc.sp());
        EXPECT(0x133b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0367
        gbc.setState(0x63b, 0xeb35, 0xa430, 0x3314, 0xf8ff, 0xb191, 0x1, 0x0);
        gbc.writeMem(0x63b, { 0x2d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeb35, gbc.sp());
        EXPECT(0x63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0368
        gbc.setState(0x203b, 0xbcdf, 0x2f00, 0x6398, 0x8e8d, 0xfbe0, 0x1, 0x1);
        gbc.writeMem(0x203b, { 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbcdf, gbc.sp());
        EXPECT(0x203c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0369
        gbc.setState(0xe6bc, 0x94a, 0x57c0, 0x8c46, 0x5b64, 0x50a0, 0x0, 0x0);
        gbc.writeMem(0xe6bc, { 0x2d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x94a, gbc.sp());
        EXPECT(0xe6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe6bc));
        // 2D 036A
        gbc.setState(0x85e, 0xc072, 0x4fc0, 0x6c7, 0x481e, 0x4600, 0x1, 0x0);
        gbc.writeMem(0x85e, { 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc072, gbc.sp());
        EXPECT(0x85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 036B
        gbc.setState(0xcc1b, 0xabbb, 0x9d10, 0xd411, 0xd3fe, 0x6865, 0x1, 0x0);
        gbc.writeMem(0xcc1b, { 0x2d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xabbb, gbc.sp());
        EXPECT(0xcc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcc1b));
        // 2D 036D
        gbc.setState(0x5cbf, 0xd4bd, 0x3c30, 0xf868, 0xa182, 0x6400, 0x1, 0x1);
        gbc.writeMem(0x5cbf, { 0x2d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd4bd, gbc.sp());
        EXPECT(0x5cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 036E
        gbc.setState(0x1ee6, 0xcbdc, 0xd3d0, 0xe5e, 0x57d5, 0xbdc, 0x0, 0x1);
        gbc.writeMem(0x1ee6, { 0x2d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcbdc, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 036F
        gbc.setState(0x6985, 0xa51e, 0x1860, 0x8068, 0xf91d, 0x5842, 0x1, 0x1);
        gbc.writeMem(0x6985, { 0x2d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa51e, gbc.sp());
        EXPECT(0x6986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0370
        gbc.setState(0xe28d, 0xd953, 0x7a0, 0x9702, 0x2abd, 0xfd97, 0x1, 0x0);
        gbc.writeMem(0xe28d, { 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd953, gbc.sp());
        EXPECT(0xe28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe28d));
        // 2D 0371
        gbc.setState(0x163e, 0x85f2, 0x51c0, 0x600f, 0xbcb3, 0x2a4e, 0x1, 0x1);
        gbc.writeMem(0x163e, { 0x2d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x85f2, gbc.sp());
        EXPECT(0x163f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0372
        gbc.setState(0x47e4, 0xdc5e, 0x69c0, 0x55b4, 0x88b6, 0x3850, 0x0, 0x0);
        gbc.writeMem(0x47e4, { 0x2d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdc5e, gbc.sp());
        EXPECT(0x47e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0373
        gbc.setState(0xeea7, 0x4198, 0x8220, 0x8a26, 0x111a, 0x227c, 0x0, 0x1);
        gbc.writeMem(0xeea7, { 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4198, gbc.sp());
        EXPECT(0xeea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xeea7));
        // 2D 0374
        gbc.setState(0xd182, 0x2c44, 0xa310, 0xc891, 0x288d, 0xe4c1, 0x0, 0x0);
        gbc.writeMem(0xd182, { 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2c44, gbc.sp());
        EXPECT(0xd183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd182));
        // 2D 0375
        gbc.setState(0x59e2, 0x680d, 0xee70, 0xd8f2, 0xf336, 0x6827, 0x1, 0x0);
        gbc.writeMem(0x59e2, { 0x2d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x680d, gbc.sp());
        EXPECT(0x59e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0376
        gbc.setState(0xd16c, 0x5a8d, 0xcbe0, 0x1951, 0xc0a, 0x47ca, 0x0, 0x0);
        gbc.writeMem(0xd16c, { 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5a8d, gbc.sp());
        EXPECT(0xd16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd16c));
        // 2D 0377
        gbc.setState(0xa41c, 0x64a7, 0xeec0, 0x2033, 0xc861, 0xda24, 0x0, 0x0);
        gbc.writeMem(0xa41c, { 0x2d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x64a7, gbc.sp());
        EXPECT(0xa41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa41c));
        // 2D 0378
        gbc.setState(0xb2c4, 0xadb8, 0xa660, 0x542c, 0x2e74, 0xd1ee, 0x1, 0x1);
        gbc.writeMem(0xb2c4, { 0x2d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xadb8, gbc.sp());
        EXPECT(0xb2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb2c4));
        // 2D 0379
        gbc.setState(0x8e6f, 0xe45, 0x3470, 0xe808, 0x257b, 0xdf93, 0x1, 0x1);
        gbc.writeMem(0x8e6f, { 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe45, gbc.sp());
        EXPECT(0x8e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8e6f));
        // 2D 037A
        gbc.setState(0xccba, 0x16d3, 0x8690, 0xc393, 0xe61f, 0x642a, 0x0, 0x0);
        gbc.writeMem(0xccba, { 0x2d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x16d3, gbc.sp());
        EXPECT(0xccbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xccba));
        // 2D 037B
        gbc.setState(0xd265, 0x3af8, 0x6780, 0xcec2, 0x1871, 0xe9cb, 0x1, 0x1);
        gbc.writeMem(0xd265, { 0x2d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3af8, gbc.sp());
        EXPECT(0xd266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd265));
        // 2D 037C
        gbc.setState(0x8397, 0x36c2, 0xba20, 0xa, 0x8c1d, 0xeda4, 0x0, 0x1);
        gbc.writeMem(0x8397, { 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x36c2, gbc.sp());
        EXPECT(0x8398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8397));
        // 2D 037E
        gbc.setState(0x7b51, 0xc1cb, 0x2090, 0x81fa, 0x82a0, 0x87d8, 0x1, 0x0);
        gbc.writeMem(0x7b51, { 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc1cb, gbc.sp());
        EXPECT(0x7b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 037F
        gbc.setState(0x5e5e, 0x18d8, 0x8ad0, 0xb725, 0xd778, 0x2de5, 0x0, 0x0);
        gbc.writeMem(0x5e5e, { 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x18d8, gbc.sp());
        EXPECT(0x5e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0380
        gbc.setState(0x2a33, 0x1715, 0xfb10, 0x6bf3, 0x5c6d, 0x1636, 0x1, 0x1);
        gbc.writeMem(0x2a33, { 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1715, gbc.sp());
        EXPECT(0x2a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0381
        gbc.setState(0xeaf9, 0x9ec, 0x5480, 0x27ad, 0x4248, 0xc865, 0x1, 0x0);
        gbc.writeMem(0xeaf9, { 0x2d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9ec, gbc.sp());
        EXPECT(0xeafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xeaf9));
        // 2D 0382
        gbc.setState(0xcfb0, 0x47c4, 0x29d0, 0x60ec, 0x7739, 0x915a, 0x1, 0x1);
        gbc.writeMem(0xcfb0, { 0x2d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x47c4, gbc.sp());
        EXPECT(0xcfb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcfb0));
        // 2D 0383
        gbc.setState(0x501a, 0xf202, 0x63e0, 0x14b4, 0x18fb, 0xe3fb, 0x1, 0x1);
        gbc.writeMem(0x501a, { 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf202, gbc.sp());
        EXPECT(0x501b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0384
        gbc.setState(0x1349, 0xf3e1, 0x6b10, 0x1a7, 0xb697, 0xf37e, 0x1, 0x0);
        gbc.writeMem(0x1349, { 0x2d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf3e1, gbc.sp());
        EXPECT(0x134a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0385
        gbc.setState(0x9b57, 0x650e, 0xc830, 0x518b, 0xf349, 0xa27a, 0x0, 0x0);
        gbc.writeMem(0x9b57, { 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x650e, gbc.sp());
        EXPECT(0x9b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9b57));
        // 2D 0386
        gbc.setState(0x7ae7, 0x6897, 0xa930, 0x636e, 0x7637, 0x7d5e, 0x0, 0x1);
        gbc.writeMem(0x7ae7, { 0x2d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6897, gbc.sp());
        EXPECT(0x7ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0387
        gbc.setState(0xb03d, 0xcf1, 0xf5d0, 0xbd7c, 0x48f6, 0x38a6, 0x1, 0x0);
        gbc.writeMem(0xb03d, { 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcf1, gbc.sp());
        EXPECT(0xb03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb03d));
        // 2D 0388
        gbc.setState(0x6b9d, 0x68e2, 0x3b50, 0x7eef, 0x54ac, 0x1f44, 0x1, 0x0);
        gbc.writeMem(0x6b9d, { 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x68e2, gbc.sp());
        EXPECT(0x6b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0389
        gbc.setState(0x6ce, 0x1835, 0x3b30, 0x50c4, 0xd768, 0xadf1, 0x1, 0x1);
        gbc.writeMem(0x6ce, { 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1835, gbc.sp());
        EXPECT(0x6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 038A
        gbc.setState(0xd63c, 0xbe9a, 0xa780, 0x41d4, 0xc885, 0xac8c, 0x1, 0x0);
        gbc.writeMem(0xd63c, { 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbe9a, gbc.sp());
        EXPECT(0xd63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd63c));
        // 2D 038B
        gbc.setState(0x9a23, 0xb1a8, 0x4410, 0x303b, 0x68f, 0x4058, 0x1, 0x0);
        gbc.writeMem(0x9a23, { 0x2d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb1a8, gbc.sp());
        EXPECT(0x9a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9a23));
        // 2D 038C
        gbc.setState(0xb8bf, 0x6ed7, 0xafc0, 0x728d, 0xe8df, 0x3ecd, 0x0, 0x1);
        gbc.writeMem(0xb8bf, { 0x2d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6ed7, gbc.sp());
        EXPECT(0xb8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb8bf));
        // 2D 038D
        gbc.setState(0xf00, 0xd7a4, 0xad20, 0x86f5, 0xf4b7, 0x3ffa, 0x0, 0x1);
        gbc.writeMem(0xf00, { 0x2d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd7a4, gbc.sp());
        EXPECT(0xf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 038E
        gbc.setState(0xae69, 0xeb7d, 0x43b0, 0xb23c, 0x963f, 0x599d, 0x0, 0x1);
        gbc.writeMem(0xae69, { 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xeb7d, gbc.sp());
        EXPECT(0xae6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xae69));
        // 2D 038F
        gbc.setState(0x663a, 0xf1a8, 0x7190, 0xa738, 0x216d, 0x51cc, 0x0, 0x1);
        gbc.writeMem(0x663a, { 0x2d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf1a8, gbc.sp());
        EXPECT(0x663b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0390
        gbc.setState(0x87fc, 0x1487, 0xd6b0, 0x73ce, 0xb29e, 0x6071, 0x1, 0x0);
        gbc.writeMem(0x87fc, { 0x2d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1487, gbc.sp());
        EXPECT(0x87fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x87fc));
        // 2D 0391
        gbc.setState(0x7c0f, 0x6a31, 0xdf60, 0x36d2, 0xe35d, 0x55f4, 0x1, 0x1);
        gbc.writeMem(0x7c0f, { 0x2d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6a31, gbc.sp());
        EXPECT(0x7c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0392
        gbc.setState(0x1b63, 0xd2c6, 0xec40, 0x90e2, 0x2674, 0x7a53, 0x1, 0x0);
        gbc.writeMem(0x1b63, { 0x2d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd2c6, gbc.sp());
        EXPECT(0x1b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0393
        gbc.setState(0xdbc3, 0x56a3, 0xe1c0, 0x9c66, 0x2ff8, 0x8b4e, 0x1, 0x0);
        gbc.writeMem(0xdbc3, { 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x56a3, gbc.sp());
        EXPECT(0xdbc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdbc3));
        // 2D 0394
        gbc.setState(0xb4a7, 0xf2b6, 0xdb0, 0xe688, 0x48d, 0xe462, 0x1, 0x1);
        gbc.writeMem(0xb4a7, { 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf2b6, gbc.sp());
        EXPECT(0xb4a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb4a7));
        // 2D 0395
        gbc.setState(0x6c60, 0xfe4a, 0x53b0, 0x6221, 0x5720, 0x576a, 0x0, 0x0);
        gbc.writeMem(0x6c60, { 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfe4a, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 0396
        gbc.setState(0xa46d, 0x7af1, 0x78e0, 0xb7ca, 0x3306, 0x9626, 0x0, 0x1);
        gbc.writeMem(0xa46d, { 0x2d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7af1, gbc.sp());
        EXPECT(0xa46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa46d));
        // 2D 0397
        gbc.setState(0x1bfd, 0x99a7, 0xd500, 0x3f47, 0x9b55, 0x3179, 0x0, 0x0);
        gbc.writeMem(0x1bfd, { 0x2d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x99a7, gbc.sp());
        EXPECT(0x1bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 0398
        gbc.setState(0xefa7, 0x319f, 0x9fe0, 0x4a55, 0xf415, 0x75a4, 0x0, 0x1);
        gbc.writeMem(0xefa7, { 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x319f, gbc.sp());
        EXPECT(0xefa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xefa7));
        // 2D 0399
        gbc.setState(0x3a8d, 0x5109, 0xbec0, 0x8122, 0xc37f, 0xedf3, 0x0, 0x1);
        gbc.writeMem(0x3a8d, { 0x2d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5109, gbc.sp());
        EXPECT(0x3a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 039A
        gbc.setState(0x321f, 0x34a5, 0xfe0, 0xbc6a, 0x3398, 0x99c2, 0x0, 0x1);
        gbc.writeMem(0x321f, { 0x2d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x34a5, gbc.sp());
        EXPECT(0x3220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 039B
        gbc.setState(0x42dd, 0xae6c, 0xe880, 0xc873, 0xdec3, 0x79e8, 0x1, 0x0);
        gbc.writeMem(0x42dd, { 0x2d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xae6c, gbc.sp());
        EXPECT(0x42de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 039C
        gbc.setState(0x627c, 0x8346, 0xe3c0, 0x43f2, 0x2c9d, 0x6d94, 0x1, 0x0);
        gbc.writeMem(0x627c, { 0x2d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8346, gbc.sp());
        EXPECT(0x627d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 039D
        gbc.setState(0x644, 0xf914, 0xb0e0, 0xd7fa, 0xc120, 0xc846, 0x1, 0x1);
        gbc.writeMem(0x644, { 0x2d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf914, gbc.sp());
        EXPECT(0x645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 039E
        gbc.setState(0x9fda, 0x4eb2, 0x3ab0, 0x3e0b, 0x8dd5, 0xd686, 0x1, 0x1);
        gbc.writeMem(0x9fda, { 0x2d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4eb2, gbc.sp());
        EXPECT(0x9fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9fda));
        // 2D 039F
        gbc.setState(0xbe19, 0xba76, 0x4260, 0x3bc9, 0x92a8, 0x1927, 0x0, 0x1);
        gbc.writeMem(0xbe19, { 0x2d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xba76, gbc.sp());
        EXPECT(0xbe1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbe19));
        // 2D 03A0
        gbc.setState(0x1028, 0x3b39, 0x4ff0, 0x6d5d, 0x6af0, 0x499f, 0x0, 0x0);
        gbc.writeMem(0x1028, { 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3b39, gbc.sp());
        EXPECT(0x1029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03A1
        gbc.setState(0x94f9, 0xb399, 0xd280, 0x1f4, 0xf2e8, 0xf6a4, 0x1, 0x0);
        gbc.writeMem(0x94f9, { 0x2d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb399, gbc.sp());
        EXPECT(0x94fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x94f9));
        // 2D 03A2
        gbc.setState(0x23dd, 0xc28d, 0x3460, 0x9f03, 0x7243, 0x8eee, 0x1, 0x0);
        gbc.writeMem(0x23dd, { 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc28d, gbc.sp());
        EXPECT(0x23de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03A3
        gbc.setState(0x33af, 0x3039, 0x4970, 0x95e8, 0x795b, 0x9f6, 0x0, 0x0);
        gbc.writeMem(0x33af, { 0x2d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3039, gbc.sp());
        EXPECT(0x33b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03A5
        gbc.setState(0x4839, 0xdf1e, 0x90d0, 0x25df, 0x3154, 0x31f0, 0x1, 0x1);
        gbc.writeMem(0x4839, { 0x2d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdf1e, gbc.sp());
        EXPECT(0x483a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03A6
        gbc.setState(0x2d8a, 0x5b0f, 0x9820, 0x4e0c, 0xaeb5, 0x6390, 0x0, 0x1);
        gbc.writeMem(0x2d8a, { 0x2d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5b0f, gbc.sp());
        EXPECT(0x2d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03A7
        gbc.setState(0x3bb7, 0xcf3, 0xcea0, 0xfa1b, 0xfda7, 0x9206, 0x1, 0x0);
        gbc.writeMem(0x3bb7, { 0x2d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcf3, gbc.sp());
        EXPECT(0x3bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03A8
        gbc.setState(0x2bf, 0xa08e, 0xd390, 0x287d, 0xa73d, 0xda05, 0x0, 0x0);
        gbc.writeMem(0x2bf, { 0x2d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa08e, gbc.sp());
        EXPECT(0x2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03A9
        gbc.setState(0x8058, 0x5633, 0x5660, 0x9145, 0x50d, 0xa913, 0x1, 0x1);
        gbc.writeMem(0x8058, { 0x2d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5633, gbc.sp());
        EXPECT(0x8059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8058));
        // 2D 03AA
        gbc.setState(0x4f1, 0x981c, 0x4a70, 0x358f, 0x78c7, 0x4ad3, 0x1, 0x0);
        gbc.writeMem(0x4f1, { 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x981c, gbc.sp());
        EXPECT(0x4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03AB
        gbc.setState(0xe5d5, 0x5621, 0xa960, 0x9de5, 0x767, 0xd1c3, 0x1, 0x1);
        gbc.writeMem(0xe5d5, { 0x2d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5621, gbc.sp());
        EXPECT(0xe5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe5d5));
        // 2D 03AC
        gbc.setState(0x7ed5, 0xb9bf, 0x8e40, 0x104f, 0x58e2, 0x7a8a, 0x1, 0x1);
        gbc.writeMem(0x7ed5, { 0x2d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb9bf, gbc.sp());
        EXPECT(0x7ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03AD
        gbc.setState(0x8f1f, 0x7ebc, 0xcd90, 0x5272, 0xe47d, 0x4af4, 0x0, 0x0);
        gbc.writeMem(0x8f1f, { 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7ebc, gbc.sp());
        EXPECT(0x8f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8f1f));
        // 2D 03AE
        gbc.setState(0x84c, 0xe038, 0xdcc0, 0xb409, 0xfec4, 0x6bff, 0x1, 0x0);
        gbc.writeMem(0x84c, { 0x2d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe038, gbc.sp());
        EXPECT(0x84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03AF
        gbc.setState(0x4fad, 0x8c43, 0x6970, 0xe195, 0x8be6, 0x39ad, 0x0, 0x1);
        gbc.writeMem(0x4fad, { 0x2d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8c43, gbc.sp());
        EXPECT(0x4fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03B0
        gbc.setState(0xd03b, 0x7952, 0xcef0, 0x5a56, 0xbfe3, 0xa5d9, 0x1, 0x0);
        gbc.writeMem(0xd03b, { 0x2d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7952, gbc.sp());
        EXPECT(0xd03c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd03b));
        // 2D 03B1
        gbc.setState(0x5738, 0x7adc, 0xa360, 0x83e6, 0x2da3, 0x352f, 0x1, 0x1);
        gbc.writeMem(0x5738, { 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7adc, gbc.sp());
        EXPECT(0x5739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03B2
        gbc.setState(0x671, 0xe630, 0x6b60, 0x5e14, 0xcb5d, 0xe46c, 0x1, 0x1);
        gbc.writeMem(0x671, { 0x2d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe630, gbc.sp());
        EXPECT(0x672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03B3
        gbc.setState(0x3c23, 0x31a1, 0xa8b0, 0xcafb, 0x76ac, 0x8a09, 0x1, 0x1);
        gbc.writeMem(0x3c23, { 0x2d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x31a1, gbc.sp());
        EXPECT(0x3c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03B5
        gbc.setState(0x3aa8, 0x1a24, 0xfc80, 0x1d8e, 0xf569, 0x750, 0x1, 0x1);
        gbc.writeMem(0x3aa8, { 0x2d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1a24, gbc.sp());
        EXPECT(0x3aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03B6
        gbc.setState(0xb382, 0x4c0c, 0x5030, 0x44, 0x6ccd, 0x3ea0, 0x0, 0x0);
        gbc.writeMem(0xb382, { 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4c0c, gbc.sp());
        EXPECT(0xb383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb382));
        // 2D 03B7
        gbc.setState(0xa220, 0xec49, 0x4ca0, 0xe1e4, 0x3ae4, 0xa8e4, 0x1, 0x1);
        gbc.writeMem(0xa220, { 0x2d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xec49, gbc.sp());
        EXPECT(0xa221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa220));
        // 2D 03B8
        gbc.setState(0xe13a, 0x862, 0xf900, 0xec69, 0x330f, 0x8f17, 0x0, 0x0);
        gbc.writeMem(0xe13a, { 0x2d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x862, gbc.sp());
        EXPECT(0xe13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe13a));
        // 2D 03B9
        gbc.setState(0x215c, 0x3be3, 0xa860, 0x842c, 0xef67, 0xe4a7, 0x0, 0x0);
        gbc.writeMem(0x215c, { 0x2d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3be3, gbc.sp());
        EXPECT(0x215d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03BA
        gbc.setState(0xa8e2, 0x1ff2, 0xc940, 0x73e, 0xc159, 0x921b, 0x1, 0x1);
        gbc.writeMem(0xa8e2, { 0x2d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1ff2, gbc.sp());
        EXPECT(0xa8e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa8e2));
        // 2D 03BC
        gbc.setState(0x6ec5, 0x78e6, 0x64a0, 0xe6ec, 0x5654, 0x7c59, 0x1, 0x0);
        gbc.writeMem(0x6ec5, { 0x2d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x78e6, gbc.sp());
        EXPECT(0x6ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03BD
        gbc.setState(0xbd09, 0xe7e5, 0x92f0, 0x585, 0x2355, 0xf75b, 0x1, 0x0);
        gbc.writeMem(0xbd09, { 0x2d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe7e5, gbc.sp());
        EXPECT(0xbd0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbd09));
        // 2D 03BE
        gbc.setState(0x9fcf, 0xbe5b, 0xf800, 0x2cbb, 0xda35, 0x6aa4, 0x1, 0x1);
        gbc.writeMem(0x9fcf, { 0x2d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbe5b, gbc.sp());
        EXPECT(0x9fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9fcf));
        // 2D 03BF
        gbc.setState(0xd93, 0x2e49, 0x9b80, 0x4b30, 0xc0b0, 0x9232, 0x0, 0x1);
        gbc.writeMem(0xd93, { 0x2d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2e49, gbc.sp());
        EXPECT(0xd94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03C0
        gbc.setState(0x4be2, 0xe0fd, 0x7fb0, 0xc687, 0x762c, 0x97b2, 0x1, 0x1);
        gbc.writeMem(0x4be2, { 0x2d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe0fd, gbc.sp());
        EXPECT(0x4be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03C1
        gbc.setState(0x2070, 0xf61b, 0x85d0, 0x1719, 0x605f, 0xa0e7, 0x0, 0x0);
        gbc.writeMem(0x2070, { 0x2d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf61b, gbc.sp());
        EXPECT(0x2071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03C2
        gbc.setState(0x5d01, 0x26b3, 0xe2c0, 0x4d9a, 0xfea6, 0x6bed, 0x0, 0x0);
        gbc.writeMem(0x5d01, { 0x2d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x26b3, gbc.sp());
        EXPECT(0x5d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03C3
        gbc.setState(0xae84, 0x9590, 0x27e0, 0x1354, 0xb94f, 0xba4b, 0x1, 0x0);
        gbc.writeMem(0xae84, { 0x2d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9590, gbc.sp());
        EXPECT(0xae85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xae84));
        // 2D 03C5
        gbc.setState(0x9772, 0x50d6, 0xc0, 0xa4ab, 0x8a7f, 0x838e, 0x1, 0x0);
        gbc.writeMem(0x9772, { 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x50d6, gbc.sp());
        EXPECT(0x9773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9772));
        // 2D 03C6
        gbc.setState(0x8966, 0x3a39, 0x9350, 0xad8, 0x4bbe, 0x286d, 0x1, 0x1);
        gbc.writeMem(0x8966, { 0x2d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3a39, gbc.sp());
        EXPECT(0x8967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8966));
        // 2D 03C7
        gbc.setState(0x9e5f, 0x8b66, 0xdc90, 0x9de1, 0x9edd, 0x1f45, 0x1, 0x1);
        gbc.writeMem(0x9e5f, { 0x2d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8b66, gbc.sp());
        EXPECT(0x9e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9e5f));
        // 2D 03C8
        gbc.setState(0x8b6, 0xe8ca, 0x7200, 0x9af8, 0x36ea, 0x91b4, 0x1, 0x1);
        gbc.writeMem(0x8b6, { 0x2d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe8ca, gbc.sp());
        EXPECT(0x8b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03C9
        gbc.setState(0xe16f, 0xd97d, 0xee70, 0x2996, 0x9efb, 0x8af8, 0x0, 0x0);
        gbc.writeMem(0xe16f, { 0x2d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd97d, gbc.sp());
        EXPECT(0xe170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe16f));
        // 2D 03CA
        gbc.setState(0x9812, 0xa164, 0xd960, 0x22ce, 0xe030, 0x1885, 0x0, 0x1);
        gbc.writeMem(0x9812, { 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa164, gbc.sp());
        EXPECT(0x9813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9812));
        // 2D 03CC
        gbc.setState(0x416a, 0xb407, 0xff20, 0xac49, 0x8557, 0x14a3, 0x0, 0x0);
        gbc.writeMem(0x416a, { 0x2d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb407, gbc.sp());
        EXPECT(0x416b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03CD
        gbc.setState(0x221a, 0x596b, 0x8960, 0xdf72, 0x4ed7, 0x74eb, 0x1, 0x1);
        gbc.writeMem(0x221a, { 0x2d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x596b, gbc.sp());
        EXPECT(0x221b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03CE
        gbc.setState(0x9fe5, 0xde48, 0x3e30, 0x156b, 0x487e, 0x57de, 0x1, 0x1);
        gbc.writeMem(0x9fe5, { 0x2d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xde48, gbc.sp());
        EXPECT(0x9fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9fe5));
        // 2D 03CF
        gbc.setState(0xbbc6, 0xf0df, 0x430, 0xc299, 0x2868, 0xa62c, 0x1, 0x0);
        gbc.writeMem(0xbbc6, { 0x2d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf0df, gbc.sp());
        EXPECT(0xbbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbbc6));
        // 2D 03D0
        gbc.setState(0xd084, 0x9ce9, 0xf910, 0x1fc5, 0x1eaa, 0xd384, 0x1, 0x0);
        gbc.writeMem(0xd084, { 0x2d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9ce9, gbc.sp());
        EXPECT(0xd085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd084));
        // 2D 03D2
        gbc.setState(0x4717, 0x14cd, 0x5a0, 0xfe83, 0xadab, 0x4b89, 0x0, 0x0);
        gbc.writeMem(0x4717, { 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x14cd, gbc.sp());
        EXPECT(0x4718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03D5
        gbc.setState(0x8bee, 0x52fe, 0x9670, 0x740f, 0xf748, 0x5895, 0x0, 0x0);
        gbc.writeMem(0x8bee, { 0x2d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x52fe, gbc.sp());
        EXPECT(0x8bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8bee));
        // 2D 03D6
        gbc.setState(0x73bb, 0xa216, 0x3a90, 0xc1f6, 0xa377, 0x2632, 0x1, 0x1);
        gbc.writeMem(0x73bb, { 0x2d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa216, gbc.sp());
        EXPECT(0x73bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03D8
        gbc.setState(0x87f6, 0x181c, 0x9470, 0x55a5, 0x825f, 0xaf50, 0x1, 0x0);
        gbc.writeMem(0x87f6, { 0x2d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x181c, gbc.sp());
        EXPECT(0x87f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x87f6));
        // 2D 03D9
        gbc.setState(0xb6ef, 0x9a55, 0x4ae0, 0x8e1a, 0x670d, 0x2799, 0x1, 0x1);
        gbc.writeMem(0xb6ef, { 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9a55, gbc.sp());
        EXPECT(0xb6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb6ef));
        // 2D 03DA
        gbc.setState(0x85e1, 0x8e02, 0x8220, 0xe4e0, 0x36, 0xb8b2, 0x0, 0x0);
        gbc.writeMem(0x85e1, { 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8e02, gbc.sp());
        EXPECT(0x85e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x85e1));
        // 2D 03DB
        gbc.setState(0x8a8b, 0x7745, 0xbd60, 0xce90, 0xe118, 0x6deb, 0x1, 0x1);
        gbc.writeMem(0x8a8b, { 0x2d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7745, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8a8b));
        // 2D 03DC
        gbc.setState(0x9aec, 0xfdc7, 0xbb50, 0x5c51, 0x996c, 0x56f, 0x1, 0x0);
        gbc.writeMem(0x9aec, { 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfdc7, gbc.sp());
        EXPECT(0x9aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9aec));
        // 2D 03DE
        gbc.setState(0x298b, 0x88ec, 0xe680, 0xca01, 0x7fa6, 0x7334, 0x1, 0x1);
        gbc.writeMem(0x298b, { 0x2d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x88ec, gbc.sp());
        EXPECT(0x298c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2D 03DF
        gbc.setState(0x8496, 0xb130, 0x14b0, 0xd6ab, 0x9b89, 0xa9b6, 0x1, 0x1);
        gbc.writeMem(0x8496, { 0x2d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb130, gbc.sp());
        EXPECT(0x8497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8496));
        // 2D 03E0
        gbc.setState(0x7789, 0xc4a1, 0x66d0, 0xe132, 0x7040, 0x1d01, 0x0, 0x1);
        gbc.writeMem(0x7789, { 0x2d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc4a1, gbc.sp());
        EXPECT(0x778a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03E1
        gbc.setState(0xa8c1, 0xfde3, 0x8c0, 0xa186, 0xd036, 0x5102, 0x1, 0x1);
        gbc.writeMem(0xa8c1, { 0x2d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfde3, gbc.sp());
        EXPECT(0xa8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa8c1));
        // 2D 03E2
        gbc.setState(0xca11, 0x8635, 0x2960, 0xbfa1, 0x607b, 0x3ce6, 0x1, 0x1);
        gbc.writeMem(0xca11, { 0x2d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8635, gbc.sp());
        EXPECT(0xca12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xca11));
        // 2D 03E4
        gbc.setState(0x9940, 0x21be, 0x6510, 0xc54f, 0xe0a4, 0x85d4, 0x0, 0x1);
        gbc.writeMem(0x9940, { 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x21be, gbc.sp());
        EXPECT(0x9941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9940));
        // 2D 03E5
        gbc.setState(0xb13f, 0xf393, 0xa240, 0x41bc, 0x3b30, 0xedc2, 0x0, 0x0);
        gbc.writeMem(0xb13f, { 0x2d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf393, gbc.sp());
        EXPECT(0xb140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb13f));
        // 2D 03E6
        gbc.setState(0x7648, 0x79c3, 0x1ff0, 0xbb3b, 0xe079, 0x611b, 0x0, 0x1);
        gbc.writeMem(0x7648, { 0x2d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x79c3, gbc.sp());
        EXPECT(0x7649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2D 03E7
        gbc.setState(0x1603, 0xe5e3, 0xca80, 0xcf10, 0x25d3, 0x5313, 0x0, 0x1);
        gbc.writeMem(0x1603, { 0x2d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe5e3, gbc.sp());
        EXPECT(0x1604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
