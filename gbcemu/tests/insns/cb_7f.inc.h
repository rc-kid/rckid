    TEST(gbcemu, opcode_cb_7f) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 7F 0000
        gbc.setState(0x159d, 0x8ab7, 0x7300, 0x1105, 0x186d, 0x5bf1, 0x0, 0x1);
        gbc.writeMem(0x159d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8ab7, gbc.sp());
        EXPECT(0x159f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0001
        gbc.setState(0x6e74, 0x494a, 0x35d0, 0x37e8, 0x21c9, 0x3338, 0x1, 0x0);
        gbc.writeMem(0x6e74, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x494a, gbc.sp());
        EXPECT(0x6e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0002
        gbc.setState(0x610, 0x6b10, 0x59c0, 0x49f9, 0xb51, 0x4979, 0x1, 0x0);
        gbc.writeMem(0x610, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6b10, gbc.sp());
        EXPECT(0x612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0003
        gbc.setState(0x736d, 0xf7cc, 0x5820, 0x137, 0xd593, 0xc6fa, 0x0, 0x0);
        gbc.writeMem(0x736d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf7cc, gbc.sp());
        EXPECT(0x736f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0004
        gbc.setState(0x1bfc, 0xb1c1, 0x4360, 0xa6c2, 0xbc4f, 0xee25, 0x1, 0x0);
        gbc.writeMem(0x1bfc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb1c1, gbc.sp());
        EXPECT(0x1bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0005
        gbc.setState(0x24d7, 0xfa59, 0xa350, 0x2628, 0x5787, 0x1baa, 0x0, 0x1);
        gbc.writeMem(0x24d7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfa59, gbc.sp());
        EXPECT(0x24d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0006
        gbc.setState(0xe876, 0x8830, 0x16f0, 0x3eab, 0x5737, 0x4a83, 0x1, 0x1);
        gbc.writeMem(0xe876, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8830, gbc.sp());
        EXPECT(0xe878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe876));
        EXPECT(0x7f, gbc.readMem(0xe877));
        // CB 7F 0007
        gbc.setState(0x64d3, 0x7f8d, 0x4280, 0x2f14, 0x9b49, 0x6a85, 0x0, 0x0);
        gbc.writeMem(0x64d3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7f8d, gbc.sp());
        EXPECT(0x64d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0008
        gbc.setState(0xc739, 0xe74c, 0xae80, 0xe1e5, 0x931b, 0xc1d6, 0x1, 0x1);
        gbc.writeMem(0xc739, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe74c, gbc.sp());
        EXPECT(0xc73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc739));
        EXPECT(0x7f, gbc.readMem(0xc73a));
        // CB 7F 0009
        gbc.setState(0xcdb5, 0x3955, 0x4900, 0x845b, 0xf006, 0xd42a, 0x1, 0x0);
        gbc.writeMem(0xcdb5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3955, gbc.sp());
        EXPECT(0xcdb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb5));
        EXPECT(0x7f, gbc.readMem(0xcdb6));
        // CB 7F 000A
        gbc.setState(0x930c, 0x4f21, 0xbc40, 0x6df8, 0x4e61, 0xc8e, 0x0, 0x0);
        gbc.writeMem(0x930c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4f21, gbc.sp());
        EXPECT(0x930e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930c));
        EXPECT(0x7f, gbc.readMem(0x930d));
        // CB 7F 000B
        gbc.setState(0xeb25, 0x6e36, 0xef90, 0xe1a5, 0x962f, 0x87d4, 0x1, 0x1);
        gbc.writeMem(0xeb25, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6e36, gbc.sp());
        EXPECT(0xeb27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb25));
        EXPECT(0x7f, gbc.readMem(0xeb26));
        // CB 7F 000C
        gbc.setState(0xb3c, 0xc4d3, 0x70b0, 0x8016, 0x51f5, 0xa2b1, 0x1, 0x1);
        gbc.writeMem(0xb3c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc4d3, gbc.sp());
        EXPECT(0xb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 000F
        gbc.setState(0x27f2, 0xf80e, 0xcfc0, 0x2ab9, 0x5104, 0x11ff, 0x1, 0x0);
        gbc.writeMem(0x27f2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf80e, gbc.sp());
        EXPECT(0x27f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0010
        gbc.setState(0x2fd9, 0x9ebd, 0x2dc0, 0xc56a, 0x720c, 0x3519, 0x0, 0x1);
        gbc.writeMem(0x2fd9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9ebd, gbc.sp());
        EXPECT(0x2fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0011
        gbc.setState(0xe057, 0x6721, 0x31e0, 0xf25d, 0x5793, 0x630a, 0x0, 0x1);
        gbc.writeMem(0xe057, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6721, gbc.sp());
        EXPECT(0xe059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe057));
        EXPECT(0x7f, gbc.readMem(0xe058));
        // CB 7F 0012
        gbc.setState(0x21f4, 0x513c, 0x4300, 0xbd33, 0xb695, 0x2e96, 0x1, 0x1);
        gbc.writeMem(0x21f4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x513c, gbc.sp());
        EXPECT(0x21f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0013
        gbc.setState(0x2ecf, 0xb1ed, 0x1120, 0xde7c, 0x1b55, 0x572d, 0x0, 0x1);
        gbc.writeMem(0x2ecf, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb1ed, gbc.sp());
        EXPECT(0x2ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0014
        gbc.setState(0xd47, 0xe75a, 0x7c90, 0x1eb0, 0xae17, 0xee, 0x0, 0x1);
        gbc.writeMem(0xd47, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe75a, gbc.sp());
        EXPECT(0xd49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0016
        gbc.setState(0xe4ad, 0x20ae, 0x8ef0, 0x3909, 0x65f, 0x9c15, 0x1, 0x1);
        gbc.writeMem(0xe4ad, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x20ae, gbc.sp());
        EXPECT(0xe4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ad));
        EXPECT(0x7f, gbc.readMem(0xe4ae));
        // CB 7F 0017
        gbc.setState(0xa7e2, 0x1434, 0x3c90, 0x2e0, 0x95c0, 0xbfe6, 0x0, 0x1);
        gbc.writeMem(0xa7e2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1434, gbc.sp());
        EXPECT(0xa7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e2));
        EXPECT(0x7f, gbc.readMem(0xa7e3));
        // CB 7F 0018
        gbc.setState(0x605c, 0xff34, 0xbb70, 0x3e33, 0x5e0d, 0xb3f8, 0x0, 0x0);
        gbc.writeMem(0x605c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xff34, gbc.sp());
        EXPECT(0x605e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0019
        gbc.setState(0x57f, 0xfcda, 0x7d90, 0x7863, 0xe93b, 0xbbbc, 0x0, 0x0);
        gbc.writeMem(0x57f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfcda, gbc.sp());
        EXPECT(0x581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 001A
        gbc.setState(0x2c4f, 0x65f9, 0x6680, 0x7b8f, 0x8a10, 0x5401, 0x0, 0x0);
        gbc.writeMem(0x2c4f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x65f9, gbc.sp());
        EXPECT(0x2c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 001C
        gbc.setState(0x315d, 0x44f7, 0xd250, 0xdbe3, 0x73ab, 0x59e4, 0x1, 0x1);
        gbc.writeMem(0x315d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x44f7, gbc.sp());
        EXPECT(0x315f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 001D
        gbc.setState(0xc2d2, 0x557b, 0x6150, 0xeba9, 0x85bb, 0x7677, 0x1, 0x1);
        gbc.writeMem(0xc2d2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x557b, gbc.sp());
        EXPECT(0xc2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d2));
        EXPECT(0x7f, gbc.readMem(0xc2d3));
        // CB 7F 001E
        gbc.setState(0x1973, 0xd22e, 0x5ea0, 0x30c1, 0x3d53, 0x8961, 0x1, 0x1);
        gbc.writeMem(0x1973, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd22e, gbc.sp());
        EXPECT(0x1975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 001F
        gbc.setState(0xc867, 0x6d59, 0x3970, 0x2cd2, 0x8936, 0xfa0, 0x1, 0x0);
        gbc.writeMem(0xc867, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6d59, gbc.sp());
        EXPECT(0xc869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc867));
        EXPECT(0x7f, gbc.readMem(0xc868));
        // CB 7F 0020
        gbc.setState(0x8e83, 0xa702, 0x5320, 0x2aee, 0xe781, 0x766, 0x1, 0x1);
        gbc.writeMem(0x8e83, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa702, gbc.sp());
        EXPECT(0x8e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e83));
        EXPECT(0x7f, gbc.readMem(0x8e84));
        // CB 7F 0021
        gbc.setState(0x9e3, 0xa6dd, 0x3030, 0xdbb9, 0x2e3a, 0x2e03, 0x1, 0x0);
        gbc.writeMem(0x9e3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa6dd, gbc.sp());
        EXPECT(0x9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0022
        gbc.setState(0xb943, 0x2a2, 0xf210, 0x8279, 0x6a94, 0x7256, 0x1, 0x1);
        gbc.writeMem(0xb943, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2a2, gbc.sp());
        EXPECT(0xb945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb943));
        EXPECT(0x7f, gbc.readMem(0xb944));
        // CB 7F 0023
        gbc.setState(0x71b6, 0x6f4a, 0xa2f0, 0xdb8c, 0xcf77, 0x9fa, 0x0, 0x0);
        gbc.writeMem(0x71b6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6f4a, gbc.sp());
        EXPECT(0x71b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0024
        gbc.setState(0x3cef, 0x4225, 0xdfa0, 0x48a3, 0xc108, 0xd693, 0x1, 0x0);
        gbc.writeMem(0x3cef, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4225, gbc.sp());
        EXPECT(0x3cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0025
        gbc.setState(0x1a34, 0x4eed, 0xa280, 0x3d9d, 0x7b6f, 0xaa8e, 0x0, 0x0);
        gbc.writeMem(0x1a34, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4eed, gbc.sp());
        EXPECT(0x1a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0026
        gbc.setState(0xef8f, 0x3208, 0xd800, 0xfc8a, 0xd1c3, 0x8fda, 0x1, 0x1);
        gbc.writeMem(0xef8f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3208, gbc.sp());
        EXPECT(0xef91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8f));
        EXPECT(0x7f, gbc.readMem(0xef90));
        // CB 7F 0027
        gbc.setState(0x3675, 0x9c53, 0x9ff0, 0xdad8, 0xdd70, 0xa08, 0x0, 0x0);
        gbc.writeMem(0x3675, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9c53, gbc.sp());
        EXPECT(0x3677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0028
        gbc.setState(0x1b97, 0x7297, 0x3f60, 0x9c12, 0x186b, 0x42a1, 0x1, 0x1);
        gbc.writeMem(0x1b97, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7297, gbc.sp());
        EXPECT(0x1b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0029
        gbc.setState(0x4512, 0xcac2, 0xb310, 0x397, 0xb598, 0x1f72, 0x0, 0x1);
        gbc.writeMem(0x4512, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcac2, gbc.sp());
        EXPECT(0x4514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 002A
        gbc.setState(0xce02, 0x3542, 0xf50, 0xcba1, 0xf5a1, 0xf15, 0x1, 0x0);
        gbc.writeMem(0xce02, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3542, gbc.sp());
        EXPECT(0xce04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce02));
        EXPECT(0x7f, gbc.readMem(0xce03));
        // CB 7F 002B
        gbc.setState(0x291, 0x760b, 0x7110, 0x94ab, 0x1a30, 0x83ec, 0x0, 0x0);
        gbc.writeMem(0x291, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x760b, gbc.sp());
        EXPECT(0x293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 002C
        gbc.setState(0xe19f, 0x7864, 0xe100, 0x1305, 0xcae8, 0x9fa5, 0x0, 0x1);
        gbc.writeMem(0xe19f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7864, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19f));
        EXPECT(0x7f, gbc.readMem(0xe1a0));
        // CB 7F 002D
        gbc.setState(0xa49d, 0xe40, 0xc360, 0xc6f1, 0xddc9, 0x4913, 0x0, 0x1);
        gbc.writeMem(0xa49d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe40, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49d));
        EXPECT(0x7f, gbc.readMem(0xa49e));
        // CB 7F 002E
        gbc.setState(0x32, 0xc440, 0xe800, 0x34b5, 0xdbca, 0xe7a4, 0x1, 0x1);
        gbc.writeMem(0x32, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc440, gbc.sp());
        EXPECT(0x34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 002F
        gbc.setState(0x7192, 0x3ae5, 0x1390, 0x8b7e, 0x84fc, 0x96a3, 0x1, 0x1);
        gbc.writeMem(0x7192, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3ae5, gbc.sp());
        EXPECT(0x7194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0030
        gbc.setState(0x55f8, 0x14e0, 0x6a20, 0x48c9, 0x64d9, 0x2912, 0x0, 0x1);
        gbc.writeMem(0x55f8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x14e0, gbc.sp());
        EXPECT(0x55fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0031
        gbc.setState(0xeb2b, 0xf519, 0xa9d0, 0x62ed, 0x2c90, 0x918b, 0x1, 0x0);
        gbc.writeMem(0xeb2b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf519, gbc.sp());
        EXPECT(0xeb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2b));
        EXPECT(0x7f, gbc.readMem(0xeb2c));
        // CB 7F 0032
        gbc.setState(0x228, 0x9f56, 0xcfc0, 0x6f9f, 0xba8a, 0xe3b2, 0x1, 0x1);
        gbc.writeMem(0x228, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9f56, gbc.sp());
        EXPECT(0x22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0033
        gbc.setState(0x4bc9, 0x38b2, 0x52a0, 0xb895, 0xb135, 0xb98a, 0x0, 0x1);
        gbc.writeMem(0x4bc9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x38b2, gbc.sp());
        EXPECT(0x4bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0034
        gbc.setState(0x8b52, 0x9518, 0x6dd0, 0x36e1, 0x6ce, 0xb591, 0x1, 0x0);
        gbc.writeMem(0x8b52, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9518, gbc.sp());
        EXPECT(0x8b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b52));
        EXPECT(0x7f, gbc.readMem(0x8b53));
        // CB 7F 0035
        gbc.setState(0xee2d, 0xa61b, 0xc050, 0xbee3, 0x8d04, 0x8363, 0x0, 0x0);
        gbc.writeMem(0xee2d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa61b, gbc.sp());
        EXPECT(0xee2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2d));
        EXPECT(0x7f, gbc.readMem(0xee2e));
        // CB 7F 0036
        gbc.setState(0xc9d7, 0xf5c9, 0x39d0, 0xfe39, 0x56fe, 0x38ba, 0x0, 0x0);
        gbc.writeMem(0xc9d7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf5c9, gbc.sp());
        EXPECT(0xc9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d7));
        EXPECT(0x7f, gbc.readMem(0xc9d8));
        // CB 7F 0037
        gbc.setState(0x7e49, 0xce6e, 0xaa70, 0x947d, 0x30f7, 0xc966, 0x0, 0x0);
        gbc.writeMem(0x7e49, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xce6e, gbc.sp());
        EXPECT(0x7e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0038
        gbc.setState(0xab6, 0x5129, 0xa7d0, 0x81e5, 0x919a, 0x17b0, 0x1, 0x0);
        gbc.writeMem(0xab6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5129, gbc.sp());
        EXPECT(0xab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0039
        gbc.setState(0xec81, 0x9487, 0xe3d0, 0xcfa5, 0xb4cd, 0xfe5d, 0x0, 0x1);
        gbc.writeMem(0xec81, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9487, gbc.sp());
        EXPECT(0xec83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec81));
        EXPECT(0x7f, gbc.readMem(0xec82));
        // CB 7F 003A
        gbc.setState(0x5407, 0x63bf, 0xf640, 0xc16f, 0x1d9e, 0x28db, 0x0, 0x0);
        gbc.writeMem(0x5407, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x63bf, gbc.sp());
        EXPECT(0x5409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 003B
        gbc.setState(0x10fc, 0x8a94, 0x1b80, 0x471a, 0x2acd, 0x9a86, 0x1, 0x0);
        gbc.writeMem(0x10fc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8a94, gbc.sp());
        EXPECT(0x10fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 003C
        gbc.setState(0x97e0, 0x6d0c, 0x3a10, 0xdcdd, 0xdbd5, 0x30c8, 0x0, 0x0);
        gbc.writeMem(0x97e0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6d0c, gbc.sp());
        EXPECT(0x97e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e0));
        EXPECT(0x7f, gbc.readMem(0x97e1));
        // CB 7F 003D
        gbc.setState(0x4516, 0xf517, 0xab50, 0x2be, 0xcf81, 0x6252, 0x1, 0x0);
        gbc.writeMem(0x4516, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf517, gbc.sp());
        EXPECT(0x4518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 003E
        gbc.setState(0x4a72, 0x7464, 0x8200, 0x6248, 0xf583, 0xd132, 0x1, 0x1);
        gbc.writeMem(0x4a72, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7464, gbc.sp());
        EXPECT(0x4a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 003F
        gbc.setState(0x61ac, 0x86d2, 0x14b0, 0x1490, 0x4b, 0xba8a, 0x1, 0x0);
        gbc.writeMem(0x61ac, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x86d2, gbc.sp());
        EXPECT(0x61ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0040
        gbc.setState(0xea8e, 0xbabc, 0x8f60, 0x4e5b, 0x252f, 0x1a7e, 0x0, 0x0);
        gbc.writeMem(0xea8e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbabc, gbc.sp());
        EXPECT(0xea90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8e));
        EXPECT(0x7f, gbc.readMem(0xea8f));
        // CB 7F 0041
        gbc.setState(0x67e3, 0x569f, 0xe4c0, 0x275d, 0x3863, 0xc93e, 0x0, 0x1);
        gbc.writeMem(0x67e3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x569f, gbc.sp());
        EXPECT(0x67e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0042
        gbc.setState(0x6b13, 0x18a7, 0x2ba0, 0x2e4f, 0xd95, 0x59fa, 0x0, 0x1);
        gbc.writeMem(0x6b13, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x18a7, gbc.sp());
        EXPECT(0x6b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0043
        gbc.setState(0xf20, 0xa22b, 0x5780, 0x1114, 0x2e42, 0x9f5a, 0x0, 0x1);
        gbc.writeMem(0xf20, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa22b, gbc.sp());
        EXPECT(0xf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0044
        gbc.setState(0x679, 0xe6a3, 0xa2f0, 0x2fc3, 0x2e39, 0xe6d3, 0x1, 0x1);
        gbc.writeMem(0x679, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe6a3, gbc.sp());
        EXPECT(0x67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0046
        gbc.setState(0x4953, 0x91c6, 0x2e90, 0xc52, 0xfc9b, 0x45db, 0x0, 0x1);
        gbc.writeMem(0x4953, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0x4955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0047
        gbc.setState(0xad18, 0x7a67, 0x7d90, 0xef07, 0x694d, 0x1cb6, 0x0, 0x0);
        gbc.writeMem(0xad18, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7a67, gbc.sp());
        EXPECT(0xad1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad18));
        EXPECT(0x7f, gbc.readMem(0xad19));
        // CB 7F 0048
        gbc.setState(0x1b9e, 0x9cdc, 0xf270, 0x7fa4, 0x2b24, 0xfb2, 0x1, 0x1);
        gbc.writeMem(0x1b9e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9cdc, gbc.sp());
        EXPECT(0x1ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0049
        gbc.setState(0xc280, 0x71e4, 0xf8b0, 0xd9eb, 0xcd0a, 0x52af, 0x1, 0x0);
        gbc.writeMem(0xc280, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x71e4, gbc.sp());
        EXPECT(0xc282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc280));
        EXPECT(0x7f, gbc.readMem(0xc281));
        // CB 7F 004A
        gbc.setState(0x4456, 0x3392, 0xc670, 0xe378, 0x581e, 0x696d, 0x1, 0x1);
        gbc.writeMem(0x4456, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3392, gbc.sp());
        EXPECT(0x4458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 004B
        gbc.setState(0x297c, 0xcb81, 0x88e0, 0x73ed, 0x5513, 0x45a4, 0x1, 0x0);
        gbc.writeMem(0x297c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcb81, gbc.sp());
        EXPECT(0x297e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 004C
        gbc.setState(0xed81, 0x6b3, 0x5920, 0x5068, 0xf52b, 0xd1d7, 0x0, 0x0);
        gbc.writeMem(0xed81, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6b3, gbc.sp());
        EXPECT(0xed83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed81));
        EXPECT(0x7f, gbc.readMem(0xed82));
        // CB 7F 004D
        gbc.setState(0x64f9, 0x5762, 0xf7f0, 0xeffe, 0x72ba, 0x6711, 0x0, 0x1);
        gbc.writeMem(0x64f9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5762, gbc.sp());
        EXPECT(0x64fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 004E
        gbc.setState(0x855c, 0x4016, 0xc010, 0xeb72, 0x4319, 0x8efc, 0x0, 0x0);
        gbc.writeMem(0x855c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4016, gbc.sp());
        EXPECT(0x855e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855c));
        EXPECT(0x7f, gbc.readMem(0x855d));
        // CB 7F 004F
        gbc.setState(0x6883, 0xc7b2, 0x53b0, 0x2f65, 0x1d20, 0xfb53, 0x0, 0x1);
        gbc.writeMem(0x6883, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc7b2, gbc.sp());
        EXPECT(0x6885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0050
        gbc.setState(0x3a27, 0x7e60, 0x2a10, 0x8bd3, 0x2952, 0x4516, 0x1, 0x1);
        gbc.writeMem(0x3a27, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7e60, gbc.sp());
        EXPECT(0x3a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0051
        gbc.setState(0xb0f4, 0xf118, 0x73d0, 0x95b4, 0xe30b, 0xfddd, 0x1, 0x1);
        gbc.writeMem(0xb0f4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf118, gbc.sp());
        EXPECT(0xb0f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f4));
        EXPECT(0x7f, gbc.readMem(0xb0f5));
        // CB 7F 0052
        gbc.setState(0xadc8, 0x72c9, 0x44d0, 0x6c4f, 0xf14d, 0x6bf6, 0x1, 0x1);
        gbc.writeMem(0xadc8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x72c9, gbc.sp());
        EXPECT(0xadca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc8));
        EXPECT(0x7f, gbc.readMem(0xadc9));
        // CB 7F 0053
        gbc.setState(0xe29d, 0x3fa7, 0x9870, 0x9c52, 0x386f, 0x8232, 0x0, 0x1);
        gbc.writeMem(0xe29d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3fa7, gbc.sp());
        EXPECT(0xe29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29d));
        EXPECT(0x7f, gbc.readMem(0xe29e));
        // CB 7F 0054
        gbc.setState(0xed9c, 0x5129, 0x4dd0, 0xe6eb, 0xe362, 0x9d0d, 0x0, 0x1);
        gbc.writeMem(0xed9c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5129, gbc.sp());
        EXPECT(0xed9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9c));
        EXPECT(0x7f, gbc.readMem(0xed9d));
        // CB 7F 0055
        gbc.setState(0xe156, 0xa562, 0x22c0, 0xd214, 0xba4, 0x71b0, 0x0, 0x0);
        gbc.writeMem(0xe156, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa562, gbc.sp());
        EXPECT(0xe158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe156));
        EXPECT(0x7f, gbc.readMem(0xe157));
        // CB 7F 0056
        gbc.setState(0x4545, 0x4d0, 0x74b0, 0x386a, 0x9ee6, 0x8104, 0x0, 0x0);
        gbc.writeMem(0x4545, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4d0, gbc.sp());
        EXPECT(0x4547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0057
        gbc.setState(0x7d7e, 0xee5e, 0xceb0, 0xe9ab, 0x98ae, 0x5e0f, 0x1, 0x1);
        gbc.writeMem(0x7d7e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xee5e, gbc.sp());
        EXPECT(0x7d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0058
        gbc.setState(0xa23d, 0x6788, 0x1770, 0xd862, 0x99d2, 0xf009, 0x0, 0x0);
        gbc.writeMem(0xa23d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6788, gbc.sp());
        EXPECT(0xa23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23d));
        EXPECT(0x7f, gbc.readMem(0xa23e));
        // CB 7F 0059
        gbc.setState(0x1aa8, 0xc3c3, 0x95b0, 0xbe17, 0xc9f2, 0x5970, 0x1, 0x1);
        gbc.writeMem(0x1aa8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc3c3, gbc.sp());
        EXPECT(0x1aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 005B
        gbc.setState(0x5996, 0xb05b, 0xd720, 0x3077, 0x6234, 0x82fa, 0x0, 0x1);
        gbc.writeMem(0x5996, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb05b, gbc.sp());
        EXPECT(0x5998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 005C
        gbc.setState(0x3837, 0x4b8d, 0xfce0, 0xc7ed, 0xca96, 0x319f, 0x1, 0x1);
        gbc.writeMem(0x3837, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4b8d, gbc.sp());
        EXPECT(0x3839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 005D
        gbc.setState(0x97bb, 0x133b, 0x67b0, 0xcfdc, 0x56c8, 0x5cda, 0x0, 0x0);
        gbc.writeMem(0x97bb, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x133b, gbc.sp());
        EXPECT(0x97bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bb));
        EXPECT(0x7f, gbc.readMem(0x97bc));
        // CB 7F 005E
        gbc.setState(0x4706, 0x9c26, 0xe6d0, 0xd8ab, 0x93b1, 0xefb9, 0x0, 0x1);
        gbc.writeMem(0x4706, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9c26, gbc.sp());
        EXPECT(0x4708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 005F
        gbc.setState(0xc0d7, 0x2ec3, 0x9140, 0x9bbb, 0x6800, 0xb405, 0x1, 0x0);
        gbc.writeMem(0xc0d7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2ec3, gbc.sp());
        EXPECT(0xc0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d7));
        EXPECT(0x7f, gbc.readMem(0xc0d8));
        // CB 7F 0060
        gbc.setState(0xbfc5, 0xd545, 0x2a30, 0xba8c, 0xe153, 0x1a8f, 0x1, 0x0);
        gbc.writeMem(0xbfc5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd545, gbc.sp());
        EXPECT(0xbfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc5));
        EXPECT(0x7f, gbc.readMem(0xbfc6));
        // CB 7F 0061
        gbc.setState(0xdc34, 0x781d, 0x2dc0, 0x654d, 0xe96d, 0x9ea4, 0x1, 0x0);
        gbc.writeMem(0xdc34, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x781d, gbc.sp());
        EXPECT(0xdc36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc34));
        EXPECT(0x7f, gbc.readMem(0xdc35));
        // CB 7F 0062
        gbc.setState(0x7aba, 0x7a2c, 0xf660, 0xb538, 0x6fff, 0x2a06, 0x0, 0x0);
        gbc.writeMem(0x7aba, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7a2c, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0063
        gbc.setState(0xa6cc, 0x10d5, 0x5310, 0x3202, 0x8971, 0x7801, 0x1, 0x1);
        gbc.writeMem(0xa6cc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x10d5, gbc.sp());
        EXPECT(0xa6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6cc));
        EXPECT(0x7f, gbc.readMem(0xa6cd));
        // CB 7F 0064
        gbc.setState(0x2bbf, 0x3d5b, 0xb4b0, 0x776d, 0xc3b2, 0x9d07, 0x1, 0x0);
        gbc.writeMem(0x2bbf, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3d5b, gbc.sp());
        EXPECT(0x2bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0065
        gbc.setState(0x540c, 0xa8fd, 0x9990, 0xc2d0, 0x4d42, 0x363d, 0x0, 0x1);
        gbc.writeMem(0x540c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa8fd, gbc.sp());
        EXPECT(0x540e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0066
        gbc.setState(0xcb61, 0x8187, 0xf1d0, 0xe5fa, 0x79c7, 0x58db, 0x1, 0x0);
        gbc.writeMem(0xcb61, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8187, gbc.sp());
        EXPECT(0xcb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb61));
        EXPECT(0x7f, gbc.readMem(0xcb62));
        // CB 7F 0067
        gbc.setState(0x871e, 0x46ed, 0x50, 0x78a1, 0x2dde, 0x395e, 0x0, 0x0);
        gbc.writeMem(0x871e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x46ed, gbc.sp());
        EXPECT(0x8720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871e));
        EXPECT(0x7f, gbc.readMem(0x871f));
        // CB 7F 0069
        gbc.setState(0xc54b, 0xf92f, 0x6280, 0xe62, 0xd5fa, 0xd4f4, 0x0, 0x0);
        gbc.writeMem(0xc54b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf92f, gbc.sp());
        EXPECT(0xc54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54b));
        EXPECT(0x7f, gbc.readMem(0xc54c));
        // CB 7F 006A
        gbc.setState(0x7ed3, 0x1cb0, 0x99b0, 0xc9c2, 0x153a, 0x5d97, 0x1, 0x0);
        gbc.writeMem(0x7ed3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1cb0, gbc.sp());
        EXPECT(0x7ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 006B
        gbc.setState(0x9dbb, 0x40c5, 0xe170, 0xf610, 0x923b, 0x8c57, 0x0, 0x1);
        gbc.writeMem(0x9dbb, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x40c5, gbc.sp());
        EXPECT(0x9dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbb));
        EXPECT(0x7f, gbc.readMem(0x9dbc));
        // CB 7F 006C
        gbc.setState(0x79f4, 0x79f4, 0x88b0, 0x5c0f, 0xfaff, 0x785a, 0x1, 0x0);
        gbc.writeMem(0x79f4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x79f4, gbc.sp());
        EXPECT(0x79f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 006D
        gbc.setState(0x1c96, 0x4344, 0x5820, 0x470a, 0x1e5c, 0x5b86, 0x1, 0x1);
        gbc.writeMem(0x1c96, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4344, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 006E
        gbc.setState(0xca67, 0x2af, 0x8fc0, 0x80a2, 0x81c9, 0x7bc5, 0x0, 0x0);
        gbc.writeMem(0xca67, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2af, gbc.sp());
        EXPECT(0xca69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca67));
        EXPECT(0x7f, gbc.readMem(0xca68));
        // CB 7F 006F
        gbc.setState(0x9568, 0x6f97, 0x1ee0, 0x8e9e, 0x54ba, 0x3071, 0x0, 0x1);
        gbc.writeMem(0x9568, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6f97, gbc.sp());
        EXPECT(0x956a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9568));
        EXPECT(0x7f, gbc.readMem(0x9569));
        // CB 7F 0070
        gbc.setState(0xab9f, 0xdfc1, 0x4640, 0x7bd0, 0x1847, 0x487f, 0x0, 0x0);
        gbc.writeMem(0xab9f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdfc1, gbc.sp());
        EXPECT(0xaba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9f));
        EXPECT(0x7f, gbc.readMem(0xaba0));
        // CB 7F 0071
        gbc.setState(0x14db, 0xb332, 0x3c60, 0xda20, 0x1461, 0x6ed2, 0x0, 0x1);
        gbc.writeMem(0x14db, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb332, gbc.sp());
        EXPECT(0x14dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0073
        gbc.setState(0x91fd, 0xe3f5, 0x9540, 0xb2fe, 0x4ff4, 0x3509, 0x1, 0x1);
        gbc.writeMem(0x91fd, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe3f5, gbc.sp());
        EXPECT(0x91ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fd));
        EXPECT(0x7f, gbc.readMem(0x91fe));
        // CB 7F 0074
        gbc.setState(0xc4fd, 0x9b9f, 0xd840, 0xf31b, 0x93fc, 0x4e12, 0x1, 0x1);
        gbc.writeMem(0xc4fd, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9b9f, gbc.sp());
        EXPECT(0xc4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fd));
        EXPECT(0x7f, gbc.readMem(0xc4fe));
        // CB 7F 0075
        gbc.setState(0x1942, 0x477a, 0x350, 0x97e5, 0x63b, 0xed7b, 0x1, 0x1);
        gbc.writeMem(0x1942, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x477a, gbc.sp());
        EXPECT(0x1944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0076
        gbc.setState(0x6389, 0x628e, 0xbe0, 0x951c, 0x4c0f, 0xd29e, 0x1, 0x0);
        gbc.writeMem(0x6389, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x628e, gbc.sp());
        EXPECT(0x638b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0077
        gbc.setState(0x97ce, 0x1fc8, 0x48a0, 0x2628, 0xef18, 0xe2c4, 0x0, 0x0);
        gbc.writeMem(0x97ce, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1fc8, gbc.sp());
        EXPECT(0x97d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ce));
        EXPECT(0x7f, gbc.readMem(0x97cf));
        // CB 7F 0078
        gbc.setState(0x754d, 0x1dca, 0x1eb0, 0xb5db, 0x48f, 0xa81e, 0x0, 0x1);
        gbc.writeMem(0x754d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1dca, gbc.sp());
        EXPECT(0x754f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0079
        gbc.setState(0x7a01, 0xe127, 0x4160, 0x3f3c, 0xe2c9, 0x5b8c, 0x0, 0x1);
        gbc.writeMem(0x7a01, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe127, gbc.sp());
        EXPECT(0x7a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 007A
        gbc.setState(0x4757, 0x2410, 0xa2b0, 0x374b, 0x7a7a, 0xfda2, 0x0, 0x1);
        gbc.writeMem(0x4757, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2410, gbc.sp());
        EXPECT(0x4759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 007B
        gbc.setState(0x2aa3, 0x7f0a, 0x8a20, 0x386d, 0x858d, 0xe915, 0x0, 0x0);
        gbc.writeMem(0x2aa3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7f0a, gbc.sp());
        EXPECT(0x2aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 007C
        gbc.setState(0x41ac, 0x85a1, 0x78c0, 0x268e, 0x6c8b, 0xe7fa, 0x0, 0x1);
        gbc.writeMem(0x41ac, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x85a1, gbc.sp());
        EXPECT(0x41ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 007D
        gbc.setState(0x74a4, 0xecb3, 0xd2b0, 0x7c22, 0x184e, 0xf9df, 0x1, 0x1);
        gbc.writeMem(0x74a4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xecb3, gbc.sp());
        EXPECT(0x74a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 007E
        gbc.setState(0x4c0e, 0xef2d, 0xe6d0, 0xe7d6, 0x7149, 0x180, 0x1, 0x1);
        gbc.writeMem(0x4c0e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xef2d, gbc.sp());
        EXPECT(0x4c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 007F
        gbc.setState(0x97f1, 0x8a7d, 0xe090, 0xd98c, 0x47e, 0x7fbc, 0x0, 0x1);
        gbc.writeMem(0x97f1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8a7d, gbc.sp());
        EXPECT(0x97f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f1));
        EXPECT(0x7f, gbc.readMem(0x97f2));
        // CB 7F 0080
        gbc.setState(0x918b, 0xee35, 0x3150, 0x36c9, 0x1909, 0xd2bf, 0x0, 0x1);
        gbc.writeMem(0x918b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xee35, gbc.sp());
        EXPECT(0x918d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918b));
        EXPECT(0x7f, gbc.readMem(0x918c));
        // CB 7F 0081
        gbc.setState(0x4e52, 0xb799, 0x2860, 0xb112, 0xe35e, 0xdc1c, 0x1, 0x0);
        gbc.writeMem(0x4e52, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb799, gbc.sp());
        EXPECT(0x4e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0082
        gbc.setState(0x5a7e, 0xbd60, 0xc770, 0x226c, 0x7bc0, 0x9e29, 0x1, 0x0);
        gbc.writeMem(0x5a7e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbd60, gbc.sp());
        EXPECT(0x5a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0083
        gbc.setState(0xcb13, 0xa300, 0x8f90, 0x6f23, 0xab94, 0xa5d8, 0x0, 0x1);
        gbc.writeMem(0xcb13, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa300, gbc.sp());
        EXPECT(0xcb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb13));
        EXPECT(0x7f, gbc.readMem(0xcb14));
        // CB 7F 0084
        gbc.setState(0xad71, 0x88b, 0x6550, 0x7923, 0xb866, 0x94c9, 0x1, 0x0);
        gbc.writeMem(0xad71, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x88b, gbc.sp());
        EXPECT(0xad73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad71));
        EXPECT(0x7f, gbc.readMem(0xad72));
        // CB 7F 0085
        gbc.setState(0xdbe6, 0xc375, 0x8f70, 0x30a0, 0x977c, 0xa441, 0x0, 0x1);
        gbc.writeMem(0xdbe6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc375, gbc.sp());
        EXPECT(0xdbe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe6));
        EXPECT(0x7f, gbc.readMem(0xdbe7));
        // CB 7F 0086
        gbc.setState(0x3e3, 0x8e8e, 0x8010, 0x3476, 0x873d, 0x9dcc, 0x0, 0x1);
        gbc.writeMem(0x3e3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8e8e, gbc.sp());
        EXPECT(0x3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0087
        gbc.setState(0xc4ba, 0x451d, 0xbdc0, 0x706c, 0x8de2, 0xc0bf, 0x1, 0x1);
        gbc.writeMem(0xc4ba, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x451d, gbc.sp());
        EXPECT(0xc4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ba));
        EXPECT(0x7f, gbc.readMem(0xc4bb));
        // CB 7F 0088
        gbc.setState(0xbcd5, 0xd647, 0xd0d0, 0x67a1, 0xec73, 0x92cd, 0x1, 0x0);
        gbc.writeMem(0xbcd5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd647, gbc.sp());
        EXPECT(0xbcd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd5));
        EXPECT(0x7f, gbc.readMem(0xbcd6));
        // CB 7F 0089
        gbc.setState(0x8339, 0x5c7a, 0xb7b0, 0x58a9, 0xbf61, 0x7f9c, 0x1, 0x1);
        gbc.writeMem(0x8339, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5c7a, gbc.sp());
        EXPECT(0x833b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8339));
        EXPECT(0x7f, gbc.readMem(0x833a));
        // CB 7F 008A
        gbc.setState(0x1349, 0x486d, 0x78d0, 0xade8, 0xf30e, 0x88b3, 0x0, 0x1);
        gbc.writeMem(0x1349, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x486d, gbc.sp());
        EXPECT(0x134b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 008B
        gbc.setState(0xaa19, 0xf8e1, 0xc790, 0xf61a, 0x5adf, 0x784b, 0x1, 0x1);
        gbc.writeMem(0xaa19, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf8e1, gbc.sp());
        EXPECT(0xaa1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa19));
        EXPECT(0x7f, gbc.readMem(0xaa1a));
        // CB 7F 008C
        gbc.setState(0x2843, 0xaa02, 0x4f10, 0x8dcf, 0xbdc6, 0xc97f, 0x1, 0x0);
        gbc.writeMem(0x2843, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaa02, gbc.sp());
        EXPECT(0x2845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 008D
        gbc.setState(0x7863, 0x17c3, 0x1670, 0xf1ab, 0x60ea, 0xbdc0, 0x0, 0x0);
        gbc.writeMem(0x7863, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x17c3, gbc.sp());
        EXPECT(0x7865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 008E
        gbc.setState(0xa291, 0xd24c, 0xef40, 0x108b, 0x62f2, 0xe214, 0x1, 0x0);
        gbc.writeMem(0xa291, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd24c, gbc.sp());
        EXPECT(0xa293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa291));
        EXPECT(0x7f, gbc.readMem(0xa292));
        // CB 7F 008F
        gbc.setState(0xbdc6, 0x1565, 0xe9c0, 0xb88, 0xb922, 0xf07f, 0x0, 0x0);
        gbc.writeMem(0xbdc6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1565, gbc.sp());
        EXPECT(0xbdc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc6));
        EXPECT(0x7f, gbc.readMem(0xbdc7));
        // CB 7F 0090
        gbc.setState(0x7f1f, 0x6d2a, 0x62e0, 0xabea, 0xb7d7, 0x6715, 0x1, 0x1);
        gbc.writeMem(0x7f1f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6d2a, gbc.sp());
        EXPECT(0x7f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0091
        gbc.setState(0x586b, 0x663e, 0xd1a0, 0x336a, 0x300c, 0x28fb, 0x0, 0x1);
        gbc.writeMem(0x586b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x663e, gbc.sp());
        EXPECT(0x586d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0092
        gbc.setState(0x4b1c, 0x298b, 0x4ed0, 0x96a4, 0xfd36, 0x9dd3, 0x0, 0x0);
        gbc.writeMem(0x4b1c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x298b, gbc.sp());
        EXPECT(0x4b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0093
        gbc.setState(0xcb28, 0x34d6, 0x93e0, 0xc675, 0xfda, 0x85b7, 0x0, 0x1);
        gbc.writeMem(0xcb28, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x34d6, gbc.sp());
        EXPECT(0xcb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb28));
        EXPECT(0x7f, gbc.readMem(0xcb29));
        // CB 7F 0094
        gbc.setState(0x724c, 0x42b7, 0x73e0, 0xfa65, 0x5067, 0xf846, 0x1, 0x1);
        gbc.writeMem(0x724c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x42b7, gbc.sp());
        EXPECT(0x724e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0095
        gbc.setState(0x12cc, 0x3b99, 0xf800, 0xd2d0, 0x8bcf, 0x6082, 0x0, 0x1);
        gbc.writeMem(0x12cc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3b99, gbc.sp());
        EXPECT(0x12ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0096
        gbc.setState(0x402d, 0x2c92, 0x2970, 0x4362, 0x88c8, 0xcbd, 0x1, 0x0);
        gbc.writeMem(0x402d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2c92, gbc.sp());
        EXPECT(0x402f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0097
        gbc.setState(0x866f, 0x3f05, 0x9b0, 0x985e, 0x1f4e, 0x7f54, 0x1, 0x1);
        gbc.writeMem(0x866f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3f05, gbc.sp());
        EXPECT(0x8671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866f));
        EXPECT(0x7f, gbc.readMem(0x8670));
        // CB 7F 0098
        gbc.setState(0x6b07, 0x6791, 0x1c90, 0xcf30, 0x37ca, 0xbbfb, 0x1, 0x0);
        gbc.writeMem(0x6b07, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6791, gbc.sp());
        EXPECT(0x6b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0099
        gbc.setState(0x8190, 0x5661, 0xaa10, 0x9802, 0x22d, 0xda1a, 0x0, 0x0);
        gbc.writeMem(0x8190, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5661, gbc.sp());
        EXPECT(0x8192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8190));
        EXPECT(0x7f, gbc.readMem(0x8191));
        // CB 7F 009A
        gbc.setState(0x9e9b, 0xdac9, 0x110, 0x5771, 0xadc0, 0x6dd9, 0x0, 0x0);
        gbc.writeMem(0x9e9b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdac9, gbc.sp());
        EXPECT(0x9e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9b));
        EXPECT(0x7f, gbc.readMem(0x9e9c));
        // CB 7F 009B
        gbc.setState(0xc491, 0x1e80, 0x2c70, 0xb0af, 0x9c72, 0x1c1, 0x0, 0x1);
        gbc.writeMem(0xc491, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1e80, gbc.sp());
        EXPECT(0xc493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc491));
        EXPECT(0x7f, gbc.readMem(0xc492));
        // CB 7F 009C
        gbc.setState(0xc822, 0xbb74, 0xb160, 0xcf14, 0x310c, 0x2e57, 0x1, 0x0);
        gbc.writeMem(0xc822, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbb74, gbc.sp());
        EXPECT(0xc824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc822));
        EXPECT(0x7f, gbc.readMem(0xc823));
        // CB 7F 009D
        gbc.setState(0x75e2, 0x2300, 0x4490, 0x1f41, 0xdf93, 0x797, 0x0, 0x1);
        gbc.writeMem(0x75e2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2300, gbc.sp());
        EXPECT(0x75e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 009E
        gbc.setState(0x60b0, 0x1d0, 0x2d60, 0x9cb, 0x1d87, 0xdf40, 0x1, 0x0);
        gbc.writeMem(0x60b0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1d0, gbc.sp());
        EXPECT(0x60b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 009F
        gbc.setState(0x3711, 0xd28a, 0xa200, 0xab11, 0x73b7, 0xbac, 0x0, 0x1);
        gbc.writeMem(0x3711, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd28a, gbc.sp());
        EXPECT(0x3713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00A0
        gbc.setState(0x329c, 0x64b5, 0xb2f0, 0xed43, 0x475a, 0x85bc, 0x1, 0x1);
        gbc.writeMem(0x329c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x64b5, gbc.sp());
        EXPECT(0x329e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00A1
        gbc.setState(0x45e, 0x5262, 0xaca0, 0x5d84, 0xdcac, 0xb074, 0x1, 0x1);
        gbc.writeMem(0x45e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5262, gbc.sp());
        EXPECT(0x460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00A3
        gbc.setState(0x1ed, 0xc855, 0x4950, 0xc245, 0x536a, 0xac4c, 0x1, 0x1);
        gbc.writeMem(0x1ed, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc855, gbc.sp());
        EXPECT(0x1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00A4
        gbc.setState(0xe090, 0x8061, 0xca00, 0xf892, 0xbc56, 0xa305, 0x0, 0x0);
        gbc.writeMem(0xe090, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8061, gbc.sp());
        EXPECT(0xe092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe090));
        EXPECT(0x7f, gbc.readMem(0xe091));
        // CB 7F 00A5
        gbc.setState(0xe2, 0xf96c, 0x3b0, 0xc10a, 0x9a70, 0x811d, 0x1, 0x0);
        gbc.writeMem(0xe2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf96c, gbc.sp());
        EXPECT(0xe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00A6
        gbc.setState(0x8c48, 0x1f94, 0x7210, 0xd7f2, 0xd9d2, 0x44c9, 0x0, 0x1);
        gbc.writeMem(0x8c48, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1f94, gbc.sp());
        EXPECT(0x8c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c48));
        EXPECT(0x7f, gbc.readMem(0x8c49));
        // CB 7F 00A7
        gbc.setState(0x85ca, 0xbe6a, 0x14e0, 0x5f74, 0xa580, 0x6ff7, 0x1, 0x1);
        gbc.writeMem(0x85ca, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbe6a, gbc.sp());
        EXPECT(0x85cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ca));
        EXPECT(0x7f, gbc.readMem(0x85cb));
        // CB 7F 00A8
        gbc.setState(0x4866, 0xd1bc, 0x9740, 0x11d7, 0x6026, 0xd23d, 0x0, 0x0);
        gbc.writeMem(0x4866, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd1bc, gbc.sp());
        EXPECT(0x4868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00A9
        gbc.setState(0x6ac6, 0x7203, 0xd7a0, 0x6338, 0xca12, 0x4f80, 0x0, 0x0);
        gbc.writeMem(0x6ac6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7203, gbc.sp());
        EXPECT(0x6ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00AA
        gbc.setState(0xc1cc, 0x6415, 0xdff0, 0xce75, 0x23f5, 0xfcb0, 0x0, 0x0);
        gbc.writeMem(0xc1cc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6415, gbc.sp());
        EXPECT(0xc1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1cc));
        EXPECT(0x7f, gbc.readMem(0xc1cd));
        // CB 7F 00AB
        gbc.setState(0xc8f0, 0x3690, 0x1d60, 0xd752, 0xa0b8, 0x8ad5, 0x0, 0x0);
        gbc.writeMem(0xc8f0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3690, gbc.sp());
        EXPECT(0xc8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f0));
        EXPECT(0x7f, gbc.readMem(0xc8f1));
        // CB 7F 00AC
        gbc.setState(0x7965, 0x4467, 0x3e80, 0x1511, 0x6051, 0xb5dd, 0x1, 0x1);
        gbc.writeMem(0x7965, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4467, gbc.sp());
        EXPECT(0x7967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00AD
        gbc.setState(0x7655, 0x177, 0xf710, 0xbced, 0x3d86, 0x1296, 0x0, 0x0);
        gbc.writeMem(0x7655, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x177, gbc.sp());
        EXPECT(0x7657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00AE
        gbc.setState(0x1462, 0x986d, 0xb640, 0xaf46, 0x2582, 0x5392, 0x0, 0x0);
        gbc.writeMem(0x1462, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x986d, gbc.sp());
        EXPECT(0x1464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00AF
        gbc.setState(0xec68, 0x9609, 0x300, 0x9220, 0x62e7, 0x2a16, 0x0, 0x0);
        gbc.writeMem(0xec68, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9609, gbc.sp());
        EXPECT(0xec6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec68));
        EXPECT(0x7f, gbc.readMem(0xec69));
        // CB 7F 00B0
        gbc.setState(0x2db4, 0x6b4, 0x1cb0, 0xe957, 0x107e, 0x64d5, 0x1, 0x0);
        gbc.writeMem(0x2db4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6b4, gbc.sp());
        EXPECT(0x2db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00B1
        gbc.setState(0x9dec, 0xa02a, 0xb6a0, 0x8a4a, 0xc053, 0xbb58, 0x1, 0x0);
        gbc.writeMem(0x9dec, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa02a, gbc.sp());
        EXPECT(0x9dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dec));
        EXPECT(0x7f, gbc.readMem(0x9ded));
        // CB 7F 00B2
        gbc.setState(0x333e, 0xf29a, 0x48e0, 0x1dff, 0xfa5c, 0xfa08, 0x0, 0x0);
        gbc.writeMem(0x333e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf29a, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00B3
        gbc.setState(0x2dd2, 0x3153, 0xa480, 0xfcef, 0xbd21, 0x9f67, 0x0, 0x0);
        gbc.writeMem(0x2dd2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3153, gbc.sp());
        EXPECT(0x2dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00B4
        gbc.setState(0xa475, 0x6766, 0xa220, 0x8236, 0x7600, 0x4146, 0x0, 0x1);
        gbc.writeMem(0xa475, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6766, gbc.sp());
        EXPECT(0xa477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa475));
        EXPECT(0x7f, gbc.readMem(0xa476));
        // CB 7F 00B5
        gbc.setState(0xa2db, 0x82cb, 0x9440, 0x16d0, 0xd79e, 0xca66, 0x0, 0x1);
        gbc.writeMem(0xa2db, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x82cb, gbc.sp());
        EXPECT(0xa2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2db));
        EXPECT(0x7f, gbc.readMem(0xa2dc));
        // CB 7F 00B6
        gbc.setState(0x4310, 0x95dc, 0x5640, 0xd701, 0x12e7, 0xa100, 0x0, 0x0);
        gbc.writeMem(0x4310, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x95dc, gbc.sp());
        EXPECT(0x4312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00B7
        gbc.setState(0xc380, 0x982c, 0xb480, 0x7822, 0xbec5, 0x6c27, 0x1, 0x1);
        gbc.writeMem(0xc380, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x982c, gbc.sp());
        EXPECT(0xc382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc380));
        EXPECT(0x7f, gbc.readMem(0xc381));
        // CB 7F 00B8
        gbc.setState(0x6b01, 0x61ed, 0x8e0, 0x4493, 0x7fc1, 0xeb69, 0x1, 0x1);
        gbc.writeMem(0x6b01, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x61ed, gbc.sp());
        EXPECT(0x6b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00B9
        gbc.setState(0x32a, 0xef6a, 0xe5e0, 0x84b8, 0x55ad, 0xc961, 0x1, 0x0);
        gbc.writeMem(0x32a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xef6a, gbc.sp());
        EXPECT(0x32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00BA
        gbc.setState(0xe01b, 0x502a, 0x9ae0, 0xed31, 0xdde5, 0xd111, 0x1, 0x1);
        gbc.writeMem(0xe01b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x502a, gbc.sp());
        EXPECT(0xe01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01b));
        EXPECT(0x7f, gbc.readMem(0xe01c));
        // CB 7F 00BB
        gbc.setState(0x9695, 0xaef9, 0x7d80, 0x6402, 0x3a67, 0xfb46, 0x1, 0x1);
        gbc.writeMem(0x9695, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaef9, gbc.sp());
        EXPECT(0x9697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9695));
        EXPECT(0x7f, gbc.readMem(0x9696));
        // CB 7F 00BD
        gbc.setState(0xde3, 0x2a2, 0x9b10, 0x65d6, 0x1d4b, 0x73fc, 0x0, 0x1);
        gbc.writeMem(0xde3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2a2, gbc.sp());
        EXPECT(0xde5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00BE
        gbc.setState(0x1c2e, 0x7f60, 0x95f0, 0xf672, 0xb2b7, 0x5a8b, 0x0, 0x1);
        gbc.writeMem(0x1c2e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7f60, gbc.sp());
        EXPECT(0x1c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00BF
        gbc.setState(0xd81e, 0xc812, 0x3ca0, 0xa178, 0x4440, 0xb186, 0x1, 0x0);
        gbc.writeMem(0xd81e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc812, gbc.sp());
        EXPECT(0xd820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81e));
        EXPECT(0x7f, gbc.readMem(0xd81f));
        // CB 7F 00C0
        gbc.setState(0x2ac0, 0xb9c1, 0xd0a0, 0x20a7, 0x8530, 0xb916, 0x0, 0x0);
        gbc.writeMem(0x2ac0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb9c1, gbc.sp());
        EXPECT(0x2ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00C1
        gbc.setState(0x8278, 0xd1e9, 0x4fc0, 0x333f, 0x1739, 0x3652, 0x1, 0x0);
        gbc.writeMem(0x8278, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd1e9, gbc.sp());
        EXPECT(0x827a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8278));
        EXPECT(0x7f, gbc.readMem(0x8279));
        // CB 7F 00C2
        gbc.setState(0x2379, 0x7ca1, 0x1a80, 0xe87, 0x8643, 0x6bc4, 0x1, 0x0);
        gbc.writeMem(0x2379, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7ca1, gbc.sp());
        EXPECT(0x237b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00C3
        gbc.setState(0x351f, 0x5b31, 0x4970, 0x2fb, 0x62d4, 0x6050, 0x0, 0x1);
        gbc.writeMem(0x351f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5b31, gbc.sp());
        EXPECT(0x3521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00C4
        gbc.setState(0x86d2, 0xff09, 0xa790, 0x411f, 0xef97, 0x893c, 0x1, 0x1);
        gbc.writeMem(0x86d2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xff09, gbc.sp());
        EXPECT(0x86d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d2));
        EXPECT(0x7f, gbc.readMem(0x86d3));
        // CB 7F 00C6
        gbc.setState(0x2628, 0xfbc9, 0x23c0, 0xcd52, 0xba34, 0xed7c, 0x0, 0x0);
        gbc.writeMem(0x2628, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfbc9, gbc.sp());
        EXPECT(0x262a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00C7
        gbc.setState(0x6ee1, 0x2599, 0xae0, 0x8d93, 0xb466, 0x98ba, 0x0, 0x0);
        gbc.writeMem(0x6ee1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2599, gbc.sp());
        EXPECT(0x6ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00C8
        gbc.setState(0x4737, 0x5b09, 0x8230, 0xd0e0, 0x30d9, 0x2f9d, 0x1, 0x1);
        gbc.writeMem(0x4737, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00C9
        gbc.setState(0xe073, 0xe036, 0x9830, 0xcf, 0xe88, 0x8c0c, 0x0, 0x1);
        gbc.writeMem(0xe073, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe036, gbc.sp());
        EXPECT(0xe075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe073));
        EXPECT(0x7f, gbc.readMem(0xe074));
        // CB 7F 00CA
        gbc.setState(0xd907, 0x47ac, 0x48b0, 0x47c0, 0x7888, 0xb934, 0x1, 0x0);
        gbc.writeMem(0xd907, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x47ac, gbc.sp());
        EXPECT(0xd909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd907));
        EXPECT(0x7f, gbc.readMem(0xd908));
        // CB 7F 00CB
        gbc.setState(0x4737, 0xceae, 0x4380, 0x3471, 0xdba5, 0x19e1, 0x0, 0x1);
        gbc.writeMem(0x4737, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xceae, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00CC
        gbc.setState(0x2400, 0xe03b, 0x5cb0, 0x65f2, 0x76bb, 0x6510, 0x1, 0x0);
        gbc.writeMem(0x2400, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe03b, gbc.sp());
        EXPECT(0x2402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00CD
        gbc.setState(0xe224, 0x9754, 0x3a10, 0xdec0, 0x91d0, 0xcb1e, 0x1, 0x1);
        gbc.writeMem(0xe224, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9754, gbc.sp());
        EXPECT(0xe226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe224));
        EXPECT(0x7f, gbc.readMem(0xe225));
        // CB 7F 00CE
        gbc.setState(0x3b67, 0xbf5f, 0x8140, 0x7f15, 0x2aec, 0xb2a7, 0x0, 0x1);
        gbc.writeMem(0x3b67, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbf5f, gbc.sp());
        EXPECT(0x3b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00CF
        gbc.setState(0xa4f7, 0x62ef, 0xd860, 0x8fdd, 0xfe1, 0xbe97, 0x1, 0x1);
        gbc.writeMem(0xa4f7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x62ef, gbc.sp());
        EXPECT(0xa4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f7));
        EXPECT(0x7f, gbc.readMem(0xa4f8));
        // CB 7F 00D0
        gbc.setState(0x2614, 0x77b5, 0xfd20, 0xeeb0, 0x2928, 0xa244, 0x1, 0x0);
        gbc.writeMem(0x2614, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x77b5, gbc.sp());
        EXPECT(0x2616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00D1
        gbc.setState(0xa019, 0x7793, 0xa1f0, 0xd393, 0xaadd, 0xa663, 0x1, 0x0);
        gbc.writeMem(0xa019, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7793, gbc.sp());
        EXPECT(0xa01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa019));
        EXPECT(0x7f, gbc.readMem(0xa01a));
        // CB 7F 00D2
        gbc.setState(0x2e31, 0x91cb, 0xe010, 0x7e29, 0xdaf7, 0x9c52, 0x0, 0x1);
        gbc.writeMem(0x2e31, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x91cb, gbc.sp());
        EXPECT(0x2e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00D3
        gbc.setState(0xbc9, 0xb58e, 0x5e70, 0xe55d, 0x345b, 0x3a39, 0x0, 0x1);
        gbc.writeMem(0xbc9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb58e, gbc.sp());
        EXPECT(0xbcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00D4
        gbc.setState(0x3717, 0xe758, 0x4fd0, 0x5b1a, 0xb6a6, 0x8ea7, 0x0, 0x1);
        gbc.writeMem(0x3717, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe758, gbc.sp());
        EXPECT(0x3719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00D5
        gbc.setState(0x7f90, 0x9bd1, 0xfa10, 0x8c3d, 0xc6f0, 0x7511, 0x1, 0x0);
        gbc.writeMem(0x7f90, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9bd1, gbc.sp());
        EXPECT(0x7f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00D6
        gbc.setState(0x5fd5, 0x95b3, 0xe700, 0xbb2f, 0x552a, 0x9229, 0x1, 0x0);
        gbc.writeMem(0x5fd5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x95b3, gbc.sp());
        EXPECT(0x5fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00D7
        gbc.setState(0xa2c7, 0x131a, 0x5650, 0x50a3, 0xb69f, 0x2a78, 0x1, 0x0);
        gbc.writeMem(0xa2c7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x131a, gbc.sp());
        EXPECT(0xa2c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c7));
        EXPECT(0x7f, gbc.readMem(0xa2c8));
        // CB 7F 00D8
        gbc.setState(0x8a8b, 0xba84, 0x3400, 0x1488, 0x63bc, 0x44a0, 0x1, 0x0);
        gbc.writeMem(0x8a8b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xba84, gbc.sp());
        EXPECT(0x8a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8b));
        EXPECT(0x7f, gbc.readMem(0x8a8c));
        // CB 7F 00D9
        gbc.setState(0x8733, 0x96c9, 0x74c0, 0xe8ce, 0x12c, 0xdceb, 0x1, 0x1);
        gbc.writeMem(0x8733, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x96c9, gbc.sp());
        EXPECT(0x8735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8733));
        EXPECT(0x7f, gbc.readMem(0x8734));
        // CB 7F 00DA
        gbc.setState(0xa5a6, 0x4675, 0x3cc0, 0x9ce0, 0x5659, 0x474f, 0x1, 0x0);
        gbc.writeMem(0xa5a6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4675, gbc.sp());
        EXPECT(0xa5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a6));
        EXPECT(0x7f, gbc.readMem(0xa5a7));
        // CB 7F 00DB
        gbc.setState(0x5f1f, 0xf3fb, 0xdaa0, 0x96d0, 0x4fc1, 0x9787, 0x0, 0x1);
        gbc.writeMem(0x5f1f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf3fb, gbc.sp());
        EXPECT(0x5f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00DC
        gbc.setState(0xaa4f, 0x3fdf, 0x1aa0, 0x7cd7, 0x6e60, 0xe617, 0x1, 0x0);
        gbc.writeMem(0xaa4f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3fdf, gbc.sp());
        EXPECT(0xaa51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa4f));
        EXPECT(0x7f, gbc.readMem(0xaa50));
        // CB 7F 00DD
        gbc.setState(0x5f24, 0x732c, 0xb960, 0x36c9, 0x92ac, 0xdb55, 0x0, 0x1);
        gbc.writeMem(0x5f24, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x732c, gbc.sp());
        EXPECT(0x5f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00DE
        gbc.setState(0x2f59, 0x45ae, 0xc0a0, 0xbe6d, 0xd64b, 0x1403, 0x1, 0x0);
        gbc.writeMem(0x2f59, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x45ae, gbc.sp());
        EXPECT(0x2f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00DF
        gbc.setState(0x7e69, 0x6a54, 0xcec0, 0x889f, 0x7048, 0x357e, 0x1, 0x0);
        gbc.writeMem(0x7e69, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6a54, gbc.sp());
        EXPECT(0x7e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00E0
        gbc.setState(0xcb5f, 0x9011, 0x9050, 0xff15, 0x4fcd, 0xd9f5, 0x0, 0x1);
        gbc.writeMem(0xcb5f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9011, gbc.sp());
        EXPECT(0xcb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5f));
        EXPECT(0x7f, gbc.readMem(0xcb60));
        // CB 7F 00E1
        gbc.setState(0xba47, 0xbcd4, 0x3940, 0x5363, 0x20c7, 0x24fa, 0x1, 0x1);
        gbc.writeMem(0xba47, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbcd4, gbc.sp());
        EXPECT(0xba49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba47));
        EXPECT(0x7f, gbc.readMem(0xba48));
        // CB 7F 00E2
        gbc.setState(0xcc1d, 0xac30, 0x22a0, 0x30de, 0x4b9d, 0xd86, 0x0, 0x0);
        gbc.writeMem(0xcc1d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xac30, gbc.sp());
        EXPECT(0xcc1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1d));
        EXPECT(0x7f, gbc.readMem(0xcc1e));
        // CB 7F 00E3
        gbc.setState(0x44bd, 0xec22, 0x5a0, 0xe8c, 0x5884, 0x1f, 0x1, 0x1);
        gbc.writeMem(0x44bd, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xec22, gbc.sp());
        EXPECT(0x44bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00E4
        gbc.setState(0x1586, 0x31c6, 0x4a50, 0x2e0c, 0xdc1e, 0x2a5d, 0x0, 0x0);
        gbc.writeMem(0x1586, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x31c6, gbc.sp());
        EXPECT(0x1588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00E5
        gbc.setState(0x8758, 0xc178, 0xd200, 0xd3de, 0x8be2, 0x8184, 0x0, 0x1);
        gbc.writeMem(0x8758, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc178, gbc.sp());
        EXPECT(0x875a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8758));
        EXPECT(0x7f, gbc.readMem(0x8759));
        // CB 7F 00E6
        gbc.setState(0x5809, 0x3625, 0xa430, 0xa45e, 0x7bce, 0xfdac, 0x0, 0x0);
        gbc.writeMem(0x5809, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3625, gbc.sp());
        EXPECT(0x580b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00E7
        gbc.setState(0xc17d, 0xb5a3, 0xc520, 0xa9f7, 0xce8e, 0x1ddc, 0x1, 0x0);
        gbc.writeMem(0xc17d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb5a3, gbc.sp());
        EXPECT(0xc17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17d));
        EXPECT(0x7f, gbc.readMem(0xc17e));
        // CB 7F 00E8
        gbc.setState(0x4fa8, 0x1ae8, 0xc280, 0x3ec7, 0xa20c, 0x1e2b, 0x0, 0x0);
        gbc.writeMem(0x4fa8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1ae8, gbc.sp());
        EXPECT(0x4faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00E9
        gbc.setState(0x614b, 0xe75, 0x2b50, 0x93a1, 0x560c, 0x37f1, 0x0, 0x1);
        gbc.writeMem(0x614b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe75, gbc.sp());
        EXPECT(0x614d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00EA
        gbc.setState(0x4b05, 0xd94b, 0x3bb0, 0x906c, 0xc5d3, 0x21b5, 0x1, 0x1);
        gbc.writeMem(0x4b05, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd94b, gbc.sp());
        EXPECT(0x4b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00EB
        gbc.setState(0xa973, 0x660b, 0x12a0, 0x410b, 0x3c30, 0x5d9d, 0x1, 0x0);
        gbc.writeMem(0xa973, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x660b, gbc.sp());
        EXPECT(0xa975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa973));
        EXPECT(0x7f, gbc.readMem(0xa974));
        // CB 7F 00EC
        gbc.setState(0xea70, 0xc6fa, 0xa3f0, 0x30cd, 0xc75f, 0x8ca9, 0x0, 0x1);
        gbc.writeMem(0xea70, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc6fa, gbc.sp());
        EXPECT(0xea72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea70));
        EXPECT(0x7f, gbc.readMem(0xea71));
        // CB 7F 00ED
        gbc.setState(0xecdc, 0x19f5, 0xb40, 0x3b48, 0x6650, 0x27e3, 0x1, 0x0);
        gbc.writeMem(0xecdc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x19f5, gbc.sp());
        EXPECT(0xecde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecdc));
        EXPECT(0x7f, gbc.readMem(0xecdd));
        // CB 7F 00EE
        gbc.setState(0x6d0, 0xd5ae, 0x4e10, 0xf351, 0x322e, 0xa5dd, 0x1, 0x0);
        gbc.writeMem(0x6d0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd5ae, gbc.sp());
        EXPECT(0x6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00EF
        gbc.setState(0x433c, 0xfe52, 0x9640, 0xdde3, 0x9287, 0xeddc, 0x0, 0x0);
        gbc.writeMem(0x433c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfe52, gbc.sp());
        EXPECT(0x433e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00F0
        gbc.setState(0xee17, 0xb583, 0xce50, 0x6c75, 0xb4f2, 0x78c4, 0x1, 0x1);
        gbc.writeMem(0xee17, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb583, gbc.sp());
        EXPECT(0xee19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee17));
        EXPECT(0x7f, gbc.readMem(0xee18));
        // CB 7F 00F1
        gbc.setState(0x185e, 0xe47d, 0xa850, 0xfc8c, 0xeeb1, 0xa714, 0x1, 0x1);
        gbc.writeMem(0x185e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe47d, gbc.sp());
        EXPECT(0x1860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00F2
        gbc.setState(0x5ace, 0xacda, 0x5560, 0xaf2b, 0xb014, 0x196c, 0x0, 0x0);
        gbc.writeMem(0x5ace, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xacda, gbc.sp());
        EXPECT(0x5ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00F3
        gbc.setState(0xa207, 0x16b3, 0x1ca0, 0x4508, 0x2a8b, 0x7dc1, 0x1, 0x1);
        gbc.writeMem(0xa207, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x16b3, gbc.sp());
        EXPECT(0xa209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa207));
        EXPECT(0x7f, gbc.readMem(0xa208));
        // CB 7F 00F4
        gbc.setState(0x9de, 0xf101, 0x6070, 0x6013, 0xe02b, 0xe4c4, 0x1, 0x1);
        gbc.writeMem(0x9de, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf101, gbc.sp());
        EXPECT(0x9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00F6
        gbc.setState(0x82c0, 0x4d5b, 0xc7c0, 0xf830, 0x6f0c, 0x7717, 0x0, 0x0);
        gbc.writeMem(0x82c0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4d5b, gbc.sp());
        EXPECT(0x82c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c0));
        EXPECT(0x7f, gbc.readMem(0x82c1));
        // CB 7F 00F7
        gbc.setState(0xef18, 0x7a50, 0x98c0, 0x2bf1, 0x369e, 0x395d, 0x0, 0x1);
        gbc.writeMem(0xef18, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7a50, gbc.sp());
        EXPECT(0xef1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef18));
        EXPECT(0x7f, gbc.readMem(0xef19));
        // CB 7F 00F8
        gbc.setState(0x7957, 0xbccf, 0x910, 0xf838, 0x2201, 0x2ead, 0x1, 0x1);
        gbc.writeMem(0x7957, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbccf, gbc.sp());
        EXPECT(0x7959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 00F9
        gbc.setState(0xad14, 0x46f9, 0x1310, 0x9b25, 0xae90, 0x7c22, 0x1, 0x0);
        gbc.writeMem(0xad14, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x46f9, gbc.sp());
        EXPECT(0xad16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad14));
        EXPECT(0x7f, gbc.readMem(0xad15));
        // CB 7F 00FA
        gbc.setState(0xeed4, 0x16d4, 0x3920, 0xb634, 0x130e, 0xedae, 0x0, 0x0);
        gbc.writeMem(0xeed4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x16d4, gbc.sp());
        EXPECT(0xeed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed4));
        EXPECT(0x7f, gbc.readMem(0xeed5));
        // CB 7F 00FB
        gbc.setState(0x7b8c, 0xa69d, 0x2080, 0xdf70, 0xad25, 0x7040, 0x1, 0x0);
        gbc.writeMem(0x7b8c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa69d, gbc.sp());
        EXPECT(0x7b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00FC
        gbc.setState(0x9570, 0xec58, 0x9090, 0x391d, 0x217e, 0x540d, 0x1, 0x0);
        gbc.writeMem(0x9570, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xec58, gbc.sp());
        EXPECT(0x9572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9570));
        EXPECT(0x7f, gbc.readMem(0x9571));
        // CB 7F 00FD
        gbc.setState(0x45c8, 0x599b, 0x3680, 0xae02, 0x64b6, 0x6579, 0x0, 0x1);
        gbc.writeMem(0x45c8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x599b, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 00FE
        gbc.setState(0xb1fe, 0x1656, 0xa3c0, 0x929e, 0x9124, 0x8104, 0x1, 0x1);
        gbc.writeMem(0xb1fe, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1656, gbc.sp());
        EXPECT(0xb200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1fe));
        EXPECT(0x7f, gbc.readMem(0xb1ff));
        // CB 7F 00FF
        gbc.setState(0xed25, 0x5299, 0xf3d0, 0x5b1e, 0xd430, 0xc25, 0x0, 0x1);
        gbc.writeMem(0xed25, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5299, gbc.sp());
        EXPECT(0xed27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed25));
        EXPECT(0x7f, gbc.readMem(0xed26));
        // CB 7F 0100
        gbc.setState(0x2f30, 0xaa9e, 0x8b20, 0xff8f, 0xfb16, 0xd485, 0x0, 0x1);
        gbc.writeMem(0x2f30, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0x2f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0101
        gbc.setState(0xe888, 0xd63c, 0xba10, 0xe788, 0x1954, 0x4372, 0x1, 0x0);
        gbc.writeMem(0xe888, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd63c, gbc.sp());
        EXPECT(0xe88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe888));
        EXPECT(0x7f, gbc.readMem(0xe889));
        // CB 7F 0103
        gbc.setState(0x6d00, 0xcd1, 0x5d20, 0xe168, 0xbd91, 0x5d0f, 0x0, 0x0);
        gbc.writeMem(0x6d00, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcd1, gbc.sp());
        EXPECT(0x6d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0104
        gbc.setState(0x9e9c, 0x21f8, 0x3d20, 0x6efe, 0xcd04, 0x8316, 0x1, 0x0);
        gbc.writeMem(0x9e9c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x21f8, gbc.sp());
        EXPECT(0x9e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9c));
        EXPECT(0x7f, gbc.readMem(0x9e9d));
        // CB 7F 0105
        gbc.setState(0x44ad, 0x5b90, 0x2f10, 0xd44b, 0x978b, 0xe4de, 0x1, 0x0);
        gbc.writeMem(0x44ad, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5b90, gbc.sp());
        EXPECT(0x44af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0107
        gbc.setState(0x991e, 0xb44f, 0x8e30, 0x705f, 0xfc5a, 0xb740, 0x1, 0x1);
        gbc.writeMem(0x991e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb44f, gbc.sp());
        EXPECT(0x9920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991e));
        EXPECT(0x7f, gbc.readMem(0x991f));
        // CB 7F 0109
        gbc.setState(0xcd12, 0x2c9f, 0x1740, 0x968a, 0x3fc9, 0xaefb, 0x0, 0x0);
        gbc.writeMem(0xcd12, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2c9f, gbc.sp());
        EXPECT(0xcd14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd12));
        EXPECT(0x7f, gbc.readMem(0xcd13));
        // CB 7F 010A
        gbc.setState(0xe98e, 0xe81, 0xfdd0, 0xf935, 0xba8a, 0x79a8, 0x1, 0x1);
        gbc.writeMem(0xe98e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe81, gbc.sp());
        EXPECT(0xe990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98e));
        EXPECT(0x7f, gbc.readMem(0xe98f));
        // CB 7F 010B
        gbc.setState(0xea04, 0x2543, 0xda00, 0xc361, 0x793c, 0x7920, 0x1, 0x0);
        gbc.writeMem(0xea04, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2543, gbc.sp());
        EXPECT(0xea06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea04));
        EXPECT(0x7f, gbc.readMem(0xea05));
        // CB 7F 010C
        gbc.setState(0xa574, 0x17c7, 0x4ea0, 0x3346, 0xdd82, 0xd265, 0x0, 0x0);
        gbc.writeMem(0xa574, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x17c7, gbc.sp());
        EXPECT(0xa576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa574));
        EXPECT(0x7f, gbc.readMem(0xa575));
        // CB 7F 010D
        gbc.setState(0x3a9b, 0x1d6, 0x4ae0, 0x1aa8, 0x1d5f, 0x3332, 0x1, 0x1);
        gbc.writeMem(0x3a9b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1d6, gbc.sp());
        EXPECT(0x3a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 010E
        gbc.setState(0x8cc4, 0xdad7, 0xeb80, 0xb797, 0xa31e, 0x9694, 0x1, 0x0);
        gbc.writeMem(0x8cc4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdad7, gbc.sp());
        EXPECT(0x8cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc4));
        EXPECT(0x7f, gbc.readMem(0x8cc5));
        // CB 7F 010F
        gbc.setState(0xcfb5, 0x2c16, 0xf2b0, 0xa5b3, 0x2a9, 0x5c32, 0x1, 0x0);
        gbc.writeMem(0xcfb5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2c16, gbc.sp());
        EXPECT(0xcfb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb5));
        EXPECT(0x7f, gbc.readMem(0xcfb6));
        // CB 7F 0110
        gbc.setState(0x3ac4, 0x50a1, 0x6e30, 0x105e, 0xd559, 0x7c83, 0x1, 0x0);
        gbc.writeMem(0x3ac4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x50a1, gbc.sp());
        EXPECT(0x3ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0111
        gbc.setState(0xc845, 0xb448, 0x3ac0, 0xffa4, 0xf045, 0x4be2, 0x1, 0x1);
        gbc.writeMem(0xc845, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb448, gbc.sp());
        EXPECT(0xc847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc845));
        EXPECT(0x7f, gbc.readMem(0xc846));
        // CB 7F 0113
        gbc.setState(0x8940, 0x2eac, 0x8e00, 0x92bd, 0x2ccd, 0x1e56, 0x0, 0x0);
        gbc.writeMem(0x8940, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2eac, gbc.sp());
        EXPECT(0x8942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8940));
        EXPECT(0x7f, gbc.readMem(0x8941));
        // CB 7F 0114
        gbc.setState(0xc507, 0xb917, 0x6700, 0x5ad3, 0x2aa6, 0xc9da, 0x1, 0x0);
        gbc.writeMem(0xc507, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb917, gbc.sp());
        EXPECT(0xc509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc507));
        EXPECT(0x7f, gbc.readMem(0xc508));
        // CB 7F 0115
        gbc.setState(0xc6ad, 0xd232, 0x5330, 0x63b, 0x81ef, 0x8af9, 0x0, 0x0);
        gbc.writeMem(0xc6ad, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd232, gbc.sp());
        EXPECT(0xc6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ad));
        EXPECT(0x7f, gbc.readMem(0xc6ae));
        // CB 7F 0116
        gbc.setState(0x91f9, 0xebc0, 0x750, 0x2814, 0xf8be, 0x642d, 0x1, 0x0);
        gbc.writeMem(0x91f9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xebc0, gbc.sp());
        EXPECT(0x91fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f9));
        EXPECT(0x7f, gbc.readMem(0x91fa));
        // CB 7F 0117
        gbc.setState(0xe857, 0xc129, 0x4540, 0xc443, 0x79b4, 0xf52b, 0x1, 0x1);
        gbc.writeMem(0xe857, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc129, gbc.sp());
        EXPECT(0xe859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe857));
        EXPECT(0x7f, gbc.readMem(0xe858));
        // CB 7F 0119
        gbc.setState(0x2caf, 0x4e3f, 0x6990, 0x8d96, 0xd27, 0x83e0, 0x1, 0x1);
        gbc.writeMem(0x2caf, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4e3f, gbc.sp());
        EXPECT(0x2cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 011A
        gbc.setState(0x7f0c, 0xf22f, 0xbc60, 0x4b7f, 0xd713, 0xe9ce, 0x0, 0x1);
        gbc.writeMem(0x7f0c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf22f, gbc.sp());
        EXPECT(0x7f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 011B
        gbc.setState(0x345e, 0xfaa8, 0x4090, 0x3133, 0x4dc1, 0x7469, 0x0, 0x1);
        gbc.writeMem(0x345e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfaa8, gbc.sp());
        EXPECT(0x3460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 011C
        gbc.setState(0xaf18, 0x5107, 0x9df0, 0x6458, 0xd659, 0xe4ae, 0x1, 0x0);
        gbc.writeMem(0xaf18, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5107, gbc.sp());
        EXPECT(0xaf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf18));
        EXPECT(0x7f, gbc.readMem(0xaf19));
        // CB 7F 011D
        gbc.setState(0xa7e6, 0xc36b, 0x2950, 0x8d8d, 0x8ce5, 0x6131, 0x1, 0x1);
        gbc.writeMem(0xa7e6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc36b, gbc.sp());
        EXPECT(0xa7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e6));
        EXPECT(0x7f, gbc.readMem(0xa7e7));
        // CB 7F 011E
        gbc.setState(0xcf6a, 0x4b36, 0x2de0, 0x5f58, 0x91ad, 0x9f0f, 0x1, 0x0);
        gbc.writeMem(0xcf6a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4b36, gbc.sp());
        EXPECT(0xcf6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6a));
        EXPECT(0x7f, gbc.readMem(0xcf6b));
        // CB 7F 011F
        gbc.setState(0x7956, 0xd9c7, 0xfb80, 0x22c6, 0x8c71, 0xf45d, 0x0, 0x0);
        gbc.writeMem(0x7956, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd9c7, gbc.sp());
        EXPECT(0x7958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0120
        gbc.setState(0x87f1, 0xa286, 0x5590, 0x1844, 0x9a3b, 0x8ad1, 0x1, 0x1);
        gbc.writeMem(0x87f1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa286, gbc.sp());
        EXPECT(0x87f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f1));
        EXPECT(0x7f, gbc.readMem(0x87f2));
        // CB 7F 0121
        gbc.setState(0x2005, 0x57b1, 0x9ea0, 0x6823, 0x8776, 0xe67d, 0x1, 0x0);
        gbc.writeMem(0x2005, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x57b1, gbc.sp());
        EXPECT(0x2007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0122
        gbc.setState(0x51a, 0x6d66, 0xf900, 0x67ce, 0x9e17, 0xd7ad, 0x0, 0x0);
        gbc.writeMem(0x51a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6d66, gbc.sp());
        EXPECT(0x51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0123
        gbc.setState(0x3d26, 0x4027, 0x7080, 0xcd2e, 0xaae0, 0x7318, 0x1, 0x1);
        gbc.writeMem(0x3d26, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4027, gbc.sp());
        EXPECT(0x3d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0124
        gbc.setState(0x306, 0x4a99, 0x8c70, 0x92b4, 0x8e28, 0x54ad, 0x1, 0x1);
        gbc.writeMem(0x306, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4a99, gbc.sp());
        EXPECT(0x308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0125
        gbc.setState(0x5f91, 0xfb3c, 0x2a10, 0xc727, 0x8442, 0xb379, 0x0, 0x0);
        gbc.writeMem(0x5f91, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfb3c, gbc.sp());
        EXPECT(0x5f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0126
        gbc.setState(0xa6f6, 0x2779, 0xe830, 0x330b, 0xf489, 0x2725, 0x1, 0x1);
        gbc.writeMem(0xa6f6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2779, gbc.sp());
        EXPECT(0xa6f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f6));
        EXPECT(0x7f, gbc.readMem(0xa6f7));
        // CB 7F 0127
        gbc.setState(0x9585, 0xe616, 0xdee0, 0x32be, 0x790b, 0x6796, 0x0, 0x0);
        gbc.writeMem(0x9585, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe616, gbc.sp());
        EXPECT(0x9587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9585));
        EXPECT(0x7f, gbc.readMem(0x9586));
        // CB 7F 0128
        gbc.setState(0x3fad, 0xe2d9, 0xf9c0, 0xb4b9, 0xc2a1, 0x7ce1, 0x0, 0x0);
        gbc.writeMem(0x3fad, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe2d9, gbc.sp());
        EXPECT(0x3faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0129
        gbc.setState(0x9095, 0x4d68, 0x3930, 0xb0f6, 0xa3ae, 0xd29b, 0x1, 0x0);
        gbc.writeMem(0x9095, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4d68, gbc.sp());
        EXPECT(0x9097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9095));
        EXPECT(0x7f, gbc.readMem(0x9096));
        // CB 7F 012A
        gbc.setState(0x1a0d, 0xabad, 0x4280, 0xf670, 0x94e8, 0x2d57, 0x1, 0x1);
        gbc.writeMem(0x1a0d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xabad, gbc.sp());
        EXPECT(0x1a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 012B
        gbc.setState(0x7490, 0xff43, 0xd50, 0xdb75, 0x82bc, 0xeb49, 0x0, 0x1);
        gbc.writeMem(0x7490, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xff43, gbc.sp());
        EXPECT(0x7492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 012C
        gbc.setState(0x684d, 0x8a5d, 0xbb60, 0xf1d4, 0x7a03, 0xddc8, 0x1, 0x0);
        gbc.writeMem(0x684d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8a5d, gbc.sp());
        EXPECT(0x684f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 012D
        gbc.setState(0x3686, 0x3635, 0xd580, 0xa994, 0x5387, 0x3746, 0x1, 0x1);
        gbc.writeMem(0x3686, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3635, gbc.sp());
        EXPECT(0x3688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 012E
        gbc.setState(0x1e22, 0x5afc, 0xc2c0, 0x5c6b, 0x2289, 0x560, 0x0, 0x0);
        gbc.writeMem(0x1e22, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5afc, gbc.sp());
        EXPECT(0x1e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 012F
        gbc.setState(0xd063, 0xa4f, 0xcd0, 0xbf8d, 0xfe18, 0x7982, 0x0, 0x0);
        gbc.writeMem(0xd063, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa4f, gbc.sp());
        EXPECT(0xd065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd063));
        EXPECT(0x7f, gbc.readMem(0xd064));
        // CB 7F 0130
        gbc.setState(0x4fef, 0xfe5b, 0x4500, 0xbc8c, 0x56df, 0x7b68, 0x0, 0x1);
        gbc.writeMem(0x4fef, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfe5b, gbc.sp());
        EXPECT(0x4ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0131
        gbc.setState(0x1aed, 0x74ea, 0x5e40, 0x8c2, 0xcf64, 0x1a06, 0x0, 0x0);
        gbc.writeMem(0x1aed, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x74ea, gbc.sp());
        EXPECT(0x1aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0132
        gbc.setState(0x285a, 0x9779, 0x90f0, 0x3770, 0x9a98, 0x3c08, 0x0, 0x0);
        gbc.writeMem(0x285a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9779, gbc.sp());
        EXPECT(0x285c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0133
        gbc.setState(0x22a, 0x83f1, 0x7270, 0xab21, 0x3be5, 0x3728, 0x1, 0x1);
        gbc.writeMem(0x22a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x83f1, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0134
        gbc.setState(0x8b3f, 0xdd8a, 0xcad0, 0x9c94, 0xccad, 0x4f72, 0x0, 0x0);
        gbc.writeMem(0x8b3f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdd8a, gbc.sp());
        EXPECT(0x8b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3f));
        EXPECT(0x7f, gbc.readMem(0x8b40));
        // CB 7F 0135
        gbc.setState(0xe0f8, 0x8c7e, 0x2810, 0x5af9, 0xff86, 0x1840, 0x1, 0x0);
        gbc.writeMem(0xe0f8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8c7e, gbc.sp());
        EXPECT(0xe0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f8));
        EXPECT(0x7f, gbc.readMem(0xe0f9));
        // CB 7F 0136
        gbc.setState(0x394a, 0x1a7c, 0xad70, 0xf60a, 0x15aa, 0x6eaf, 0x1, 0x1);
        gbc.writeMem(0x394a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1a7c, gbc.sp());
        EXPECT(0x394c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0137
        gbc.setState(0x8c71, 0xea85, 0x4ac0, 0x7328, 0x3de4, 0xd2e4, 0x1, 0x0);
        gbc.writeMem(0x8c71, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xea85, gbc.sp());
        EXPECT(0x8c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c71));
        EXPECT(0x7f, gbc.readMem(0x8c72));
        // CB 7F 0138
        gbc.setState(0xba52, 0xb9f5, 0xcbd0, 0x5618, 0xd8cd, 0x1ce0, 0x0, 0x1);
        gbc.writeMem(0xba52, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb9f5, gbc.sp());
        EXPECT(0xba54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba52));
        EXPECT(0x7f, gbc.readMem(0xba53));
        // CB 7F 0139
        gbc.setState(0xe55d, 0xda62, 0x7720, 0x8aea, 0xa4ea, 0xf91, 0x1, 0x1);
        gbc.writeMem(0xe55d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xda62, gbc.sp());
        EXPECT(0xe55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55d));
        EXPECT(0x7f, gbc.readMem(0xe55e));
        // CB 7F 013A
        gbc.setState(0xb8fd, 0xa3d1, 0xcf40, 0xeddb, 0x4a5c, 0xa75d, 0x0, 0x1);
        gbc.writeMem(0xb8fd, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa3d1, gbc.sp());
        EXPECT(0xb8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fd));
        EXPECT(0x7f, gbc.readMem(0xb8fe));
        // CB 7F 013B
        gbc.setState(0x611f, 0x3d6b, 0xab0, 0xc95e, 0x6e6f, 0x7fe5, 0x1, 0x0);
        gbc.writeMem(0x611f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3d6b, gbc.sp());
        EXPECT(0x6121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 013D
        gbc.setState(0x8f2e, 0x1a74, 0x2880, 0xe708, 0x2b7d, 0x91be, 0x1, 0x0);
        gbc.writeMem(0x8f2e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1a74, gbc.sp());
        EXPECT(0x8f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2e));
        EXPECT(0x7f, gbc.readMem(0x8f2f));
        // CB 7F 013F
        gbc.setState(0xe7d3, 0x81b0, 0x3d00, 0xd562, 0xa76, 0xbc9f, 0x1, 0x1);
        gbc.writeMem(0xe7d3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x81b0, gbc.sp());
        EXPECT(0xe7d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d3));
        EXPECT(0x7f, gbc.readMem(0xe7d4));
        // CB 7F 0140
        gbc.setState(0xb43a, 0xfc6a, 0xda30, 0x239, 0x1690, 0x9b2e, 0x1, 0x0);
        gbc.writeMem(0xb43a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfc6a, gbc.sp());
        EXPECT(0xb43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb43a));
        EXPECT(0x7f, gbc.readMem(0xb43b));
        // CB 7F 0141
        gbc.setState(0x743f, 0xa405, 0xe6d0, 0x524e, 0x1031, 0x4c5c, 0x0, 0x0);
        gbc.writeMem(0x743f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa405, gbc.sp());
        EXPECT(0x7441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0142
        gbc.setState(0x6c30, 0x3a07, 0x340, 0x309b, 0x7607, 0x1c6c, 0x0, 0x0);
        gbc.writeMem(0x6c30, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3a07, gbc.sp());
        EXPECT(0x6c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0143
        gbc.setState(0xd723, 0x88e0, 0x6ab0, 0x6d89, 0xcc04, 0x32df, 0x1, 0x1);
        gbc.writeMem(0xd723, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x88e0, gbc.sp());
        EXPECT(0xd725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd723));
        EXPECT(0x7f, gbc.readMem(0xd724));
        // CB 7F 0144
        gbc.setState(0x3b8a, 0x5a85, 0x3b80, 0x197f, 0xbd65, 0x7edc, 0x0, 0x1);
        gbc.writeMem(0x3b8a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5a85, gbc.sp());
        EXPECT(0x3b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0145
        gbc.setState(0xe550, 0xac9f, 0xcf0, 0x74ff, 0x5add, 0x4485, 0x1, 0x0);
        gbc.writeMem(0xe550, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xac9f, gbc.sp());
        EXPECT(0xe552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe550));
        EXPECT(0x7f, gbc.readMem(0xe551));
        // CB 7F 0146
        gbc.setState(0x845f, 0xb30a, 0xc280, 0xba6a, 0xd8c6, 0xc0e8, 0x1, 0x0);
        gbc.writeMem(0x845f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb30a, gbc.sp());
        EXPECT(0x8461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845f));
        EXPECT(0x7f, gbc.readMem(0x8460));
        // CB 7F 0147
        gbc.setState(0xd96b, 0x1157, 0x4400, 0xc2bc, 0x35f7, 0x2a43, 0x0, 0x1);
        gbc.writeMem(0xd96b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1157, gbc.sp());
        EXPECT(0xd96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96b));
        EXPECT(0x7f, gbc.readMem(0xd96c));
        // CB 7F 0148
        gbc.setState(0xb263, 0xcb3d, 0x3c20, 0x5d72, 0xc05c, 0x915c, 0x1, 0x1);
        gbc.writeMem(0xb263, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcb3d, gbc.sp());
        EXPECT(0xb265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb263));
        EXPECT(0x7f, gbc.readMem(0xb264));
        // CB 7F 0149
        gbc.setState(0xebb, 0x4a82, 0x9300, 0xebeb, 0x9f25, 0xf533, 0x0, 0x1);
        gbc.writeMem(0xebb, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4a82, gbc.sp());
        EXPECT(0xebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 014A
        gbc.setState(0x5c1d, 0x6e65, 0xacf0, 0x4ccf, 0xaa8b, 0x61b4, 0x1, 0x1);
        gbc.writeMem(0x5c1d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6e65, gbc.sp());
        EXPECT(0x5c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 014B
        gbc.setState(0xa545, 0x9fe5, 0x3700, 0x7c32, 0xf777, 0xf917, 0x1, 0x1);
        gbc.writeMem(0xa545, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9fe5, gbc.sp());
        EXPECT(0xa547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa545));
        EXPECT(0x7f, gbc.readMem(0xa546));
        // CB 7F 014D
        gbc.setState(0xde0, 0x3e29, 0xf5d0, 0x2979, 0xc146, 0xd19b, 0x0, 0x1);
        gbc.writeMem(0xde0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3e29, gbc.sp());
        EXPECT(0xde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 014E
        gbc.setState(0x903b, 0x4380, 0xf400, 0x39a6, 0x57f1, 0xdc82, 0x0, 0x0);
        gbc.writeMem(0x903b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4380, gbc.sp());
        EXPECT(0x903d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903b));
        EXPECT(0x7f, gbc.readMem(0x903c));
        // CB 7F 014F
        gbc.setState(0xba70, 0xd473, 0xa290, 0x82bd, 0x978c, 0xa83, 0x1, 0x1);
        gbc.writeMem(0xba70, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd473, gbc.sp());
        EXPECT(0xba72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba70));
        EXPECT(0x7f, gbc.readMem(0xba71));
        // CB 7F 0150
        gbc.setState(0x2ca6, 0xe59e, 0xd470, 0x7bf6, 0x7c4c, 0xf990, 0x1, 0x0);
        gbc.writeMem(0x2ca6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe59e, gbc.sp());
        EXPECT(0x2ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0151
        gbc.setState(0x2126, 0xd3a7, 0xf380, 0x8d9, 0xe9f4, 0x37e5, 0x0, 0x1);
        gbc.writeMem(0x2126, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd3a7, gbc.sp());
        EXPECT(0x2128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0152
        gbc.setState(0x12d1, 0xddc5, 0x7b00, 0x7682, 0x3aef, 0xb71, 0x0, 0x0);
        gbc.writeMem(0x12d1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xddc5, gbc.sp());
        EXPECT(0x12d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0153
        gbc.setState(0xd5e5, 0x9fab, 0xb7d0, 0xcbe, 0xa55, 0x6b92, 0x1, 0x0);
        gbc.writeMem(0xd5e5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9fab, gbc.sp());
        EXPECT(0xd5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e5));
        EXPECT(0x7f, gbc.readMem(0xd5e6));
        // CB 7F 0154
        gbc.setState(0x412c, 0x9efd, 0xae50, 0xc23b, 0x7866, 0x18e6, 0x1, 0x1);
        gbc.writeMem(0x412c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9efd, gbc.sp());
        EXPECT(0x412e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0155
        gbc.setState(0xd8ac, 0xf7d2, 0x2cb0, 0xeb7b, 0x2f9b, 0xdd7c, 0x0, 0x1);
        gbc.writeMem(0xd8ac, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf7d2, gbc.sp());
        EXPECT(0xd8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ac));
        EXPECT(0x7f, gbc.readMem(0xd8ad));
        // CB 7F 0156
        gbc.setState(0xb6c7, 0xcb83, 0xe140, 0x669d, 0x1a63, 0x34e, 0x1, 0x1);
        gbc.writeMem(0xb6c7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcb83, gbc.sp());
        EXPECT(0xb6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c7));
        EXPECT(0x7f, gbc.readMem(0xb6c8));
        // CB 7F 0157
        gbc.setState(0x62e1, 0xdc19, 0x9a00, 0x54ea, 0xf733, 0x4903, 0x0, 0x0);
        gbc.writeMem(0x62e1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdc19, gbc.sp());
        EXPECT(0x62e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0158
        gbc.setState(0xc65d, 0x61cd, 0xd020, 0xd02d, 0x58a9, 0x2bd2, 0x0, 0x1);
        gbc.writeMem(0xc65d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x61cd, gbc.sp());
        EXPECT(0xc65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc65d));
        EXPECT(0x7f, gbc.readMem(0xc65e));
        // CB 7F 0159
        gbc.setState(0xe40d, 0xdc2d, 0xa750, 0x3f3d, 0xcc61, 0x1936, 0x1, 0x0);
        gbc.writeMem(0xe40d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdc2d, gbc.sp());
        EXPECT(0xe40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe40d));
        EXPECT(0x7f, gbc.readMem(0xe40e));
        // CB 7F 015A
        gbc.setState(0x3254, 0x560a, 0x2b40, 0x1a17, 0x9dfd, 0x376a, 0x0, 0x0);
        gbc.writeMem(0x3254, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x560a, gbc.sp());
        EXPECT(0x3256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 015B
        gbc.setState(0x6fcd, 0x5f79, 0x6a50, 0xd72a, 0xc3dd, 0x5cf8, 0x0, 0x1);
        gbc.writeMem(0x6fcd, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5f79, gbc.sp());
        EXPECT(0x6fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 015C
        gbc.setState(0x1b, 0x4ac7, 0x8390, 0x4cfd, 0x9040, 0x429f, 0x1, 0x1);
        gbc.writeMem(0x1b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4ac7, gbc.sp());
        EXPECT(0x1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 015D
        gbc.setState(0xa7b8, 0x84c9, 0x7870, 0x28, 0x26cd, 0xb689, 0x0, 0x0);
        gbc.writeMem(0xa7b8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x84c9, gbc.sp());
        EXPECT(0xa7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b8));
        EXPECT(0x7f, gbc.readMem(0xa7b9));
        // CB 7F 015E
        gbc.setState(0xefad, 0x4af1, 0xbe0, 0xb62d, 0xa10c, 0x85ee, 0x0, 0x0);
        gbc.writeMem(0xefad, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4af1, gbc.sp());
        EXPECT(0xefaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefad));
        EXPECT(0x7f, gbc.readMem(0xefae));
        // CB 7F 015F
        gbc.setState(0x88e3, 0x92e7, 0xafa0, 0xc2a, 0xfadb, 0xbe07, 0x1, 0x1);
        gbc.writeMem(0x88e3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x92e7, gbc.sp());
        EXPECT(0x88e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e3));
        EXPECT(0x7f, gbc.readMem(0x88e4));
        // CB 7F 0160
        gbc.setState(0xda3c, 0xf996, 0x5c20, 0xf24, 0x3f5b, 0xbc9f, 0x0, 0x1);
        gbc.writeMem(0xda3c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf996, gbc.sp());
        EXPECT(0xda3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3c));
        EXPECT(0x7f, gbc.readMem(0xda3d));
        // CB 7F 0161
        gbc.setState(0x53f6, 0x1fa8, 0x1240, 0xb319, 0x9a36, 0x8370, 0x0, 0x0);
        gbc.writeMem(0x53f6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1fa8, gbc.sp());
        EXPECT(0x53f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0162
        gbc.setState(0x2a40, 0xe16f, 0x9270, 0xe75d, 0x80bb, 0x916b, 0x1, 0x0);
        gbc.writeMem(0x2a40, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe16f, gbc.sp());
        EXPECT(0x2a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0163
        gbc.setState(0xdf4d, 0xb6b8, 0xbbb0, 0x322a, 0xe8af, 0xbf7b, 0x1, 0x0);
        gbc.writeMem(0xdf4d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb6b8, gbc.sp());
        EXPECT(0xdf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4d));
        EXPECT(0x7f, gbc.readMem(0xdf4e));
        // CB 7F 0164
        gbc.setState(0xdce4, 0x3618, 0xd6f0, 0xcc0d, 0xbd3d, 0xbbf6, 0x1, 0x0);
        gbc.writeMem(0xdce4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3618, gbc.sp());
        EXPECT(0xdce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce4));
        EXPECT(0x7f, gbc.readMem(0xdce5));
        // CB 7F 0165
        gbc.setState(0xa236, 0xa2eb, 0xa4e0, 0xb362, 0xf4e0, 0xe924, 0x1, 0x0);
        gbc.writeMem(0xa236, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa2eb, gbc.sp());
        EXPECT(0xa238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa236));
        EXPECT(0x7f, gbc.readMem(0xa237));
        // CB 7F 0166
        gbc.setState(0x414a, 0x1e23, 0xb610, 0x49c7, 0xe651, 0x91c5, 0x1, 0x0);
        gbc.writeMem(0x414a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1e23, gbc.sp());
        EXPECT(0x414c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0168
        gbc.setState(0x6ff3, 0xb6aa, 0xd580, 0xa753, 0xe8d2, 0x89f2, 0x0, 0x1);
        gbc.writeMem(0x6ff3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb6aa, gbc.sp());
        EXPECT(0x6ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0169
        gbc.setState(0x10, 0xbe6e, 0x3bf0, 0xeca0, 0x54da, 0xe89f, 0x1, 0x1);
        gbc.writeMem(0x10, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbe6e, gbc.sp());
        EXPECT(0x12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 016A
        gbc.setState(0xd15c, 0xdd17, 0xe760, 0x8a39, 0x973a, 0x11c9, 0x0, 0x0);
        gbc.writeMem(0xd15c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdd17, gbc.sp());
        EXPECT(0xd15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15c));
        EXPECT(0x7f, gbc.readMem(0xd15d));
        // CB 7F 016B
        gbc.setState(0x7413, 0xe9cf, 0x24c0, 0x990a, 0xb044, 0x815d, 0x1, 0x0);
        gbc.writeMem(0x7413, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe9cf, gbc.sp());
        EXPECT(0x7415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 016C
        gbc.setState(0xb6c4, 0xec80, 0xccc0, 0xf501, 0x5c66, 0x29c5, 0x1, 0x1);
        gbc.writeMem(0xb6c4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xec80, gbc.sp());
        EXPECT(0xb6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c4));
        EXPECT(0x7f, gbc.readMem(0xb6c5));
        // CB 7F 016D
        gbc.setState(0x51a3, 0x3b22, 0x1910, 0xad28, 0xa52, 0x3179, 0x1, 0x1);
        gbc.writeMem(0x51a3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3b22, gbc.sp());
        EXPECT(0x51a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 016E
        gbc.setState(0xde6, 0xda69, 0x1960, 0x4ca3, 0x23d, 0x23c1, 0x0, 0x0);
        gbc.writeMem(0xde6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xda69, gbc.sp());
        EXPECT(0xde8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 016F
        gbc.setState(0xbc7b, 0x5720, 0xe3b0, 0x64b8, 0x2912, 0xee15, 0x0, 0x0);
        gbc.writeMem(0xbc7b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5720, gbc.sp());
        EXPECT(0xbc7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7b));
        EXPECT(0x7f, gbc.readMem(0xbc7c));
        // CB 7F 0170
        gbc.setState(0x1b7b, 0x7de3, 0xa9d0, 0xa40b, 0xc190, 0xc1be, 0x0, 0x0);
        gbc.writeMem(0x1b7b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7de3, gbc.sp());
        EXPECT(0x1b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0171
        gbc.setState(0x6e40, 0x3a79, 0x1730, 0xf0e8, 0x6927, 0xd539, 0x0, 0x1);
        gbc.writeMem(0x6e40, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3a79, gbc.sp());
        EXPECT(0x6e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0172
        gbc.setState(0x2c7d, 0xee29, 0x5be0, 0xa8a9, 0xa7ab, 0x9567, 0x1, 0x0);
        gbc.writeMem(0x2c7d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xee29, gbc.sp());
        EXPECT(0x2c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0173
        gbc.setState(0x88c7, 0x460, 0xa6c0, 0xe599, 0x2d82, 0x3efb, 0x1, 0x0);
        gbc.writeMem(0x88c7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x460, gbc.sp());
        EXPECT(0x88c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c7));
        EXPECT(0x7f, gbc.readMem(0x88c8));
        // CB 7F 0174
        gbc.setState(0x2a34, 0x8a94, 0x7d90, 0xdfac, 0xa39d, 0x2ebf, 0x0, 0x1);
        gbc.writeMem(0x2a34, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8a94, gbc.sp());
        EXPECT(0x2a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0175
        gbc.setState(0xb9cf, 0x622f, 0xba90, 0xf6c5, 0x4a66, 0xcb4d, 0x1, 0x1);
        gbc.writeMem(0xb9cf, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x622f, gbc.sp());
        EXPECT(0xb9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9cf));
        EXPECT(0x7f, gbc.readMem(0xb9d0));
        // CB 7F 0176
        gbc.setState(0x41c9, 0xb101, 0x5690, 0xf24b, 0xa3f6, 0x2562, 0x0, 0x1);
        gbc.writeMem(0x41c9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb101, gbc.sp());
        EXPECT(0x41cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0178
        gbc.setState(0x79fc, 0xa97, 0xa590, 0x1ff2, 0x11cf, 0x4629, 0x1, 0x0);
        gbc.writeMem(0x79fc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa97, gbc.sp());
        EXPECT(0x79fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0179
        gbc.setState(0xa0a0, 0xf39d, 0x140, 0xe563, 0xe999, 0xfa5e, 0x0, 0x1);
        gbc.writeMem(0xa0a0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf39d, gbc.sp());
        EXPECT(0xa0a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a0));
        EXPECT(0x7f, gbc.readMem(0xa0a1));
        // CB 7F 017A
        gbc.setState(0xee7, 0x85f7, 0xc600, 0xa307, 0xab26, 0x47b, 0x0, 0x0);
        gbc.writeMem(0xee7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x85f7, gbc.sp());
        EXPECT(0xee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 017B
        gbc.setState(0x12b7, 0x83a8, 0x7660, 0x4d6, 0xb27b, 0x89d, 0x1, 0x1);
        gbc.writeMem(0x12b7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x83a8, gbc.sp());
        EXPECT(0x12b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 017C
        gbc.setState(0x155e, 0x41cb, 0xa3a0, 0xbfd9, 0xdb7d, 0xd451, 0x1, 0x1);
        gbc.writeMem(0x155e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x41cb, gbc.sp());
        EXPECT(0x1560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 017D
        gbc.setState(0x2e38, 0x45d, 0x7a20, 0x4722, 0x1678, 0x9b54, 0x0, 0x1);
        gbc.writeMem(0x2e38, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x45d, gbc.sp());
        EXPECT(0x2e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 017E
        gbc.setState(0x8fac, 0xc251, 0xc9d0, 0x44df, 0xad5a, 0xa802, 0x1, 0x0);
        gbc.writeMem(0x8fac, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc251, gbc.sp());
        EXPECT(0x8fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fac));
        EXPECT(0x7f, gbc.readMem(0x8fad));
        // CB 7F 017F
        gbc.setState(0x69f7, 0x5652, 0x7d70, 0x3ee0, 0x9330, 0x7ae6, 0x0, 0x0);
        gbc.writeMem(0x69f7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5652, gbc.sp());
        EXPECT(0x69f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0181
        gbc.setState(0xe13f, 0x67a2, 0xc060, 0x9709, 0x3101, 0xcb49, 0x1, 0x1);
        gbc.writeMem(0xe13f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x67a2, gbc.sp());
        EXPECT(0xe141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13f));
        EXPECT(0x7f, gbc.readMem(0xe140));
        // CB 7F 0182
        gbc.setState(0x5976, 0x499c, 0x7030, 0x4a82, 0x7551, 0xbee7, 0x1, 0x1);
        gbc.writeMem(0x5976, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x499c, gbc.sp());
        EXPECT(0x5978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0183
        gbc.setState(0x6171, 0xc695, 0x33f0, 0x746d, 0x40de, 0xf045, 0x1, 0x1);
        gbc.writeMem(0x6171, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc695, gbc.sp());
        EXPECT(0x6173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0184
        gbc.setState(0x28a2, 0x4ccd, 0xcb80, 0x385, 0x2dc7, 0x510d, 0x0, 0x1);
        gbc.writeMem(0x28a2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4ccd, gbc.sp());
        EXPECT(0x28a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0185
        gbc.setState(0x1352, 0x4d1a, 0x28b0, 0xe6d4, 0x9832, 0xc319, 0x0, 0x1);
        gbc.writeMem(0x1352, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4d1a, gbc.sp());
        EXPECT(0x1354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0186
        gbc.setState(0x3fcf, 0x38c6, 0xcca0, 0x5f5e, 0x25b, 0xdd15, 0x1, 0x1);
        gbc.writeMem(0x3fcf, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x38c6, gbc.sp());
        EXPECT(0x3fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0187
        gbc.setState(0xc1d0, 0x1ff2, 0xedc0, 0xe19e, 0x6ff8, 0xf325, 0x1, 0x1);
        gbc.writeMem(0xc1d0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1ff2, gbc.sp());
        EXPECT(0xc1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d0));
        EXPECT(0x7f, gbc.readMem(0xc1d1));
        // CB 7F 0188
        gbc.setState(0xb52c, 0xd9e7, 0xe8b0, 0x9af8, 0x6930, 0x9103, 0x1, 0x1);
        gbc.writeMem(0xb52c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd9e7, gbc.sp());
        EXPECT(0xb52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb52c));
        EXPECT(0x7f, gbc.readMem(0xb52d));
        // CB 7F 0189
        gbc.setState(0x976a, 0x20a0, 0xb750, 0x930d, 0x450f, 0x367a, 0x1, 0x0);
        gbc.writeMem(0x976a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x20a0, gbc.sp());
        EXPECT(0x976c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x976a));
        EXPECT(0x7f, gbc.readMem(0x976b));
        // CB 7F 018A
        gbc.setState(0x9a41, 0xd3ca, 0x8e00, 0x9e62, 0x8c5e, 0xfcb2, 0x0, 0x0);
        gbc.writeMem(0x9a41, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd3ca, gbc.sp());
        EXPECT(0x9a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a41));
        EXPECT(0x7f, gbc.readMem(0x9a42));
        // CB 7F 018B
        gbc.setState(0x45f8, 0xbe66, 0xe2e0, 0x13f0, 0x399, 0x4deb, 0x0, 0x1);
        gbc.writeMem(0x45f8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbe66, gbc.sp());
        EXPECT(0x45fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 018C
        gbc.setState(0x34ca, 0x9297, 0x38e0, 0x4253, 0x2b25, 0x5ba4, 0x0, 0x1);
        gbc.writeMem(0x34ca, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9297, gbc.sp());
        EXPECT(0x34cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 018D
        gbc.setState(0x2bd4, 0x21f7, 0x8dc0, 0x2b53, 0xc9c7, 0xb288, 0x1, 0x1);
        gbc.writeMem(0x2bd4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x21f7, gbc.sp());
        EXPECT(0x2bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 018E
        gbc.setState(0xc8e0, 0xc6bc, 0xfa90, 0x72c, 0x3540, 0xca09, 0x1, 0x0);
        gbc.writeMem(0xc8e0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc6bc, gbc.sp());
        EXPECT(0xc8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e0));
        EXPECT(0x7f, gbc.readMem(0xc8e1));
        // CB 7F 018F
        gbc.setState(0x4ae2, 0x9eca, 0xee50, 0xc8e4, 0x25e0, 0x76b3, 0x0, 0x1);
        gbc.writeMem(0x4ae2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9eca, gbc.sp());
        EXPECT(0x4ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0191
        gbc.setState(0xa2f5, 0x7258, 0x66e0, 0x7094, 0x6dc6, 0x33d3, 0x0, 0x0);
        gbc.writeMem(0xa2f5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7258, gbc.sp());
        EXPECT(0xa2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f5));
        EXPECT(0x7f, gbc.readMem(0xa2f6));
        // CB 7F 0192
        gbc.setState(0x2f9b, 0x8730, 0x3050, 0xe758, 0x5112, 0x1324, 0x1, 0x1);
        gbc.writeMem(0x2f9b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8730, gbc.sp());
        EXPECT(0x2f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0193
        gbc.setState(0x4ecd, 0xa270, 0x8a60, 0x2da8, 0xd8f6, 0x9eaa, 0x0, 0x1);
        gbc.writeMem(0x4ecd, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa270, gbc.sp());
        EXPECT(0x4ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0194
        gbc.setState(0xd4ab, 0x4282, 0xd6c0, 0x4720, 0x8d6e, 0xaf20, 0x1, 0x1);
        gbc.writeMem(0xd4ab, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4282, gbc.sp());
        EXPECT(0xd4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ab));
        EXPECT(0x7f, gbc.readMem(0xd4ac));
        // CB 7F 0195
        gbc.setState(0xa773, 0xecf4, 0x6d0, 0xe28b, 0xa379, 0x5080, 0x0, 0x0);
        gbc.writeMem(0xa773, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xecf4, gbc.sp());
        EXPECT(0xa775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa773));
        EXPECT(0x7f, gbc.readMem(0xa774));
        // CB 7F 0196
        gbc.setState(0x35e, 0x719e, 0x3100, 0x5930, 0x76, 0x4b18, 0x1, 0x0);
        gbc.writeMem(0x35e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x719e, gbc.sp());
        EXPECT(0x360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0197
        gbc.setState(0xc318, 0x863f, 0x4f70, 0xda02, 0xb6c, 0x71fc, 0x0, 0x0);
        gbc.writeMem(0xc318, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x863f, gbc.sp());
        EXPECT(0xc31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc318));
        EXPECT(0x7f, gbc.readMem(0xc319));
        // CB 7F 0198
        gbc.setState(0x29a0, 0xe681, 0x3cc0, 0x9712, 0x88d6, 0xb769, 0x0, 0x1);
        gbc.writeMem(0x29a0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe681, gbc.sp());
        EXPECT(0x29a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0199
        gbc.setState(0x2d41, 0x17d6, 0x7340, 0x9bed, 0x6756, 0x7038, 0x1, 0x1);
        gbc.writeMem(0x2d41, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x17d6, gbc.sp());
        EXPECT(0x2d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 019A
        gbc.setState(0xc876, 0x104e, 0xbb90, 0x3547, 0xf0d1, 0xb96f, 0x1, 0x1);
        gbc.writeMem(0xc876, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x104e, gbc.sp());
        EXPECT(0xc878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc876));
        EXPECT(0x7f, gbc.readMem(0xc877));
        // CB 7F 019B
        gbc.setState(0x6275, 0x978f, 0xf2c0, 0x50b1, 0xed32, 0x38fe, 0x1, 0x0);
        gbc.writeMem(0x6275, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x978f, gbc.sp());
        EXPECT(0x6277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 019D
        gbc.setState(0x5c03, 0xe0dc, 0x2c0, 0x1d2b, 0xd143, 0x6865, 0x1, 0x0);
        gbc.writeMem(0x5c03, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe0dc, gbc.sp());
        EXPECT(0x5c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 019E
        gbc.setState(0xc4ac, 0x3800, 0x7f00, 0x5e54, 0x9b5b, 0xf7c8, 0x0, 0x0);
        gbc.writeMem(0xc4ac, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3800, gbc.sp());
        EXPECT(0xc4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ac));
        EXPECT(0x7f, gbc.readMem(0xc4ad));
        // CB 7F 019F
        gbc.setState(0xcd4c, 0xeca, 0x3f30, 0xfb51, 0x664e, 0x53b1, 0x1, 0x1);
        gbc.writeMem(0xcd4c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xeca, gbc.sp());
        EXPECT(0xcd4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4c));
        EXPECT(0x7f, gbc.readMem(0xcd4d));
        // CB 7F 01A0
        gbc.setState(0x5a57, 0xe369, 0xd090, 0x5752, 0x4b96, 0xcecf, 0x1, 0x1);
        gbc.writeMem(0x5a57, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe369, gbc.sp());
        EXPECT(0x5a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01A1
        gbc.setState(0x883f, 0x7761, 0x5110, 0x49bc, 0x4f3f, 0x1f58, 0x1, 0x1);
        gbc.writeMem(0x883f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7761, gbc.sp());
        EXPECT(0x8841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883f));
        EXPECT(0x7f, gbc.readMem(0x8840));
        // CB 7F 01A2
        gbc.setState(0xd10e, 0x8073, 0xef50, 0x6c65, 0xb543, 0x8612, 0x1, 0x1);
        gbc.writeMem(0xd10e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8073, gbc.sp());
        EXPECT(0xd110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10e));
        EXPECT(0x7f, gbc.readMem(0xd10f));
        // CB 7F 01A3
        gbc.setState(0xd2ad, 0x69ff, 0x7420, 0xac18, 0xe28b, 0xf510, 0x0, 0x0);
        gbc.writeMem(0xd2ad, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x69ff, gbc.sp());
        EXPECT(0xd2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ad));
        EXPECT(0x7f, gbc.readMem(0xd2ae));
        // CB 7F 01A4
        gbc.setState(0xe96b, 0x652a, 0x4d80, 0x7db9, 0x2d9f, 0xf41d, 0x0, 0x1);
        gbc.writeMem(0xe96b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x652a, gbc.sp());
        EXPECT(0xe96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96b));
        EXPECT(0x7f, gbc.readMem(0xe96c));
        // CB 7F 01A5
        gbc.setState(0xc258, 0xf374, 0xe8b0, 0xa129, 0xca7e, 0x4273, 0x0, 0x1);
        gbc.writeMem(0xc258, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf374, gbc.sp());
        EXPECT(0xc25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc258));
        EXPECT(0x7f, gbc.readMem(0xc259));
        // CB 7F 01A6
        gbc.setState(0xee1e, 0x80c8, 0x3130, 0x110a, 0x269f, 0x8b2, 0x0, 0x1);
        gbc.writeMem(0xee1e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x80c8, gbc.sp());
        EXPECT(0xee20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1e));
        EXPECT(0x7f, gbc.readMem(0xee1f));
        // CB 7F 01A7
        gbc.setState(0xaa77, 0x35d3, 0x5950, 0xc052, 0xd547, 0xeb58, 0x0, 0x1);
        gbc.writeMem(0xaa77, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x35d3, gbc.sp());
        EXPECT(0xaa79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa77));
        EXPECT(0x7f, gbc.readMem(0xaa78));
        // CB 7F 01A8
        gbc.setState(0x285, 0x272b, 0x76f0, 0x4c67, 0x8ce6, 0x78fb, 0x1, 0x1);
        gbc.writeMem(0x285, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x272b, gbc.sp());
        EXPECT(0x287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01A9
        gbc.setState(0x61d2, 0xdd80, 0xfed0, 0x79ad, 0xdae7, 0xa742, 0x0, 0x1);
        gbc.writeMem(0x61d2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdd80, gbc.sp());
        EXPECT(0x61d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01AA
        gbc.setState(0x1183, 0x326e, 0x2980, 0x430f, 0xa5a0, 0x6655, 0x1, 0x1);
        gbc.writeMem(0x1183, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x326e, gbc.sp());
        EXPECT(0x1185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01AB
        gbc.setState(0xe091, 0xa518, 0xaa50, 0xc9a4, 0x208c, 0x4feb, 0x0, 0x0);
        gbc.writeMem(0xe091, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa518, gbc.sp());
        EXPECT(0xe093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe091));
        EXPECT(0x7f, gbc.readMem(0xe092));
        // CB 7F 01AC
        gbc.setState(0x8749, 0xe14, 0x48b0, 0x521c, 0x9a4b, 0xf2e7, 0x1, 0x0);
        gbc.writeMem(0x8749, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe14, gbc.sp());
        EXPECT(0x874b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8749));
        EXPECT(0x7f, gbc.readMem(0x874a));
        // CB 7F 01AD
        gbc.setState(0xdcfd, 0x536c, 0x84d0, 0x6b7f, 0xfb41, 0xd6cb, 0x1, 0x1);
        gbc.writeMem(0xdcfd, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x536c, gbc.sp());
        EXPECT(0xdcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfd));
        EXPECT(0x7f, gbc.readMem(0xdcfe));
        // CB 7F 01AE
        gbc.setState(0xbd5e, 0x8b59, 0xdd0, 0x9ca3, 0x50fe, 0x4729, 0x0, 0x1);
        gbc.writeMem(0xbd5e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8b59, gbc.sp());
        EXPECT(0xbd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5e));
        EXPECT(0x7f, gbc.readMem(0xbd5f));
        // CB 7F 01AF
        gbc.setState(0x4ca3, 0x1133, 0xfa80, 0x87cc, 0xa926, 0x5f7b, 0x1, 0x1);
        gbc.writeMem(0x4ca3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1133, gbc.sp());
        EXPECT(0x4ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01B0
        gbc.setState(0xbded, 0xf120, 0x4a0, 0x1374, 0xb941, 0x4da2, 0x1, 0x0);
        gbc.writeMem(0xbded, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf120, gbc.sp());
        EXPECT(0xbdef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbded));
        EXPECT(0x7f, gbc.readMem(0xbdee));
        // CB 7F 01B1
        gbc.setState(0x2ed3, 0xabb6, 0xa390, 0x40f1, 0x8422, 0x50b3, 0x1, 0x1);
        gbc.writeMem(0x2ed3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xabb6, gbc.sp());
        EXPECT(0x2ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01B2
        gbc.setState(0x72c6, 0xcaa5, 0xcd50, 0x88fa, 0x7306, 0xf1bc, 0x1, 0x0);
        gbc.writeMem(0x72c6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcaa5, gbc.sp());
        EXPECT(0x72c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01B3
        gbc.setState(0xd97e, 0x51fd, 0xc0c0, 0xe601, 0x8b2e, 0x1263, 0x1, 0x0);
        gbc.writeMem(0xd97e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x51fd, gbc.sp());
        EXPECT(0xd980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97e));
        EXPECT(0x7f, gbc.readMem(0xd97f));
        // CB 7F 01B4
        gbc.setState(0x2bfc, 0x68e0, 0xc220, 0x73dc, 0x326d, 0xd5b0, 0x1, 0x1);
        gbc.writeMem(0x2bfc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x68e0, gbc.sp());
        EXPECT(0x2bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01B5
        gbc.setState(0x22fe, 0x51e8, 0x3b60, 0xd5db, 0x819e, 0x93a0, 0x0, 0x1);
        gbc.writeMem(0x22fe, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x51e8, gbc.sp());
        EXPECT(0x2300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01B6
        gbc.setState(0x4d51, 0x7c95, 0xbc40, 0xb53b, 0xef37, 0x66bc, 0x0, 0x1);
        gbc.writeMem(0x4d51, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7c95, gbc.sp());
        EXPECT(0x4d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01B7
        gbc.setState(0xb569, 0x30ea, 0xbb40, 0x808c, 0x38ce, 0x2781, 0x0, 0x0);
        gbc.writeMem(0xb569, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x30ea, gbc.sp());
        EXPECT(0xb56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb569));
        EXPECT(0x7f, gbc.readMem(0xb56a));
        // CB 7F 01B8
        gbc.setState(0x8b5a, 0x95d7, 0x9410, 0x7cc0, 0xf7e2, 0x44bb, 0x1, 0x0);
        gbc.writeMem(0x8b5a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x95d7, gbc.sp());
        EXPECT(0x8b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5a));
        EXPECT(0x7f, gbc.readMem(0x8b5b));
        // CB 7F 01B9
        gbc.setState(0x3284, 0x5887, 0x84d0, 0xdcab, 0x13e5, 0x5733, 0x1, 0x0);
        gbc.writeMem(0x3284, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5887, gbc.sp());
        EXPECT(0x3286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01BA
        gbc.setState(0x67d, 0x80df, 0x24a0, 0xa575, 0x9082, 0xd096, 0x1, 0x0);
        gbc.writeMem(0x67d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x80df, gbc.sp());
        EXPECT(0x67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01BB
        gbc.setState(0xa21c, 0xc66b, 0x7660, 0x9b10, 0x4b8d, 0x569c, 0x0, 0x0);
        gbc.writeMem(0xa21c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc66b, gbc.sp());
        EXPECT(0xa21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21c));
        EXPECT(0x7f, gbc.readMem(0xa21d));
        // CB 7F 01BC
        gbc.setState(0x43d3, 0x6279, 0x8cf0, 0x322d, 0xddfe, 0xd3df, 0x0, 0x0);
        gbc.writeMem(0x43d3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6279, gbc.sp());
        EXPECT(0x43d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01BD
        gbc.setState(0xa4cc, 0x3e21, 0x2ae0, 0xaf42, 0xe390, 0x4778, 0x1, 0x1);
        gbc.writeMem(0xa4cc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3e21, gbc.sp());
        EXPECT(0xa4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4cc));
        EXPECT(0x7f, gbc.readMem(0xa4cd));
        // CB 7F 01BE
        gbc.setState(0x265d, 0xbe61, 0x580, 0x4f2e, 0x32e8, 0xb325, 0x1, 0x1);
        gbc.writeMem(0x265d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbe61, gbc.sp());
        EXPECT(0x265f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01BF
        gbc.setState(0xabe7, 0x1af1, 0xdc90, 0xc722, 0x684c, 0xd1cf, 0x0, 0x1);
        gbc.writeMem(0xabe7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1af1, gbc.sp());
        EXPECT(0xabe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe7));
        EXPECT(0x7f, gbc.readMem(0xabe8));
        // CB 7F 01C0
        gbc.setState(0x7ad6, 0x4484, 0x0, 0x96b6, 0x8364, 0xf5a, 0x0, 0x1);
        gbc.writeMem(0x7ad6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4484, gbc.sp());
        EXPECT(0x7ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01C1
        gbc.setState(0x8319, 0x2759, 0x7640, 0x377d, 0xbe4f, 0x47e, 0x0, 0x0);
        gbc.writeMem(0x8319, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2759, gbc.sp());
        EXPECT(0x831b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8319));
        EXPECT(0x7f, gbc.readMem(0x831a));
        // CB 7F 01C2
        gbc.setState(0xac1d, 0x6a09, 0x5080, 0xef5c, 0x4060, 0xec52, 0x0, 0x0);
        gbc.writeMem(0xac1d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6a09, gbc.sp());
        EXPECT(0xac1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac1d));
        EXPECT(0x7f, gbc.readMem(0xac1e));
        // CB 7F 01C3
        gbc.setState(0x9f4a, 0x4d7c, 0x7b20, 0x9815, 0x7f3, 0x48ae, 0x1, 0x1);
        gbc.writeMem(0x9f4a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4d7c, gbc.sp());
        EXPECT(0x9f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4a));
        EXPECT(0x7f, gbc.readMem(0x9f4b));
        // CB 7F 01C4
        gbc.setState(0x9028, 0x4109, 0xc160, 0x2d21, 0x7b34, 0xf3f1, 0x0, 0x0);
        gbc.writeMem(0x9028, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4109, gbc.sp());
        EXPECT(0x902a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9028));
        EXPECT(0x7f, gbc.readMem(0x9029));
        // CB 7F 01C5
        gbc.setState(0x55e5, 0xe673, 0x26f0, 0x36e5, 0x8ae, 0x236a, 0x1, 0x1);
        gbc.writeMem(0x55e5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe673, gbc.sp());
        EXPECT(0x55e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01C6
        gbc.setState(0x135d, 0xa8a2, 0x23b0, 0xd88f, 0xf0eb, 0xe2bb, 0x1, 0x0);
        gbc.writeMem(0x135d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa8a2, gbc.sp());
        EXPECT(0x135f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01C7
        gbc.setState(0x4259, 0x5df1, 0xb40, 0xb11b, 0x89b7, 0xd55f, 0x1, 0x1);
        gbc.writeMem(0x4259, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5df1, gbc.sp());
        EXPECT(0x425b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01C8
        gbc.setState(0xe571, 0xa2e9, 0x8a50, 0x56df, 0x3039, 0x6946, 0x1, 0x0);
        gbc.writeMem(0xe571, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa2e9, gbc.sp());
        EXPECT(0xe573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe571));
        EXPECT(0x7f, gbc.readMem(0xe572));
        // CB 7F 01C9
        gbc.setState(0xb56a, 0x65f, 0x7500, 0xed0f, 0x9247, 0x7b3, 0x0, 0x1);
        gbc.writeMem(0xb56a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x65f, gbc.sp());
        EXPECT(0xb56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56a));
        EXPECT(0x7f, gbc.readMem(0xb56b));
        // CB 7F 01CA
        gbc.setState(0xca2, 0xecf2, 0xfe10, 0xa593, 0xa114, 0x6b53, 0x1, 0x1);
        gbc.writeMem(0xca2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xecf2, gbc.sp());
        EXPECT(0xca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01CB
        gbc.setState(0x6516, 0x221a, 0x4a70, 0xeb9d, 0x7415, 0x42d1, 0x1, 0x1);
        gbc.writeMem(0x6516, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x221a, gbc.sp());
        EXPECT(0x6518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01CC
        gbc.setState(0x3feb, 0x201d, 0x9490, 0x20d8, 0xc4e, 0x1da0, 0x0, 0x0);
        gbc.writeMem(0x3feb, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x201d, gbc.sp());
        EXPECT(0x3fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01CD
        gbc.setState(0x9cbe, 0x1cb6, 0xfad0, 0xeea1, 0xffad, 0xebeb, 0x0, 0x0);
        gbc.writeMem(0x9cbe, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1cb6, gbc.sp());
        EXPECT(0x9cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbe));
        EXPECT(0x7f, gbc.readMem(0x9cbf));
        // CB 7F 01CE
        gbc.setState(0x3af2, 0x3d35, 0x3550, 0x4133, 0x8c61, 0x1836, 0x1, 0x1);
        gbc.writeMem(0x3af2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3d35, gbc.sp());
        EXPECT(0x3af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01CF
        gbc.setState(0x59d2, 0x750a, 0x81e0, 0xf8c, 0x1c1, 0xf309, 0x0, 0x1);
        gbc.writeMem(0x59d2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x750a, gbc.sp());
        EXPECT(0x59d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01D0
        gbc.setState(0xbcb8, 0x2370, 0x9c60, 0x631d, 0x35e3, 0xccb8, 0x1, 0x1);
        gbc.writeMem(0xbcb8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2370, gbc.sp());
        EXPECT(0xbcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb8));
        EXPECT(0x7f, gbc.readMem(0xbcb9));
        // CB 7F 01D1
        gbc.setState(0xd4fe, 0x897b, 0x6560, 0xf983, 0xdaad, 0xce8e, 0x0, 0x1);
        gbc.writeMem(0xd4fe, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x897b, gbc.sp());
        EXPECT(0xd500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4fe));
        EXPECT(0x7f, gbc.readMem(0xd4ff));
        // CB 7F 01D2
        gbc.setState(0xa400, 0xc5d2, 0x1de0, 0xfcce, 0x1707, 0x3217, 0x1, 0x0);
        gbc.writeMem(0xa400, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc5d2, gbc.sp());
        EXPECT(0xa402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa400));
        EXPECT(0x7f, gbc.readMem(0xa401));
        // CB 7F 01D3
        gbc.setState(0xbac5, 0x6281, 0x88a0, 0x1fa4, 0xc6ff, 0x328d, 0x1, 0x0);
        gbc.writeMem(0xbac5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0xbac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac5));
        EXPECT(0x7f, gbc.readMem(0xbac6));
        // CB 7F 01D4
        gbc.setState(0xc41b, 0x6715, 0xa490, 0x88c5, 0xda9d, 0xe84c, 0x1, 0x0);
        gbc.writeMem(0xc41b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6715, gbc.sp());
        EXPECT(0xc41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41b));
        EXPECT(0x7f, gbc.readMem(0xc41c));
        // CB 7F 01D5
        gbc.setState(0x29d8, 0xdf82, 0x3380, 0xfc62, 0xa21e, 0x3a4d, 0x1, 0x1);
        gbc.writeMem(0x29d8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdf82, gbc.sp());
        EXPECT(0x29da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01D6
        gbc.setState(0xb9be, 0xf28b, 0xf770, 0x3660, 0x15f2, 0xaa01, 0x0, 0x1);
        gbc.writeMem(0xb9be, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf28b, gbc.sp());
        EXPECT(0xb9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9be));
        EXPECT(0x7f, gbc.readMem(0xb9bf));
        // CB 7F 01D7
        gbc.setState(0x91ed, 0x46d5, 0xa240, 0xde27, 0xc07d, 0x8214, 0x0, 0x1);
        gbc.writeMem(0x91ed, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x46d5, gbc.sp());
        EXPECT(0x91ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ed));
        EXPECT(0x7f, gbc.readMem(0x91ee));
        // CB 7F 01D8
        gbc.setState(0x86fc, 0x7828, 0xd530, 0x3b73, 0xcbd6, 0x7b6f, 0x0, 0x1);
        gbc.writeMem(0x86fc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7828, gbc.sp());
        EXPECT(0x86fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fc));
        EXPECT(0x7f, gbc.readMem(0x86fd));
        // CB 7F 01D9
        gbc.setState(0x89d6, 0xc01c, 0x46d0, 0x5668, 0x64ae, 0x14ca, 0x1, 0x1);
        gbc.writeMem(0x89d6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc01c, gbc.sp());
        EXPECT(0x89d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d6));
        EXPECT(0x7f, gbc.readMem(0x89d7));
        // CB 7F 01DB
        gbc.setState(0x4e0e, 0x881d, 0xc220, 0xd04b, 0xd42c, 0xa3a, 0x0, 0x1);
        gbc.writeMem(0x4e0e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x881d, gbc.sp());
        EXPECT(0x4e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01DC
        gbc.setState(0xc743, 0xe885, 0x67a0, 0xbeb9, 0x27b2, 0xb47a, 0x1, 0x1);
        gbc.writeMem(0xc743, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe885, gbc.sp());
        EXPECT(0xc745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc743));
        EXPECT(0x7f, gbc.readMem(0xc744));
        // CB 7F 01DE
        gbc.setState(0x23de, 0xdd97, 0x9140, 0x459a, 0x8152, 0x5c0e, 0x1, 0x0);
        gbc.writeMem(0x23de, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdd97, gbc.sp());
        EXPECT(0x23e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01DF
        gbc.setState(0xd9db, 0xa698, 0xc8f0, 0x8882, 0x737, 0xc12a, 0x0, 0x0);
        gbc.writeMem(0xd9db, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa698, gbc.sp());
        EXPECT(0xd9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9db));
        EXPECT(0x7f, gbc.readMem(0xd9dc));
        // CB 7F 01E0
        gbc.setState(0xd5bb, 0xbf6e, 0xe700, 0xdb94, 0x6848, 0xc2ea, 0x1, 0x0);
        gbc.writeMem(0xd5bb, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbf6e, gbc.sp());
        EXPECT(0xd5bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5bb));
        EXPECT(0x7f, gbc.readMem(0xd5bc));
        // CB 7F 01E1
        gbc.setState(0x9860, 0x2a0d, 0x6150, 0x59d5, 0x6d5c, 0x7907, 0x1, 0x0);
        gbc.writeMem(0x9860, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2a0d, gbc.sp());
        EXPECT(0x9862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9860));
        EXPECT(0x7f, gbc.readMem(0x9861));
        // CB 7F 01E2
        gbc.setState(0x8b13, 0xb453, 0x9810, 0x41a1, 0xa2c8, 0xe971, 0x1, 0x0);
        gbc.writeMem(0x8b13, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb453, gbc.sp());
        EXPECT(0x8b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b13));
        EXPECT(0x7f, gbc.readMem(0x8b14));
        // CB 7F 01E3
        gbc.setState(0xd286, 0x7ade, 0xb300, 0xc4a0, 0xd207, 0xa05e, 0x0, 0x1);
        gbc.writeMem(0xd286, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7ade, gbc.sp());
        EXPECT(0xd288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd286));
        EXPECT(0x7f, gbc.readMem(0xd287));
        // CB 7F 01E4
        gbc.setState(0xaf2f, 0x8e62, 0x2f0, 0x8a3b, 0xafb0, 0x504c, 0x1, 0x1);
        gbc.writeMem(0xaf2f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8e62, gbc.sp());
        EXPECT(0xaf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf2f));
        EXPECT(0x7f, gbc.readMem(0xaf30));
        // CB 7F 01E5
        gbc.setState(0x4367, 0x1531, 0xda50, 0xe2b3, 0xe3e2, 0x3f17, 0x1, 0x1);
        gbc.writeMem(0x4367, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1531, gbc.sp());
        EXPECT(0x4369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01E6
        gbc.setState(0x1994, 0xe99c, 0x65d0, 0xd287, 0x9785, 0x3987, 0x1, 0x1);
        gbc.writeMem(0x1994, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe99c, gbc.sp());
        EXPECT(0x1996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01E7
        gbc.setState(0x5cdc, 0x6133, 0xd20, 0xb1e, 0xbd5d, 0x1c7b, 0x1, 0x0);
        gbc.writeMem(0x5cdc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6133, gbc.sp());
        EXPECT(0x5cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01E8
        gbc.setState(0x7d1, 0x20e, 0x3420, 0xeb53, 0xe9da, 0x358f, 0x1, 0x1);
        gbc.writeMem(0x7d1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x20e, gbc.sp());
        EXPECT(0x7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01E9
        gbc.setState(0xc5ee, 0x6d9f, 0xdeb0, 0x5161, 0xc763, 0x5cf1, 0x1, 0x1);
        gbc.writeMem(0xc5ee, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6d9f, gbc.sp());
        EXPECT(0xc5f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ee));
        EXPECT(0x7f, gbc.readMem(0xc5ef));
        // CB 7F 01EA
        gbc.setState(0x252f, 0xbfe, 0xd160, 0x4f13, 0x40c0, 0x4d67, 0x0, 0x0);
        gbc.writeMem(0x252f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbfe, gbc.sp());
        EXPECT(0x2531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01EB
        gbc.setState(0x8455, 0x9e50, 0xe6e0, 0xa709, 0xd6be, 0x7d4d, 0x0, 0x1);
        gbc.writeMem(0x8455, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9e50, gbc.sp());
        EXPECT(0x8457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8455));
        EXPECT(0x7f, gbc.readMem(0x8456));
        // CB 7F 01EC
        gbc.setState(0xd67f, 0x4aa0, 0x2090, 0x7b59, 0x7b20, 0x7796, 0x0, 0x1);
        gbc.writeMem(0xd67f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4aa0, gbc.sp());
        EXPECT(0xd681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67f));
        EXPECT(0x7f, gbc.readMem(0xd680));
        // CB 7F 01ED
        gbc.setState(0x4c53, 0x63ae, 0x1fc0, 0x4766, 0xdd29, 0xdea8, 0x1, 0x0);
        gbc.writeMem(0x4c53, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x63ae, gbc.sp());
        EXPECT(0x4c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01EE
        gbc.setState(0x909, 0x6a57, 0xf9a0, 0xc6e5, 0xb51, 0xc209, 0x0, 0x1);
        gbc.writeMem(0x909, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6a57, gbc.sp());
        EXPECT(0x90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01EF
        gbc.setState(0x8d60, 0x532, 0xea60, 0x1fe8, 0x380f, 0x7dd8, 0x1, 0x1);
        gbc.writeMem(0x8d60, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x532, gbc.sp());
        EXPECT(0x8d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d60));
        EXPECT(0x7f, gbc.readMem(0x8d61));
        // CB 7F 01F0
        gbc.setState(0x3caf, 0x660f, 0xf500, 0xa60d, 0x8bfb, 0x56a5, 0x0, 0x0);
        gbc.writeMem(0x3caf, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x660f, gbc.sp());
        EXPECT(0x3cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01F1
        gbc.setState(0xb07e, 0x7631, 0x4d60, 0xc66d, 0x2165, 0xc8b0, 0x1, 0x0);
        gbc.writeMem(0xb07e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7631, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07e));
        EXPECT(0x7f, gbc.readMem(0xb07f));
        // CB 7F 01F2
        gbc.setState(0xab77, 0x10b4, 0xa410, 0x78be, 0x6908, 0x1ed8, 0x0, 0x0);
        gbc.writeMem(0xab77, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x10b4, gbc.sp());
        EXPECT(0xab79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab77));
        EXPECT(0x7f, gbc.readMem(0xab78));
        // CB 7F 01F3
        gbc.setState(0xdd2e, 0x8a47, 0xa640, 0xf24, 0x8b77, 0xd5ba, 0x0, 0x0);
        gbc.writeMem(0xdd2e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8a47, gbc.sp());
        EXPECT(0xdd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2e));
        EXPECT(0x7f, gbc.readMem(0xdd2f));
        // CB 7F 01F4
        gbc.setState(0x96c, 0xe2e0, 0xc900, 0x2c13, 0xf77e, 0xaa78, 0x0, 0x1);
        gbc.writeMem(0x96c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe2e0, gbc.sp());
        EXPECT(0x96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01F5
        gbc.setState(0xb70, 0x9616, 0x2d50, 0xc926, 0x2c7b, 0x1bfa, 0x1, 0x1);
        gbc.writeMem(0xb70, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9616, gbc.sp());
        EXPECT(0xb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01F6
        gbc.setState(0x3459, 0x97a0, 0x94b0, 0xf7b9, 0xccf6, 0x80d0, 0x1, 0x1);
        gbc.writeMem(0x3459, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x97a0, gbc.sp());
        EXPECT(0x345b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01F7
        gbc.setState(0x79f1, 0xd4e, 0xe2d0, 0x268e, 0x7a03, 0x4008, 0x1, 0x0);
        gbc.writeMem(0x79f1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd4e, gbc.sp());
        EXPECT(0x79f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01F8
        gbc.setState(0xb9f6, 0x9bd5, 0xf920, 0xa48a, 0xb01a, 0xffb5, 0x0, 0x0);
        gbc.writeMem(0xb9f6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9bd5, gbc.sp());
        EXPECT(0xb9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f6));
        EXPECT(0x7f, gbc.readMem(0xb9f7));
        // CB 7F 01F9
        gbc.setState(0x559d, 0xf30e, 0xd950, 0x6e00, 0x802f, 0x3d24, 0x1, 0x1);
        gbc.writeMem(0x559d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf30e, gbc.sp());
        EXPECT(0x559f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01FA
        gbc.setState(0xb906, 0xad99, 0x8cb0, 0x866b, 0xaa13, 0xb7c1, 0x1, 0x1);
        gbc.writeMem(0xb906, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xad99, gbc.sp());
        EXPECT(0xb908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb906));
        EXPECT(0x7f, gbc.readMem(0xb907));
        // CB 7F 01FB
        gbc.setState(0x4bf1, 0x14db, 0x7ab0, 0xbde5, 0xb87d, 0x2266, 0x0, 0x1);
        gbc.writeMem(0x4bf1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x14db, gbc.sp());
        EXPECT(0x4bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 01FC
        gbc.setState(0x74c6, 0x7172, 0x600, 0x6ff9, 0xfd21, 0x6b40, 0x1, 0x1);
        gbc.writeMem(0x74c6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7172, gbc.sp());
        EXPECT(0x74c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01FD
        gbc.setState(0xa23, 0xf367, 0x4ec0, 0x3420, 0x9e7d, 0x3e90, 0x0, 0x0);
        gbc.writeMem(0xa23, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf367, gbc.sp());
        EXPECT(0xa25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 01FE
        gbc.setState(0xafaa, 0x5fa3, 0xf850, 0x8651, 0x74a4, 0x477f, 0x0, 0x0);
        gbc.writeMem(0xafaa, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5fa3, gbc.sp());
        EXPECT(0xafac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafaa));
        EXPECT(0x7f, gbc.readMem(0xafab));
        // CB 7F 01FF
        gbc.setState(0xe337, 0x3cf5, 0x6d50, 0x2606, 0x5f4f, 0xa697, 0x0, 0x0);
        gbc.writeMem(0xe337, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3cf5, gbc.sp());
        EXPECT(0xe339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe337));
        EXPECT(0x7f, gbc.readMem(0xe338));
        // CB 7F 0200
        gbc.setState(0x9c73, 0xe1fb, 0x1ae0, 0x425b, 0xfa9e, 0xfd68, 0x0, 0x1);
        gbc.writeMem(0x9c73, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe1fb, gbc.sp());
        EXPECT(0x9c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c73));
        EXPECT(0x7f, gbc.readMem(0x9c74));
        // CB 7F 0201
        gbc.setState(0xe196, 0x4eb2, 0xb430, 0x6ef0, 0x4627, 0xe0e5, 0x0, 0x1);
        gbc.writeMem(0xe196, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4eb2, gbc.sp());
        EXPECT(0xe198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe196));
        EXPECT(0x7f, gbc.readMem(0xe197));
        // CB 7F 0202
        gbc.setState(0xc32e, 0x770, 0x2770, 0xe810, 0xd017, 0xdd5f, 0x0, 0x1);
        gbc.writeMem(0xc32e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x770, gbc.sp());
        EXPECT(0xc330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32e));
        EXPECT(0x7f, gbc.readMem(0xc32f));
        // CB 7F 0203
        gbc.setState(0xbab, 0x8cb7, 0xced0, 0xec5c, 0xcc20, 0xe0a5, 0x1, 0x1);
        gbc.writeMem(0xbab, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8cb7, gbc.sp());
        EXPECT(0xbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0204
        gbc.setState(0xdf19, 0xbdcb, 0xd3a0, 0xcc7b, 0xfe97, 0x8829, 0x0, 0x1);
        gbc.writeMem(0xdf19, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbdcb, gbc.sp());
        EXPECT(0xdf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf19));
        EXPECT(0x7f, gbc.readMem(0xdf1a));
        // CB 7F 0205
        gbc.setState(0xe182, 0x1ba3, 0xb140, 0x9241, 0xe94, 0x39b3, 0x0, 0x1);
        gbc.writeMem(0xe182, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1ba3, gbc.sp());
        EXPECT(0xe184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe182));
        EXPECT(0x7f, gbc.readMem(0xe183));
        // CB 7F 0206
        gbc.setState(0x5f90, 0xa847, 0x9040, 0xa10b, 0xe5e7, 0x8e8c, 0x1, 0x0);
        gbc.writeMem(0x5f90, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa847, gbc.sp());
        EXPECT(0x5f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0208
        gbc.setState(0xc5f2, 0x95c7, 0xebe0, 0x46, 0x8fde, 0x9ea0, 0x0, 0x0);
        gbc.writeMem(0xc5f2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x95c7, gbc.sp());
        EXPECT(0xc5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f2));
        EXPECT(0x7f, gbc.readMem(0xc5f3));
        // CB 7F 0209
        gbc.setState(0xcde8, 0x70ee, 0x7d0, 0x8017, 0x6aed, 0xa586, 0x1, 0x0);
        gbc.writeMem(0xcde8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x70ee, gbc.sp());
        EXPECT(0xcdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde8));
        EXPECT(0x7f, gbc.readMem(0xcde9));
        // CB 7F 020A
        gbc.setState(0x63a8, 0x1cdd, 0x5210, 0x9f6b, 0xf88c, 0x2a60, 0x0, 0x1);
        gbc.writeMem(0x63a8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1cdd, gbc.sp());
        EXPECT(0x63aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 020B
        gbc.setState(0xe9ec, 0x10b7, 0xc220, 0xfbd8, 0x5030, 0xe69d, 0x1, 0x0);
        gbc.writeMem(0xe9ec, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x10b7, gbc.sp());
        EXPECT(0xe9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ec));
        EXPECT(0x7f, gbc.readMem(0xe9ed));
        // CB 7F 020C
        gbc.setState(0x6bea, 0xa981, 0xc3b0, 0x69ce, 0xda38, 0xa18, 0x1, 0x0);
        gbc.writeMem(0x6bea, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa981, gbc.sp());
        EXPECT(0x6bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 020D
        gbc.setState(0x424d, 0x5ecc, 0x6930, 0x67fa, 0x2b17, 0xb2de, 0x0, 0x1);
        gbc.writeMem(0x424d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5ecc, gbc.sp());
        EXPECT(0x424f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 020E
        gbc.setState(0x69fe, 0xb261, 0xd110, 0xa9e1, 0x584a, 0x6548, 0x0, 0x1);
        gbc.writeMem(0x69fe, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb261, gbc.sp());
        EXPECT(0x6a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 020F
        gbc.setState(0xd0b0, 0x87d1, 0xd1b0, 0xc511, 0x44ce, 0x8203, 0x0, 0x0);
        gbc.writeMem(0xd0b0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x87d1, gbc.sp());
        EXPECT(0xd0b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b0));
        EXPECT(0x7f, gbc.readMem(0xd0b1));
        // CB 7F 0211
        gbc.setState(0x217f, 0x836c, 0x16a0, 0xeeea, 0x9cfd, 0x967d, 0x0, 0x1);
        gbc.writeMem(0x217f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x836c, gbc.sp());
        EXPECT(0x2181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0212
        gbc.setState(0x5b87, 0x795e, 0x47d0, 0xa183, 0xde2c, 0x20d9, 0x1, 0x1);
        gbc.writeMem(0x5b87, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x795e, gbc.sp());
        EXPECT(0x5b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0213
        gbc.setState(0x8be7, 0x5bf2, 0x520, 0x6528, 0x855, 0x619c, 0x1, 0x0);
        gbc.writeMem(0x8be7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5bf2, gbc.sp());
        EXPECT(0x8be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be7));
        EXPECT(0x7f, gbc.readMem(0x8be8));
        // CB 7F 0214
        gbc.setState(0x7d87, 0xba05, 0x4eb0, 0xb367, 0x71d7, 0xe1ca, 0x1, 0x0);
        gbc.writeMem(0x7d87, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xba05, gbc.sp());
        EXPECT(0x7d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0215
        gbc.setState(0x5237, 0xb90f, 0x8180, 0x8249, 0xcf40, 0x9fab, 0x0, 0x0);
        gbc.writeMem(0x5237, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb90f, gbc.sp());
        EXPECT(0x5239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0216
        gbc.setState(0x33b, 0x4a4d, 0x9070, 0x8ab2, 0x1f10, 0x1929, 0x1, 0x0);
        gbc.writeMem(0x33b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4a4d, gbc.sp());
        EXPECT(0x33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0217
        gbc.setState(0x1424, 0x9d66, 0x65b0, 0xdd4d, 0x96fa, 0xb767, 0x0, 0x0);
        gbc.writeMem(0x1424, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9d66, gbc.sp());
        EXPECT(0x1426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0218
        gbc.setState(0x9823, 0xedb, 0x22f0, 0x5a63, 0xd6f1, 0xc2ab, 0x1, 0x0);
        gbc.writeMem(0x9823, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xedb, gbc.sp());
        EXPECT(0x9825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9823));
        EXPECT(0x7f, gbc.readMem(0x9824));
        // CB 7F 0219
        gbc.setState(0xec93, 0x310a, 0xc430, 0x9b07, 0x895a, 0xd595, 0x0, 0x0);
        gbc.writeMem(0xec93, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x310a, gbc.sp());
        EXPECT(0xec95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec93));
        EXPECT(0x7f, gbc.readMem(0xec94));
        // CB 7F 021A
        gbc.setState(0xdf85, 0x75b8, 0x5190, 0x7bcf, 0xf906, 0x464f, 0x0, 0x1);
        gbc.writeMem(0xdf85, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x75b8, gbc.sp());
        EXPECT(0xdf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf85));
        EXPECT(0x7f, gbc.readMem(0xdf86));
        // CB 7F 021B
        gbc.setState(0x3333, 0xb716, 0x9e40, 0x480c, 0x4088, 0xe350, 0x0, 0x0);
        gbc.writeMem(0x3333, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb716, gbc.sp());
        EXPECT(0x3335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 021C
        gbc.setState(0x945, 0x7fe8, 0x19f0, 0xac47, 0x78e8, 0xa3d5, 0x1, 0x1);
        gbc.writeMem(0x945, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7fe8, gbc.sp());
        EXPECT(0x947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 021E
        gbc.setState(0x5749, 0x2bb3, 0x85f0, 0x6cd, 0x2cd9, 0x26c4, 0x1, 0x0);
        gbc.writeMem(0x5749, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2bb3, gbc.sp());
        EXPECT(0x574b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0220
        gbc.setState(0x9407, 0xf4d8, 0xd7d0, 0xfd3a, 0xa303, 0x5841, 0x1, 0x0);
        gbc.writeMem(0x9407, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf4d8, gbc.sp());
        EXPECT(0x9409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9407));
        EXPECT(0x7f, gbc.readMem(0x9408));
        // CB 7F 0221
        gbc.setState(0x53a8, 0xe932, 0xfe60, 0xf3b5, 0x4cb9, 0x3891, 0x1, 0x1);
        gbc.writeMem(0x53a8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe932, gbc.sp());
        EXPECT(0x53aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0222
        gbc.setState(0x6c32, 0x7275, 0x5f60, 0x4061, 0x1d3, 0xbb06, 0x1, 0x0);
        gbc.writeMem(0x6c32, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7275, gbc.sp());
        EXPECT(0x6c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0224
        gbc.setState(0xa19e, 0xf82a, 0x3a00, 0xa657, 0xaddb, 0x7a76, 0x0, 0x1);
        gbc.writeMem(0xa19e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf82a, gbc.sp());
        EXPECT(0xa1a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19e));
        EXPECT(0x7f, gbc.readMem(0xa19f));
        // CB 7F 0225
        gbc.setState(0x88b6, 0x57eb, 0x7310, 0x99a2, 0x2c59, 0xf6cb, 0x1, 0x1);
        gbc.writeMem(0x88b6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x57eb, gbc.sp());
        EXPECT(0x88b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b6));
        EXPECT(0x7f, gbc.readMem(0x88b7));
        // CB 7F 0226
        gbc.setState(0xe440, 0xd396, 0xefc0, 0xaee9, 0x9712, 0xf71e, 0x0, 0x1);
        gbc.writeMem(0xe440, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd396, gbc.sp());
        EXPECT(0xe442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe440));
        EXPECT(0x7f, gbc.readMem(0xe441));
        // CB 7F 0227
        gbc.setState(0x75d, 0xcb5d, 0x67c0, 0x5cee, 0xb728, 0x1a59, 0x1, 0x0);
        gbc.writeMem(0x75d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcb5d, gbc.sp());
        EXPECT(0x75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0228
        gbc.setState(0x7a5, 0xd97f, 0xc9b0, 0x17a3, 0xff45, 0xf67d, 0x1, 0x1);
        gbc.writeMem(0x7a5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd97f, gbc.sp());
        EXPECT(0x7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0229
        gbc.setState(0xc1da, 0x5074, 0x81a0, 0x73a2, 0x9638, 0xd690, 0x1, 0x1);
        gbc.writeMem(0xc1da, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5074, gbc.sp());
        EXPECT(0xc1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1da));
        EXPECT(0x7f, gbc.readMem(0xc1db));
        // CB 7F 022A
        gbc.setState(0xc4f, 0xa7f0, 0x5da0, 0x98c4, 0xcebc, 0x758, 0x1, 0x1);
        gbc.writeMem(0xc4f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa7f0, gbc.sp());
        EXPECT(0xc51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 022B
        gbc.setState(0x6a8c, 0x3999, 0x2ab0, 0x44b3, 0x5dcc, 0xd382, 0x1, 0x0);
        gbc.writeMem(0x6a8c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3999, gbc.sp());
        EXPECT(0x6a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 022C
        gbc.setState(0x63e1, 0x585f, 0xbf10, 0x736d, 0x3104, 0xaf70, 0x1, 0x1);
        gbc.writeMem(0x63e1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x585f, gbc.sp());
        EXPECT(0x63e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 022D
        gbc.setState(0x4936, 0x6559, 0x3390, 0xd375, 0xe3b5, 0xc4c2, 0x0, 0x0);
        gbc.writeMem(0x4936, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6559, gbc.sp());
        EXPECT(0x4938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 022E
        gbc.setState(0xdf46, 0x19b5, 0x9e00, 0x5c6d, 0x15de, 0x97e3, 0x1, 0x0);
        gbc.writeMem(0xdf46, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x19b5, gbc.sp());
        EXPECT(0xdf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf46));
        EXPECT(0x7f, gbc.readMem(0xdf47));
        // CB 7F 022F
        gbc.setState(0xa06a, 0x1fca, 0x5a20, 0x85bf, 0xf834, 0x10d6, 0x0, 0x1);
        gbc.writeMem(0xa06a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1fca, gbc.sp());
        EXPECT(0xa06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06a));
        EXPECT(0x7f, gbc.readMem(0xa06b));
        // CB 7F 0230
        gbc.setState(0x7d43, 0x2ca6, 0x92c0, 0x13a1, 0x2c8d, 0xb2f3, 0x0, 0x0);
        gbc.writeMem(0x7d43, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2ca6, gbc.sp());
        EXPECT(0x7d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0231
        gbc.setState(0x349, 0xfc6c, 0xf790, 0xbfe5, 0x4a57, 0xc16c, 0x0, 0x1);
        gbc.writeMem(0x349, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfc6c, gbc.sp());
        EXPECT(0x34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0232
        gbc.setState(0x7a48, 0x2448, 0x8bc0, 0xe44a, 0xdf7, 0xb537, 0x0, 0x0);
        gbc.writeMem(0x7a48, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2448, gbc.sp());
        EXPECT(0x7a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0233
        gbc.setState(0xea20, 0xd133, 0xbe00, 0xf616, 0xf0b8, 0x6114, 0x1, 0x0);
        gbc.writeMem(0xea20, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd133, gbc.sp());
        EXPECT(0xea22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea20));
        EXPECT(0x7f, gbc.readMem(0xea21));
        // CB 7F 0234
        gbc.setState(0xd22c, 0xcf6c, 0x2af0, 0x8862, 0x293a, 0x7316, 0x1, 0x1);
        gbc.writeMem(0xd22c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcf6c, gbc.sp());
        EXPECT(0xd22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22c));
        EXPECT(0x7f, gbc.readMem(0xd22d));
        // CB 7F 0235
        gbc.setState(0xbd1, 0xc82, 0xcb60, 0xd0c9, 0x937e, 0x4663, 0x0, 0x1);
        gbc.writeMem(0xbd1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc82, gbc.sp());
        EXPECT(0xbd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0236
        gbc.setState(0xd5c0, 0xfb7f, 0x49f0, 0x6ca3, 0x930f, 0x832d, 0x0, 0x1);
        gbc.writeMem(0xd5c0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfb7f, gbc.sp());
        EXPECT(0xd5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c0));
        EXPECT(0x7f, gbc.readMem(0xd5c1));
        // CB 7F 0237
        gbc.setState(0x84e7, 0x53e6, 0xb930, 0xd4b2, 0xc780, 0xd21b, 0x0, 0x0);
        gbc.writeMem(0x84e7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x53e6, gbc.sp());
        EXPECT(0x84e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e7));
        EXPECT(0x7f, gbc.readMem(0x84e8));
        // CB 7F 0238
        gbc.setState(0x5954, 0x4d65, 0x7f00, 0xe3de, 0xdf4d, 0xccb7, 0x0, 0x1);
        gbc.writeMem(0x5954, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4d65, gbc.sp());
        EXPECT(0x5956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0239
        gbc.setState(0xb052, 0xc3a6, 0x6220, 0x98fd, 0xc021, 0x233, 0x1, 0x1);
        gbc.writeMem(0xb052, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc3a6, gbc.sp());
        EXPECT(0xb054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb052));
        EXPECT(0x7f, gbc.readMem(0xb053));
        // CB 7F 023A
        gbc.setState(0x1d32, 0x9b5a, 0xaa00, 0x2e9b, 0x603f, 0xbcd0, 0x1, 0x0);
        gbc.writeMem(0x1d32, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9b5a, gbc.sp());
        EXPECT(0x1d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 023B
        gbc.setState(0xa945, 0x5b18, 0x6790, 0xe51f, 0x5ffb, 0x1fd2, 0x1, 0x1);
        gbc.writeMem(0xa945, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5b18, gbc.sp());
        EXPECT(0xa947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa945));
        EXPECT(0x7f, gbc.readMem(0xa946));
        // CB 7F 023C
        gbc.setState(0xb0b7, 0x7910, 0x23f0, 0xf668, 0xddb4, 0x706c, 0x1, 0x0);
        gbc.writeMem(0xb0b7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7910, gbc.sp());
        EXPECT(0xb0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b7));
        EXPECT(0x7f, gbc.readMem(0xb0b8));
        // CB 7F 023D
        gbc.setState(0xa603, 0x4257, 0x65f0, 0xe270, 0xd4df, 0xf260, 0x1, 0x1);
        gbc.writeMem(0xa603, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4257, gbc.sp());
        EXPECT(0xa605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa603));
        EXPECT(0x7f, gbc.readMem(0xa604));
        // CB 7F 023F
        gbc.setState(0x24f9, 0xe8db, 0x6c0, 0x9ca6, 0xa3b6, 0x98f, 0x0, 0x1);
        gbc.writeMem(0x24f9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe8db, gbc.sp());
        EXPECT(0x24fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0240
        gbc.setState(0x6c3d, 0x38e8, 0x1a0, 0x1afd, 0x7555, 0xf4d0, 0x1, 0x0);
        gbc.writeMem(0x6c3d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0x6c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0241
        gbc.setState(0xa2be, 0x8635, 0x9cc0, 0x7f09, 0x25f1, 0x16df, 0x1, 0x1);
        gbc.writeMem(0xa2be, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8635, gbc.sp());
        EXPECT(0xa2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2be));
        EXPECT(0x7f, gbc.readMem(0xa2bf));
        // CB 7F 0242
        gbc.setState(0x8f77, 0xef6e, 0x3d00, 0xa3cd, 0x8862, 0x5637, 0x0, 0x0);
        gbc.writeMem(0x8f77, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xef6e, gbc.sp());
        EXPECT(0x8f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f77));
        EXPECT(0x7f, gbc.readMem(0x8f78));
        // CB 7F 0243
        gbc.setState(0xa8bc, 0xe432, 0xf0b0, 0xbb89, 0xe109, 0xcd4b, 0x1, 0x0);
        gbc.writeMem(0xa8bc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe432, gbc.sp());
        EXPECT(0xa8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8bc));
        EXPECT(0x7f, gbc.readMem(0xa8bd));
        // CB 7F 0244
        gbc.setState(0x987d, 0x9f50, 0x3bd0, 0xdd7e, 0xb21d, 0x5bdc, 0x1, 0x1);
        gbc.writeMem(0x987d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9f50, gbc.sp());
        EXPECT(0x987f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987d));
        EXPECT(0x7f, gbc.readMem(0x987e));
        // CB 7F 0245
        gbc.setState(0xdf9d, 0xec8e, 0x3c70, 0x673c, 0x13d3, 0xbc26, 0x0, 0x0);
        gbc.writeMem(0xdf9d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xec8e, gbc.sp());
        EXPECT(0xdf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9d));
        EXPECT(0x7f, gbc.readMem(0xdf9e));
        // CB 7F 0246
        gbc.setState(0xe880, 0x5b0f, 0x8db0, 0xec7, 0x3c40, 0x653, 0x1, 0x0);
        gbc.writeMem(0xe880, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5b0f, gbc.sp());
        EXPECT(0xe882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe880));
        EXPECT(0x7f, gbc.readMem(0xe881));
        // CB 7F 0247
        gbc.setState(0x1dd, 0x3d44, 0xff40, 0x9fdf, 0x8879, 0xbe50, 0x1, 0x0);
        gbc.writeMem(0x1dd, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3d44, gbc.sp());
        EXPECT(0x1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0248
        gbc.setState(0xb364, 0xf34c, 0x82a0, 0xf651, 0x3e47, 0x8bc9, 0x0, 0x0);
        gbc.writeMem(0xb364, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0xb366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb364));
        EXPECT(0x7f, gbc.readMem(0xb365));
        // CB 7F 0249
        gbc.setState(0x9b74, 0x362b, 0xdec0, 0x3c9c, 0x9dae, 0x9afb, 0x1, 0x0);
        gbc.writeMem(0x9b74, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x362b, gbc.sp());
        EXPECT(0x9b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b74));
        EXPECT(0x7f, gbc.readMem(0x9b75));
        // CB 7F 024A
        gbc.setState(0xa769, 0xd6c0, 0x2c50, 0x827a, 0xd188, 0x71aa, 0x0, 0x1);
        gbc.writeMem(0xa769, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd6c0, gbc.sp());
        EXPECT(0xa76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa769));
        EXPECT(0x7f, gbc.readMem(0xa76a));
        // CB 7F 024B
        gbc.setState(0x1051, 0xb12a, 0x3ba0, 0x1512, 0x5f2b, 0x8c24, 0x0, 0x0);
        gbc.writeMem(0x1051, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb12a, gbc.sp());
        EXPECT(0x1053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 024C
        gbc.setState(0x7277, 0xe82, 0xa8e0, 0x15ce, 0xb8e, 0x1450, 0x1, 0x0);
        gbc.writeMem(0x7277, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe82, gbc.sp());
        EXPECT(0x7279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 024D
        gbc.setState(0x169, 0xa4b3, 0xe9e0, 0x8164, 0xec88, 0xdd20, 0x1, 0x0);
        gbc.writeMem(0x169, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa4b3, gbc.sp());
        EXPECT(0x16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 024E
        gbc.setState(0x1d01, 0xd76e, 0x3af0, 0xf00a, 0xbb98, 0xff87, 0x1, 0x0);
        gbc.writeMem(0x1d01, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd76e, gbc.sp());
        EXPECT(0x1d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 024F
        gbc.setState(0x736d, 0x815b, 0xa7b0, 0x2271, 0x2ac9, 0x3eed, 0x1, 0x1);
        gbc.writeMem(0x736d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x815b, gbc.sp());
        EXPECT(0x736f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0250
        gbc.setState(0xdd80, 0xc832, 0x8b50, 0x983a, 0x97a8, 0xdd47, 0x0, 0x0);
        gbc.writeMem(0xdd80, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc832, gbc.sp());
        EXPECT(0xdd82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd80));
        EXPECT(0x7f, gbc.readMem(0xdd81));
        // CB 7F 0251
        gbc.setState(0x9807, 0x2c53, 0xc030, 0x371b, 0xc1c, 0x2b78, 0x0, 0x0);
        gbc.writeMem(0x9807, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2c53, gbc.sp());
        EXPECT(0x9809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9807));
        EXPECT(0x7f, gbc.readMem(0x9808));
        // CB 7F 0252
        gbc.setState(0x198e, 0x13bd, 0x3ab0, 0x5164, 0x3af6, 0x53b9, 0x0, 0x0);
        gbc.writeMem(0x198e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x13bd, gbc.sp());
        EXPECT(0x1990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0253
        gbc.setState(0x7171, 0x32e9, 0x1b50, 0x6c9b, 0xa582, 0x282c, 0x0, 0x0);
        gbc.writeMem(0x7171, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x32e9, gbc.sp());
        EXPECT(0x7173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0254
        gbc.setState(0x553e, 0x1cab, 0x3080, 0x6d8a, 0xd6f, 0x6e07, 0x0, 0x1);
        gbc.writeMem(0x553e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1cab, gbc.sp());
        EXPECT(0x5540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0255
        gbc.setState(0x5c20, 0xe0f7, 0xa4d0, 0x3b8f, 0xf0cb, 0x633b, 0x0, 0x0);
        gbc.writeMem(0x5c20, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe0f7, gbc.sp());
        EXPECT(0x5c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0256
        gbc.setState(0x30b4, 0xdaca, 0xd880, 0x515c, 0x4412, 0x419b, 0x0, 0x0);
        gbc.writeMem(0x30b4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdaca, gbc.sp());
        EXPECT(0x30b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0257
        gbc.setState(0x4565, 0x3d78, 0xd920, 0x70b0, 0x1dd5, 0x5f89, 0x1, 0x0);
        gbc.writeMem(0x4565, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3d78, gbc.sp());
        EXPECT(0x4567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0258
        gbc.setState(0x4c02, 0xee75, 0xe410, 0x7a59, 0x7141, 0xc35f, 0x0, 0x0);
        gbc.writeMem(0x4c02, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xee75, gbc.sp());
        EXPECT(0x4c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0259
        gbc.setState(0xd994, 0x633c, 0x3480, 0xcbd, 0x3b0e, 0x404b, 0x1, 0x1);
        gbc.writeMem(0xd994, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x633c, gbc.sp());
        EXPECT(0xd996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd994));
        EXPECT(0x7f, gbc.readMem(0xd995));
        // CB 7F 025A
        gbc.setState(0x488f, 0xd66f, 0x22c0, 0x599e, 0x117e, 0xdf48, 0x1, 0x0);
        gbc.writeMem(0x488f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd66f, gbc.sp());
        EXPECT(0x4891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 025B
        gbc.setState(0xcd8e, 0x74ed, 0x8d70, 0xf05a, 0x6f36, 0xf5f5, 0x0, 0x0);
        gbc.writeMem(0xcd8e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x74ed, gbc.sp());
        EXPECT(0xcd90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8e));
        EXPECT(0x7f, gbc.readMem(0xcd8f));
        // CB 7F 025C
        gbc.setState(0x5730, 0x327a, 0x9fe0, 0x7966, 0x75e9, 0xbaf2, 0x0, 0x0);
        gbc.writeMem(0x5730, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x327a, gbc.sp());
        EXPECT(0x5732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 025D
        gbc.setState(0x89d, 0xfe27, 0x2640, 0xf1e8, 0xe443, 0xd2cb, 0x1, 0x0);
        gbc.writeMem(0x89d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfe27, gbc.sp());
        EXPECT(0x89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 025E
        gbc.setState(0x34ae, 0xd798, 0xb680, 0x1c43, 0x981, 0x9bc4, 0x1, 0x1);
        gbc.writeMem(0x34ae, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd798, gbc.sp());
        EXPECT(0x34b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 025F
        gbc.setState(0x3b1d, 0xcc3a, 0x3cc0, 0x8ae1, 0xbedf, 0x38a0, 0x1, 0x0);
        gbc.writeMem(0x3b1d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcc3a, gbc.sp());
        EXPECT(0x3b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0260
        gbc.setState(0x5ea0, 0x9c27, 0x75c0, 0xb22, 0x764e, 0xb3d4, 0x0, 0x0);
        gbc.writeMem(0x5ea0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9c27, gbc.sp());
        EXPECT(0x5ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0261
        gbc.setState(0xba3f, 0x66fc, 0xd490, 0xbc48, 0x643a, 0x62ce, 0x0, 0x0);
        gbc.writeMem(0xba3f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x66fc, gbc.sp());
        EXPECT(0xba41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3f));
        EXPECT(0x7f, gbc.readMem(0xba40));
        // CB 7F 0262
        gbc.setState(0x47f5, 0xa1c3, 0xb0d0, 0x28e1, 0x20e4, 0xf33d, 0x0, 0x1);
        gbc.writeMem(0x47f5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa1c3, gbc.sp());
        EXPECT(0x47f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0263
        gbc.setState(0x584b, 0x51e8, 0xb7c0, 0x6534, 0xd9ae, 0xd6d7, 0x0, 0x0);
        gbc.writeMem(0x584b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x51e8, gbc.sp());
        EXPECT(0x584d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0264
        gbc.setState(0x3706, 0x20c5, 0xb70, 0xc1e2, 0x3910, 0x6c64, 0x1, 0x1);
        gbc.writeMem(0x3706, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x20c5, gbc.sp());
        EXPECT(0x3708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0265
        gbc.setState(0x7eb6, 0x386b, 0x6a20, 0x96a2, 0x48c, 0x1ae0, 0x1, 0x1);
        gbc.writeMem(0x7eb6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x386b, gbc.sp());
        EXPECT(0x7eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0266
        gbc.setState(0xe765, 0xd328, 0x6440, 0xfbc2, 0xe7e5, 0x6956, 0x1, 0x0);
        gbc.writeMem(0xe765, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd328, gbc.sp());
        EXPECT(0xe767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe765));
        EXPECT(0x7f, gbc.readMem(0xe766));
        // CB 7F 0267
        gbc.setState(0x81ce, 0xa5ec, 0xc850, 0x2e8c, 0x7c6b, 0xb180, 0x1, 0x0);
        gbc.writeMem(0x81ce, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa5ec, gbc.sp());
        EXPECT(0x81d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ce));
        EXPECT(0x7f, gbc.readMem(0x81cf));
        // CB 7F 0268
        gbc.setState(0x9b2f, 0xdb3a, 0x7670, 0xd5f6, 0x1e75, 0x3288, 0x0, 0x1);
        gbc.writeMem(0x9b2f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdb3a, gbc.sp());
        EXPECT(0x9b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2f));
        EXPECT(0x7f, gbc.readMem(0x9b30));
        // CB 7F 0269
        gbc.setState(0x5901, 0x74fc, 0x8ae0, 0x5598, 0x8d25, 0x14ab, 0x0, 0x0);
        gbc.writeMem(0x5901, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x74fc, gbc.sp());
        EXPECT(0x5903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 026A
        gbc.setState(0x35c7, 0x934a, 0x7540, 0x4f0b, 0xa961, 0x6b64, 0x0, 0x0);
        gbc.writeMem(0x35c7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x934a, gbc.sp());
        EXPECT(0x35c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 026B
        gbc.setState(0xd698, 0x873, 0x1b10, 0xe615, 0x210f, 0x5233, 0x1, 0x1);
        gbc.writeMem(0xd698, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x873, gbc.sp());
        EXPECT(0xd69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd698));
        EXPECT(0x7f, gbc.readMem(0xd699));
        // CB 7F 026C
        gbc.setState(0x2ec4, 0xd783, 0xd90, 0x81f, 0x820c, 0x29ba, 0x1, 0x1);
        gbc.writeMem(0x2ec4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd783, gbc.sp());
        EXPECT(0x2ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 026D
        gbc.setState(0x34ba, 0xa4a, 0xaee0, 0x173b, 0x1cfe, 0x9b9, 0x1, 0x1);
        gbc.writeMem(0x34ba, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa4a, gbc.sp());
        EXPECT(0x34bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 026E
        gbc.setState(0xe0b4, 0xfced, 0x1c10, 0xf2d4, 0x4ba, 0xfe3b, 0x1, 0x0);
        gbc.writeMem(0xe0b4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfced, gbc.sp());
        EXPECT(0xe0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b4));
        EXPECT(0x7f, gbc.readMem(0xe0b5));
        // CB 7F 026F
        gbc.setState(0x7bec, 0x8eb4, 0xa5e0, 0x6c8b, 0x7c2e, 0xca5f, 0x0, 0x1);
        gbc.writeMem(0x7bec, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8eb4, gbc.sp());
        EXPECT(0x7bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0270
        gbc.setState(0xa05c, 0x548c, 0xf0, 0x1e52, 0x84f8, 0x48d0, 0x1, 0x1);
        gbc.writeMem(0xa05c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0xa05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05c));
        EXPECT(0x7f, gbc.readMem(0xa05d));
        // CB 7F 0272
        gbc.setState(0x1f10, 0x5d4f, 0x8e00, 0x225b, 0x6827, 0x2014, 0x1, 0x0);
        gbc.writeMem(0x1f10, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5d4f, gbc.sp());
        EXPECT(0x1f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0273
        gbc.setState(0xb29, 0xd823, 0x2980, 0xb252, 0x86b3, 0xeb75, 0x0, 0x0);
        gbc.writeMem(0xb29, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd823, gbc.sp());
        EXPECT(0xb2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0274
        gbc.setState(0x792b, 0xf726, 0xe900, 0x7e2a, 0x1789, 0xe642, 0x0, 0x0);
        gbc.writeMem(0x792b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf726, gbc.sp());
        EXPECT(0x792d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0275
        gbc.setState(0xae2f, 0x4674, 0x99c0, 0x8cda, 0x27b9, 0x724f, 0x1, 0x0);
        gbc.writeMem(0xae2f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4674, gbc.sp());
        EXPECT(0xae31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae2f));
        EXPECT(0x7f, gbc.readMem(0xae30));
        // CB 7F 0276
        gbc.setState(0xe59a, 0x6d38, 0x61b0, 0x2542, 0x5c02, 0x3f5e, 0x0, 0x1);
        gbc.writeMem(0xe59a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6d38, gbc.sp());
        EXPECT(0xe59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59a));
        EXPECT(0x7f, gbc.readMem(0xe59b));
        // CB 7F 0277
        gbc.setState(0x5d79, 0x8e8d, 0xe360, 0x89ea, 0xdf1a, 0x9ce4, 0x0, 0x1);
        gbc.writeMem(0x5d79, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8e8d, gbc.sp());
        EXPECT(0x5d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0278
        gbc.setState(0x5676, 0x1c1d, 0x2380, 0x6cad, 0x8785, 0xb3f6, 0x0, 0x0);
        gbc.writeMem(0x5676, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1c1d, gbc.sp());
        EXPECT(0x5678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0279
        gbc.setState(0xad99, 0x5014, 0xa30, 0x5beb, 0x2c4, 0x9492, 0x1, 0x0);
        gbc.writeMem(0xad99, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5014, gbc.sp());
        EXPECT(0xad9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad99));
        EXPECT(0x7f, gbc.readMem(0xad9a));
        // CB 7F 027A
        gbc.setState(0x2441, 0xb226, 0xf6c0, 0x5d8a, 0x2cb2, 0xeae6, 0x0, 0x0);
        gbc.writeMem(0x2441, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb226, gbc.sp());
        EXPECT(0x2443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 027B
        gbc.setState(0x5a5, 0x8a66, 0xca00, 0x5732, 0xd790, 0xe84e, 0x0, 0x0);
        gbc.writeMem(0x5a5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8a66, gbc.sp());
        EXPECT(0x5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 027C
        gbc.setState(0x4b5, 0x9890, 0xf410, 0x4523, 0x228, 0x8496, 0x0, 0x0);
        gbc.writeMem(0x4b5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9890, gbc.sp());
        EXPECT(0x4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 027D
        gbc.setState(0xc09f, 0x8d7e, 0xce10, 0x5c29, 0x2870, 0x5aa1, 0x1, 0x1);
        gbc.writeMem(0xc09f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8d7e, gbc.sp());
        EXPECT(0xc0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09f));
        EXPECT(0x7f, gbc.readMem(0xc0a0));
        // CB 7F 027E
        gbc.setState(0xa309, 0x534a, 0xa860, 0xac6f, 0x42a7, 0x77f2, 0x1, 0x0);
        gbc.writeMem(0xa309, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x534a, gbc.sp());
        EXPECT(0xa30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa309));
        EXPECT(0x7f, gbc.readMem(0xa30a));
        // CB 7F 027F
        gbc.setState(0x83dc, 0x12b9, 0x1fa0, 0xab69, 0x7ad4, 0xd0ca, 0x1, 0x1);
        gbc.writeMem(0x83dc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x12b9, gbc.sp());
        EXPECT(0x83de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83dc));
        EXPECT(0x7f, gbc.readMem(0x83dd));
        // CB 7F 0280
        gbc.setState(0xf4d, 0xcad0, 0x69b0, 0x57dc, 0x3bd9, 0x692f, 0x0, 0x1);
        gbc.writeMem(0xf4d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcad0, gbc.sp());
        EXPECT(0xf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0281
        gbc.setState(0xd84e, 0x724f, 0xbe30, 0x5df2, 0x2701, 0x1d5, 0x0, 0x0);
        gbc.writeMem(0xd84e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x724f, gbc.sp());
        EXPECT(0xd850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84e));
        EXPECT(0x7f, gbc.readMem(0xd84f));
        // CB 7F 0282
        gbc.setState(0xb5a1, 0x788a, 0x6900, 0x49d0, 0x8683, 0x3387, 0x1, 0x1);
        gbc.writeMem(0xb5a1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x788a, gbc.sp());
        EXPECT(0xb5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a1));
        EXPECT(0x7f, gbc.readMem(0xb5a2));
        // CB 7F 0283
        gbc.setState(0x9380, 0x4a82, 0x21b0, 0x8bc2, 0x7642, 0xae1c, 0x1, 0x0);
        gbc.writeMem(0x9380, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4a82, gbc.sp());
        EXPECT(0x9382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9380));
        EXPECT(0x7f, gbc.readMem(0x9381));
        // CB 7F 0284
        gbc.setState(0x1ada, 0x5368, 0xf430, 0x39f2, 0xf6c4, 0xf525, 0x1, 0x1);
        gbc.writeMem(0x1ada, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5368, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0285
        gbc.setState(0x1ab7, 0x19b4, 0x2dd0, 0x5fa7, 0x4518, 0xa6e, 0x0, 0x1);
        gbc.writeMem(0x1ab7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x19b4, gbc.sp());
        EXPECT(0x1ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0287
        gbc.setState(0xee04, 0x701, 0xd920, 0xb78b, 0x8930, 0xf99, 0x1, 0x0);
        gbc.writeMem(0xee04, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x701, gbc.sp());
        EXPECT(0xee06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee04));
        EXPECT(0x7f, gbc.readMem(0xee05));
        // CB 7F 0288
        gbc.setState(0xc37a, 0xb4cc, 0xcb30, 0xf96d, 0xf6ae, 0x63fa, 0x1, 0x0);
        gbc.writeMem(0xc37a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb4cc, gbc.sp());
        EXPECT(0xc37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc37a));
        EXPECT(0x7f, gbc.readMem(0xc37b));
        // CB 7F 0289
        gbc.setState(0x1bb, 0x4b48, 0x4660, 0x608a, 0x1a2c, 0x9fdd, 0x1, 0x0);
        gbc.writeMem(0x1bb, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4b48, gbc.sp());
        EXPECT(0x1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 028A
        gbc.setState(0x79fb, 0xc63a, 0x1b70, 0x6e20, 0xcea9, 0x3e64, 0x1, 0x0);
        gbc.writeMem(0x79fb, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc63a, gbc.sp());
        EXPECT(0x79fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 028B
        gbc.setState(0xdcf3, 0x6db9, 0xbdf0, 0xba02, 0x4903, 0x3f5e, 0x0, 0x1);
        gbc.writeMem(0xdcf3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6db9, gbc.sp());
        EXPECT(0xdcf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf3));
        EXPECT(0x7f, gbc.readMem(0xdcf4));
        // CB 7F 028C
        gbc.setState(0xabb6, 0x89e7, 0x3790, 0xcab9, 0x1512, 0x1f7e, 0x0, 0x0);
        gbc.writeMem(0xabb6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x89e7, gbc.sp());
        EXPECT(0xabb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb6));
        EXPECT(0x7f, gbc.readMem(0xabb7));
        // CB 7F 028D
        gbc.setState(0x54ec, 0x75b1, 0xcf0, 0x474a, 0x240e, 0x3780, 0x0, 0x1);
        gbc.writeMem(0x54ec, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x75b1, gbc.sp());
        EXPECT(0x54ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 028E
        gbc.setState(0x1dae, 0xb492, 0x57c0, 0x9cf4, 0xc21a, 0x1f3, 0x0, 0x1);
        gbc.writeMem(0x1dae, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb492, gbc.sp());
        EXPECT(0x1db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 028F
        gbc.setState(0xe8a2, 0xc401, 0x8310, 0xf33b, 0xfed4, 0x3e79, 0x0, 0x1);
        gbc.writeMem(0xe8a2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc401, gbc.sp());
        EXPECT(0xe8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a2));
        EXPECT(0x7f, gbc.readMem(0xe8a3));
        // CB 7F 0290
        gbc.setState(0x7b12, 0xf04e, 0x6bb0, 0x8657, 0x142b, 0xd3d8, 0x0, 0x1);
        gbc.writeMem(0x7b12, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf04e, gbc.sp());
        EXPECT(0x7b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0291
        gbc.setState(0x72e7, 0xd6f, 0xff00, 0xfd9b, 0x37df, 0x7a94, 0x1, 0x0);
        gbc.writeMem(0x72e7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd6f, gbc.sp());
        EXPECT(0x72e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0292
        gbc.setState(0x52a0, 0xc18d, 0x5360, 0xd783, 0x1429, 0xe748, 0x1, 0x0);
        gbc.writeMem(0x52a0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc18d, gbc.sp());
        EXPECT(0x52a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0293
        gbc.setState(0x375b, 0xc96d, 0x6c10, 0xd002, 0xe217, 0xc9c2, 0x1, 0x1);
        gbc.writeMem(0x375b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc96d, gbc.sp());
        EXPECT(0x375d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0294
        gbc.setState(0xe80f, 0xd0c9, 0xc130, 0xe910, 0x6cf1, 0xcb9d, 0x0, 0x0);
        gbc.writeMem(0xe80f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd0c9, gbc.sp());
        EXPECT(0xe811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe80f));
        EXPECT(0x7f, gbc.readMem(0xe810));
        // CB 7F 0295
        gbc.setState(0xa95b, 0x50ba, 0x5d40, 0x95d0, 0x446b, 0x3fe0, 0x0, 0x1);
        gbc.writeMem(0xa95b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x50ba, gbc.sp());
        EXPECT(0xa95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95b));
        EXPECT(0x7f, gbc.readMem(0xa95c));
        // CB 7F 0296
        gbc.setState(0x87a3, 0xa11f, 0x17f0, 0x31ea, 0xd1, 0xd12b, 0x1, 0x1);
        gbc.writeMem(0x87a3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa11f, gbc.sp());
        EXPECT(0x87a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a3));
        EXPECT(0x7f, gbc.readMem(0x87a4));
        // CB 7F 0297
        gbc.setState(0x1b0f, 0x7021, 0x7c50, 0x35a9, 0x524b, 0xb023, 0x1, 0x0);
        gbc.writeMem(0x1b0f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7021, gbc.sp());
        EXPECT(0x1b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0299
        gbc.setState(0x7b8f, 0xfbd0, 0xfdc0, 0x124e, 0x968f, 0x9c2, 0x0, 0x1);
        gbc.writeMem(0x7b8f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfbd0, gbc.sp());
        EXPECT(0x7b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 029A
        gbc.setState(0xa23a, 0x2d12, 0x74c0, 0xee7e, 0x8f75, 0x8d6, 0x1, 0x1);
        gbc.writeMem(0xa23a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2d12, gbc.sp());
        EXPECT(0xa23c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23a));
        EXPECT(0x7f, gbc.readMem(0xa23b));
        // CB 7F 029B
        gbc.setState(0x98c3, 0xc551, 0x67e0, 0x4d14, 0xc029, 0x20c8, 0x1, 0x0);
        gbc.writeMem(0x98c3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc551, gbc.sp());
        EXPECT(0x98c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c3));
        EXPECT(0x7f, gbc.readMem(0x98c4));
        // CB 7F 029C
        gbc.setState(0x14b0, 0xc6b5, 0x9cd0, 0x93b8, 0x3f1a, 0x6308, 0x1, 0x1);
        gbc.writeMem(0x14b0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc6b5, gbc.sp());
        EXPECT(0x14b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 029D
        gbc.setState(0x399e, 0x6f25, 0x14a0, 0x88ec, 0xb7e9, 0xceb0, 0x0, 0x0);
        gbc.writeMem(0x399e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6f25, gbc.sp());
        EXPECT(0x39a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 029E
        gbc.setState(0xc42e, 0xb438, 0x9740, 0xdf93, 0x3b98, 0x2896, 0x0, 0x0);
        gbc.writeMem(0xc42e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb438, gbc.sp());
        EXPECT(0xc430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42e));
        EXPECT(0x7f, gbc.readMem(0xc42f));
        // CB 7F 02A1
        gbc.setState(0xda1c, 0xd3e3, 0xfee0, 0x90d9, 0x4641, 0xbf1e, 0x0, 0x1);
        gbc.writeMem(0xda1c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd3e3, gbc.sp());
        EXPECT(0xda1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1c));
        EXPECT(0x7f, gbc.readMem(0xda1d));
        // CB 7F 02A2
        gbc.setState(0x105, 0x23b7, 0x86f0, 0xf5f, 0x5a5d, 0x86e, 0x1, 0x1);
        gbc.writeMem(0x105, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x23b7, gbc.sp());
        EXPECT(0x107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02A3
        gbc.setState(0x64eb, 0x92c7, 0xcc20, 0xb8b8, 0xb1f6, 0x4861, 0x1, 0x1);
        gbc.writeMem(0x64eb, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x92c7, gbc.sp());
        EXPECT(0x64ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02A4
        gbc.setState(0x6947, 0x39d0, 0x4ec0, 0x941f, 0x1575, 0x53ad, 0x1, 0x0);
        gbc.writeMem(0x6947, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x39d0, gbc.sp());
        EXPECT(0x6949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02A5
        gbc.setState(0x63e8, 0xf95a, 0xd7f0, 0x83ab, 0xa40, 0x73ce, 0x1, 0x1);
        gbc.writeMem(0x63e8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf95a, gbc.sp());
        EXPECT(0x63ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02A6
        gbc.setState(0xc19, 0x1925, 0x2ab0, 0x74ee, 0x24ac, 0x6948, 0x1, 0x0);
        gbc.writeMem(0xc19, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1925, gbc.sp());
        EXPECT(0xc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02A7
        gbc.setState(0xab5e, 0x7d7f, 0x75e0, 0xe52f, 0x4fe0, 0xd54a, 0x1, 0x1);
        gbc.writeMem(0xab5e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7d7f, gbc.sp());
        EXPECT(0xab60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5e));
        EXPECT(0x7f, gbc.readMem(0xab5f));
        // CB 7F 02A8
        gbc.setState(0x84ad, 0xc07b, 0x55b0, 0xcca5, 0x9a07, 0x8c17, 0x0, 0x1);
        gbc.writeMem(0x84ad, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc07b, gbc.sp());
        EXPECT(0x84af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ad));
        EXPECT(0x7f, gbc.readMem(0x84ae));
        // CB 7F 02A9
        gbc.setState(0xa82c, 0x40e1, 0xc080, 0x4ad, 0xde08, 0x78e7, 0x0, 0x0);
        gbc.writeMem(0xa82c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x40e1, gbc.sp());
        EXPECT(0xa82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82c));
        EXPECT(0x7f, gbc.readMem(0xa82d));
        // CB 7F 02AA
        gbc.setState(0x5b05, 0x4506, 0xa2f0, 0x56cb, 0xadfc, 0x7730, 0x0, 0x1);
        gbc.writeMem(0x5b05, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4506, gbc.sp());
        EXPECT(0x5b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02AB
        gbc.setState(0x679, 0xc5a0, 0x9030, 0x65d6, 0x2328, 0x950, 0x1, 0x1);
        gbc.writeMem(0x679, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc5a0, gbc.sp());
        EXPECT(0x67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02AE
        gbc.setState(0xc582, 0x9784, 0xc720, 0x87b2, 0x5772, 0xdf29, 0x1, 0x1);
        gbc.writeMem(0xc582, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9784, gbc.sp());
        EXPECT(0xc584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc582));
        EXPECT(0x7f, gbc.readMem(0xc583));
        // CB 7F 02AF
        gbc.setState(0x6855, 0x3966, 0x2ca0, 0x95eb, 0x8711, 0xd717, 0x1, 0x1);
        gbc.writeMem(0x6855, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3966, gbc.sp());
        EXPECT(0x6857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02B1
        gbc.setState(0x83b7, 0x5c83, 0x13f0, 0x637e, 0x2c93, 0x1702, 0x0, 0x0);
        gbc.writeMem(0x83b7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5c83, gbc.sp());
        EXPECT(0x83b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b7));
        EXPECT(0x7f, gbc.readMem(0x83b8));
        // CB 7F 02B2
        gbc.setState(0x4789, 0x3112, 0xabf0, 0x9798, 0xfe3c, 0x38a3, 0x0, 0x0);
        gbc.writeMem(0x4789, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3112, gbc.sp());
        EXPECT(0x478b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02B3
        gbc.setState(0x381e, 0xefc0, 0x26f0, 0xf3e4, 0xcef9, 0xea0d, 0x0, 0x0);
        gbc.writeMem(0x381e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xefc0, gbc.sp());
        EXPECT(0x3820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02B4
        gbc.setState(0x2b80, 0x77a8, 0x1390, 0x7b57, 0x5808, 0x3882, 0x1, 0x0);
        gbc.writeMem(0x2b80, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x77a8, gbc.sp());
        EXPECT(0x2b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02B5
        gbc.setState(0x219b, 0xe077, 0x45c0, 0x5afc, 0xcd54, 0x9472, 0x0, 0x0);
        gbc.writeMem(0x219b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe077, gbc.sp());
        EXPECT(0x219d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02B6
        gbc.setState(0xa35a, 0x791d, 0x71b0, 0xa1fe, 0x7bd1, 0x8a15, 0x0, 0x0);
        gbc.writeMem(0xa35a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x791d, gbc.sp());
        EXPECT(0xa35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35a));
        EXPECT(0x7f, gbc.readMem(0xa35b));
        // CB 7F 02B7
        gbc.setState(0x70d2, 0x5958, 0x58c0, 0x9ab4, 0x1ffc, 0xf7c, 0x0, 0x1);
        gbc.writeMem(0x70d2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5958, gbc.sp());
        EXPECT(0x70d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02B8
        gbc.setState(0xdec0, 0x74d, 0x3cc0, 0x6769, 0x3ecc, 0xd0fe, 0x0, 0x1);
        gbc.writeMem(0xdec0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x74d, gbc.sp());
        EXPECT(0xdec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec0));
        EXPECT(0x7f, gbc.readMem(0xdec1));
        // CB 7F 02B9
        gbc.setState(0x5624, 0xe6ea, 0x5360, 0xcc9c, 0x2010, 0x4799, 0x1, 0x1);
        gbc.writeMem(0x5624, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe6ea, gbc.sp());
        EXPECT(0x5626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02BA
        gbc.setState(0x92ae, 0xb184, 0xd960, 0x6494, 0xbdcf, 0xeb8e, 0x0, 0x0);
        gbc.writeMem(0x92ae, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb184, gbc.sp());
        EXPECT(0x92b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ae));
        EXPECT(0x7f, gbc.readMem(0x92af));
        // CB 7F 02BB
        gbc.setState(0xdc10, 0x1b3d, 0xcce0, 0x8e1a, 0xd8ce, 0xfccb, 0x1, 0x1);
        gbc.writeMem(0xdc10, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1b3d, gbc.sp());
        EXPECT(0xdc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc10));
        EXPECT(0x7f, gbc.readMem(0xdc11));
        // CB 7F 02BC
        gbc.setState(0x498, 0xdab2, 0xbf40, 0xc44d, 0x9f1f, 0xee02, 0x0, 0x0);
        gbc.writeMem(0x498, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdab2, gbc.sp());
        EXPECT(0x49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02BE
        gbc.setState(0x56b2, 0xec14, 0x1550, 0x20e9, 0xf4f5, 0x18d9, 0x1, 0x1);
        gbc.writeMem(0x56b2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xec14, gbc.sp());
        EXPECT(0x56b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02BF
        gbc.setState(0x8c1, 0x4df7, 0x2980, 0x79ed, 0xe802, 0xbe8b, 0x0, 0x1);
        gbc.writeMem(0x8c1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4df7, gbc.sp());
        EXPECT(0x8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02C0
        gbc.setState(0x4a52, 0xf2c2, 0xd5f0, 0x5055, 0x3c34, 0xc659, 0x0, 0x1);
        gbc.writeMem(0x4a52, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf2c2, gbc.sp());
        EXPECT(0x4a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02C1
        gbc.setState(0xbde, 0x982, 0x9e80, 0xb31a, 0x5152, 0xfea, 0x0, 0x1);
        gbc.writeMem(0xbde, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x982, gbc.sp());
        EXPECT(0xbe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02C2
        gbc.setState(0xee80, 0x3f57, 0x2910, 0x1c26, 0x7f20, 0xcb51, 0x0, 0x0);
        gbc.writeMem(0xee80, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3f57, gbc.sp());
        EXPECT(0xee82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee80));
        EXPECT(0x7f, gbc.readMem(0xee81));
        // CB 7F 02C3
        gbc.setState(0xb574, 0x4e7f, 0xf040, 0x7ccb, 0xba58, 0x872f, 0x1, 0x0);
        gbc.writeMem(0xb574, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4e7f, gbc.sp());
        EXPECT(0xb576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb574));
        EXPECT(0x7f, gbc.readMem(0xb575));
        // CB 7F 02C4
        gbc.setState(0xddd5, 0x3507, 0x7e00, 0x748b, 0x2346, 0x626, 0x1, 0x1);
        gbc.writeMem(0xddd5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3507, gbc.sp());
        EXPECT(0xddd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd5));
        EXPECT(0x7f, gbc.readMem(0xddd6));
        // CB 7F 02C5
        gbc.setState(0x15e, 0xe9f4, 0x7f40, 0xef36, 0x4cd1, 0xd30b, 0x1, 0x0);
        gbc.writeMem(0x15e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe9f4, gbc.sp());
        EXPECT(0x160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02C6
        gbc.setState(0xcddf, 0xc887, 0xe510, 0x793f, 0xe268, 0xcd33, 0x1, 0x1);
        gbc.writeMem(0xcddf, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc887, gbc.sp());
        EXPECT(0xcde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcddf));
        EXPECT(0x7f, gbc.readMem(0xcde0));
        // CB 7F 02C7
        gbc.setState(0x3ca9, 0xc467, 0xf740, 0x24e5, 0x2343, 0x457, 0x1, 0x1);
        gbc.writeMem(0x3ca9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc467, gbc.sp());
        EXPECT(0x3cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02C9
        gbc.setState(0x35d8, 0xae86, 0x29a0, 0x81ea, 0x483b, 0xf768, 0x0, 0x0);
        gbc.writeMem(0x35d8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xae86, gbc.sp());
        EXPECT(0x35da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02CB
        gbc.setState(0xa07, 0xcc24, 0x7170, 0x9623, 0xd49a, 0x3883, 0x0, 0x1);
        gbc.writeMem(0xa07, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcc24, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02CC
        gbc.setState(0xb16b, 0x6b30, 0xc290, 0xe46a, 0x7fc0, 0x5d1b, 0x1, 0x0);
        gbc.writeMem(0xb16b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6b30, gbc.sp());
        EXPECT(0xb16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16b));
        EXPECT(0x7f, gbc.readMem(0xb16c));
        // CB 7F 02CD
        gbc.setState(0x1735, 0x5b98, 0x3f80, 0xa966, 0x358e, 0xe52, 0x1, 0x1);
        gbc.writeMem(0x1735, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5b98, gbc.sp());
        EXPECT(0x1737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02CE
        gbc.setState(0x463d, 0x6589, 0xabc0, 0x7976, 0x75c9, 0x6026, 0x1, 0x0);
        gbc.writeMem(0x463d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6589, gbc.sp());
        EXPECT(0x463f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02CF
        gbc.setState(0x9d2a, 0x7828, 0xc940, 0xb0cc, 0xc2c6, 0x54, 0x1, 0x1);
        gbc.writeMem(0x9d2a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7828, gbc.sp());
        EXPECT(0x9d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2a));
        EXPECT(0x7f, gbc.readMem(0x9d2b));
        // CB 7F 02D0
        gbc.setState(0xe4c7, 0xa297, 0x48a0, 0x642a, 0x46ed, 0xc64d, 0x1, 0x1);
        gbc.writeMem(0xe4c7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa297, gbc.sp());
        EXPECT(0xe4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c7));
        EXPECT(0x7f, gbc.readMem(0xe4c8));
        // CB 7F 02D1
        gbc.setState(0xd6c0, 0x73f2, 0x3ad0, 0xb0c9, 0x4860, 0xc63, 0x1, 0x0);
        gbc.writeMem(0xd6c0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x73f2, gbc.sp());
        EXPECT(0xd6c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c0));
        EXPECT(0x7f, gbc.readMem(0xd6c1));
        // CB 7F 02D2
        gbc.setState(0x43f8, 0x1feb, 0x5670, 0x820f, 0x9ea2, 0x1335, 0x0, 0x0);
        gbc.writeMem(0x43f8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1feb, gbc.sp());
        EXPECT(0x43fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02D3
        gbc.setState(0x870b, 0xa39, 0xadd0, 0x90b7, 0x721e, 0x8038, 0x1, 0x1);
        gbc.writeMem(0x870b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa39, gbc.sp());
        EXPECT(0x870d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870b));
        EXPECT(0x7f, gbc.readMem(0x870c));
        // CB 7F 02D4
        gbc.setState(0xb4be, 0x78a4, 0x4bd0, 0xa99d, 0x398e, 0x84e4, 0x0, 0x0);
        gbc.writeMem(0xb4be, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x78a4, gbc.sp());
        EXPECT(0xb4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4be));
        EXPECT(0x7f, gbc.readMem(0xb4bf));
        // CB 7F 02D5
        gbc.setState(0x47c4, 0x334f, 0xb7a0, 0x2a0e, 0x57c4, 0xfcc0, 0x0, 0x1);
        gbc.writeMem(0x47c4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x334f, gbc.sp());
        EXPECT(0x47c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02D6
        gbc.setState(0x8f5a, 0x7131, 0x6f50, 0x29b3, 0x4b18, 0x151a, 0x1, 0x0);
        gbc.writeMem(0x8f5a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7131, gbc.sp());
        EXPECT(0x8f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5a));
        EXPECT(0x7f, gbc.readMem(0x8f5b));
        // CB 7F 02D7
        gbc.setState(0x80a, 0x61d8, 0xdc00, 0x7d3b, 0x7920, 0xb3a7, 0x1, 0x1);
        gbc.writeMem(0x80a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x61d8, gbc.sp());
        EXPECT(0x80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02D8
        gbc.setState(0xa694, 0xb899, 0xd340, 0x2725, 0x78c3, 0xf757, 0x1, 0x1);
        gbc.writeMem(0xa694, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb899, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa694));
        EXPECT(0x7f, gbc.readMem(0xa695));
        // CB 7F 02D9
        gbc.setState(0x8c67, 0x6b1d, 0xea40, 0xcf2d, 0x8ba2, 0x5c92, 0x0, 0x1);
        gbc.writeMem(0x8c67, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6b1d, gbc.sp());
        EXPECT(0x8c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c67));
        EXPECT(0x7f, gbc.readMem(0x8c68));
        // CB 7F 02DA
        gbc.setState(0x1e81, 0x3deb, 0x55a0, 0xaedd, 0xa0c3, 0xca4, 0x0, 0x1);
        gbc.writeMem(0x1e81, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3deb, gbc.sp());
        EXPECT(0x1e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02DB
        gbc.setState(0x8536, 0x3427, 0x7fd0, 0x33e, 0xed2f, 0x2886, 0x1, 0x1);
        gbc.writeMem(0x8536, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3427, gbc.sp());
        EXPECT(0x8538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8536));
        EXPECT(0x7f, gbc.readMem(0x8537));
        // CB 7F 02DC
        gbc.setState(0x4174, 0x7812, 0x9b40, 0x134e, 0xcd64, 0xe7bb, 0x1, 0x0);
        gbc.writeMem(0x4174, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7812, gbc.sp());
        EXPECT(0x4176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02DD
        gbc.setState(0x249f, 0xdcb0, 0x9ae0, 0xd1ee, 0x8c6b, 0xaf8a, 0x1, 0x0);
        gbc.writeMem(0x249f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdcb0, gbc.sp());
        EXPECT(0x24a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02DE
        gbc.setState(0x8ec1, 0x7967, 0xc050, 0x8cfc, 0x1951, 0x3e0e, 0x1, 0x0);
        gbc.writeMem(0x8ec1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7967, gbc.sp());
        EXPECT(0x8ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec1));
        EXPECT(0x7f, gbc.readMem(0x8ec2));
        // CB 7F 02DF
        gbc.setState(0x5b60, 0x74d8, 0x7980, 0x9ae4, 0x4011, 0x6207, 0x0, 0x1);
        gbc.writeMem(0x5b60, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x74d8, gbc.sp());
        EXPECT(0x5b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02E0
        gbc.setState(0x1142, 0xc716, 0xd640, 0x2cd6, 0x52e3, 0xdba, 0x0, 0x0);
        gbc.writeMem(0x1142, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc716, gbc.sp());
        EXPECT(0x1144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02E1
        gbc.setState(0xe275, 0xe00e, 0xe9a0, 0xcaf5, 0x1347, 0xe806, 0x0, 0x0);
        gbc.writeMem(0xe275, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe00e, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe275));
        EXPECT(0x7f, gbc.readMem(0xe276));
        // CB 7F 02E2
        gbc.setState(0xac15, 0xceb1, 0xc920, 0x711b, 0xfa45, 0x4420, 0x0, 0x1);
        gbc.writeMem(0xac15, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xceb1, gbc.sp());
        EXPECT(0xac17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac15));
        EXPECT(0x7f, gbc.readMem(0xac16));
        // CB 7F 02E3
        gbc.setState(0x2a51, 0x8835, 0x5ab0, 0xc95a, 0xcf94, 0x8a15, 0x0, 0x1);
        gbc.writeMem(0x2a51, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8835, gbc.sp());
        EXPECT(0x2a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02E4
        gbc.setState(0xe8f5, 0xecfe, 0xd0f0, 0x372, 0xbb3, 0x8e7c, 0x0, 0x0);
        gbc.writeMem(0xe8f5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xecfe, gbc.sp());
        EXPECT(0xe8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f5));
        EXPECT(0x7f, gbc.readMem(0xe8f6));
        // CB 7F 02E5
        gbc.setState(0x3601, 0xe813, 0x4930, 0x5929, 0xc076, 0x6bec, 0x1, 0x1);
        gbc.writeMem(0x3601, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe813, gbc.sp());
        EXPECT(0x3603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02E6
        gbc.setState(0x1e65, 0xaa09, 0x3fc0, 0x91f, 0x25f8, 0x5c35, 0x0, 0x0);
        gbc.writeMem(0x1e65, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaa09, gbc.sp());
        EXPECT(0x1e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02E7
        gbc.setState(0xaa2a, 0xd28f, 0x1fa0, 0xc852, 0x672a, 0x8e49, 0x1, 0x1);
        gbc.writeMem(0xaa2a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd28f, gbc.sp());
        EXPECT(0xaa2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2a));
        EXPECT(0x7f, gbc.readMem(0xaa2b));
        // CB 7F 02E8
        gbc.setState(0x7fdb, 0x487c, 0x9460, 0x36d5, 0x612e, 0x760, 0x0, 0x0);
        gbc.writeMem(0x7fdb, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x487c, gbc.sp());
        EXPECT(0x7fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02E9
        gbc.setState(0xaf14, 0x5b6, 0x2030, 0xc44f, 0x3c39, 0x8ab3, 0x1, 0x0);
        gbc.writeMem(0xaf14, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5b6, gbc.sp());
        EXPECT(0xaf16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf14));
        EXPECT(0x7f, gbc.readMem(0xaf15));
        // CB 7F 02EA
        gbc.setState(0xc7b7, 0xe8d, 0x17e0, 0x78f9, 0xe238, 0xef4c, 0x0, 0x0);
        gbc.writeMem(0xc7b7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe8d, gbc.sp());
        EXPECT(0xc7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b7));
        EXPECT(0x7f, gbc.readMem(0xc7b8));
        // CB 7F 02EB
        gbc.setState(0x664b, 0xe0e7, 0x1710, 0xf03, 0xa396, 0xa47d, 0x0, 0x0);
        gbc.writeMem(0x664b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe0e7, gbc.sp());
        EXPECT(0x664d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02EC
        gbc.setState(0x5a59, 0x4b3f, 0xf570, 0xfe21, 0x2d50, 0xf249, 0x0, 0x0);
        gbc.writeMem(0x5a59, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4b3f, gbc.sp());
        EXPECT(0x5a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02ED
        gbc.setState(0xc2d0, 0x82da, 0x320, 0x802d, 0xde42, 0x64b8, 0x0, 0x1);
        gbc.writeMem(0xc2d0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x82da, gbc.sp());
        EXPECT(0xc2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d0));
        EXPECT(0x7f, gbc.readMem(0xc2d1));
        // CB 7F 02EE
        gbc.setState(0x8276, 0x9d12, 0x8340, 0xe8cf, 0x36aa, 0x2056, 0x0, 0x1);
        gbc.writeMem(0x8276, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9d12, gbc.sp());
        EXPECT(0x8278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8276));
        EXPECT(0x7f, gbc.readMem(0x8277));
        // CB 7F 02EF
        gbc.setState(0x86ad, 0xa2b2, 0x25b0, 0xfd78, 0x657d, 0xd75c, 0x1, 0x0);
        gbc.writeMem(0x86ad, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa2b2, gbc.sp());
        EXPECT(0x86af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ad));
        EXPECT(0x7f, gbc.readMem(0x86ae));
        // CB 7F 02F0
        gbc.setState(0x24cc, 0x9ce8, 0x7750, 0xcb3e, 0x504d, 0x431, 0x1, 0x0);
        gbc.writeMem(0x24cc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9ce8, gbc.sp());
        EXPECT(0x24ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02F1
        gbc.setState(0x9422, 0x9020, 0xd330, 0x5c94, 0x260, 0x42da, 0x1, 0x0);
        gbc.writeMem(0x9422, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9020, gbc.sp());
        EXPECT(0x9424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9422));
        EXPECT(0x7f, gbc.readMem(0x9423));
        // CB 7F 02F2
        gbc.setState(0x1315, 0x748, 0xdeb0, 0xe74, 0xf92, 0xb231, 0x1, 0x1);
        gbc.writeMem(0x1315, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x748, gbc.sp());
        EXPECT(0x1317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02F3
        gbc.setState(0x5dc4, 0x1623, 0xc790, 0xc206, 0xf358, 0x3ba9, 0x1, 0x0);
        gbc.writeMem(0x5dc4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1623, gbc.sp());
        EXPECT(0x5dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02F4
        gbc.setState(0x3a45, 0xa754, 0x6610, 0x3605, 0xfbd5, 0x2606, 0x0, 0x1);
        gbc.writeMem(0x3a45, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa754, gbc.sp());
        EXPECT(0x3a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02F5
        gbc.setState(0xa52a, 0x494f, 0x390, 0x8764, 0x62df, 0x5513, 0x1, 0x1);
        gbc.writeMem(0xa52a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x494f, gbc.sp());
        EXPECT(0xa52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52a));
        EXPECT(0x7f, gbc.readMem(0xa52b));
        // CB 7F 02F6
        gbc.setState(0x1a3d, 0x10b8, 0x2dc0, 0xc74e, 0xd581, 0xb12, 0x0, 0x1);
        gbc.writeMem(0x1a3d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x10b8, gbc.sp());
        EXPECT(0x1a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02F7
        gbc.setState(0x14e4, 0x8f2d, 0x1ed0, 0xb415, 0x9e6e, 0x961e, 0x0, 0x1);
        gbc.writeMem(0x14e4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8f2d, gbc.sp());
        EXPECT(0x14e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02F8
        gbc.setState(0x8482, 0x104d, 0x95e0, 0x6828, 0x981e, 0xb25f, 0x1, 0x0);
        gbc.writeMem(0x8482, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x104d, gbc.sp());
        EXPECT(0x8484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8482));
        EXPECT(0x7f, gbc.readMem(0x8483));
        // CB 7F 02FA
        gbc.setState(0x6834, 0xa51a, 0x6fa0, 0xd861, 0xa4fe, 0x4c8f, 0x0, 0x0);
        gbc.writeMem(0x6834, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa51a, gbc.sp());
        EXPECT(0x6836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02FB
        gbc.setState(0x141d, 0x60df, 0x2df0, 0x2764, 0xe194, 0x7781, 0x0, 0x0);
        gbc.writeMem(0x141d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x60df, gbc.sp());
        EXPECT(0x141f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02FC
        gbc.setState(0x6d93, 0x17d7, 0x5470, 0xfe8d, 0x7d20, 0xafaf, 0x0, 0x0);
        gbc.writeMem(0x6d93, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x17d7, gbc.sp());
        EXPECT(0x6d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 02FD
        gbc.setState(0x3eb7, 0x922e, 0x37e0, 0x1b78, 0x8c3b, 0xb64f, 0x0, 0x1);
        gbc.writeMem(0x3eb7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x922e, gbc.sp());
        EXPECT(0x3eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 02FE
        gbc.setState(0xc071, 0x5d96, 0xd340, 0xd8ee, 0xfa8b, 0xce53, 0x0, 0x0);
        gbc.writeMem(0xc071, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5d96, gbc.sp());
        EXPECT(0xc073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc071));
        EXPECT(0x7f, gbc.readMem(0xc072));
        // CB 7F 02FF
        gbc.setState(0x54d8, 0x8af7, 0x2780, 0x6fce, 0xbdd2, 0xb9f5, 0x0, 0x1);
        gbc.writeMem(0x54d8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8af7, gbc.sp());
        EXPECT(0x54da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0300
        gbc.setState(0x770f, 0x1c82, 0xc070, 0x4ae3, 0x3a9a, 0xc6ff, 0x0, 0x1);
        gbc.writeMem(0x770f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1c82, gbc.sp());
        EXPECT(0x7711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0301
        gbc.setState(0x1f22, 0xff30, 0x9dc0, 0x22ae, 0x527e, 0xf406, 0x0, 0x0);
        gbc.writeMem(0x1f22, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xff30, gbc.sp());
        EXPECT(0x1f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0303
        gbc.setState(0x8197, 0x592c, 0x8690, 0xbbfa, 0x9b89, 0x234f, 0x0, 0x0);
        gbc.writeMem(0x8197, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x592c, gbc.sp());
        EXPECT(0x8199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8197));
        EXPECT(0x7f, gbc.readMem(0x8198));
        // CB 7F 0304
        gbc.setState(0x79c0, 0x4d16, 0xad30, 0x38b6, 0x869b, 0xd4b7, 0x0, 0x0);
        gbc.writeMem(0x79c0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4d16, gbc.sp());
        EXPECT(0x79c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0305
        gbc.setState(0xcf36, 0x199c, 0xc170, 0x189d, 0x79b8, 0xa69d, 0x1, 0x1);
        gbc.writeMem(0xcf36, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x199c, gbc.sp());
        EXPECT(0xcf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf36));
        EXPECT(0x7f, gbc.readMem(0xcf37));
        // CB 7F 0306
        gbc.setState(0x8c5a, 0x6ca2, 0x3d00, 0xbed2, 0xb0b4, 0x9cf, 0x1, 0x0);
        gbc.writeMem(0x8c5a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6ca2, gbc.sp());
        EXPECT(0x8c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c5a));
        EXPECT(0x7f, gbc.readMem(0x8c5b));
        // CB 7F 0307
        gbc.setState(0xe28a, 0x1263, 0xbde0, 0xfce8, 0x27ad, 0x41cc, 0x1, 0x0);
        gbc.writeMem(0xe28a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1263, gbc.sp());
        EXPECT(0xe28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28a));
        EXPECT(0x7f, gbc.readMem(0xe28b));
        // CB 7F 0308
        gbc.setState(0xde4b, 0xf605, 0xb270, 0xbc14, 0x19e8, 0x132f, 0x0, 0x1);
        gbc.writeMem(0xde4b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf605, gbc.sp());
        EXPECT(0xde4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4b));
        EXPECT(0x7f, gbc.readMem(0xde4c));
        // CB 7F 0309
        gbc.setState(0x5e56, 0x92ca, 0x33a0, 0xeb2, 0x61b6, 0x97cc, 0x1, 0x0);
        gbc.writeMem(0x5e56, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x92ca, gbc.sp());
        EXPECT(0x5e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 030B
        gbc.setState(0x2cab, 0xbaa0, 0x3790, 0x8586, 0xaf2b, 0x300b, 0x1, 0x0);
        gbc.writeMem(0x2cab, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbaa0, gbc.sp());
        EXPECT(0x2cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 030C
        gbc.setState(0x6b18, 0xa920, 0x69e0, 0x6cbd, 0xa2fa, 0xe59, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa920, gbc.sp());
        EXPECT(0x6b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 030D
        gbc.setState(0x86d1, 0x8e12, 0x94a0, 0xc52, 0x18a0, 0xda6f, 0x0, 0x1);
        gbc.writeMem(0x86d1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8e12, gbc.sp());
        EXPECT(0x86d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d1));
        EXPECT(0x7f, gbc.readMem(0x86d2));
        // CB 7F 030E
        gbc.setState(0x6754, 0x6745, 0x66e0, 0x8ca4, 0xed9e, 0x5c72, 0x1, 0x0);
        gbc.writeMem(0x6754, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6745, gbc.sp());
        EXPECT(0x6756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 030F
        gbc.setState(0x190b, 0x9e81, 0x4ae0, 0x82d4, 0xe057, 0x41e6, 0x0, 0x1);
        gbc.writeMem(0x190b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9e81, gbc.sp());
        EXPECT(0x190d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0310
        gbc.setState(0xbc5f, 0x2152, 0x5890, 0xcbe6, 0xd162, 0x517e, 0x0, 0x0);
        gbc.writeMem(0xbc5f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2152, gbc.sp());
        EXPECT(0xbc61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5f));
        EXPECT(0x7f, gbc.readMem(0xbc60));
        // CB 7F 0311
        gbc.setState(0x8b86, 0x9140, 0x40, 0x407b, 0x3ad2, 0x2d9a, 0x0, 0x1);
        gbc.writeMem(0x8b86, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9140, gbc.sp());
        EXPECT(0x8b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b86));
        EXPECT(0x7f, gbc.readMem(0x8b87));
        // CB 7F 0312
        gbc.setState(0xdf4a, 0x8caf, 0x4930, 0x4677, 0x1df4, 0x6541, 0x1, 0x1);
        gbc.writeMem(0xdf4a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8caf, gbc.sp());
        EXPECT(0xdf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4a));
        EXPECT(0x7f, gbc.readMem(0xdf4b));
        // CB 7F 0313
        gbc.setState(0x2182, 0x867c, 0xc80, 0x139a, 0x182f, 0xf27b, 0x1, 0x0);
        gbc.writeMem(0x2182, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x867c, gbc.sp());
        EXPECT(0x2184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0314
        gbc.setState(0x566e, 0x2b64, 0xa270, 0xcbaf, 0x533c, 0xd6b7, 0x0, 0x1);
        gbc.writeMem(0x566e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2b64, gbc.sp());
        EXPECT(0x5670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0315
        gbc.setState(0xa369, 0x7854, 0x81e0, 0x53ae, 0xcccc, 0xf34d, 0x0, 0x1);
        gbc.writeMem(0xa369, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7854, gbc.sp());
        EXPECT(0xa36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa369));
        EXPECT(0x7f, gbc.readMem(0xa36a));
        // CB 7F 0317
        gbc.setState(0x3d7, 0xc4dd, 0xc1c0, 0x4344, 0x8145, 0xc55a, 0x0, 0x0);
        gbc.writeMem(0x3d7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc4dd, gbc.sp());
        EXPECT(0x3d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0318
        gbc.setState(0xd790, 0x3d68, 0x1b00, 0xbb96, 0xfb9, 0xc123, 0x1, 0x0);
        gbc.writeMem(0xd790, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3d68, gbc.sp());
        EXPECT(0xd792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd790));
        EXPECT(0x7f, gbc.readMem(0xd791));
        // CB 7F 0319
        gbc.setState(0xc345, 0x2595, 0x4c0, 0x3a, 0x6798, 0xe512, 0x1, 0x0);
        gbc.writeMem(0xc345, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2595, gbc.sp());
        EXPECT(0xc347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc345));
        EXPECT(0x7f, gbc.readMem(0xc346));
        // CB 7F 031A
        gbc.setState(0x9c2e, 0xd96c, 0x1720, 0xed42, 0x90ce, 0x183c, 0x0, 0x1);
        gbc.writeMem(0x9c2e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd96c, gbc.sp());
        EXPECT(0x9c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2e));
        EXPECT(0x7f, gbc.readMem(0x9c2f));
        // CB 7F 031B
        gbc.setState(0x84e4, 0x418a, 0x6820, 0xef84, 0x3cad, 0x2848, 0x1, 0x0);
        gbc.writeMem(0x84e4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x418a, gbc.sp());
        EXPECT(0x84e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e4));
        EXPECT(0x7f, gbc.readMem(0x84e5));
        // CB 7F 031C
        gbc.setState(0x4ad1, 0xda44, 0x5460, 0xbfc6, 0xb64e, 0x6f82, 0x1, 0x1);
        gbc.writeMem(0x4ad1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xda44, gbc.sp());
        EXPECT(0x4ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 031D
        gbc.setState(0x9297, 0xcb94, 0x66c0, 0xfd43, 0x61d3, 0xedda, 0x0, 0x0);
        gbc.writeMem(0x9297, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcb94, gbc.sp());
        EXPECT(0x9299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9297));
        EXPECT(0x7f, gbc.readMem(0x9298));
        // CB 7F 031E
        gbc.setState(0xc584, 0x5d7a, 0x8470, 0xae43, 0x27bc, 0x447d, 0x0, 0x1);
        gbc.writeMem(0xc584, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5d7a, gbc.sp());
        EXPECT(0xc586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc584));
        EXPECT(0x7f, gbc.readMem(0xc585));
        // CB 7F 031F
        gbc.setState(0x6cdf, 0xe913, 0x15a0, 0x678b, 0x421d, 0x1795, 0x0, 0x1);
        gbc.writeMem(0x6cdf, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe913, gbc.sp());
        EXPECT(0x6ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0320
        gbc.setState(0x565f, 0x6bc0, 0x5e10, 0x9286, 0xe266, 0xd8f0, 0x0, 0x1);
        gbc.writeMem(0x565f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6bc0, gbc.sp());
        EXPECT(0x5661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0321
        gbc.setState(0xe3be, 0x91d7, 0x48e0, 0x15a5, 0x3556, 0x2435, 0x0, 0x1);
        gbc.writeMem(0xe3be, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x91d7, gbc.sp());
        EXPECT(0xe3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3be));
        EXPECT(0x7f, gbc.readMem(0xe3bf));
        // CB 7F 0322
        gbc.setState(0xa951, 0x843e, 0x5960, 0x97e7, 0xfce5, 0xf044, 0x0, 0x1);
        gbc.writeMem(0xa951, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x843e, gbc.sp());
        EXPECT(0xa953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa951));
        EXPECT(0x7f, gbc.readMem(0xa952));
        // CB 7F 0323
        gbc.setState(0x6fc7, 0x223d, 0x8450, 0x9bc0, 0x95cd, 0x8757, 0x0, 0x0);
        gbc.writeMem(0x6fc7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x223d, gbc.sp());
        EXPECT(0x6fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0324
        gbc.setState(0xccac, 0xad1c, 0xebb0, 0x29b6, 0xa902, 0xedc4, 0x1, 0x1);
        gbc.writeMem(0xccac, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xad1c, gbc.sp());
        EXPECT(0xccae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccac));
        EXPECT(0x7f, gbc.readMem(0xccad));
        // CB 7F 0325
        gbc.setState(0x4bc3, 0x6adb, 0x8370, 0x9bf7, 0x5c31, 0x5b12, 0x0, 0x0);
        gbc.writeMem(0x4bc3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6adb, gbc.sp());
        EXPECT(0x4bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0326
        gbc.setState(0xb330, 0xe1f1, 0xf8f0, 0xa4bb, 0x900, 0x9855, 0x0, 0x0);
        gbc.writeMem(0xb330, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe1f1, gbc.sp());
        EXPECT(0xb332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb330));
        EXPECT(0x7f, gbc.readMem(0xb331));
        // CB 7F 0327
        gbc.setState(0xcea1, 0x1383, 0x8980, 0xb263, 0x335f, 0xf12e, 0x1, 0x0);
        gbc.writeMem(0xcea1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1383, gbc.sp());
        EXPECT(0xcea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea1));
        EXPECT(0x7f, gbc.readMem(0xcea2));
        // CB 7F 0328
        gbc.setState(0x58e0, 0x1eb5, 0xafe0, 0x9d4a, 0x4983, 0x7f54, 0x0, 0x1);
        gbc.writeMem(0x58e0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1eb5, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0329
        gbc.setState(0xa42, 0xc4a8, 0xbc50, 0x46f9, 0x6ce6, 0x6f78, 0x0, 0x1);
        gbc.writeMem(0xa42, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc4a8, gbc.sp());
        EXPECT(0xa44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 032A
        gbc.setState(0xcef8, 0x268b, 0xf160, 0xe16b, 0x6cd9, 0x1ecd, 0x0, 0x1);
        gbc.writeMem(0xcef8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x268b, gbc.sp());
        EXPECT(0xcefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef8));
        EXPECT(0x7f, gbc.readMem(0xcef9));
        // CB 7F 032B
        gbc.setState(0x8c3a, 0xa707, 0x7220, 0xfafb, 0x22a6, 0x6ec3, 0x0, 0x0);
        gbc.writeMem(0x8c3a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa707, gbc.sp());
        EXPECT(0x8c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3a));
        EXPECT(0x7f, gbc.readMem(0x8c3b));
        // CB 7F 032C
        gbc.setState(0x78c1, 0x4bb3, 0xa730, 0x158c, 0xab16, 0x175f, 0x0, 0x1);
        gbc.writeMem(0x78c1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4bb3, gbc.sp());
        EXPECT(0x78c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 032D
        gbc.setState(0x4134, 0x694a, 0xa7c0, 0xd6a7, 0x6473, 0x6a05, 0x1, 0x0);
        gbc.writeMem(0x4134, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x694a, gbc.sp());
        EXPECT(0x4136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 032E
        gbc.setState(0xe699, 0xee1f, 0xba20, 0x50a8, 0xdf7a, 0xd5a8, 0x1, 0x0);
        gbc.writeMem(0xe699, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xee1f, gbc.sp());
        EXPECT(0xe69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe699));
        EXPECT(0x7f, gbc.readMem(0xe69a));
        // CB 7F 0330
        gbc.setState(0x1116, 0xb431, 0xa8a0, 0xddea, 0xd7a3, 0x4ee3, 0x0, 0x0);
        gbc.writeMem(0x1116, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb431, gbc.sp());
        EXPECT(0x1118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0331
        gbc.setState(0x388c, 0x2791, 0x6b0, 0x387e, 0x7b2b, 0xcd1f, 0x1, 0x0);
        gbc.writeMem(0x388c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2791, gbc.sp());
        EXPECT(0x388e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0332
        gbc.setState(0x143d, 0x6e02, 0x6340, 0xdfef, 0x47db, 0x9d1f, 0x1, 0x1);
        gbc.writeMem(0x143d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6e02, gbc.sp());
        EXPECT(0x143f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0333
        gbc.setState(0xe197, 0x9bfa, 0x6360, 0x5114, 0x4b63, 0x33ec, 0x0, 0x0);
        gbc.writeMem(0xe197, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9bfa, gbc.sp());
        EXPECT(0xe199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe197));
        EXPECT(0x7f, gbc.readMem(0xe198));
        // CB 7F 0334
        gbc.setState(0xef97, 0x976, 0x7eb0, 0xf89f, 0xfeb8, 0xe364, 0x1, 0x1);
        gbc.writeMem(0xef97, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x976, gbc.sp());
        EXPECT(0xef99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef97));
        EXPECT(0x7f, gbc.readMem(0xef98));
        // CB 7F 0335
        gbc.setState(0xddac, 0x224b, 0x6df0, 0x6f0c, 0x84ff, 0xbc8c, 0x1, 0x1);
        gbc.writeMem(0xddac, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x224b, gbc.sp());
        EXPECT(0xddae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddac));
        EXPECT(0x7f, gbc.readMem(0xddad));
        // CB 7F 0336
        gbc.setState(0x3227, 0x1560, 0xcd60, 0xd50, 0x77ac, 0x2520, 0x0, 0x0);
        gbc.writeMem(0x3227, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1560, gbc.sp());
        EXPECT(0x3229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0337
        gbc.setState(0x2768, 0x452, 0x8f30, 0x2a42, 0xf879, 0x81c5, 0x1, 0x0);
        gbc.writeMem(0x2768, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x452, gbc.sp());
        EXPECT(0x276a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0338
        gbc.setState(0x58fe, 0xd822, 0x7980, 0xb2b9, 0x3941, 0x90f1, 0x0, 0x0);
        gbc.writeMem(0x58fe, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd822, gbc.sp());
        EXPECT(0x5900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0339
        gbc.setState(0x14b4, 0x7ff3, 0x69d0, 0x737e, 0x317c, 0xa209, 0x0, 0x0);
        gbc.writeMem(0x14b4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7ff3, gbc.sp());
        EXPECT(0x14b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 033A
        gbc.setState(0xb4c3, 0x271c, 0x3b10, 0xc74e, 0xcf31, 0x243c, 0x0, 0x0);
        gbc.writeMem(0xb4c3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x271c, gbc.sp());
        EXPECT(0xb4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c3));
        EXPECT(0x7f, gbc.readMem(0xb4c4));
        // CB 7F 033B
        gbc.setState(0x7e05, 0x84d9, 0x6280, 0xa61b, 0xcc8a, 0x7079, 0x0, 0x0);
        gbc.writeMem(0x7e05, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x84d9, gbc.sp());
        EXPECT(0x7e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 033C
        gbc.setState(0x3e3b, 0x50b5, 0xebe0, 0x7b8d, 0xbd1d, 0xebda, 0x0, 0x1);
        gbc.writeMem(0x3e3b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x50b5, gbc.sp());
        EXPECT(0x3e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 033D
        gbc.setState(0x6adc, 0x24e2, 0x6070, 0x1b05, 0x1443, 0x31e1, 0x0, 0x0);
        gbc.writeMem(0x6adc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x24e2, gbc.sp());
        EXPECT(0x6ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 033E
        gbc.setState(0x7e2d, 0x76c7, 0x4c50, 0xf123, 0x5b2c, 0xe8fa, 0x1, 0x1);
        gbc.writeMem(0x7e2d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x76c7, gbc.sp());
        EXPECT(0x7e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 033F
        gbc.setState(0x3782, 0xfd4, 0xf60, 0x3ec0, 0x6547, 0x8824, 0x1, 0x1);
        gbc.writeMem(0x3782, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfd4, gbc.sp());
        EXPECT(0x3784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0340
        gbc.setState(0x1299, 0x2fb, 0x8800, 0x238b, 0x7b8, 0x56f5, 0x1, 0x1);
        gbc.writeMem(0x1299, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2fb, gbc.sp());
        EXPECT(0x129b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0341
        gbc.setState(0x39a9, 0x3af9, 0x5c50, 0x8989, 0x50cd, 0x6f7a, 0x1, 0x0);
        gbc.writeMem(0x39a9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0x39ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0342
        gbc.setState(0x4d1c, 0x4e8, 0xaa20, 0x1a13, 0x9122, 0xc02d, 0x1, 0x0);
        gbc.writeMem(0x4d1c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4e8, gbc.sp());
        EXPECT(0x4d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0343
        gbc.setState(0xaa38, 0x4695, 0xfd40, 0xf22f, 0x8a35, 0x7cee, 0x0, 0x0);
        gbc.writeMem(0xaa38, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4695, gbc.sp());
        EXPECT(0xaa3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa38));
        EXPECT(0x7f, gbc.readMem(0xaa39));
        // CB 7F 0344
        gbc.setState(0xa66e, 0x2aef, 0x1ad0, 0x90d8, 0x41ae, 0xee73, 0x0, 0x1);
        gbc.writeMem(0xa66e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2aef, gbc.sp());
        EXPECT(0xa670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa66e));
        EXPECT(0x7f, gbc.readMem(0xa66f));
        // CB 7F 0346
        gbc.setState(0xeeba, 0xc0b2, 0x10e0, 0x50a2, 0xa24b, 0x6989, 0x1, 0x1);
        gbc.writeMem(0xeeba, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc0b2, gbc.sp());
        EXPECT(0xeebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeba));
        EXPECT(0x7f, gbc.readMem(0xeebb));
        // CB 7F 0347
        gbc.setState(0x4c92, 0xdab3, 0x7290, 0x7529, 0x8c1f, 0x8dda, 0x0, 0x0);
        gbc.writeMem(0x4c92, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdab3, gbc.sp());
        EXPECT(0x4c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0348
        gbc.setState(0xc803, 0xb8, 0x1a00, 0xb9a8, 0xf5cf, 0x8d04, 0x1, 0x0);
        gbc.writeMem(0xc803, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb8, gbc.sp());
        EXPECT(0xc805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc803));
        EXPECT(0x7f, gbc.readMem(0xc804));
        // CB 7F 0349
        gbc.setState(0xb388, 0x23af, 0xb520, 0x6ccb, 0xf428, 0xc892, 0x1, 0x0);
        gbc.writeMem(0xb388, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x23af, gbc.sp());
        EXPECT(0xb38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb388));
        EXPECT(0x7f, gbc.readMem(0xb389));
        // CB 7F 034A
        gbc.setState(0x6a61, 0xeabf, 0x9180, 0x857e, 0x18, 0xabf7, 0x0, 0x0);
        gbc.writeMem(0x6a61, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xeabf, gbc.sp());
        EXPECT(0x6a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 034B
        gbc.setState(0xccf8, 0xff65, 0xc990, 0xdc06, 0x3ce6, 0x1d52, 0x1, 0x1);
        gbc.writeMem(0xccf8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0xccfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf8));
        EXPECT(0x7f, gbc.readMem(0xccf9));
        // CB 7F 034C
        gbc.setState(0xc5ca, 0x15d5, 0x59f0, 0xd2de, 0xa701, 0xc59c, 0x1, 0x1);
        gbc.writeMem(0xc5ca, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x15d5, gbc.sp());
        EXPECT(0xc5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ca));
        EXPECT(0x7f, gbc.readMem(0xc5cb));
        // CB 7F 034D
        gbc.setState(0xd1c5, 0xcb50, 0xad90, 0xcb93, 0x31a7, 0x46b0, 0x1, 0x0);
        gbc.writeMem(0xd1c5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcb50, gbc.sp());
        EXPECT(0xd1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c5));
        EXPECT(0x7f, gbc.readMem(0xd1c6));
        // CB 7F 034E
        gbc.setState(0x1a90, 0xe159, 0x6be0, 0x61f1, 0x1ff5, 0xacb8, 0x0, 0x0);
        gbc.writeMem(0x1a90, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe159, gbc.sp());
        EXPECT(0x1a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 034F
        gbc.setState(0xea3a, 0xa228, 0x8850, 0x81c, 0x4278, 0x7d98, 0x0, 0x0);
        gbc.writeMem(0xea3a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa228, gbc.sp());
        EXPECT(0xea3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3a));
        EXPECT(0x7f, gbc.readMem(0xea3b));
        // CB 7F 0350
        gbc.setState(0xc371, 0xdf79, 0xb7d0, 0x8d58, 0xcc88, 0x9480, 0x0, 0x0);
        gbc.writeMem(0xc371, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdf79, gbc.sp());
        EXPECT(0xc373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc371));
        EXPECT(0x7f, gbc.readMem(0xc372));
        // CB 7F 0351
        gbc.setState(0xdc5a, 0xe55a, 0x4730, 0x74df, 0xc15d, 0x3ef, 0x1, 0x1);
        gbc.writeMem(0xdc5a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe55a, gbc.sp());
        EXPECT(0xdc5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc5a));
        EXPECT(0x7f, gbc.readMem(0xdc5b));
        // CB 7F 0352
        gbc.setState(0x3517, 0x23b3, 0x5560, 0x3a77, 0xf1ca, 0xe371, 0x0, 0x0);
        gbc.writeMem(0x3517, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x23b3, gbc.sp());
        EXPECT(0x3519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0353
        gbc.setState(0xc3ac, 0xb917, 0x2190, 0x944a, 0xa5d3, 0x46ef, 0x0, 0x1);
        gbc.writeMem(0xc3ac, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb917, gbc.sp());
        EXPECT(0xc3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ac));
        EXPECT(0x7f, gbc.readMem(0xc3ad));
        // CB 7F 0354
        gbc.setState(0xa581, 0x112, 0x4b60, 0x1fed, 0xe7a2, 0x7a72, 0x0, 0x1);
        gbc.writeMem(0xa581, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x112, gbc.sp());
        EXPECT(0xa583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa581));
        EXPECT(0x7f, gbc.readMem(0xa582));
        // CB 7F 0355
        gbc.setState(0x9916, 0xb697, 0x3410, 0x356d, 0xcd7c, 0x8017, 0x1, 0x1);
        gbc.writeMem(0x9916, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb697, gbc.sp());
        EXPECT(0x9918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9916));
        EXPECT(0x7f, gbc.readMem(0x9917));
        // CB 7F 0356
        gbc.setState(0x69a6, 0x9401, 0x2130, 0x6e41, 0x1232, 0x9271, 0x0, 0x1);
        gbc.writeMem(0x69a6, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9401, gbc.sp());
        EXPECT(0x69a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0357
        gbc.setState(0x2036, 0xfe12, 0xf0c0, 0x2b78, 0x1d44, 0x1dc7, 0x0, 0x1);
        gbc.writeMem(0x2036, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfe12, gbc.sp());
        EXPECT(0x2038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0358
        gbc.setState(0xbbb1, 0xc985, 0x1110, 0x9392, 0xb095, 0xd797, 0x0, 0x1);
        gbc.writeMem(0xbbb1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc985, gbc.sp());
        EXPECT(0xbbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb1));
        EXPECT(0x7f, gbc.readMem(0xbbb2));
        // CB 7F 0359
        gbc.setState(0x61f1, 0x8cb6, 0x8b50, 0xa95b, 0x3d65, 0xd584, 0x0, 0x1);
        gbc.writeMem(0x61f1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8cb6, gbc.sp());
        EXPECT(0x61f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 035A
        gbc.setState(0xbdb1, 0xd710, 0x5430, 0xe3c2, 0xdafa, 0xf8e, 0x1, 0x1);
        gbc.writeMem(0xbdb1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd710, gbc.sp());
        EXPECT(0xbdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb1));
        EXPECT(0x7f, gbc.readMem(0xbdb2));
        // CB 7F 035B
        gbc.setState(0x2a4d, 0x7bbb, 0xf2b0, 0x6808, 0xdb51, 0x7c33, 0x0, 0x0);
        gbc.writeMem(0x2a4d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7bbb, gbc.sp());
        EXPECT(0x2a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 035C
        gbc.setState(0x6299, 0x9c8, 0xf3d0, 0x9058, 0x9ddb, 0xfcdd, 0x1, 0x1);
        gbc.writeMem(0x6299, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9c8, gbc.sp());
        EXPECT(0x629b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 035D
        gbc.setState(0x69be, 0x42ac, 0x1f70, 0xc422, 0xf0d8, 0xacf8, 0x1, 0x0);
        gbc.writeMem(0x69be, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x42ac, gbc.sp());
        EXPECT(0x69c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 035E
        gbc.setState(0x4f95, 0xd23a, 0x53c0, 0xef76, 0x3632, 0x63d6, 0x1, 0x0);
        gbc.writeMem(0x4f95, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd23a, gbc.sp());
        EXPECT(0x4f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 035F
        gbc.setState(0xa32a, 0x3846, 0x8e30, 0xbe2d, 0x7f49, 0x3d55, 0x0, 0x1);
        gbc.writeMem(0xa32a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3846, gbc.sp());
        EXPECT(0xa32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa32a));
        EXPECT(0x7f, gbc.readMem(0xa32b));
        // CB 7F 0360
        gbc.setState(0xee91, 0x5fce, 0x9ae0, 0x2f65, 0x57ad, 0x15ad, 0x0, 0x1);
        gbc.writeMem(0xee91, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5fce, gbc.sp());
        EXPECT(0xee93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee91));
        EXPECT(0x7f, gbc.readMem(0xee92));
        // CB 7F 0361
        gbc.setState(0x3378, 0x3fa5, 0xdee0, 0x713, 0x8e56, 0x674d, 0x0, 0x0);
        gbc.writeMem(0x3378, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3fa5, gbc.sp());
        EXPECT(0x337a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0362
        gbc.setState(0xbe30, 0x9919, 0x5a30, 0x6fac, 0x37f2, 0x1204, 0x0, 0x1);
        gbc.writeMem(0xbe30, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9919, gbc.sp());
        EXPECT(0xbe32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe30));
        EXPECT(0x7f, gbc.readMem(0xbe31));
        // CB 7F 0363
        gbc.setState(0xbc2b, 0x600c, 0x45d0, 0x79eb, 0xf7c, 0xcf7a, 0x0, 0x1);
        gbc.writeMem(0xbc2b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x600c, gbc.sp());
        EXPECT(0xbc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2b));
        EXPECT(0x7f, gbc.readMem(0xbc2c));
        // CB 7F 0364
        gbc.setState(0xdeb2, 0x9858, 0x93d0, 0x9ad1, 0xbb60, 0xde77, 0x0, 0x0);
        gbc.writeMem(0xdeb2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9858, gbc.sp());
        EXPECT(0xdeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb2));
        EXPECT(0x7f, gbc.readMem(0xdeb3));
        // CB 7F 0365
        gbc.setState(0x8f86, 0x7700, 0x5fe0, 0xf92a, 0xc4a4, 0x54fe, 0x0, 0x1);
        gbc.writeMem(0x8f86, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7700, gbc.sp());
        EXPECT(0x8f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f86));
        EXPECT(0x7f, gbc.readMem(0x8f87));
        // CB 7F 0366
        gbc.setState(0xe2bf, 0x6b54, 0x6d40, 0xed76, 0x67c4, 0xdd0c, 0x0, 0x0);
        gbc.writeMem(0xe2bf, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6b54, gbc.sp());
        EXPECT(0xe2c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2bf));
        EXPECT(0x7f, gbc.readMem(0xe2c0));
        // CB 7F 0367
        gbc.setState(0xa5a4, 0x304a, 0xc080, 0xd3ea, 0xf5e1, 0x3ad4, 0x1, 0x0);
        gbc.writeMem(0xa5a4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x304a, gbc.sp());
        EXPECT(0xa5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a4));
        EXPECT(0x7f, gbc.readMem(0xa5a5));
        // CB 7F 0368
        gbc.setState(0x8d95, 0xb6b3, 0xe3d0, 0xec37, 0xf421, 0xdf70, 0x0, 0x1);
        gbc.writeMem(0x8d95, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb6b3, gbc.sp());
        EXPECT(0x8d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d95));
        EXPECT(0x7f, gbc.readMem(0x8d96));
        // CB 7F 0369
        gbc.setState(0x13ce, 0x8b7b, 0xff90, 0x94eb, 0xc7f1, 0x95b9, 0x0, 0x1);
        gbc.writeMem(0x13ce, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8b7b, gbc.sp());
        EXPECT(0x13d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 036B
        gbc.setState(0x1c13, 0x14d1, 0x8f10, 0x9281, 0xd9c1, 0x5653, 0x1, 0x0);
        gbc.writeMem(0x1c13, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x14d1, gbc.sp());
        EXPECT(0x1c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 036D
        gbc.setState(0x87a9, 0x5809, 0xfae0, 0x22bd, 0x55ed, 0xaa4e, 0x1, 0x0);
        gbc.writeMem(0x87a9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5809, gbc.sp());
        EXPECT(0x87ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a9));
        EXPECT(0x7f, gbc.readMem(0x87aa));
        // CB 7F 036E
        gbc.setState(0xd85, 0x50ab, 0x4ee0, 0xd578, 0xf51b, 0x2623, 0x0, 0x1);
        gbc.writeMem(0xd85, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x50ab, gbc.sp());
        EXPECT(0xd87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 036F
        gbc.setState(0xb91f, 0x23b0, 0xcb0, 0x8d39, 0x54d2, 0xac61, 0x1, 0x1);
        gbc.writeMem(0xb91f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x23b0, gbc.sp());
        EXPECT(0xb921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91f));
        EXPECT(0x7f, gbc.readMem(0xb920));
        // CB 7F 0370
        gbc.setState(0x1590, 0xf79, 0x2060, 0xb46a, 0x73ab, 0x75a4, 0x0, 0x0);
        gbc.writeMem(0x1590, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf79, gbc.sp());
        EXPECT(0x1592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0371
        gbc.setState(0xac2e, 0x8b4d, 0x9bd0, 0x711e, 0x5d04, 0x2726, 0x0, 0x1);
        gbc.writeMem(0xac2e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8b4d, gbc.sp());
        EXPECT(0xac30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2e));
        EXPECT(0x7f, gbc.readMem(0xac2f));
        // CB 7F 0372
        gbc.setState(0x1b3f, 0x53ca, 0x4d00, 0xa6c7, 0x83b4, 0x5bc2, 0x0, 0x1);
        gbc.writeMem(0x1b3f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x53ca, gbc.sp());
        EXPECT(0x1b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0373
        gbc.setState(0x9118, 0xd3, 0xa000, 0x8f31, 0x3eb8, 0xce72, 0x0, 0x0);
        gbc.writeMem(0x9118, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd3, gbc.sp());
        EXPECT(0x911a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9118));
        EXPECT(0x7f, gbc.readMem(0x9119));
        // CB 7F 0374
        gbc.setState(0x31cc, 0x249b, 0x18f0, 0x7654, 0x112, 0xea81, 0x0, 0x1);
        gbc.writeMem(0x31cc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x249b, gbc.sp());
        EXPECT(0x31ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0375
        gbc.setState(0x834e, 0xcc57, 0x30d0, 0xb71d, 0x12dc, 0xe8c8, 0x0, 0x0);
        gbc.writeMem(0x834e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcc57, gbc.sp());
        EXPECT(0x8350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834e));
        EXPECT(0x7f, gbc.readMem(0x834f));
        // CB 7F 0376
        gbc.setState(0x4cc9, 0xba92, 0xaa20, 0xbb02, 0xb72, 0xdd5f, 0x0, 0x0);
        gbc.writeMem(0x4cc9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xba92, gbc.sp());
        EXPECT(0x4ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0377
        gbc.setState(0x50e1, 0x6b62, 0xbc00, 0x6128, 0x34c5, 0xa799, 0x1, 0x1);
        gbc.writeMem(0x50e1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6b62, gbc.sp());
        EXPECT(0x50e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0378
        gbc.setState(0xc756, 0xb81a, 0xb550, 0xc309, 0x16c6, 0xce50, 0x1, 0x1);
        gbc.writeMem(0xc756, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb81a, gbc.sp());
        EXPECT(0xc758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc756));
        EXPECT(0x7f, gbc.readMem(0xc757));
        // CB 7F 0379
        gbc.setState(0x288e, 0xee97, 0x3fa0, 0xae08, 0xc1c4, 0x15b4, 0x0, 0x0);
        gbc.writeMem(0x288e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xee97, gbc.sp());
        EXPECT(0x2890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 037A
        gbc.setState(0xd061, 0xc8b6, 0x7fb0, 0xb34e, 0x748b, 0xad69, 0x1, 0x1);
        gbc.writeMem(0xd061, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc8b6, gbc.sp());
        EXPECT(0xd063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd061));
        EXPECT(0x7f, gbc.readMem(0xd062));
        // CB 7F 037C
        gbc.setState(0xae06, 0x619a, 0x3f30, 0x9e9c, 0x3289, 0x3885, 0x0, 0x1);
        gbc.writeMem(0xae06, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x619a, gbc.sp());
        EXPECT(0xae08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae06));
        EXPECT(0x7f, gbc.readMem(0xae07));
        // CB 7F 037D
        gbc.setState(0x8a01, 0xd09e, 0x2580, 0x7142, 0x7878, 0xd6b5, 0x0, 0x1);
        gbc.writeMem(0x8a01, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd09e, gbc.sp());
        EXPECT(0x8a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a01));
        EXPECT(0x7f, gbc.readMem(0x8a02));
        // CB 7F 037E
        gbc.setState(0xece4, 0x2c4, 0x9040, 0x21dc, 0xaeb5, 0xbd1b, 0x1, 0x0);
        gbc.writeMem(0xece4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2c4, gbc.sp());
        EXPECT(0xece6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece4));
        EXPECT(0x7f, gbc.readMem(0xece5));
        // CB 7F 037F
        gbc.setState(0x348, 0x6c9c, 0xd20, 0x472, 0xbcb0, 0x713f, 0x1, 0x0);
        gbc.writeMem(0x348, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6c9c, gbc.sp());
        EXPECT(0x34a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0380
        gbc.setState(0xeae2, 0x36ce, 0xf520, 0xffdd, 0x26df, 0x5c80, 0x0, 0x0);
        gbc.writeMem(0xeae2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x36ce, gbc.sp());
        EXPECT(0xeae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae2));
        EXPECT(0x7f, gbc.readMem(0xeae3));
        // CB 7F 0381
        gbc.setState(0x5b89, 0xec25, 0x1e20, 0xd5fa, 0x82d, 0x2fba, 0x1, 0x0);
        gbc.writeMem(0x5b89, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xec25, gbc.sp());
        EXPECT(0x5b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0382
        gbc.setState(0xea2c, 0x695a, 0x5730, 0x3201, 0x35a4, 0xea9f, 0x1, 0x1);
        gbc.writeMem(0xea2c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x695a, gbc.sp());
        EXPECT(0xea2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea2c));
        EXPECT(0x7f, gbc.readMem(0xea2d));
        // CB 7F 0383
        gbc.setState(0x9847, 0x10c9, 0x7d70, 0xdbcf, 0xde4e, 0xb53e, 0x1, 0x1);
        gbc.writeMem(0x9847, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x10c9, gbc.sp());
        EXPECT(0x9849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9847));
        EXPECT(0x7f, gbc.readMem(0x9848));
        // CB 7F 0384
        gbc.setState(0x6e, 0x9589, 0xf540, 0x7355, 0xd8d3, 0x9166, 0x0, 0x0);
        gbc.writeMem(0x6e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9589, gbc.sp());
        EXPECT(0x70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0385
        gbc.setState(0x27e9, 0x5cfe, 0x260, 0x77bc, 0x5760, 0xe44a, 0x0, 0x0);
        gbc.writeMem(0x27e9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5cfe, gbc.sp());
        EXPECT(0x27eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0387
        gbc.setState(0xfec, 0x7c7c, 0x29a0, 0x2e72, 0x6977, 0x1c77, 0x1, 0x0);
        gbc.writeMem(0xfec, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7c7c, gbc.sp());
        EXPECT(0xfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0389
        gbc.setState(0xe731, 0x35c9, 0x9320, 0xfc21, 0x1175, 0xf5cb, 0x1, 0x0);
        gbc.writeMem(0xe731, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x35c9, gbc.sp());
        EXPECT(0xe733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe731));
        EXPECT(0x7f, gbc.readMem(0xe732));
        // CB 7F 038A
        gbc.setState(0x1ba7, 0x5a7a, 0xa970, 0xd18a, 0xf413, 0x7f5e, 0x1, 0x0);
        gbc.writeMem(0x1ba7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5a7a, gbc.sp());
        EXPECT(0x1ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 038B
        gbc.setState(0x3200, 0x99d, 0x8ee0, 0xd303, 0xb07, 0xe32f, 0x1, 0x1);
        gbc.writeMem(0x3200, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x99d, gbc.sp());
        EXPECT(0x3202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 038C
        gbc.setState(0x8d40, 0xd103, 0x72c0, 0x63d4, 0xf56e, 0x35da, 0x1, 0x0);
        gbc.writeMem(0x8d40, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd103, gbc.sp());
        EXPECT(0x8d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d40));
        EXPECT(0x7f, gbc.readMem(0x8d41));
        // CB 7F 038D
        gbc.setState(0x3689, 0xc5ed, 0x5cf0, 0x7089, 0x2119, 0x79dc, 0x0, 0x1);
        gbc.writeMem(0x3689, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc5ed, gbc.sp());
        EXPECT(0x368b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 038E
        gbc.setState(0x5c97, 0x23a5, 0xe290, 0x4f5b, 0xed71, 0x7e2b, 0x0, 0x0);
        gbc.writeMem(0x5c97, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x23a5, gbc.sp());
        EXPECT(0x5c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 038F
        gbc.setState(0x7e1a, 0x5b2c, 0xa1b0, 0xde8d, 0xfa7, 0x9fb0, 0x0, 0x0);
        gbc.writeMem(0x7e1a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5b2c, gbc.sp());
        EXPECT(0x7e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0390
        gbc.setState(0x5115, 0xea3f, 0x7a0, 0xe116, 0x525e, 0x1ff3, 0x1, 0x0);
        gbc.writeMem(0x5115, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xea3f, gbc.sp());
        EXPECT(0x5117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 0391
        gbc.setState(0x8e82, 0x23c, 0xc780, 0x9651, 0xe741, 0xd743, 0x0, 0x1);
        gbc.writeMem(0x8e82, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x23c, gbc.sp());
        EXPECT(0x8e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e82));
        EXPECT(0x7f, gbc.readMem(0x8e83));
        // CB 7F 0392
        gbc.setState(0xab7e, 0x51c5, 0xe1b0, 0x7ae2, 0x8f8a, 0xf6b8, 0x0, 0x1);
        gbc.writeMem(0xab7e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x51c5, gbc.sp());
        EXPECT(0xab80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7e));
        EXPECT(0x7f, gbc.readMem(0xab7f));
        // CB 7F 0393
        gbc.setState(0x59bb, 0xcd8d, 0x8e10, 0xd558, 0xe131, 0xa1f0, 0x0, 0x1);
        gbc.writeMem(0x59bb, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcd8d, gbc.sp());
        EXPECT(0x59bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0394
        gbc.setState(0x1ca9, 0xa5d3, 0x8250, 0x6065, 0x3e9d, 0xd9b4, 0x1, 0x1);
        gbc.writeMem(0x1ca9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa5d3, gbc.sp());
        EXPECT(0x1cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0395
        gbc.setState(0x98a2, 0xb295, 0xf630, 0x2e54, 0x59e6, 0x5984, 0x1, 0x1);
        gbc.writeMem(0x98a2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb295, gbc.sp());
        EXPECT(0x98a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a2));
        EXPECT(0x7f, gbc.readMem(0x98a3));
        // CB 7F 0396
        gbc.setState(0x1f20, 0xb2c4, 0x8010, 0x64a5, 0x809f, 0xa875, 0x0, 0x0);
        gbc.writeMem(0x1f20, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb2c4, gbc.sp());
        EXPECT(0x1f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0397
        gbc.setState(0xafd9, 0x650a, 0xc670, 0xf284, 0xd2e1, 0xfd76, 0x1, 0x1);
        gbc.writeMem(0xafd9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x650a, gbc.sp());
        EXPECT(0xafdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd9));
        EXPECT(0x7f, gbc.readMem(0xafda));
        // CB 7F 0398
        gbc.setState(0x1636, 0x299d, 0x3010, 0xde2f, 0x631b, 0xef6a, 0x1, 0x1);
        gbc.writeMem(0x1636, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x299d, gbc.sp());
        EXPECT(0x1638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 0399
        gbc.setState(0x8e25, 0x7b1d, 0x6380, 0xebdf, 0x4227, 0xc198, 0x0, 0x0);
        gbc.writeMem(0x8e25, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7b1d, gbc.sp());
        EXPECT(0x8e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e25));
        EXPECT(0x7f, gbc.readMem(0x8e26));
        // CB 7F 039A
        gbc.setState(0x46c0, 0x51ea, 0x8e90, 0x8688, 0xef67, 0x3247, 0x1, 0x0);
        gbc.writeMem(0x46c0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x51ea, gbc.sp());
        EXPECT(0x46c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 039B
        gbc.setState(0x9048, 0x1279, 0xcc50, 0xd495, 0x2313, 0x6759, 0x0, 0x0);
        gbc.writeMem(0x9048, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1279, gbc.sp());
        EXPECT(0x904a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9048));
        EXPECT(0x7f, gbc.readMem(0x9049));
        // CB 7F 039C
        gbc.setState(0x24f9, 0x9396, 0xbea0, 0x8503, 0x14b, 0xf898, 0x0, 0x1);
        gbc.writeMem(0x24f9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9396, gbc.sp());
        EXPECT(0x24fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 039E
        gbc.setState(0x3ffd, 0xc025, 0x99f0, 0xca7e, 0x7429, 0x2622, 0x1, 0x0);
        gbc.writeMem(0x3ffd, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc025, gbc.sp());
        EXPECT(0x3fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 039F
        gbc.setState(0xc893, 0xaf52, 0x60c0, 0x928b, 0x86e, 0xe52d, 0x1, 0x1);
        gbc.writeMem(0xc893, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaf52, gbc.sp());
        EXPECT(0xc895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc893));
        EXPECT(0x7f, gbc.readMem(0xc894));
        // CB 7F 03A0
        gbc.setState(0x8c0e, 0x31ef, 0x9f80, 0x9d1b, 0xaa22, 0x572c, 0x0, 0x1);
        gbc.writeMem(0x8c0e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x31ef, gbc.sp());
        EXPECT(0x8c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c0e));
        EXPECT(0x7f, gbc.readMem(0x8c0f));
        // CB 7F 03A1
        gbc.setState(0xb721, 0xf6c6, 0x7b0, 0xc2a0, 0x1f1d, 0x6e85, 0x1, 0x1);
        gbc.writeMem(0xb721, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf6c6, gbc.sp());
        EXPECT(0xb723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb721));
        EXPECT(0x7f, gbc.readMem(0xb722));
        // CB 7F 03A2
        gbc.setState(0x671, 0x4dea, 0xb290, 0xa1df, 0x6580, 0xcc44, 0x1, 0x0);
        gbc.writeMem(0x671, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4dea, gbc.sp());
        EXPECT(0x673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03A3
        gbc.setState(0x768c, 0xfd20, 0xa5a0, 0x8780, 0xea0a, 0xb9c6, 0x1, 0x0);
        gbc.writeMem(0x768c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfd20, gbc.sp());
        EXPECT(0x768e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03A4
        gbc.setState(0x6014, 0x76d3, 0xf80, 0xedd0, 0x4792, 0x9b8a, 0x1, 0x0);
        gbc.writeMem(0x6014, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x76d3, gbc.sp());
        EXPECT(0x6016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03A5
        gbc.setState(0xdcc1, 0x1fea, 0xd920, 0xb72d, 0xe7c8, 0xf833, 0x0, 0x1);
        gbc.writeMem(0xdcc1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1fea, gbc.sp());
        EXPECT(0xdcc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc1));
        EXPECT(0x7f, gbc.readMem(0xdcc2));
        // CB 7F 03A6
        gbc.setState(0x91b1, 0x2fc, 0xde60, 0xa1c, 0x5962, 0x2777, 0x1, 0x1);
        gbc.writeMem(0x91b1, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2fc, gbc.sp());
        EXPECT(0x91b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b1));
        EXPECT(0x7f, gbc.readMem(0x91b2));
        // CB 7F 03A7
        gbc.setState(0x8ec3, 0x7d13, 0x7750, 0xdcce, 0x22b, 0x7927, 0x0, 0x0);
        gbc.writeMem(0x8ec3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7d13, gbc.sp());
        EXPECT(0x8ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec3));
        EXPECT(0x7f, gbc.readMem(0x8ec4));
        // CB 7F 03A8
        gbc.setState(0x92c4, 0x5e77, 0x8210, 0x7358, 0xa3a6, 0x3c1c, 0x1, 0x1);
        gbc.writeMem(0x92c4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5e77, gbc.sp());
        EXPECT(0x92c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c4));
        EXPECT(0x7f, gbc.readMem(0x92c5));
        // CB 7F 03A9
        gbc.setState(0x9e48, 0xc431, 0xe9c0, 0xa4cb, 0x123d, 0x802, 0x0, 0x0);
        gbc.writeMem(0x9e48, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc431, gbc.sp());
        EXPECT(0x9e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e48));
        EXPECT(0x7f, gbc.readMem(0x9e49));
        // CB 7F 03AA
        gbc.setState(0xe8d0, 0x99aa, 0x2520, 0x8072, 0xd00b, 0x3d4e, 0x1, 0x1);
        gbc.writeMem(0xe8d0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x99aa, gbc.sp());
        EXPECT(0xe8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d0));
        EXPECT(0x7f, gbc.readMem(0xe8d1));
        // CB 7F 03AB
        gbc.setState(0x63d2, 0x960d, 0x44f0, 0x2693, 0xcee7, 0xc1a7, 0x0, 0x1);
        gbc.writeMem(0x63d2, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x960d, gbc.sp());
        EXPECT(0x63d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03AC
        gbc.setState(0x5775, 0x163b, 0x3da0, 0x5362, 0x4ca2, 0x7558, 0x0, 0x0);
        gbc.writeMem(0x5775, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x163b, gbc.sp());
        EXPECT(0x5777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03B0
        gbc.setState(0x17e9, 0xe61e, 0x3760, 0xf04a, 0x5eb, 0x404, 0x0, 0x0);
        gbc.writeMem(0x17e9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe61e, gbc.sp());
        EXPECT(0x17eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03B1
        gbc.setState(0x1be8, 0xed11, 0x3080, 0x8ae3, 0xdb14, 0x7bd6, 0x0, 0x0);
        gbc.writeMem(0x1be8, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xed11, gbc.sp());
        EXPECT(0x1bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03B2
        gbc.setState(0x1de3, 0xad5f, 0x87d0, 0xbc30, 0x954d, 0x8497, 0x0, 0x1);
        gbc.writeMem(0x1de3, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xad5f, gbc.sp());
        EXPECT(0x1de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03B4
        gbc.setState(0x7eb0, 0x6497, 0xf0e0, 0xd61c, 0x612f, 0xe03f, 0x1, 0x0);
        gbc.writeMem(0x7eb0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6497, gbc.sp());
        EXPECT(0x7eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03B5
        gbc.setState(0xb7cc, 0x4e2f, 0xe370, 0xed49, 0x5fa0, 0xb2c5, 0x0, 0x0);
        gbc.writeMem(0xb7cc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4e2f, gbc.sp());
        EXPECT(0xb7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cc));
        EXPECT(0x7f, gbc.readMem(0xb7cd));
        // CB 7F 03B6
        gbc.setState(0xd950, 0x7d5c, 0xc2a0, 0x37e2, 0xef59, 0x3356, 0x1, 0x1);
        gbc.writeMem(0xd950, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7d5c, gbc.sp());
        EXPECT(0xd952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd950));
        EXPECT(0x7f, gbc.readMem(0xd951));
        // CB 7F 03B7
        gbc.setState(0xd5ba, 0xf927, 0x8e40, 0xfd79, 0x64be, 0xee4c, 0x0, 0x1);
        gbc.writeMem(0xd5ba, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf927, gbc.sp());
        EXPECT(0xd5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ba));
        EXPECT(0x7f, gbc.readMem(0xd5bb));
        // CB 7F 03B8
        gbc.setState(0x9d10, 0x753d, 0xfac0, 0x4183, 0xc85a, 0x1dde, 0x0, 0x1);
        gbc.writeMem(0x9d10, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x753d, gbc.sp());
        EXPECT(0x9d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d10));
        EXPECT(0x7f, gbc.readMem(0x9d11));
        // CB 7F 03B9
        gbc.setState(0x2ccc, 0x7602, 0x4550, 0x311f, 0x6903, 0x2950, 0x1, 0x1);
        gbc.writeMem(0x2ccc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7602, gbc.sp());
        EXPECT(0x2cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03BA
        gbc.setState(0x4e2a, 0xdeb7, 0x44a0, 0xc2fb, 0x1abe, 0x6626, 0x0, 0x0);
        gbc.writeMem(0x4e2a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdeb7, gbc.sp());
        EXPECT(0x4e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03BB
        gbc.setState(0x58f4, 0x82ce, 0x18b0, 0x893a, 0xfaf4, 0xea32, 0x0, 0x1);
        gbc.writeMem(0x58f4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x82ce, gbc.sp());
        EXPECT(0x58f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03BC
        gbc.setState(0xe212, 0xae04, 0x3f10, 0x676e, 0xace7, 0xc9e2, 0x1, 0x0);
        gbc.writeMem(0xe212, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xae04, gbc.sp());
        EXPECT(0xe214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe212));
        EXPECT(0x7f, gbc.readMem(0xe213));
        // CB 7F 03BD
        gbc.setState(0xac8f, 0x7198, 0x2f50, 0xf3fd, 0xbd14, 0x40a0, 0x0, 0x1);
        gbc.writeMem(0xac8f, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7198, gbc.sp());
        EXPECT(0xac91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac8f));
        EXPECT(0x7f, gbc.readMem(0xac90));
        // CB 7F 03BE
        gbc.setState(0x1e6d, 0xbf9f, 0x3ae0, 0xe32, 0x4d5c, 0x21cc, 0x1, 0x0);
        gbc.writeMem(0x1e6d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbf9f, gbc.sp());
        EXPECT(0x1e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03BF
        gbc.setState(0x31a9, 0xfebb, 0x6880, 0xff6c, 0x51c6, 0x928f, 0x0, 0x0);
        gbc.writeMem(0x31a9, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfebb, gbc.sp());
        EXPECT(0x31ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03C1
        gbc.setState(0xac, 0xa2aa, 0xefc0, 0x45c7, 0xb9f5, 0x86b3, 0x1, 0x1);
        gbc.writeMem(0xac, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa2aa, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03C2
        gbc.setState(0x7409, 0xfb53, 0x9680, 0x1ebb, 0x87f2, 0x49e6, 0x0, 0x1);
        gbc.writeMem(0x7409, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfb53, gbc.sp());
        EXPECT(0x740b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03C3
        gbc.setState(0xc455, 0x340a, 0x8300, 0x4f7, 0x292f, 0x58d4, 0x1, 0x1);
        gbc.writeMem(0xc455, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x340a, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc455));
        EXPECT(0x7f, gbc.readMem(0xc456));
        // CB 7F 03C4
        gbc.setState(0xa02b, 0xc8b6, 0x61a0, 0x4b0f, 0x5c3f, 0xbbd2, 0x0, 0x0);
        gbc.writeMem(0xa02b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc8b6, gbc.sp());
        EXPECT(0xa02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02b));
        EXPECT(0x7f, gbc.readMem(0xa02c));
        // CB 7F 03C5
        gbc.setState(0x54c0, 0x3d00, 0x7b40, 0xb219, 0x2a9c, 0x376a, 0x1, 0x0);
        gbc.writeMem(0x54c0, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3d00, gbc.sp());
        EXPECT(0x54c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03C6
        gbc.setState(0xe601, 0x30d1, 0x1fc0, 0x2214, 0xc8af, 0xadac, 0x0, 0x0);
        gbc.writeMem(0xe601, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x30d1, gbc.sp());
        EXPECT(0xe603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe601));
        EXPECT(0x7f, gbc.readMem(0xe602));
        // CB 7F 03C7
        gbc.setState(0x8769, 0xb896, 0x9e10, 0xcb33, 0xb399, 0x87e, 0x1, 0x0);
        gbc.writeMem(0x8769, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb896, gbc.sp());
        EXPECT(0x876b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8769));
        EXPECT(0x7f, gbc.readMem(0x876a));
        // CB 7F 03C8
        gbc.setState(0xdfdc, 0xf18d, 0xa570, 0x42cc, 0x857a, 0xa51, 0x0, 0x0);
        gbc.writeMem(0xdfdc, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf18d, gbc.sp());
        EXPECT(0xdfde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfdc));
        EXPECT(0x7f, gbc.readMem(0xdfdd));
        // CB 7F 03C9
        gbc.setState(0x7f91, 0x7a49, 0xb810, 0xb1d3, 0xadf2, 0x96f6, 0x1, 0x0);
        gbc.writeMem(0x7f91, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7a49, gbc.sp());
        EXPECT(0x7f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03CA
        gbc.setState(0x214, 0x74c6, 0xc710, 0xd180, 0xdf92, 0x277b, 0x1, 0x1);
        gbc.writeMem(0x214, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x74c6, gbc.sp());
        EXPECT(0x216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03CB
        gbc.setState(0x522d, 0xa6bd, 0xaa90, 0x882e, 0xbc11, 0xf05f, 0x1, 0x1);
        gbc.writeMem(0x522d, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa6bd, gbc.sp());
        EXPECT(0x522f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03CC
        gbc.setState(0xdf56, 0x6110, 0xcff0, 0xa50, 0x8886, 0xc364, 0x0, 0x0);
        gbc.writeMem(0xdf56, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6110, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf56));
        EXPECT(0x7f, gbc.readMem(0xdf57));
        // CB 7F 03CE
        gbc.setState(0x2a4e, 0xecbe, 0x3f20, 0x6e52, 0xeaad, 0xbc0c, 0x1, 0x1);
        gbc.writeMem(0x2a4e, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xecbe, gbc.sp());
        EXPECT(0x2a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03CF
        gbc.setState(0xe491, 0x590a, 0xc6a0, 0xa3c2, 0x61f6, 0x15a4, 0x1, 0x0);
        gbc.writeMem(0xe491, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x590a, gbc.sp());
        EXPECT(0xe493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe491));
        EXPECT(0x7f, gbc.readMem(0xe492));
        // CB 7F 03D0
        gbc.setState(0x3a2a, 0x3a1a, 0xd4f0, 0xa4f5, 0x6551, 0xa36, 0x1, 0x1);
        gbc.writeMem(0x3a2a, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3a1a, gbc.sp());
        EXPECT(0x3a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03D1
        gbc.setState(0xe68b, 0x8f5f, 0x4a00, 0x9724, 0x35f7, 0x4818, 0x0, 0x0);
        gbc.writeMem(0xe68b, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8f5f, gbc.sp());
        EXPECT(0xe68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68b));
        EXPECT(0x7f, gbc.readMem(0xe68c));
        // CB 7F 03D2
        gbc.setState(0xaf68, 0xefdf, 0x2a90, 0xc3a0, 0xcdae, 0xe9e0, 0x0, 0x0);
        gbc.writeMem(0xaf68, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xefdf, gbc.sp());
        EXPECT(0xaf6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf68));
        EXPECT(0x7f, gbc.readMem(0xaf69));
        // CB 7F 03D3
        gbc.setState(0xc771, 0xdf9b, 0xb510, 0x8c48, 0x2b8c, 0x16a0, 0x1, 0x0);
        gbc.writeMem(0xc771, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdf9b, gbc.sp());
        EXPECT(0xc773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc771));
        EXPECT(0x7f, gbc.readMem(0xc772));
        // CB 7F 03D4
        gbc.setState(0x6218, 0xbcfe, 0xce90, 0xae37, 0x8a7a, 0xf884, 0x1, 0x1);
        gbc.writeMem(0x6218, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbcfe, gbc.sp());
        EXPECT(0x621a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03D5
        gbc.setState(0xbddd, 0xcbe7, 0xdf20, 0xf7e7, 0x4358, 0xdeca, 0x1, 0x0);
        gbc.writeMem(0xbddd, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcbe7, gbc.sp());
        EXPECT(0xbddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbddd));
        EXPECT(0x7f, gbc.readMem(0xbdde));
        // CB 7F 03D6
        gbc.setState(0xcdd4, 0xb8be, 0x4190, 0x99b, 0x1cfe, 0xa9bb, 0x0, 0x1);
        gbc.writeMem(0xcdd4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb8be, gbc.sp());
        EXPECT(0xcdd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd4));
        EXPECT(0x7f, gbc.readMem(0xcdd5));
        // CB 7F 03D7
        gbc.setState(0xa518, 0x7f52, 0xd50, 0x513f, 0x1162, 0x37d5, 0x0, 0x0);
        gbc.writeMem(0xa518, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7f52, gbc.sp());
        EXPECT(0xa51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa518));
        EXPECT(0x7f, gbc.readMem(0xa519));
        // CB 7F 03D9
        gbc.setState(0x4166, 0xfae0, 0x6960, 0xe88d, 0xe59b, 0xc81, 0x1, 0x1);
        gbc.writeMem(0x4166, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfae0, gbc.sp());
        EXPECT(0x4168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03DA
        gbc.setState(0x9f90, 0x570c, 0xe500, 0xe68f, 0x4dfe, 0x7bf0, 0x0, 0x1);
        gbc.writeMem(0x9f90, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x570c, gbc.sp());
        EXPECT(0x9f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f90));
        EXPECT(0x7f, gbc.readMem(0x9f91));
        // CB 7F 03DC
        gbc.setState(0xe96c, 0x6a15, 0x1e80, 0xef1d, 0xcf6b, 0x138e, 0x1, 0x1);
        gbc.writeMem(0xe96c, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6a15, gbc.sp());
        EXPECT(0xe96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96c));
        EXPECT(0x7f, gbc.readMem(0xe96d));
        // CB 7F 03DE
        gbc.setState(0x7019, 0x33d5, 0x6030, 0x3ac8, 0xdd53, 0x4e97, 0x0, 0x1);
        gbc.writeMem(0x7019, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x33d5, gbc.sp());
        EXPECT(0x701b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03DF
        gbc.setState(0x8b42, 0xdffc, 0x8f10, 0xbf6d, 0x4e87, 0x7941, 0x1, 0x1);
        gbc.writeMem(0x8b42, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdffc, gbc.sp());
        EXPECT(0x8b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b42));
        EXPECT(0x7f, gbc.readMem(0x8b43));
        // CB 7F 03E0
        gbc.setState(0x32b7, 0x7e3b, 0x61b0, 0xad5, 0x661e, 0xb21e, 0x1, 0x0);
        gbc.writeMem(0x32b7, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7e3b, gbc.sp());
        EXPECT(0x32b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7F 03E1
        gbc.setState(0xca78, 0x268a, 0x9bb0, 0x7d13, 0x20a6, 0x2cc2, 0x1, 0x0);
        gbc.writeMem(0xca78, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x268a, gbc.sp());
        EXPECT(0xca7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca78));
        EXPECT(0x7f, gbc.readMem(0xca79));
        // CB 7F 03E2
        gbc.setState(0x62d4, 0x824e, 0xe000, 0x787f, 0xc7b1, 0x91f8, 0x1, 0x1);
        gbc.writeMem(0x62d4, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x824e, gbc.sp());
        EXPECT(0x62d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03E4
        gbc.setState(0x6894, 0x114e, 0x5260, 0x870, 0xd2af, 0x1eb8, 0x1, 0x1);
        gbc.writeMem(0x6894, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x114e, gbc.sp());
        EXPECT(0x6896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03E5
        gbc.setState(0x2613, 0xd1e, 0x2ea0, 0xc5c8, 0x35d3, 0x7a6, 0x0, 0x1);
        gbc.writeMem(0x2613, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd1e, gbc.sp());
        EXPECT(0x2615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7F 03E6
        gbc.setState(0xef37, 0x905d, 0xa5f0, 0xc9b0, 0x4134, 0x92b5, 0x0, 0x1);
        gbc.writeMem(0xef37, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x905d, gbc.sp());
        EXPECT(0xef39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef37));
        EXPECT(0x7f, gbc.readMem(0xef38));
        // CB 7F 03E7
        gbc.setState(0x10e5, 0x76c, 0xb0f0, 0x9144, 0xe31c, 0xb7b8, 0x1, 0x0);
        gbc.writeMem(0x10e5, { 0xcb, 0x7f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x76c, gbc.sp());
        EXPECT(0x10e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
