    TEST(gbcemu, opcode_cb_b3) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B3 0000
        gbc.setState(0x25b5, 0x2b13, 0x7900, 0xbfb4, 0x65cb, 0xcdf7, 0x1, 0x1);
        gbc.writeMem(0x25b5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2b13, gbc.sp());
        EXPECT(0x25b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0001
        gbc.setState(0x9d74, 0x73ea, 0xa990, 0xd726, 0xc589, 0x1e5b, 0x0, 0x0);
        gbc.writeMem(0x9d74, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x73ea, gbc.sp());
        EXPECT(0x9d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d74));
        EXPECT(0xb3, gbc.readMem(0x9d75));
        // CB B3 0002
        gbc.setState(0x631, 0xbfb0, 0xb860, 0xe975, 0xc597, 0x7c50, 0x0, 0x1);
        gbc.writeMem(0x631, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbfb0, gbc.sp());
        EXPECT(0x633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0003
        gbc.setState(0x3560, 0xbc16, 0xedb0, 0x6221, 0xf342, 0x922b, 0x0, 0x0);
        gbc.writeMem(0x3560, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbc16, gbc.sp());
        EXPECT(0x3562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0004
        gbc.setState(0xfdc, 0x5257, 0xc580, 0x349a, 0x469a, 0xba31, 0x1, 0x0);
        gbc.writeMem(0xfdc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5257, gbc.sp());
        EXPECT(0xfde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0005
        gbc.setState(0xebe8, 0xf6a8, 0x78b0, 0xd201, 0xa6b8, 0x74f5, 0x0, 0x1);
        gbc.writeMem(0xebe8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf6a8, gbc.sp());
        EXPECT(0xebea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe8));
        EXPECT(0xb3, gbc.readMem(0xebe9));
        // CB B3 0006
        gbc.setState(0x5a65, 0xdd8a, 0x9ee0, 0x70d2, 0x2546, 0x2f, 0x0, 0x0);
        gbc.writeMem(0x5a65, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdd8a, gbc.sp());
        EXPECT(0x5a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0007
        gbc.setState(0x3c4d, 0x350c, 0x7000, 0x87b8, 0x6478, 0x74f7, 0x0, 0x0);
        gbc.writeMem(0x3c4d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x350c, gbc.sp());
        EXPECT(0x3c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0008
        gbc.setState(0xe85c, 0x1817, 0x34b0, 0xfa71, 0xea3f, 0xa99e, 0x1, 0x0);
        gbc.writeMem(0xe85c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1817, gbc.sp());
        EXPECT(0xe85e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85c));
        EXPECT(0xb3, gbc.readMem(0xe85d));
        // CB B3 0009
        gbc.setState(0x91d3, 0xe0d4, 0x70, 0x1c2e, 0x2128, 0xac52, 0x0, 0x0);
        gbc.writeMem(0x91d3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe0d4, gbc.sp());
        EXPECT(0x91d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d3));
        EXPECT(0xb3, gbc.readMem(0x91d4));
        // CB B3 000A
        gbc.setState(0x207, 0xd303, 0x7120, 0xd1f3, 0x227a, 0x36e9, 0x0, 0x0);
        gbc.writeMem(0x207, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd303, gbc.sp());
        EXPECT(0x209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 000B
        gbc.setState(0xa24a, 0x5bfb, 0xa4e0, 0x20ce, 0xa49d, 0x3452, 0x1, 0x1);
        gbc.writeMem(0xa24a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5bfb, gbc.sp());
        EXPECT(0xa24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24a));
        EXPECT(0xb3, gbc.readMem(0xa24b));
        // CB B3 000C
        gbc.setState(0x5da3, 0x1553, 0xa4c0, 0xd55d, 0xfc47, 0x4cda, 0x0, 0x0);
        gbc.writeMem(0x5da3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1553, gbc.sp());
        EXPECT(0x5da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 000D
        gbc.setState(0xe718, 0x3c19, 0x1880, 0x74d6, 0xc989, 0x7e97, 0x0, 0x0);
        gbc.writeMem(0xe718, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3c19, gbc.sp());
        EXPECT(0xe71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe718));
        EXPECT(0xb3, gbc.readMem(0xe719));
        // CB B3 000E
        gbc.setState(0x1397, 0xbbcf, 0x94e0, 0x8be3, 0x70cc, 0xfcd0, 0x0, 0x1);
        gbc.writeMem(0x1397, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbbcf, gbc.sp());
        EXPECT(0x1399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 000F
        gbc.setState(0xe83f, 0x48e8, 0x3130, 0x97bc, 0x43df, 0x1e83, 0x1, 0x1);
        gbc.writeMem(0xe83f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x48e8, gbc.sp());
        EXPECT(0xe841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83f));
        EXPECT(0xb3, gbc.readMem(0xe840));
        // CB B3 0010
        gbc.setState(0x3ec6, 0xbd78, 0x63a0, 0xfc7, 0xf696, 0x540d, 0x1, 0x1);
        gbc.writeMem(0x3ec6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbd78, gbc.sp());
        EXPECT(0x3ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0012
        gbc.setState(0xb8cf, 0xed9b, 0x870, 0x6b66, 0x535f, 0xff2f, 0x1, 0x1);
        gbc.writeMem(0xb8cf, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xed9b, gbc.sp());
        EXPECT(0xb8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8cf));
        EXPECT(0xb3, gbc.readMem(0xb8d0));
        // CB B3 0013
        gbc.setState(0x44ac, 0x7ebd, 0x83d0, 0xdcf8, 0xb39c, 0x924d, 0x0, 0x1);
        gbc.writeMem(0x44ac, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7ebd, gbc.sp());
        EXPECT(0x44ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0014
        gbc.setState(0x2225, 0xebe8, 0x6b10, 0xaa46, 0xc881, 0xb47d, 0x0, 0x0);
        gbc.writeMem(0x2225, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xebe8, gbc.sp());
        EXPECT(0x2227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0015
        gbc.setState(0x4017, 0xb077, 0x6dc0, 0x9a64, 0x22c8, 0x7c56, 0x1, 0x0);
        gbc.writeMem(0x4017, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb077, gbc.sp());
        EXPECT(0x4019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0016
        gbc.setState(0x2867, 0xc49b, 0xc050, 0x3d64, 0x6b58, 0xc4ad, 0x0, 0x0);
        gbc.writeMem(0x2867, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc49b, gbc.sp());
        EXPECT(0x2869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0017
        gbc.setState(0xe765, 0x158e, 0xb570, 0x5f0b, 0xfe4b, 0x6fab, 0x1, 0x0);
        gbc.writeMem(0xe765, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x158e, gbc.sp());
        EXPECT(0xe767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe765));
        EXPECT(0xb3, gbc.readMem(0xe766));
        // CB B3 0018
        gbc.setState(0x8fa6, 0xdd69, 0x960, 0x3cee, 0x70dc, 0xac57, 0x1, 0x1);
        gbc.writeMem(0x8fa6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdd69, gbc.sp());
        EXPECT(0x8fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa6));
        EXPECT(0xb3, gbc.readMem(0x8fa7));
        // CB B3 0019
        gbc.setState(0x5af9, 0x3c1e, 0xa0f0, 0xbe77, 0xe28, 0xa4cd, 0x0, 0x1);
        gbc.writeMem(0x5af9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3c1e, gbc.sp());
        EXPECT(0x5afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 001A
        gbc.setState(0x7521, 0xda35, 0xc0b0, 0x3296, 0xa898, 0xe254, 0x0, 0x1);
        gbc.writeMem(0x7521, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xda35, gbc.sp());
        EXPECT(0x7523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 001B
        gbc.setState(0x471b, 0x69cd, 0x1360, 0xcb16, 0x8fd9, 0xbe16, 0x1, 0x0);
        gbc.writeMem(0x471b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x69cd, gbc.sp());
        EXPECT(0x471d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 001C
        gbc.setState(0x8803, 0x377b, 0x5240, 0x1363, 0xd208, 0xd77f, 0x1, 0x0);
        gbc.writeMem(0x8803, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x377b, gbc.sp());
        EXPECT(0x8805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8803));
        EXPECT(0xb3, gbc.readMem(0x8804));
        // CB B3 001D
        gbc.setState(0x2759, 0x976c, 0x8f00, 0x4d51, 0x2015, 0xe2cc, 0x1, 0x1);
        gbc.writeMem(0x2759, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x976c, gbc.sp());
        EXPECT(0x275b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 001E
        gbc.setState(0x20e3, 0x2e23, 0xbb60, 0x4c60, 0x4632, 0xdd8e, 0x1, 0x1);
        gbc.writeMem(0x20e3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2e23, gbc.sp());
        EXPECT(0x20e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 001F
        gbc.setState(0x6128, 0x3fa7, 0x8050, 0x72bb, 0x5ccb, 0xcf30, 0x1, 0x0);
        gbc.writeMem(0x6128, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3fa7, gbc.sp());
        EXPECT(0x612a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0020
        gbc.setState(0x438a, 0x170f, 0xd8b0, 0xa0cb, 0xfd29, 0x6b41, 0x1, 0x1);
        gbc.writeMem(0x438a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x170f, gbc.sp());
        EXPECT(0x438c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0021
        gbc.setState(0x4272, 0x9e6, 0x3240, 0xa5c0, 0x2c86, 0xe6f0, 0x0, 0x1);
        gbc.writeMem(0x4272, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0x4274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0022
        gbc.setState(0x1af0, 0x2ce2, 0x7110, 0x1ec4, 0xabc8, 0x2407, 0x1, 0x1);
        gbc.writeMem(0x1af0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2ce2, gbc.sp());
        EXPECT(0x1af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0023
        gbc.setState(0x9ee2, 0x50da, 0xcad0, 0x6c6d, 0xf2d, 0x490, 0x0, 0x0);
        gbc.writeMem(0x9ee2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x50da, gbc.sp());
        EXPECT(0x9ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee2));
        EXPECT(0xb3, gbc.readMem(0x9ee3));
        // CB B3 0024
        gbc.setState(0x8df0, 0xe431, 0xa790, 0xa947, 0xff2, 0xecf1, 0x1, 0x0);
        gbc.writeMem(0x8df0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe431, gbc.sp());
        EXPECT(0x8df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df0));
        EXPECT(0xb3, gbc.readMem(0x8df1));
        // CB B3 0025
        gbc.setState(0x368a, 0x322b, 0xaf30, 0xd4af, 0x1d96, 0xd4eb, 0x0, 0x1);
        gbc.writeMem(0x368a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x322b, gbc.sp());
        EXPECT(0x368c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0026
        gbc.setState(0x9d16, 0x6934, 0x17f0, 0xbb51, 0x66f9, 0x41bc, 0x1, 0x1);
        gbc.writeMem(0x9d16, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6934, gbc.sp());
        EXPECT(0x9d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d16));
        EXPECT(0xb3, gbc.readMem(0x9d17));
        // CB B3 0027
        gbc.setState(0x3aea, 0x4f34, 0x70, 0xc43b, 0xcadd, 0xc064, 0x1, 0x1);
        gbc.writeMem(0x3aea, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4f34, gbc.sp());
        EXPECT(0x3aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0028
        gbc.setState(0x7413, 0x9d30, 0x1880, 0xc274, 0x7a7, 0x3ea2, 0x0, 0x1);
        gbc.writeMem(0x7413, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9d30, gbc.sp());
        EXPECT(0x7415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0029
        gbc.setState(0xa5e4, 0x7b2b, 0x49a0, 0x8431, 0xee67, 0x975f, 0x0, 0x0);
        gbc.writeMem(0xa5e4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7b2b, gbc.sp());
        EXPECT(0xa5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e4));
        EXPECT(0xb3, gbc.readMem(0xa5e5));
        // CB B3 002A
        gbc.setState(0x5873, 0x29d0, 0x72f0, 0x38db, 0x8954, 0x3602, 0x0, 0x0);
        gbc.writeMem(0x5873, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x29d0, gbc.sp());
        EXPECT(0x5875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 002B
        gbc.setState(0xd6d2, 0x316c, 0xa9d0, 0x47ff, 0x6518, 0x731a, 0x1, 0x1);
        gbc.writeMem(0xd6d2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x316c, gbc.sp());
        EXPECT(0xd6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d2));
        EXPECT(0xb3, gbc.readMem(0xd6d3));
        // CB B3 002C
        gbc.setState(0x8c88, 0x24ef, 0x3790, 0x86cf, 0x4128, 0x2304, 0x1, 0x1);
        gbc.writeMem(0x8c88, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x24ef, gbc.sp());
        EXPECT(0x8c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c88));
        EXPECT(0xb3, gbc.readMem(0x8c89));
        // CB B3 002D
        gbc.setState(0xda5a, 0xf8f2, 0x1da0, 0xca57, 0x4ea6, 0xc18a, 0x0, 0x0);
        gbc.writeMem(0xda5a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf8f2, gbc.sp());
        EXPECT(0xda5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5a));
        EXPECT(0xb3, gbc.readMem(0xda5b));
        // CB B3 002E
        gbc.setState(0x97af, 0xf8f0, 0x1350, 0xfcf2, 0xa62a, 0xeab, 0x1, 0x1);
        gbc.writeMem(0x97af, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf8f0, gbc.sp());
        EXPECT(0x97b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97af));
        EXPECT(0xb3, gbc.readMem(0x97b0));
        // CB B3 002F
        gbc.setState(0x2dc0, 0x72bf, 0x4210, 0x83b3, 0x14d3, 0x3dd7, 0x0, 0x0);
        gbc.writeMem(0x2dc0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x72bf, gbc.sp());
        EXPECT(0x2dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0030
        gbc.setState(0x3468, 0x8072, 0x4e90, 0xcfaf, 0x60b4, 0x5705, 0x1, 0x1);
        gbc.writeMem(0x3468, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8072, gbc.sp());
        EXPECT(0x346a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0031
        gbc.setState(0xce61, 0x8c3, 0x4240, 0x4f2a, 0x2051, 0xa4fa, 0x0, 0x1);
        gbc.writeMem(0xce61, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8c3, gbc.sp());
        EXPECT(0xce63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce61));
        EXPECT(0xb3, gbc.readMem(0xce62));
        // CB B3 0032
        gbc.setState(0x3980, 0x2594, 0x6340, 0xadcb, 0x282e, 0xd734, 0x1, 0x1);
        gbc.writeMem(0x3980, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2594, gbc.sp());
        EXPECT(0x3982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0033
        gbc.setState(0xc8e1, 0x6551, 0x7c50, 0x9ed, 0x9a92, 0x5f7e, 0x0, 0x0);
        gbc.writeMem(0xc8e1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6551, gbc.sp());
        EXPECT(0xc8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e1));
        EXPECT(0xb3, gbc.readMem(0xc8e2));
        // CB B3 0034
        gbc.setState(0x75f1, 0x4fa, 0x7bd0, 0xfcc3, 0x24dd, 0xcc2, 0x0, 0x0);
        gbc.writeMem(0x75f1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4fa, gbc.sp());
        EXPECT(0x75f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0035
        gbc.setState(0x38e7, 0x7b96, 0x38c0, 0xd24a, 0xaa5e, 0x7221, 0x0, 0x1);
        gbc.writeMem(0x38e7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7b96, gbc.sp());
        EXPECT(0x38e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0036
        gbc.setState(0xdb43, 0x9e36, 0xf8e0, 0xeae3, 0xe8cc, 0x4706, 0x0, 0x1);
        gbc.writeMem(0xdb43, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9e36, gbc.sp());
        EXPECT(0xdb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb43));
        EXPECT(0xb3, gbc.readMem(0xdb44));
        // CB B3 0038
        gbc.setState(0xeebe, 0x5251, 0x4130, 0xfe16, 0xb068, 0xf3aa, 0x0, 0x1);
        gbc.writeMem(0xeebe, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5251, gbc.sp());
        EXPECT(0xeec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeebe));
        EXPECT(0xb3, gbc.readMem(0xeebf));
        // CB B3 0039
        gbc.setState(0x9d50, 0xe895, 0x1be0, 0x92c5, 0x9460, 0x42a2, 0x1, 0x1);
        gbc.writeMem(0x9d50, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe895, gbc.sp());
        EXPECT(0x9d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d50));
        EXPECT(0xb3, gbc.readMem(0x9d51));
        // CB B3 003A
        gbc.setState(0x89d2, 0x97c1, 0x5420, 0xe6d1, 0xd88c, 0x8c6b, 0x1, 0x1);
        gbc.writeMem(0x89d2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x97c1, gbc.sp());
        EXPECT(0x89d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d2));
        EXPECT(0xb3, gbc.readMem(0x89d3));
        // CB B3 003B
        gbc.setState(0xd4c1, 0x6ff2, 0x2bf0, 0x8fdf, 0xf5ba, 0xd6f0, 0x0, 0x1);
        gbc.writeMem(0xd4c1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6ff2, gbc.sp());
        EXPECT(0xd4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c1));
        EXPECT(0xb3, gbc.readMem(0xd4c2));
        // CB B3 003C
        gbc.setState(0xe0a4, 0x4aae, 0xf350, 0x845d, 0xd473, 0xf39d, 0x0, 0x0);
        gbc.writeMem(0xe0a4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4aae, gbc.sp());
        EXPECT(0xe0a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a4));
        EXPECT(0xb3, gbc.readMem(0xe0a5));
        // CB B3 003D
        gbc.setState(0x6a2e, 0x58ad, 0x8d20, 0x6283, 0x8623, 0xb961, 0x0, 0x0);
        gbc.writeMem(0x6a2e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x58ad, gbc.sp());
        EXPECT(0x6a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 003E
        gbc.setState(0xa758, 0x71d, 0x1fb0, 0xfa62, 0x3ba8, 0x3e23, 0x1, 0x1);
        gbc.writeMem(0xa758, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x71d, gbc.sp());
        EXPECT(0xa75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa758));
        EXPECT(0xb3, gbc.readMem(0xa759));
        // CB B3 003F
        gbc.setState(0x21f9, 0x1cff, 0x3dc0, 0xcb61, 0xbb3a, 0xd055, 0x1, 0x1);
        gbc.writeMem(0x21f9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1cff, gbc.sp());
        EXPECT(0x21fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0040
        gbc.setState(0x1007, 0xf139, 0x9fd0, 0x49d6, 0x769e, 0xdb0f, 0x1, 0x0);
        gbc.writeMem(0x1007, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf139, gbc.sp());
        EXPECT(0x1009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0041
        gbc.setState(0x30fc, 0x235a, 0xa10, 0x9906, 0xfe7a, 0x7d00, 0x1, 0x0);
        gbc.writeMem(0x30fc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x235a, gbc.sp());
        EXPECT(0x30fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0042
        gbc.setState(0x5907, 0x7e30, 0xb840, 0xfcef, 0xd6ed, 0x97af, 0x0, 0x0);
        gbc.writeMem(0x5907, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7e30, gbc.sp());
        EXPECT(0x5909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0043
        gbc.setState(0x313b, 0xed72, 0x32b0, 0xa019, 0x7399, 0xc6a8, 0x0, 0x0);
        gbc.writeMem(0x313b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xed72, gbc.sp());
        EXPECT(0x313d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0044
        gbc.setState(0x9f21, 0x3c5c, 0xc600, 0xaa28, 0x62f1, 0xee8d, 0x1, 0x0);
        gbc.writeMem(0x9f21, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3c5c, gbc.sp());
        EXPECT(0x9f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f21));
        EXPECT(0xb3, gbc.readMem(0x9f22));
        // CB B3 0045
        gbc.setState(0x66e3, 0x9b94, 0x6ef0, 0xdc42, 0xf816, 0x6280, 0x1, 0x1);
        gbc.writeMem(0x66e3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9b94, gbc.sp());
        EXPECT(0x66e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0046
        gbc.setState(0xdd6d, 0x6406, 0xe560, 0x35b5, 0x5d6c, 0xd13, 0x0, 0x0);
        gbc.writeMem(0xdd6d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6406, gbc.sp());
        EXPECT(0xdd6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd6d));
        EXPECT(0xb3, gbc.readMem(0xdd6e));
        // CB B3 0047
        gbc.setState(0x7400, 0xa121, 0x40c0, 0xdbe2, 0x9943, 0xce15, 0x1, 0x0);
        gbc.writeMem(0x7400, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa121, gbc.sp());
        EXPECT(0x7402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0048
        gbc.setState(0xef7e, 0xa139, 0x6870, 0xed05, 0x2045, 0x805d, 0x0, 0x1);
        gbc.writeMem(0xef7e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa139, gbc.sp());
        EXPECT(0xef80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7e));
        EXPECT(0xb3, gbc.readMem(0xef7f));
        // CB B3 0049
        gbc.setState(0x7768, 0xe54b, 0x13e0, 0x4fe3, 0x22b9, 0x3b07, 0x1, 0x0);
        gbc.writeMem(0x7768, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe54b, gbc.sp());
        EXPECT(0x776a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 004B
        gbc.setState(0x2563, 0xf085, 0xdc40, 0xcb3a, 0xcaf2, 0x17d4, 0x0, 0x1);
        gbc.writeMem(0x2563, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf085, gbc.sp());
        EXPECT(0x2565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 004C
        gbc.setState(0x7795, 0xe79f, 0xa980, 0x50c3, 0xc125, 0x3e3b, 0x0, 0x0);
        gbc.writeMem(0x7795, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe79f, gbc.sp());
        EXPECT(0x7797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 004D
        gbc.setState(0xc84c, 0x9b8b, 0xfa0, 0xdeca, 0xc7bf, 0x5e16, 0x1, 0x0);
        gbc.writeMem(0xc84c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9b8b, gbc.sp());
        EXPECT(0xc84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84c));
        EXPECT(0xb3, gbc.readMem(0xc84d));
        // CB B3 004E
        gbc.setState(0x1c1a, 0x496e, 0xdf80, 0x6b4e, 0x600c, 0xd7c6, 0x1, 0x1);
        gbc.writeMem(0x1c1a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x496e, gbc.sp());
        EXPECT(0x1c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 004F
        gbc.setState(0x85de, 0x68f0, 0x6b50, 0x7a13, 0xbb46, 0xd10e, 0x1, 0x0);
        gbc.writeMem(0x85de, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x68f0, gbc.sp());
        EXPECT(0x85e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85de));
        EXPECT(0xb3, gbc.readMem(0x85df));
        // CB B3 0050
        gbc.setState(0xec1f, 0x8509, 0xe3a0, 0x42e6, 0xc425, 0x8a43, 0x1, 0x0);
        gbc.writeMem(0xec1f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8509, gbc.sp());
        EXPECT(0xec21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1f));
        EXPECT(0xb3, gbc.readMem(0xec20));
        // CB B3 0051
        gbc.setState(0x44a, 0xcbde, 0xd7e0, 0x618, 0x4ece, 0xfeca, 0x0, 0x0);
        gbc.writeMem(0x44a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcbde, gbc.sp());
        EXPECT(0x44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0053
        gbc.setState(0xa22a, 0xabb9, 0x2f20, 0xf3f8, 0x47bd, 0x22b0, 0x0, 0x1);
        gbc.writeMem(0xa22a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xabb9, gbc.sp());
        EXPECT(0xa22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22a));
        EXPECT(0xb3, gbc.readMem(0xa22b));
        // CB B3 0054
        gbc.setState(0x75d2, 0xc925, 0x7b10, 0x398a, 0x6198, 0x9b28, 0x1, 0x0);
        gbc.writeMem(0x75d2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc925, gbc.sp());
        EXPECT(0x75d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0055
        gbc.setState(0xbbd6, 0xe0ec, 0x1fc0, 0xcde5, 0x68e5, 0x815, 0x0, 0x0);
        gbc.writeMem(0xbbd6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe0ec, gbc.sp());
        EXPECT(0xbbd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd6));
        EXPECT(0xb3, gbc.readMem(0xbbd7));
        // CB B3 0056
        gbc.setState(0xdc73, 0x9f05, 0xcf40, 0x85b, 0xc383, 0xfdab, 0x0, 0x0);
        gbc.writeMem(0xdc73, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9f05, gbc.sp());
        EXPECT(0xdc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc73));
        EXPECT(0xb3, gbc.readMem(0xdc74));
        // CB B3 0057
        gbc.setState(0x3a7e, 0x622c, 0xa5c0, 0xe1f4, 0xb5e2, 0x82fc, 0x1, 0x0);
        gbc.writeMem(0x3a7e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x622c, gbc.sp());
        EXPECT(0x3a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0058
        gbc.setState(0x8082, 0xce5e, 0xe250, 0x1966, 0xa702, 0x2403, 0x0, 0x0);
        gbc.writeMem(0x8082, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xce5e, gbc.sp());
        EXPECT(0x8084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8082));
        EXPECT(0xb3, gbc.readMem(0x8083));
        // CB B3 0059
        gbc.setState(0xc42, 0xf21b, 0x7070, 0x79dc, 0xdc5a, 0x94c5, 0x0, 0x0);
        gbc.writeMem(0xc42, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf21b, gbc.sp());
        EXPECT(0xc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 005A
        gbc.setState(0xe915, 0xadd5, 0xd9f0, 0x633, 0x3c45, 0x360f, 0x0, 0x0);
        gbc.writeMem(0xe915, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xadd5, gbc.sp());
        EXPECT(0xe917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe915));
        EXPECT(0xb3, gbc.readMem(0xe916));
        // CB B3 005C
        gbc.setState(0x57bf, 0x8492, 0x58e0, 0x7686, 0x2112, 0xa193, 0x1, 0x0);
        gbc.writeMem(0x57bf, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8492, gbc.sp());
        EXPECT(0x57c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 005D
        gbc.setState(0xc708, 0x2616, 0x6c40, 0x3588, 0x91c7, 0xf946, 0x0, 0x0);
        gbc.writeMem(0xc708, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2616, gbc.sp());
        EXPECT(0xc70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc708));
        EXPECT(0xb3, gbc.readMem(0xc709));
        // CB B3 005E
        gbc.setState(0x922e, 0x8541, 0x8810, 0x7322, 0x41c3, 0xc0fc, 0x0, 0x1);
        gbc.writeMem(0x922e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8541, gbc.sp());
        EXPECT(0x9230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922e));
        EXPECT(0xb3, gbc.readMem(0x922f));
        // CB B3 005F
        gbc.setState(0x4f41, 0x40a, 0x9600, 0x8e16, 0xeef7, 0x813b, 0x0, 0x0);
        gbc.writeMem(0x4f41, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x40a, gbc.sp());
        EXPECT(0x4f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0060
        gbc.setState(0x1c0d, 0xc3f5, 0x5060, 0x8d76, 0x3a15, 0x7555, 0x1, 0x1);
        gbc.writeMem(0x1c0d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc3f5, gbc.sp());
        EXPECT(0x1c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0063
        gbc.setState(0x98e4, 0xda89, 0x1690, 0x98ef, 0xc782, 0x1506, 0x1, 0x0);
        gbc.writeMem(0x98e4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0x98e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e4));
        EXPECT(0xb3, gbc.readMem(0x98e5));
        // CB B3 0064
        gbc.setState(0x907f, 0xe624, 0xcf30, 0x70ed, 0xc987, 0x28d4, 0x0, 0x0);
        gbc.writeMem(0x907f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe624, gbc.sp());
        EXPECT(0x9081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x907f));
        EXPECT(0xb3, gbc.readMem(0x9080));
        // CB B3 0065
        gbc.setState(0xc205, 0x7535, 0x1db0, 0xb073, 0x3386, 0x34fb, 0x0, 0x0);
        gbc.writeMem(0xc205, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7535, gbc.sp());
        EXPECT(0xc207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc205));
        EXPECT(0xb3, gbc.readMem(0xc206));
        // CB B3 0066
        gbc.setState(0xbdb5, 0x5d54, 0xac50, 0x8801, 0xfda9, 0xb98f, 0x0, 0x0);
        gbc.writeMem(0xbdb5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5d54, gbc.sp());
        EXPECT(0xbdb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb5));
        EXPECT(0xb3, gbc.readMem(0xbdb6));
        // CB B3 0067
        gbc.setState(0xc4eb, 0x83d2, 0x7e50, 0x188d, 0xed88, 0x5000, 0x1, 0x0);
        gbc.writeMem(0xc4eb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x83d2, gbc.sp());
        EXPECT(0xc4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4eb));
        EXPECT(0xb3, gbc.readMem(0xc4ec));
        // CB B3 0068
        gbc.setState(0xc94b, 0x4344, 0x1410, 0x5f9e, 0x1ed1, 0xee28, 0x1, 0x1);
        gbc.writeMem(0xc94b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4344, gbc.sp());
        EXPECT(0xc94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94b));
        EXPECT(0xb3, gbc.readMem(0xc94c));
        // CB B3 0069
        gbc.setState(0x98cf, 0xe780, 0x8460, 0xdcdf, 0x3db, 0xb5da, 0x1, 0x0);
        gbc.writeMem(0x98cf, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe780, gbc.sp());
        EXPECT(0x98d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98cf));
        EXPECT(0xb3, gbc.readMem(0x98d0));
        // CB B3 006A
        gbc.setState(0x6c8f, 0xa2aa, 0xbfc0, 0xfdf9, 0xbf11, 0x1764, 0x0, 0x0);
        gbc.writeMem(0x6c8f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa2aa, gbc.sp());
        EXPECT(0x6c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 006B
        gbc.setState(0xab35, 0x6bb9, 0x2e80, 0x6273, 0xe19e, 0x634d, 0x0, 0x1);
        gbc.writeMem(0xab35, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6bb9, gbc.sp());
        EXPECT(0xab37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab35));
        EXPECT(0xb3, gbc.readMem(0xab36));
        // CB B3 006C
        gbc.setState(0x8889, 0x3665, 0xc9b0, 0xc0db, 0xb121, 0x59ec, 0x0, 0x0);
        gbc.writeMem(0x8889, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3665, gbc.sp());
        EXPECT(0x888b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8889));
        EXPECT(0xb3, gbc.readMem(0x888a));
        // CB B3 006D
        gbc.setState(0xd633, 0xa360, 0x6500, 0xa610, 0x432e, 0xb8bc, 0x1, 0x0);
        gbc.writeMem(0xd633, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa360, gbc.sp());
        EXPECT(0xd635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd633));
        EXPECT(0xb3, gbc.readMem(0xd634));
        // CB B3 006E
        gbc.setState(0xa9f3, 0x4a79, 0x6b90, 0xe2a9, 0xd68a, 0x8128, 0x0, 0x1);
        gbc.writeMem(0xa9f3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4a79, gbc.sp());
        EXPECT(0xa9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f3));
        EXPECT(0xb3, gbc.readMem(0xa9f4));
        // CB B3 006F
        gbc.setState(0x12d7, 0x3a37, 0x5c40, 0x8786, 0x26fa, 0xa5a6, 0x1, 0x1);
        gbc.writeMem(0x12d7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3a37, gbc.sp());
        EXPECT(0x12d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0070
        gbc.setState(0x6f0f, 0xf07b, 0xcb70, 0x9014, 0x10af, 0xfb52, 0x1, 0x0);
        gbc.writeMem(0x6f0f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf07b, gbc.sp());
        EXPECT(0x6f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0071
        gbc.setState(0x3f, 0x28dc, 0x9880, 0x7c02, 0xb89, 0x4eee, 0x1, 0x0);
        gbc.writeMem(0x3f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x28dc, gbc.sp());
        EXPECT(0x41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0072
        gbc.setState(0x9efe, 0x255b, 0xbbb0, 0x209d, 0xb411, 0x60d, 0x1, 0x1);
        gbc.writeMem(0x9efe, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x255b, gbc.sp());
        EXPECT(0x9f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9efe));
        EXPECT(0xb3, gbc.readMem(0x9eff));
        // CB B3 0073
        gbc.setState(0x2af5, 0xce3c, 0x2d00, 0x38bd, 0xc796, 0xc329, 0x1, 0x1);
        gbc.writeMem(0x2af5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xce3c, gbc.sp());
        EXPECT(0x2af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0074
        gbc.setState(0xae7e, 0x1aaa, 0x57e0, 0x8b08, 0xda7e, 0xc30, 0x1, 0x0);
        gbc.writeMem(0xae7e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1aaa, gbc.sp());
        EXPECT(0xae80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7e));
        EXPECT(0xb3, gbc.readMem(0xae7f));
        // CB B3 0075
        gbc.setState(0xdc6c, 0x8647, 0xd6a0, 0xe0df, 0xaf2, 0x2d31, 0x1, 0x0);
        gbc.writeMem(0xdc6c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8647, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6c));
        EXPECT(0xb3, gbc.readMem(0xdc6d));
        // CB B3 0076
        gbc.setState(0x1eeb, 0xd543, 0x6ea0, 0x7e68, 0x4432, 0x215, 0x1, 0x0);
        gbc.writeMem(0x1eeb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd543, gbc.sp());
        EXPECT(0x1eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0077
        gbc.setState(0xbe6e, 0x1040, 0x6a50, 0x2a8a, 0x2b24, 0xc37c, 0x0, 0x1);
        gbc.writeMem(0xbe6e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1040, gbc.sp());
        EXPECT(0xbe70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6e));
        EXPECT(0xb3, gbc.readMem(0xbe6f));
        // CB B3 0078
        gbc.setState(0x400c, 0x87bc, 0x2ea0, 0xbfd6, 0xa049, 0xe324, 0x1, 0x1);
        gbc.writeMem(0x400c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x87bc, gbc.sp());
        EXPECT(0x400e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0079
        gbc.setState(0x17f4, 0xc9d3, 0x19a0, 0x8a05, 0x8518, 0xa83c, 0x0, 0x1);
        gbc.writeMem(0x17f4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc9d3, gbc.sp());
        EXPECT(0x17f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 007A
        gbc.setState(0xada5, 0x40ff, 0x3540, 0x8c1, 0x88d7, 0x4eb8, 0x0, 0x1);
        gbc.writeMem(0xada5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x40ff, gbc.sp());
        EXPECT(0xada7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada5));
        EXPECT(0xb3, gbc.readMem(0xada6));
        // CB B3 007B
        gbc.setState(0xb393, 0x929b, 0x56f0, 0xa04f, 0x1db, 0x2a46, 0x1, 0x1);
        gbc.writeMem(0xb393, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x929b, gbc.sp());
        EXPECT(0xb395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb393));
        EXPECT(0xb3, gbc.readMem(0xb394));
        // CB B3 007C
        gbc.setState(0x5238, 0xef86, 0xad10, 0x8384, 0xe691, 0xb938, 0x1, 0x1);
        gbc.writeMem(0x5238, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xef86, gbc.sp());
        EXPECT(0x523a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 007D
        gbc.setState(0xa2eb, 0x5a82, 0x67a0, 0xfdc8, 0x4bd, 0xaeb4, 0x0, 0x1);
        gbc.writeMem(0xa2eb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5a82, gbc.sp());
        EXPECT(0xa2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2eb));
        EXPECT(0xb3, gbc.readMem(0xa2ec));
        // CB B3 007E
        gbc.setState(0x4e77, 0x86b6, 0xd500, 0x84, 0x7678, 0xd7b9, 0x1, 0x0);
        gbc.writeMem(0x4e77, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x86b6, gbc.sp());
        EXPECT(0x4e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 007F
        gbc.setState(0xc2ba, 0xc0d5, 0x6820, 0x5c77, 0xdc7c, 0x916e, 0x1, 0x1);
        gbc.writeMem(0xc2ba, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc0d5, gbc.sp());
        EXPECT(0xc2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ba));
        EXPECT(0xb3, gbc.readMem(0xc2bb));
        // CB B3 0080
        gbc.setState(0x4093, 0xa6e3, 0xb0b0, 0x620b, 0xc826, 0x12a, 0x1, 0x1);
        gbc.writeMem(0x4093, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa6e3, gbc.sp());
        EXPECT(0x4095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0081
        gbc.setState(0xa033, 0x384a, 0x1b20, 0xc186, 0xdf95, 0xde95, 0x0, 0x0);
        gbc.writeMem(0xa033, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x384a, gbc.sp());
        EXPECT(0xa035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa033));
        EXPECT(0xb3, gbc.readMem(0xa034));
        // CB B3 0082
        gbc.setState(0x23f7, 0xea35, 0xafd0, 0x7ff8, 0xfa7b, 0x86e1, 0x0, 0x1);
        gbc.writeMem(0x23f7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xea35, gbc.sp());
        EXPECT(0x23f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0083
        gbc.setState(0xda34, 0xb5b, 0x2f20, 0x1b80, 0xeaa, 0x45b7, 0x0, 0x0);
        gbc.writeMem(0xda34, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb5b, gbc.sp());
        EXPECT(0xda36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda34));
        EXPECT(0xb3, gbc.readMem(0xda35));
        // CB B3 0084
        gbc.setState(0x5af3, 0xcbef, 0xdf80, 0x41a, 0x9b, 0x816, 0x0, 0x1);
        gbc.writeMem(0x5af3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcbef, gbc.sp());
        EXPECT(0x5af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0085
        gbc.setState(0xdec3, 0x243b, 0x3020, 0x1095, 0x5e9a, 0xd5d4, 0x1, 0x0);
        gbc.writeMem(0xdec3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x243b, gbc.sp());
        EXPECT(0xdec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec3));
        EXPECT(0xb3, gbc.readMem(0xdec4));
        // CB B3 0086
        gbc.setState(0x679c, 0x1ff6, 0x72c0, 0xa410, 0x82c0, 0x486a, 0x0, 0x0);
        gbc.writeMem(0x679c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1ff6, gbc.sp());
        EXPECT(0x679e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0087
        gbc.setState(0xac6, 0x683, 0x4c80, 0x3a69, 0x620, 0xe07b, 0x1, 0x1);
        gbc.writeMem(0xac6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x683, gbc.sp());
        EXPECT(0xac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0088
        gbc.setState(0x46a7, 0x13e1, 0xe8f0, 0x6aa6, 0x38bb, 0x91dc, 0x1, 0x0);
        gbc.writeMem(0x46a7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x13e1, gbc.sp());
        EXPECT(0x46a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0089
        gbc.setState(0x9382, 0xc61b, 0xf6a0, 0x5d56, 0x27fd, 0x8fe1, 0x1, 0x0);
        gbc.writeMem(0x9382, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc61b, gbc.sp());
        EXPECT(0x9384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9382));
        EXPECT(0xb3, gbc.readMem(0x9383));
        // CB B3 008A
        gbc.setState(0x63dc, 0x5436, 0x73c0, 0x1134, 0x55af, 0x94dc, 0x0, 0x0);
        gbc.writeMem(0x63dc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5436, gbc.sp());
        EXPECT(0x63de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 008B
        gbc.setState(0x559d, 0x7e84, 0xe7d0, 0x891, 0x8efd, 0x369c, 0x1, 0x0);
        gbc.writeMem(0x559d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7e84, gbc.sp());
        EXPECT(0x559f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 008C
        gbc.setState(0x1f67, 0x137a, 0x71f0, 0xf685, 0x159e, 0xb51a, 0x1, 0x1);
        gbc.writeMem(0x1f67, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x137a, gbc.sp());
        EXPECT(0x1f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 008D
        gbc.setState(0x98eb, 0x5877, 0x53f0, 0x5fab, 0x8866, 0x1386, 0x1, 0x0);
        gbc.writeMem(0x98eb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5877, gbc.sp());
        EXPECT(0x98ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98eb));
        EXPECT(0xb3, gbc.readMem(0x98ec));
        // CB B3 008E
        gbc.setState(0xec87, 0xef1, 0xa870, 0xd31b, 0xae42, 0xb84b, 0x1, 0x0);
        gbc.writeMem(0xec87, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xef1, gbc.sp());
        EXPECT(0xec89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec87));
        EXPECT(0xb3, gbc.readMem(0xec88));
        // CB B3 008F
        gbc.setState(0x527a, 0x48fb, 0xdf10, 0x211, 0xed5, 0x8455, 0x0, 0x0);
        gbc.writeMem(0x527a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x48fb, gbc.sp());
        EXPECT(0x527c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0090
        gbc.setState(0x18a, 0xc72e, 0x7cc0, 0x51b9, 0x6b21, 0x975c, 0x0, 0x1);
        gbc.writeMem(0x18a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc72e, gbc.sp());
        EXPECT(0x18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0091
        gbc.setState(0xba25, 0x1663, 0xd30, 0x739e, 0xb957, 0xe4fc, 0x1, 0x0);
        gbc.writeMem(0xba25, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1663, gbc.sp());
        EXPECT(0xba27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba25));
        EXPECT(0xb3, gbc.readMem(0xba26));
        // CB B3 0092
        gbc.setState(0xeff8, 0x98d2, 0x89d0, 0xab84, 0xaca7, 0xfd51, 0x1, 0x0);
        gbc.writeMem(0xeff8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x98d2, gbc.sp());
        EXPECT(0xeffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff8));
        EXPECT(0xb3, gbc.readMem(0xeff9));
        // CB B3 0093
        gbc.setState(0xb19c, 0xb33d, 0xc570, 0x6650, 0x1cd3, 0x6fd8, 0x1, 0x0);
        gbc.writeMem(0xb19c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb33d, gbc.sp());
        EXPECT(0xb19e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19c));
        EXPECT(0xb3, gbc.readMem(0xb19d));
        // CB B3 0094
        gbc.setState(0x400, 0x2cd3, 0x320, 0x40d4, 0x1597, 0x8a07, 0x1, 0x1);
        gbc.writeMem(0x400, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2cd3, gbc.sp());
        EXPECT(0x402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0095
        gbc.setState(0xae0b, 0x2e72, 0x3200, 0x47ae, 0x48fb, 0xbac3, 0x0, 0x0);
        gbc.writeMem(0xae0b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2e72, gbc.sp());
        EXPECT(0xae0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0b));
        EXPECT(0xb3, gbc.readMem(0xae0c));
        // CB B3 0096
        gbc.setState(0xe0b3, 0x7056, 0xf870, 0xedbf, 0x532f, 0x49f0, 0x0, 0x1);
        gbc.writeMem(0xe0b3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7056, gbc.sp());
        EXPECT(0xe0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b3));
        EXPECT(0xb3, gbc.readMem(0xe0b4));
        // CB B3 0097
        gbc.setState(0x71a1, 0x1ebe, 0x7480, 0x7e14, 0x8092, 0x3167, 0x1, 0x0);
        gbc.writeMem(0x71a1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1ebe, gbc.sp());
        EXPECT(0x71a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0098
        gbc.setState(0xd5b8, 0xc46b, 0x12c0, 0x51, 0x1df8, 0x732c, 0x0, 0x0);
        gbc.writeMem(0xd5b8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc46b, gbc.sp());
        EXPECT(0xd5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b8));
        EXPECT(0xb3, gbc.readMem(0xd5b9));
        // CB B3 0099
        gbc.setState(0x3620, 0x9c3d, 0x5100, 0xab76, 0x62ed, 0x6a28, 0x1, 0x1);
        gbc.writeMem(0x3620, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9c3d, gbc.sp());
        EXPECT(0x3622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 009A
        gbc.setState(0xcb32, 0x103f, 0xc000, 0xf720, 0x89f8, 0xda6e, 0x0, 0x0);
        gbc.writeMem(0xcb32, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x103f, gbc.sp());
        EXPECT(0xcb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb32));
        EXPECT(0xb3, gbc.readMem(0xcb33));
        // CB B3 009B
        gbc.setState(0x852e, 0x77ed, 0x23e0, 0x1ad, 0x19e1, 0x5708, 0x1, 0x1);
        gbc.writeMem(0x852e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x77ed, gbc.sp());
        EXPECT(0x8530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852e));
        EXPECT(0xb3, gbc.readMem(0x852f));
        // CB B3 009C
        gbc.setState(0x24a, 0xc870, 0x9270, 0x485c, 0xd99b, 0x8961, 0x0, 0x0);
        gbc.writeMem(0x24a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc870, gbc.sp());
        EXPECT(0x24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 009D
        gbc.setState(0x9f1a, 0xd195, 0xd5c0, 0x1a0d, 0x9331, 0x1491, 0x1, 0x1);
        gbc.writeMem(0x9f1a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd195, gbc.sp());
        EXPECT(0x9f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f1a));
        EXPECT(0xb3, gbc.readMem(0x9f1b));
        // CB B3 009E
        gbc.setState(0x81b4, 0x4398, 0x8350, 0x1922, 0x963b, 0xd622, 0x1, 0x1);
        gbc.writeMem(0x81b4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4398, gbc.sp());
        EXPECT(0x81b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b4));
        EXPECT(0xb3, gbc.readMem(0x81b5));
        // CB B3 009F
        gbc.setState(0xb0bf, 0x1845, 0x8130, 0xa53f, 0x765c, 0xd248, 0x0, 0x0);
        gbc.writeMem(0xb0bf, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1845, gbc.sp());
        EXPECT(0xb0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0bf));
        EXPECT(0xb3, gbc.readMem(0xb0c0));
        // CB B3 00A0
        gbc.setState(0x1c22, 0xb882, 0xc8d0, 0xe0e4, 0xf978, 0xb331, 0x0, 0x1);
        gbc.writeMem(0x1c22, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb882, gbc.sp());
        EXPECT(0x1c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00A1
        gbc.setState(0x4037, 0xa6c7, 0x84c0, 0xdf0a, 0x14c6, 0xafc4, 0x1, 0x1);
        gbc.writeMem(0x4037, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa6c7, gbc.sp());
        EXPECT(0x4039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00A2
        gbc.setState(0xd078, 0xde34, 0x5680, 0x7b9e, 0x18a0, 0x306d, 0x1, 0x1);
        gbc.writeMem(0xd078, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xde34, gbc.sp());
        EXPECT(0xd07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd078));
        EXPECT(0xb3, gbc.readMem(0xd079));
        // CB B3 00A3
        gbc.setState(0x85d4, 0xb87d, 0x1f40, 0x7f65, 0x3e83, 0xc4c7, 0x1, 0x0);
        gbc.writeMem(0x85d4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb87d, gbc.sp());
        EXPECT(0x85d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d4));
        EXPECT(0xb3, gbc.readMem(0x85d5));
        // CB B3 00A4
        gbc.setState(0xaaea, 0x6787, 0xd3c0, 0xb337, 0xe690, 0x9718, 0x0, 0x0);
        gbc.writeMem(0xaaea, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6787, gbc.sp());
        EXPECT(0xaaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaea));
        EXPECT(0xb3, gbc.readMem(0xaaeb));
        // CB B3 00A5
        gbc.setState(0xdd45, 0x28f5, 0xee80, 0x2f4d, 0xcb6c, 0xb125, 0x0, 0x0);
        gbc.writeMem(0xdd45, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x28f5, gbc.sp());
        EXPECT(0xdd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd45));
        EXPECT(0xb3, gbc.readMem(0xdd46));
        // CB B3 00A7
        gbc.setState(0x863b, 0xc98e, 0x5c70, 0x95b8, 0xb008, 0xa746, 0x0, 0x1);
        gbc.writeMem(0x863b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc98e, gbc.sp());
        EXPECT(0x863d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863b));
        EXPECT(0xb3, gbc.readMem(0x863c));
        // CB B3 00A8
        gbc.setState(0x23cd, 0x3c0f, 0x7b10, 0xad1, 0x35a5, 0x4341, 0x1, 0x1);
        gbc.writeMem(0x23cd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3c0f, gbc.sp());
        EXPECT(0x23cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00A9
        gbc.setState(0x8dc8, 0xac08, 0xca30, 0x9190, 0xc2b7, 0x8500, 0x0, 0x1);
        gbc.writeMem(0x8dc8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xac08, gbc.sp());
        EXPECT(0x8dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc8));
        EXPECT(0xb3, gbc.readMem(0x8dc9));
        // CB B3 00AA
        gbc.setState(0x646, 0x9a0d, 0x4a50, 0x7c80, 0x5488, 0x3a18, 0x0, 0x0);
        gbc.writeMem(0x646, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9a0d, gbc.sp());
        EXPECT(0x648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00AB
        gbc.setState(0xedb8, 0x3cef, 0xc9a0, 0xc352, 0x5ed1, 0x933b, 0x0, 0x0);
        gbc.writeMem(0xedb8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3cef, gbc.sp());
        EXPECT(0xedba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb8));
        EXPECT(0xb3, gbc.readMem(0xedb9));
        // CB B3 00AC
        gbc.setState(0x56c5, 0x9c52, 0x2750, 0x960a, 0x69a9, 0x5e31, 0x1, 0x0);
        gbc.writeMem(0x56c5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9c52, gbc.sp());
        EXPECT(0x56c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00AD
        gbc.setState(0xcab2, 0xb8b, 0x7310, 0xa3cc, 0xadb8, 0x15ae, 0x1, 0x0);
        gbc.writeMem(0xcab2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb8b, gbc.sp());
        EXPECT(0xcab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab2));
        EXPECT(0xb3, gbc.readMem(0xcab3));
        // CB B3 00AE
        gbc.setState(0xdcbf, 0xfd70, 0xf20, 0x2d12, 0x7a6f, 0x9a58, 0x1, 0x0);
        gbc.writeMem(0xdcbf, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfd70, gbc.sp());
        EXPECT(0xdcc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbf));
        EXPECT(0xb3, gbc.readMem(0xdcc0));
        // CB B3 00AF
        gbc.setState(0x4a5e, 0x4b12, 0x29a0, 0xc210, 0x5868, 0x5c9c, 0x1, 0x0);
        gbc.writeMem(0x4a5e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4b12, gbc.sp());
        EXPECT(0x4a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00B0
        gbc.setState(0x6c83, 0x763b, 0x74d0, 0x9aa7, 0xe254, 0x75aa, 0x1, 0x1);
        gbc.writeMem(0x6c83, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x763b, gbc.sp());
        EXPECT(0x6c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00B1
        gbc.setState(0xb8b0, 0xc054, 0x51d0, 0x93d5, 0x67b2, 0x9706, 0x1, 0x1);
        gbc.writeMem(0xb8b0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc054, gbc.sp());
        EXPECT(0xb8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b0));
        EXPECT(0xb3, gbc.readMem(0xb8b1));
        // CB B3 00B2
        gbc.setState(0x9309, 0x5cff, 0x9a50, 0xb386, 0xa85a, 0xf1c7, 0x0, 0x1);
        gbc.writeMem(0x9309, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5cff, gbc.sp());
        EXPECT(0x930b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9309));
        EXPECT(0xb3, gbc.readMem(0x930a));
        // CB B3 00B4
        gbc.setState(0x56f8, 0x3d1b, 0xb3e0, 0xf821, 0x18db, 0xd95f, 0x1, 0x1);
        gbc.writeMem(0x56f8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3d1b, gbc.sp());
        EXPECT(0x56fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00B5
        gbc.setState(0x72c8, 0xd600, 0xe020, 0xc9ab, 0xba99, 0xba70, 0x1, 0x0);
        gbc.writeMem(0x72c8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd600, gbc.sp());
        EXPECT(0x72ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00B6
        gbc.setState(0x94e2, 0x2eb2, 0xe520, 0x5397, 0x91ef, 0xadba, 0x1, 0x0);
        gbc.writeMem(0x94e2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2eb2, gbc.sp());
        EXPECT(0x94e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e2));
        EXPECT(0xb3, gbc.readMem(0x94e3));
        // CB B3 00B7
        gbc.setState(0xa891, 0xa6e1, 0xefc0, 0x164a, 0x1380, 0xdb14, 0x0, 0x1);
        gbc.writeMem(0xa891, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa6e1, gbc.sp());
        EXPECT(0xa893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa891));
        EXPECT(0xb3, gbc.readMem(0xa892));
        // CB B3 00B8
        gbc.setState(0xb40c, 0x6d46, 0x2740, 0x158, 0x329b, 0x5653, 0x0, 0x1);
        gbc.writeMem(0xb40c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6d46, gbc.sp());
        EXPECT(0xb40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40c));
        EXPECT(0xb3, gbc.readMem(0xb40d));
        // CB B3 00B9
        gbc.setState(0x449c, 0x4ed3, 0x2580, 0x5f6e, 0x46a3, 0x133, 0x1, 0x1);
        gbc.writeMem(0x449c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4ed3, gbc.sp());
        EXPECT(0x449e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00BA
        gbc.setState(0x213a, 0xab8b, 0xcc50, 0xf0e4, 0xd7f6, 0xfb4d, 0x0, 0x0);
        gbc.writeMem(0x213a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xab8b, gbc.sp());
        EXPECT(0x213c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00BB
        gbc.setState(0xce41, 0xc7f6, 0x7a90, 0xcb4e, 0xcbf9, 0x12dd, 0x1, 0x1);
        gbc.writeMem(0xce41, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc7f6, gbc.sp());
        EXPECT(0xce43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce41));
        EXPECT(0xb3, gbc.readMem(0xce42));
        // CB B3 00BC
        gbc.setState(0x1f3e, 0xeef1, 0x5fa0, 0xcfac, 0x26a9, 0xdc9c, 0x1, 0x1);
        gbc.writeMem(0x1f3e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xeef1, gbc.sp());
        EXPECT(0x1f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00BD
        gbc.setState(0x4bf8, 0x1594, 0xc300, 0x3b03, 0x533c, 0xa8a5, 0x1, 0x0);
        gbc.writeMem(0x4bf8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1594, gbc.sp());
        EXPECT(0x4bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00BE
        gbc.setState(0xdd66, 0xfc16, 0x4270, 0x3ced, 0xad96, 0x840c, 0x1, 0x0);
        gbc.writeMem(0xdd66, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfc16, gbc.sp());
        EXPECT(0xdd68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd66));
        EXPECT(0xb3, gbc.readMem(0xdd67));
        // CB B3 00BF
        gbc.setState(0xb6df, 0x8743, 0x5cb0, 0x8da6, 0x94c1, 0xb591, 0x1, 0x1);
        gbc.writeMem(0xb6df, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8743, gbc.sp());
        EXPECT(0xb6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6df));
        EXPECT(0xb3, gbc.readMem(0xb6e0));
        // CB B3 00C0
        gbc.setState(0xe556, 0x2e8b, 0x100, 0xca34, 0x1499, 0xf2d5, 0x0, 0x0);
        gbc.writeMem(0xe556, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2e8b, gbc.sp());
        EXPECT(0xe558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe556));
        EXPECT(0xb3, gbc.readMem(0xe557));
        // CB B3 00C2
        gbc.setState(0x691, 0x4ab8, 0xf790, 0xfab6, 0xcc64, 0x61f8, 0x1, 0x1);
        gbc.writeMem(0x691, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4ab8, gbc.sp());
        EXPECT(0x693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00C3
        gbc.setState(0x63ed, 0xb426, 0x53b0, 0x78db, 0xea85, 0x8462, 0x1, 0x1);
        gbc.writeMem(0x63ed, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb426, gbc.sp());
        EXPECT(0x63ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00C4
        gbc.setState(0x84b8, 0x44f7, 0x82d0, 0x47da, 0x8b4d, 0xf1a3, 0x1, 0x1);
        gbc.writeMem(0x84b8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x44f7, gbc.sp());
        EXPECT(0x84ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b8));
        EXPECT(0xb3, gbc.readMem(0x84b9));
        // CB B3 00C5
        gbc.setState(0x4c7d, 0x25d0, 0xe720, 0xc7a4, 0x23fa, 0xb6c8, 0x0, 0x0);
        gbc.writeMem(0x4c7d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x25d0, gbc.sp());
        EXPECT(0x4c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00C7
        gbc.setState(0xba2b, 0x7301, 0xdcd0, 0x3661, 0x3894, 0x90c2, 0x0, 0x1);
        gbc.writeMem(0xba2b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7301, gbc.sp());
        EXPECT(0xba2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2b));
        EXPECT(0xb3, gbc.readMem(0xba2c));
        // CB B3 00C8
        gbc.setState(0x1ed1, 0xf7f7, 0x75d0, 0x17d0, 0xd7cb, 0xf346, 0x1, 0x1);
        gbc.writeMem(0x1ed1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf7f7, gbc.sp());
        EXPECT(0x1ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00C9
        gbc.setState(0xde4a, 0xda09, 0x8c40, 0xdeb0, 0xa6b8, 0x6266, 0x0, 0x1);
        gbc.writeMem(0xde4a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xda09, gbc.sp());
        EXPECT(0xde4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4a));
        EXPECT(0xb3, gbc.readMem(0xde4b));
        // CB B3 00CA
        gbc.setState(0x8488, 0xb3fc, 0x71a0, 0x1cf0, 0xf5ea, 0xf69, 0x1, 0x1);
        gbc.writeMem(0x8488, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb3fc, gbc.sp());
        EXPECT(0x848a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8488));
        EXPECT(0xb3, gbc.readMem(0x8489));
        // CB B3 00CC
        gbc.setState(0x428, 0x312, 0x6490, 0x5846, 0x2b84, 0x1418, 0x1, 0x0);
        gbc.writeMem(0x428, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x312, gbc.sp());
        EXPECT(0x42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00CD
        gbc.setState(0x905f, 0x68cd, 0x90d0, 0x3e9d, 0x8ef, 0xe5df, 0x0, 0x1);
        gbc.writeMem(0x905f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0x9061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905f));
        EXPECT(0xb3, gbc.readMem(0x9060));
        // CB B3 00CE
        gbc.setState(0xce64, 0x8d99, 0xafd0, 0xe9bd, 0xb86, 0xeb4f, 0x1, 0x0);
        gbc.writeMem(0xce64, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8d99, gbc.sp());
        EXPECT(0xce66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce64));
        EXPECT(0xb3, gbc.readMem(0xce65));
        // CB B3 00CF
        gbc.setState(0x5d62, 0x749d, 0xb780, 0x44de, 0x2304, 0xde2c, 0x1, 0x0);
        gbc.writeMem(0x5d62, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x749d, gbc.sp());
        EXPECT(0x5d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00D0
        gbc.setState(0xab04, 0xf4d7, 0xc2a0, 0x90c5, 0xb0bd, 0xd8c8, 0x1, 0x0);
        gbc.writeMem(0xab04, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf4d7, gbc.sp());
        EXPECT(0xab06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab04));
        EXPECT(0xb3, gbc.readMem(0xab05));
        // CB B3 00D1
        gbc.setState(0xa673, 0xf6f7, 0x110, 0xee83, 0x23fc, 0xd0ee, 0x0, 0x0);
        gbc.writeMem(0xa673, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf6f7, gbc.sp());
        EXPECT(0xa675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa673));
        EXPECT(0xb3, gbc.readMem(0xa674));
        // CB B3 00D3
        gbc.setState(0xac72, 0xc348, 0xf7d0, 0x17c0, 0x7355, 0x3de6, 0x0, 0x1);
        gbc.writeMem(0xac72, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc348, gbc.sp());
        EXPECT(0xac74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac72));
        EXPECT(0xb3, gbc.readMem(0xac73));
        // CB B3 00D4
        gbc.setState(0x5345, 0x74cb, 0x5f80, 0xbde9, 0x9910, 0x50d8, 0x0, 0x0);
        gbc.writeMem(0x5345, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x74cb, gbc.sp());
        EXPECT(0x5347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00D5
        gbc.setState(0xd4a3, 0x119e, 0x1d60, 0xe652, 0x82da, 0x7a13, 0x0, 0x0);
        gbc.writeMem(0xd4a3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x119e, gbc.sp());
        EXPECT(0xd4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a3));
        EXPECT(0xb3, gbc.readMem(0xd4a4));
        // CB B3 00D6
        gbc.setState(0xd90f, 0x72eb, 0x2b90, 0x5ee, 0xacb0, 0x58fe, 0x0, 0x0);
        gbc.writeMem(0xd90f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x72eb, gbc.sp());
        EXPECT(0xd911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90f));
        EXPECT(0xb3, gbc.readMem(0xd910));
        // CB B3 00D7
        gbc.setState(0x5bb2, 0x1f6c, 0x4c00, 0x495c, 0x71ef, 0xb9c2, 0x1, 0x0);
        gbc.writeMem(0x5bb2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1f6c, gbc.sp());
        EXPECT(0x5bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00D8
        gbc.setState(0x1531, 0xcb03, 0xfc10, 0xf84f, 0x4d5d, 0x9302, 0x1, 0x0);
        gbc.writeMem(0x1531, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcb03, gbc.sp());
        EXPECT(0x1533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00D9
        gbc.setState(0xbaf, 0x6e1, 0x6270, 0x22ca, 0xd496, 0x85da, 0x1, 0x0);
        gbc.writeMem(0xbaf, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6e1, gbc.sp());
        EXPECT(0xbb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00DA
        gbc.setState(0xc6d7, 0xaa15, 0x4bc0, 0x7b60, 0x3260, 0xf3a2, 0x1, 0x1);
        gbc.writeMem(0xc6d7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaa15, gbc.sp());
        EXPECT(0xc6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d7));
        EXPECT(0xb3, gbc.readMem(0xc6d8));
        // CB B3 00DD
        gbc.setState(0x68c6, 0xb813, 0x9a30, 0x72bf, 0xc55d, 0xafda, 0x1, 0x0);
        gbc.writeMem(0x68c6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb813, gbc.sp());
        EXPECT(0x68c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00DE
        gbc.setState(0x390c, 0x1bfe, 0x430, 0xddb6, 0x34e1, 0x7719, 0x0, 0x1);
        gbc.writeMem(0x390c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1bfe, gbc.sp());
        EXPECT(0x390e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00DF
        gbc.setState(0x7387, 0x7679, 0xed60, 0xb09c, 0x47fe, 0xef8c, 0x0, 0x1);
        gbc.writeMem(0x7387, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7679, gbc.sp());
        EXPECT(0x7389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00E0
        gbc.setState(0xd333, 0xd3c1, 0x4f40, 0xb996, 0x550c, 0xf10, 0x1, 0x0);
        gbc.writeMem(0xd333, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd3c1, gbc.sp());
        EXPECT(0xd335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd333));
        EXPECT(0xb3, gbc.readMem(0xd334));
        // CB B3 00E1
        gbc.setState(0xc78c, 0x6529, 0x9450, 0x998a, 0xf841, 0x56aa, 0x0, 0x0);
        gbc.writeMem(0xc78c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6529, gbc.sp());
        EXPECT(0xc78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78c));
        EXPECT(0xb3, gbc.readMem(0xc78d));
        // CB B3 00E2
        gbc.setState(0x4d69, 0x47dc, 0x9bb0, 0xd16, 0xef39, 0x9fb2, 0x0, 0x0);
        gbc.writeMem(0x4d69, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x47dc, gbc.sp());
        EXPECT(0x4d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00E3
        gbc.setState(0x662e, 0xf87a, 0x6dc0, 0x9d75, 0xad9f, 0x6a04, 0x0, 0x0);
        gbc.writeMem(0x662e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf87a, gbc.sp());
        EXPECT(0x6630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00E4
        gbc.setState(0x7800, 0xc842, 0xc9f0, 0xd848, 0xfec1, 0xf525, 0x1, 0x0);
        gbc.writeMem(0x7800, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc842, gbc.sp());
        EXPECT(0x7802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00E5
        gbc.setState(0x9, 0x8322, 0x29a0, 0xbaa7, 0x534b, 0xa6d1, 0x0, 0x1);
        gbc.writeMem(0x9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8322, gbc.sp());
        EXPECT(0xb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00E6
        gbc.setState(0x8d5f, 0x432f, 0xf2f0, 0x9ef8, 0x7e4, 0xf663, 0x0, 0x0);
        gbc.writeMem(0x8d5f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x432f, gbc.sp());
        EXPECT(0x8d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5f));
        EXPECT(0xb3, gbc.readMem(0x8d60));
        // CB B3 00E7
        gbc.setState(0xbbdd, 0x7baf, 0x1aa0, 0x8046, 0xc5c8, 0x8b1f, 0x1, 0x1);
        gbc.writeMem(0xbbdd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7baf, gbc.sp());
        EXPECT(0xbbdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbdd));
        EXPECT(0xb3, gbc.readMem(0xbbde));
        // CB B3 00E8
        gbc.setState(0x8113, 0x8e5d, 0x71b0, 0x1249, 0xe8b1, 0x5295, 0x0, 0x1);
        gbc.writeMem(0x8113, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8e5d, gbc.sp());
        EXPECT(0x8115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8113));
        EXPECT(0xb3, gbc.readMem(0x8114));
        // CB B3 00E9
        gbc.setState(0x87c8, 0xf624, 0x3980, 0x2c38, 0x557, 0xe171, 0x1, 0x1);
        gbc.writeMem(0x87c8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf624, gbc.sp());
        EXPECT(0x87ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c8));
        EXPECT(0xb3, gbc.readMem(0x87c9));
        // CB B3 00EA
        gbc.setState(0x52df, 0x9513, 0x8590, 0xceb4, 0x66bb, 0xcdd, 0x1, 0x0);
        gbc.writeMem(0x52df, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9513, gbc.sp());
        EXPECT(0x52e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00EB
        gbc.setState(0x6d93, 0xc697, 0xe730, 0x2a37, 0x1188, 0xa8d9, 0x0, 0x0);
        gbc.writeMem(0x6d93, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc697, gbc.sp());
        EXPECT(0x6d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00EC
        gbc.setState(0x9b1c, 0x24df, 0xa240, 0x4c51, 0x5d03, 0x5eb7, 0x1, 0x1);
        gbc.writeMem(0x9b1c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x24df, gbc.sp());
        EXPECT(0x9b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1c));
        EXPECT(0xb3, gbc.readMem(0x9b1d));
        // CB B3 00ED
        gbc.setState(0xaeba, 0x99d6, 0xbd90, 0xd45d, 0x765, 0x96ea, 0x0, 0x1);
        gbc.writeMem(0xaeba, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x99d6, gbc.sp());
        EXPECT(0xaebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeba));
        EXPECT(0xb3, gbc.readMem(0xaebb));
        // CB B3 00EE
        gbc.setState(0x46ee, 0x567e, 0x3780, 0xa7c6, 0x942e, 0x603e, 0x0, 0x0);
        gbc.writeMem(0x46ee, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x567e, gbc.sp());
        EXPECT(0x46f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00EF
        gbc.setState(0x78d7, 0xb1b8, 0x8bd0, 0xd44f, 0x2b02, 0xea2d, 0x0, 0x1);
        gbc.writeMem(0x78d7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb1b8, gbc.sp());
        EXPECT(0x78d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00F0
        gbc.setState(0xa771, 0x8173, 0xc210, 0xf1f8, 0xb4fb, 0xc1c2, 0x0, 0x0);
        gbc.writeMem(0xa771, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8173, gbc.sp());
        EXPECT(0xa773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa771));
        EXPECT(0xb3, gbc.readMem(0xa772));
        // CB B3 00F2
        gbc.setState(0xbaf9, 0x667c, 0xa830, 0xcc14, 0x4aa3, 0x74f0, 0x1, 0x0);
        gbc.writeMem(0xbaf9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x667c, gbc.sp());
        EXPECT(0xbafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf9));
        EXPECT(0xb3, gbc.readMem(0xbafa));
        // CB B3 00F3
        gbc.setState(0x783, 0x9960, 0x4990, 0xac3f, 0x414, 0xaf6e, 0x0, 0x1);
        gbc.writeMem(0x783, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9960, gbc.sp());
        EXPECT(0x785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00F4
        gbc.setState(0x9bfc, 0xa167, 0xae80, 0xa983, 0x31ec, 0x6417, 0x0, 0x1);
        gbc.writeMem(0x9bfc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa167, gbc.sp());
        EXPECT(0x9bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfc));
        EXPECT(0xb3, gbc.readMem(0x9bfd));
        // CB B3 00F5
        gbc.setState(0x54a2, 0x6406, 0xf030, 0xd498, 0xce89, 0x58f8, 0x1, 0x0);
        gbc.writeMem(0x54a2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6406, gbc.sp());
        EXPECT(0x54a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00F6
        gbc.setState(0x5c7e, 0xab33, 0xc7d0, 0x161f, 0x52ed, 0x2aa9, 0x1, 0x0);
        gbc.writeMem(0x5c7e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xab33, gbc.sp());
        EXPECT(0x5c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 00F7
        gbc.setState(0x9705, 0x16d9, 0x4510, 0x65c0, 0x723e, 0x92f6, 0x1, 0x0);
        gbc.writeMem(0x9705, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x16d9, gbc.sp());
        EXPECT(0x9707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9705));
        EXPECT(0xb3, gbc.readMem(0x9706));
        // CB B3 00F9
        gbc.setState(0x9c3c, 0xfecb, 0x6910, 0x7a90, 0x1ba8, 0x23ec, 0x0, 0x0);
        gbc.writeMem(0x9c3c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfecb, gbc.sp());
        EXPECT(0x9c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3c));
        EXPECT(0xb3, gbc.readMem(0x9c3d));
        // CB B3 00FA
        gbc.setState(0xe921, 0x73ed, 0xdac0, 0x9a3c, 0x9561, 0xa289, 0x1, 0x1);
        gbc.writeMem(0xe921, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x73ed, gbc.sp());
        EXPECT(0xe923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe921));
        EXPECT(0xb3, gbc.readMem(0xe922));
        // CB B3 00FB
        gbc.setState(0x49d1, 0x369e, 0x26e0, 0x9158, 0xcda1, 0x9932, 0x0, 0x0);
        gbc.writeMem(0x49d1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x369e, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 00FD
        gbc.setState(0x8354, 0x244f, 0xa4b0, 0x2001, 0xbffd, 0x38e7, 0x1, 0x0);
        gbc.writeMem(0x8354, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x244f, gbc.sp());
        EXPECT(0x8356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8354));
        EXPECT(0xb3, gbc.readMem(0x8355));
        // CB B3 00FE
        gbc.setState(0xd700, 0x358f, 0x8ba0, 0xd437, 0x4ce1, 0x84fd, 0x0, 0x0);
        gbc.writeMem(0xd700, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x358f, gbc.sp());
        EXPECT(0xd702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd700));
        EXPECT(0xb3, gbc.readMem(0xd701));
        // CB B3 00FF
        gbc.setState(0x7245, 0x1e54, 0x9d80, 0xda7, 0x661a, 0xc430, 0x1, 0x1);
        gbc.writeMem(0x7245, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1e54, gbc.sp());
        EXPECT(0x7247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0100
        gbc.setState(0xb78a, 0x8a7e, 0x7ae0, 0x93fd, 0xbb11, 0xb9ec, 0x1, 0x0);
        gbc.writeMem(0xb78a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8a7e, gbc.sp());
        EXPECT(0xb78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78a));
        EXPECT(0xb3, gbc.readMem(0xb78b));
        // CB B3 0101
        gbc.setState(0x9be9, 0xe884, 0x9bc0, 0x6807, 0xebf2, 0x42ee, 0x1, 0x1);
        gbc.writeMem(0x9be9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe884, gbc.sp());
        EXPECT(0x9beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be9));
        EXPECT(0xb3, gbc.readMem(0x9bea));
        // CB B3 0102
        gbc.setState(0xabb3, 0x161e, 0x94b0, 0xde5a, 0x9e69, 0x40bb, 0x1, 0x0);
        gbc.writeMem(0xabb3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x161e, gbc.sp());
        EXPECT(0xabb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb3));
        EXPECT(0xb3, gbc.readMem(0xabb4));
        // CB B3 0103
        gbc.setState(0xab49, 0x60ea, 0x46c0, 0xbdae, 0x262, 0xeb58, 0x0, 0x1);
        gbc.writeMem(0xab49, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x60ea, gbc.sp());
        EXPECT(0xab4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab49));
        EXPECT(0xb3, gbc.readMem(0xab4a));
        // CB B3 0104
        gbc.setState(0xa31, 0x720f, 0xa870, 0x6f5d, 0x6d06, 0xa955, 0x0, 0x1);
        gbc.writeMem(0xa31, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x720f, gbc.sp());
        EXPECT(0xa33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0105
        gbc.setState(0xa9a0, 0xc886, 0xbe00, 0xe56c, 0x97bc, 0x534b, 0x0, 0x1);
        gbc.writeMem(0xa9a0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc886, gbc.sp());
        EXPECT(0xa9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a0));
        EXPECT(0xb3, gbc.readMem(0xa9a1));
        // CB B3 0106
        gbc.setState(0xb087, 0x8fbb, 0xa3e0, 0x482c, 0x6cb8, 0xb4c3, 0x1, 0x0);
        gbc.writeMem(0xb087, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8fbb, gbc.sp());
        EXPECT(0xb089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb087));
        EXPECT(0xb3, gbc.readMem(0xb088));
        // CB B3 0107
        gbc.setState(0xeacc, 0x5ee8, 0x2e90, 0x17e1, 0x72f0, 0x3874, 0x1, 0x1);
        gbc.writeMem(0xeacc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5ee8, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacc));
        EXPECT(0xb3, gbc.readMem(0xeacd));
        // CB B3 0109
        gbc.setState(0xc0ee, 0xc50f, 0xbd10, 0xa33a, 0x4701, 0xa02b, 0x0, 0x0);
        gbc.writeMem(0xc0ee, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc50f, gbc.sp());
        EXPECT(0xc0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ee));
        EXPECT(0xb3, gbc.readMem(0xc0ef));
        // CB B3 010A
        gbc.setState(0x33f2, 0x389e, 0x5680, 0xbaa0, 0xf158, 0xd0a9, 0x0, 0x1);
        gbc.writeMem(0x33f2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x389e, gbc.sp());
        EXPECT(0x33f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 010B
        gbc.setState(0x79da, 0x4cd, 0xb660, 0x635f, 0x9fd, 0x9309, 0x0, 0x1);
        gbc.writeMem(0x79da, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4cd, gbc.sp());
        EXPECT(0x79dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 010C
        gbc.setState(0x371e, 0xf4c8, 0x8670, 0xb444, 0xbcd2, 0x8914, 0x1, 0x1);
        gbc.writeMem(0x371e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf4c8, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 010D
        gbc.setState(0x6db1, 0x3eaa, 0x40d0, 0xfab, 0x6a75, 0x5b58, 0x0, 0x1);
        gbc.writeMem(0x6db1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3eaa, gbc.sp());
        EXPECT(0x6db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 010E
        gbc.setState(0xba61, 0x17a4, 0x3650, 0xd84b, 0xc214, 0x7f7e, 0x0, 0x1);
        gbc.writeMem(0xba61, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x17a4, gbc.sp());
        EXPECT(0xba63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba61));
        EXPECT(0xb3, gbc.readMem(0xba62));
        // CB B3 010F
        gbc.setState(0x61eb, 0x1a91, 0x5ec0, 0xec32, 0xba76, 0x8e37, 0x0, 0x0);
        gbc.writeMem(0x61eb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1a91, gbc.sp());
        EXPECT(0x61ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0110
        gbc.setState(0x1f73, 0x2e8d, 0xe7b0, 0xb01e, 0x80bc, 0x2f67, 0x1, 0x0);
        gbc.writeMem(0x1f73, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2e8d, gbc.sp());
        EXPECT(0x1f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0111
        gbc.setState(0xc3d2, 0x462e, 0xada0, 0x44e5, 0x2c92, 0xecda, 0x0, 0x1);
        gbc.writeMem(0xc3d2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x462e, gbc.sp());
        EXPECT(0xc3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d2));
        EXPECT(0xb3, gbc.readMem(0xc3d3));
        // CB B3 0112
        gbc.setState(0x2b31, 0xb940, 0xad80, 0x4544, 0x2e9b, 0xba2b, 0x0, 0x0);
        gbc.writeMem(0x2b31, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb940, gbc.sp());
        EXPECT(0x2b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0113
        gbc.setState(0x3106, 0x50f7, 0xe190, 0xd893, 0xf9c4, 0x7da4, 0x1, 0x0);
        gbc.writeMem(0x3106, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x50f7, gbc.sp());
        EXPECT(0x3108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0114
        gbc.setState(0xde31, 0xf27a, 0x7120, 0xcd5b, 0x7b22, 0x26a1, 0x1, 0x1);
        gbc.writeMem(0xde31, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf27a, gbc.sp());
        EXPECT(0xde33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde31));
        EXPECT(0xb3, gbc.readMem(0xde32));
        // CB B3 0115
        gbc.setState(0xe5f1, 0xbe11, 0x32e0, 0x5a29, 0x1a26, 0x1f30, 0x0, 0x1);
        gbc.writeMem(0xe5f1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbe11, gbc.sp());
        EXPECT(0xe5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f1));
        EXPECT(0xb3, gbc.readMem(0xe5f2));
        // CB B3 0116
        gbc.setState(0xef3d, 0xf432, 0x5e80, 0x4e81, 0x910c, 0x7bcb, 0x0, 0x0);
        gbc.writeMem(0xef3d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf432, gbc.sp());
        EXPECT(0xef3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3d));
        EXPECT(0xb3, gbc.readMem(0xef3e));
        // CB B3 0117
        gbc.setState(0x9617, 0x2cba, 0xba70, 0xde64, 0x415f, 0x785a, 0x1, 0x0);
        gbc.writeMem(0x9617, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2cba, gbc.sp());
        EXPECT(0x9619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9617));
        EXPECT(0xb3, gbc.readMem(0x9618));
        // CB B3 0118
        gbc.setState(0xd0c8, 0xd64a, 0x60f0, 0x87fb, 0x574a, 0x4a42, 0x1, 0x0);
        gbc.writeMem(0xd0c8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd64a, gbc.sp());
        EXPECT(0xd0ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c8));
        EXPECT(0xb3, gbc.readMem(0xd0c9));
        // CB B3 0119
        gbc.setState(0x67cd, 0xaac4, 0x7850, 0x52a2, 0xc61f, 0xc30d, 0x0, 0x1);
        gbc.writeMem(0x67cd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaac4, gbc.sp());
        EXPECT(0x67cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 011A
        gbc.setState(0xdfe5, 0xc9de, 0x67f0, 0x7c83, 0x9f94, 0xe6e1, 0x1, 0x0);
        gbc.writeMem(0xdfe5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc9de, gbc.sp());
        EXPECT(0xdfe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe5));
        EXPECT(0xb3, gbc.readMem(0xdfe6));
        // CB B3 011B
        gbc.setState(0x8c40, 0x79cd, 0xdf80, 0x9fa2, 0xeea2, 0x96db, 0x1, 0x0);
        gbc.writeMem(0x8c40, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x79cd, gbc.sp());
        EXPECT(0x8c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c40));
        EXPECT(0xb3, gbc.readMem(0x8c41));
        // CB B3 011C
        gbc.setState(0xea63, 0xffeb, 0xb400, 0xb251, 0x61e2, 0x316e, 0x1, 0x0);
        gbc.writeMem(0xea63, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xffeb, gbc.sp());
        EXPECT(0xea65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea63));
        EXPECT(0xb3, gbc.readMem(0xea64));
        // CB B3 011D
        gbc.setState(0xb20, 0x6da9, 0x490, 0x1a5c, 0x6407, 0x3c98, 0x0, 0x1);
        gbc.writeMem(0xb20, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6da9, gbc.sp());
        EXPECT(0xb22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 011E
        gbc.setState(0xebeb, 0x6aa1, 0x61b0, 0x5343, 0x9649, 0x244, 0x1, 0x0);
        gbc.writeMem(0xebeb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6aa1, gbc.sp());
        EXPECT(0xebed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebeb));
        EXPECT(0xb3, gbc.readMem(0xebec));
        // CB B3 011F
        gbc.setState(0xc4f1, 0x5f6, 0x8a30, 0xbcc3, 0xcbe5, 0x1f8d, 0x0, 0x1);
        gbc.writeMem(0xc4f1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5f6, gbc.sp());
        EXPECT(0xc4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f1));
        EXPECT(0xb3, gbc.readMem(0xc4f2));
        // CB B3 0121
        gbc.setState(0x4634, 0x565b, 0xa100, 0x1c62, 0xc71d, 0x6398, 0x1, 0x0);
        gbc.writeMem(0x4634, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x565b, gbc.sp());
        EXPECT(0x4636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0122
        gbc.setState(0xbc42, 0xc0b9, 0x5010, 0x9f, 0x1f0b, 0x5ab4, 0x1, 0x1);
        gbc.writeMem(0xbc42, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc0b9, gbc.sp());
        EXPECT(0xbc44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc42));
        EXPECT(0xb3, gbc.readMem(0xbc43));
        // CB B3 0123
        gbc.setState(0x4d5f, 0x3744, 0x9ba0, 0xe8ed, 0x5eb4, 0x74b0, 0x1, 0x0);
        gbc.writeMem(0x4d5f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3744, gbc.sp());
        EXPECT(0x4d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0124
        gbc.setState(0x1cee, 0x818c, 0x64e0, 0xbfef, 0xb405, 0xf2c2, 0x0, 0x1);
        gbc.writeMem(0x1cee, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x818c, gbc.sp());
        EXPECT(0x1cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0125
        gbc.setState(0x5e92, 0xe2bc, 0xf650, 0x9ce3, 0xca0d, 0x8127, 0x1, 0x1);
        gbc.writeMem(0x5e92, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe2bc, gbc.sp());
        EXPECT(0x5e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0126
        gbc.setState(0x87e6, 0xc6d0, 0xb70, 0x3497, 0x6268, 0x98be, 0x1, 0x0);
        gbc.writeMem(0x87e6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc6d0, gbc.sp());
        EXPECT(0x87e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e6));
        EXPECT(0xb3, gbc.readMem(0x87e7));
        // CB B3 0127
        gbc.setState(0xee51, 0xe7a4, 0xce80, 0x26f7, 0x3092, 0xa365, 0x1, 0x1);
        gbc.writeMem(0xee51, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe7a4, gbc.sp());
        EXPECT(0xee53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee51));
        EXPECT(0xb3, gbc.readMem(0xee52));
        // CB B3 0128
        gbc.setState(0xd59c, 0x30e8, 0xd2f0, 0x75fe, 0xe2e3, 0x3f43, 0x1, 0x0);
        gbc.writeMem(0xd59c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x30e8, gbc.sp());
        EXPECT(0xd59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59c));
        EXPECT(0xb3, gbc.readMem(0xd59d));
        // CB B3 0129
        gbc.setState(0xa811, 0x9278, 0x8100, 0x5e3d, 0x81e0, 0x830e, 0x0, 0x0);
        gbc.writeMem(0xa811, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9278, gbc.sp());
        EXPECT(0xa813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa811));
        EXPECT(0xb3, gbc.readMem(0xa812));
        // CB B3 012A
        gbc.setState(0x5cb8, 0x283d, 0xc500, 0xc051, 0x1c13, 0x9239, 0x1, 0x1);
        gbc.writeMem(0x5cb8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x283d, gbc.sp());
        EXPECT(0x5cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 012B
        gbc.setState(0xb60d, 0x2cea, 0xbb00, 0x21d1, 0x90b2, 0x9e05, 0x0, 0x1);
        gbc.writeMem(0xb60d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2cea, gbc.sp());
        EXPECT(0xb60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60d));
        EXPECT(0xb3, gbc.readMem(0xb60e));
        // CB B3 012C
        gbc.setState(0xac5, 0xf63, 0x5f0, 0x9290, 0xd8ea, 0xf946, 0x1, 0x0);
        gbc.writeMem(0xac5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf63, gbc.sp());
        EXPECT(0xac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 012D
        gbc.setState(0x4e87, 0x53a9, 0x3010, 0x2efd, 0x15cc, 0xd0dd, 0x0, 0x0);
        gbc.writeMem(0x4e87, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x53a9, gbc.sp());
        EXPECT(0x4e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 012E
        gbc.setState(0x686d, 0xa7e1, 0x6390, 0x75bd, 0xaa30, 0x90a6, 0x0, 0x0);
        gbc.writeMem(0x686d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa7e1, gbc.sp());
        EXPECT(0x686f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 012F
        gbc.setState(0x43d4, 0x9682, 0x17b0, 0xeba2, 0x1e38, 0x9451, 0x0, 0x1);
        gbc.writeMem(0x43d4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9682, gbc.sp());
        EXPECT(0x43d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0130
        gbc.setState(0x27e1, 0xf794, 0x8810, 0x31d2, 0xa5b, 0x513, 0x1, 0x0);
        gbc.writeMem(0x27e1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf794, gbc.sp());
        EXPECT(0x27e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0131
        gbc.setState(0xb68e, 0xeaee, 0xca70, 0x75ef, 0xb495, 0x4e48, 0x1, 0x1);
        gbc.writeMem(0xb68e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xeaee, gbc.sp());
        EXPECT(0xb690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb68e));
        EXPECT(0xb3, gbc.readMem(0xb68f));
        // CB B3 0132
        gbc.setState(0x78ab, 0x12c1, 0x1a20, 0xbc99, 0x122b, 0x2a87, 0x0, 0x0);
        gbc.writeMem(0x78ab, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x12c1, gbc.sp());
        EXPECT(0x78ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0133
        gbc.setState(0xc7dd, 0x3d9, 0xda30, 0xf438, 0x3cf7, 0x63ad, 0x1, 0x0);
        gbc.writeMem(0xc7dd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3d9, gbc.sp());
        EXPECT(0xc7df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7dd));
        EXPECT(0xb3, gbc.readMem(0xc7de));
        // CB B3 0134
        gbc.setState(0xa63d, 0xfcf3, 0x4ad0, 0x3e70, 0x7fd1, 0x58d6, 0x1, 0x1);
        gbc.writeMem(0xa63d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfcf3, gbc.sp());
        EXPECT(0xa63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63d));
        EXPECT(0xb3, gbc.readMem(0xa63e));
        // CB B3 0135
        gbc.setState(0x5e99, 0xffa0, 0x10, 0x4b96, 0x70, 0xcf7f, 0x1, 0x1);
        gbc.writeMem(0x5e99, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xffa0, gbc.sp());
        EXPECT(0x5e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0136
        gbc.setState(0x1f57, 0x389c, 0xa2c0, 0x375d, 0xe2ac, 0xad49, 0x1, 0x0);
        gbc.writeMem(0x1f57, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0x1f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0137
        gbc.setState(0x9f9c, 0xb478, 0x5470, 0xa156, 0xca41, 0x21ff, 0x0, 0x1);
        gbc.writeMem(0x9f9c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb478, gbc.sp());
        EXPECT(0x9f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9c));
        EXPECT(0xb3, gbc.readMem(0x9f9d));
        // CB B3 0138
        gbc.setState(0x51ff, 0x9150, 0x1cf0, 0xff6d, 0x914b, 0xca3, 0x0, 0x1);
        gbc.writeMem(0x51ff, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9150, gbc.sp());
        EXPECT(0x5201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0139
        gbc.setState(0xef74, 0x1ef7, 0x4620, 0x5f5, 0xa08b, 0x7be2, 0x1, 0x1);
        gbc.writeMem(0xef74, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1ef7, gbc.sp());
        EXPECT(0xef76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef74));
        EXPECT(0xb3, gbc.readMem(0xef75));
        // CB B3 013A
        gbc.setState(0x21b6, 0x2079, 0xdf20, 0xdd0b, 0x2ff4, 0x8c9a, 0x0, 0x0);
        gbc.writeMem(0x21b6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2079, gbc.sp());
        EXPECT(0x21b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 013B
        gbc.setState(0xdb19, 0x6a9e, 0x5220, 0x5094, 0xbda7, 0x4655, 0x0, 0x0);
        gbc.writeMem(0xdb19, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6a9e, gbc.sp());
        EXPECT(0xdb1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb19));
        EXPECT(0xb3, gbc.readMem(0xdb1a));
        // CB B3 013C
        gbc.setState(0x39d7, 0xa4a8, 0xb710, 0x58ac, 0x97c2, 0xbbf2, 0x0, 0x0);
        gbc.writeMem(0x39d7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa4a8, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 013D
        gbc.setState(0x6095, 0x22b0, 0x1f60, 0x362a, 0xbb08, 0xa6ca, 0x1, 0x0);
        gbc.writeMem(0x6095, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x22b0, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 013E
        gbc.setState(0x7d23, 0xe5a4, 0x3fe0, 0x135c, 0xde9c, 0x5782, 0x0, 0x1);
        gbc.writeMem(0x7d23, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe5a4, gbc.sp());
        EXPECT(0x7d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 013F
        gbc.setState(0xc9d2, 0x630, 0xed60, 0x1b1e, 0xbba4, 0xea7e, 0x0, 0x1);
        gbc.writeMem(0xc9d2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x630, gbc.sp());
        EXPECT(0xc9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d2));
        EXPECT(0xb3, gbc.readMem(0xc9d3));
        // CB B3 0140
        gbc.setState(0xa57f, 0xf910, 0x74c0, 0x62d5, 0x865f, 0x1b5e, 0x1, 0x1);
        gbc.writeMem(0xa57f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf910, gbc.sp());
        EXPECT(0xa581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57f));
        EXPECT(0xb3, gbc.readMem(0xa580));
        // CB B3 0141
        gbc.setState(0x1d90, 0xc4d5, 0x54b0, 0xc6ba, 0xdf49, 0xc224, 0x1, 0x1);
        gbc.writeMem(0x1d90, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc4d5, gbc.sp());
        EXPECT(0x1d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0142
        gbc.setState(0x532d, 0x257, 0xb6e0, 0x2924, 0x17d8, 0x2889, 0x1, 0x1);
        gbc.writeMem(0x532d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x257, gbc.sp());
        EXPECT(0x532f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0143
        gbc.setState(0x5eba, 0xc1d2, 0x3e60, 0xeab0, 0x85fc, 0x1770, 0x0, 0x0);
        gbc.writeMem(0x5eba, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc1d2, gbc.sp());
        EXPECT(0x5ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0144
        gbc.setState(0x51c5, 0x82ae, 0x8040, 0x50c6, 0x6b5c, 0x1770, 0x1, 0x0);
        gbc.writeMem(0x51c5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x82ae, gbc.sp());
        EXPECT(0x51c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0145
        gbc.setState(0xc9f5, 0xa58c, 0xa730, 0xbe1a, 0xe9a, 0x3795, 0x1, 0x0);
        gbc.writeMem(0xc9f5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa58c, gbc.sp());
        EXPECT(0xc9f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f5));
        EXPECT(0xb3, gbc.readMem(0xc9f6));
        // CB B3 0146
        gbc.setState(0xb446, 0x4d75, 0x5990, 0xb5e3, 0x7c34, 0x6821, 0x1, 0x1);
        gbc.writeMem(0xb446, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4d75, gbc.sp());
        EXPECT(0xb448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb446));
        EXPECT(0xb3, gbc.readMem(0xb447));
        // CB B3 0147
        gbc.setState(0x910b, 0x3dd2, 0x93c0, 0x35ce, 0xd3f7, 0xaee, 0x1, 0x0);
        gbc.writeMem(0x910b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3dd2, gbc.sp());
        EXPECT(0x910d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910b));
        EXPECT(0xb3, gbc.readMem(0x910c));
        // CB B3 0148
        gbc.setState(0x2574, 0x5ecf, 0x13e0, 0x2019, 0xa0d7, 0x9bb3, 0x0, 0x1);
        gbc.writeMem(0x2574, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5ecf, gbc.sp());
        EXPECT(0x2576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 014A
        gbc.setState(0x3ae6, 0xdcba, 0xa5f0, 0x8476, 0x7078, 0xcd5a, 0x1, 0x0);
        gbc.writeMem(0x3ae6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdcba, gbc.sp());
        EXPECT(0x3ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 014B
        gbc.setState(0x83d1, 0x106c, 0x2240, 0x2d7, 0xe2, 0x9b25, 0x1, 0x1);
        gbc.writeMem(0x83d1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x106c, gbc.sp());
        EXPECT(0x83d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d1));
        EXPECT(0xb3, gbc.readMem(0x83d2));
        // CB B3 014C
        gbc.setState(0xde5c, 0xd3ae, 0x5df0, 0x9b0d, 0xaf15, 0xe5e6, 0x0, 0x0);
        gbc.writeMem(0xde5c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd3ae, gbc.sp());
        EXPECT(0xde5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5c));
        EXPECT(0xb3, gbc.readMem(0xde5d));
        // CB B3 014D
        gbc.setState(0x20e2, 0xf71a, 0x2500, 0x32f4, 0xaac7, 0x6c4e, 0x0, 0x0);
        gbc.writeMem(0x20e2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf71a, gbc.sp());
        EXPECT(0x20e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 014E
        gbc.setState(0x37c5, 0x8389, 0x730, 0xadf, 0x9ed1, 0x45ba, 0x1, 0x0);
        gbc.writeMem(0x37c5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8389, gbc.sp());
        EXPECT(0x37c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 014F
        gbc.setState(0xb8ba, 0x61e5, 0x7820, 0x4fc1, 0xf67b, 0x9c69, 0x0, 0x1);
        gbc.writeMem(0xb8ba, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x61e5, gbc.sp());
        EXPECT(0xb8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ba));
        EXPECT(0xb3, gbc.readMem(0xb8bb));
        // CB B3 0150
        gbc.setState(0x465e, 0x2a81, 0xb2a0, 0x63c, 0xa139, 0x15d9, 0x0, 0x0);
        gbc.writeMem(0x465e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2a81, gbc.sp());
        EXPECT(0x4660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0151
        gbc.setState(0x6020, 0x2241, 0x7800, 0x1c53, 0xddbc, 0x65bb, 0x0, 0x1);
        gbc.writeMem(0x6020, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2241, gbc.sp());
        EXPECT(0x6022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0152
        gbc.setState(0x5ec7, 0x9c31, 0x21d0, 0x592f, 0x7aae, 0xd203, 0x0, 0x1);
        gbc.writeMem(0x5ec7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9c31, gbc.sp());
        EXPECT(0x5ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0153
        gbc.setState(0xeda1, 0xa447, 0x5b80, 0x5d0b, 0x305, 0xb20a, 0x1, 0x1);
        gbc.writeMem(0xeda1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa447, gbc.sp());
        EXPECT(0xeda3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda1));
        EXPECT(0xb3, gbc.readMem(0xeda2));
        // CB B3 0154
        gbc.setState(0x88d5, 0x13cb, 0x8990, 0xf4c7, 0xac81, 0x3c7b, 0x0, 0x0);
        gbc.writeMem(0x88d5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x13cb, gbc.sp());
        EXPECT(0x88d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d5));
        EXPECT(0xb3, gbc.readMem(0x88d6));
        // CB B3 0155
        gbc.setState(0xe2e, 0xdf8c, 0xd310, 0xc72c, 0xbaf4, 0xea48, 0x1, 0x0);
        gbc.writeMem(0xe2e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0xe30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0156
        gbc.setState(0x26d2, 0x5810, 0x22e0, 0x55e3, 0xeff8, 0x291, 0x0, 0x1);
        gbc.writeMem(0x26d2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5810, gbc.sp());
        EXPECT(0x26d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0157
        gbc.setState(0x125f, 0xb6c0, 0x55c0, 0xc6ff, 0xae71, 0x37a, 0x1, 0x1);
        gbc.writeMem(0x125f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0x1261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0158
        gbc.setState(0x5689, 0x2bd3, 0x96e0, 0xc53b, 0x6c36, 0xc726, 0x0, 0x1);
        gbc.writeMem(0x5689, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2bd3, gbc.sp());
        EXPECT(0x568b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0159
        gbc.setState(0xb63b, 0xadc8, 0xef50, 0x4b39, 0x9f78, 0xe3e6, 0x0, 0x0);
        gbc.writeMem(0xb63b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xadc8, gbc.sp());
        EXPECT(0xb63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63b));
        EXPECT(0xb3, gbc.readMem(0xb63c));
        // CB B3 015A
        gbc.setState(0xdf56, 0x85ac, 0xd6c0, 0x2ebd, 0xfd31, 0xb320, 0x0, 0x0);
        gbc.writeMem(0xdf56, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x85ac, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf56));
        EXPECT(0xb3, gbc.readMem(0xdf57));
        // CB B3 015B
        gbc.setState(0x4219, 0xaa92, 0xa700, 0xd26e, 0xfd23, 0xe7fe, 0x0, 0x0);
        gbc.writeMem(0x4219, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xaa92, gbc.sp());
        EXPECT(0x421b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 015C
        gbc.setState(0xe8b, 0x1d8f, 0xf480, 0xfc00, 0x68c6, 0x8894, 0x0, 0x0);
        gbc.writeMem(0xe8b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1d8f, gbc.sp());
        EXPECT(0xe8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 015D
        gbc.setState(0x7842, 0xa055, 0x5710, 0x7670, 0xd067, 0xeedc, 0x1, 0x0);
        gbc.writeMem(0x7842, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa055, gbc.sp());
        EXPECT(0x7844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 015E
        gbc.setState(0x1908, 0xa098, 0xc060, 0xc6ed, 0x833c, 0xb358, 0x0, 0x0);
        gbc.writeMem(0x1908, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa098, gbc.sp());
        EXPECT(0x190a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 015F
        gbc.setState(0xc939, 0xcc68, 0x5a80, 0x1ecc, 0x479a, 0x2999, 0x1, 0x1);
        gbc.writeMem(0xc939, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcc68, gbc.sp());
        EXPECT(0xc93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc939));
        EXPECT(0xb3, gbc.readMem(0xc93a));
        // CB B3 0160
        gbc.setState(0x2964, 0x5db4, 0xb870, 0x5671, 0x1a, 0x80bc, 0x1, 0x1);
        gbc.writeMem(0x2964, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5db4, gbc.sp());
        EXPECT(0x2966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0161
        gbc.setState(0x1132, 0xc692, 0xcb30, 0x80e2, 0xb156, 0x9a56, 0x1, 0x0);
        gbc.writeMem(0x1132, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc692, gbc.sp());
        EXPECT(0x1134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0162
        gbc.setState(0x386f, 0x5438, 0x19a0, 0x5c4b, 0x3d14, 0xe1b5, 0x1, 0x0);
        gbc.writeMem(0x386f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5438, gbc.sp());
        EXPECT(0x3871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0163
        gbc.setState(0xad1c, 0x6dea, 0x7640, 0x8413, 0x58cd, 0x2bbe, 0x0, 0x1);
        gbc.writeMem(0xad1c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6dea, gbc.sp());
        EXPECT(0xad1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1c));
        EXPECT(0xb3, gbc.readMem(0xad1d));
        // CB B3 0164
        gbc.setState(0x6554, 0xf6e5, 0x34b0, 0xf21c, 0x67ca, 0x8fe1, 0x1, 0x1);
        gbc.writeMem(0x6554, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf6e5, gbc.sp());
        EXPECT(0x6556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0165
        gbc.setState(0xa354, 0xa6df, 0x6630, 0x5ba7, 0xdee2, 0x3558, 0x1, 0x1);
        gbc.writeMem(0xa354, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa6df, gbc.sp());
        EXPECT(0xa356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa354));
        EXPECT(0xb3, gbc.readMem(0xa355));
        // CB B3 0166
        gbc.setState(0x2789, 0x416e, 0x43d0, 0x8e89, 0xe473, 0x6c6, 0x0, 0x0);
        gbc.writeMem(0x2789, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x416e, gbc.sp());
        EXPECT(0x278b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0167
        gbc.setState(0xecdb, 0x5c3f, 0xb810, 0xee2a, 0xb4e3, 0x1297, 0x0, 0x0);
        gbc.writeMem(0xecdb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5c3f, gbc.sp());
        EXPECT(0xecdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecdb));
        EXPECT(0xb3, gbc.readMem(0xecdc));
        // CB B3 0168
        gbc.setState(0x4cd6, 0x22e0, 0x25d0, 0x78bf, 0x173c, 0x287f, 0x0, 0x1);
        gbc.writeMem(0x4cd6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x22e0, gbc.sp());
        EXPECT(0x4cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0169
        gbc.setState(0xd951, 0x9e50, 0xa3d0, 0x1e04, 0x3182, 0x6cb3, 0x0, 0x1);
        gbc.writeMem(0xd951, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9e50, gbc.sp());
        EXPECT(0xd953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd951));
        EXPECT(0xb3, gbc.readMem(0xd952));
        // CB B3 016A
        gbc.setState(0x1f1a, 0xdfe0, 0x7760, 0x2d5a, 0x7013, 0x7283, 0x0, 0x1);
        gbc.writeMem(0x1f1a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdfe0, gbc.sp());
        EXPECT(0x1f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 016B
        gbc.setState(0xe232, 0x6f01, 0x6650, 0x6d34, 0xe70a, 0x90e0, 0x0, 0x0);
        gbc.writeMem(0xe232, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6f01, gbc.sp());
        EXPECT(0xe234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe232));
        EXPECT(0xb3, gbc.readMem(0xe233));
        // CB B3 016C
        gbc.setState(0x3a50, 0xfd8c, 0x9350, 0xd942, 0x2330, 0xdc40, 0x1, 0x1);
        gbc.writeMem(0x3a50, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfd8c, gbc.sp());
        EXPECT(0x3a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 016D
        gbc.setState(0xc449, 0x3d7f, 0xdc0, 0x657f, 0xb94d, 0xc430, 0x1, 0x0);
        gbc.writeMem(0xc449, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3d7f, gbc.sp());
        EXPECT(0xc44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc449));
        EXPECT(0xb3, gbc.readMem(0xc44a));
        // CB B3 016E
        gbc.setState(0xb53d, 0xef54, 0x4a50, 0xb01, 0xdaba, 0xd95, 0x0, 0x0);
        gbc.writeMem(0xb53d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xef54, gbc.sp());
        EXPECT(0xb53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53d));
        EXPECT(0xb3, gbc.readMem(0xb53e));
        // CB B3 016F
        gbc.setState(0x8389, 0xf426, 0x43b0, 0xcaf8, 0x62e, 0x944d, 0x0, 0x1);
        gbc.writeMem(0x8389, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf426, gbc.sp());
        EXPECT(0x838b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8389));
        EXPECT(0xb3, gbc.readMem(0x838a));
        // CB B3 0170
        gbc.setState(0x8d2c, 0xc967, 0x8fd0, 0x60d, 0x5b3, 0x6e6, 0x0, 0x0);
        gbc.writeMem(0x8d2c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc967, gbc.sp());
        EXPECT(0x8d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d2c));
        EXPECT(0xb3, gbc.readMem(0x8d2d));
        // CB B3 0171
        gbc.setState(0x2a2c, 0x23b5, 0xf3a0, 0xbd00, 0x565e, 0xb5df, 0x0, 0x1);
        gbc.writeMem(0x2a2c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x23b5, gbc.sp());
        EXPECT(0x2a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0172
        gbc.setState(0xc592, 0x3d5d, 0xea50, 0x836f, 0x5fd0, 0xc164, 0x0, 0x0);
        gbc.writeMem(0xc592, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3d5d, gbc.sp());
        EXPECT(0xc594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc592));
        EXPECT(0xb3, gbc.readMem(0xc593));
        // CB B3 0173
        gbc.setState(0x32ae, 0xfa4f, 0xd950, 0xde83, 0x209, 0x9b10, 0x1, 0x0);
        gbc.writeMem(0x32ae, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfa4f, gbc.sp());
        EXPECT(0x32b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0174
        gbc.setState(0xd1f5, 0xd5ed, 0x6150, 0x3ebc, 0xf2a3, 0x3168, 0x0, 0x0);
        gbc.writeMem(0xd1f5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd5ed, gbc.sp());
        EXPECT(0xd1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f5));
        EXPECT(0xb3, gbc.readMem(0xd1f6));
        // CB B3 0175
        gbc.setState(0x6758, 0xc4c3, 0x61d0, 0x984f, 0xcd0d, 0xa6a6, 0x0, 0x1);
        gbc.writeMem(0x6758, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc4c3, gbc.sp());
        EXPECT(0x675a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0176
        gbc.setState(0x3e35, 0xba46, 0x5d0, 0xd6e5, 0xb28c, 0x1745, 0x0, 0x0);
        gbc.writeMem(0x3e35, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xba46, gbc.sp());
        EXPECT(0x3e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0177
        gbc.setState(0x5ed6, 0xad9d, 0xb1c0, 0xc067, 0xc91, 0x91ba, 0x0, 0x0);
        gbc.writeMem(0x5ed6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xad9d, gbc.sp());
        EXPECT(0x5ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0178
        gbc.setState(0x6544, 0x17f5, 0x6000, 0xccaa, 0xf913, 0x438, 0x0, 0x1);
        gbc.writeMem(0x6544, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x17f5, gbc.sp());
        EXPECT(0x6546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0179
        gbc.setState(0x22d4, 0x474e, 0xc170, 0x6291, 0x159a, 0x48fc, 0x0, 0x1);
        gbc.writeMem(0x22d4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x474e, gbc.sp());
        EXPECT(0x22d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 017A
        gbc.setState(0x7cea, 0x7d2, 0x680, 0x2333, 0xa9ff, 0xff02, 0x0, 0x0);
        gbc.writeMem(0x7cea, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7d2, gbc.sp());
        EXPECT(0x7cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 017B
        gbc.setState(0x32b5, 0xa21f, 0xa6c0, 0x6ac6, 0xbb3, 0x653d, 0x1, 0x1);
        gbc.writeMem(0x32b5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa21f, gbc.sp());
        EXPECT(0x32b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 017C
        gbc.setState(0xcf30, 0xcfef, 0x2bb0, 0xff47, 0x3d95, 0x37eb, 0x1, 0x0);
        gbc.writeMem(0xcf30, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcfef, gbc.sp());
        EXPECT(0xcf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf30));
        EXPECT(0xb3, gbc.readMem(0xcf31));
        // CB B3 017F
        gbc.setState(0x66c3, 0xfe96, 0xd950, 0xd9e0, 0x9ec4, 0xa73c, 0x0, 0x1);
        gbc.writeMem(0x66c3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfe96, gbc.sp());
        EXPECT(0x66c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0180
        gbc.setState(0x6608, 0x4d67, 0x4cf0, 0x1c46, 0x6734, 0x4ac8, 0x1, 0x0);
        gbc.writeMem(0x6608, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4d67, gbc.sp());
        EXPECT(0x660a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0181
        gbc.setState(0x455a, 0x69b3, 0xc440, 0xfb1, 0x37c7, 0xa06e, 0x1, 0x0);
        gbc.writeMem(0x455a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x69b3, gbc.sp());
        EXPECT(0x455c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0182
        gbc.setState(0x56db, 0x4f3e, 0xabe0, 0xae1, 0xa7cd, 0x92cc, 0x1, 0x0);
        gbc.writeMem(0x56db, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4f3e, gbc.sp());
        EXPECT(0x56dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0183
        gbc.setState(0x8924, 0x58b5, 0x6580, 0xcb01, 0x54ca, 0x1399, 0x0, 0x1);
        gbc.writeMem(0x8924, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x58b5, gbc.sp());
        EXPECT(0x8926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8924));
        EXPECT(0xb3, gbc.readMem(0x8925));
        // CB B3 0184
        gbc.setState(0xa17a, 0xa54, 0x3520, 0x27d, 0x8402, 0x54ca, 0x1, 0x0);
        gbc.writeMem(0xa17a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa54, gbc.sp());
        EXPECT(0xa17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa17a));
        EXPECT(0xb3, gbc.readMem(0xa17b));
        // CB B3 0185
        gbc.setState(0x77ac, 0xfce6, 0xdf00, 0x2c66, 0x9278, 0xcadb, 0x1, 0x0);
        gbc.writeMem(0x77ac, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfce6, gbc.sp());
        EXPECT(0x77ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0186
        gbc.setState(0xde92, 0xa5a6, 0x2c50, 0x8391, 0x84a2, 0x4d9e, 0x0, 0x0);
        gbc.writeMem(0xde92, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa5a6, gbc.sp());
        EXPECT(0xde94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde92));
        EXPECT(0xb3, gbc.readMem(0xde93));
        // CB B3 0187
        gbc.setState(0x31ef, 0xb09b, 0x3a00, 0x310, 0xbfa0, 0xb280, 0x1, 0x1);
        gbc.writeMem(0x31ef, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb09b, gbc.sp());
        EXPECT(0x31f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0188
        gbc.setState(0x53f1, 0x7c40, 0xa210, 0xa60, 0x3e81, 0xf25b, 0x1, 0x1);
        gbc.writeMem(0x53f1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7c40, gbc.sp());
        EXPECT(0x53f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0189
        gbc.setState(0x6118, 0x8b98, 0xfd70, 0x9f93, 0x3a9a, 0xa645, 0x1, 0x1);
        gbc.writeMem(0x6118, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8b98, gbc.sp());
        EXPECT(0x611a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 018A
        gbc.setState(0xc108, 0xc6fb, 0xebd0, 0xc10f, 0x6a47, 0x2c25, 0x0, 0x1);
        gbc.writeMem(0xc108, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc6fb, gbc.sp());
        EXPECT(0xc10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc108));
        EXPECT(0xb3, gbc.readMem(0xc109));
        // CB B3 018B
        gbc.setState(0xede8, 0xcb9c, 0xedd0, 0xbb04, 0x5c94, 0xec9, 0x0, 0x1);
        gbc.writeMem(0xede8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcb9c, gbc.sp());
        EXPECT(0xedea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede8));
        EXPECT(0xb3, gbc.readMem(0xede9));
        // CB B3 018C
        gbc.setState(0xc59b, 0x6f15, 0xadc0, 0x48d0, 0x42d0, 0x472, 0x1, 0x0);
        gbc.writeMem(0xc59b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6f15, gbc.sp());
        EXPECT(0xc59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59b));
        EXPECT(0xb3, gbc.readMem(0xc59c));
        // CB B3 018D
        gbc.setState(0x7051, 0xaf49, 0x1890, 0x5ddf, 0x771e, 0x175a, 0x1, 0x0);
        gbc.writeMem(0x7051, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xaf49, gbc.sp());
        EXPECT(0x7053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 018E
        gbc.setState(0x7e66, 0xad81, 0x2b40, 0xc8b5, 0xac7c, 0x2d9b, 0x1, 0x0);
        gbc.writeMem(0x7e66, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xad81, gbc.sp());
        EXPECT(0x7e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 018F
        gbc.setState(0xd413, 0x7c6e, 0xfb70, 0xf77b, 0x1b27, 0xf1d9, 0x1, 0x1);
        gbc.writeMem(0xd413, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7c6e, gbc.sp());
        EXPECT(0xd415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd413));
        EXPECT(0xb3, gbc.readMem(0xd414));
        // CB B3 0190
        gbc.setState(0xd0b1, 0x6b3a, 0x7df0, 0x9e9e, 0x819e, 0xeb6b, 0x1, 0x1);
        gbc.writeMem(0xd0b1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6b3a, gbc.sp());
        EXPECT(0xd0b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b1));
        EXPECT(0xb3, gbc.readMem(0xd0b2));
        // CB B3 0191
        gbc.setState(0xae, 0x8f2f, 0xc9c0, 0x5be, 0x177d, 0x2cb9, 0x0, 0x0);
        gbc.writeMem(0xae, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8f2f, gbc.sp());
        EXPECT(0xb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0192
        gbc.setState(0x6cd3, 0xc75f, 0x99f0, 0x5ad8, 0x5505, 0x1fe3, 0x0, 0x1);
        gbc.writeMem(0x6cd3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc75f, gbc.sp());
        EXPECT(0x6cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0193
        gbc.setState(0xa1e4, 0xd9e5, 0xd6e0, 0x6267, 0x6fb6, 0xfd74, 0x1, 0x0);
        gbc.writeMem(0xa1e4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd9e5, gbc.sp());
        EXPECT(0xa1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e4));
        EXPECT(0xb3, gbc.readMem(0xa1e5));
        // CB B3 0194
        gbc.setState(0x5b20, 0x6893, 0x9670, 0x98da, 0xf247, 0xad00, 0x1, 0x1);
        gbc.writeMem(0x5b20, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6893, gbc.sp());
        EXPECT(0x5b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0195
        gbc.setState(0xaf46, 0xa6a7, 0x9df0, 0xdf2, 0xa208, 0xcbb3, 0x1, 0x0);
        gbc.writeMem(0xaf46, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa6a7, gbc.sp());
        EXPECT(0xaf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf46));
        EXPECT(0xb3, gbc.readMem(0xaf47));
        // CB B3 0196
        gbc.setState(0x8715, 0x8ba5, 0x3410, 0xe0e, 0x9acc, 0xf535, 0x0, 0x0);
        gbc.writeMem(0x8715, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8ba5, gbc.sp());
        EXPECT(0x8717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8715));
        EXPECT(0xb3, gbc.readMem(0x8716));
        // CB B3 0197
        gbc.setState(0x8fa1, 0xe5, 0x7360, 0xe7d4, 0x9572, 0x2613, 0x1, 0x0);
        gbc.writeMem(0x8fa1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe5, gbc.sp());
        EXPECT(0x8fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa1));
        EXPECT(0xb3, gbc.readMem(0x8fa2));
        // CB B3 0198
        gbc.setState(0x599d, 0xb51b, 0xe680, 0x1949, 0x599b, 0x961, 0x1, 0x0);
        gbc.writeMem(0x599d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb51b, gbc.sp());
        EXPECT(0x599f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0199
        gbc.setState(0x9394, 0x95ca, 0x28c0, 0x7a9a, 0x7d0f, 0xe953, 0x0, 0x0);
        gbc.writeMem(0x9394, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x95ca, gbc.sp());
        EXPECT(0x9396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9394));
        EXPECT(0xb3, gbc.readMem(0x9395));
        // CB B3 019A
        gbc.setState(0x60, 0x788f, 0x12e0, 0x1a30, 0x92ed, 0x28f7, 0x1, 0x0);
        gbc.writeMem(0x60, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x788f, gbc.sp());
        EXPECT(0x62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 019B
        gbc.setState(0x3d0c, 0x7eb2, 0xf050, 0xf3c8, 0x611e, 0x7d6b, 0x0, 0x1);
        gbc.writeMem(0x3d0c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7eb2, gbc.sp());
        EXPECT(0x3d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 019C
        gbc.setState(0xbea0, 0xffaa, 0x2b20, 0x895d, 0xe22b, 0x30ef, 0x0, 0x1);
        gbc.writeMem(0xbea0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xffaa, gbc.sp());
        EXPECT(0xbea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea0));
        EXPECT(0xb3, gbc.readMem(0xbea1));
        // CB B3 019D
        gbc.setState(0xc28e, 0x3c5e, 0x5700, 0x7845, 0x995c, 0x3112, 0x1, 0x1);
        gbc.writeMem(0xc28e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3c5e, gbc.sp());
        EXPECT(0xc290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28e));
        EXPECT(0xb3, gbc.readMem(0xc28f));
        // CB B3 019F
        gbc.setState(0x71f8, 0xc84b, 0x2ed0, 0xd037, 0x6cd1, 0x9e04, 0x0, 0x1);
        gbc.writeMem(0x71f8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc84b, gbc.sp());
        EXPECT(0x71fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01A0
        gbc.setState(0x3358, 0xa397, 0xaff0, 0xcf56, 0xebaa, 0x783e, 0x1, 0x0);
        gbc.writeMem(0x3358, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa397, gbc.sp());
        EXPECT(0x335a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01A1
        gbc.setState(0xebcd, 0xb24b, 0x8010, 0x9ab9, 0x43f5, 0xf6e8, 0x1, 0x0);
        gbc.writeMem(0xebcd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb24b, gbc.sp());
        EXPECT(0xebcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcd));
        EXPECT(0xb3, gbc.readMem(0xebce));
        // CB B3 01A2
        gbc.setState(0x7dfe, 0xcadd, 0xe8e0, 0x71a8, 0x36c, 0x941, 0x0, 0x1);
        gbc.writeMem(0x7dfe, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcadd, gbc.sp());
        EXPECT(0x7e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01A3
        gbc.setState(0x5d30, 0x30c0, 0x6770, 0xa4b2, 0x6d4b, 0x31df, 0x1, 0x1);
        gbc.writeMem(0x5d30, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x30c0, gbc.sp());
        EXPECT(0x5d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01A4
        gbc.setState(0x9443, 0xc7f0, 0xb530, 0x8be8, 0xc862, 0x1d17, 0x0, 0x1);
        gbc.writeMem(0x9443, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc7f0, gbc.sp());
        EXPECT(0x9445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9443));
        EXPECT(0xb3, gbc.readMem(0x9444));
        // CB B3 01A5
        gbc.setState(0x9a04, 0x34f6, 0xead0, 0xb5f6, 0xe9e0, 0x35d4, 0x0, 0x1);
        gbc.writeMem(0x9a04, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x34f6, gbc.sp());
        EXPECT(0x9a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a04));
        EXPECT(0xb3, gbc.readMem(0x9a05));
        // CB B3 01A6
        gbc.setState(0x59f1, 0x8139, 0xc840, 0x6411, 0x22bc, 0x7f24, 0x1, 0x1);
        gbc.writeMem(0x59f1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8139, gbc.sp());
        EXPECT(0x59f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01A7
        gbc.setState(0x9c3, 0x8cf2, 0xad60, 0xfcc, 0xac26, 0x4efa, 0x0, 0x0);
        gbc.writeMem(0x9c3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8cf2, gbc.sp());
        EXPECT(0x9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01A8
        gbc.setState(0x3035, 0xba62, 0x5810, 0x71f4, 0x7175, 0x1943, 0x1, 0x1);
        gbc.writeMem(0x3035, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xba62, gbc.sp());
        EXPECT(0x3037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01A9
        gbc.setState(0x6d98, 0x25fb, 0xb850, 0x35c7, 0xfc0a, 0x22f9, 0x0, 0x1);
        gbc.writeMem(0x6d98, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x25fb, gbc.sp());
        EXPECT(0x6d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01AA
        gbc.setState(0x187f, 0xb318, 0x7eb0, 0x182, 0x636a, 0x2fa4, 0x1, 0x0);
        gbc.writeMem(0x187f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb318, gbc.sp());
        EXPECT(0x1881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01AB
        gbc.setState(0x3484, 0x6cb6, 0xa4f0, 0xb9e, 0x549c, 0x5e09, 0x1, 0x1);
        gbc.writeMem(0x3484, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6cb6, gbc.sp());
        EXPECT(0x3486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01AC
        gbc.setState(0x61fe, 0xe7d4, 0x2cd0, 0x2c8e, 0x1717, 0x97fd, 0x0, 0x0);
        gbc.writeMem(0x61fe, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe7d4, gbc.sp());
        EXPECT(0x6200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01AD
        gbc.setState(0x392, 0xa91b, 0x2500, 0x3574, 0x8ef8, 0xa423, 0x1, 0x0);
        gbc.writeMem(0x392, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa91b, gbc.sp());
        EXPECT(0x394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01AF
        gbc.setState(0x90b4, 0x7f3f, 0x4f80, 0x1a67, 0x2fd2, 0x7737, 0x0, 0x1);
        gbc.writeMem(0x90b4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7f3f, gbc.sp());
        EXPECT(0x90b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b4));
        EXPECT(0xb3, gbc.readMem(0x90b5));
        // CB B3 01B0
        gbc.setState(0xea2, 0xd799, 0x3e20, 0xb4e7, 0x1675, 0xaf7e, 0x1, 0x0);
        gbc.writeMem(0xea2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd799, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01B1
        gbc.setState(0x91b7, 0x9d1b, 0xebb0, 0x19f7, 0x8cb7, 0x11b5, 0x0, 0x0);
        gbc.writeMem(0x91b7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9d1b, gbc.sp());
        EXPECT(0x91b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b7));
        EXPECT(0xb3, gbc.readMem(0x91b8));
        // CB B3 01B2
        gbc.setState(0xeded, 0x9980, 0x5490, 0x8aa4, 0x5dc6, 0x5b46, 0x1, 0x0);
        gbc.writeMem(0xeded, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9980, gbc.sp());
        EXPECT(0xedef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeded));
        EXPECT(0xb3, gbc.readMem(0xedee));
        // CB B3 01B3
        gbc.setState(0x257b, 0x41ae, 0xa6f0, 0x2a6, 0x9943, 0x1a00, 0x1, 0x1);
        gbc.writeMem(0x257b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x41ae, gbc.sp());
        EXPECT(0x257d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01B4
        gbc.setState(0xe596, 0xfb41, 0xafd0, 0x8488, 0x1b3b, 0xdf17, 0x1, 0x1);
        gbc.writeMem(0xe596, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfb41, gbc.sp());
        EXPECT(0xe598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe596));
        EXPECT(0xb3, gbc.readMem(0xe597));
        // CB B3 01B5
        gbc.setState(0xb863, 0x76ac, 0x7e50, 0xc868, 0x43e8, 0x963e, 0x1, 0x1);
        gbc.writeMem(0xb863, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x76ac, gbc.sp());
        EXPECT(0xb865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb863));
        EXPECT(0xb3, gbc.readMem(0xb864));
        // CB B3 01B6
        gbc.setState(0x4e72, 0xee15, 0x3d00, 0x3146, 0xe05e, 0x9ae4, 0x1, 0x0);
        gbc.writeMem(0x4e72, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xee15, gbc.sp());
        EXPECT(0x4e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01B7
        gbc.setState(0xe43e, 0xf73, 0x1ef0, 0xd204, 0x46b4, 0x1814, 0x1, 0x0);
        gbc.writeMem(0xe43e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf73, gbc.sp());
        EXPECT(0xe440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43e));
        EXPECT(0xb3, gbc.readMem(0xe43f));
        // CB B3 01B8
        gbc.setState(0xb8c8, 0x35f5, 0xda0, 0x76eb, 0xb589, 0xf366, 0x1, 0x0);
        gbc.writeMem(0xb8c8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x35f5, gbc.sp());
        EXPECT(0xb8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c8));
        EXPECT(0xb3, gbc.readMem(0xb8c9));
        // CB B3 01BA
        gbc.setState(0x6087, 0x30b4, 0x7550, 0x3798, 0xf564, 0xdd7, 0x0, 0x1);
        gbc.writeMem(0x6087, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x30b4, gbc.sp());
        EXPECT(0x6089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01BB
        gbc.setState(0xd644, 0x9333, 0x2e30, 0xb66, 0x1042, 0x969d, 0x1, 0x0);
        gbc.writeMem(0xd644, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9333, gbc.sp());
        EXPECT(0xd646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd644));
        EXPECT(0xb3, gbc.readMem(0xd645));
        // CB B3 01BC
        gbc.setState(0x3ac1, 0x74c, 0xbfc0, 0x9e55, 0xd8b4, 0x83a5, 0x0, 0x1);
        gbc.writeMem(0x3ac1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x74c, gbc.sp());
        EXPECT(0x3ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01BD
        gbc.setState(0xc01, 0x51ce, 0xd3a0, 0x76be, 0xb03, 0x86a4, 0x1, 0x1);
        gbc.writeMem(0xc01, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x51ce, gbc.sp());
        EXPECT(0xc03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01BF
        gbc.setState(0x1f6d, 0xc643, 0x8610, 0xf40, 0xc204, 0x980, 0x0, 0x0);
        gbc.writeMem(0x1f6d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc643, gbc.sp());
        EXPECT(0x1f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01C0
        gbc.setState(0x94c3, 0xdb37, 0x6fe0, 0xa309, 0x686, 0x9c18, 0x1, 0x1);
        gbc.writeMem(0x94c3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdb37, gbc.sp());
        EXPECT(0x94c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c3));
        EXPECT(0xb3, gbc.readMem(0x94c4));
        // CB B3 01C1
        gbc.setState(0xeab2, 0xb755, 0x6790, 0x2562, 0xd8af, 0x20c5, 0x1, 0x0);
        gbc.writeMem(0xeab2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb755, gbc.sp());
        EXPECT(0xeab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab2));
        EXPECT(0xb3, gbc.readMem(0xeab3));
        // CB B3 01C2
        gbc.setState(0x31e4, 0x80aa, 0xce20, 0x1ec3, 0xfac2, 0x2c54, 0x1, 0x1);
        gbc.writeMem(0x31e4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x80aa, gbc.sp());
        EXPECT(0x31e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01C3
        gbc.setState(0x5ffb, 0xacdc, 0xa7a0, 0x96fd, 0x87e2, 0xd6da, 0x0, 0x1);
        gbc.writeMem(0x5ffb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xacdc, gbc.sp());
        EXPECT(0x5ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01C4
        gbc.setState(0xdcf0, 0xaf63, 0xfda0, 0x6650, 0xcc28, 0x375b, 0x0, 0x1);
        gbc.writeMem(0xdcf0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaf63, gbc.sp());
        EXPECT(0xdcf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf0));
        EXPECT(0xb3, gbc.readMem(0xdcf1));
        // CB B3 01C5
        gbc.setState(0x7e15, 0x4cfa, 0x8dd0, 0xbfb0, 0x9f9e, 0x6e06, 0x1, 0x0);
        gbc.writeMem(0x7e15, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4cfa, gbc.sp());
        EXPECT(0x7e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01C6
        gbc.setState(0x68fb, 0x1f5a, 0xf1b0, 0x1353, 0x40ff, 0x4b0f, 0x0, 0x0);
        gbc.writeMem(0x68fb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1f5a, gbc.sp());
        EXPECT(0x68fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01C7
        gbc.setState(0x28eb, 0x4118, 0x33c0, 0xdc32, 0x2f7f, 0xf14e, 0x1, 0x1);
        gbc.writeMem(0x28eb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4118, gbc.sp());
        EXPECT(0x28ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01C8
        gbc.setState(0x462c, 0x7b60, 0x3800, 0x2a39, 0x280d, 0x4c22, 0x0, 0x0);
        gbc.writeMem(0x462c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7b60, gbc.sp());
        EXPECT(0x462e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01C9
        gbc.setState(0x2f19, 0xe66a, 0x90f0, 0x3eb1, 0x1cd9, 0xa4d7, 0x0, 0x1);
        gbc.writeMem(0x2f19, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe66a, gbc.sp());
        EXPECT(0x2f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01CA
        gbc.setState(0x5f3f, 0x9a1, 0x81a0, 0x51e2, 0x1bdb, 0xae20, 0x0, 0x1);
        gbc.writeMem(0x5f3f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9a1, gbc.sp());
        EXPECT(0x5f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01CB
        gbc.setState(0x938d, 0xe1f4, 0x6c90, 0xd849, 0x83be, 0xc477, 0x0, 0x0);
        gbc.writeMem(0x938d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe1f4, gbc.sp());
        EXPECT(0x938f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938d));
        EXPECT(0xb3, gbc.readMem(0x938e));
        // CB B3 01CC
        gbc.setState(0x409c, 0xe77c, 0xa8a0, 0xa150, 0xebb9, 0x7acb, 0x0, 0x0);
        gbc.writeMem(0x409c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe77c, gbc.sp());
        EXPECT(0x409e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01CD
        gbc.setState(0x3f95, 0xa842, 0x8870, 0x82d0, 0xd188, 0xe780, 0x0, 0x1);
        gbc.writeMem(0x3f95, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa842, gbc.sp());
        EXPECT(0x3f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01CE
        gbc.setState(0x67e3, 0x529c, 0x7830, 0xc248, 0x1a0a, 0xf162, 0x1, 0x1);
        gbc.writeMem(0x67e3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x529c, gbc.sp());
        EXPECT(0x67e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01CF
        gbc.setState(0x138a, 0x9f49, 0xb8d0, 0x37bb, 0xa7b3, 0xf209, 0x0, 0x0);
        gbc.writeMem(0x138a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9f49, gbc.sp());
        EXPECT(0x138c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01D0
        gbc.setState(0x1e71, 0xc98, 0x8850, 0x7581, 0x7380, 0x6bd5, 0x1, 0x0);
        gbc.writeMem(0x1e71, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc98, gbc.sp());
        EXPECT(0x1e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01D1
        gbc.setState(0xe2e5, 0x80af, 0x3320, 0x20dc, 0x45be, 0xcc0b, 0x1, 0x1);
        gbc.writeMem(0xe2e5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x80af, gbc.sp());
        EXPECT(0xe2e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e5));
        EXPECT(0xb3, gbc.readMem(0xe2e6));
        // CB B3 01D2
        gbc.setState(0xe61d, 0x9ab4, 0x5220, 0x591f, 0x4230, 0xa57e, 0x0, 0x0);
        gbc.writeMem(0xe61d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9ab4, gbc.sp());
        EXPECT(0xe61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61d));
        EXPECT(0xb3, gbc.readMem(0xe61e));
        // CB B3 01D3
        gbc.setState(0xd628, 0x24d9, 0x4860, 0x71cc, 0x145a, 0x6207, 0x0, 0x1);
        gbc.writeMem(0xd628, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x24d9, gbc.sp());
        EXPECT(0xd62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd628));
        EXPECT(0xb3, gbc.readMem(0xd629));
        // CB B3 01D4
        gbc.setState(0x1e26, 0xb448, 0xafc0, 0x67a5, 0x4b6f, 0x53b3, 0x1, 0x1);
        gbc.writeMem(0x1e26, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb448, gbc.sp());
        EXPECT(0x1e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01D5
        gbc.setState(0x7236, 0x55f4, 0xfd0, 0xac07, 0x7e98, 0x378c, 0x1, 0x0);
        gbc.writeMem(0x7236, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x55f4, gbc.sp());
        EXPECT(0x7238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01D6
        gbc.setState(0x5166, 0x896c, 0xf490, 0xe593, 0x611c, 0x31dd, 0x1, 0x0);
        gbc.writeMem(0x5166, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x896c, gbc.sp());
        EXPECT(0x5168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01D7
        gbc.setState(0xd6bb, 0xa544, 0x1250, 0xec20, 0x957c, 0x2cf8, 0x0, 0x1);
        gbc.writeMem(0xd6bb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa544, gbc.sp());
        EXPECT(0xd6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6bb));
        EXPECT(0xb3, gbc.readMem(0xd6bc));
        // CB B3 01D8
        gbc.setState(0xc70f, 0x21da, 0xbc00, 0xcae7, 0xd076, 0xeadf, 0x0, 0x1);
        gbc.writeMem(0xc70f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x21da, gbc.sp());
        EXPECT(0xc711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70f));
        EXPECT(0xb3, gbc.readMem(0xc710));
        // CB B3 01D9
        gbc.setState(0xb03, 0xa642, 0xab0, 0x1024, 0x7009, 0x8ab4, 0x1, 0x1);
        gbc.writeMem(0xb03, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa642, gbc.sp());
        EXPECT(0xb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01DA
        gbc.setState(0xa34d, 0x7c60, 0xc90, 0x764, 0x667b, 0x8f62, 0x0, 0x1);
        gbc.writeMem(0xa34d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7c60, gbc.sp());
        EXPECT(0xa34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34d));
        EXPECT(0xb3, gbc.readMem(0xa34e));
        // CB B3 01DB
        gbc.setState(0x357e, 0x4ba3, 0x2f00, 0x1089, 0xdfd5, 0x7173, 0x0, 0x1);
        gbc.writeMem(0x357e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4ba3, gbc.sp());
        EXPECT(0x3580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01DC
        gbc.setState(0x24c7, 0xf9d3, 0x82a0, 0x78a7, 0x1bdf, 0xa112, 0x0, 0x0);
        gbc.writeMem(0x24c7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf9d3, gbc.sp());
        EXPECT(0x24c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01DD
        gbc.setState(0x2b22, 0x3b14, 0x9900, 0xff88, 0xd67d, 0xc987, 0x0, 0x0);
        gbc.writeMem(0x2b22, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3b14, gbc.sp());
        EXPECT(0x2b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01DE
        gbc.setState(0xcbda, 0xa128, 0x6ca0, 0x97e4, 0xd070, 0x77c0, 0x1, 0x1);
        gbc.writeMem(0xcbda, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa128, gbc.sp());
        EXPECT(0xcbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbda));
        EXPECT(0xb3, gbc.readMem(0xcbdb));
        // CB B3 01DF
        gbc.setState(0xe128, 0xe139, 0x2ac0, 0xcfc4, 0xbdc3, 0xa356, 0x0, 0x1);
        gbc.writeMem(0xe128, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe139, gbc.sp());
        EXPECT(0xe12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe128));
        EXPECT(0xb3, gbc.readMem(0xe129));
        // CB B3 01E0
        gbc.setState(0x93b8, 0x5239, 0x9570, 0x3b67, 0x7c7f, 0x1c0d, 0x1, 0x1);
        gbc.writeMem(0x93b8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5239, gbc.sp());
        EXPECT(0x93ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b8));
        EXPECT(0xb3, gbc.readMem(0x93b9));
        // CB B3 01E1
        gbc.setState(0x8f35, 0xd646, 0xfb00, 0xaad8, 0x8d75, 0x9466, 0x0, 0x1);
        gbc.writeMem(0x8f35, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd646, gbc.sp());
        EXPECT(0x8f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f35));
        EXPECT(0xb3, gbc.readMem(0x8f36));
        // CB B3 01E2
        gbc.setState(0xa39a, 0x9ce2, 0xac70, 0xcfb8, 0xfe0, 0xacf3, 0x1, 0x0);
        gbc.writeMem(0xa39a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9ce2, gbc.sp());
        EXPECT(0xa39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39a));
        EXPECT(0xb3, gbc.readMem(0xa39b));
        // CB B3 01E3
        gbc.setState(0x5508, 0x7d9c, 0x3d50, 0xd94f, 0x3f3b, 0xcf5b, 0x1, 0x1);
        gbc.writeMem(0x5508, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7d9c, gbc.sp());
        EXPECT(0x550a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01E4
        gbc.setState(0x715e, 0x4828, 0x5020, 0xdf7e, 0x5535, 0xc4ac, 0x1, 0x0);
        gbc.writeMem(0x715e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4828, gbc.sp());
        EXPECT(0x7160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01E5
        gbc.setState(0x946e, 0xce9a, 0xc320, 0xd70f, 0xfdbe, 0xfbe3, 0x0, 0x0);
        gbc.writeMem(0x946e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xce9a, gbc.sp());
        EXPECT(0x9470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946e));
        EXPECT(0xb3, gbc.readMem(0x946f));
        // CB B3 01E7
        gbc.setState(0x8063, 0x233, 0xd2a0, 0x5039, 0xa2d3, 0xd867, 0x0, 0x0);
        gbc.writeMem(0x8063, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x233, gbc.sp());
        EXPECT(0x8065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8063));
        EXPECT(0xb3, gbc.readMem(0x8064));
        // CB B3 01E8
        gbc.setState(0x910b, 0x2c3e, 0x89a0, 0xe8d, 0xbd7f, 0x2ef0, 0x0, 0x1);
        gbc.writeMem(0x910b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2c3e, gbc.sp());
        EXPECT(0x910d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910b));
        EXPECT(0xb3, gbc.readMem(0x910c));
        // CB B3 01E9
        gbc.setState(0x24d1, 0xa2bf, 0x5ec0, 0xdcd4, 0xc003, 0x33e2, 0x1, 0x1);
        gbc.writeMem(0x24d1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa2bf, gbc.sp());
        EXPECT(0x24d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01EA
        gbc.setState(0x2da6, 0x3ecb, 0x8600, 0x8227, 0xfaca, 0x7457, 0x0, 0x0);
        gbc.writeMem(0x2da6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3ecb, gbc.sp());
        EXPECT(0x2da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01EB
        gbc.setState(0x7d5e, 0x4c71, 0x8730, 0xccfd, 0x7e3d, 0x393b, 0x0, 0x1);
        gbc.writeMem(0x7d5e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4c71, gbc.sp());
        EXPECT(0x7d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01EC
        gbc.setState(0x5ac7, 0x4981, 0xcd90, 0x8e86, 0x4f11, 0x69bd, 0x1, 0x1);
        gbc.writeMem(0x5ac7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4981, gbc.sp());
        EXPECT(0x5ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01ED
        gbc.setState(0x1b2b, 0xd318, 0xc480, 0x56f, 0x3d5f, 0xe930, 0x0, 0x1);
        gbc.writeMem(0x1b2b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd318, gbc.sp());
        EXPECT(0x1b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01EE
        gbc.setState(0xa838, 0x7a9b, 0xaa70, 0x86b3, 0x3ae7, 0x5ba5, 0x1, 0x0);
        gbc.writeMem(0xa838, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7a9b, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa838));
        EXPECT(0xb3, gbc.readMem(0xa839));
        // CB B3 01EF
        gbc.setState(0x8181, 0x234b, 0x7180, 0xf527, 0x51e7, 0xa1b1, 0x1, 0x0);
        gbc.writeMem(0x8181, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x234b, gbc.sp());
        EXPECT(0x8183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8181));
        EXPECT(0xb3, gbc.readMem(0x8182));
        // CB B3 01F0
        gbc.setState(0x8c21, 0x4688, 0x5a0, 0x45b6, 0xe741, 0x93e6, 0x1, 0x1);
        gbc.writeMem(0x8c21, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4688, gbc.sp());
        EXPECT(0x8c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c21));
        EXPECT(0xb3, gbc.readMem(0x8c22));
        // CB B3 01F1
        gbc.setState(0xc3, 0x2dbb, 0x67f0, 0x5ce7, 0x26ea, 0x63d4, 0x0, 0x0);
        gbc.writeMem(0xc3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2dbb, gbc.sp());
        EXPECT(0xc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01F2
        gbc.setState(0x9349, 0x9cbd, 0xe9a0, 0xd42d, 0xf94, 0x6964, 0x0, 0x1);
        gbc.writeMem(0x9349, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9cbd, gbc.sp());
        EXPECT(0x934b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9349));
        EXPECT(0xb3, gbc.readMem(0x934a));
        // CB B3 01F3
        gbc.setState(0xe255, 0xb401, 0x6f80, 0x7dc8, 0xb8a5, 0xace6, 0x0, 0x0);
        gbc.writeMem(0xe255, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb401, gbc.sp());
        EXPECT(0xe257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe255));
        EXPECT(0xb3, gbc.readMem(0xe256));
        // CB B3 01F4
        gbc.setState(0x5e71, 0x35a0, 0xef50, 0x9053, 0xd0a0, 0xd618, 0x0, 0x0);
        gbc.writeMem(0x5e71, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x35a0, gbc.sp());
        EXPECT(0x5e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01F6
        gbc.setState(0xd9df, 0xfbaa, 0x91c0, 0xa4a, 0xd7f3, 0x75a7, 0x1, 0x1);
        gbc.writeMem(0xd9df, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0xd9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9df));
        EXPECT(0xb3, gbc.readMem(0xd9e0));
        // CB B3 01F7
        gbc.setState(0x253a, 0x6033, 0x4b30, 0xbfbb, 0x670b, 0x5581, 0x1, 0x1);
        gbc.writeMem(0x253a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6033, gbc.sp());
        EXPECT(0x253c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01F8
        gbc.setState(0x2687, 0xeef5, 0x9700, 0xd623, 0x5a7b, 0xf3f1, 0x1, 0x1);
        gbc.writeMem(0x2687, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeef5, gbc.sp());
        EXPECT(0x2689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01F9
        gbc.setState(0x40b9, 0x2f0, 0xe430, 0xb7b6, 0x8d6b, 0x2a25, 0x1, 0x1);
        gbc.writeMem(0x40b9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2f0, gbc.sp());
        EXPECT(0x40bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 01FA
        gbc.setState(0xafe4, 0xe973, 0xe260, 0xca92, 0x2a7f, 0xfa2b, 0x0, 0x1);
        gbc.writeMem(0xafe4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe973, gbc.sp());
        EXPECT(0xafe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe4));
        EXPECT(0xb3, gbc.readMem(0xafe5));
        // CB B3 01FB
        gbc.setState(0x1556, 0x8bfe, 0x6340, 0x83e1, 0xba6, 0xe102, 0x1, 0x0);
        gbc.writeMem(0x1556, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8bfe, gbc.sp());
        EXPECT(0x1558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01FC
        gbc.setState(0x1e03, 0xbb32, 0xbc40, 0x7d37, 0xcbac, 0x9460, 0x0, 0x1);
        gbc.writeMem(0x1e03, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbb32, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 01FD
        gbc.setState(0x95c2, 0xdba1, 0x1b80, 0xaa5e, 0xbae5, 0x5c97, 0x0, 0x0);
        gbc.writeMem(0x95c2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdba1, gbc.sp());
        EXPECT(0x95c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c2));
        EXPECT(0xb3, gbc.readMem(0x95c3));
        // CB B3 01FE
        gbc.setState(0x9aea, 0xa9d7, 0xfc50, 0xedfb, 0x20a8, 0xb878, 0x1, 0x0);
        gbc.writeMem(0x9aea, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa9d7, gbc.sp());
        EXPECT(0x9aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aea));
        EXPECT(0xb3, gbc.readMem(0x9aeb));
        // CB B3 01FF
        gbc.setState(0xcffe, 0x772, 0x5020, 0x4fac, 0x417d, 0x24a2, 0x0, 0x0);
        gbc.writeMem(0xcffe, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x772, gbc.sp());
        EXPECT(0xd000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcffe));
        EXPECT(0xb3, gbc.readMem(0xcfff));
        // CB B3 0200
        gbc.setState(0x5051, 0x1bbd, 0x2a90, 0x19cd, 0x179d, 0x3018, 0x0, 0x1);
        gbc.writeMem(0x5051, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1bbd, gbc.sp());
        EXPECT(0x5053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0201
        gbc.setState(0x7f75, 0x4a76, 0x3ec0, 0xda4d, 0x4abb, 0xf604, 0x0, 0x0);
        gbc.writeMem(0x7f75, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4a76, gbc.sp());
        EXPECT(0x7f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0202
        gbc.setState(0x6287, 0x789d, 0xeef0, 0x3333, 0xe46f, 0x3c09, 0x0, 0x0);
        gbc.writeMem(0x6287, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x789d, gbc.sp());
        EXPECT(0x6289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0203
        gbc.setState(0xabb3, 0x6be8, 0x52b0, 0xd0f4, 0xdad4, 0x165a, 0x1, 0x0);
        gbc.writeMem(0xabb3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6be8, gbc.sp());
        EXPECT(0xabb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb3));
        EXPECT(0xb3, gbc.readMem(0xabb4));
        // CB B3 0204
        gbc.setState(0xcc7f, 0x91c, 0x1c30, 0xa5e0, 0x5a4e, 0xff93, 0x0, 0x1);
        gbc.writeMem(0xcc7f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x91c, gbc.sp());
        EXPECT(0xcc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7f));
        EXPECT(0xb3, gbc.readMem(0xcc80));
        // CB B3 0205
        gbc.setState(0x9bb3, 0xab90, 0xa40, 0x18ff, 0x14b5, 0x8725, 0x0, 0x1);
        gbc.writeMem(0x9bb3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xab90, gbc.sp());
        EXPECT(0x9bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb3));
        EXPECT(0xb3, gbc.readMem(0x9bb4));
        // CB B3 0206
        gbc.setState(0x7b11, 0x2b50, 0x2660, 0xbdfe, 0x771c, 0xc554, 0x0, 0x0);
        gbc.writeMem(0x7b11, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2b50, gbc.sp());
        EXPECT(0x7b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0207
        gbc.setState(0xde0f, 0xee2d, 0x9c10, 0x5967, 0x8179, 0x4980, 0x0, 0x1);
        gbc.writeMem(0xde0f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xee2d, gbc.sp());
        EXPECT(0xde11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde0f));
        EXPECT(0xb3, gbc.readMem(0xde10));
        // CB B3 0208
        gbc.setState(0x2ab7, 0x269a, 0xfd30, 0xd9ff, 0x7f60, 0x23f9, 0x1, 0x1);
        gbc.writeMem(0x2ab7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x269a, gbc.sp());
        EXPECT(0x2ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0209
        gbc.setState(0xb6a0, 0x7c0c, 0x54c0, 0x943a, 0x303, 0xb3f4, 0x1, 0x0);
        gbc.writeMem(0xb6a0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7c0c, gbc.sp());
        EXPECT(0xb6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a0));
        EXPECT(0xb3, gbc.readMem(0xb6a1));
        // CB B3 020A
        gbc.setState(0x7a8f, 0x4988, 0xe410, 0x3646, 0x3878, 0xc137, 0x1, 0x0);
        gbc.writeMem(0x7a8f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4988, gbc.sp());
        EXPECT(0x7a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 020B
        gbc.setState(0xecbe, 0xee22, 0x65a0, 0x9101, 0x5217, 0x4575, 0x1, 0x0);
        gbc.writeMem(0xecbe, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xee22, gbc.sp());
        EXPECT(0xecc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbe));
        EXPECT(0xb3, gbc.readMem(0xecbf));
        // CB B3 020C
        gbc.setState(0x412c, 0xcc69, 0xc750, 0xe2d6, 0x5fa0, 0xec02, 0x1, 0x0);
        gbc.writeMem(0x412c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcc69, gbc.sp());
        EXPECT(0x412e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 020D
        gbc.setState(0xab03, 0x4c26, 0x9000, 0x7244, 0xb6a5, 0x3b66, 0x0, 0x0);
        gbc.writeMem(0xab03, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4c26, gbc.sp());
        EXPECT(0xab05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab03));
        EXPECT(0xb3, gbc.readMem(0xab04));
        // CB B3 020E
        gbc.setState(0x546c, 0x6b35, 0x93a0, 0xff3b, 0x63b9, 0x162e, 0x0, 0x0);
        gbc.writeMem(0x546c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6b35, gbc.sp());
        EXPECT(0x546e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 020F
        gbc.setState(0x9443, 0xb61c, 0xcd90, 0xdf2a, 0xa43d, 0x7401, 0x0, 0x1);
        gbc.writeMem(0x9443, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb61c, gbc.sp());
        EXPECT(0x9445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9443));
        EXPECT(0xb3, gbc.readMem(0x9444));
        // CB B3 0210
        gbc.setState(0x3623, 0x4e6d, 0x7ae0, 0x9085, 0xbde4, 0x8dee, 0x0, 0x1);
        gbc.writeMem(0x3623, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4e6d, gbc.sp());
        EXPECT(0x3625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0211
        gbc.setState(0x1818, 0xa132, 0x1680, 0xb192, 0x9d6d, 0x4433, 0x0, 0x1);
        gbc.writeMem(0x1818, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa132, gbc.sp());
        EXPECT(0x181a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0212
        gbc.setState(0x970c, 0x30c3, 0x9ab0, 0xeb49, 0x670, 0x3ca6, 0x1, 0x1);
        gbc.writeMem(0x970c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x30c3, gbc.sp());
        EXPECT(0x970e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970c));
        EXPECT(0xb3, gbc.readMem(0x970d));
        // CB B3 0213
        gbc.setState(0x30fb, 0x1431, 0xad10, 0xccd, 0x8ed4, 0x3f1, 0x0, 0x1);
        gbc.writeMem(0x30fb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1431, gbc.sp());
        EXPECT(0x30fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0214
        gbc.setState(0x41ad, 0x51f6, 0x93d0, 0xc2fe, 0xde31, 0xf284, 0x1, 0x0);
        gbc.writeMem(0x41ad, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x51f6, gbc.sp());
        EXPECT(0x41af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0215
        gbc.setState(0xcba8, 0x926d, 0xa3e0, 0x9ca6, 0xa0f0, 0x26c8, 0x0, 0x0);
        gbc.writeMem(0xcba8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x926d, gbc.sp());
        EXPECT(0xcbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba8));
        EXPECT(0xb3, gbc.readMem(0xcba9));
        // CB B3 0216
        gbc.setState(0x7ad, 0x7e0f, 0xa440, 0x7565, 0x639, 0xe296, 0x0, 0x0);
        gbc.writeMem(0x7ad, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7e0f, gbc.sp());
        EXPECT(0x7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0217
        gbc.setState(0x8fdc, 0x79d6, 0xf5a0, 0x2ba1, 0xb0b0, 0x7dc6, 0x1, 0x1);
        gbc.writeMem(0x8fdc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x79d6, gbc.sp());
        EXPECT(0x8fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fdc));
        EXPECT(0xb3, gbc.readMem(0x8fdd));
        // CB B3 0218
        gbc.setState(0x9d9b, 0xa739, 0x3b10, 0x520d, 0x2813, 0x8b62, 0x1, 0x1);
        gbc.writeMem(0x9d9b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa739, gbc.sp());
        EXPECT(0x9d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9b));
        EXPECT(0xb3, gbc.readMem(0x9d9c));
        // CB B3 0219
        gbc.setState(0xe025, 0x42fc, 0x25f0, 0x3600, 0x933d, 0xda1c, 0x1, 0x1);
        gbc.writeMem(0xe025, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x42fc, gbc.sp());
        EXPECT(0xe027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe025));
        EXPECT(0xb3, gbc.readMem(0xe026));
        // CB B3 021A
        gbc.setState(0xe5d, 0x71ea, 0xed40, 0x13bb, 0x6887, 0xe0f2, 0x1, 0x1);
        gbc.writeMem(0xe5d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x71ea, gbc.sp());
        EXPECT(0xe5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 021B
        gbc.setState(0xab6d, 0xb696, 0x1e60, 0x3d59, 0xdf54, 0xcb8a, 0x0, 0x0);
        gbc.writeMem(0xab6d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb696, gbc.sp());
        EXPECT(0xab6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab6d));
        EXPECT(0xb3, gbc.readMem(0xab6e));
        // CB B3 021C
        gbc.setState(0x68e, 0x4f47, 0xc5e0, 0xfe79, 0xa4c0, 0x636b, 0x1, 0x0);
        gbc.writeMem(0x68e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4f47, gbc.sp());
        EXPECT(0x690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 021D
        gbc.setState(0x4674, 0x815, 0x340, 0x9453, 0xcb1d, 0x5568, 0x0, 0x1);
        gbc.writeMem(0x4674, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x815, gbc.sp());
        EXPECT(0x4676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 021E
        gbc.setState(0x2f93, 0x9efd, 0x9bd0, 0x3f0c, 0x9c92, 0xf817, 0x0, 0x1);
        gbc.writeMem(0x2f93, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9efd, gbc.sp());
        EXPECT(0x2f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 021F
        gbc.setState(0x19e5, 0x8a88, 0x8510, 0x32b6, 0x8a4, 0x9a2e, 0x0, 0x1);
        gbc.writeMem(0x19e5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8a88, gbc.sp());
        EXPECT(0x19e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0220
        gbc.setState(0x33c1, 0x16a5, 0xc660, 0x969c, 0x6b67, 0x5536, 0x1, 0x0);
        gbc.writeMem(0x33c1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x16a5, gbc.sp());
        EXPECT(0x33c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0221
        gbc.setState(0xd9b2, 0x45e7, 0x56e0, 0xcf45, 0x4ef4, 0x8d42, 0x1, 0x0);
        gbc.writeMem(0xd9b2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x45e7, gbc.sp());
        EXPECT(0xd9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b2));
        EXPECT(0xb3, gbc.readMem(0xd9b3));
        // CB B3 0222
        gbc.setState(0xe636, 0x7baa, 0x82a0, 0xac44, 0xc76c, 0x7e62, 0x1, 0x1);
        gbc.writeMem(0xe636, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7baa, gbc.sp());
        EXPECT(0xe638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe636));
        EXPECT(0xb3, gbc.readMem(0xe637));
        // CB B3 0223
        gbc.setState(0xdb25, 0x2b83, 0xdf50, 0x68ba, 0x2bda, 0x1545, 0x1, 0x0);
        gbc.writeMem(0xdb25, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2b83, gbc.sp());
        EXPECT(0xdb27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb25));
        EXPECT(0xb3, gbc.readMem(0xdb26));
        // CB B3 0224
        gbc.setState(0x4073, 0xde4d, 0x24d0, 0xed38, 0x8322, 0x424e, 0x1, 0x0);
        gbc.writeMem(0x4073, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xde4d, gbc.sp());
        EXPECT(0x4075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0225
        gbc.setState(0x9807, 0x92f5, 0x8c80, 0x905c, 0x778e, 0xe80d, 0x0, 0x0);
        gbc.writeMem(0x9807, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0x9809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9807));
        EXPECT(0xb3, gbc.readMem(0x9808));
        // CB B3 0226
        gbc.setState(0x778, 0xd093, 0x6350, 0x4f07, 0xf28c, 0x9b53, 0x1, 0x0);
        gbc.writeMem(0x778, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd093, gbc.sp());
        EXPECT(0x77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0227
        gbc.setState(0x2083, 0xf8aa, 0x99f0, 0x8922, 0x7aba, 0x6b11, 0x0, 0x1);
        gbc.writeMem(0x2083, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf8aa, gbc.sp());
        EXPECT(0x2085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0228
        gbc.setState(0xe53d, 0x43c4, 0xa2f0, 0xd1a9, 0x3285, 0xbfec, 0x0, 0x0);
        gbc.writeMem(0xe53d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x43c4, gbc.sp());
        EXPECT(0xe53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53d));
        EXPECT(0xb3, gbc.readMem(0xe53e));
        // CB B3 0229
        gbc.setState(0x1550, 0x8c3f, 0x8b70, 0xb2f8, 0x671d, 0x81c6, 0x0, 0x0);
        gbc.writeMem(0x1550, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8c3f, gbc.sp());
        EXPECT(0x1552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 022A
        gbc.setState(0x1fb7, 0xf2c2, 0x77b0, 0x66e, 0xf0f6, 0x44f6, 0x0, 0x1);
        gbc.writeMem(0x1fb7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf2c2, gbc.sp());
        EXPECT(0x1fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 022B
        gbc.setState(0x4b0f, 0x359f, 0xf330, 0xf3bb, 0x8f23, 0xb452, 0x1, 0x1);
        gbc.writeMem(0x4b0f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x359f, gbc.sp());
        EXPECT(0x4b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 022C
        gbc.setState(0x322, 0x4032, 0xc790, 0xf706, 0x2b, 0x58d0, 0x0, 0x1);
        gbc.writeMem(0x322, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4032, gbc.sp());
        EXPECT(0x324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 022D
        gbc.setState(0x4a4e, 0x660a, 0x4040, 0x36d2, 0xe42e, 0x8d50, 0x1, 0x1);
        gbc.writeMem(0x4a4e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x660a, gbc.sp());
        EXPECT(0x4a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 022E
        gbc.setState(0xcee3, 0x1c15, 0x22d0, 0x31bd, 0x2be0, 0x9299, 0x1, 0x1);
        gbc.writeMem(0xcee3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1c15, gbc.sp());
        EXPECT(0xcee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee3));
        EXPECT(0xb3, gbc.readMem(0xcee4));
        // CB B3 022F
        gbc.setState(0x780a, 0xc9d8, 0x4010, 0xe61c, 0xab4b, 0x646, 0x1, 0x0);
        gbc.writeMem(0x780a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc9d8, gbc.sp());
        EXPECT(0x780c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0230
        gbc.setState(0x49ef, 0xf86b, 0x7940, 0xd2ec, 0xaeed, 0x5a28, 0x1, 0x0);
        gbc.writeMem(0x49ef, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf86b, gbc.sp());
        EXPECT(0x49f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0231
        gbc.setState(0x349a, 0xb089, 0xf290, 0x7aa1, 0x28f6, 0xb7ce, 0x0, 0x0);
        gbc.writeMem(0x349a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb089, gbc.sp());
        EXPECT(0x349c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0232
        gbc.setState(0x4f9c, 0x38d1, 0x1ff0, 0x59c4, 0x65a1, 0x5967, 0x1, 0x0);
        gbc.writeMem(0x4f9c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x38d1, gbc.sp());
        EXPECT(0x4f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0233
        gbc.setState(0xe611, 0x9d6, 0xd600, 0x1471, 0x5786, 0xbecf, 0x1, 0x1);
        gbc.writeMem(0xe611, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9d6, gbc.sp());
        EXPECT(0xe613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe611));
        EXPECT(0xb3, gbc.readMem(0xe612));
        // CB B3 0234
        gbc.setState(0xd1, 0x49bb, 0xcd30, 0xb5a3, 0x2e84, 0x4579, 0x1, 0x1);
        gbc.writeMem(0xd1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x49bb, gbc.sp());
        EXPECT(0xd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0235
        gbc.setState(0x831b, 0xac8e, 0x8ae0, 0x6ea0, 0x1907, 0x5c2e, 0x0, 0x0);
        gbc.writeMem(0x831b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xac8e, gbc.sp());
        EXPECT(0x831d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831b));
        EXPECT(0xb3, gbc.readMem(0x831c));
        // CB B3 0236
        gbc.setState(0xe659, 0xfa70, 0x1b30, 0x9794, 0x8bbd, 0xa797, 0x0, 0x1);
        gbc.writeMem(0xe659, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0xe65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe659));
        EXPECT(0xb3, gbc.readMem(0xe65a));
        // CB B3 0237
        gbc.setState(0x136b, 0xdbf0, 0x3cc0, 0xafd1, 0x401d, 0x23a6, 0x1, 0x1);
        gbc.writeMem(0x136b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdbf0, gbc.sp());
        EXPECT(0x136d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0238
        gbc.setState(0xa1fd, 0xde57, 0x6120, 0xa4a4, 0xf565, 0xab45, 0x0, 0x1);
        gbc.writeMem(0xa1fd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xde57, gbc.sp());
        EXPECT(0xa1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1fd));
        EXPECT(0xb3, gbc.readMem(0xa1fe));
        // CB B3 023A
        gbc.setState(0xa0dd, 0x4768, 0x6b00, 0x4e1f, 0x26e4, 0x25cd, 0x1, 0x1);
        gbc.writeMem(0xa0dd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4768, gbc.sp());
        EXPECT(0xa0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0dd));
        EXPECT(0xb3, gbc.readMem(0xa0de));
        // CB B3 023B
        gbc.setState(0x20dc, 0x4c5, 0x71f0, 0x62cd, 0xf43d, 0x6a47, 0x0, 0x0);
        gbc.writeMem(0x20dc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4c5, gbc.sp());
        EXPECT(0x20de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 023C
        gbc.setState(0x4f68, 0x64be, 0x72a0, 0x9b6d, 0x1b07, 0x624b, 0x0, 0x0);
        gbc.writeMem(0x4f68, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x64be, gbc.sp());
        EXPECT(0x4f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 023D
        gbc.setState(0xcb24, 0x5df8, 0x27b0, 0x4458, 0x90ce, 0x278f, 0x0, 0x0);
        gbc.writeMem(0xcb24, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5df8, gbc.sp());
        EXPECT(0xcb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb24));
        EXPECT(0xb3, gbc.readMem(0xcb25));
        // CB B3 023E
        gbc.setState(0x7301, 0x5e21, 0x6190, 0x2472, 0x2566, 0xcbbe, 0x1, 0x1);
        gbc.writeMem(0x7301, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5e21, gbc.sp());
        EXPECT(0x7303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 023F
        gbc.setState(0xe9a5, 0x6657, 0x4020, 0xccc, 0x668, 0x9632, 0x0, 0x0);
        gbc.writeMem(0xe9a5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6657, gbc.sp());
        EXPECT(0xe9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a5));
        EXPECT(0xb3, gbc.readMem(0xe9a6));
        // CB B3 0240
        gbc.setState(0xcf, 0x13fb, 0xab80, 0x636, 0xb6cf, 0xf5c9, 0x0, 0x1);
        gbc.writeMem(0xcf, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x13fb, gbc.sp());
        EXPECT(0xd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0241
        gbc.setState(0x4b04, 0xfe78, 0x8430, 0x8d98, 0x4964, 0x8792, 0x1, 0x1);
        gbc.writeMem(0x4b04, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfe78, gbc.sp());
        EXPECT(0x4b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0242
        gbc.setState(0x3681, 0xb2a, 0x63b0, 0x96fb, 0xe6a0, 0x8284, 0x1, 0x0);
        gbc.writeMem(0x3681, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb2a, gbc.sp());
        EXPECT(0x3683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0243
        gbc.setState(0xdd38, 0x5fb3, 0xeaf0, 0x50df, 0xeb48, 0x2a53, 0x1, 0x1);
        gbc.writeMem(0xdd38, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5fb3, gbc.sp());
        EXPECT(0xdd3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd38));
        EXPECT(0xb3, gbc.readMem(0xdd39));
        // CB B3 0244
        gbc.setState(0x121d, 0xc773, 0xa140, 0xc9a0, 0x775a, 0x4163, 0x0, 0x1);
        gbc.writeMem(0x121d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc773, gbc.sp());
        EXPECT(0x121f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0245
        gbc.setState(0x50de, 0x5765, 0xdeb0, 0xc3d, 0x3353, 0xf675, 0x0, 0x0);
        gbc.writeMem(0x50de, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5765, gbc.sp());
        EXPECT(0x50e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0246
        gbc.setState(0x3d9, 0x8a9f, 0xc0, 0xb855, 0x9294, 0xdcc3, 0x1, 0x0);
        gbc.writeMem(0x3d9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8a9f, gbc.sp());
        EXPECT(0x3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0247
        gbc.setState(0xcc27, 0x1564, 0x4370, 0x91f1, 0x4450, 0x3e3d, 0x0, 0x0);
        gbc.writeMem(0xcc27, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1564, gbc.sp());
        EXPECT(0xcc29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc27));
        EXPECT(0xb3, gbc.readMem(0xcc28));
        // CB B3 0248
        gbc.setState(0xbd39, 0x3843, 0x4340, 0x564f, 0x9b6a, 0x1fbf, 0x1, 0x0);
        gbc.writeMem(0xbd39, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3843, gbc.sp());
        EXPECT(0xbd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd39));
        EXPECT(0xb3, gbc.readMem(0xbd3a));
        // CB B3 0249
        gbc.setState(0xc49d, 0x71aa, 0x62a0, 0x2e96, 0x6ce8, 0x99ad, 0x0, 0x0);
        gbc.writeMem(0xc49d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x71aa, gbc.sp());
        EXPECT(0xc49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49d));
        EXPECT(0xb3, gbc.readMem(0xc49e));
        // CB B3 024A
        gbc.setState(0x932a, 0x2490, 0x14f0, 0x8ec2, 0x9202, 0x351e, 0x0, 0x0);
        gbc.writeMem(0x932a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2490, gbc.sp());
        EXPECT(0x932c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x932a));
        EXPECT(0xb3, gbc.readMem(0x932b));
        // CB B3 024B
        gbc.setState(0x2be8, 0xdd82, 0x12e0, 0x8ecb, 0x7e5f, 0xbdeb, 0x1, 0x0);
        gbc.writeMem(0x2be8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdd82, gbc.sp());
        EXPECT(0x2bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 024C
        gbc.setState(0x2cfe, 0x3b79, 0xcb70, 0x9329, 0x84f3, 0xaf79, 0x0, 0x0);
        gbc.writeMem(0x2cfe, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3b79, gbc.sp());
        EXPECT(0x2d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 024D
        gbc.setState(0xdfb7, 0x1c35, 0x8400, 0x2d32, 0x9920, 0x8269, 0x0, 0x1);
        gbc.writeMem(0xdfb7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1c35, gbc.sp());
        EXPECT(0xdfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb7));
        EXPECT(0xb3, gbc.readMem(0xdfb8));
        // CB B3 024E
        gbc.setState(0x4d36, 0x5028, 0x3210, 0x5f5, 0xe2f9, 0xaf1a, 0x1, 0x0);
        gbc.writeMem(0x4d36, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5028, gbc.sp());
        EXPECT(0x4d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 024F
        gbc.setState(0x4650, 0xb455, 0x20b0, 0xa6d6, 0x431a, 0x78df, 0x1, 0x1);
        gbc.writeMem(0x4650, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb455, gbc.sp());
        EXPECT(0x4652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0250
        gbc.setState(0xcb6f, 0x8da, 0xa6e0, 0xd0, 0x51b7, 0xba42, 0x0, 0x0);
        gbc.writeMem(0xcb6f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8da, gbc.sp());
        EXPECT(0xcb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6f));
        EXPECT(0xb3, gbc.readMem(0xcb70));
        // CB B3 0251
        gbc.setState(0x6584, 0xdc82, 0xf430, 0x37f, 0xea04, 0x8f8a, 0x0, 0x1);
        gbc.writeMem(0x6584, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdc82, gbc.sp());
        EXPECT(0x6586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0252
        gbc.setState(0xa08, 0x9816, 0x8970, 0x569c, 0x82fe, 0x26b9, 0x1, 0x0);
        gbc.writeMem(0xa08, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9816, gbc.sp());
        EXPECT(0xa0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0253
        gbc.setState(0xb14a, 0xb487, 0xa7d0, 0x58cf, 0x74b4, 0x5597, 0x1, 0x1);
        gbc.writeMem(0xb14a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb487, gbc.sp());
        EXPECT(0xb14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14a));
        EXPECT(0xb3, gbc.readMem(0xb14b));
        // CB B3 0254
        gbc.setState(0x607c, 0x23c3, 0x7a60, 0xa4ad, 0xe78f, 0x47f9, 0x0, 0x1);
        gbc.writeMem(0x607c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x23c3, gbc.sp());
        EXPECT(0x607e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0255
        gbc.setState(0xe699, 0x8147, 0xc3c0, 0xbef9, 0x7991, 0xbb48, 0x0, 0x1);
        gbc.writeMem(0xe699, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8147, gbc.sp());
        EXPECT(0xe69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe699));
        EXPECT(0xb3, gbc.readMem(0xe69a));
        // CB B3 0256
        gbc.setState(0x54b6, 0x860a, 0x47e0, 0x73d8, 0xbe3, 0x4114, 0x1, 0x0);
        gbc.writeMem(0x54b6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x860a, gbc.sp());
        EXPECT(0x54b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0257
        gbc.setState(0x87c6, 0xb32f, 0xd050, 0x423d, 0x6dd7, 0xfa5f, 0x0, 0x0);
        gbc.writeMem(0x87c6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb32f, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c6));
        EXPECT(0xb3, gbc.readMem(0x87c7));
        // CB B3 0258
        gbc.setState(0x2110, 0xde88, 0x2140, 0xcaf7, 0x8506, 0xdf4e, 0x0, 0x1);
        gbc.writeMem(0x2110, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xde88, gbc.sp());
        EXPECT(0x2112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0259
        gbc.setState(0x9cb1, 0x7ee9, 0xf990, 0x954c, 0xf6a0, 0xb3f, 0x1, 0x0);
        gbc.writeMem(0x9cb1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7ee9, gbc.sp());
        EXPECT(0x9cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb1));
        EXPECT(0xb3, gbc.readMem(0x9cb2));
        // CB B3 025A
        gbc.setState(0x9638, 0xb32b, 0x62c0, 0xbc83, 0x91a6, 0x9682, 0x0, 0x1);
        gbc.writeMem(0x9638, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb32b, gbc.sp());
        EXPECT(0x963a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9638));
        EXPECT(0xb3, gbc.readMem(0x9639));
        // CB B3 025B
        gbc.setState(0x6fad, 0xaad, 0x5040, 0x4c62, 0xdfdc, 0xbee5, 0x1, 0x1);
        gbc.writeMem(0x6fad, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xaad, gbc.sp());
        EXPECT(0x6faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 025C
        gbc.setState(0xac53, 0xe630, 0x5030, 0xe3d3, 0x70fa, 0x5d05, 0x0, 0x0);
        gbc.writeMem(0xac53, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe630, gbc.sp());
        EXPECT(0xac55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac53));
        EXPECT(0xb3, gbc.readMem(0xac54));
        // CB B3 025D
        gbc.setState(0xd77a, 0x18c8, 0x1320, 0xa94a, 0xb13, 0xc8d2, 0x1, 0x1);
        gbc.writeMem(0xd77a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x18c8, gbc.sp());
        EXPECT(0xd77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77a));
        EXPECT(0xb3, gbc.readMem(0xd77b));
        // CB B3 025E
        gbc.setState(0x87cd, 0x85bc, 0xbbd0, 0x4dcd, 0xd983, 0xe630, 0x0, 0x1);
        gbc.writeMem(0x87cd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x85bc, gbc.sp());
        EXPECT(0x87cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87cd));
        EXPECT(0xb3, gbc.readMem(0x87ce));
        // CB B3 025F
        gbc.setState(0xcecb, 0x6a, 0xf540, 0xef2e, 0x7b60, 0xa2b4, 0x1, 0x0);
        gbc.writeMem(0xcecb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6a, gbc.sp());
        EXPECT(0xcecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecb));
        EXPECT(0xb3, gbc.readMem(0xcecc));
        // CB B3 0260
        gbc.setState(0x8fa9, 0x62b1, 0x59f0, 0xffad, 0x9b6e, 0x72cd, 0x1, 0x1);
        gbc.writeMem(0x8fa9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x62b1, gbc.sp());
        EXPECT(0x8fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa9));
        EXPECT(0xb3, gbc.readMem(0x8faa));
        // CB B3 0261
        gbc.setState(0x5517, 0xf0fa, 0x9aa0, 0x96c2, 0x16d8, 0xa0fc, 0x0, 0x0);
        gbc.writeMem(0x5517, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf0fa, gbc.sp());
        EXPECT(0x5519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0262
        gbc.setState(0x77bc, 0x4904, 0x5630, 0x5bb7, 0x6f85, 0x55d4, 0x1, 0x0);
        gbc.writeMem(0x77bc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4904, gbc.sp());
        EXPECT(0x77be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0263
        gbc.setState(0xe611, 0x8a64, 0x9180, 0x8c00, 0x243, 0x747f, 0x1, 0x0);
        gbc.writeMem(0xe611, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8a64, gbc.sp());
        EXPECT(0xe613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe611));
        EXPECT(0xb3, gbc.readMem(0xe612));
        // CB B3 0264
        gbc.setState(0x194c, 0x81a4, 0xa2a0, 0xe5f4, 0x16b1, 0xaf6c, 0x1, 0x1);
        gbc.writeMem(0x194c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x81a4, gbc.sp());
        EXPECT(0x194e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0265
        gbc.setState(0x2a5b, 0x7fa7, 0x2240, 0xb8a7, 0x6506, 0xe3db, 0x0, 0x1);
        gbc.writeMem(0x2a5b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7fa7, gbc.sp());
        EXPECT(0x2a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0266
        gbc.setState(0x52a, 0xab4d, 0x2410, 0x203f, 0x9133, 0x4226, 0x0, 0x0);
        gbc.writeMem(0x52a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xab4d, gbc.sp());
        EXPECT(0x52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0267
        gbc.setState(0x7419, 0xa411, 0x8c0, 0x561f, 0xa04e, 0x6969, 0x1, 0x0);
        gbc.writeMem(0x7419, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa411, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0268
        gbc.setState(0x15e, 0xa4ad, 0xf200, 0xbffd, 0xc511, 0xda4, 0x1, 0x0);
        gbc.writeMem(0x15e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa4ad, gbc.sp());
        EXPECT(0x160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0269
        gbc.setState(0x2e22, 0xacbd, 0x3b90, 0x7d53, 0x647b, 0xf0f4, 0x0, 0x0);
        gbc.writeMem(0x2e22, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xacbd, gbc.sp());
        EXPECT(0x2e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 026A
        gbc.setState(0x576d, 0xa300, 0x41a0, 0x77f1, 0x32f9, 0x1d69, 0x1, 0x1);
        gbc.writeMem(0x576d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa300, gbc.sp());
        EXPECT(0x576f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 026B
        gbc.setState(0x814, 0x4a76, 0x5ae0, 0x8c98, 0x9681, 0xcc8c, 0x1, 0x0);
        gbc.writeMem(0x814, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4a76, gbc.sp());
        EXPECT(0x816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 026C
        gbc.setState(0x8d66, 0x828f, 0x8fb0, 0x9b97, 0x4ebe, 0x8c01, 0x1, 0x0);
        gbc.writeMem(0x8d66, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x828f, gbc.sp());
        EXPECT(0x8d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d66));
        EXPECT(0xb3, gbc.readMem(0x8d67));
        // CB B3 026D
        gbc.setState(0x5932, 0x7ceb, 0xceb0, 0x4c08, 0x80fe, 0x4c2a, 0x0, 0x1);
        gbc.writeMem(0x5932, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7ceb, gbc.sp());
        EXPECT(0x5934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 026E
        gbc.setState(0x7e68, 0x86e1, 0x6c80, 0x2d3, 0x2f55, 0x1475, 0x0, 0x1);
        gbc.writeMem(0x7e68, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x86e1, gbc.sp());
        EXPECT(0x7e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 026F
        gbc.setState(0x45db, 0x881f, 0x7370, 0xa1dd, 0xb93f, 0x878d, 0x1, 0x1);
        gbc.writeMem(0x45db, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x881f, gbc.sp());
        EXPECT(0x45dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0270
        gbc.setState(0x778, 0x3375, 0xb260, 0xb77d, 0x1e39, 0x35f9, 0x1, 0x0);
        gbc.writeMem(0x778, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3375, gbc.sp());
        EXPECT(0x77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0271
        gbc.setState(0x8359, 0x971e, 0x9770, 0xcaa4, 0x1f4f, 0x9aa, 0x0, 0x1);
        gbc.writeMem(0x8359, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x971e, gbc.sp());
        EXPECT(0x835b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8359));
        EXPECT(0xb3, gbc.readMem(0x835a));
        // CB B3 0272
        gbc.setState(0xb11c, 0x4d89, 0x2840, 0x131a, 0x387, 0x8716, 0x1, 0x1);
        gbc.writeMem(0xb11c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4d89, gbc.sp());
        EXPECT(0xb11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11c));
        EXPECT(0xb3, gbc.readMem(0xb11d));
        // CB B3 0273
        gbc.setState(0x5350, 0xa8bc, 0x4da0, 0xd01, 0x6f2b, 0x6b10, 0x1, 0x1);
        gbc.writeMem(0x5350, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa8bc, gbc.sp());
        EXPECT(0x5352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0274
        gbc.setState(0x2b1d, 0x4f13, 0xca0, 0x5921, 0xa9fa, 0xc137, 0x1, 0x1);
        gbc.writeMem(0x2b1d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4f13, gbc.sp());
        EXPECT(0x2b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0275
        gbc.setState(0xb8a9, 0x8435, 0x14d0, 0xea0c, 0xd1d0, 0xe57b, 0x1, 0x1);
        gbc.writeMem(0xb8a9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8435, gbc.sp());
        EXPECT(0xb8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a9));
        EXPECT(0xb3, gbc.readMem(0xb8aa));
        // CB B3 0276
        gbc.setState(0xb375, 0x918b, 0x4cc0, 0x3e54, 0x2799, 0xf2c7, 0x1, 0x0);
        gbc.writeMem(0xb375, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x918b, gbc.sp());
        EXPECT(0xb377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb375));
        EXPECT(0xb3, gbc.readMem(0xb376));
        // CB B3 0277
        gbc.setState(0xca40, 0x3582, 0xe270, 0xff39, 0x3d90, 0x5840, 0x0, 0x0);
        gbc.writeMem(0xca40, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3582, gbc.sp());
        EXPECT(0xca42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca40));
        EXPECT(0xb3, gbc.readMem(0xca41));
        // CB B3 0278
        gbc.setState(0x4631, 0x9710, 0xb180, 0xdfa6, 0x9901, 0x8c54, 0x0, 0x0);
        gbc.writeMem(0x4631, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9710, gbc.sp());
        EXPECT(0x4633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0279
        gbc.setState(0xe5d1, 0x190a, 0x36c0, 0x70a6, 0x48ee, 0x2f86, 0x1, 0x0);
        gbc.writeMem(0xe5d1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x190a, gbc.sp());
        EXPECT(0xe5d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d1));
        EXPECT(0xb3, gbc.readMem(0xe5d2));
        // CB B3 027A
        gbc.setState(0x6647, 0x92de, 0x6080, 0x566e, 0xe824, 0xb212, 0x1, 0x0);
        gbc.writeMem(0x6647, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x92de, gbc.sp());
        EXPECT(0x6649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 027B
        gbc.setState(0x4e60, 0xb288, 0xda50, 0x993f, 0x16a2, 0xb0f9, 0x1, 0x1);
        gbc.writeMem(0x4e60, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb288, gbc.sp());
        EXPECT(0x4e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 027C
        gbc.setState(0x3f7c, 0x7b3d, 0x1e90, 0xcfd7, 0x2e68, 0x1101, 0x1, 0x0);
        gbc.writeMem(0x3f7c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7b3d, gbc.sp());
        EXPECT(0x3f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 027D
        gbc.setState(0xc3ea, 0xa385, 0xe5d0, 0x68d6, 0x59fd, 0xfea3, 0x1, 0x0);
        gbc.writeMem(0xc3ea, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa385, gbc.sp());
        EXPECT(0xc3ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ea));
        EXPECT(0xb3, gbc.readMem(0xc3eb));
        // CB B3 027E
        gbc.setState(0xb7, 0x8511, 0xa570, 0x56f7, 0xdc83, 0x70fb, 0x1, 0x1);
        gbc.writeMem(0xb7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8511, gbc.sp());
        EXPECT(0xb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0280
        gbc.setState(0xabc0, 0xff52, 0xbf00, 0x6d5e, 0x6dc0, 0x69ab, 0x1, 0x1);
        gbc.writeMem(0xabc0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xff52, gbc.sp());
        EXPECT(0xabc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc0));
        EXPECT(0xb3, gbc.readMem(0xabc1));
        // CB B3 0281
        gbc.setState(0x393e, 0x73a, 0x1680, 0x76da, 0x24db, 0xab78, 0x0, 0x0);
        gbc.writeMem(0x393e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x73a, gbc.sp());
        EXPECT(0x3940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0282
        gbc.setState(0x7b9f, 0x8584, 0x8580, 0x3439, 0x14fd, 0x49ab, 0x1, 0x1);
        gbc.writeMem(0x7b9f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8584, gbc.sp());
        EXPECT(0x7ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0283
        gbc.setState(0x916e, 0xd483, 0xd940, 0xe323, 0x1835, 0xcfae, 0x0, 0x1);
        gbc.writeMem(0x916e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd483, gbc.sp());
        EXPECT(0x9170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916e));
        EXPECT(0xb3, gbc.readMem(0x916f));
        // CB B3 0285
        gbc.setState(0x2788, 0xb800, 0x5410, 0xe865, 0xa735, 0x64a0, 0x1, 0x1);
        gbc.writeMem(0x2788, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb800, gbc.sp());
        EXPECT(0x278a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0286
        gbc.setState(0x535, 0xc58, 0xe4c0, 0x3303, 0xf3e, 0x3673, 0x1, 0x1);
        gbc.writeMem(0x535, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc58, gbc.sp());
        EXPECT(0x537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0287
        gbc.setState(0xe561, 0xa62c, 0x50c0, 0x8303, 0xfa94, 0x6815, 0x1, 0x1);
        gbc.writeMem(0xe561, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa62c, gbc.sp());
        EXPECT(0xe563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe561));
        EXPECT(0xb3, gbc.readMem(0xe562));
        // CB B3 0288
        gbc.setState(0x2d7a, 0x63d6, 0xe200, 0xb166, 0xbcc8, 0xe212, 0x0, 0x0);
        gbc.writeMem(0x2d7a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x63d6, gbc.sp());
        EXPECT(0x2d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0289
        gbc.setState(0xbdd4, 0x50e6, 0xa1b0, 0x651c, 0x4df6, 0xf1de, 0x0, 0x0);
        gbc.writeMem(0xbdd4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x50e6, gbc.sp());
        EXPECT(0xbdd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd4));
        EXPECT(0xb3, gbc.readMem(0xbdd5));
        // CB B3 028A
        gbc.setState(0x4945, 0xe666, 0x42f0, 0x76de, 0xef28, 0x21e, 0x0, 0x1);
        gbc.writeMem(0x4945, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe666, gbc.sp());
        EXPECT(0x4947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 028B
        gbc.setState(0x6a37, 0xc8, 0x16e0, 0x89a8, 0x8660, 0x9087, 0x1, 0x1);
        gbc.writeMem(0x6a37, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc8, gbc.sp());
        EXPECT(0x6a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 028C
        gbc.setState(0x2410, 0xf360, 0x6a30, 0xdcdc, 0x45ae, 0xad9c, 0x0, 0x0);
        gbc.writeMem(0x2410, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf360, gbc.sp());
        EXPECT(0x2412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 028D
        gbc.setState(0xc2a9, 0x6e77, 0xef30, 0xcfea, 0xd052, 0xf1c7, 0x0, 0x0);
        gbc.writeMem(0xc2a9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6e77, gbc.sp());
        EXPECT(0xc2ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a9));
        EXPECT(0xb3, gbc.readMem(0xc2aa));
        // CB B3 028E
        gbc.setState(0x2bde, 0x6229, 0x3ce0, 0xf755, 0xb8ff, 0x8236, 0x0, 0x1);
        gbc.writeMem(0x2bde, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6229, gbc.sp());
        EXPECT(0x2be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 028F
        gbc.setState(0x6b2b, 0xc1f3, 0xd2b0, 0x1ba, 0x77a9, 0x8bb1, 0x1, 0x1);
        gbc.writeMem(0x6b2b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc1f3, gbc.sp());
        EXPECT(0x6b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0290
        gbc.setState(0xe926, 0x537b, 0x1620, 0x92ae, 0xfb22, 0x4a16, 0x1, 0x1);
        gbc.writeMem(0xe926, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x537b, gbc.sp());
        EXPECT(0xe928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe926));
        EXPECT(0xb3, gbc.readMem(0xe927));
        // CB B3 0291
        gbc.setState(0xc315, 0x540f, 0x4590, 0x7a8b, 0x80bc, 0x8585, 0x1, 0x0);
        gbc.writeMem(0xc315, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x540f, gbc.sp());
        EXPECT(0xc317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc315));
        EXPECT(0xb3, gbc.readMem(0xc316));
        // CB B3 0292
        gbc.setState(0x38b, 0x3a59, 0xe550, 0xfbeb, 0x9e0b, 0xca18, 0x1, 0x1);
        gbc.writeMem(0x38b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3a59, gbc.sp());
        EXPECT(0x38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0293
        gbc.setState(0xcc08, 0x462f, 0x60f0, 0x6acc, 0xa5f1, 0xd32, 0x0, 0x1);
        gbc.writeMem(0xcc08, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x462f, gbc.sp());
        EXPECT(0xcc0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc08));
        EXPECT(0xb3, gbc.readMem(0xcc09));
        // CB B3 0295
        gbc.setState(0xc6b2, 0xedcd, 0x39a0, 0x869, 0xfbe0, 0xfba9, 0x1, 0x0);
        gbc.writeMem(0xc6b2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xedcd, gbc.sp());
        EXPECT(0xc6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b2));
        EXPECT(0xb3, gbc.readMem(0xc6b3));
        // CB B3 0296
        gbc.setState(0x3093, 0x9b03, 0x9b60, 0x8e25, 0xb09e, 0xbd2, 0x1, 0x0);
        gbc.writeMem(0x3093, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9b03, gbc.sp());
        EXPECT(0x3095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0297
        gbc.setState(0xa222, 0xf73f, 0x3da0, 0x6d08, 0xb816, 0x2a38, 0x1, 0x0);
        gbc.writeMem(0xa222, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf73f, gbc.sp());
        EXPECT(0xa224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa222));
        EXPECT(0xb3, gbc.readMem(0xa223));
        // CB B3 0298
        gbc.setState(0xdb42, 0x73f0, 0xf850, 0xac28, 0x7c8d, 0xa2a8, 0x1, 0x1);
        gbc.writeMem(0xdb42, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x73f0, gbc.sp());
        EXPECT(0xdb44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb42));
        EXPECT(0xb3, gbc.readMem(0xdb43));
        // CB B3 0299
        gbc.setState(0xb6b2, 0x5e9b, 0xdc80, 0x8b18, 0xa02b, 0xa0e5, 0x1, 0x1);
        gbc.writeMem(0xb6b2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5e9b, gbc.sp());
        EXPECT(0xb6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b2));
        EXPECT(0xb3, gbc.readMem(0xb6b3));
        // CB B3 029A
        gbc.setState(0x439d, 0x1be6, 0xe040, 0x9c73, 0xcba7, 0xda34, 0x1, 0x1);
        gbc.writeMem(0x439d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1be6, gbc.sp());
        EXPECT(0x439f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 029B
        gbc.setState(0xb694, 0x2212, 0x3af0, 0xe970, 0x5d2, 0x1c2b, 0x0, 0x1);
        gbc.writeMem(0xb694, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2212, gbc.sp());
        EXPECT(0xb696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb694));
        EXPECT(0xb3, gbc.readMem(0xb695));
        // CB B3 029C
        gbc.setState(0x1ec8, 0xaa0f, 0x4760, 0x5bf6, 0x9069, 0x1bf, 0x1, 0x1);
        gbc.writeMem(0x1ec8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xaa0f, gbc.sp());
        EXPECT(0x1eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 029D
        gbc.setState(0xc8e8, 0x31cc, 0xdaa0, 0x32f6, 0x81fa, 0x4dee, 0x1, 0x0);
        gbc.writeMem(0xc8e8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x31cc, gbc.sp());
        EXPECT(0xc8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e8));
        EXPECT(0xb3, gbc.readMem(0xc8e9));
        // CB B3 029E
        gbc.setState(0xe770, 0x4eb9, 0xb780, 0x588a, 0x4844, 0x38, 0x0, 0x0);
        gbc.writeMem(0xe770, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4eb9, gbc.sp());
        EXPECT(0xe772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe770));
        EXPECT(0xb3, gbc.readMem(0xe771));
        // CB B3 029F
        gbc.setState(0x3c00, 0x13df, 0xae70, 0xe66f, 0x9a80, 0x66c5, 0x1, 0x0);
        gbc.writeMem(0x3c00, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x13df, gbc.sp());
        EXPECT(0x3c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02A0
        gbc.setState(0x6f42, 0x2840, 0x8520, 0xb064, 0xffd3, 0x1ce4, 0x0, 0x1);
        gbc.writeMem(0x6f42, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2840, gbc.sp());
        EXPECT(0x6f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02A1
        gbc.setState(0xd9fd, 0x4675, 0x4b80, 0xc002, 0x164a, 0x86d3, 0x0, 0x0);
        gbc.writeMem(0xd9fd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4675, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fd));
        EXPECT(0xb3, gbc.readMem(0xd9fe));
        // CB B3 02A2
        gbc.setState(0x55be, 0xb39b, 0xb470, 0x5f15, 0x1612, 0x31ee, 0x0, 0x1);
        gbc.writeMem(0x55be, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb39b, gbc.sp());
        EXPECT(0x55c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02A4
        gbc.setState(0xb208, 0x234, 0xd440, 0xc80a, 0x1774, 0xee2e, 0x0, 0x1);
        gbc.writeMem(0xb208, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x234, gbc.sp());
        EXPECT(0xb20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb208));
        EXPECT(0xb3, gbc.readMem(0xb209));
        // CB B3 02A6
        gbc.setState(0x16f3, 0xa001, 0x7400, 0xcee2, 0xd2a0, 0x6539, 0x1, 0x0);
        gbc.writeMem(0x16f3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa001, gbc.sp());
        EXPECT(0x16f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02A7
        gbc.setState(0x517d, 0x8f79, 0x83d0, 0x1ca5, 0x5b7a, 0x4641, 0x1, 0x1);
        gbc.writeMem(0x517d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8f79, gbc.sp());
        EXPECT(0x517f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02A8
        gbc.setState(0xdb26, 0xfd0e, 0x59d0, 0x1ccf, 0x5740, 0x981b, 0x1, 0x0);
        gbc.writeMem(0xdb26, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfd0e, gbc.sp());
        EXPECT(0xdb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb26));
        EXPECT(0xb3, gbc.readMem(0xdb27));
        // CB B3 02A9
        gbc.setState(0x72a, 0x2cc0, 0x1b10, 0x98d6, 0x8ed7, 0xb7b7, 0x1, 0x1);
        gbc.writeMem(0x72a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2cc0, gbc.sp());
        EXPECT(0x72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02AA
        gbc.setState(0x4bf8, 0x8766, 0x1290, 0x6203, 0x5ab2, 0x216b, 0x0, 0x0);
        gbc.writeMem(0x4bf8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8766, gbc.sp());
        EXPECT(0x4bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02AB
        gbc.setState(0x61dd, 0x8637, 0xadf0, 0xb49d, 0xf951, 0xb5c3, 0x0, 0x0);
        gbc.writeMem(0x61dd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8637, gbc.sp());
        EXPECT(0x61df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02AD
        gbc.setState(0x1c88, 0x32ad, 0xf730, 0xa81, 0x2210, 0xcbef, 0x0, 0x1);
        gbc.writeMem(0x1c88, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x32ad, gbc.sp());
        EXPECT(0x1c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02AE
        gbc.setState(0x3a40, 0x7617, 0x6ff0, 0xdf81, 0xb5a2, 0x3467, 0x0, 0x1);
        gbc.writeMem(0x3a40, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7617, gbc.sp());
        EXPECT(0x3a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02AF
        gbc.setState(0x2c8f, 0x4d1a, 0x49d0, 0x3ea0, 0xd5bd, 0x5bce, 0x0, 0x1);
        gbc.writeMem(0x2c8f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4d1a, gbc.sp());
        EXPECT(0x2c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02B0
        gbc.setState(0x93b1, 0x11f, 0xc920, 0x6be4, 0x1fd, 0xce91, 0x0, 0x0);
        gbc.writeMem(0x93b1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x11f, gbc.sp());
        EXPECT(0x93b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b1));
        EXPECT(0xb3, gbc.readMem(0x93b2));
        // CB B3 02B1
        gbc.setState(0x7d2e, 0x1071, 0x6360, 0x9537, 0x3712, 0x1c05, 0x0, 0x0);
        gbc.writeMem(0x7d2e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1071, gbc.sp());
        EXPECT(0x7d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02B2
        gbc.setState(0x3764, 0xe50f, 0x4300, 0x35e6, 0x671e, 0x1e48, 0x1, 0x0);
        gbc.writeMem(0x3764, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe50f, gbc.sp());
        EXPECT(0x3766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02B3
        gbc.setState(0xa2a0, 0x7cae, 0x6a20, 0x39fd, 0x1996, 0x21c8, 0x0, 0x1);
        gbc.writeMem(0xa2a0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7cae, gbc.sp());
        EXPECT(0xa2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a0));
        EXPECT(0xb3, gbc.readMem(0xa2a1));
        // CB B3 02B4
        gbc.setState(0x9cb6, 0x84ad, 0x5d10, 0x25d2, 0xfd8f, 0xd2f5, 0x1, 0x1);
        gbc.writeMem(0x9cb6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x84ad, gbc.sp());
        EXPECT(0x9cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb6));
        EXPECT(0xb3, gbc.readMem(0x9cb7));
        // CB B3 02B5
        gbc.setState(0x5e71, 0xfd9a, 0xc860, 0x3cdd, 0x251f, 0x510b, 0x1, 0x0);
        gbc.writeMem(0x5e71, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfd9a, gbc.sp());
        EXPECT(0x5e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02B6
        gbc.setState(0x599d, 0x5905, 0x3810, 0xe0e, 0x9ee9, 0x6aa9, 0x0, 0x1);
        gbc.writeMem(0x599d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5905, gbc.sp());
        EXPECT(0x599f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02B7
        gbc.setState(0x5e5b, 0x3490, 0xafd0, 0x4973, 0xeacc, 0x3844, 0x0, 0x0);
        gbc.writeMem(0x5e5b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3490, gbc.sp());
        EXPECT(0x5e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02B8
        gbc.setState(0x7f53, 0xfc22, 0x4c0, 0x4c57, 0x4d5e, 0x2c65, 0x0, 0x1);
        gbc.writeMem(0x7f53, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfc22, gbc.sp());
        EXPECT(0x7f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02B9
        gbc.setState(0xd4c, 0xfb0c, 0x11e0, 0x136e, 0x1af7, 0x5c6d, 0x1, 0x1);
        gbc.writeMem(0xd4c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfb0c, gbc.sp());
        EXPECT(0xd4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02BA
        gbc.setState(0x6784, 0x27f9, 0x7420, 0x8f9c, 0xf797, 0x4328, 0x1, 0x0);
        gbc.writeMem(0x6784, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x27f9, gbc.sp());
        EXPECT(0x6786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02BB
        gbc.setState(0xefc9, 0x5eba, 0xd620, 0x2f66, 0x685b, 0x908d, 0x1, 0x0);
        gbc.writeMem(0xefc9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5eba, gbc.sp());
        EXPECT(0xefcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc9));
        EXPECT(0xb3, gbc.readMem(0xefca));
        // CB B3 02BC
        gbc.setState(0x18d5, 0xf9d9, 0x4b70, 0x6c3e, 0x63df, 0x7138, 0x1, 0x0);
        gbc.writeMem(0x18d5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf9d9, gbc.sp());
        EXPECT(0x18d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02BD
        gbc.setState(0x78a5, 0xe9af, 0x8d50, 0x9c05, 0xd6a7, 0xc443, 0x1, 0x1);
        gbc.writeMem(0x78a5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe9af, gbc.sp());
        EXPECT(0x78a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02BE
        gbc.setState(0xdcf3, 0xced8, 0x27b0, 0xc753, 0xa780, 0xb76d, 0x0, 0x1);
        gbc.writeMem(0xdcf3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xced8, gbc.sp());
        EXPECT(0xdcf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf3));
        EXPECT(0xb3, gbc.readMem(0xdcf4));
        // CB B3 02BF
        gbc.setState(0x4813, 0x4f26, 0x3d80, 0xf2a9, 0x355a, 0x1310, 0x0, 0x0);
        gbc.writeMem(0x4813, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4f26, gbc.sp());
        EXPECT(0x4815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02C0
        gbc.setState(0xa5f2, 0xb671, 0x3f00, 0x49b4, 0x357f, 0xffce, 0x0, 0x1);
        gbc.writeMem(0xa5f2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb671, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f2));
        EXPECT(0xb3, gbc.readMem(0xa5f3));
        // CB B3 02C1
        gbc.setState(0x5440, 0x3f54, 0xf3e0, 0xd20b, 0x7d12, 0x19ad, 0x0, 0x0);
        gbc.writeMem(0x5440, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3f54, gbc.sp());
        EXPECT(0x5442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02C2
        gbc.setState(0xb366, 0x4db7, 0xbaf0, 0xf756, 0x85a7, 0x2c72, 0x0, 0x1);
        gbc.writeMem(0xb366, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4db7, gbc.sp());
        EXPECT(0xb368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb366));
        EXPECT(0xb3, gbc.readMem(0xb367));
        // CB B3 02C3
        gbc.setState(0xe549, 0x5189, 0x6270, 0x4a98, 0xc316, 0x3602, 0x1, 0x1);
        gbc.writeMem(0xe549, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5189, gbc.sp());
        EXPECT(0xe54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe549));
        EXPECT(0xb3, gbc.readMem(0xe54a));
        // CB B3 02C4
        gbc.setState(0x4e43, 0x6b01, 0xd4c0, 0xe92d, 0x822e, 0xdeb6, 0x1, 0x0);
        gbc.writeMem(0x4e43, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6b01, gbc.sp());
        EXPECT(0x4e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02C5
        gbc.setState(0x83f2, 0x3a62, 0x2510, 0x5615, 0xafff, 0x87a7, 0x1, 0x1);
        gbc.writeMem(0x83f2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3a62, gbc.sp());
        EXPECT(0x83f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f2));
        EXPECT(0xb3, gbc.readMem(0x83f3));
        // CB B3 02C6
        gbc.setState(0xe499, 0xf904, 0x8390, 0x66d7, 0xf31c, 0x439b, 0x0, 0x0);
        gbc.writeMem(0xe499, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf904, gbc.sp());
        EXPECT(0xe49b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe499));
        EXPECT(0xb3, gbc.readMem(0xe49a));
        // CB B3 02C7
        gbc.setState(0xe8cd, 0xa80c, 0xac0, 0xd15f, 0x31a3, 0x4b57, 0x1, 0x0);
        gbc.writeMem(0xe8cd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa80c, gbc.sp());
        EXPECT(0xe8cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cd));
        EXPECT(0xb3, gbc.readMem(0xe8ce));
        // CB B3 02C8
        gbc.setState(0x6537, 0xd963, 0x8130, 0x844a, 0x35e9, 0xc1f7, 0x0, 0x0);
        gbc.writeMem(0x6537, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd963, gbc.sp());
        EXPECT(0x6539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02C9
        gbc.setState(0xbd33, 0xb098, 0x7160, 0x8de9, 0x211c, 0xf6ce, 0x0, 0x0);
        gbc.writeMem(0xbd33, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb098, gbc.sp());
        EXPECT(0xbd35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd33));
        EXPECT(0xb3, gbc.readMem(0xbd34));
        // CB B3 02CB
        gbc.setState(0x7add, 0xd0a5, 0xa350, 0x8995, 0x9290, 0xba30, 0x0, 0x0);
        gbc.writeMem(0x7add, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd0a5, gbc.sp());
        EXPECT(0x7adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02CC
        gbc.setState(0x41f0, 0x38f3, 0x82e0, 0xb2c0, 0xb925, 0x2e17, 0x0, 0x1);
        gbc.writeMem(0x41f0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x38f3, gbc.sp());
        EXPECT(0x41f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02CF
        gbc.setState(0x4012, 0x8f41, 0x9950, 0xad5d, 0x3360, 0xbb22, 0x0, 0x0);
        gbc.writeMem(0x4012, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8f41, gbc.sp());
        EXPECT(0x4014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02D0
        gbc.setState(0x6fb8, 0xd2f3, 0x4470, 0x8106, 0x6095, 0x7f95, 0x0, 0x0);
        gbc.writeMem(0x6fb8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd2f3, gbc.sp());
        EXPECT(0x6fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02D1
        gbc.setState(0xb22b, 0xfcd2, 0x2240, 0xc46b, 0x61c4, 0x8602, 0x1, 0x1);
        gbc.writeMem(0xb22b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfcd2, gbc.sp());
        EXPECT(0xb22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22b));
        EXPECT(0xb3, gbc.readMem(0xb22c));
        // CB B3 02D3
        gbc.setState(0x7c72, 0x4f6d, 0x74f0, 0x3fce, 0xaab1, 0x3ae1, 0x0, 0x0);
        gbc.writeMem(0x7c72, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4f6d, gbc.sp());
        EXPECT(0x7c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02D4
        gbc.setState(0x67f9, 0xa060, 0xbef0, 0x4297, 0x8a84, 0xd3ff, 0x0, 0x1);
        gbc.writeMem(0x67f9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa060, gbc.sp());
        EXPECT(0x67fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02D5
        gbc.setState(0xd572, 0x7f5f, 0xea00, 0x92df, 0xb116, 0x885d, 0x0, 0x0);
        gbc.writeMem(0xd572, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7f5f, gbc.sp());
        EXPECT(0xd574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd572));
        EXPECT(0xb3, gbc.readMem(0xd573));
        // CB B3 02D6
        gbc.setState(0x57f2, 0x2bfb, 0x8a50, 0xbc9, 0xac5, 0xbd1d, 0x0, 0x1);
        gbc.writeMem(0x57f2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2bfb, gbc.sp());
        EXPECT(0x57f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02D7
        gbc.setState(0x1ce2, 0xfcfe, 0x7450, 0x7ee1, 0x8104, 0x942f, 0x0, 0x0);
        gbc.writeMem(0x1ce2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfcfe, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02D8
        gbc.setState(0x76ec, 0x32d2, 0x7e90, 0xa73b, 0xb124, 0xcb7a, 0x0, 0x1);
        gbc.writeMem(0x76ec, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x32d2, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02D9
        gbc.setState(0xea38, 0x3fcc, 0x96e0, 0xd751, 0x86b6, 0xf92f, 0x0, 0x1);
        gbc.writeMem(0xea38, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3fcc, gbc.sp());
        EXPECT(0xea3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea38));
        EXPECT(0xb3, gbc.readMem(0xea39));
        // CB B3 02DA
        gbc.setState(0x7bd, 0xb705, 0x8800, 0x775b, 0xa320, 0x19d2, 0x1, 0x0);
        gbc.writeMem(0x7bd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb705, gbc.sp());
        EXPECT(0x7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02DB
        gbc.setState(0x63af, 0xedd8, 0xd850, 0x2bed, 0x161, 0xaf38, 0x1, 0x1);
        gbc.writeMem(0x63af, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xedd8, gbc.sp());
        EXPECT(0x63b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02DC
        gbc.setState(0x247, 0x82a0, 0x4df0, 0x5732, 0xf01, 0x8aae, 0x0, 0x1);
        gbc.writeMem(0x247, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x82a0, gbc.sp());
        EXPECT(0x249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02DD
        gbc.setState(0xdfd3, 0xcfb, 0xc600, 0x4af2, 0x686c, 0x6bdb, 0x1, 0x1);
        gbc.writeMem(0xdfd3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcfb, gbc.sp());
        EXPECT(0xdfd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd3));
        EXPECT(0xb3, gbc.readMem(0xdfd4));
        // CB B3 02DE
        gbc.setState(0x9fa5, 0x9870, 0x7740, 0xa434, 0x9730, 0x60a0, 0x1, 0x0);
        gbc.writeMem(0x9fa5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9870, gbc.sp());
        EXPECT(0x9fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa5));
        EXPECT(0xb3, gbc.readMem(0x9fa6));
        // CB B3 02DF
        gbc.setState(0xa924, 0x3a0a, 0x74a0, 0x82d, 0xe83e, 0x3cfb, 0x0, 0x1);
        gbc.writeMem(0xa924, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3a0a, gbc.sp());
        EXPECT(0xa926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa924));
        EXPECT(0xb3, gbc.readMem(0xa925));
        // CB B3 02E0
        gbc.setState(0x4bfc, 0x26df, 0xced0, 0x212f, 0x4b70, 0xa6f7, 0x0, 0x0);
        gbc.writeMem(0x4bfc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x26df, gbc.sp());
        EXPECT(0x4bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02E1
        gbc.setState(0x8cc8, 0xda59, 0x80d0, 0x5a15, 0x5c6b, 0xa589, 0x0, 0x0);
        gbc.writeMem(0x8cc8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xda59, gbc.sp());
        EXPECT(0x8cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc8));
        EXPECT(0xb3, gbc.readMem(0x8cc9));
        // CB B3 02E2
        gbc.setState(0x6add, 0xc0d4, 0x8690, 0x2ea8, 0x741, 0xb4ce, 0x0, 0x0);
        gbc.writeMem(0x6add, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc0d4, gbc.sp());
        EXPECT(0x6adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02E3
        gbc.setState(0xabc1, 0x6bfa, 0x14f0, 0x2bd6, 0xe4bd, 0xf95b, 0x0, 0x0);
        gbc.writeMem(0xabc1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6bfa, gbc.sp());
        EXPECT(0xabc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc1));
        EXPECT(0xb3, gbc.readMem(0xabc2));
        // CB B3 02E4
        gbc.setState(0x2337, 0xa301, 0xb890, 0x25b8, 0xc8c1, 0x64d0, 0x0, 0x1);
        gbc.writeMem(0x2337, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa301, gbc.sp());
        EXPECT(0x2339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02E5
        gbc.setState(0xaf62, 0x143e, 0xe7b0, 0x54df, 0xf2de, 0x3018, 0x0, 0x0);
        gbc.writeMem(0xaf62, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x143e, gbc.sp());
        EXPECT(0xaf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf62));
        EXPECT(0xb3, gbc.readMem(0xaf63));
        // CB B3 02E6
        gbc.setState(0xbed0, 0x3235, 0x38d0, 0x82d6, 0x49b, 0x1bc4, 0x0, 0x0);
        gbc.writeMem(0xbed0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3235, gbc.sp());
        EXPECT(0xbed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed0));
        EXPECT(0xb3, gbc.readMem(0xbed1));
        // CB B3 02E7
        gbc.setState(0xbdf9, 0x44e3, 0xb440, 0xaa6a, 0x211d, 0x4c0d, 0x0, 0x0);
        gbc.writeMem(0xbdf9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x44e3, gbc.sp());
        EXPECT(0xbdfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf9));
        EXPECT(0xb3, gbc.readMem(0xbdfa));
        // CB B3 02E8
        gbc.setState(0xdfde, 0x971f, 0x7ba0, 0x9e8d, 0xb068, 0xea44, 0x0, 0x0);
        gbc.writeMem(0xdfde, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x971f, gbc.sp());
        EXPECT(0xdfe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfde));
        EXPECT(0xb3, gbc.readMem(0xdfdf));
        // CB B3 02E9
        gbc.setState(0x4b83, 0xc67f, 0xa6a0, 0x22fa, 0xf59c, 0xefec, 0x1, 0x1);
        gbc.writeMem(0x4b83, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc67f, gbc.sp());
        EXPECT(0x4b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02EA
        gbc.setState(0x3875, 0x6a3f, 0xa700, 0x37d8, 0x33a, 0xabf, 0x0, 0x1);
        gbc.writeMem(0x3875, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6a3f, gbc.sp());
        EXPECT(0x3877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02EB
        gbc.setState(0xb98, 0x8835, 0xd0a0, 0x95bb, 0x9910, 0xfec5, 0x1, 0x0);
        gbc.writeMem(0xb98, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8835, gbc.sp());
        EXPECT(0xb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02EC
        gbc.setState(0x6835, 0x2069, 0x6500, 0xfeb7, 0xaa7a, 0x3975, 0x0, 0x0);
        gbc.writeMem(0x6835, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2069, gbc.sp());
        EXPECT(0x6837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02ED
        gbc.setState(0xb954, 0xd2d7, 0xcf50, 0x81d3, 0xebf4, 0xc8e0, 0x0, 0x1);
        gbc.writeMem(0xb954, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd2d7, gbc.sp());
        EXPECT(0xb956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb954));
        EXPECT(0xb3, gbc.readMem(0xb955));
        // CB B3 02EE
        gbc.setState(0x2fed, 0x2b96, 0x95d0, 0xf91d, 0x98e0, 0xda62, 0x1, 0x0);
        gbc.writeMem(0x2fed, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2b96, gbc.sp());
        EXPECT(0x2fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02EF
        gbc.setState(0x49c4, 0x531d, 0x7710, 0xa6ff, 0x48a0, 0xf3e5, 0x0, 0x1);
        gbc.writeMem(0x49c4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x531d, gbc.sp());
        EXPECT(0x49c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02F0
        gbc.setState(0xd928, 0xadef, 0x7ac0, 0x6c49, 0xbbbc, 0xade3, 0x1, 0x1);
        gbc.writeMem(0xd928, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xadef, gbc.sp());
        EXPECT(0xd92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd928));
        EXPECT(0xb3, gbc.readMem(0xd929));
        // CB B3 02F1
        gbc.setState(0x97cf, 0x3c3a, 0x8d20, 0x0, 0x6051, 0xae9c, 0x1, 0x0);
        gbc.writeMem(0x97cf, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3c3a, gbc.sp());
        EXPECT(0x97d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cf));
        EXPECT(0xb3, gbc.readMem(0x97d0));
        // CB B3 02F2
        gbc.setState(0x11de, 0xb497, 0xf120, 0x803b, 0x1029, 0xa04, 0x1, 0x1);
        gbc.writeMem(0x11de, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb497, gbc.sp());
        EXPECT(0x11e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02F3
        gbc.setState(0xe481, 0x68bf, 0xbdd0, 0xdc0d, 0x4d3, 0xa496, 0x0, 0x0);
        gbc.writeMem(0xe481, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x68bf, gbc.sp());
        EXPECT(0xe483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe481));
        EXPECT(0xb3, gbc.readMem(0xe482));
        // CB B3 02F4
        gbc.setState(0xbc97, 0xaed1, 0x7500, 0xe0c4, 0x3ba, 0x4334, 0x1, 0x0);
        gbc.writeMem(0xbc97, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaed1, gbc.sp());
        EXPECT(0xbc99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc97));
        EXPECT(0xb3, gbc.readMem(0xbc98));
        // CB B3 02F5
        gbc.setState(0x2906, 0x2e06, 0x41c0, 0xe8c4, 0x27c8, 0x84f3, 0x0, 0x1);
        gbc.writeMem(0x2906, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2e06, gbc.sp());
        EXPECT(0x2908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 02F6
        gbc.setState(0x8f19, 0x3343, 0x3f50, 0x2862, 0x64f0, 0xa82c, 0x1, 0x1);
        gbc.writeMem(0x8f19, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3343, gbc.sp());
        EXPECT(0x8f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f19));
        EXPECT(0xb3, gbc.readMem(0x8f1a));
        // CB B3 02F7
        gbc.setState(0x8cac, 0x4d6, 0x5860, 0xc7f7, 0xaaca, 0x714a, 0x0, 0x0);
        gbc.writeMem(0x8cac, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4d6, gbc.sp());
        EXPECT(0x8cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cac));
        EXPECT(0xb3, gbc.readMem(0x8cad));
        // CB B3 02F8
        gbc.setState(0xb674, 0x27b8, 0xd8f0, 0xa2ec, 0xc04a, 0xcdbd, 0x0, 0x0);
        gbc.writeMem(0xb674, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x27b8, gbc.sp());
        EXPECT(0xb676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb674));
        EXPECT(0xb3, gbc.readMem(0xb675));
        // CB B3 02F9
        gbc.setState(0x132, 0xcd0b, 0x1130, 0x7ee7, 0x70b9, 0x82d7, 0x1, 0x1);
        gbc.writeMem(0x132, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcd0b, gbc.sp());
        EXPECT(0x134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02FA
        gbc.setState(0x191d, 0x5286, 0x8b70, 0x417, 0xa228, 0x22b6, 0x0, 0x1);
        gbc.writeMem(0x191d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5286, gbc.sp());
        EXPECT(0x191f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02FB
        gbc.setState(0x7bb, 0x5e6a, 0x3850, 0x740, 0xe0c0, 0xf234, 0x0, 0x0);
        gbc.writeMem(0x7bb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5e6a, gbc.sp());
        EXPECT(0x7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02FC
        gbc.setState(0x13c1, 0x866a, 0x20f0, 0x761, 0x34ef, 0xb7e9, 0x0, 0x1);
        gbc.writeMem(0x13c1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x866a, gbc.sp());
        EXPECT(0x13c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02FD
        gbc.setState(0x1ff2, 0x62d9, 0x36d0, 0x6a23, 0xb075, 0x646d, 0x0, 0x0);
        gbc.writeMem(0x1ff2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x62d9, gbc.sp());
        EXPECT(0x1ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 02FF
        gbc.setState(0x22fb, 0xdc17, 0xfe60, 0xea4d, 0x1fe3, 0x3731, 0x1, 0x1);
        gbc.writeMem(0x22fb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdc17, gbc.sp());
        EXPECT(0x22fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0300
        gbc.setState(0x4270, 0x6b6, 0x9af0, 0xe264, 0xe0d2, 0x79e, 0x1, 0x0);
        gbc.writeMem(0x4270, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6b6, gbc.sp());
        EXPECT(0x4272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0301
        gbc.setState(0xc64d, 0x547b, 0x5e80, 0xabe3, 0x26aa, 0xc5c2, 0x1, 0x1);
        gbc.writeMem(0xc64d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x547b, gbc.sp());
        EXPECT(0xc64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64d));
        EXPECT(0xb3, gbc.readMem(0xc64e));
        // CB B3 0304
        gbc.setState(0x6241, 0xcf59, 0xa130, 0x809, 0xeac4, 0xa0d1, 0x0, 0x1);
        gbc.writeMem(0x6241, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcf59, gbc.sp());
        EXPECT(0x6243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0305
        gbc.setState(0x68f0, 0xb51e, 0x38c0, 0x109, 0x688e, 0xe80e, 0x1, 0x0);
        gbc.writeMem(0x68f0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb51e, gbc.sp());
        EXPECT(0x68f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0306
        gbc.setState(0x4f7f, 0x5c6c, 0x5b30, 0xf0b, 0xd817, 0x3169, 0x1, 0x0);
        gbc.writeMem(0x4f7f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5c6c, gbc.sp());
        EXPECT(0x4f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0307
        gbc.setState(0x6160, 0x1128, 0xd50, 0x8740, 0xb815, 0xb76d, 0x0, 0x0);
        gbc.writeMem(0x6160, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1128, gbc.sp());
        EXPECT(0x6162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0308
        gbc.setState(0x73e3, 0xf5c4, 0xd6f0, 0xbc6d, 0xf308, 0x257d, 0x1, 0x0);
        gbc.writeMem(0x73e3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf5c4, gbc.sp());
        EXPECT(0x73e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0309
        gbc.setState(0x27f3, 0x3e5f, 0xb360, 0xb436, 0x511, 0x2567, 0x1, 0x0);
        gbc.writeMem(0x27f3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3e5f, gbc.sp());
        EXPECT(0x27f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 030A
        gbc.setState(0x37ef, 0x2aa, 0x60c0, 0x4eb7, 0x9e44, 0xc214, 0x0, 0x0);
        gbc.writeMem(0x37ef, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2aa, gbc.sp());
        EXPECT(0x37f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 030B
        gbc.setState(0x1269, 0xf797, 0xded0, 0x4af6, 0x1f26, 0x5b16, 0x1, 0x1);
        gbc.writeMem(0x1269, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf797, gbc.sp());
        EXPECT(0x126b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 030C
        gbc.setState(0x92a9, 0x7459, 0x66b0, 0xb773, 0xc66e, 0xe212, 0x0, 0x0);
        gbc.writeMem(0x92a9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7459, gbc.sp());
        EXPECT(0x92ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a9));
        EXPECT(0xb3, gbc.readMem(0x92aa));
        // CB B3 030D
        gbc.setState(0x6e38, 0xfa20, 0x2ac0, 0x5190, 0xaad2, 0x1dd3, 0x1, 0x0);
        gbc.writeMem(0x6e38, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfa20, gbc.sp());
        EXPECT(0x6e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 030E
        gbc.setState(0xccde, 0x5971, 0xe6f0, 0x411a, 0x2ab5, 0xd54a, 0x0, 0x1);
        gbc.writeMem(0xccde, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5971, gbc.sp());
        EXPECT(0xcce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccde));
        EXPECT(0xb3, gbc.readMem(0xccdf));
        // CB B3 030F
        gbc.setState(0x6543, 0xcb07, 0xaf40, 0xc24e, 0xe728, 0x6a99, 0x0, 0x1);
        gbc.writeMem(0x6543, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcb07, gbc.sp());
        EXPECT(0x6545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0310
        gbc.setState(0x6788, 0x442c, 0x9270, 0x1b4c, 0x6c32, 0xbff0, 0x0, 0x1);
        gbc.writeMem(0x6788, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x442c, gbc.sp());
        EXPECT(0x678a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0311
        gbc.setState(0x2a3f, 0x77d4, 0xd730, 0x4f62, 0xc619, 0xebb4, 0x0, 0x1);
        gbc.writeMem(0x2a3f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x77d4, gbc.sp());
        EXPECT(0x2a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0312
        gbc.setState(0x793b, 0xaa6, 0xe360, 0xf5fb, 0x5bf0, 0xf1d6, 0x0, 0x1);
        gbc.writeMem(0x793b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xaa6, gbc.sp());
        EXPECT(0x793d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0313
        gbc.setState(0x9630, 0xdce0, 0xa090, 0x673f, 0x12b7, 0xc6d2, 0x1, 0x0);
        gbc.writeMem(0x9630, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdce0, gbc.sp());
        EXPECT(0x9632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9630));
        EXPECT(0xb3, gbc.readMem(0x9631));
        // CB B3 0314
        gbc.setState(0x73e5, 0xbc15, 0xae00, 0x9c9d, 0xc009, 0xd3c6, 0x0, 0x1);
        gbc.writeMem(0x73e5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbc15, gbc.sp());
        EXPECT(0x73e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0315
        gbc.setState(0x23da, 0xa75a, 0xaea0, 0x51cc, 0x6f70, 0x26dd, 0x1, 0x0);
        gbc.writeMem(0x23da, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa75a, gbc.sp());
        EXPECT(0x23dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0316
        gbc.setState(0xa7a2, 0x374a, 0x8590, 0xe5df, 0x9a32, 0xb804, 0x0, 0x1);
        gbc.writeMem(0xa7a2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x374a, gbc.sp());
        EXPECT(0xa7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a2));
        EXPECT(0xb3, gbc.readMem(0xa7a3));
        // CB B3 0317
        gbc.setState(0xe36b, 0x2ce3, 0xf440, 0xca5c, 0x380, 0x198e, 0x0, 0x0);
        gbc.writeMem(0xe36b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2ce3, gbc.sp());
        EXPECT(0xe36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36b));
        EXPECT(0xb3, gbc.readMem(0xe36c));
        // CB B3 0318
        gbc.setState(0xb99d, 0xbeee, 0xe9e0, 0x7ee7, 0xc4dc, 0xc930, 0x0, 0x1);
        gbc.writeMem(0xb99d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbeee, gbc.sp());
        EXPECT(0xb99f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99d));
        EXPECT(0xb3, gbc.readMem(0xb99e));
        // CB B3 0319
        gbc.setState(0xa829, 0x63ae, 0xd0a0, 0x15d, 0x96c4, 0xa15, 0x0, 0x0);
        gbc.writeMem(0xa829, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x63ae, gbc.sp());
        EXPECT(0xa82b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa829));
        EXPECT(0xb3, gbc.readMem(0xa82a));
        // CB B3 031A
        gbc.setState(0xcc0d, 0x6282, 0x2400, 0x729f, 0x2715, 0x6d64, 0x1, 0x0);
        gbc.writeMem(0xcc0d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6282, gbc.sp());
        EXPECT(0xcc0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0d));
        EXPECT(0xb3, gbc.readMem(0xcc0e));
        // CB B3 031B
        gbc.setState(0x1950, 0xee1a, 0x7940, 0x577c, 0x2dc9, 0x4b46, 0x1, 0x0);
        gbc.writeMem(0x1950, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xee1a, gbc.sp());
        EXPECT(0x1952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 031C
        gbc.setState(0xda6c, 0x934b, 0x3d80, 0xf582, 0xf936, 0xf9c7, 0x0, 0x0);
        gbc.writeMem(0xda6c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x934b, gbc.sp());
        EXPECT(0xda6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda6c));
        EXPECT(0xb3, gbc.readMem(0xda6d));
        // CB B3 031D
        gbc.setState(0xaef8, 0xb113, 0x9f70, 0x1a62, 0x5581, 0xd7e4, 0x0, 0x1);
        gbc.writeMem(0xaef8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb113, gbc.sp());
        EXPECT(0xaefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef8));
        EXPECT(0xb3, gbc.readMem(0xaef9));
        // CB B3 031E
        gbc.setState(0x247a, 0xef37, 0x30b0, 0x2c1d, 0x413, 0xbf37, 0x1, 0x1);
        gbc.writeMem(0x247a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xef37, gbc.sp());
        EXPECT(0x247c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 031F
        gbc.setState(0xbc48, 0x9e79, 0xa950, 0x9cd4, 0xc2f3, 0xe4a3, 0x1, 0x1);
        gbc.writeMem(0xbc48, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9e79, gbc.sp());
        EXPECT(0xbc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc48));
        EXPECT(0xb3, gbc.readMem(0xbc49));
        // CB B3 0320
        gbc.setState(0x3730, 0xa985, 0xde20, 0x880d, 0x205, 0xa095, 0x1, 0x0);
        gbc.writeMem(0x3730, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa985, gbc.sp());
        EXPECT(0x3732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0321
        gbc.setState(0xdc1d, 0x45f0, 0xad10, 0xa8ab, 0xe8a2, 0xd336, 0x1, 0x1);
        gbc.writeMem(0xdc1d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x45f0, gbc.sp());
        EXPECT(0xdc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1d));
        EXPECT(0xb3, gbc.readMem(0xdc1e));
        // CB B3 0322
        gbc.setState(0x3bf6, 0x8b11, 0x94b0, 0x5df8, 0xa71f, 0xc2da, 0x1, 0x1);
        gbc.writeMem(0x3bf6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8b11, gbc.sp());
        EXPECT(0x3bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0323
        gbc.setState(0xbe94, 0xfb1e, 0x6f00, 0xa7c7, 0x7fd, 0x8b34, 0x1, 0x0);
        gbc.writeMem(0xbe94, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfb1e, gbc.sp());
        EXPECT(0xbe96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe94));
        EXPECT(0xb3, gbc.readMem(0xbe95));
        // CB B3 0324
        gbc.setState(0x2076, 0x4ccc, 0xf5f0, 0xdc7f, 0x8762, 0x12c, 0x0, 0x0);
        gbc.writeMem(0x2076, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4ccc, gbc.sp());
        EXPECT(0x2078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0325
        gbc.setState(0x5adc, 0x2939, 0x7960, 0xf6dc, 0x3df4, 0x75d2, 0x0, 0x1);
        gbc.writeMem(0x5adc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2939, gbc.sp());
        EXPECT(0x5ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0326
        gbc.setState(0x3fce, 0x85fc, 0xd470, 0xeb6f, 0x9b09, 0xea71, 0x0, 0x1);
        gbc.writeMem(0x3fce, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x85fc, gbc.sp());
        EXPECT(0x3fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0327
        gbc.setState(0xd9d3, 0x3076, 0x1960, 0x345, 0x67c7, 0x9bc, 0x1, 0x0);
        gbc.writeMem(0xd9d3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3076, gbc.sp());
        EXPECT(0xd9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d3));
        EXPECT(0xb3, gbc.readMem(0xd9d4));
        // CB B3 0328
        gbc.setState(0x6496, 0x599a, 0xf230, 0xe1ad, 0x3a62, 0x37bb, 0x0, 0x1);
        gbc.writeMem(0x6496, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x599a, gbc.sp());
        EXPECT(0x6498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 032B
        gbc.setState(0x4923, 0x67f6, 0x5fb0, 0x63e6, 0xe801, 0xb81f, 0x1, 0x1);
        gbc.writeMem(0x4923, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x67f6, gbc.sp());
        EXPECT(0x4925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 032C
        gbc.setState(0x6e3c, 0x758c, 0xb1c0, 0xd46b, 0xbeac, 0xa1f3, 0x0, 0x0);
        gbc.writeMem(0x6e3c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x758c, gbc.sp());
        EXPECT(0x6e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 032D
        gbc.setState(0xd0d0, 0x9ac4, 0xc8a0, 0x6416, 0xb4f, 0xc6e3, 0x1, 0x0);
        gbc.writeMem(0xd0d0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9ac4, gbc.sp());
        EXPECT(0xd0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d0));
        EXPECT(0xb3, gbc.readMem(0xd0d1));
        // CB B3 032E
        gbc.setState(0xef42, 0xc250, 0x9b40, 0x1462, 0x3486, 0x233a, 0x1, 0x0);
        gbc.writeMem(0xef42, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc250, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef42));
        EXPECT(0xb3, gbc.readMem(0xef43));
        // CB B3 032F
        gbc.setState(0x1e64, 0xfc4a, 0xa9c0, 0x2999, 0x3129, 0xcd70, 0x0, 0x0);
        gbc.writeMem(0x1e64, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfc4a, gbc.sp());
        EXPECT(0x1e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0330
        gbc.setState(0x1680, 0x7f54, 0xcdd0, 0xd18b, 0xe85c, 0xbd8c, 0x1, 0x0);
        gbc.writeMem(0x1680, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x1682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0331
        gbc.setState(0xa1f5, 0xf5bf, 0x5530, 0xa31b, 0x41ac, 0x539f, 0x0, 0x1);
        gbc.writeMem(0xa1f5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf5bf, gbc.sp());
        EXPECT(0xa1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f5));
        EXPECT(0xb3, gbc.readMem(0xa1f6));
        // CB B3 0332
        gbc.setState(0x1b28, 0xf536, 0x9820, 0xf32b, 0x9009, 0xf65a, 0x0, 0x0);
        gbc.writeMem(0x1b28, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf536, gbc.sp());
        EXPECT(0x1b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0333
        gbc.setState(0x726e, 0x5102, 0x3510, 0x5b25, 0xc21a, 0xb4ef, 0x0, 0x1);
        gbc.writeMem(0x726e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5102, gbc.sp());
        EXPECT(0x7270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0334
        gbc.setState(0x4e29, 0xa488, 0x8040, 0xd6a8, 0xf495, 0x1f18, 0x1, 0x0);
        gbc.writeMem(0x4e29, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa488, gbc.sp());
        EXPECT(0x4e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0335
        gbc.setState(0xd94d, 0x4cea, 0xcf20, 0xf891, 0x99, 0x2c0c, 0x0, 0x0);
        gbc.writeMem(0xd94d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4cea, gbc.sp());
        EXPECT(0xd94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94d));
        EXPECT(0xb3, gbc.readMem(0xd94e));
        // CB B3 0336
        gbc.setState(0x15e2, 0xc5cc, 0x660, 0xe2ca, 0xb95a, 0xaf6b, 0x1, 0x1);
        gbc.writeMem(0x15e2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc5cc, gbc.sp());
        EXPECT(0x15e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0337
        gbc.setState(0xabf6, 0x3292, 0xb0c0, 0xd388, 0x8e0b, 0x7889, 0x1, 0x0);
        gbc.writeMem(0xabf6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3292, gbc.sp());
        EXPECT(0xabf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf6));
        EXPECT(0xb3, gbc.readMem(0xabf7));
        // CB B3 0338
        gbc.setState(0x531c, 0x6c1c, 0xc630, 0xca64, 0x536e, 0xc7b5, 0x0, 0x1);
        gbc.writeMem(0x531c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6c1c, gbc.sp());
        EXPECT(0x531e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0339
        gbc.setState(0xca92, 0x5726, 0xe870, 0xb8ec, 0x985, 0x320f, 0x1, 0x1);
        gbc.writeMem(0xca92, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5726, gbc.sp());
        EXPECT(0xca94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca92));
        EXPECT(0xb3, gbc.readMem(0xca93));
        // CB B3 033A
        gbc.setState(0x8412, 0xc8a0, 0x9030, 0x9ffa, 0x3a9b, 0xd3a0, 0x0, 0x0);
        gbc.writeMem(0x8412, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc8a0, gbc.sp());
        EXPECT(0x8414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8412));
        EXPECT(0xb3, gbc.readMem(0x8413));
        // CB B3 033B
        gbc.setState(0x1e7e, 0x6ce9, 0xe00, 0x29b2, 0x55a7, 0x6321, 0x0, 0x0);
        gbc.writeMem(0x1e7e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6ce9, gbc.sp());
        EXPECT(0x1e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 033C
        gbc.setState(0x1eb5, 0x4188, 0x890, 0x20d5, 0x1a6d, 0xe10f, 0x1, 0x0);
        gbc.writeMem(0x1eb5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4188, gbc.sp());
        EXPECT(0x1eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 033D
        gbc.setState(0xc097, 0x116e, 0x29f0, 0x9ad, 0xb24d, 0xf4e6, 0x0, 0x0);
        gbc.writeMem(0xc097, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x116e, gbc.sp());
        EXPECT(0xc099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc097));
        EXPECT(0xb3, gbc.readMem(0xc098));
        // CB B3 033E
        gbc.setState(0x907, 0x7a02, 0xe390, 0xf81e, 0xdbf4, 0xb71, 0x1, 0x1);
        gbc.writeMem(0x907, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7a02, gbc.sp());
        EXPECT(0x909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 033F
        gbc.setState(0xd892, 0x8bbf, 0xebe0, 0xd947, 0x68e9, 0x919a, 0x1, 0x1);
        gbc.writeMem(0xd892, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8bbf, gbc.sp());
        EXPECT(0xd894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd892));
        EXPECT(0xb3, gbc.readMem(0xd893));
        // CB B3 0340
        gbc.setState(0x4a18, 0x18e4, 0xbe80, 0x16fe, 0x8b8a, 0x1c20, 0x0, 0x1);
        gbc.writeMem(0x4a18, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x18e4, gbc.sp());
        EXPECT(0x4a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0341
        gbc.setState(0xed76, 0xcfcb, 0x7ef0, 0x1fb6, 0x1918, 0xbd28, 0x1, 0x1);
        gbc.writeMem(0xed76, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcfcb, gbc.sp());
        EXPECT(0xed78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed76));
        EXPECT(0xb3, gbc.readMem(0xed77));
        // CB B3 0342
        gbc.setState(0x2f8b, 0x4ef7, 0x3190, 0xa73e, 0x6ddf, 0x53e9, 0x0, 0x0);
        gbc.writeMem(0x2f8b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4ef7, gbc.sp());
        EXPECT(0x2f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0343
        gbc.setState(0xb23d, 0xe70e, 0xa080, 0x13e7, 0xf599, 0x567f, 0x0, 0x0);
        gbc.writeMem(0xb23d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe70e, gbc.sp());
        EXPECT(0xb23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb23d));
        EXPECT(0xb3, gbc.readMem(0xb23e));
        // CB B3 0344
        gbc.setState(0xcc12, 0x5b2e, 0xaa50, 0x4f7a, 0xf43f, 0xc994, 0x1, 0x0);
        gbc.writeMem(0xcc12, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5b2e, gbc.sp());
        EXPECT(0xcc14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc12));
        EXPECT(0xb3, gbc.readMem(0xcc13));
        // CB B3 0345
        gbc.setState(0xb2e1, 0xe43c, 0x6970, 0xbd0, 0x6d82, 0x6b12, 0x0, 0x0);
        gbc.writeMem(0xb2e1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe43c, gbc.sp());
        EXPECT(0xb2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e1));
        EXPECT(0xb3, gbc.readMem(0xb2e2));
        // CB B3 0346
        gbc.setState(0x3cc5, 0x2293, 0x1df0, 0x84ea, 0x565d, 0x6544, 0x1, 0x0);
        gbc.writeMem(0x3cc5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2293, gbc.sp());
        EXPECT(0x3cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0347
        gbc.setState(0xec, 0x159a, 0x1ce0, 0xd563, 0x40ba, 0xf51e, 0x0, 0x0);
        gbc.writeMem(0xec, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0xee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0348
        gbc.setState(0x5413, 0xe683, 0x6820, 0x1c01, 0xdd0d, 0xede3, 0x0, 0x0);
        gbc.writeMem(0x5413, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe683, gbc.sp());
        EXPECT(0x5415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0349
        gbc.setState(0x25, 0x81f0, 0xf0d0, 0x1cab, 0xfd2d, 0xc578, 0x0, 0x1);
        gbc.writeMem(0x25, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x81f0, gbc.sp());
        EXPECT(0x27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 034A
        gbc.setState(0x8092, 0x8d42, 0x69e0, 0xf0ec, 0x7acf, 0x3e76, 0x1, 0x0);
        gbc.writeMem(0x8092, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8d42, gbc.sp());
        EXPECT(0x8094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8092));
        EXPECT(0xb3, gbc.readMem(0x8093));
        // CB B3 034C
        gbc.setState(0x7a71, 0xf8d6, 0x2d80, 0x11e, 0x42bd, 0x3723, 0x1, 0x1);
        gbc.writeMem(0x7a71, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf8d6, gbc.sp());
        EXPECT(0x7a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 034D
        gbc.setState(0xa71c, 0x382c, 0x1f00, 0xd524, 0xf035, 0x8e39, 0x0, 0x0);
        gbc.writeMem(0xa71c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x382c, gbc.sp());
        EXPECT(0xa71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa71c));
        EXPECT(0xb3, gbc.readMem(0xa71d));
        // CB B3 034E
        gbc.setState(0xe73, 0x7112, 0x9840, 0xe05f, 0x6ec5, 0xfe71, 0x1, 0x0);
        gbc.writeMem(0xe73, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7112, gbc.sp());
        EXPECT(0xe75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 034F
        gbc.setState(0xcc4, 0xd41, 0xbcb0, 0x5e21, 0x1e8f, 0xc3dd, 0x1, 0x1);
        gbc.writeMem(0xcc4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd41, gbc.sp());
        EXPECT(0xcc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0350
        gbc.setState(0x6aae, 0x70bc, 0xda60, 0x19cc, 0x6533, 0xe680, 0x1, 0x1);
        gbc.writeMem(0x6aae, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x70bc, gbc.sp());
        EXPECT(0x6ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0351
        gbc.setState(0x7cec, 0x8185, 0xff60, 0xee7, 0x64b, 0x7239, 0x0, 0x1);
        gbc.writeMem(0x7cec, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8185, gbc.sp());
        EXPECT(0x7cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0353
        gbc.setState(0xdf96, 0x9513, 0xc8a0, 0xe823, 0xe47a, 0xe177, 0x0, 0x0);
        gbc.writeMem(0xdf96, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9513, gbc.sp());
        EXPECT(0xdf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf96));
        EXPECT(0xb3, gbc.readMem(0xdf97));
        // CB B3 0354
        gbc.setState(0xbbea, 0x23ce, 0x58a0, 0xd130, 0xcbab, 0xadc0, 0x0, 0x1);
        gbc.writeMem(0xbbea, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x23ce, gbc.sp());
        EXPECT(0xbbec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbea));
        EXPECT(0xb3, gbc.readMem(0xbbeb));
        // CB B3 0355
        gbc.setState(0xb952, 0x906a, 0xf860, 0xd401, 0x835b, 0xf502, 0x1, 0x0);
        gbc.writeMem(0xb952, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x906a, gbc.sp());
        EXPECT(0xb954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb952));
        EXPECT(0xb3, gbc.readMem(0xb953));
        // CB B3 0356
        gbc.setState(0xe54c, 0xe974, 0x10a0, 0x199b, 0xdf80, 0x32, 0x1, 0x0);
        gbc.writeMem(0xe54c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe974, gbc.sp());
        EXPECT(0xe54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54c));
        EXPECT(0xb3, gbc.readMem(0xe54d));
        // CB B3 0357
        gbc.setState(0xa791, 0xa685, 0x5f40, 0x93aa, 0x10de, 0xd305, 0x1, 0x0);
        gbc.writeMem(0xa791, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa685, gbc.sp());
        EXPECT(0xa793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa791));
        EXPECT(0xb3, gbc.readMem(0xa792));
        // CB B3 0358
        gbc.setState(0xe078, 0x7622, 0x6880, 0x7c5f, 0xc7b7, 0xa856, 0x1, 0x1);
        gbc.writeMem(0xe078, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7622, gbc.sp());
        EXPECT(0xe07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe078));
        EXPECT(0xb3, gbc.readMem(0xe079));
        // CB B3 0359
        gbc.setState(0xd67e, 0x3d87, 0x3090, 0x5838, 0x5b4b, 0x494a, 0x0, 0x1);
        gbc.writeMem(0xd67e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3d87, gbc.sp());
        EXPECT(0xd680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67e));
        EXPECT(0xb3, gbc.readMem(0xd67f));
        // CB B3 035A
        gbc.setState(0x12ce, 0x9b33, 0xec70, 0x5df7, 0xd0c7, 0x4ea1, 0x0, 0x1);
        gbc.writeMem(0x12ce, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9b33, gbc.sp());
        EXPECT(0x12d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 035B
        gbc.setState(0x8a2c, 0xb260, 0x72f0, 0x387f, 0xb1ef, 0xdb96, 0x1, 0x1);
        gbc.writeMem(0x8a2c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb260, gbc.sp());
        EXPECT(0x8a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2c));
        EXPECT(0xb3, gbc.readMem(0x8a2d));
        // CB B3 035C
        gbc.setState(0xac98, 0x37bc, 0x5bc0, 0x9bc2, 0xcbea, 0x37f7, 0x0, 0x1);
        gbc.writeMem(0xac98, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x37bc, gbc.sp());
        EXPECT(0xac9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac98));
        EXPECT(0xb3, gbc.readMem(0xac99));
        // CB B3 035E
        gbc.setState(0xde92, 0xdceb, 0xe150, 0x6ae4, 0x32e9, 0xf2f4, 0x1, 0x0);
        gbc.writeMem(0xde92, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdceb, gbc.sp());
        EXPECT(0xde94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde92));
        EXPECT(0xb3, gbc.readMem(0xde93));
        // CB B3 035F
        gbc.setState(0x8d47, 0x81ed, 0x20e0, 0xa9d8, 0x1eb0, 0x66d0, 0x1, 0x0);
        gbc.writeMem(0x8d47, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x81ed, gbc.sp());
        EXPECT(0x8d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d47));
        EXPECT(0xb3, gbc.readMem(0x8d48));
        // CB B3 0360
        gbc.setState(0xeef9, 0xe488, 0x2c80, 0x8df5, 0x54da, 0xbb96, 0x0, 0x0);
        gbc.writeMem(0xeef9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe488, gbc.sp());
        EXPECT(0xeefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef9));
        EXPECT(0xb3, gbc.readMem(0xeefa));
        // CB B3 0361
        gbc.setState(0xc956, 0x60b, 0x7de0, 0xdf5d, 0xee2e, 0x20a8, 0x1, 0x0);
        gbc.writeMem(0xc956, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x60b, gbc.sp());
        EXPECT(0xc958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc956));
        EXPECT(0xb3, gbc.readMem(0xc957));
        // CB B3 0362
        gbc.setState(0xe54c, 0x2fdd, 0xd940, 0x2459, 0x9dba, 0x9b8b, 0x0, 0x0);
        gbc.writeMem(0xe54c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2fdd, gbc.sp());
        EXPECT(0xe54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54c));
        EXPECT(0xb3, gbc.readMem(0xe54d));
        // CB B3 0363
        gbc.setState(0x1563, 0xe06e, 0x3610, 0x78ae, 0xaed2, 0x3ed6, 0x0, 0x0);
        gbc.writeMem(0x1563, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe06e, gbc.sp());
        EXPECT(0x1565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0364
        gbc.setState(0x4f40, 0xf35b, 0x29a0, 0x78fc, 0x83b8, 0xc20b, 0x0, 0x0);
        gbc.writeMem(0x4f40, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf35b, gbc.sp());
        EXPECT(0x4f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0365
        gbc.setState(0x3824, 0xd18a, 0xcb10, 0xeae8, 0x3a3, 0x3e12, 0x1, 0x1);
        gbc.writeMem(0x3824, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd18a, gbc.sp());
        EXPECT(0x3826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0366
        gbc.setState(0xcc4, 0xf923, 0x1d40, 0x295e, 0xdf2f, 0xb63c, 0x0, 0x1);
        gbc.writeMem(0xcc4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf923, gbc.sp());
        EXPECT(0xcc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0367
        gbc.setState(0x728e, 0x1bc5, 0x28a0, 0x5c43, 0x7d22, 0x8d2b, 0x1, 0x1);
        gbc.writeMem(0x728e, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1bc5, gbc.sp());
        EXPECT(0x7290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0369
        gbc.setState(0x937f, 0x1826, 0x4d10, 0x84fc, 0xf55c, 0xf702, 0x0, 0x1);
        gbc.writeMem(0x937f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1826, gbc.sp());
        EXPECT(0x9381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937f));
        EXPECT(0xb3, gbc.readMem(0x9380));
        // CB B3 036A
        gbc.setState(0xf23, 0x613f, 0xee70, 0xa377, 0x1eb, 0x5b1e, 0x1, 0x1);
        gbc.writeMem(0xf23, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x613f, gbc.sp());
        EXPECT(0xf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 036B
        gbc.setState(0xdef8, 0xa5bc, 0x7370, 0xc9a2, 0x601b, 0xf9a1, 0x1, 0x0);
        gbc.writeMem(0xdef8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa5bc, gbc.sp());
        EXPECT(0xdefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef8));
        EXPECT(0xb3, gbc.readMem(0xdef9));
        // CB B3 036C
        gbc.setState(0x72fe, 0xa7f, 0xcd40, 0x59a7, 0xed46, 0x6f77, 0x0, 0x1);
        gbc.writeMem(0x72fe, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa7f, gbc.sp());
        EXPECT(0x7300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 036D
        gbc.setState(0xcdf6, 0xc5de, 0x5ec0, 0x79ab, 0x63d6, 0x4fa6, 0x1, 0x0);
        gbc.writeMem(0xcdf6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc5de, gbc.sp());
        EXPECT(0xcdf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf6));
        EXPECT(0xb3, gbc.readMem(0xcdf7));
        // CB B3 036E
        gbc.setState(0x8a12, 0xe3c6, 0xd4e0, 0x9374, 0x7898, 0xb718, 0x1, 0x0);
        gbc.writeMem(0x8a12, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe3c6, gbc.sp());
        EXPECT(0x8a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a12));
        EXPECT(0xb3, gbc.readMem(0x8a13));
        // CB B3 036F
        gbc.setState(0xb3ca, 0x9a0c, 0x2a20, 0x50aa, 0x3b40, 0x614c, 0x1, 0x1);
        gbc.writeMem(0xb3ca, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9a0c, gbc.sp());
        EXPECT(0xb3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ca));
        EXPECT(0xb3, gbc.readMem(0xb3cb));
        // CB B3 0370
        gbc.setState(0x5bba, 0xa960, 0xa0f0, 0xb67f, 0xc2d4, 0xcf26, 0x0, 0x0);
        gbc.writeMem(0x5bba, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa960, gbc.sp());
        EXPECT(0x5bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0371
        gbc.setState(0xeee0, 0x863f, 0x2ff0, 0xfdc7, 0xf0f0, 0xb1fe, 0x1, 0x1);
        gbc.writeMem(0xeee0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x863f, gbc.sp());
        EXPECT(0xeee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee0));
        EXPECT(0xb3, gbc.readMem(0xeee1));
        // CB B3 0373
        gbc.setState(0x9e8a, 0x7f61, 0xd3f0, 0xd305, 0x8692, 0xe470, 0x0, 0x1);
        gbc.writeMem(0x9e8a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7f61, gbc.sp());
        EXPECT(0x9e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8a));
        EXPECT(0xb3, gbc.readMem(0x9e8b));
        // CB B3 0374
        gbc.setState(0x42bc, 0x6439, 0x7c80, 0xf7fa, 0x569b, 0x3dc0, 0x1, 0x1);
        gbc.writeMem(0x42bc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6439, gbc.sp());
        EXPECT(0x42be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0375
        gbc.setState(0x2cad, 0x47d1, 0xb4f0, 0x5991, 0x3abf, 0x5048, 0x1, 0x1);
        gbc.writeMem(0x2cad, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x47d1, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0376
        gbc.setState(0xe2d, 0x9cfa, 0xc710, 0x3bc1, 0x132c, 0x2543, 0x0, 0x0);
        gbc.writeMem(0xe2d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9cfa, gbc.sp());
        EXPECT(0xe2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0378
        gbc.setState(0x4ecc, 0xb298, 0xc6b0, 0x2b3b, 0x7e75, 0xa0a6, 0x0, 0x1);
        gbc.writeMem(0x4ecc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb298, gbc.sp());
        EXPECT(0x4ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0379
        gbc.setState(0x70e7, 0x2b60, 0x23e0, 0x89eb, 0xa3c5, 0x8689, 0x0, 0x0);
        gbc.writeMem(0x70e7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2b60, gbc.sp());
        EXPECT(0x70e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 037A
        gbc.setState(0xc6c2, 0x3168, 0x8590, 0x6bf7, 0x9d76, 0x52a9, 0x0, 0x1);
        gbc.writeMem(0xc6c2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3168, gbc.sp());
        EXPECT(0xc6c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c2));
        EXPECT(0xb3, gbc.readMem(0xc6c3));
        // CB B3 037B
        gbc.setState(0x603a, 0xe1d5, 0xb860, 0x482f, 0xfc98, 0xd66d, 0x0, 0x1);
        gbc.writeMem(0x603a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe1d5, gbc.sp());
        EXPECT(0x603c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 037C
        gbc.setState(0xb0eb, 0x57a6, 0x7840, 0x4ded, 0xbdff, 0x495, 0x0, 0x0);
        gbc.writeMem(0xb0eb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x57a6, gbc.sp());
        EXPECT(0xb0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0eb));
        EXPECT(0xb3, gbc.readMem(0xb0ec));
        // CB B3 037D
        gbc.setState(0xa77c, 0x83e5, 0xde20, 0xaa6f, 0x1512, 0x418a, 0x0, 0x1);
        gbc.writeMem(0xa77c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x83e5, gbc.sp());
        EXPECT(0xa77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77c));
        EXPECT(0xb3, gbc.readMem(0xa77d));
        // CB B3 037E
        gbc.setState(0x22fd, 0x2f58, 0xca80, 0x5b94, 0x1417, 0x50dd, 0x1, 0x1);
        gbc.writeMem(0x22fd, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2f58, gbc.sp());
        EXPECT(0x22ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 037F
        gbc.setState(0xb2be, 0x760e, 0x12b0, 0x106, 0x94c8, 0x1f67, 0x1, 0x0);
        gbc.writeMem(0xb2be, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x760e, gbc.sp());
        EXPECT(0xb2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2be));
        EXPECT(0xb3, gbc.readMem(0xb2bf));
        // CB B3 0380
        gbc.setState(0x43e3, 0xc654, 0xf2c0, 0x77ab, 0x8160, 0xe5a2, 0x1, 0x1);
        gbc.writeMem(0x43e3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc654, gbc.sp());
        EXPECT(0x43e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0381
        gbc.setState(0x6cbc, 0xb455, 0xdc40, 0x2930, 0xec45, 0x5450, 0x0, 0x0);
        gbc.writeMem(0x6cbc, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb455, gbc.sp());
        EXPECT(0x6cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0382
        gbc.setState(0xcaa2, 0x8492, 0x4750, 0x4471, 0xc2a0, 0x7ecb, 0x1, 0x0);
        gbc.writeMem(0xcaa2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8492, gbc.sp());
        EXPECT(0xcaa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa2));
        EXPECT(0xb3, gbc.readMem(0xcaa3));
        // CB B3 0383
        gbc.setState(0xed97, 0x498a, 0xb840, 0xf0be, 0x9903, 0x1374, 0x1, 0x0);
        gbc.writeMem(0xed97, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0xed99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed97));
        EXPECT(0xb3, gbc.readMem(0xed98));
        // CB B3 0384
        gbc.setState(0x4130, 0xd6a0, 0x11f0, 0x62b5, 0x3990, 0x1315, 0x0, 0x1);
        gbc.writeMem(0x4130, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd6a0, gbc.sp());
        EXPECT(0x4132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0387
        gbc.setState(0xc6eb, 0xa2d2, 0x9890, 0x46a6, 0xd979, 0x9f77, 0x1, 0x0);
        gbc.writeMem(0xc6eb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa2d2, gbc.sp());
        EXPECT(0xc6ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6eb));
        EXPECT(0xb3, gbc.readMem(0xc6ec));
        // CB B3 0388
        gbc.setState(0x4436, 0xed20, 0x1890, 0xe8eb, 0x63db, 0xcb5b, 0x0, 0x1);
        gbc.writeMem(0x4436, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xed20, gbc.sp());
        EXPECT(0x4438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0389
        gbc.setState(0x6fa0, 0x8c43, 0x63e0, 0x7b3d, 0x800b, 0xa231, 0x1, 0x0);
        gbc.writeMem(0x6fa0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8c43, gbc.sp());
        EXPECT(0x6fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 038A
        gbc.setState(0x3f40, 0xb92a, 0xe3c0, 0x1ef0, 0xfce2, 0x57dd, 0x0, 0x0);
        gbc.writeMem(0x3f40, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb92a, gbc.sp());
        EXPECT(0x3f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 038B
        gbc.setState(0x6cae, 0x38f7, 0x4990, 0xafdf, 0xc756, 0xff01, 0x1, 0x0);
        gbc.writeMem(0x6cae, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x38f7, gbc.sp());
        EXPECT(0x6cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 038C
        gbc.setState(0xe54f, 0xd736, 0x2050, 0xb762, 0x8687, 0x2bb, 0x0, 0x0);
        gbc.writeMem(0xe54f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd736, gbc.sp());
        EXPECT(0xe551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54f));
        EXPECT(0xb3, gbc.readMem(0xe550));
        // CB B3 038D
        gbc.setState(0x94d9, 0x1884, 0xb8c0, 0xc896, 0x30f2, 0x26b, 0x1, 0x1);
        gbc.writeMem(0x94d9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1884, gbc.sp());
        EXPECT(0x94db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d9));
        EXPECT(0xb3, gbc.readMem(0x94da));
        // CB B3 038E
        gbc.setState(0x93ce, 0x38e2, 0x690, 0xaa47, 0xfd, 0x4a95, 0x0, 0x1);
        gbc.writeMem(0x93ce, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x38e2, gbc.sp());
        EXPECT(0x93d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ce));
        EXPECT(0xb3, gbc.readMem(0x93cf));
        // CB B3 038F
        gbc.setState(0x1a1f, 0x6abc, 0x2a30, 0x14d4, 0xad99, 0x77a5, 0x0, 0x1);
        gbc.writeMem(0x1a1f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6abc, gbc.sp());
        EXPECT(0x1a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0390
        gbc.setState(0x95a8, 0x8dc9, 0x67e0, 0xa388, 0xd1e5, 0x12b7, 0x1, 0x1);
        gbc.writeMem(0x95a8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8dc9, gbc.sp());
        EXPECT(0x95aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a8));
        EXPECT(0xb3, gbc.readMem(0x95a9));
        // CB B3 0391
        gbc.setState(0xe6e5, 0xee15, 0x6ef0, 0x9bd0, 0x3e08, 0xcd84, 0x1, 0x0);
        gbc.writeMem(0xe6e5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xee15, gbc.sp());
        EXPECT(0xe6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e5));
        EXPECT(0xb3, gbc.readMem(0xe6e6));
        // CB B3 0392
        gbc.setState(0x9847, 0xa201, 0xbc60, 0x8004, 0x38d7, 0xb0f0, 0x1, 0x0);
        gbc.writeMem(0x9847, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa201, gbc.sp());
        EXPECT(0x9849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9847));
        EXPECT(0xb3, gbc.readMem(0x9848));
        // CB B3 0393
        gbc.setState(0xd6f1, 0x5ebb, 0x5a50, 0xe3bb, 0x325e, 0x2ff6, 0x0, 0x1);
        gbc.writeMem(0xd6f1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5ebb, gbc.sp());
        EXPECT(0xd6f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f1));
        EXPECT(0xb3, gbc.readMem(0xd6f2));
        // CB B3 0394
        gbc.setState(0x33d4, 0x7ef2, 0x3b10, 0x6cf, 0x6544, 0x4dc4, 0x0, 0x1);
        gbc.writeMem(0x33d4, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7ef2, gbc.sp());
        EXPECT(0x33d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0395
        gbc.setState(0x7a98, 0xde07, 0xd280, 0x5a5, 0x2495, 0x127c, 0x1, 0x0);
        gbc.writeMem(0x7a98, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xde07, gbc.sp());
        EXPECT(0x7a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0396
        gbc.setState(0x67a2, 0x335f, 0xeab0, 0xfeff, 0x1468, 0x90ee, 0x0, 0x1);
        gbc.writeMem(0x67a2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x335f, gbc.sp());
        EXPECT(0x67a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 0397
        gbc.setState(0xbd5b, 0x138c, 0x6d20, 0xf721, 0x5b74, 0x7427, 0x0, 0x0);
        gbc.writeMem(0xbd5b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x138c, gbc.sp());
        EXPECT(0xbd5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5b));
        EXPECT(0xb3, gbc.readMem(0xbd5c));
        // CB B3 0398
        gbc.setState(0x5f9c, 0x3deb, 0xb1c0, 0x941f, 0xec61, 0x7c22, 0x1, 0x0);
        gbc.writeMem(0x5f9c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3deb, gbc.sp());
        EXPECT(0x5f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 0399
        gbc.setState(0x2cd7, 0xf483, 0x9480, 0x51e2, 0xe023, 0x81a3, 0x1, 0x0);
        gbc.writeMem(0x2cd7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf483, gbc.sp());
        EXPECT(0x2cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 039A
        gbc.setState(0x54f6, 0x14cf, 0x5fe0, 0x970e, 0x77bf, 0xe81a, 0x0, 0x1);
        gbc.writeMem(0x54f6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x14cf, gbc.sp());
        EXPECT(0x54f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 039B
        gbc.setState(0xdbba, 0xdb53, 0xfcb0, 0x82, 0xdc29, 0xdd99, 0x0, 0x0);
        gbc.writeMem(0xdbba, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdb53, gbc.sp());
        EXPECT(0xdbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbba));
        EXPECT(0xb3, gbc.readMem(0xdbbb));
        // CB B3 039C
        gbc.setState(0x9afb, 0xf85e, 0xee00, 0x1010, 0x723f, 0x5640, 0x0, 0x1);
        gbc.writeMem(0x9afb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf85e, gbc.sp());
        EXPECT(0x9afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afb));
        EXPECT(0xb3, gbc.readMem(0x9afc));
        // CB B3 039D
        gbc.setState(0xe9df, 0x7e27, 0xe1f0, 0x4f1b, 0xe4f4, 0x66d5, 0x1, 0x0);
        gbc.writeMem(0xe9df, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7e27, gbc.sp());
        EXPECT(0xe9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9df));
        EXPECT(0xb3, gbc.readMem(0xe9e0));
        // CB B3 039E
        gbc.setState(0xee5, 0x680f, 0xf960, 0xfc1b, 0x1aca, 0x32cc, 0x1, 0x1);
        gbc.writeMem(0xee5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x680f, gbc.sp());
        EXPECT(0xee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 039F
        gbc.setState(0x7584, 0x356, 0x4e0, 0x5d85, 0xff0b, 0x1f2a, 0x0, 0x1);
        gbc.writeMem(0x7584, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x356, gbc.sp());
        EXPECT(0x7586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03A0
        gbc.setState(0x319, 0x359e, 0x1810, 0x69ae, 0x176e, 0x3c9f, 0x0, 0x0);
        gbc.writeMem(0x319, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x359e, gbc.sp());
        EXPECT(0x31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03A1
        gbc.setState(0x972b, 0x2549, 0x2a20, 0xba0d, 0xd298, 0xeb9a, 0x1, 0x0);
        gbc.writeMem(0x972b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2549, gbc.sp());
        EXPECT(0x972d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972b));
        EXPECT(0xb3, gbc.readMem(0x972c));
        // CB B3 03A2
        gbc.setState(0x9311, 0xa4a2, 0xa2d0, 0xc594, 0x6a38, 0x7e4e, 0x0, 0x1);
        gbc.writeMem(0x9311, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa4a2, gbc.sp());
        EXPECT(0x9313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9311));
        EXPECT(0xb3, gbc.readMem(0x9312));
        // CB B3 03A3
        gbc.setState(0x26e0, 0xe503, 0xc880, 0xcae4, 0xe4a4, 0x496c, 0x1, 0x1);
        gbc.writeMem(0x26e0, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe503, gbc.sp());
        EXPECT(0x26e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03A5
        gbc.setState(0x5e86, 0xe7b9, 0x6e30, 0xf3c5, 0x6af9, 0x8214, 0x0, 0x1);
        gbc.writeMem(0x5e86, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe7b9, gbc.sp());
        EXPECT(0x5e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03A6
        gbc.setState(0xc4a5, 0x601d, 0x3a40, 0x223b, 0x52eb, 0x493b, 0x0, 0x0);
        gbc.writeMem(0xc4a5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x601d, gbc.sp());
        EXPECT(0xc4a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a5));
        EXPECT(0xb3, gbc.readMem(0xc4a6));
        // CB B3 03A7
        gbc.setState(0x1983, 0x7f64, 0x5c80, 0xcbe9, 0x113f, 0xe1c, 0x1, 0x0);
        gbc.writeMem(0x1983, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7f64, gbc.sp());
        EXPECT(0x1985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03A8
        gbc.setState(0x789d, 0x7f2b, 0xb910, 0x5a59, 0xca34, 0xbf59, 0x1, 0x0);
        gbc.writeMem(0x789d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7f2b, gbc.sp());
        EXPECT(0x789f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03A9
        gbc.setState(0x3565, 0x9a36, 0x4620, 0x9cac, 0xeba2, 0x24c, 0x1, 0x1);
        gbc.writeMem(0x3565, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9a36, gbc.sp());
        EXPECT(0x3567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03AA
        gbc.setState(0x5f14, 0x5a31, 0x5680, 0xfcb6, 0xf15f, 0xdff3, 0x0, 0x0);
        gbc.writeMem(0x5f14, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5a31, gbc.sp());
        EXPECT(0x5f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03AB
        gbc.setState(0x19b3, 0xc4c4, 0x6eb0, 0x34d3, 0x2e43, 0x34c2, 0x1, 0x1);
        gbc.writeMem(0x19b3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc4c4, gbc.sp());
        EXPECT(0x19b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03AD
        gbc.setState(0x32c, 0xa1c6, 0x6a60, 0x414, 0xd974, 0x538d, 0x0, 0x0);
        gbc.writeMem(0x32c, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa1c6, gbc.sp());
        EXPECT(0x32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03AE
        gbc.setState(0xa871, 0xd6cf, 0xb020, 0x6408, 0x7456, 0xd5ef, 0x1, 0x1);
        gbc.writeMem(0xa871, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd6cf, gbc.sp());
        EXPECT(0xa873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa871));
        EXPECT(0xb3, gbc.readMem(0xa872));
        // CB B3 03AF
        gbc.setState(0xa2f1, 0xbe4b, 0xd440, 0x9348, 0x30, 0x147, 0x0, 0x1);
        gbc.writeMem(0xa2f1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbe4b, gbc.sp());
        EXPECT(0xa2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f1));
        EXPECT(0xb3, gbc.readMem(0xa2f2));
        // CB B3 03B0
        gbc.setState(0xbe67, 0x4d78, 0xba70, 0xb955, 0x7536, 0x1935, 0x0, 0x0);
        gbc.writeMem(0xbe67, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4d78, gbc.sp());
        EXPECT(0xbe69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe67));
        EXPECT(0xb3, gbc.readMem(0xbe68));
        // CB B3 03B1
        gbc.setState(0x6baf, 0x2192, 0x7ae0, 0xb4b9, 0x382f, 0xb5f2, 0x0, 0x0);
        gbc.writeMem(0x6baf, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2192, gbc.sp());
        EXPECT(0x6bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03B2
        gbc.setState(0x68a3, 0x8591, 0x7420, 0x8c4c, 0xe050, 0xaba5, 0x1, 0x1);
        gbc.writeMem(0x68a3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8591, gbc.sp());
        EXPECT(0x68a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03B3
        gbc.setState(0x5f0f, 0x1e7d, 0xdfc0, 0x5cbb, 0xfc8f, 0x8d4d, 0x1, 0x0);
        gbc.writeMem(0x5f0f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1e7d, gbc.sp());
        EXPECT(0x5f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03B4
        gbc.setState(0x7e87, 0xac9c, 0x1df0, 0xee4d, 0x8d8, 0xfa4c, 0x1, 0x0);
        gbc.writeMem(0x7e87, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xac9c, gbc.sp());
        EXPECT(0x7e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03B5
        gbc.setState(0x602, 0x2240, 0xf20, 0x5b4a, 0x6921, 0xce9c, 0x1, 0x0);
        gbc.writeMem(0x602, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2240, gbc.sp());
        EXPECT(0x604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03B6
        gbc.setState(0x91b7, 0x7a51, 0xf980, 0x73f5, 0x1833, 0x4a7d, 0x1, 0x1);
        gbc.writeMem(0x91b7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7a51, gbc.sp());
        EXPECT(0x91b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b7));
        EXPECT(0xb3, gbc.readMem(0x91b8));
        // CB B3 03B7
        gbc.setState(0xc32f, 0xbc16, 0x2cc0, 0x4615, 0x9608, 0x7cba, 0x1, 0x0);
        gbc.writeMem(0xc32f, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbc16, gbc.sp());
        EXPECT(0xc331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32f));
        EXPECT(0xb3, gbc.readMem(0xc330));
        // CB B3 03B8
        gbc.setState(0xd2e2, 0x4fdc, 0x6c20, 0x23b8, 0xddc2, 0x28bc, 0x0, 0x1);
        gbc.writeMem(0xd2e2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4fdc, gbc.sp());
        EXPECT(0xd2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e2));
        EXPECT(0xb3, gbc.readMem(0xd2e3));
        // CB B3 03B9
        gbc.setState(0xbde7, 0x6f49, 0xb170, 0x237d, 0xf460, 0x47fe, 0x0, 0x0);
        gbc.writeMem(0xbde7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6f49, gbc.sp());
        EXPECT(0xbde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde7));
        EXPECT(0xb3, gbc.readMem(0xbde8));
        // CB B3 03BA
        gbc.setState(0xc0a8, 0xfec7, 0xe6e0, 0xa04a, 0xa633, 0x5b56, 0x0, 0x0);
        gbc.writeMem(0xc0a8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfec7, gbc.sp());
        EXPECT(0xc0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a8));
        EXPECT(0xb3, gbc.readMem(0xc0a9));
        // CB B3 03BB
        gbc.setState(0x1f36, 0x361, 0xfa60, 0x1a13, 0x720a, 0xd63d, 0x0, 0x1);
        gbc.writeMem(0x1f36, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x361, gbc.sp());
        EXPECT(0x1f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03BC
        gbc.setState(0x88fa, 0x6458, 0x2f30, 0xcdce, 0x3795, 0x8bf0, 0x0, 0x0);
        gbc.writeMem(0x88fa, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6458, gbc.sp());
        EXPECT(0x88fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fa));
        EXPECT(0xb3, gbc.readMem(0x88fb));
        // CB B3 03BD
        gbc.setState(0x5461, 0xe63a, 0x2f20, 0x7b27, 0x74cb, 0x2f0a, 0x0, 0x0);
        gbc.writeMem(0x5461, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe63a, gbc.sp());
        EXPECT(0x5463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03BE
        gbc.setState(0x7976, 0x3f12, 0x6450, 0x72b, 0xda9f, 0xa6c1, 0x0, 0x1);
        gbc.writeMem(0x7976, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0x7978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03BF
        gbc.setState(0xd956, 0xfdc2, 0xb3c0, 0x7801, 0x406d, 0xbda2, 0x0, 0x0);
        gbc.writeMem(0xd956, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfdc2, gbc.sp());
        EXPECT(0xd958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd956));
        EXPECT(0xb3, gbc.readMem(0xd957));
        // CB B3 03C0
        gbc.setState(0x2c1a, 0xbeba, 0x6fc0, 0x8aaf, 0xaa99, 0x5d47, 0x0, 0x0);
        gbc.writeMem(0x2c1a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbeba, gbc.sp());
        EXPECT(0x2c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03C1
        gbc.setState(0xcd17, 0xbfb6, 0x84f0, 0xbf2e, 0xce22, 0xe1a3, 0x1, 0x1);
        gbc.writeMem(0xcd17, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbfb6, gbc.sp());
        EXPECT(0xcd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd17));
        EXPECT(0xb3, gbc.readMem(0xcd18));
        // CB B3 03C2
        gbc.setState(0x6dda, 0xc45b, 0x4ba0, 0x904a, 0xe34f, 0x903d, 0x0, 0x1);
        gbc.writeMem(0x6dda, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc45b, gbc.sp());
        EXPECT(0x6ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03C3
        gbc.setState(0x4444, 0x5c74, 0xbdc0, 0xaf56, 0xbe1f, 0xe9d0, 0x1, 0x0);
        gbc.writeMem(0x4444, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5c74, gbc.sp());
        EXPECT(0x4446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03C4
        gbc.setState(0xe797, 0xc3f7, 0x8f0, 0x4d17, 0x2f1f, 0xa234, 0x1, 0x1);
        gbc.writeMem(0xe797, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc3f7, gbc.sp());
        EXPECT(0xe799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe797));
        EXPECT(0xb3, gbc.readMem(0xe798));
        // CB B3 03C5
        gbc.setState(0x43d2, 0xe4a1, 0x7370, 0x1e28, 0x8711, 0x5873, 0x1, 0x1);
        gbc.writeMem(0x43d2, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe4a1, gbc.sp());
        EXPECT(0x43d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03C6
        gbc.setState(0xd715, 0xa548, 0xf2a0, 0x2898, 0x57fc, 0xd533, 0x0, 0x1);
        gbc.writeMem(0xd715, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa548, gbc.sp());
        EXPECT(0xd717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd715));
        EXPECT(0xb3, gbc.readMem(0xd716));
        // CB B3 03C7
        gbc.setState(0x65a8, 0x9e8a, 0x9cb0, 0xddcf, 0xb985, 0xfc9b, 0x0, 0x1);
        gbc.writeMem(0x65a8, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9e8a, gbc.sp());
        EXPECT(0x65aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03C8
        gbc.setState(0x12ae, 0x4174, 0x38c0, 0x6a20, 0xbdc3, 0x2022, 0x0, 0x1);
        gbc.writeMem(0x12ae, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4174, gbc.sp());
        EXPECT(0x12b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03C9
        gbc.setState(0x93d5, 0xbf38, 0x740, 0x67, 0x505b, 0x1073, 0x1, 0x1);
        gbc.writeMem(0x93d5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbf38, gbc.sp());
        EXPECT(0x93d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d5));
        EXPECT(0xb3, gbc.readMem(0x93d6));
        // CB B3 03CA
        gbc.setState(0xbb75, 0xadbf, 0xc7d0, 0x91a1, 0xd878, 0x141c, 0x1, 0x1);
        gbc.writeMem(0xbb75, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xadbf, gbc.sp());
        EXPECT(0xbb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb75));
        EXPECT(0xb3, gbc.readMem(0xbb76));
        // CB B3 03CB
        gbc.setState(0x334b, 0x762, 0xb200, 0x20ca, 0x62f, 0x2281, 0x0, 0x0);
        gbc.writeMem(0x334b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x762, gbc.sp());
        EXPECT(0x334d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03CC
        gbc.setState(0xa7c1, 0xae95, 0x5ac0, 0xe22a, 0x9387, 0x5b82, 0x1, 0x0);
        gbc.writeMem(0xa7c1, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xae95, gbc.sp());
        EXPECT(0xa7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c1));
        EXPECT(0xb3, gbc.readMem(0xa7c2));
        // CB B3 03CD
        gbc.setState(0x3243, 0x2e76, 0xf220, 0x264e, 0x5c78, 0x4147, 0x1, 0x1);
        gbc.writeMem(0x3243, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2e76, gbc.sp());
        EXPECT(0x3245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03CE
        gbc.setState(0x2f21, 0x648a, 0x32d0, 0x8211, 0xf297, 0xc068, 0x1, 0x1);
        gbc.writeMem(0x2f21, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x648a, gbc.sp());
        EXPECT(0x2f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03CF
        gbc.setState(0x5888, 0xa570, 0x2be0, 0xd297, 0xe3a, 0x2d1d, 0x0, 0x1);
        gbc.writeMem(0x5888, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa570, gbc.sp());
        EXPECT(0x588a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03D0
        gbc.setState(0xd95a, 0x4591, 0x51c0, 0x72cf, 0x1c79, 0x857b, 0x0, 0x1);
        gbc.writeMem(0xd95a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0xd95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95a));
        EXPECT(0xb3, gbc.readMem(0xd95b));
        // CB B3 03D1
        gbc.setState(0x16b5, 0xcc69, 0x76c0, 0x34b0, 0xc989, 0x9a5, 0x1, 0x0);
        gbc.writeMem(0x16b5, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcc69, gbc.sp());
        EXPECT(0x16b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03D2
        gbc.setState(0x8c03, 0x30af, 0x7560, 0x4347, 0x3658, 0x5e93, 0x1, 0x1);
        gbc.writeMem(0x8c03, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x30af, gbc.sp());
        EXPECT(0x8c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c03));
        EXPECT(0xb3, gbc.readMem(0x8c04));
        // CB B3 03D3
        gbc.setState(0xe2c9, 0xb851, 0xe650, 0xe0c8, 0xa49d, 0x167c, 0x1, 0x0);
        gbc.writeMem(0xe2c9, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb851, gbc.sp());
        EXPECT(0xe2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c9));
        EXPECT(0xb3, gbc.readMem(0xe2ca));
        // CB B3 03D4
        gbc.setState(0x5792, 0x4bd1, 0x1d40, 0x61ed, 0xa89a, 0x3cad, 0x0, 0x1);
        gbc.writeMem(0x5792, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4bd1, gbc.sp());
        EXPECT(0x5794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03D5
        gbc.setState(0x17ca, 0xb792, 0xea40, 0xe278, 0x37d7, 0x5c0b, 0x1, 0x0);
        gbc.writeMem(0x17ca, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb792, gbc.sp());
        EXPECT(0x17cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03D6
        gbc.setState(0x707, 0xc3ca, 0xaab0, 0x1397, 0x1730, 0x8d4b, 0x0, 0x0);
        gbc.writeMem(0x707, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc3ca, gbc.sp());
        EXPECT(0x709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03D7
        gbc.setState(0x3376, 0x841e, 0xadb0, 0x5269, 0xda6b, 0x10e3, 0x0, 0x0);
        gbc.writeMem(0x3376, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x841e, gbc.sp());
        EXPECT(0x3378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03D8
        gbc.setState(0x6ad7, 0xb1a3, 0x42b0, 0x439f, 0xe6d2, 0xc0e8, 0x1, 0x0);
        gbc.writeMem(0x6ad7, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb1a3, gbc.sp());
        EXPECT(0x6ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03D9
        gbc.setState(0xc64, 0x3f24, 0xa700, 0xa4b4, 0x8134, 0xfc05, 0x0, 0x1);
        gbc.writeMem(0xc64, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3f24, gbc.sp());
        EXPECT(0xc66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03DA
        gbc.setState(0x5c2d, 0x8763, 0xa9a0, 0x332b, 0x30c8, 0xa3ae, 0x0, 0x1);
        gbc.writeMem(0x5c2d, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8763, gbc.sp());
        EXPECT(0x5c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03DB
        gbc.setState(0xbd44, 0x42d8, 0x1fc0, 0x9273, 0x11fe, 0x3379, 0x0, 0x1);
        gbc.writeMem(0xbd44, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x42d8, gbc.sp());
        EXPECT(0xbd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd44));
        EXPECT(0xb3, gbc.readMem(0xbd45));
        // CB B3 03DC
        gbc.setState(0x2fff, 0x2ce4, 0x17c0, 0x4333, 0xc8d7, 0xe633, 0x1, 0x0);
        gbc.writeMem(0x2fff, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2ce4, gbc.sp());
        EXPECT(0x3001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03DD
        gbc.setState(0x494, 0x9f3a, 0x35b0, 0x1179, 0x1a87, 0xbe2, 0x1, 0x1);
        gbc.writeMem(0x494, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9f3a, gbc.sp());
        EXPECT(0x496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03DE
        gbc.setState(0xd909, 0xf93a, 0x39b0, 0x6dd4, 0x8fde, 0x63d3, 0x0, 0x1);
        gbc.writeMem(0xd909, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf93a, gbc.sp());
        EXPECT(0xd90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd909));
        EXPECT(0xb3, gbc.readMem(0xd90a));
        // CB B3 03DF
        gbc.setState(0x319b, 0x3f1, 0x33c0, 0x9af, 0x634d, 0x7531, 0x1, 0x1);
        gbc.writeMem(0x319b, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3f1, gbc.sp());
        EXPECT(0x319d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B3 03E0
        gbc.setState(0xce24, 0x8324, 0xcec0, 0x908c, 0xec73, 0x60e8, 0x0, 0x0);
        gbc.writeMem(0xce24, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8324, gbc.sp());
        EXPECT(0xce26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce24));
        EXPECT(0xb3, gbc.readMem(0xce25));
        // CB B3 03E1
        gbc.setState(0xdbe3, 0x5425, 0x4bf0, 0x4512, 0xf972, 0xa357, 0x1, 0x0);
        gbc.writeMem(0xdbe3, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5425, gbc.sp());
        EXPECT(0xdbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe3));
        EXPECT(0xb3, gbc.readMem(0xdbe4));
        // CB B3 03E2
        gbc.setState(0x99da, 0xc9a0, 0x81d0, 0x4539, 0x46f, 0x5d3c, 0x1, 0x0);
        gbc.writeMem(0x99da, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc9a0, gbc.sp());
        EXPECT(0x99dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99da));
        EXPECT(0xb3, gbc.readMem(0x99db));
        // CB B3 03E3
        gbc.setState(0xaed6, 0xa462, 0x73b0, 0xe1bc, 0x2df, 0xd2b0, 0x1, 0x0);
        gbc.writeMem(0xaed6, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa462, gbc.sp());
        EXPECT(0xaed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed6));
        EXPECT(0xb3, gbc.readMem(0xaed7));
        // CB B3 03E4
        gbc.setState(0xc273, 0x9c8c, 0xeb90, 0xf022, 0x7fec, 0xd35e, 0x1, 0x0);
        gbc.writeMem(0xc273, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9c8c, gbc.sp());
        EXPECT(0xc275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc273));
        EXPECT(0xb3, gbc.readMem(0xc274));
        // CB B3 03E5
        gbc.setState(0xa098, 0x48d0, 0xd9e0, 0xf284, 0xfc12, 0x1243, 0x1, 0x1);
        gbc.writeMem(0xa098, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x48d0, gbc.sp());
        EXPECT(0xa09a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa098));
        EXPECT(0xb3, gbc.readMem(0xa099));
        // CB B3 03E6
        gbc.setState(0xcbb, 0x473, 0xc10, 0xdac7, 0x9e24, 0x56aa, 0x1, 0x0);
        gbc.writeMem(0xcbb, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x473, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B3 03E7
        gbc.setState(0xc04a, 0x2266, 0x6b10, 0xcee9, 0x8159, 0x7d95, 0x0, 0x0);
        gbc.writeMem(0xc04a, { 0xcb, 0xb3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2266, gbc.sp());
        EXPECT(0xc04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04a));
        EXPECT(0xb3, gbc.readMem(0xc04b));
    }
