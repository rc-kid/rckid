    TEST(gbcemu, opcode_cb_a7) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB A7 0000
        gbc.setState(0x5c96, 0x4360, 0x5060, 0xc4e4, 0xe03b, 0xe44e, 0x0, 0x0);
        gbc.writeMem(0x5c96, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4360, gbc.sp());
        EXPECT(0x5c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0001
        gbc.setState(0x5794, 0xac76, 0x7220, 0x5f7, 0x292d, 0x9785, 0x1, 0x0);
        gbc.writeMem(0x5794, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xac76, gbc.sp());
        EXPECT(0x5796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0002
        gbc.setState(0x7287, 0xbb99, 0x1ef0, 0x5b2a, 0x4d29, 0x8cc4, 0x1, 0x0);
        gbc.writeMem(0x7287, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbb99, gbc.sp());
        EXPECT(0x7289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0004
        gbc.setState(0x2c72, 0x3fd6, 0xf810, 0x1d39, 0x4219, 0x2930, 0x1, 0x1);
        gbc.writeMem(0x2c72, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3fd6, gbc.sp());
        EXPECT(0x2c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0005
        gbc.setState(0xafc9, 0x7a0d, 0x8d60, 0xefad, 0x388a, 0x9d03, 0x1, 0x1);
        gbc.writeMem(0xafc9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7a0d, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc9));
        EXPECT(0xa7, gbc.readMem(0xafca));
        // CB A7 0006
        gbc.setState(0x869b, 0x1e40, 0x5e00, 0x8a4d, 0xd29a, 0xdd8a, 0x1, 0x0);
        gbc.writeMem(0x869b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1e40, gbc.sp());
        EXPECT(0x869d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869b));
        EXPECT(0xa7, gbc.readMem(0x869c));
        // CB A7 0007
        gbc.setState(0xec82, 0xb1d9, 0x5b50, 0x3866, 0x1d25, 0xa210, 0x0, 0x0);
        gbc.writeMem(0xec82, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb1d9, gbc.sp());
        EXPECT(0xec84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec82));
        EXPECT(0xa7, gbc.readMem(0xec83));
        // CB A7 0008
        gbc.setState(0xbc0f, 0xadb3, 0xae60, 0xe64f, 0xbe30, 0x2802, 0x0, 0x1);
        gbc.writeMem(0xbc0f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xadb3, gbc.sp());
        EXPECT(0xbc11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0f));
        EXPECT(0xa7, gbc.readMem(0xbc10));
        // CB A7 0009
        gbc.setState(0x2faf, 0x704c, 0x50e0, 0x404b, 0x67ed, 0xfedd, 0x1, 0x1);
        gbc.writeMem(0x2faf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0x2fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 000B
        gbc.setState(0x9c4f, 0x9ff, 0x9be0, 0x2257, 0x820e, 0xc16a, 0x1, 0x0);
        gbc.writeMem(0x9c4f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9ff, gbc.sp());
        EXPECT(0x9c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c4f));
        EXPECT(0xa7, gbc.readMem(0x9c50));
        // CB A7 000E
        gbc.setState(0x1648, 0x5a35, 0x760, 0x9150, 0x7249, 0x1769, 0x0, 0x0);
        gbc.writeMem(0x1648, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5a35, gbc.sp());
        EXPECT(0x164a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 000F
        gbc.setState(0x6896, 0x1ff6, 0x6940, 0xb4dc, 0x55e3, 0x79f, 0x0, 0x0);
        gbc.writeMem(0x6896, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1ff6, gbc.sp());
        EXPECT(0x6898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0010
        gbc.setState(0x43d2, 0x540a, 0x8320, 0x4af4, 0x292c, 0xec4b, 0x0, 0x0);
        gbc.writeMem(0x43d2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x540a, gbc.sp());
        EXPECT(0x43d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0011
        gbc.setState(0x53b1, 0x7795, 0x3ac0, 0xb227, 0x4704, 0x1233, 0x0, 0x0);
        gbc.writeMem(0x53b1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7795, gbc.sp());
        EXPECT(0x53b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0012
        gbc.setState(0x149, 0x9c76, 0x7a60, 0x35e3, 0xf606, 0x5951, 0x1, 0x1);
        gbc.writeMem(0x149, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9c76, gbc.sp());
        EXPECT(0x14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0013
        gbc.setState(0x984e, 0x929f, 0x70, 0x97a9, 0x7a17, 0x83b0, 0x1, 0x1);
        gbc.writeMem(0x984e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x929f, gbc.sp());
        EXPECT(0x9850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984e));
        EXPECT(0xa7, gbc.readMem(0x984f));
        // CB A7 0014
        gbc.setState(0x5989, 0xcdec, 0xe7c0, 0x5c8b, 0xcc54, 0xe319, 0x0, 0x1);
        gbc.writeMem(0x5989, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcdec, gbc.sp());
        EXPECT(0x598b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0015
        gbc.setState(0x2c1, 0x2fd0, 0x62f0, 0xe061, 0xa37, 0xcb7f, 0x1, 0x0);
        gbc.writeMem(0x2c1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2fd0, gbc.sp());
        EXPECT(0x2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0016
        gbc.setState(0xa630, 0xbe88, 0x40d0, 0x61e2, 0x89ef, 0xd858, 0x0, 0x0);
        gbc.writeMem(0xa630, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbe88, gbc.sp());
        EXPECT(0xa632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa630));
        EXPECT(0xa7, gbc.readMem(0xa631));
        // CB A7 0017
        gbc.setState(0x516e, 0x8e5e, 0x2590, 0xcbca, 0xbdd5, 0x3090, 0x0, 0x0);
        gbc.writeMem(0x516e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8e5e, gbc.sp());
        EXPECT(0x5170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0018
        gbc.setState(0x374b, 0xd895, 0x7ae0, 0x189, 0x8285, 0x726a, 0x1, 0x1);
        gbc.writeMem(0x374b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd895, gbc.sp());
        EXPECT(0x374d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0019
        gbc.setState(0x4f0e, 0xd384, 0x9670, 0x7ee3, 0x9a94, 0x9f0c, 0x0, 0x0);
        gbc.writeMem(0x4f0e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd384, gbc.sp());
        EXPECT(0x4f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 001A
        gbc.setState(0x5638, 0xc930, 0xf8b0, 0x933f, 0x6349, 0x6b25, 0x1, 0x0);
        gbc.writeMem(0x5638, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc930, gbc.sp());
        EXPECT(0x563a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 001B
        gbc.setState(0x49ce, 0x199e, 0xb3e0, 0x5670, 0x587a, 0x189e, 0x1, 0x1);
        gbc.writeMem(0x49ce, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x199e, gbc.sp());
        EXPECT(0x49d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 001C
        gbc.setState(0x2024, 0xfa20, 0x1660, 0xa69d, 0xcdfc, 0xed1e, 0x0, 0x0);
        gbc.writeMem(0x2024, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfa20, gbc.sp());
        EXPECT(0x2026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 001D
        gbc.setState(0x1ba, 0xdab0, 0x5a80, 0x8ea7, 0xaba4, 0xa8df, 0x0, 0x1);
        gbc.writeMem(0x1ba, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdab0, gbc.sp());
        EXPECT(0x1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 001E
        gbc.setState(0xeb15, 0x5bef, 0x21c0, 0xdfe4, 0x7a01, 0x33c7, 0x1, 0x1);
        gbc.writeMem(0xeb15, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5bef, gbc.sp());
        EXPECT(0xeb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb15));
        EXPECT(0xa7, gbc.readMem(0xeb16));
        // CB A7 001F
        gbc.setState(0xd199, 0xca98, 0x86a0, 0x2a87, 0x9b40, 0xaa7d, 0x1, 0x0);
        gbc.writeMem(0xd199, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xca98, gbc.sp());
        EXPECT(0xd19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd199));
        EXPECT(0xa7, gbc.readMem(0xd19a));
        // CB A7 0020
        gbc.setState(0xbf22, 0x7da5, 0x4fc0, 0xa9e9, 0x16c8, 0x59c4, 0x1, 0x1);
        gbc.writeMem(0xbf22, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7da5, gbc.sp());
        EXPECT(0xbf24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf22));
        EXPECT(0xa7, gbc.readMem(0xbf23));
        // CB A7 0021
        gbc.setState(0x291d, 0x1f5c, 0xd730, 0x8314, 0x56c, 0xb3f7, 0x1, 0x1);
        gbc.writeMem(0x291d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1f5c, gbc.sp());
        EXPECT(0x291f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0022
        gbc.setState(0xa860, 0xc0b7, 0xf880, 0x526a, 0x69bf, 0x148c, 0x0, 0x0);
        gbc.writeMem(0xa860, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc0b7, gbc.sp());
        EXPECT(0xa862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa860));
        EXPECT(0xa7, gbc.readMem(0xa861));
        // CB A7 0023
        gbc.setState(0xddc1, 0xb25e, 0xc870, 0x62e7, 0x3f64, 0x1a74, 0x0, 0x1);
        gbc.writeMem(0xddc1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb25e, gbc.sp());
        EXPECT(0xddc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc1));
        EXPECT(0xa7, gbc.readMem(0xddc2));
        // CB A7 0024
        gbc.setState(0x3e51, 0xda6d, 0x1ed0, 0x4732, 0xc0a3, 0xf4bd, 0x0, 0x1);
        gbc.writeMem(0x3e51, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xda6d, gbc.sp());
        EXPECT(0x3e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0025
        gbc.setState(0x31f1, 0x919, 0x5480, 0xe078, 0x67df, 0x72ef, 0x0, 0x0);
        gbc.writeMem(0x31f1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x919, gbc.sp());
        EXPECT(0x31f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0026
        gbc.setState(0x1c90, 0xc4a8, 0xc7f0, 0xd049, 0xa841, 0x6849, 0x1, 0x0);
        gbc.writeMem(0x1c90, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc4a8, gbc.sp());
        EXPECT(0x1c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0027
        gbc.setState(0x3dca, 0xc41, 0x6ea0, 0xfc59, 0x79ed, 0xa226, 0x1, 0x0);
        gbc.writeMem(0x3dca, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc41, gbc.sp());
        EXPECT(0x3dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0028
        gbc.setState(0x1178, 0xd50c, 0x4720, 0x1277, 0x785c, 0x965f, 0x1, 0x0);
        gbc.writeMem(0x1178, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd50c, gbc.sp());
        EXPECT(0x117a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0029
        gbc.setState(0x24cb, 0x2acf, 0x8d0, 0x40dd, 0x96a9, 0x7b88, 0x0, 0x1);
        gbc.writeMem(0x24cb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2acf, gbc.sp());
        EXPECT(0x24cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 002A
        gbc.setState(0x2048, 0xe48f, 0xfc40, 0x22b1, 0xf82d, 0xedb9, 0x1, 0x0);
        gbc.writeMem(0x2048, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe48f, gbc.sp());
        EXPECT(0x204a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 002B
        gbc.setState(0xd580, 0xd569, 0xdea0, 0x36d9, 0x1f63, 0x2795, 0x0, 0x1);
        gbc.writeMem(0xd580, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd569, gbc.sp());
        EXPECT(0xd582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd580));
        EXPECT(0xa7, gbc.readMem(0xd581));
        // CB A7 002C
        gbc.setState(0xc80a, 0x4f1c, 0x2d0, 0xaaf, 0xa4fc, 0x3573, 0x1, 0x0);
        gbc.writeMem(0xc80a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4f1c, gbc.sp());
        EXPECT(0xc80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80a));
        EXPECT(0xa7, gbc.readMem(0xc80b));
        // CB A7 002D
        gbc.setState(0x49d1, 0xda33, 0xbd30, 0x4fc3, 0xf9b9, 0xe113, 0x0, 0x1);
        gbc.writeMem(0x49d1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xda33, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 002E
        gbc.setState(0x2b17, 0xf0e4, 0x79e0, 0x5b28, 0xea3, 0x2a10, 0x1, 0x0);
        gbc.writeMem(0x2b17, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf0e4, gbc.sp());
        EXPECT(0x2b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 002F
        gbc.setState(0x64a2, 0x725a, 0xacb0, 0xb5ab, 0xe313, 0x5757, 0x1, 0x0);
        gbc.writeMem(0x64a2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x725a, gbc.sp());
        EXPECT(0x64a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0031
        gbc.setState(0x4174, 0x3d0d, 0x22c0, 0x14b5, 0x2ce6, 0xbb34, 0x0, 0x1);
        gbc.writeMem(0x4174, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3d0d, gbc.sp());
        EXPECT(0x4176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0032
        gbc.setState(0x1bf3, 0x2009, 0x58a0, 0x2939, 0x557a, 0x8ec9, 0x0, 0x0);
        gbc.writeMem(0x1bf3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2009, gbc.sp());
        EXPECT(0x1bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0033
        gbc.setState(0x45e2, 0x9fbd, 0x5690, 0x37f6, 0xfcf4, 0x634b, 0x1, 0x1);
        gbc.writeMem(0x45e2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9fbd, gbc.sp());
        EXPECT(0x45e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0034
        gbc.setState(0x82e4, 0x69e3, 0x4ef0, 0x6c79, 0xbd67, 0xcbf5, 0x1, 0x0);
        gbc.writeMem(0x82e4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x69e3, gbc.sp());
        EXPECT(0x82e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e4));
        EXPECT(0xa7, gbc.readMem(0x82e5));
        // CB A7 0036
        gbc.setState(0xec0f, 0x3c00, 0xb280, 0xfbad, 0xb074, 0xa124, 0x1, 0x1);
        gbc.writeMem(0xec0f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3c00, gbc.sp());
        EXPECT(0xec11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec0f));
        EXPECT(0xa7, gbc.readMem(0xec10));
        // CB A7 0037
        gbc.setState(0x3b76, 0xaca, 0x2670, 0x11c2, 0xe9bc, 0xd28a, 0x1, 0x1);
        gbc.writeMem(0x3b76, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaca, gbc.sp());
        EXPECT(0x3b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0038
        gbc.setState(0x5bc0, 0x270, 0x2330, 0x656b, 0x911e, 0x8466, 0x0, 0x1);
        gbc.writeMem(0x5bc0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x270, gbc.sp());
        EXPECT(0x5bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0039
        gbc.setState(0x6395, 0xe726, 0x1140, 0x9d81, 0xbe02, 0xc3be, 0x1, 0x1);
        gbc.writeMem(0x6395, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe726, gbc.sp());
        EXPECT(0x6397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 003A
        gbc.setState(0x83ae, 0x1e3, 0x6b00, 0x336, 0xd911, 0xaeb0, 0x0, 0x0);
        gbc.writeMem(0x83ae, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1e3, gbc.sp());
        EXPECT(0x83b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ae));
        EXPECT(0xa7, gbc.readMem(0x83af));
        // CB A7 003B
        gbc.setState(0x1819, 0x2047, 0x9670, 0xe16f, 0xddbd, 0xed86, 0x0, 0x1);
        gbc.writeMem(0x1819, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2047, gbc.sp());
        EXPECT(0x181b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 003C
        gbc.setState(0x4f89, 0x3d92, 0x3160, 0x4f71, 0xcfc0, 0xb47c, 0x1, 0x1);
        gbc.writeMem(0x4f89, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3d92, gbc.sp());
        EXPECT(0x4f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 003D
        gbc.setState(0x2a09, 0x721, 0xee60, 0x5fe4, 0xdd0c, 0x4719, 0x1, 0x1);
        gbc.writeMem(0x2a09, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x721, gbc.sp());
        EXPECT(0x2a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 003E
        gbc.setState(0xb767, 0xfe0, 0xc4b0, 0x8bc9, 0x6375, 0x521a, 0x1, 0x0);
        gbc.writeMem(0xb767, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfe0, gbc.sp());
        EXPECT(0xb769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb767));
        EXPECT(0xa7, gbc.readMem(0xb768));
        // CB A7 003F
        gbc.setState(0x6fdb, 0x7c8a, 0xf480, 0x6380, 0xbd34, 0xf223, 0x1, 0x1);
        gbc.writeMem(0x6fdb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7c8a, gbc.sp());
        EXPECT(0x6fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0040
        gbc.setState(0x94b5, 0xc6b7, 0xd280, 0x6393, 0xf106, 0x29bc, 0x1, 0x1);
        gbc.writeMem(0x94b5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc6b7, gbc.sp());
        EXPECT(0x94b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b5));
        EXPECT(0xa7, gbc.readMem(0x94b6));
        // CB A7 0042
        gbc.setState(0xa3b6, 0xe69f, 0x4000, 0xd26e, 0x9983, 0x2905, 0x0, 0x1);
        gbc.writeMem(0xa3b6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe69f, gbc.sp());
        EXPECT(0xa3b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b6));
        EXPECT(0xa7, gbc.readMem(0xa3b7));
        // CB A7 0043
        gbc.setState(0x41ec, 0xa124, 0xbaa0, 0xce18, 0x75bf, 0x15f1, 0x1, 0x1);
        gbc.writeMem(0x41ec, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa124, gbc.sp());
        EXPECT(0x41ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0044
        gbc.setState(0x3c54, 0x1577, 0x82e0, 0x8eb6, 0x5f34, 0x96d2, 0x1, 0x1);
        gbc.writeMem(0x3c54, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1577, gbc.sp());
        EXPECT(0x3c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0045
        gbc.setState(0x109e, 0x5a57, 0x1f40, 0xaf8c, 0xc2a0, 0x6930, 0x0, 0x0);
        gbc.writeMem(0x109e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5a57, gbc.sp());
        EXPECT(0x10a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0046
        gbc.setState(0x2306, 0xbf75, 0xde40, 0x34d8, 0x1a03, 0x126e, 0x1, 0x1);
        gbc.writeMem(0x2306, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbf75, gbc.sp());
        EXPECT(0x2308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0048
        gbc.setState(0x1748, 0xabc4, 0x6690, 0x197f, 0x9698, 0x4408, 0x0, 0x1);
        gbc.writeMem(0x1748, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xabc4, gbc.sp());
        EXPECT(0x174a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0049
        gbc.setState(0x56ad, 0x5efc, 0xdfd0, 0x3cd1, 0x1a70, 0xb080, 0x0, 0x1);
        gbc.writeMem(0x56ad, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5efc, gbc.sp());
        EXPECT(0x56af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 004A
        gbc.setState(0x1c9d, 0x43f0, 0xe110, 0xdb17, 0xbd29, 0x90e9, 0x0, 0x0);
        gbc.writeMem(0x1c9d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x43f0, gbc.sp());
        EXPECT(0x1c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 004B
        gbc.setState(0xdc81, 0x22a, 0x5aa0, 0xcdb7, 0xb0cd, 0xc7b6, 0x0, 0x0);
        gbc.writeMem(0xdc81, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x22a, gbc.sp());
        EXPECT(0xdc83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc81));
        EXPECT(0xa7, gbc.readMem(0xdc82));
        // CB A7 004C
        gbc.setState(0xc6c3, 0xb33b, 0xcf20, 0x30c7, 0x7b47, 0xa606, 0x1, 0x0);
        gbc.writeMem(0xc6c3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb33b, gbc.sp());
        EXPECT(0xc6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c3));
        EXPECT(0xa7, gbc.readMem(0xc6c4));
        // CB A7 004D
        gbc.setState(0x5434, 0xbd69, 0xccc0, 0xdde5, 0x448d, 0x69f4, 0x0, 0x0);
        gbc.writeMem(0x5434, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbd69, gbc.sp());
        EXPECT(0x5436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 004E
        gbc.setState(0x4bc4, 0x2333, 0xea90, 0x921, 0xd633, 0x7863, 0x1, 0x0);
        gbc.writeMem(0x4bc4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2333, gbc.sp());
        EXPECT(0x4bc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 004F
        gbc.setState(0x16cd, 0x8ff2, 0x9350, 0x7044, 0x16a3, 0x9a7f, 0x1, 0x0);
        gbc.writeMem(0x16cd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8ff2, gbc.sp());
        EXPECT(0x16cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0050
        gbc.setState(0xb8e6, 0x713, 0xaf20, 0x3d4d, 0x1450, 0xed14, 0x0, 0x0);
        gbc.writeMem(0xb8e6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x713, gbc.sp());
        EXPECT(0xb8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e6));
        EXPECT(0xa7, gbc.readMem(0xb8e7));
        // CB A7 0052
        gbc.setState(0x261a, 0x674f, 0xf5c0, 0xe0c1, 0x8ae9, 0x11f7, 0x0, 0x0);
        gbc.writeMem(0x261a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x674f, gbc.sp());
        EXPECT(0x261c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0053
        gbc.setState(0xa0a8, 0x7cd1, 0x7c00, 0x701e, 0x63a9, 0x6ee0, 0x1, 0x0);
        gbc.writeMem(0xa0a8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7cd1, gbc.sp());
        EXPECT(0xa0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a8));
        EXPECT(0xa7, gbc.readMem(0xa0a9));
        // CB A7 0055
        gbc.setState(0x223c, 0x2c52, 0xfc20, 0xddfb, 0x8022, 0x3729, 0x0, 0x1);
        gbc.writeMem(0x223c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2c52, gbc.sp());
        EXPECT(0x223e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0056
        gbc.setState(0x40d7, 0x9dd7, 0x1230, 0xe786, 0xb0cd, 0x115e, 0x0, 0x1);
        gbc.writeMem(0x40d7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9dd7, gbc.sp());
        EXPECT(0x40d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0057
        gbc.setState(0x990c, 0xc6a4, 0x8590, 0xcaa0, 0x9d69, 0xecfe, 0x1, 0x0);
        gbc.writeMem(0x990c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc6a4, gbc.sp());
        EXPECT(0x990e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990c));
        EXPECT(0xa7, gbc.readMem(0x990d));
        // CB A7 0058
        gbc.setState(0x76d, 0xc5ad, 0xeac0, 0x914a, 0xa1f, 0xfa63, 0x0, 0x0);
        gbc.writeMem(0x76d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc5ad, gbc.sp());
        EXPECT(0x76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 005A
        gbc.setState(0x4d9e, 0x5a96, 0x93f0, 0x18d0, 0x1550, 0x7b16, 0x0, 0x0);
        gbc.writeMem(0x4d9e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5a96, gbc.sp());
        EXPECT(0x4da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 005B
        gbc.setState(0x2109, 0x819d, 0x48b0, 0x416a, 0x96c6, 0x59dc, 0x1, 0x1);
        gbc.writeMem(0x2109, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x819d, gbc.sp());
        EXPECT(0x210b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 005C
        gbc.setState(0xe6c7, 0x2e, 0xcd00, 0x2f5, 0xfc8d, 0xdf27, 0x0, 0x0);
        gbc.writeMem(0xe6c7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2e, gbc.sp());
        EXPECT(0xe6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c7));
        EXPECT(0xa7, gbc.readMem(0xe6c8));
        // CB A7 005E
        gbc.setState(0x25f7, 0x8408, 0x710, 0x3414, 0xcf22, 0x23d3, 0x0, 0x0);
        gbc.writeMem(0x25f7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8408, gbc.sp());
        EXPECT(0x25f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 005F
        gbc.setState(0x162c, 0x9daa, 0x99e0, 0x5b51, 0x39ea, 0xbb20, 0x1, 0x1);
        gbc.writeMem(0x162c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9daa, gbc.sp());
        EXPECT(0x162e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0060
        gbc.setState(0xac7c, 0x3d09, 0x6b60, 0x87bf, 0x6021, 0xbbf2, 0x0, 0x0);
        gbc.writeMem(0xac7c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3d09, gbc.sp());
        EXPECT(0xac7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7c));
        EXPECT(0xa7, gbc.readMem(0xac7d));
        // CB A7 0061
        gbc.setState(0x8039, 0x9109, 0x35f0, 0x2557, 0xf4b0, 0xa7df, 0x1, 0x0);
        gbc.writeMem(0x8039, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0x803b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8039));
        EXPECT(0xa7, gbc.readMem(0x803a));
        // CB A7 0062
        gbc.setState(0x550, 0x17b5, 0xccd0, 0x2d2f, 0xd243, 0xf448, 0x0, 0x0);
        gbc.writeMem(0x550, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x17b5, gbc.sp());
        EXPECT(0x552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0063
        gbc.setState(0x93ed, 0xd92e, 0xd750, 0x4b6c, 0x2d0d, 0xe559, 0x1, 0x0);
        gbc.writeMem(0x93ed, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd92e, gbc.sp());
        EXPECT(0x93ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ed));
        EXPECT(0xa7, gbc.readMem(0x93ee));
        // CB A7 0064
        gbc.setState(0xd43b, 0x7f05, 0xb890, 0xd13f, 0x5713, 0x4dd8, 0x1, 0x0);
        gbc.writeMem(0xd43b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7f05, gbc.sp());
        EXPECT(0xd43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43b));
        EXPECT(0xa7, gbc.readMem(0xd43c));
        // CB A7 0065
        gbc.setState(0xdcb4, 0x23f5, 0xc030, 0x1240, 0xfe55, 0xc06e, 0x0, 0x0);
        gbc.writeMem(0xdcb4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x23f5, gbc.sp());
        EXPECT(0xdcb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb4));
        EXPECT(0xa7, gbc.readMem(0xdcb5));
        // CB A7 0066
        gbc.setState(0x4716, 0xd7c0, 0x37e0, 0x7870, 0x5e85, 0x2316, 0x1, 0x0);
        gbc.writeMem(0x4716, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd7c0, gbc.sp());
        EXPECT(0x4718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0067
        gbc.setState(0x9875, 0x1cff, 0x3380, 0xa1c2, 0xb2ae, 0x5021, 0x1, 0x1);
        gbc.writeMem(0x9875, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1cff, gbc.sp());
        EXPECT(0x9877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9875));
        EXPECT(0xa7, gbc.readMem(0x9876));
        // CB A7 0068
        gbc.setState(0x1e2, 0x8d6b, 0xb330, 0xfd58, 0x7288, 0xb1c3, 0x1, 0x1);
        gbc.writeMem(0x1e2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8d6b, gbc.sp());
        EXPECT(0x1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0069
        gbc.setState(0x173c, 0xc1ec, 0x1850, 0xf907, 0xde75, 0xe0e1, 0x1, 0x0);
        gbc.writeMem(0x173c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc1ec, gbc.sp());
        EXPECT(0x173e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 006A
        gbc.setState(0x8a6b, 0xf3db, 0xab0, 0x3629, 0xc85d, 0x9b67, 0x1, 0x0);
        gbc.writeMem(0x8a6b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf3db, gbc.sp());
        EXPECT(0x8a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6b));
        EXPECT(0xa7, gbc.readMem(0x8a6c));
        // CB A7 006B
        gbc.setState(0x922a, 0xeee6, 0x7ab0, 0x8ade, 0x7929, 0xa706, 0x1, 0x1);
        gbc.writeMem(0x922a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0x922c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922a));
        EXPECT(0xa7, gbc.readMem(0x922b));
        // CB A7 006C
        gbc.setState(0x9adf, 0xa4cb, 0x16d0, 0xba7a, 0x72b7, 0xfe28, 0x0, 0x0);
        gbc.writeMem(0x9adf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa4cb, gbc.sp());
        EXPECT(0x9ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9adf));
        EXPECT(0xa7, gbc.readMem(0x9ae0));
        // CB A7 006D
        gbc.setState(0xbf90, 0x4308, 0xfe00, 0x888f, 0xd740, 0xbdf8, 0x0, 0x0);
        gbc.writeMem(0xbf90, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4308, gbc.sp());
        EXPECT(0xbf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf90));
        EXPECT(0xa7, gbc.readMem(0xbf91));
        // CB A7 006E
        gbc.setState(0xafbf, 0xe170, 0xebe0, 0xad4f, 0xb4db, 0x125, 0x0, 0x0);
        gbc.writeMem(0xafbf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe170, gbc.sp());
        EXPECT(0xafc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafbf));
        EXPECT(0xa7, gbc.readMem(0xafc0));
        // CB A7 006F
        gbc.setState(0xdb9b, 0x865b, 0xdad0, 0x7186, 0x73c9, 0xafb1, 0x0, 0x1);
        gbc.writeMem(0xdb9b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x865b, gbc.sp());
        EXPECT(0xdb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9b));
        EXPECT(0xa7, gbc.readMem(0xdb9c));
        // CB A7 0070
        gbc.setState(0xe38c, 0x9ae6, 0x96c0, 0x5451, 0xd904, 0x97b3, 0x0, 0x0);
        gbc.writeMem(0xe38c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9ae6, gbc.sp());
        EXPECT(0xe38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38c));
        EXPECT(0xa7, gbc.readMem(0xe38d));
        // CB A7 0071
        gbc.setState(0x9220, 0xbb37, 0xf70, 0xd260, 0x1bce, 0xc129, 0x0, 0x1);
        gbc.writeMem(0x9220, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbb37, gbc.sp());
        EXPECT(0x9222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9220));
        EXPECT(0xa7, gbc.readMem(0x9221));
        // CB A7 0072
        gbc.setState(0xcc0d, 0xd0fe, 0x16f0, 0x9c5b, 0x893d, 0x7971, 0x1, 0x1);
        gbc.writeMem(0xcc0d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd0fe, gbc.sp());
        EXPECT(0xcc0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0d));
        EXPECT(0xa7, gbc.readMem(0xcc0e));
        // CB A7 0073
        gbc.setState(0xd3b2, 0xc911, 0xb090, 0x6027, 0xa68a, 0x6106, 0x1, 0x1);
        gbc.writeMem(0xd3b2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc911, gbc.sp());
        EXPECT(0xd3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b2));
        EXPECT(0xa7, gbc.readMem(0xd3b3));
        // CB A7 0074
        gbc.setState(0x483e, 0xcc79, 0xc560, 0x8cde, 0xe714, 0x88d9, 0x1, 0x1);
        gbc.writeMem(0x483e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcc79, gbc.sp());
        EXPECT(0x4840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0075
        gbc.setState(0x35d5, 0x5cd2, 0xece0, 0xd8b, 0x7820, 0x5495, 0x0, 0x1);
        gbc.writeMem(0x35d5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5cd2, gbc.sp());
        EXPECT(0x35d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0076
        gbc.setState(0xb8a7, 0x4cb3, 0xeb00, 0x433d, 0x19, 0xf289, 0x0, 0x1);
        gbc.writeMem(0xb8a7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4cb3, gbc.sp());
        EXPECT(0xb8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a7));
        EXPECT(0xa7, gbc.readMem(0xb8a8));
        // CB A7 0077
        gbc.setState(0xeb07, 0xf565, 0x620, 0x239, 0x6c5b, 0xe008, 0x0, 0x1);
        gbc.writeMem(0xeb07, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf565, gbc.sp());
        EXPECT(0xeb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb07));
        EXPECT(0xa7, gbc.readMem(0xeb08));
        // CB A7 0078
        gbc.setState(0x8510, 0x4862, 0x5b60, 0x15b5, 0x59e3, 0xab1b, 0x0, 0x0);
        gbc.writeMem(0x8510, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4862, gbc.sp());
        EXPECT(0x8512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8510));
        EXPECT(0xa7, gbc.readMem(0x8511));
        // CB A7 0079
        gbc.setState(0x236, 0xdd1d, 0x3620, 0xb761, 0xa38e, 0x853d, 0x0, 0x1);
        gbc.writeMem(0x236, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdd1d, gbc.sp());
        EXPECT(0x238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 007A
        gbc.setState(0xd757, 0x9591, 0x7640, 0x2159, 0x576b, 0x67d3, 0x0, 0x1);
        gbc.writeMem(0xd757, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9591, gbc.sp());
        EXPECT(0xd759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd757));
        EXPECT(0xa7, gbc.readMem(0xd758));
        // CB A7 007B
        gbc.setState(0x85e1, 0x4deb, 0xcc50, 0xaaf8, 0xda16, 0x6c55, 0x1, 0x1);
        gbc.writeMem(0x85e1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4deb, gbc.sp());
        EXPECT(0x85e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e1));
        EXPECT(0xa7, gbc.readMem(0x85e2));
        // CB A7 007C
        gbc.setState(0x50eb, 0x9d86, 0x57d0, 0x9a97, 0xdd57, 0x625a, 0x0, 0x1);
        gbc.writeMem(0x50eb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9d86, gbc.sp());
        EXPECT(0x50ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 007D
        gbc.setState(0x448c, 0xd04b, 0x8f00, 0xa859, 0x2fb8, 0x6858, 0x0, 0x1);
        gbc.writeMem(0x448c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd04b, gbc.sp());
        EXPECT(0x448e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 007E
        gbc.setState(0xa344, 0xce05, 0xdaa0, 0x859d, 0x47, 0x69da, 0x0, 0x1);
        gbc.writeMem(0xa344, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xce05, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa344));
        EXPECT(0xa7, gbc.readMem(0xa345));
        // CB A7 007F
        gbc.setState(0xc6e1, 0xf576, 0x85e0, 0xa452, 0x76f5, 0x2be2, 0x0, 0x1);
        gbc.writeMem(0xc6e1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf576, gbc.sp());
        EXPECT(0xc6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e1));
        EXPECT(0xa7, gbc.readMem(0xc6e2));
        // CB A7 0080
        gbc.setState(0x67c6, 0x6812, 0x8ab0, 0xa05b, 0xceb4, 0x25b3, 0x0, 0x0);
        gbc.writeMem(0x67c6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6812, gbc.sp());
        EXPECT(0x67c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0081
        gbc.setState(0x3ca1, 0x912a, 0x32c0, 0xd411, 0x2c9c, 0x5e2, 0x0, 0x1);
        gbc.writeMem(0x3ca1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x912a, gbc.sp());
        EXPECT(0x3ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0082
        gbc.setState(0x8867, 0xdead, 0xd250, 0x44df, 0x67eb, 0xdd46, 0x1, 0x0);
        gbc.writeMem(0x8867, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdead, gbc.sp());
        EXPECT(0x8869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8867));
        EXPECT(0xa7, gbc.readMem(0x8868));
        // CB A7 0083
        gbc.setState(0x8026, 0x5712, 0xeed0, 0x76af, 0xa800, 0xb964, 0x1, 0x0);
        gbc.writeMem(0x8026, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5712, gbc.sp());
        EXPECT(0x8028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8026));
        EXPECT(0xa7, gbc.readMem(0x8027));
        // CB A7 0085
        gbc.setState(0x144, 0x5395, 0x37f0, 0x8be8, 0xe57a, 0x59d4, 0x1, 0x1);
        gbc.writeMem(0x144, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5395, gbc.sp());
        EXPECT(0x146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0086
        gbc.setState(0xbe64, 0xf10e, 0x6730, 0xe0ff, 0xdc0d, 0xb6ff, 0x0, 0x0);
        gbc.writeMem(0xbe64, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf10e, gbc.sp());
        EXPECT(0xbe66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe64));
        EXPECT(0xa7, gbc.readMem(0xbe65));
        // CB A7 0087
        gbc.setState(0x59b1, 0x98fa, 0x42b0, 0x3722, 0x1d12, 0x3ab6, 0x0, 0x0);
        gbc.writeMem(0x59b1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x98fa, gbc.sp());
        EXPECT(0x59b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0088
        gbc.setState(0xd3b2, 0xcd3a, 0xe370, 0xf67d, 0x4c02, 0x2865, 0x1, 0x0);
        gbc.writeMem(0xd3b2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcd3a, gbc.sp());
        EXPECT(0xd3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b2));
        EXPECT(0xa7, gbc.readMem(0xd3b3));
        // CB A7 0089
        gbc.setState(0xc929, 0x9f4f, 0xf320, 0xd769, 0x9e9d, 0x9f26, 0x0, 0x1);
        gbc.writeMem(0xc929, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9f4f, gbc.sp());
        EXPECT(0xc92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc929));
        EXPECT(0xa7, gbc.readMem(0xc92a));
        // CB A7 008A
        gbc.setState(0x4d1c, 0xc31d, 0xb5b0, 0xb0c3, 0x4e31, 0x8d22, 0x1, 0x0);
        gbc.writeMem(0x4d1c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc31d, gbc.sp());
        EXPECT(0x4d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 008B
        gbc.setState(0x84a3, 0xb4e3, 0xc8c0, 0xbb10, 0x3531, 0xdfa, 0x1, 0x1);
        gbc.writeMem(0x84a3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb4e3, gbc.sp());
        EXPECT(0x84a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a3));
        EXPECT(0xa7, gbc.readMem(0x84a4));
        // CB A7 008C
        gbc.setState(0x940b, 0x89be, 0x8660, 0xda86, 0xf6d4, 0x267f, 0x0, 0x1);
        gbc.writeMem(0x940b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x89be, gbc.sp());
        EXPECT(0x940d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940b));
        EXPECT(0xa7, gbc.readMem(0x940c));
        // CB A7 008D
        gbc.setState(0x119b, 0xd6ab, 0x93b0, 0x6c9a, 0x1c14, 0x1640, 0x0, 0x1);
        gbc.writeMem(0x119b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd6ab, gbc.sp());
        EXPECT(0x119d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 008E
        gbc.setState(0x9b94, 0xb8c6, 0xa590, 0x5d69, 0x877, 0x40b9, 0x0, 0x0);
        gbc.writeMem(0x9b94, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb8c6, gbc.sp());
        EXPECT(0x9b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b94));
        EXPECT(0xa7, gbc.readMem(0x9b95));
        // CB A7 008F
        gbc.setState(0xc996, 0xf32, 0xe1b0, 0xad98, 0xa109, 0x6ec1, 0x1, 0x0);
        gbc.writeMem(0xc996, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf32, gbc.sp());
        EXPECT(0xc998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc996));
        EXPECT(0xa7, gbc.readMem(0xc997));
        // CB A7 0090
        gbc.setState(0xcb4c, 0x8a28, 0x22d0, 0x5908, 0x45f1, 0xc9b, 0x0, 0x0);
        gbc.writeMem(0xcb4c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8a28, gbc.sp());
        EXPECT(0xcb4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4c));
        EXPECT(0xa7, gbc.readMem(0xcb4d));
        // CB A7 0091
        gbc.setState(0xc87c, 0x9473, 0x4820, 0x83fe, 0x5e10, 0x49f1, 0x0, 0x1);
        gbc.writeMem(0xc87c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9473, gbc.sp());
        EXPECT(0xc87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87c));
        EXPECT(0xa7, gbc.readMem(0xc87d));
        // CB A7 0092
        gbc.setState(0xaa24, 0xda, 0x8b80, 0x8658, 0xc231, 0x42c, 0x0, 0x0);
        gbc.writeMem(0xaa24, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xda, gbc.sp());
        EXPECT(0xaa26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa24));
        EXPECT(0xa7, gbc.readMem(0xaa25));
        // CB A7 0093
        gbc.setState(0x3c86, 0xdaad, 0x31c0, 0x6a54, 0xd050, 0xc6f5, 0x0, 0x0);
        gbc.writeMem(0x3c86, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdaad, gbc.sp());
        EXPECT(0x3c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0094
        gbc.setState(0x6b0d, 0x2705, 0x4fa0, 0x7a7a, 0xb7ca, 0xc4, 0x1, 0x0);
        gbc.writeMem(0x6b0d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2705, gbc.sp());
        EXPECT(0x6b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0095
        gbc.setState(0x240b, 0xe0b0, 0x5710, 0x2af2, 0x71d7, 0xdb36, 0x1, 0x1);
        gbc.writeMem(0x240b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe0b0, gbc.sp());
        EXPECT(0x240d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0096
        gbc.setState(0x683a, 0xfc77, 0x4810, 0xa4cd, 0x6c58, 0xb57a, 0x0, 0x1);
        gbc.writeMem(0x683a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfc77, gbc.sp());
        EXPECT(0x683c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0097
        gbc.setState(0x4513, 0x2bf0, 0xc140, 0x2d2d, 0x16de, 0xf50e, 0x1, 0x0);
        gbc.writeMem(0x4513, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2bf0, gbc.sp());
        EXPECT(0x4515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0098
        gbc.setState(0xabd4, 0xd55e, 0x4740, 0x6e45, 0x571f, 0x8ea7, 0x1, 0x0);
        gbc.writeMem(0xabd4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd55e, gbc.sp());
        EXPECT(0xabd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd4));
        EXPECT(0xa7, gbc.readMem(0xabd5));
        // CB A7 0099
        gbc.setState(0xcef5, 0x765a, 0xfc80, 0xadd5, 0x3a, 0x4edb, 0x1, 0x1);
        gbc.writeMem(0xcef5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x765a, gbc.sp());
        EXPECT(0xcef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef5));
        EXPECT(0xa7, gbc.readMem(0xcef6));
        // CB A7 009A
        gbc.setState(0x3184, 0x5217, 0xdb30, 0xabbc, 0x77eb, 0x25e, 0x0, 0x0);
        gbc.writeMem(0x3184, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5217, gbc.sp());
        EXPECT(0x3186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 009C
        gbc.setState(0x853, 0xce21, 0x7110, 0xf5eb, 0xc3cd, 0x3621, 0x1, 0x1);
        gbc.writeMem(0x853, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xce21, gbc.sp());
        EXPECT(0x855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 009D
        gbc.setState(0xb6a, 0x11c4, 0x1060, 0x49c8, 0x12c6, 0x7bca, 0x0, 0x1);
        gbc.writeMem(0xb6a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x11c4, gbc.sp());
        EXPECT(0xb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 009E
        gbc.setState(0x34bd, 0xfabe, 0x6750, 0x1887, 0xdb96, 0xed72, 0x0, 0x0);
        gbc.writeMem(0x34bd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfabe, gbc.sp());
        EXPECT(0x34bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 009F
        gbc.setState(0x38a9, 0xf512, 0x5e60, 0x44fb, 0x498c, 0xa5a0, 0x0, 0x1);
        gbc.writeMem(0x38a9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf512, gbc.sp());
        EXPECT(0x38ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00A1
        gbc.setState(0xe28a, 0x1bbf, 0x6920, 0x38fa, 0x3015, 0x46ed, 0x1, 0x0);
        gbc.writeMem(0xe28a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1bbf, gbc.sp());
        EXPECT(0xe28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28a));
        EXPECT(0xa7, gbc.readMem(0xe28b));
        // CB A7 00A3
        gbc.setState(0x6c6b, 0xabd0, 0xa9f0, 0xa047, 0x1dd4, 0x58ff, 0x0, 0x0);
        gbc.writeMem(0x6c6b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xabd0, gbc.sp());
        EXPECT(0x6c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00A4
        gbc.setState(0xef50, 0x28e8, 0xce80, 0xdb18, 0xa27f, 0x7482, 0x1, 0x0);
        gbc.writeMem(0xef50, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x28e8, gbc.sp());
        EXPECT(0xef52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef50));
        EXPECT(0xa7, gbc.readMem(0xef51));
        // CB A7 00A5
        gbc.setState(0xcdb4, 0x8314, 0x2d20, 0x1741, 0x6951, 0x5cd7, 0x0, 0x1);
        gbc.writeMem(0xcdb4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0xcdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb4));
        EXPECT(0xa7, gbc.readMem(0xcdb5));
        // CB A7 00A6
        gbc.setState(0x148e, 0x8390, 0x7c50, 0x3b29, 0x203e, 0x9524, 0x0, 0x0);
        gbc.writeMem(0x148e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8390, gbc.sp());
        EXPECT(0x1490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00A7
        gbc.setState(0xd99f, 0xff08, 0xa280, 0xb4c4, 0xc73b, 0xb640, 0x0, 0x1);
        gbc.writeMem(0xd99f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0xd9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99f));
        EXPECT(0xa7, gbc.readMem(0xd9a0));
        // CB A7 00A8
        gbc.setState(0xa2fe, 0xc6b3, 0xd790, 0x3264, 0xf2c7, 0x264a, 0x0, 0x0);
        gbc.writeMem(0xa2fe, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc6b3, gbc.sp());
        EXPECT(0xa300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fe));
        EXPECT(0xa7, gbc.readMem(0xa2ff));
        // CB A7 00AA
        gbc.setState(0x1d93, 0xf7d0, 0xd7a0, 0xd407, 0x3348, 0x90b1, 0x0, 0x1);
        gbc.writeMem(0x1d93, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf7d0, gbc.sp());
        EXPECT(0x1d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00AB
        gbc.setState(0x465a, 0x6136, 0x7ef0, 0x3d36, 0x55a6, 0x4929, 0x1, 0x0);
        gbc.writeMem(0x465a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6136, gbc.sp());
        EXPECT(0x465c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00AC
        gbc.setState(0x3e9c, 0x2d37, 0xc0f0, 0x84c7, 0x467d, 0xbe25, 0x0, 0x0);
        gbc.writeMem(0x3e9c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2d37, gbc.sp());
        EXPECT(0x3e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00AE
        gbc.setState(0x1bf8, 0x75a7, 0xfde0, 0xc312, 0x7bed, 0xd0a4, 0x1, 0x0);
        gbc.writeMem(0x1bf8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x75a7, gbc.sp());
        EXPECT(0x1bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00AF
        gbc.setState(0x877e, 0xee0b, 0x9010, 0x1ec7, 0x2090, 0xaa5e, 0x0, 0x1);
        gbc.writeMem(0x877e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xee0b, gbc.sp());
        EXPECT(0x8780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x877e));
        EXPECT(0xa7, gbc.readMem(0x877f));
        // CB A7 00B0
        gbc.setState(0x4f0e, 0xabff, 0x1570, 0xe7b8, 0x6c4f, 0xd1be, 0x1, 0x1);
        gbc.writeMem(0x4f0e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xabff, gbc.sp());
        EXPECT(0x4f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00B1
        gbc.setState(0x4ee2, 0x93d3, 0xa110, 0xf9e2, 0x3937, 0x36b7, 0x0, 0x0);
        gbc.writeMem(0x4ee2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x93d3, gbc.sp());
        EXPECT(0x4ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00B2
        gbc.setState(0x6c50, 0x16, 0x5840, 0x1b33, 0x220c, 0x63f5, 0x0, 0x1);
        gbc.writeMem(0x6c50, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x16, gbc.sp());
        EXPECT(0x6c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00B3
        gbc.setState(0x3c36, 0x217f, 0x1a60, 0x107e, 0xb8ab, 0xbef2, 0x0, 0x0);
        gbc.writeMem(0x3c36, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x217f, gbc.sp());
        EXPECT(0x3c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00B4
        gbc.setState(0xb818, 0x78f3, 0x83e0, 0x119e, 0xd8a, 0x3584, 0x1, 0x1);
        gbc.writeMem(0xb818, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x78f3, gbc.sp());
        EXPECT(0xb81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb818));
        EXPECT(0xa7, gbc.readMem(0xb819));
        // CB A7 00B5
        gbc.setState(0x5d68, 0x2c22, 0xeae0, 0x2054, 0xa819, 0x9689, 0x0, 0x1);
        gbc.writeMem(0x5d68, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2c22, gbc.sp());
        EXPECT(0x5d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00B6
        gbc.setState(0xad18, 0x8f4, 0x9590, 0x10a7, 0xfaa2, 0x2b5f, 0x1, 0x0);
        gbc.writeMem(0xad18, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8f4, gbc.sp());
        EXPECT(0xad1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad18));
        EXPECT(0xa7, gbc.readMem(0xad19));
        // CB A7 00B7
        gbc.setState(0xc476, 0x3fed, 0x2fd0, 0x9e53, 0x8609, 0x86a9, 0x0, 0x1);
        gbc.writeMem(0xc476, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3fed, gbc.sp());
        EXPECT(0xc478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc476));
        EXPECT(0xa7, gbc.readMem(0xc477));
        // CB A7 00B8
        gbc.setState(0xd446, 0xbbdd, 0x18e0, 0xf906, 0x1534, 0x8c1a, 0x1, 0x0);
        gbc.writeMem(0xd446, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbbdd, gbc.sp());
        EXPECT(0xd448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd446));
        EXPECT(0xa7, gbc.readMem(0xd447));
        // CB A7 00B9
        gbc.setState(0x2e24, 0x2211, 0x7d70, 0x145, 0x9951, 0xf416, 0x1, 0x1);
        gbc.writeMem(0x2e24, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2211, gbc.sp());
        EXPECT(0x2e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00BA
        gbc.setState(0x564f, 0xd2a0, 0x7b50, 0x356d, 0xcba1, 0xdbab, 0x0, 0x1);
        gbc.writeMem(0x564f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd2a0, gbc.sp());
        EXPECT(0x5651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00BB
        gbc.setState(0xe91e, 0xfc6d, 0x6b0, 0x90ea, 0x696b, 0x4468, 0x0, 0x0);
        gbc.writeMem(0xe91e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfc6d, gbc.sp());
        EXPECT(0xe920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91e));
        EXPECT(0xa7, gbc.readMem(0xe91f));
        // CB A7 00BC
        gbc.setState(0x252b, 0xf17c, 0xca60, 0x3c5c, 0x7deb, 0xa623, 0x0, 0x1);
        gbc.writeMem(0x252b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf17c, gbc.sp());
        EXPECT(0x252d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00BD
        gbc.setState(0x200c, 0xfddc, 0x6090, 0xe545, 0x8c44, 0x339a, 0x0, 0x0);
        gbc.writeMem(0x200c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfddc, gbc.sp());
        EXPECT(0x200e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00BE
        gbc.setState(0x694d, 0x71a, 0xcbf0, 0xd151, 0x1a9c, 0x9833, 0x1, 0x1);
        gbc.writeMem(0x694d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x71a, gbc.sp());
        EXPECT(0x694f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00BF
        gbc.setState(0x5010, 0x1f30, 0xafa0, 0xa589, 0x1621, 0xc434, 0x1, 0x1);
        gbc.writeMem(0x5010, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1f30, gbc.sp());
        EXPECT(0x5012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00C0
        gbc.setState(0xefdb, 0xeaa9, 0x11b0, 0xcbdd, 0x3cf9, 0x7db, 0x1, 0x1);
        gbc.writeMem(0xefdb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xeaa9, gbc.sp());
        EXPECT(0xefdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefdb));
        EXPECT(0xa7, gbc.readMem(0xefdc));
        // CB A7 00C1
        gbc.setState(0xdb3f, 0xc38a, 0xc980, 0x7530, 0x9973, 0xfba5, 0x0, 0x1);
        gbc.writeMem(0xdb3f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc38a, gbc.sp());
        EXPECT(0xdb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3f));
        EXPECT(0xa7, gbc.readMem(0xdb40));
        // CB A7 00C2
        gbc.setState(0x44a7, 0xf5e, 0x7160, 0x835b, 0xfa65, 0x1fba, 0x0, 0x1);
        gbc.writeMem(0x44a7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf5e, gbc.sp());
        EXPECT(0x44a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00C3
        gbc.setState(0xdfd7, 0xc379, 0x2d00, 0x3473, 0x2a26, 0x1e0d, 0x1, 0x1);
        gbc.writeMem(0xdfd7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc379, gbc.sp());
        EXPECT(0xdfd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd7));
        EXPECT(0xa7, gbc.readMem(0xdfd8));
        // CB A7 00C4
        gbc.setState(0x1ca7, 0xd17e, 0xd80, 0x153d, 0xd1e4, 0x9bf6, 0x1, 0x1);
        gbc.writeMem(0x1ca7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd17e, gbc.sp());
        EXPECT(0x1ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00C6
        gbc.setState(0x7072, 0x6021, 0x3530, 0x814, 0x98f9, 0x2227, 0x0, 0x1);
        gbc.writeMem(0x7072, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6021, gbc.sp());
        EXPECT(0x7074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00C7
        gbc.setState(0x2a48, 0x1f, 0xe820, 0x4162, 0xdcfa, 0x1871, 0x1, 0x1);
        gbc.writeMem(0x2a48, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1f, gbc.sp());
        EXPECT(0x2a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00C8
        gbc.setState(0xd371, 0xa1b3, 0xda70, 0xe7cf, 0xa222, 0xd24, 0x0, 0x1);
        gbc.writeMem(0xd371, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa1b3, gbc.sp());
        EXPECT(0xd373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd371));
        EXPECT(0xa7, gbc.readMem(0xd372));
        // CB A7 00C9
        gbc.setState(0x6498, 0xd1a3, 0x31a0, 0xe13b, 0xecf3, 0x132a, 0x1, 0x0);
        gbc.writeMem(0x6498, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd1a3, gbc.sp());
        EXPECT(0x649a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00CA
        gbc.setState(0x3002, 0x1f2d, 0x6ec0, 0x7ff2, 0xacc, 0xc632, 0x1, 0x0);
        gbc.writeMem(0x3002, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1f2d, gbc.sp());
        EXPECT(0x3004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00CB
        gbc.setState(0x6ac2, 0xe04c, 0x3210, 0x125d, 0xbedd, 0x508b, 0x1, 0x1);
        gbc.writeMem(0x6ac2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe04c, gbc.sp());
        EXPECT(0x6ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00CC
        gbc.setState(0x212c, 0x3f33, 0x550, 0xe710, 0x5654, 0x8ad, 0x0, 0x0);
        gbc.writeMem(0x212c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3f33, gbc.sp());
        EXPECT(0x212e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00CD
        gbc.setState(0xcc27, 0x3702, 0x79f0, 0x68ec, 0x1e09, 0x456e, 0x1, 0x0);
        gbc.writeMem(0xcc27, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3702, gbc.sp());
        EXPECT(0xcc29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc27));
        EXPECT(0xa7, gbc.readMem(0xcc28));
        // CB A7 00CE
        gbc.setState(0x664b, 0x556e, 0x6b30, 0x3670, 0x836f, 0xce26, 0x0, 0x1);
        gbc.writeMem(0x664b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x556e, gbc.sp());
        EXPECT(0x664d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00CF
        gbc.setState(0xdf85, 0xcaed, 0x7fb0, 0x6708, 0x411a, 0xc427, 0x0, 0x1);
        gbc.writeMem(0xdf85, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcaed, gbc.sp());
        EXPECT(0xdf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf85));
        EXPECT(0xa7, gbc.readMem(0xdf86));
        // CB A7 00D1
        gbc.setState(0xae97, 0x38ae, 0x3490, 0x6e24, 0xff5c, 0xa143, 0x0, 0x0);
        gbc.writeMem(0xae97, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x38ae, gbc.sp());
        EXPECT(0xae99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae97));
        EXPECT(0xa7, gbc.readMem(0xae98));
        // CB A7 00D2
        gbc.setState(0x54a1, 0xe853, 0xe0, 0xf0cd, 0x1915, 0xfaca, 0x0, 0x1);
        gbc.writeMem(0x54a1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe853, gbc.sp());
        EXPECT(0x54a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00D5
        gbc.setState(0xcf7e, 0x19df, 0xeaf0, 0x897e, 0xa502, 0x57b7, 0x0, 0x1);
        gbc.writeMem(0xcf7e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x19df, gbc.sp());
        EXPECT(0xcf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7e));
        EXPECT(0xa7, gbc.readMem(0xcf7f));
        // CB A7 00D6
        gbc.setState(0x1b5c, 0x1885, 0x4570, 0xef1c, 0xa175, 0x7658, 0x1, 0x0);
        gbc.writeMem(0x1b5c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1885, gbc.sp());
        EXPECT(0x1b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00D7
        gbc.setState(0xcd07, 0x3871, 0x1df0, 0xc99d, 0x7f21, 0x713d, 0x0, 0x1);
        gbc.writeMem(0xcd07, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3871, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd07));
        EXPECT(0xa7, gbc.readMem(0xcd08));
        // CB A7 00D8
        gbc.setState(0xe93a, 0x81e5, 0x8f20, 0xe005, 0xb2e8, 0x6b9a, 0x1, 0x1);
        gbc.writeMem(0xe93a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x81e5, gbc.sp());
        EXPECT(0xe93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe93a));
        EXPECT(0xa7, gbc.readMem(0xe93b));
        // CB A7 00D9
        gbc.setState(0x93c5, 0xc810, 0x890, 0x45ea, 0xcb08, 0x69ce, 0x1, 0x1);
        gbc.writeMem(0x93c5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc810, gbc.sp());
        EXPECT(0x93c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c5));
        EXPECT(0xa7, gbc.readMem(0x93c6));
        // CB A7 00DA
        gbc.setState(0xd33b, 0x5b7d, 0x4f00, 0x9b74, 0xf5ed, 0x5dec, 0x0, 0x1);
        gbc.writeMem(0xd33b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5b7d, gbc.sp());
        EXPECT(0xd33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33b));
        EXPECT(0xa7, gbc.readMem(0xd33c));
        // CB A7 00DB
        gbc.setState(0x6439, 0x9190, 0xded0, 0x889e, 0xf2ff, 0xa91c, 0x1, 0x1);
        gbc.writeMem(0x6439, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9190, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00DC
        gbc.setState(0x6d62, 0xd6a4, 0xa790, 0xb327, 0x81b4, 0xa6b7, 0x0, 0x0);
        gbc.writeMem(0x6d62, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd6a4, gbc.sp());
        EXPECT(0x6d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00DD
        gbc.setState(0xa38, 0x5950, 0x98f0, 0x9a3c, 0xc2c2, 0x563a, 0x0, 0x0);
        gbc.writeMem(0xa38, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5950, gbc.sp());
        EXPECT(0xa3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00DE
        gbc.setState(0x4634, 0x4d41, 0xb960, 0x5a0e, 0x325f, 0x6141, 0x1, 0x1);
        gbc.writeMem(0x4634, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4d41, gbc.sp());
        EXPECT(0x4636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00DF
        gbc.setState(0xa560, 0x9f90, 0x8780, 0x6d17, 0x2512, 0x7b4f, 0x1, 0x0);
        gbc.writeMem(0xa560, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9f90, gbc.sp());
        EXPECT(0xa562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa560));
        EXPECT(0xa7, gbc.readMem(0xa561));
        // CB A7 00E0
        gbc.setState(0xe7a8, 0xbefd, 0xf080, 0xadd3, 0xe48d, 0x10dc, 0x1, 0x0);
        gbc.writeMem(0xe7a8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbefd, gbc.sp());
        EXPECT(0xe7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a8));
        EXPECT(0xa7, gbc.readMem(0xe7a9));
        // CB A7 00E1
        gbc.setState(0xb2ff, 0xf57d, 0xc340, 0x9981, 0xe32b, 0x89a8, 0x1, 0x0);
        gbc.writeMem(0xb2ff, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf57d, gbc.sp());
        EXPECT(0xb301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ff));
        EXPECT(0xa7, gbc.readMem(0xb300));
        // CB A7 00E2
        gbc.setState(0x4276, 0xae5d, 0xcce0, 0x412f, 0x7114, 0xa203, 0x0, 0x1);
        gbc.writeMem(0x4276, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xae5d, gbc.sp());
        EXPECT(0x4278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00E4
        gbc.setState(0x719c, 0xc354, 0x1ab0, 0xc1cb, 0x51f2, 0x38c4, 0x0, 0x0);
        gbc.writeMem(0x719c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc354, gbc.sp());
        EXPECT(0x719e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00E5
        gbc.setState(0x446a, 0xbc9f, 0x4f50, 0x8f09, 0xaa1, 0x3da7, 0x1, 0x0);
        gbc.writeMem(0x446a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbc9f, gbc.sp());
        EXPECT(0x446c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00E6
        gbc.setState(0x605e, 0x8e4d, 0x5a30, 0x836d, 0x5fd7, 0x1997, 0x0, 0x1);
        gbc.writeMem(0x605e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8e4d, gbc.sp());
        EXPECT(0x6060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00E7
        gbc.setState(0xe275, 0x1118, 0x62e0, 0xb177, 0x219f, 0x9a3b, 0x1, 0x1);
        gbc.writeMem(0xe275, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1118, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe275));
        EXPECT(0xa7, gbc.readMem(0xe276));
        // CB A7 00E8
        gbc.setState(0x4b35, 0xd83a, 0x1cb0, 0x1659, 0x84ac, 0xf0bf, 0x0, 0x1);
        gbc.writeMem(0x4b35, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd83a, gbc.sp());
        EXPECT(0x4b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00E9
        gbc.setState(0xee3a, 0x2966, 0xfb00, 0x75b6, 0x710, 0x9d3, 0x1, 0x0);
        gbc.writeMem(0xee3a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2966, gbc.sp());
        EXPECT(0xee3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3a));
        EXPECT(0xa7, gbc.readMem(0xee3b));
        // CB A7 00EA
        gbc.setState(0x7083, 0xf031, 0xb9e0, 0x17ac, 0x4305, 0x4d05, 0x1, 0x1);
        gbc.writeMem(0x7083, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf031, gbc.sp());
        EXPECT(0x7085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00EB
        gbc.setState(0xe5a9, 0xaea5, 0x9f80, 0x83ef, 0xc9ad, 0x177d, 0x0, 0x0);
        gbc.writeMem(0xe5a9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaea5, gbc.sp());
        EXPECT(0xe5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a9));
        EXPECT(0xa7, gbc.readMem(0xe5aa));
        // CB A7 00ED
        gbc.setState(0x2df0, 0xaf12, 0x5fc0, 0x1af0, 0x82a3, 0xaa7e, 0x1, 0x0);
        gbc.writeMem(0x2df0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaf12, gbc.sp());
        EXPECT(0x2df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00EE
        gbc.setState(0x7a2a, 0x142d, 0xc090, 0xaafe, 0x462c, 0x86c4, 0x0, 0x0);
        gbc.writeMem(0x7a2a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x142d, gbc.sp());
        EXPECT(0x7a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00EF
        gbc.setState(0x6a10, 0x9772, 0x4490, 0x9971, 0x7cc4, 0x6a11, 0x0, 0x0);
        gbc.writeMem(0x6a10, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9772, gbc.sp());
        EXPECT(0x6a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00F1
        gbc.setState(0xae75, 0x60fd, 0x51f0, 0x43ff, 0x81c5, 0xa2a1, 0x1, 0x0);
        gbc.writeMem(0xae75, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x60fd, gbc.sp());
        EXPECT(0xae77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae75));
        EXPECT(0xa7, gbc.readMem(0xae76));
        // CB A7 00F2
        gbc.setState(0xdd25, 0x5fd0, 0x9ac0, 0xddb6, 0x4e6e, 0x6fcd, 0x1, 0x0);
        gbc.writeMem(0xdd25, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5fd0, gbc.sp());
        EXPECT(0xdd27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd25));
        EXPECT(0xa7, gbc.readMem(0xdd26));
        // CB A7 00F3
        gbc.setState(0xcd1f, 0xec28, 0x65f0, 0x83d2, 0x7c27, 0xb4bb, 0x0, 0x1);
        gbc.writeMem(0xcd1f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xec28, gbc.sp());
        EXPECT(0xcd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1f));
        EXPECT(0xa7, gbc.readMem(0xcd20));
        // CB A7 00F4
        gbc.setState(0x752f, 0xcba4, 0xf150, 0x631a, 0x6c23, 0x3c2, 0x1, 0x0);
        gbc.writeMem(0x752f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcba4, gbc.sp());
        EXPECT(0x7531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00F5
        gbc.setState(0x3faf, 0xa0bd, 0xecf0, 0xecc3, 0x1a0b, 0x203d, 0x1, 0x0);
        gbc.writeMem(0x3faf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa0bd, gbc.sp());
        EXPECT(0x3fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00F7
        gbc.setState(0xbe31, 0xcb40, 0xe120, 0x15c0, 0x4251, 0x8b5b, 0x1, 0x0);
        gbc.writeMem(0xbe31, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcb40, gbc.sp());
        EXPECT(0xbe33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe31));
        EXPECT(0xa7, gbc.readMem(0xbe32));
        // CB A7 00F8
        gbc.setState(0xd2d2, 0xdc7b, 0xc3a0, 0x89e7, 0x2fcf, 0x3e16, 0x1, 0x1);
        gbc.writeMem(0xd2d2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdc7b, gbc.sp());
        EXPECT(0xd2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d2));
        EXPECT(0xa7, gbc.readMem(0xd2d3));
        // CB A7 00F9
        gbc.setState(0x72ea, 0x3e20, 0xb600, 0x226b, 0xd1fc, 0xc5dd, 0x0, 0x1);
        gbc.writeMem(0x72ea, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3e20, gbc.sp());
        EXPECT(0x72ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00FA
        gbc.setState(0x69f1, 0x466c, 0xc4a0, 0x1abc, 0xdccf, 0xc21, 0x0, 0x0);
        gbc.writeMem(0x69f1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x466c, gbc.sp());
        EXPECT(0x69f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00FB
        gbc.setState(0xdfc8, 0x2d08, 0x2090, 0xe373, 0x3f6a, 0x1f7f, 0x1, 0x0);
        gbc.writeMem(0xdfc8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2d08, gbc.sp());
        EXPECT(0xdfca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc8));
        EXPECT(0xa7, gbc.readMem(0xdfc9));
        // CB A7 00FC
        gbc.setState(0x4d48, 0xdeb0, 0x3540, 0xb6df, 0x78e2, 0x1884, 0x0, 0x0);
        gbc.writeMem(0x4d48, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdeb0, gbc.sp());
        EXPECT(0x4d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00FD
        gbc.setState(0x59e6, 0x9514, 0xc6b0, 0x50e0, 0x5646, 0x6db1, 0x1, 0x1);
        gbc.writeMem(0x59e6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9514, gbc.sp());
        EXPECT(0x59e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 00FE
        gbc.setState(0x281f, 0xaa3b, 0x3a00, 0xf32d, 0x606e, 0xf9b0, 0x1, 0x0);
        gbc.writeMem(0x281f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaa3b, gbc.sp());
        EXPECT(0x2821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 00FF
        gbc.setState(0x869a, 0xb459, 0xc050, 0x646b, 0x8726, 0xe0a4, 0x1, 0x0);
        gbc.writeMem(0x869a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb459, gbc.sp());
        EXPECT(0x869c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869a));
        EXPECT(0xa7, gbc.readMem(0x869b));
        // CB A7 0100
        gbc.setState(0x3995, 0xc8c1, 0x8f70, 0xbfe5, 0xe73a, 0x721f, 0x1, 0x1);
        gbc.writeMem(0x3995, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc8c1, gbc.sp());
        EXPECT(0x3997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0101
        gbc.setState(0x4f54, 0x721b, 0x3750, 0xf21d, 0x3859, 0x9049, 0x1, 0x1);
        gbc.writeMem(0x4f54, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x721b, gbc.sp());
        EXPECT(0x4f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0102
        gbc.setState(0x12bf, 0x7c1b, 0xef40, 0xbda0, 0xa80b, 0x9a0f, 0x1, 0x1);
        gbc.writeMem(0x12bf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7c1b, gbc.sp());
        EXPECT(0x12c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0103
        gbc.setState(0x8709, 0x5c11, 0x74f0, 0xa440, 0x1c23, 0x7a00, 0x0, 0x0);
        gbc.writeMem(0x8709, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5c11, gbc.sp());
        EXPECT(0x870b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8709));
        EXPECT(0xa7, gbc.readMem(0x870a));
        // CB A7 0104
        gbc.setState(0xa816, 0xf57f, 0x8050, 0xa128, 0x7405, 0xf4b1, 0x0, 0x0);
        gbc.writeMem(0xa816, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf57f, gbc.sp());
        EXPECT(0xa818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa816));
        EXPECT(0xa7, gbc.readMem(0xa817));
        // CB A7 0105
        gbc.setState(0x9d8a, 0x4627, 0x95f0, 0x8b2f, 0x9bcd, 0xfab4, 0x1, 0x1);
        gbc.writeMem(0x9d8a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4627, gbc.sp());
        EXPECT(0x9d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8a));
        EXPECT(0xa7, gbc.readMem(0x9d8b));
        // CB A7 0106
        gbc.setState(0xe653, 0x845b, 0xc0e0, 0xf13b, 0x6460, 0x9c9d, 0x1, 0x1);
        gbc.writeMem(0xe653, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x845b, gbc.sp());
        EXPECT(0xe655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe653));
        EXPECT(0xa7, gbc.readMem(0xe654));
        // CB A7 0107
        gbc.setState(0x78c0, 0xa946, 0x7900, 0xafff, 0xd55a, 0x965a, 0x1, 0x1);
        gbc.writeMem(0x78c0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa946, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0108
        gbc.setState(0x2a95, 0x1458, 0x6060, 0xf1c, 0xfa39, 0x4310, 0x0, 0x0);
        gbc.writeMem(0x2a95, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1458, gbc.sp());
        EXPECT(0x2a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0109
        gbc.setState(0x9d10, 0x3c94, 0xf7a0, 0x20a, 0xb9a3, 0x8f87, 0x0, 0x0);
        gbc.writeMem(0x9d10, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3c94, gbc.sp());
        EXPECT(0x9d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d10));
        EXPECT(0xa7, gbc.readMem(0x9d11));
        // CB A7 010A
        gbc.setState(0xe2e1, 0x6605, 0x56a0, 0xcc62, 0x9bc0, 0x27a7, 0x0, 0x1);
        gbc.writeMem(0xe2e1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6605, gbc.sp());
        EXPECT(0xe2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e1));
        EXPECT(0xa7, gbc.readMem(0xe2e2));
        // CB A7 010B
        gbc.setState(0x9bb9, 0x9488, 0xe710, 0x3818, 0x8c87, 0xb650, 0x1, 0x1);
        gbc.writeMem(0x9bb9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9488, gbc.sp());
        EXPECT(0x9bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb9));
        EXPECT(0xa7, gbc.readMem(0x9bba));
        // CB A7 010C
        gbc.setState(0xd307, 0x9a54, 0x9c00, 0x59c5, 0x330, 0x582, 0x0, 0x0);
        gbc.writeMem(0xd307, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9a54, gbc.sp());
        EXPECT(0xd309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd307));
        EXPECT(0xa7, gbc.readMem(0xd308));
        // CB A7 010D
        gbc.setState(0xb5af, 0xe19, 0x5900, 0x79f9, 0xa9f9, 0x17dd, 0x1, 0x0);
        gbc.writeMem(0xb5af, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe19, gbc.sp());
        EXPECT(0xb5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5af));
        EXPECT(0xa7, gbc.readMem(0xb5b0));
        // CB A7 010E
        gbc.setState(0x20a6, 0xa3b0, 0xfae0, 0x9c90, 0x3a5e, 0x9fcf, 0x0, 0x1);
        gbc.writeMem(0x20a6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa3b0, gbc.sp());
        EXPECT(0x20a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 010F
        gbc.setState(0x57fa, 0x81d4, 0x2530, 0xf02b, 0x4f77, 0xef02, 0x0, 0x1);
        gbc.writeMem(0x57fa, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x81d4, gbc.sp());
        EXPECT(0x57fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0110
        gbc.setState(0x46ad, 0xb140, 0xd2d0, 0x5021, 0x12b0, 0xa299, 0x0, 0x0);
        gbc.writeMem(0x46ad, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb140, gbc.sp());
        EXPECT(0x46af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0111
        gbc.setState(0xef1c, 0xff57, 0xee20, 0x5552, 0xebd9, 0x2255, 0x1, 0x1);
        gbc.writeMem(0xef1c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xff57, gbc.sp());
        EXPECT(0xef1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1c));
        EXPECT(0xa7, gbc.readMem(0xef1d));
        // CB A7 0112
        gbc.setState(0xbc8d, 0x93ff, 0x1530, 0xc9a1, 0x8588, 0x5cbc, 0x1, 0x0);
        gbc.writeMem(0xbc8d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x93ff, gbc.sp());
        EXPECT(0xbc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8d));
        EXPECT(0xa7, gbc.readMem(0xbc8e));
        // CB A7 0113
        gbc.setState(0xc951, 0x5eba, 0x7ac0, 0xc17f, 0x1269, 0x1c5d, 0x1, 0x1);
        gbc.writeMem(0xc951, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5eba, gbc.sp());
        EXPECT(0xc953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc951));
        EXPECT(0xa7, gbc.readMem(0xc952));
        // CB A7 0114
        gbc.setState(0xa559, 0x5645, 0x3990, 0x169, 0x92bf, 0x4193, 0x1, 0x0);
        gbc.writeMem(0xa559, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5645, gbc.sp());
        EXPECT(0xa55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa559));
        EXPECT(0xa7, gbc.readMem(0xa55a));
        // CB A7 0115
        gbc.setState(0x7620, 0x3788, 0xe940, 0xa8c1, 0x3e7f, 0xc3da, 0x1, 0x0);
        gbc.writeMem(0x7620, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3788, gbc.sp());
        EXPECT(0x7622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0116
        gbc.setState(0x99ed, 0xb0c9, 0x950, 0xe95c, 0x3e6e, 0xa5b9, 0x0, 0x0);
        gbc.writeMem(0x99ed, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb0c9, gbc.sp());
        EXPECT(0x99ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ed));
        EXPECT(0xa7, gbc.readMem(0x99ee));
        // CB A7 0117
        gbc.setState(0xe58c, 0xb52a, 0xc470, 0xf879, 0xdd9c, 0x4389, 0x1, 0x0);
        gbc.writeMem(0xe58c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0xe58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58c));
        EXPECT(0xa7, gbc.readMem(0xe58d));
        // CB A7 0118
        gbc.setState(0x1387, 0x676, 0xb250, 0xe7fb, 0x46a6, 0xd10c, 0x0, 0x1);
        gbc.writeMem(0x1387, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x676, gbc.sp());
        EXPECT(0x1389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0119
        gbc.setState(0xa72b, 0x214f, 0x6cb0, 0xe7c8, 0x5dd3, 0x5674, 0x0, 0x0);
        gbc.writeMem(0xa72b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x214f, gbc.sp());
        EXPECT(0xa72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72b));
        EXPECT(0xa7, gbc.readMem(0xa72c));
        // CB A7 011B
        gbc.setState(0x4f6a, 0x770c, 0x9c40, 0xd5c8, 0xd8aa, 0x39e8, 0x1, 0x1);
        gbc.writeMem(0x4f6a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x770c, gbc.sp());
        EXPECT(0x4f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 011C
        gbc.setState(0x1a8b, 0xdf68, 0xe3c0, 0xfb90, 0xfdb, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0x1a8b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdf68, gbc.sp());
        EXPECT(0x1a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 011D
        gbc.setState(0x8aa4, 0x8283, 0x5e50, 0xa8e9, 0xbf54, 0x9f10, 0x1, 0x1);
        gbc.writeMem(0x8aa4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8283, gbc.sp());
        EXPECT(0x8aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa4));
        EXPECT(0xa7, gbc.readMem(0x8aa5));
        // CB A7 011E
        gbc.setState(0xc252, 0x22f2, 0x6c00, 0x3de5, 0x4232, 0x2964, 0x0, 0x0);
        gbc.writeMem(0xc252, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x22f2, gbc.sp());
        EXPECT(0xc254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc252));
        EXPECT(0xa7, gbc.readMem(0xc253));
        // CB A7 011F
        gbc.setState(0x8dbf, 0xb5cc, 0x6d20, 0x86d6, 0x2137, 0x96c9, 0x0, 0x0);
        gbc.writeMem(0x8dbf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb5cc, gbc.sp());
        EXPECT(0x8dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbf));
        EXPECT(0xa7, gbc.readMem(0x8dc0));
        // CB A7 0120
        gbc.setState(0xb2df, 0xb726, 0xd390, 0x343d, 0x83db, 0x3e8b, 0x0, 0x0);
        gbc.writeMem(0xb2df, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb726, gbc.sp());
        EXPECT(0xb2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2df));
        EXPECT(0xa7, gbc.readMem(0xb2e0));
        // CB A7 0121
        gbc.setState(0xe615, 0x6c5a, 0xe620, 0x7a54, 0xe9a8, 0xdf20, 0x1, 0x0);
        gbc.writeMem(0xe615, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6c5a, gbc.sp());
        EXPECT(0xe617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe615));
        EXPECT(0xa7, gbc.readMem(0xe616));
        // CB A7 0122
        gbc.setState(0x24a, 0x785f, 0x91a0, 0xdc5f, 0x80ec, 0x8c21, 0x0, 0x0);
        gbc.writeMem(0x24a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x785f, gbc.sp());
        EXPECT(0x24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0123
        gbc.setState(0x6da9, 0xd2df, 0x2b20, 0xc174, 0xd7bc, 0x26ff, 0x1, 0x1);
        gbc.writeMem(0x6da9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd2df, gbc.sp());
        EXPECT(0x6dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0124
        gbc.setState(0x1d96, 0xdc1, 0xeae0, 0xbbc8, 0x8376, 0xb56, 0x1, 0x0);
        gbc.writeMem(0x1d96, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdc1, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0125
        gbc.setState(0x3452, 0xafb, 0xcbd0, 0xd33e, 0xa0b5, 0x7ce, 0x0, 0x1);
        gbc.writeMem(0x3452, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xafb, gbc.sp());
        EXPECT(0x3454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0126
        gbc.setState(0x5801, 0x28d7, 0x8340, 0xb097, 0xf10b, 0xcc, 0x1, 0x1);
        gbc.writeMem(0x5801, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x28d7, gbc.sp());
        EXPECT(0x5803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0127
        gbc.setState(0x80ab, 0xa340, 0x5420, 0x8967, 0x9e78, 0x7d3c, 0x0, 0x1);
        gbc.writeMem(0x80ab, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa340, gbc.sp());
        EXPECT(0x80ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ab));
        EXPECT(0xa7, gbc.readMem(0x80ac));
        // CB A7 0128
        gbc.setState(0x8c24, 0xada7, 0xbef0, 0xfc07, 0x6ffd, 0xf7f7, 0x1, 0x1);
        gbc.writeMem(0x8c24, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xada7, gbc.sp());
        EXPECT(0x8c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c24));
        EXPECT(0xa7, gbc.readMem(0x8c25));
        // CB A7 0129
        gbc.setState(0xa74, 0xc4e6, 0x84e0, 0xf5f4, 0x8eda, 0x632e, 0x0, 0x1);
        gbc.writeMem(0xa74, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc4e6, gbc.sp());
        EXPECT(0xa76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 012A
        gbc.setState(0xd47a, 0x785b, 0x9960, 0x1498, 0x4128, 0xa46a, 0x1, 0x0);
        gbc.writeMem(0xd47a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x785b, gbc.sp());
        EXPECT(0xd47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47a));
        EXPECT(0xa7, gbc.readMem(0xd47b));
        // CB A7 012C
        gbc.setState(0xaa8b, 0x3fc0, 0x36e0, 0x6367, 0xd1d5, 0xe02e, 0x0, 0x1);
        gbc.writeMem(0xaa8b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3fc0, gbc.sp());
        EXPECT(0xaa8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8b));
        EXPECT(0xa7, gbc.readMem(0xaa8c));
        // CB A7 012D
        gbc.setState(0x73d5, 0x50b2, 0xf530, 0x54a3, 0x73aa, 0x414d, 0x0, 0x0);
        gbc.writeMem(0x73d5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x50b2, gbc.sp());
        EXPECT(0x73d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 012E
        gbc.setState(0xaa2a, 0x266, 0xf340, 0x5c09, 0x4dc, 0x9d35, 0x0, 0x1);
        gbc.writeMem(0xaa2a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x266, gbc.sp());
        EXPECT(0xaa2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2a));
        EXPECT(0xa7, gbc.readMem(0xaa2b));
        // CB A7 012F
        gbc.setState(0x227f, 0x7ab1, 0x2dd0, 0xd67, 0x4d95, 0x2618, 0x1, 0x0);
        gbc.writeMem(0x227f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7ab1, gbc.sp());
        EXPECT(0x2281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0130
        gbc.setState(0x4a1, 0x1eda, 0x58b0, 0x6879, 0xcb9, 0xce73, 0x0, 0x1);
        gbc.writeMem(0x4a1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1eda, gbc.sp());
        EXPECT(0x4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0131
        gbc.setState(0x2bb5, 0xc7c8, 0xfc70, 0x3060, 0xb140, 0x74a8, 0x0, 0x0);
        gbc.writeMem(0x2bb5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc7c8, gbc.sp());
        EXPECT(0x2bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0133
        gbc.setState(0xc79b, 0x3ede, 0xfb90, 0x549c, 0x834, 0x466b, 0x0, 0x0);
        gbc.writeMem(0xc79b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3ede, gbc.sp());
        EXPECT(0xc79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79b));
        EXPECT(0xa7, gbc.readMem(0xc79c));
        // CB A7 0134
        gbc.setState(0x3a28, 0xfa57, 0x5100, 0x2e24, 0xf8ca, 0xa8c1, 0x0, 0x0);
        gbc.writeMem(0x3a28, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfa57, gbc.sp());
        EXPECT(0x3a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0136
        gbc.setState(0x1045, 0x623, 0xfa30, 0x5d83, 0x258d, 0xc090, 0x0, 0x0);
        gbc.writeMem(0x1045, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x623, gbc.sp());
        EXPECT(0x1047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0137
        gbc.setState(0x1d39, 0xa09a, 0x6e90, 0x3c5f, 0x941c, 0xf9a8, 0x0, 0x0);
        gbc.writeMem(0x1d39, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa09a, gbc.sp());
        EXPECT(0x1d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0139
        gbc.setState(0xba9d, 0xc10f, 0x84b0, 0xc492, 0x99d4, 0xa516, 0x1, 0x1);
        gbc.writeMem(0xba9d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc10f, gbc.sp());
        EXPECT(0xba9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9d));
        EXPECT(0xa7, gbc.readMem(0xba9e));
        // CB A7 013A
        gbc.setState(0x9998, 0xbd2, 0xff40, 0x51f3, 0xb894, 0xc5e6, 0x1, 0x1);
        gbc.writeMem(0x9998, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbd2, gbc.sp());
        EXPECT(0x999a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9998));
        EXPECT(0xa7, gbc.readMem(0x9999));
        // CB A7 013B
        gbc.setState(0xc222, 0x39b0, 0x6ab0, 0x4b59, 0xa494, 0x3cfe, 0x1, 0x1);
        gbc.writeMem(0xc222, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x39b0, gbc.sp());
        EXPECT(0xc224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc222));
        EXPECT(0xa7, gbc.readMem(0xc223));
        // CB A7 013C
        gbc.setState(0xba9e, 0xe964, 0xb4c0, 0x2564, 0xbe58, 0xd4fd, 0x1, 0x0);
        gbc.writeMem(0xba9e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe964, gbc.sp());
        EXPECT(0xbaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9e));
        EXPECT(0xa7, gbc.readMem(0xba9f));
        // CB A7 013D
        gbc.setState(0x3748, 0x1f43, 0xf0, 0xde72, 0xe190, 0x8330, 0x1, 0x0);
        gbc.writeMem(0x3748, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1f43, gbc.sp());
        EXPECT(0x374a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 013E
        gbc.setState(0x432d, 0x7f9c, 0x300, 0x43bd, 0xcdc0, 0xac08, 0x1, 0x0);
        gbc.writeMem(0x432d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7f9c, gbc.sp());
        EXPECT(0x432f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 013F
        gbc.setState(0x3a84, 0x88ff, 0x9130, 0xde36, 0x5aa1, 0xe6f, 0x1, 0x1);
        gbc.writeMem(0x3a84, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x88ff, gbc.sp());
        EXPECT(0x3a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0140
        gbc.setState(0xa807, 0x3afa, 0x2a70, 0x3828, 0xfeff, 0xd27b, 0x0, 0x0);
        gbc.writeMem(0xa807, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3afa, gbc.sp());
        EXPECT(0xa809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa807));
        EXPECT(0xa7, gbc.readMem(0xa808));
        // CB A7 0141
        gbc.setState(0x36f2, 0x8fd7, 0x9cb0, 0x5dc, 0x9a7c, 0x9817, 0x0, 0x1);
        gbc.writeMem(0x36f2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8fd7, gbc.sp());
        EXPECT(0x36f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0142
        gbc.setState(0x569f, 0x4cdb, 0xd4d0, 0xbf0d, 0xce2b, 0x96a6, 0x0, 0x0);
        gbc.writeMem(0x569f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4cdb, gbc.sp());
        EXPECT(0x56a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0143
        gbc.setState(0xabee, 0x31c1, 0xbd70, 0x1492, 0xab39, 0x72af, 0x0, 0x1);
        gbc.writeMem(0xabee, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x31c1, gbc.sp());
        EXPECT(0xabf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabee));
        EXPECT(0xa7, gbc.readMem(0xabef));
        // CB A7 0144
        gbc.setState(0x67cd, 0x93bb, 0x6f60, 0xdc6c, 0x7cc8, 0x5c9d, 0x0, 0x1);
        gbc.writeMem(0x67cd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x93bb, gbc.sp());
        EXPECT(0x67cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0145
        gbc.setState(0x7a5b, 0xe3b2, 0x21a0, 0xa55, 0x6581, 0xaebe, 0x1, 0x1);
        gbc.writeMem(0x7a5b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe3b2, gbc.sp());
        EXPECT(0x7a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0146
        gbc.setState(0x7381, 0xecec, 0x3310, 0xd186, 0xa5f6, 0xde14, 0x1, 0x0);
        gbc.writeMem(0x7381, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xecec, gbc.sp());
        EXPECT(0x7383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0147
        gbc.setState(0xb6e7, 0xb6a4, 0x1d10, 0x84be, 0x95bb, 0x372c, 0x1, 0x1);
        gbc.writeMem(0xb6e7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb6a4, gbc.sp());
        EXPECT(0xb6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e7));
        EXPECT(0xa7, gbc.readMem(0xb6e8));
        // CB A7 0148
        gbc.setState(0x37c6, 0x3d1b, 0xe010, 0xe0cf, 0xf672, 0x6cfd, 0x1, 0x0);
        gbc.writeMem(0x37c6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3d1b, gbc.sp());
        EXPECT(0x37c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0149
        gbc.setState(0x7ed8, 0x8019, 0xf160, 0xeff1, 0x2958, 0x7376, 0x0, 0x0);
        gbc.writeMem(0x7ed8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8019, gbc.sp());
        EXPECT(0x7eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 014A
        gbc.setState(0x157e, 0x8fbe, 0xe230, 0x13ba, 0xe3a4, 0x66a3, 0x0, 0x0);
        gbc.writeMem(0x157e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8fbe, gbc.sp());
        EXPECT(0x1580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 014B
        gbc.setState(0x120b, 0x1d65, 0xe010, 0x9e6b, 0xc48e, 0x453f, 0x1, 0x0);
        gbc.writeMem(0x120b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1d65, gbc.sp());
        EXPECT(0x120d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 014C
        gbc.setState(0xe7b9, 0x21f9, 0x89c0, 0x3c6c, 0x1801, 0x12ac, 0x1, 0x1);
        gbc.writeMem(0xe7b9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x21f9, gbc.sp());
        EXPECT(0xe7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b9));
        EXPECT(0xa7, gbc.readMem(0xe7ba));
        // CB A7 014D
        gbc.setState(0xbef, 0xb341, 0xa990, 0xf072, 0x80a9, 0x9af, 0x1, 0x0);
        gbc.writeMem(0xbef, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb341, gbc.sp());
        EXPECT(0xbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 014E
        gbc.setState(0xb22f, 0x1d1, 0xb480, 0xebe4, 0xf2f4, 0xd030, 0x1, 0x0);
        gbc.writeMem(0xb22f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1d1, gbc.sp());
        EXPECT(0xb231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22f));
        EXPECT(0xa7, gbc.readMem(0xb230));
        // CB A7 014F
        gbc.setState(0x3a91, 0xdb4b, 0x5f70, 0x8801, 0x5762, 0x2e08, 0x1, 0x0);
        gbc.writeMem(0x3a91, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdb4b, gbc.sp());
        EXPECT(0x3a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0150
        gbc.setState(0xe986, 0x1fc6, 0xc500, 0xcbf6, 0xcd16, 0xe77e, 0x1, 0x1);
        gbc.writeMem(0xe986, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1fc6, gbc.sp());
        EXPECT(0xe988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe986));
        EXPECT(0xa7, gbc.readMem(0xe987));
        // CB A7 0151
        gbc.setState(0x8192, 0xca3c, 0x2340, 0x3c50, 0x2732, 0xa6a7, 0x1, 0x0);
        gbc.writeMem(0x8192, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xca3c, gbc.sp());
        EXPECT(0x8194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8192));
        EXPECT(0xa7, gbc.readMem(0x8193));
        // CB A7 0152
        gbc.setState(0x1395, 0xf987, 0x4990, 0x57f, 0xe140, 0xe3e1, 0x0, 0x0);
        gbc.writeMem(0x1395, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf987, gbc.sp());
        EXPECT(0x1397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0153
        gbc.setState(0xba09, 0x8de7, 0x47c0, 0x742f, 0x20b3, 0xb130, 0x1, 0x1);
        gbc.writeMem(0xba09, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8de7, gbc.sp());
        EXPECT(0xba0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba09));
        EXPECT(0xa7, gbc.readMem(0xba0a));
        // CB A7 0154
        gbc.setState(0x86a9, 0x46c9, 0x8370, 0xb6b0, 0x339b, 0x2414, 0x0, 0x0);
        gbc.writeMem(0x86a9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x46c9, gbc.sp());
        EXPECT(0x86ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a9));
        EXPECT(0xa7, gbc.readMem(0x86aa));
        // CB A7 0157
        gbc.setState(0xd06f, 0xcc00, 0x4100, 0x3ab2, 0xf993, 0x161, 0x0, 0x1);
        gbc.writeMem(0xd06f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcc00, gbc.sp());
        EXPECT(0xd071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd06f));
        EXPECT(0xa7, gbc.readMem(0xd070));
        // CB A7 0158
        gbc.setState(0x199b, 0x13e9, 0x2d00, 0x625d, 0x606c, 0xdd84, 0x1, 0x1);
        gbc.writeMem(0x199b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x13e9, gbc.sp());
        EXPECT(0x199d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0159
        gbc.setState(0xe0f, 0xea1f, 0xb810, 0xbadd, 0x751f, 0xe4d1, 0x0, 0x0);
        gbc.writeMem(0xe0f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xea1f, gbc.sp());
        EXPECT(0xe11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 015A
        gbc.setState(0x8482, 0x1ea7, 0x5620, 0x7186, 0x58c6, 0xe47, 0x1, 0x1);
        gbc.writeMem(0x8482, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1ea7, gbc.sp());
        EXPECT(0x8484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8482));
        EXPECT(0xa7, gbc.readMem(0x8483));
        // CB A7 015B
        gbc.setState(0x1143, 0xa425, 0x87d0, 0x13b4, 0x26be, 0xeb70, 0x1, 0x0);
        gbc.writeMem(0x1143, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa425, gbc.sp());
        EXPECT(0x1145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 015C
        gbc.setState(0x35d8, 0x2d00, 0xebf0, 0xbc28, 0x5e02, 0x81b0, 0x0, 0x0);
        gbc.writeMem(0x35d8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2d00, gbc.sp());
        EXPECT(0x35da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 015D
        gbc.setState(0x8a94, 0x157a, 0x5390, 0x4af, 0x245e, 0x4035, 0x1, 0x1);
        gbc.writeMem(0x8a94, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x157a, gbc.sp());
        EXPECT(0x8a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a94));
        EXPECT(0xa7, gbc.readMem(0x8a95));
        // CB A7 015E
        gbc.setState(0x8960, 0x8a89, 0x7810, 0x396d, 0xe185, 0x89ef, 0x0, 0x1);
        gbc.writeMem(0x8960, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8a89, gbc.sp());
        EXPECT(0x8962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8960));
        EXPECT(0xa7, gbc.readMem(0x8961));
        // CB A7 015F
        gbc.setState(0x88ed, 0xbaaf, 0xa3a0, 0xbef4, 0x5970, 0xc72d, 0x1, 0x0);
        gbc.writeMem(0x88ed, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbaaf, gbc.sp());
        EXPECT(0x88ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ed));
        EXPECT(0xa7, gbc.readMem(0x88ee));
        // CB A7 0160
        gbc.setState(0x13bc, 0x59d9, 0x34b0, 0xa53e, 0xf31c, 0xcc34, 0x1, 0x1);
        gbc.writeMem(0x13bc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x59d9, gbc.sp());
        EXPECT(0x13be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0161
        gbc.setState(0xe770, 0x4547, 0xd0f0, 0xe71c, 0x45a1, 0x2f71, 0x0, 0x1);
        gbc.writeMem(0xe770, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4547, gbc.sp());
        EXPECT(0xe772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe770));
        EXPECT(0xa7, gbc.readMem(0xe771));
        // CB A7 0162
        gbc.setState(0xcbfb, 0x160e, 0xa0, 0xd289, 0x8c8d, 0xe57c, 0x1, 0x1);
        gbc.writeMem(0xcbfb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x160e, gbc.sp());
        EXPECT(0xcbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbfb));
        EXPECT(0xa7, gbc.readMem(0xcbfc));
        // CB A7 0163
        gbc.setState(0xe065, 0x5696, 0xc890, 0x4077, 0xabea, 0x60c2, 0x0, 0x0);
        gbc.writeMem(0xe065, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5696, gbc.sp());
        EXPECT(0xe067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe065));
        EXPECT(0xa7, gbc.readMem(0xe066));
        // CB A7 0164
        gbc.setState(0x2080, 0x2cd4, 0x4b30, 0xb411, 0xb432, 0x5070, 0x1, 0x0);
        gbc.writeMem(0x2080, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2cd4, gbc.sp());
        EXPECT(0x2082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0165
        gbc.setState(0x2212, 0x4f6e, 0xd960, 0x6e57, 0xab60, 0xaa93, 0x0, 0x1);
        gbc.writeMem(0x2212, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4f6e, gbc.sp());
        EXPECT(0x2214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0166
        gbc.setState(0xb8de, 0x9fcd, 0x20b0, 0xf771, 0x3b3d, 0x3cb5, 0x1, 0x0);
        gbc.writeMem(0xb8de, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9fcd, gbc.sp());
        EXPECT(0xb8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8de));
        EXPECT(0xa7, gbc.readMem(0xb8df));
        // CB A7 0167
        gbc.setState(0xb9ab, 0xda69, 0xd030, 0xbbdc, 0x5bf7, 0x6a31, 0x1, 0x1);
        gbc.writeMem(0xb9ab, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xda69, gbc.sp());
        EXPECT(0xb9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ab));
        EXPECT(0xa7, gbc.readMem(0xb9ac));
        // CB A7 0168
        gbc.setState(0x614a, 0x7963, 0xfa20, 0xbb81, 0xa2a5, 0x6568, 0x0, 0x1);
        gbc.writeMem(0x614a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7963, gbc.sp());
        EXPECT(0x614c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0169
        gbc.setState(0x2f35, 0xddb8, 0x7360, 0x61fc, 0x582e, 0x3000, 0x1, 0x0);
        gbc.writeMem(0x2f35, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xddb8, gbc.sp());
        EXPECT(0x2f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 016A
        gbc.setState(0x9452, 0x72fc, 0x4270, 0x796b, 0x4140, 0xa629, 0x0, 0x1);
        gbc.writeMem(0x9452, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x72fc, gbc.sp());
        EXPECT(0x9454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9452));
        EXPECT(0xa7, gbc.readMem(0x9453));
        // CB A7 016B
        gbc.setState(0x825c, 0x6cce, 0x3990, 0x6df9, 0x4b4e, 0x2f20, 0x1, 0x1);
        gbc.writeMem(0x825c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6cce, gbc.sp());
        EXPECT(0x825e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825c));
        EXPECT(0xa7, gbc.readMem(0x825d));
        // CB A7 016C
        gbc.setState(0x95fc, 0xace, 0x2720, 0x5d6e, 0x6f40, 0x7b36, 0x0, 0x0);
        gbc.writeMem(0x95fc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xace, gbc.sp());
        EXPECT(0x95fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fc));
        EXPECT(0xa7, gbc.readMem(0x95fd));
        // CB A7 016D
        gbc.setState(0x4cc0, 0xe46b, 0xdc40, 0xd51c, 0xd8b5, 0xdc87, 0x1, 0x0);
        gbc.writeMem(0x4cc0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe46b, gbc.sp());
        EXPECT(0x4cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 016E
        gbc.setState(0x1e41, 0xe0af, 0xee10, 0x96e, 0xe712, 0xa9ec, 0x0, 0x1);
        gbc.writeMem(0x1e41, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe0af, gbc.sp());
        EXPECT(0x1e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 016F
        gbc.setState(0x5d69, 0xf23c, 0x51e0, 0x815a, 0x3bf, 0xb552, 0x1, 0x0);
        gbc.writeMem(0x5d69, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf23c, gbc.sp());
        EXPECT(0x5d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0170
        gbc.setState(0x5bf3, 0x8abb, 0xbb90, 0x2290, 0xf6ea, 0x36be, 0x0, 0x1);
        gbc.writeMem(0x5bf3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8abb, gbc.sp());
        EXPECT(0x5bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0171
        gbc.setState(0x4f8f, 0xe3bb, 0x25f0, 0x5bf, 0x2edc, 0xe06c, 0x0, 0x0);
        gbc.writeMem(0x4f8f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe3bb, gbc.sp());
        EXPECT(0x4f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0172
        gbc.setState(0x859e, 0x1088, 0x6a10, 0x4cdb, 0x462c, 0x6f8a, 0x0, 0x1);
        gbc.writeMem(0x859e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1088, gbc.sp());
        EXPECT(0x85a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859e));
        EXPECT(0xa7, gbc.readMem(0x859f));
        // CB A7 0173
        gbc.setState(0xe72e, 0x3573, 0xca10, 0x4b, 0x9625, 0x4f1a, 0x0, 0x1);
        gbc.writeMem(0xe72e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3573, gbc.sp());
        EXPECT(0xe730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72e));
        EXPECT(0xa7, gbc.readMem(0xe72f));
        // CB A7 0174
        gbc.setState(0x5b1b, 0xa6c2, 0x9a80, 0xb402, 0xa5fe, 0x4330, 0x1, 0x1);
        gbc.writeMem(0x5b1b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa6c2, gbc.sp());
        EXPECT(0x5b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0175
        gbc.setState(0x4a6a, 0x46d1, 0x640, 0xd9a, 0x793a, 0x3d5b, 0x0, 0x0);
        gbc.writeMem(0x4a6a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x46d1, gbc.sp());
        EXPECT(0x4a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0176
        gbc.setState(0x564e, 0x33da, 0xc330, 0x87d4, 0x2e8d, 0x2b38, 0x1, 0x0);
        gbc.writeMem(0x564e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x33da, gbc.sp());
        EXPECT(0x5650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0177
        gbc.setState(0x2342, 0x528e, 0x62e0, 0x76c6, 0x806a, 0x1f24, 0x0, 0x1);
        gbc.writeMem(0x2342, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x528e, gbc.sp());
        EXPECT(0x2344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0178
        gbc.setState(0x1ff3, 0xcc0f, 0x95b0, 0x8c9c, 0x22f0, 0x9360, 0x0, 0x0);
        gbc.writeMem(0x1ff3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcc0f, gbc.sp());
        EXPECT(0x1ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0179
        gbc.setState(0xaa4c, 0xbf2, 0xf0d0, 0x6997, 0x9df7, 0x56e6, 0x0, 0x0);
        gbc.writeMem(0xaa4c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbf2, gbc.sp());
        EXPECT(0xaa4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa4c));
        EXPECT(0xa7, gbc.readMem(0xaa4d));
        // CB A7 017A
        gbc.setState(0x2d3c, 0x5db2, 0x87e0, 0x3bab, 0x5b27, 0xe525, 0x1, 0x0);
        gbc.writeMem(0x2d3c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5db2, gbc.sp());
        EXPECT(0x2d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 017B
        gbc.setState(0x818, 0x835c, 0x6790, 0xa9bb, 0x8023, 0x2c48, 0x1, 0x1);
        gbc.writeMem(0x818, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x835c, gbc.sp());
        EXPECT(0x81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 017C
        gbc.setState(0x459b, 0x56f4, 0xa320, 0x8087, 0x8968, 0xd8e5, 0x0, 0x0);
        gbc.writeMem(0x459b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x56f4, gbc.sp());
        EXPECT(0x459d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 017D
        gbc.setState(0xc2fd, 0x13b4, 0xfa80, 0x8dd1, 0x48af, 0xfdeb, 0x0, 0x1);
        gbc.writeMem(0xc2fd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x13b4, gbc.sp());
        EXPECT(0xc2ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2fd));
        EXPECT(0xa7, gbc.readMem(0xc2fe));
        // CB A7 017E
        gbc.setState(0x8c2c, 0xd706, 0x7b00, 0x4d8c, 0xe6c1, 0x3541, 0x0, 0x1);
        gbc.writeMem(0x8c2c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd706, gbc.sp());
        EXPECT(0x8c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c2c));
        EXPECT(0xa7, gbc.readMem(0x8c2d));
        // CB A7 017F
        gbc.setState(0xd128, 0xacee, 0x43d0, 0x4d, 0x76a8, 0x5bba, 0x1, 0x0);
        gbc.writeMem(0xd128, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xacee, gbc.sp());
        EXPECT(0xd12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd128));
        EXPECT(0xa7, gbc.readMem(0xd129));
        // CB A7 0180
        gbc.setState(0x60d4, 0xa131, 0x56d0, 0x738e, 0x516d, 0x260f, 0x1, 0x0);
        gbc.writeMem(0x60d4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa131, gbc.sp());
        EXPECT(0x60d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0181
        gbc.setState(0x6dca, 0x9427, 0x5170, 0x90c7, 0xe756, 0x98a8, 0x0, 0x0);
        gbc.writeMem(0x6dca, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9427, gbc.sp());
        EXPECT(0x6dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0182
        gbc.setState(0xb4a9, 0xbef4, 0xd580, 0xd4d7, 0xba23, 0x9449, 0x0, 0x1);
        gbc.writeMem(0xb4a9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbef4, gbc.sp());
        EXPECT(0xb4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a9));
        EXPECT(0xa7, gbc.readMem(0xb4aa));
        // CB A7 0183
        gbc.setState(0xa662, 0x6504, 0x9b60, 0x5716, 0x964a, 0xaea2, 0x1, 0x1);
        gbc.writeMem(0xa662, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6504, gbc.sp());
        EXPECT(0xa664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa662));
        EXPECT(0xa7, gbc.readMem(0xa663));
        // CB A7 0184
        gbc.setState(0xa645, 0xd0df, 0xffa0, 0xb015, 0x15a, 0xa043, 0x0, 0x0);
        gbc.writeMem(0xa645, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd0df, gbc.sp());
        EXPECT(0xa647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa645));
        EXPECT(0xa7, gbc.readMem(0xa646));
        // CB A7 0185
        gbc.setState(0x6e83, 0xe4b5, 0x6680, 0xc3f3, 0x8c08, 0x9a97, 0x1, 0x0);
        gbc.writeMem(0x6e83, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe4b5, gbc.sp());
        EXPECT(0x6e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0186
        gbc.setState(0xafc9, 0xfb39, 0x210, 0xf18a, 0x35a7, 0x348f, 0x0, 0x0);
        gbc.writeMem(0xafc9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfb39, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc9));
        EXPECT(0xa7, gbc.readMem(0xafca));
        // CB A7 0188
        gbc.setState(0x3992, 0x893b, 0x130, 0x91e8, 0xe50, 0x9510, 0x0, 0x0);
        gbc.writeMem(0x3992, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x893b, gbc.sp());
        EXPECT(0x3994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0189
        gbc.setState(0x65a, 0x9a14, 0xedf0, 0x452e, 0x9b7c, 0xff1d, 0x1, 0x0);
        gbc.writeMem(0x65a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9a14, gbc.sp());
        EXPECT(0x65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 018A
        gbc.setState(0x64ef, 0xf73e, 0x5bf0, 0xa9ef, 0x2ee5, 0x8e, 0x0, 0x1);
        gbc.writeMem(0x64ef, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf73e, gbc.sp());
        EXPECT(0x64f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 018C
        gbc.setState(0x82d8, 0xf0b2, 0xd810, 0x6907, 0x885a, 0x7902, 0x0, 0x1);
        gbc.writeMem(0x82d8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf0b2, gbc.sp());
        EXPECT(0x82da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d8));
        EXPECT(0xa7, gbc.readMem(0x82d9));
        // CB A7 018D
        gbc.setState(0x37ef, 0x2ff4, 0xa9c0, 0xe798, 0x49f6, 0xebf6, 0x0, 0x1);
        gbc.writeMem(0x37ef, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2ff4, gbc.sp());
        EXPECT(0x37f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 018E
        gbc.setState(0xb9f4, 0xb940, 0x77e0, 0xc170, 0xfbb, 0xe1d7, 0x0, 0x0);
        gbc.writeMem(0xb9f4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb940, gbc.sp());
        EXPECT(0xb9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f4));
        EXPECT(0xa7, gbc.readMem(0xb9f5));
        // CB A7 018F
        gbc.setState(0xdb0d, 0x60ce, 0x6480, 0x9e7e, 0xf92a, 0xc279, 0x0, 0x0);
        gbc.writeMem(0xdb0d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x60ce, gbc.sp());
        EXPECT(0xdb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0d));
        EXPECT(0xa7, gbc.readMem(0xdb0e));
        // CB A7 0190
        gbc.setState(0x723c, 0xbd42, 0x54e0, 0x257a, 0x7563, 0x8fa, 0x1, 0x0);
        gbc.writeMem(0x723c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbd42, gbc.sp());
        EXPECT(0x723e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0191
        gbc.setState(0xc749, 0x7de4, 0x4070, 0xe87a, 0x67b9, 0x57, 0x1, 0x1);
        gbc.writeMem(0xc749, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7de4, gbc.sp());
        EXPECT(0xc74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc749));
        EXPECT(0xa7, gbc.readMem(0xc74a));
        // CB A7 0192
        gbc.setState(0x2ed7, 0xe080, 0xf380, 0x1356, 0x23da, 0xf3f0, 0x0, 0x0);
        gbc.writeMem(0x2ed7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe080, gbc.sp());
        EXPECT(0x2ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0193
        gbc.setState(0xb3a5, 0xbff8, 0x9720, 0xcd21, 0xc3bb, 0x3702, 0x0, 0x0);
        gbc.writeMem(0xb3a5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbff8, gbc.sp());
        EXPECT(0xb3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a5));
        EXPECT(0xa7, gbc.readMem(0xb3a6));
        // CB A7 0195
        gbc.setState(0x7e1d, 0x4844, 0x3bb0, 0xa02a, 0xba23, 0xc05f, 0x1, 0x0);
        gbc.writeMem(0x7e1d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4844, gbc.sp());
        EXPECT(0x7e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0196
        gbc.setState(0x607, 0x8657, 0x6280, 0x6c36, 0x5a17, 0xcc3c, 0x0, 0x1);
        gbc.writeMem(0x607, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8657, gbc.sp());
        EXPECT(0x609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0197
        gbc.setState(0x5f13, 0xbf08, 0xb610, 0x55d1, 0xdd2a, 0x4311, 0x1, 0x0);
        gbc.writeMem(0x5f13, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbf08, gbc.sp());
        EXPECT(0x5f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0198
        gbc.setState(0x96ea, 0x20c4, 0x7890, 0xc29a, 0x5d13, 0x6bd2, 0x0, 0x1);
        gbc.writeMem(0x96ea, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x20c4, gbc.sp());
        EXPECT(0x96ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ea));
        EXPECT(0xa7, gbc.readMem(0x96eb));
        // CB A7 0199
        gbc.setState(0x548b, 0x9e7d, 0x90, 0xab18, 0xd431, 0xed0e, 0x1, 0x0);
        gbc.writeMem(0x548b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9e7d, gbc.sp());
        EXPECT(0x548d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 019A
        gbc.setState(0x6b56, 0x7765, 0xc3c0, 0xeb1e, 0x95ba, 0xc444, 0x1, 0x0);
        gbc.writeMem(0x6b56, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7765, gbc.sp());
        EXPECT(0x6b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 019B
        gbc.setState(0x6b83, 0xf672, 0x77e0, 0x9673, 0x76f1, 0x3d81, 0x0, 0x1);
        gbc.writeMem(0x6b83, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf672, gbc.sp());
        EXPECT(0x6b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 019C
        gbc.setState(0x6abe, 0x8297, 0x3420, 0xcbb7, 0x5b35, 0x7697, 0x1, 0x1);
        gbc.writeMem(0x6abe, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8297, gbc.sp());
        EXPECT(0x6ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 019D
        gbc.setState(0x5745, 0xd248, 0x4bb0, 0xe3a0, 0x8bba, 0xc672, 0x1, 0x1);
        gbc.writeMem(0x5745, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd248, gbc.sp());
        EXPECT(0x5747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 019E
        gbc.setState(0xb36a, 0x73a6, 0xc210, 0x8ec9, 0x6076, 0x2d69, 0x1, 0x0);
        gbc.writeMem(0xb36a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x73a6, gbc.sp());
        EXPECT(0xb36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36a));
        EXPECT(0xa7, gbc.readMem(0xb36b));
        // CB A7 019F
        gbc.setState(0xa53a, 0x1b21, 0x2c90, 0x2988, 0xc953, 0x22f8, 0x0, 0x0);
        gbc.writeMem(0xa53a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1b21, gbc.sp());
        EXPECT(0xa53c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53a));
        EXPECT(0xa7, gbc.readMem(0xa53b));
        // CB A7 01A1
        gbc.setState(0xc66a, 0x3fd4, 0xee60, 0xdc28, 0x1a24, 0xa39e, 0x1, 0x0);
        gbc.writeMem(0xc66a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3fd4, gbc.sp());
        EXPECT(0xc66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66a));
        EXPECT(0xa7, gbc.readMem(0xc66b));
        // CB A7 01A2
        gbc.setState(0x2b06, 0x145b, 0x5ef0, 0xbe30, 0x23a1, 0x52d0, 0x0, 0x0);
        gbc.writeMem(0x2b06, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x145b, gbc.sp());
        EXPECT(0x2b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01A3
        gbc.setState(0xb1, 0x42c1, 0x6c20, 0x37f7, 0xc1b2, 0x2101, 0x0, 0x1);
        gbc.writeMem(0xb1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x42c1, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01A4
        gbc.setState(0x992f, 0x725d, 0xd50, 0x300f, 0x9509, 0x19f3, 0x0, 0x1);
        gbc.writeMem(0x992f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x725d, gbc.sp());
        EXPECT(0x9931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992f));
        EXPECT(0xa7, gbc.readMem(0x9930));
        // CB A7 01A5
        gbc.setState(0x2088, 0x71fc, 0x6410, 0xcc35, 0xf35a, 0xb0d2, 0x0, 0x0);
        gbc.writeMem(0x2088, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x71fc, gbc.sp());
        EXPECT(0x208a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01A6
        gbc.setState(0x85fd, 0x308a, 0x110, 0xeabc, 0x7d66, 0x555c, 0x0, 0x0);
        gbc.writeMem(0x85fd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x308a, gbc.sp());
        EXPECT(0x85ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fd));
        EXPECT(0xa7, gbc.readMem(0x85fe));
        // CB A7 01A7
        gbc.setState(0x4d25, 0x252d, 0xf110, 0xc568, 0x96cf, 0x26ef, 0x0, 0x1);
        gbc.writeMem(0x4d25, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x252d, gbc.sp());
        EXPECT(0x4d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01A8
        gbc.setState(0xebf1, 0xec79, 0x89c0, 0xf422, 0xb033, 0xba41, 0x0, 0x0);
        gbc.writeMem(0xebf1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xec79, gbc.sp());
        EXPECT(0xebf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf1));
        EXPECT(0xa7, gbc.readMem(0xebf2));
        // CB A7 01A9
        gbc.setState(0x1fc1, 0xe594, 0xef80, 0x75fd, 0xec84, 0x797a, 0x0, 0x0);
        gbc.writeMem(0x1fc1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe594, gbc.sp());
        EXPECT(0x1fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01AA
        gbc.setState(0x9b6a, 0xe4d1, 0x78b0, 0x74ab, 0x1952, 0x7531, 0x0, 0x1);
        gbc.writeMem(0x9b6a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe4d1, gbc.sp());
        EXPECT(0x9b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6a));
        EXPECT(0xa7, gbc.readMem(0x9b6b));
        // CB A7 01AB
        gbc.setState(0xd575, 0x4bdb, 0xdb30, 0x700a, 0x7802, 0x24f9, 0x0, 0x0);
        gbc.writeMem(0xd575, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4bdb, gbc.sp());
        EXPECT(0xd577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd575));
        EXPECT(0xa7, gbc.readMem(0xd576));
        // CB A7 01AD
        gbc.setState(0x31ae, 0xf99d, 0x7c0, 0x5f50, 0x3e5c, 0x3279, 0x1, 0x0);
        gbc.writeMem(0x31ae, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf99d, gbc.sp());
        EXPECT(0x31b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01AE
        gbc.setState(0xd3b0, 0x2ba4, 0xf940, 0x3ff6, 0xc288, 0xdd68, 0x0, 0x0);
        gbc.writeMem(0xd3b0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2ba4, gbc.sp());
        EXPECT(0xd3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b0));
        EXPECT(0xa7, gbc.readMem(0xd3b1));
        // CB A7 01AF
        gbc.setState(0xa044, 0x8850, 0x32b0, 0xb0b0, 0xe9f6, 0x3d67, 0x0, 0x0);
        gbc.writeMem(0xa044, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8850, gbc.sp());
        EXPECT(0xa046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa044));
        EXPECT(0xa7, gbc.readMem(0xa045));
        // CB A7 01B0
        gbc.setState(0x35ba, 0x6aff, 0xf160, 0xb914, 0x98da, 0x266c, 0x1, 0x1);
        gbc.writeMem(0x35ba, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6aff, gbc.sp());
        EXPECT(0x35bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01B1
        gbc.setState(0x3e1f, 0xb4b8, 0xbb20, 0x374b, 0x5e53, 0xc0db, 0x0, 0x1);
        gbc.writeMem(0x3e1f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb4b8, gbc.sp());
        EXPECT(0x3e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01B3
        gbc.setState(0x33f7, 0x409c, 0x49b0, 0x1408, 0x3a5e, 0xbb8a, 0x1, 0x1);
        gbc.writeMem(0x33f7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x409c, gbc.sp());
        EXPECT(0x33f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01B4
        gbc.setState(0x26f8, 0xf8, 0xe8a0, 0x5dab, 0x8bc2, 0x9a96, 0x0, 0x1);
        gbc.writeMem(0x26f8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf8, gbc.sp());
        EXPECT(0x26fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01B5
        gbc.setState(0xa927, 0x546f, 0x69b0, 0xf8af, 0xa5c5, 0x47c1, 0x1, 0x1);
        gbc.writeMem(0xa927, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x546f, gbc.sp());
        EXPECT(0xa929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa927));
        EXPECT(0xa7, gbc.readMem(0xa928));
        // CB A7 01B6
        gbc.setState(0xc9e8, 0xc7a4, 0x490, 0x9119, 0x4249, 0xbfdf, 0x0, 0x0);
        gbc.writeMem(0xc9e8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc7a4, gbc.sp());
        EXPECT(0xc9ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e8));
        EXPECT(0xa7, gbc.readMem(0xc9e9));
        // CB A7 01B7
        gbc.setState(0xbe0d, 0x6e76, 0xcf20, 0x523f, 0x23e1, 0x3094, 0x0, 0x0);
        gbc.writeMem(0xbe0d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6e76, gbc.sp());
        EXPECT(0xbe0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0d));
        EXPECT(0xa7, gbc.readMem(0xbe0e));
        // CB A7 01B8
        gbc.setState(0x6c3f, 0x7844, 0x1000, 0x5e7, 0xf0e6, 0x4e3a, 0x0, 0x0);
        gbc.writeMem(0x6c3f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7844, gbc.sp());
        EXPECT(0x6c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01B9
        gbc.setState(0x9315, 0x59c6, 0x6020, 0xc623, 0xcda, 0xc17e, 0x1, 0x1);
        gbc.writeMem(0x9315, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x59c6, gbc.sp());
        EXPECT(0x9317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9315));
        EXPECT(0xa7, gbc.readMem(0x9316));
        // CB A7 01BA
        gbc.setState(0xc99e, 0x56e6, 0x2c00, 0x6fd2, 0xe097, 0xf17a, 0x0, 0x0);
        gbc.writeMem(0xc99e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x56e6, gbc.sp());
        EXPECT(0xc9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99e));
        EXPECT(0xa7, gbc.readMem(0xc99f));
        // CB A7 01BB
        gbc.setState(0xc96c, 0x75d4, 0xb1b0, 0xa683, 0xde09, 0x9e49, 0x1, 0x1);
        gbc.writeMem(0xc96c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x75d4, gbc.sp());
        EXPECT(0xc96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96c));
        EXPECT(0xa7, gbc.readMem(0xc96d));
        // CB A7 01BC
        gbc.setState(0x1e17, 0xae27, 0xeed0, 0x6cdb, 0x446a, 0x9d8d, 0x0, 0x1);
        gbc.writeMem(0x1e17, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xae27, gbc.sp());
        EXPECT(0x1e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01BD
        gbc.setState(0x2341, 0xa0f0, 0x1730, 0xa475, 0x15a8, 0x4083, 0x0, 0x0);
        gbc.writeMem(0x2341, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa0f0, gbc.sp());
        EXPECT(0x2343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01BE
        gbc.setState(0x413, 0x95cc, 0xc380, 0xf334, 0xb07a, 0xd943, 0x1, 0x1);
        gbc.writeMem(0x413, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x95cc, gbc.sp());
        EXPECT(0x415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01BF
        gbc.setState(0xa8f1, 0x70bf, 0x8910, 0xe224, 0xdf9e, 0xf409, 0x1, 0x1);
        gbc.writeMem(0xa8f1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x70bf, gbc.sp());
        EXPECT(0xa8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f1));
        EXPECT(0xa7, gbc.readMem(0xa8f2));
        // CB A7 01C0
        gbc.setState(0x996a, 0x5a06, 0x4a60, 0x36b7, 0x69cd, 0xce4a, 0x0, 0x1);
        gbc.writeMem(0x996a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5a06, gbc.sp());
        EXPECT(0x996c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996a));
        EXPECT(0xa7, gbc.readMem(0x996b));
        // CB A7 01C1
        gbc.setState(0x840b, 0xb298, 0x34e0, 0x1a52, 0x11e2, 0xaa0c, 0x1, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb298, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840b));
        EXPECT(0xa7, gbc.readMem(0x840c));
        // CB A7 01C2
        gbc.setState(0x5a04, 0xc359, 0x82c0, 0x7ea, 0x10e3, 0xd3cd, 0x0, 0x0);
        gbc.writeMem(0x5a04, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc359, gbc.sp());
        EXPECT(0x5a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01C3
        gbc.setState(0xad06, 0x7c1d, 0x7140, 0xe443, 0x5251, 0x4423, 0x0, 0x0);
        gbc.writeMem(0xad06, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7c1d, gbc.sp());
        EXPECT(0xad08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad06));
        EXPECT(0xa7, gbc.readMem(0xad07));
        // CB A7 01C4
        gbc.setState(0x3131, 0x9344, 0x5470, 0xf4d0, 0x6f64, 0xdf65, 0x0, 0x0);
        gbc.writeMem(0x3131, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9344, gbc.sp());
        EXPECT(0x3133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01C5
        gbc.setState(0xd65a, 0xf594, 0xcd00, 0xbd2a, 0xacf8, 0xbfde, 0x0, 0x1);
        gbc.writeMem(0xd65a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf594, gbc.sp());
        EXPECT(0xd65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd65a));
        EXPECT(0xa7, gbc.readMem(0xd65b));
        // CB A7 01C6
        gbc.setState(0x506d, 0x70a6, 0x4d70, 0xf677, 0x3b30, 0xae21, 0x1, 0x0);
        gbc.writeMem(0x506d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x70a6, gbc.sp());
        EXPECT(0x506f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01C7
        gbc.setState(0xbd0d, 0xc95e, 0x7bb0, 0x1bc2, 0xc200, 0xc01f, 0x0, 0x1);
        gbc.writeMem(0xbd0d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc95e, gbc.sp());
        EXPECT(0xbd0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0d));
        EXPECT(0xa7, gbc.readMem(0xbd0e));
        // CB A7 01C8
        gbc.setState(0x3f2e, 0xe11b, 0x8a70, 0xc61a, 0xa23c, 0x56be, 0x0, 0x0);
        gbc.writeMem(0x3f2e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe11b, gbc.sp());
        EXPECT(0x3f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01C9
        gbc.setState(0xe702, 0x354c, 0x5de0, 0xd359, 0x7821, 0x7645, 0x0, 0x0);
        gbc.writeMem(0xe702, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x354c, gbc.sp());
        EXPECT(0xe704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe702));
        EXPECT(0xa7, gbc.readMem(0xe703));
        // CB A7 01CA
        gbc.setState(0x5952, 0xb981, 0xf6b0, 0x1100, 0x71e5, 0xd54c, 0x0, 0x0);
        gbc.writeMem(0x5952, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb981, gbc.sp());
        EXPECT(0x5954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01CB
        gbc.setState(0xc3ab, 0x471b, 0x16d0, 0xb298, 0x5fa0, 0xa0d2, 0x1, 0x1);
        gbc.writeMem(0xc3ab, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x471b, gbc.sp());
        EXPECT(0xc3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ab));
        EXPECT(0xa7, gbc.readMem(0xc3ac));
        // CB A7 01CC
        gbc.setState(0xea87, 0x114f, 0xd220, 0xaa77, 0x1cf6, 0x9990, 0x1, 0x0);
        gbc.writeMem(0xea87, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x114f, gbc.sp());
        EXPECT(0xea89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea87));
        EXPECT(0xa7, gbc.readMem(0xea88));
        // CB A7 01CD
        gbc.setState(0x636d, 0xf4c6, 0xc070, 0x597c, 0x9db3, 0x48c7, 0x0, 0x1);
        gbc.writeMem(0x636d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf4c6, gbc.sp());
        EXPECT(0x636f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01CE
        gbc.setState(0xc0a6, 0x3e7f, 0x2090, 0xa828, 0x64b1, 0xbee0, 0x0, 0x0);
        gbc.writeMem(0xc0a6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3e7f, gbc.sp());
        EXPECT(0xc0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a6));
        EXPECT(0xa7, gbc.readMem(0xc0a7));
        // CB A7 01CF
        gbc.setState(0xb2a2, 0x537b, 0x7cb0, 0x43b8, 0xbef1, 0x1f93, 0x1, 0x0);
        gbc.writeMem(0xb2a2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x537b, gbc.sp());
        EXPECT(0xb2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a2));
        EXPECT(0xa7, gbc.readMem(0xb2a3));
        // CB A7 01D0
        gbc.setState(0xa94f, 0xc90f, 0xb0f0, 0x764c, 0x9b5c, 0x8e83, 0x0, 0x1);
        gbc.writeMem(0xa94f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc90f, gbc.sp());
        EXPECT(0xa951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94f));
        EXPECT(0xa7, gbc.readMem(0xa950));
        // CB A7 01D1
        gbc.setState(0x5b02, 0xd950, 0x5e30, 0x2f49, 0x48d3, 0xc6d7, 0x1, 0x0);
        gbc.writeMem(0x5b02, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd950, gbc.sp());
        EXPECT(0x5b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01D2
        gbc.setState(0xe159, 0xd4ac, 0x4d70, 0x9028, 0x5843, 0x4700, 0x0, 0x1);
        gbc.writeMem(0xe159, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd4ac, gbc.sp());
        EXPECT(0xe15b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe159));
        EXPECT(0xa7, gbc.readMem(0xe15a));
        // CB A7 01D3
        gbc.setState(0xb9e, 0xc8ad, 0xf9d0, 0x8162, 0x5a5b, 0xb42e, 0x1, 0x0);
        gbc.writeMem(0xb9e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc8ad, gbc.sp());
        EXPECT(0xba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01D4
        gbc.setState(0x2745, 0x727, 0x9600, 0x8d15, 0xbd56, 0x5384, 0x0, 0x1);
        gbc.writeMem(0x2745, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x727, gbc.sp());
        EXPECT(0x2747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01D5
        gbc.setState(0xbc97, 0x1137, 0x26c0, 0xd201, 0xdc69, 0x4084, 0x1, 0x0);
        gbc.writeMem(0xbc97, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1137, gbc.sp());
        EXPECT(0xbc99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc97));
        EXPECT(0xa7, gbc.readMem(0xbc98));
        // CB A7 01D6
        gbc.setState(0x6e77, 0xb75c, 0xcab0, 0x232c, 0x85ae, 0x261a, 0x0, 0x1);
        gbc.writeMem(0x6e77, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb75c, gbc.sp());
        EXPECT(0x6e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01D7
        gbc.setState(0xa0aa, 0x55b, 0xe510, 0x2258, 0xb116, 0xcb9b, 0x0, 0x0);
        gbc.writeMem(0xa0aa, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x55b, gbc.sp());
        EXPECT(0xa0ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0aa));
        EXPECT(0xa7, gbc.readMem(0xa0ab));
        // CB A7 01D8
        gbc.setState(0x665b, 0xeb92, 0xa710, 0x90b6, 0x8adf, 0x1c17, 0x1, 0x1);
        gbc.writeMem(0x665b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xeb92, gbc.sp());
        EXPECT(0x665d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01D9
        gbc.setState(0xbcae, 0x3c84, 0x5c10, 0x491d, 0xd501, 0x8ab6, 0x1, 0x0);
        gbc.writeMem(0xbcae, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3c84, gbc.sp());
        EXPECT(0xbcb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcae));
        EXPECT(0xa7, gbc.readMem(0xbcaf));
        // CB A7 01DB
        gbc.setState(0x4bd2, 0xe655, 0xc300, 0x13e3, 0xc762, 0x7787, 0x1, 0x1);
        gbc.writeMem(0x4bd2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe655, gbc.sp());
        EXPECT(0x4bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01DC
        gbc.setState(0xe607, 0x5e27, 0x59f0, 0xef73, 0x6751, 0x9313, 0x0, 0x1);
        gbc.writeMem(0xe607, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5e27, gbc.sp());
        EXPECT(0xe609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe607));
        EXPECT(0xa7, gbc.readMem(0xe608));
        // CB A7 01DD
        gbc.setState(0x37ad, 0x1483, 0xde90, 0x77d0, 0x2e1, 0xd9e9, 0x0, 0x1);
        gbc.writeMem(0x37ad, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1483, gbc.sp());
        EXPECT(0x37af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01DE
        gbc.setState(0x7e04, 0x1a5e, 0xf0a0, 0x4e80, 0xb8b7, 0x8325, 0x0, 0x0);
        gbc.writeMem(0x7e04, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1a5e, gbc.sp());
        EXPECT(0x7e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01DF
        gbc.setState(0x86ba, 0xdb98, 0x5600, 0xaeb0, 0x1c40, 0x7ff7, 0x0, 0x1);
        gbc.writeMem(0x86ba, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdb98, gbc.sp());
        EXPECT(0x86bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ba));
        EXPECT(0xa7, gbc.readMem(0x86bb));
        // CB A7 01E0
        gbc.setState(0x1fb3, 0xc63c, 0xf5c0, 0x707c, 0x7416, 0xc034, 0x1, 0x1);
        gbc.writeMem(0x1fb3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc63c, gbc.sp());
        EXPECT(0x1fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01E1
        gbc.setState(0xe6fd, 0xfc5f, 0xcfd0, 0xd750, 0x6b99, 0x8097, 0x1, 0x1);
        gbc.writeMem(0xe6fd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfc5f, gbc.sp());
        EXPECT(0xe6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fd));
        EXPECT(0xa7, gbc.readMem(0xe6fe));
        // CB A7 01E2
        gbc.setState(0x3968, 0x2a16, 0x6fe0, 0xc789, 0x5a5b, 0x8818, 0x1, 0x0);
        gbc.writeMem(0x3968, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2a16, gbc.sp());
        EXPECT(0x396a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01E3
        gbc.setState(0x19ac, 0x9e7b, 0x5810, 0xb81d, 0xc64e, 0x8b15, 0x0, 0x1);
        gbc.writeMem(0x19ac, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9e7b, gbc.sp());
        EXPECT(0x19ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01E4
        gbc.setState(0xdf20, 0x2ea8, 0x8fb0, 0xdf60, 0x9214, 0xb742, 0x0, 0x1);
        gbc.writeMem(0xdf20, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2ea8, gbc.sp());
        EXPECT(0xdf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf20));
        EXPECT(0xa7, gbc.readMem(0xdf21));
        // CB A7 01E5
        gbc.setState(0xee96, 0x5caf, 0xe5c0, 0xb6fa, 0xf06b, 0xf612, 0x0, 0x1);
        gbc.writeMem(0xee96, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5caf, gbc.sp());
        EXPECT(0xee98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee96));
        EXPECT(0xa7, gbc.readMem(0xee97));
        // CB A7 01E6
        gbc.setState(0xe25f, 0x651b, 0x80b0, 0x10dd, 0xfe4, 0x62cb, 0x0, 0x0);
        gbc.writeMem(0xe25f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x651b, gbc.sp());
        EXPECT(0xe261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25f));
        EXPECT(0xa7, gbc.readMem(0xe260));
        // CB A7 01E7
        gbc.setState(0xa332, 0x5ded, 0x3c10, 0xc379, 0x820b, 0x810e, 0x1, 0x0);
        gbc.writeMem(0xa332, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5ded, gbc.sp());
        EXPECT(0xa334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa332));
        EXPECT(0xa7, gbc.readMem(0xa333));
        // CB A7 01E9
        gbc.setState(0xcf88, 0x1548, 0x6930, 0x64ef, 0xb46f, 0x557b, 0x1, 0x1);
        gbc.writeMem(0xcf88, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1548, gbc.sp());
        EXPECT(0xcf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf88));
        EXPECT(0xa7, gbc.readMem(0xcf89));
        // CB A7 01EA
        gbc.setState(0x6f30, 0x8831, 0xa7c0, 0x70f9, 0x3b26, 0x93dc, 0x1, 0x0);
        gbc.writeMem(0x6f30, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8831, gbc.sp());
        EXPECT(0x6f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01EC
        gbc.setState(0xeafd, 0x31e8, 0xc130, 0x84b5, 0x4498, 0x558d, 0x1, 0x1);
        gbc.writeMem(0xeafd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x31e8, gbc.sp());
        EXPECT(0xeaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeafd));
        EXPECT(0xa7, gbc.readMem(0xeafe));
        // CB A7 01ED
        gbc.setState(0x91ad, 0x5315, 0x7a00, 0x7b5c, 0x9dae, 0xd09b, 0x1, 0x0);
        gbc.writeMem(0x91ad, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5315, gbc.sp());
        EXPECT(0x91af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ad));
        EXPECT(0xa7, gbc.readMem(0x91ae));
        // CB A7 01EE
        gbc.setState(0x4ac7, 0x2993, 0x9300, 0xbaa8, 0xda06, 0xaf76, 0x0, 0x1);
        gbc.writeMem(0x4ac7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2993, gbc.sp());
        EXPECT(0x4ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01EF
        gbc.setState(0xa132, 0x2720, 0x1d40, 0x20ae, 0xe305, 0xbe74, 0x0, 0x0);
        gbc.writeMem(0xa132, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2720, gbc.sp());
        EXPECT(0xa134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa132));
        EXPECT(0xa7, gbc.readMem(0xa133));
        // CB A7 01F0
        gbc.setState(0xad85, 0x9fb5, 0x4bb0, 0xaab8, 0x9546, 0xf543, 0x1, 0x1);
        gbc.writeMem(0xad85, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9fb5, gbc.sp());
        EXPECT(0xad87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad85));
        EXPECT(0xa7, gbc.readMem(0xad86));
        // CB A7 01F1
        gbc.setState(0x31ac, 0x1999, 0x8760, 0x26a, 0x5444, 0x86e4, 0x0, 0x1);
        gbc.writeMem(0x31ac, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1999, gbc.sp());
        EXPECT(0x31ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01F2
        gbc.setState(0x88cb, 0x24aa, 0x990, 0xb6f, 0xe2f0, 0xeba6, 0x0, 0x1);
        gbc.writeMem(0x88cb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x24aa, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cb));
        EXPECT(0xa7, gbc.readMem(0x88cc));
        // CB A7 01F3
        gbc.setState(0x36a9, 0xdc1f, 0xf360, 0x99f9, 0xf660, 0xbb0e, 0x0, 0x0);
        gbc.writeMem(0x36a9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdc1f, gbc.sp());
        EXPECT(0x36ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01F4
        gbc.setState(0xa0c0, 0xb433, 0x8cf0, 0x5845, 0x130e, 0x9d43, 0x1, 0x0);
        gbc.writeMem(0xa0c0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb433, gbc.sp());
        EXPECT(0xa0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c0));
        EXPECT(0xa7, gbc.readMem(0xa0c1));
        // CB A7 01F5
        gbc.setState(0x14de, 0xbbec, 0x79b0, 0x2d93, 0xd82c, 0x93be, 0x0, 0x0);
        gbc.writeMem(0x14de, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbbec, gbc.sp());
        EXPECT(0x14e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01F6
        gbc.setState(0x9edf, 0x6522, 0x4690, 0x11ab, 0x1531, 0x9948, 0x0, 0x1);
        gbc.writeMem(0x9edf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6522, gbc.sp());
        EXPECT(0x9ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9edf));
        EXPECT(0xa7, gbc.readMem(0x9ee0));
        // CB A7 01F7
        gbc.setState(0x38f4, 0x8e07, 0xca60, 0x6b08, 0xf962, 0x4255, 0x0, 0x0);
        gbc.writeMem(0x38f4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8e07, gbc.sp());
        EXPECT(0x38f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01F8
        gbc.setState(0xcf2c, 0x8fcb, 0xdbb0, 0xaf87, 0x3740, 0xf833, 0x1, 0x0);
        gbc.writeMem(0xcf2c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8fcb, gbc.sp());
        EXPECT(0xcf2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2c));
        EXPECT(0xa7, gbc.readMem(0xcf2d));
        // CB A7 01F9
        gbc.setState(0x69ee, 0x874d, 0x93c0, 0x64a4, 0x2bbd, 0xb949, 0x1, 0x0);
        gbc.writeMem(0x69ee, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x874d, gbc.sp());
        EXPECT(0x69f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01FA
        gbc.setState(0x6147, 0xc513, 0xb5f0, 0x9c4b, 0xcb33, 0x7034, 0x1, 0x0);
        gbc.writeMem(0x6147, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc513, gbc.sp());
        EXPECT(0x6149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 01FB
        gbc.setState(0xc322, 0xaab1, 0xd120, 0x4d06, 0x47c1, 0xa042, 0x1, 0x0);
        gbc.writeMem(0xc322, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaab1, gbc.sp());
        EXPECT(0xc324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc322));
        EXPECT(0xa7, gbc.readMem(0xc323));
        // CB A7 01FC
        gbc.setState(0xed61, 0xc58d, 0x7ad0, 0x756a, 0xa9e9, 0x1825, 0x0, 0x0);
        gbc.writeMem(0xed61, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc58d, gbc.sp());
        EXPECT(0xed63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed61));
        EXPECT(0xa7, gbc.readMem(0xed62));
        // CB A7 01FD
        gbc.setState(0x4cbe, 0x94c0, 0x3a20, 0xfe22, 0x4299, 0xf31, 0x1, 0x0);
        gbc.writeMem(0x4cbe, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x94c0, gbc.sp());
        EXPECT(0x4cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 01FE
        gbc.setState(0x9da5, 0xb2d1, 0x9e20, 0x295, 0x51b8, 0xedb0, 0x1, 0x0);
        gbc.writeMem(0x9da5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb2d1, gbc.sp());
        EXPECT(0x9da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da5));
        EXPECT(0xa7, gbc.readMem(0x9da6));
        // CB A7 01FF
        gbc.setState(0x3718, 0xe938, 0xaf50, 0x3b3e, 0x2719, 0xb39, 0x0, 0x0);
        gbc.writeMem(0x3718, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe938, gbc.sp());
        EXPECT(0x371a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0200
        gbc.setState(0x87bf, 0xf1ad, 0x5300, 0xb514, 0xe6c7, 0x9b81, 0x1, 0x0);
        gbc.writeMem(0x87bf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf1ad, gbc.sp());
        EXPECT(0x87c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87bf));
        EXPECT(0xa7, gbc.readMem(0x87c0));
        // CB A7 0201
        gbc.setState(0xc906, 0x144, 0x8af0, 0xc77, 0x6da7, 0x58bb, 0x0, 0x0);
        gbc.writeMem(0xc906, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x144, gbc.sp());
        EXPECT(0xc908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc906));
        EXPECT(0xa7, gbc.readMem(0xc907));
        // CB A7 0202
        gbc.setState(0x51dc, 0xa8f3, 0x18c0, 0xc39d, 0xe3a5, 0x75dd, 0x0, 0x0);
        gbc.writeMem(0x51dc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa8f3, gbc.sp());
        EXPECT(0x51de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0203
        gbc.setState(0xa6a3, 0x4a8f, 0xefd0, 0xcd7a, 0xf37b, 0xba0d, 0x0, 0x0);
        gbc.writeMem(0xa6a3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4a8f, gbc.sp());
        EXPECT(0xa6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a3));
        EXPECT(0xa7, gbc.readMem(0xa6a4));
        // CB A7 0204
        gbc.setState(0xa53, 0xc85d, 0xa960, 0x3662, 0x7d3d, 0x93d4, 0x1, 0x0);
        gbc.writeMem(0xa53, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc85d, gbc.sp());
        EXPECT(0xa55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0205
        gbc.setState(0xc9d1, 0xc65, 0x8240, 0x9b13, 0xfc92, 0x465d, 0x1, 0x1);
        gbc.writeMem(0xc9d1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc65, gbc.sp());
        EXPECT(0xc9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d1));
        EXPECT(0xa7, gbc.readMem(0xc9d2));
        // CB A7 0206
        gbc.setState(0x643f, 0x3ac1, 0xf780, 0x2f44, 0xe84, 0xed, 0x1, 0x1);
        gbc.writeMem(0x643f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3ac1, gbc.sp());
        EXPECT(0x6441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0207
        gbc.setState(0x34c0, 0x7ba2, 0x6410, 0xc353, 0x805c, 0x156f, 0x1, 0x0);
        gbc.writeMem(0x34c0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7ba2, gbc.sp());
        EXPECT(0x34c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0208
        gbc.setState(0x3f8, 0x1f51, 0x13d0, 0x8461, 0x77d4, 0x66dd, 0x1, 0x1);
        gbc.writeMem(0x3f8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1f51, gbc.sp());
        EXPECT(0x3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0209
        gbc.setState(0x4792, 0x7fcf, 0x3ef0, 0x7233, 0x1526, 0x297, 0x1, 0x0);
        gbc.writeMem(0x4792, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7fcf, gbc.sp());
        EXPECT(0x4794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 020A
        gbc.setState(0x4c49, 0x5d93, 0x3a50, 0x16d2, 0x6c2e, 0xd19d, 0x0, 0x0);
        gbc.writeMem(0x4c49, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5d93, gbc.sp());
        EXPECT(0x4c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 020B
        gbc.setState(0xb3b3, 0x88e, 0xa6c0, 0x403e, 0x45fd, 0x5934, 0x1, 0x0);
        gbc.writeMem(0xb3b3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x88e, gbc.sp());
        EXPECT(0xb3b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b3));
        EXPECT(0xa7, gbc.readMem(0xb3b4));
        // CB A7 020C
        gbc.setState(0x17c8, 0x5a67, 0x4a80, 0x75c0, 0xfadc, 0xc7ff, 0x0, 0x1);
        gbc.writeMem(0x17c8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5a67, gbc.sp());
        EXPECT(0x17ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 020D
        gbc.setState(0x52b3, 0x93dd, 0x570, 0x12e2, 0xc386, 0xcd85, 0x1, 0x1);
        gbc.writeMem(0x52b3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x93dd, gbc.sp());
        EXPECT(0x52b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 020E
        gbc.setState(0x1680, 0x3795, 0xaf20, 0x70e0, 0x3b75, 0x7dd5, 0x0, 0x1);
        gbc.writeMem(0x1680, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3795, gbc.sp());
        EXPECT(0x1682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 020F
        gbc.setState(0xb288, 0x35b4, 0x4990, 0xd03d, 0x7416, 0x71be, 0x0, 0x0);
        gbc.writeMem(0xb288, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x35b4, gbc.sp());
        EXPECT(0xb28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb288));
        EXPECT(0xa7, gbc.readMem(0xb289));
        // CB A7 0210
        gbc.setState(0x20f, 0xf5fe, 0x9f80, 0x82, 0x8468, 0x88b4, 0x1, 0x1);
        gbc.writeMem(0x20f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf5fe, gbc.sp());
        EXPECT(0x211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0211
        gbc.setState(0xe537, 0xe00d, 0xd210, 0x5c2f, 0x8f0a, 0x2af5, 0x1, 0x1);
        gbc.writeMem(0xe537, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe00d, gbc.sp());
        EXPECT(0xe539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe537));
        EXPECT(0xa7, gbc.readMem(0xe538));
        // CB A7 0212
        gbc.setState(0xc3d1, 0x28a2, 0xf860, 0xab38, 0x4c21, 0xd048, 0x0, 0x1);
        gbc.writeMem(0xc3d1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x28a2, gbc.sp());
        EXPECT(0xc3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d1));
        EXPECT(0xa7, gbc.readMem(0xc3d2));
        // CB A7 0213
        gbc.setState(0x13b9, 0x295d, 0x30, 0xf031, 0xbf11, 0xb1af, 0x0, 0x1);
        gbc.writeMem(0x13b9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x295d, gbc.sp());
        EXPECT(0x13bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0214
        gbc.setState(0x38dd, 0x3323, 0x2e30, 0x6c30, 0x5666, 0x56f4, 0x1, 0x1);
        gbc.writeMem(0x38dd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3323, gbc.sp());
        EXPECT(0x38df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0215
        gbc.setState(0x9bd7, 0xb893, 0xad60, 0x55de, 0x3b18, 0xfe26, 0x0, 0x1);
        gbc.writeMem(0x9bd7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb893, gbc.sp());
        EXPECT(0x9bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd7));
        EXPECT(0xa7, gbc.readMem(0x9bd8));
        // CB A7 0216
        gbc.setState(0xe47d, 0x8c6d, 0xe440, 0x1ff3, 0xfdc3, 0xfbf1, 0x0, 0x1);
        gbc.writeMem(0xe47d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8c6d, gbc.sp());
        EXPECT(0xe47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47d));
        EXPECT(0xa7, gbc.readMem(0xe47e));
        // CB A7 0217
        gbc.setState(0xbf0e, 0x22ba, 0x79b0, 0xb66d, 0x67fd, 0xb238, 0x1, 0x1);
        gbc.writeMem(0xbf0e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x22ba, gbc.sp());
        EXPECT(0xbf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0e));
        EXPECT(0xa7, gbc.readMem(0xbf0f));
        // CB A7 0219
        gbc.setState(0x9abb, 0xe395, 0xf500, 0x376b, 0x580e, 0x7be, 0x0, 0x0);
        gbc.writeMem(0x9abb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe395, gbc.sp());
        EXPECT(0x9abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abb));
        EXPECT(0xa7, gbc.readMem(0x9abc));
        // CB A7 021A
        gbc.setState(0x8b53, 0xff3c, 0xfa60, 0x9b14, 0xcd1b, 0x544a, 0x0, 0x1);
        gbc.writeMem(0x8b53, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xff3c, gbc.sp());
        EXPECT(0x8b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b53));
        EXPECT(0xa7, gbc.readMem(0x8b54));
        // CB A7 021B
        gbc.setState(0xaaa9, 0xc9f1, 0x390, 0xb045, 0x2a44, 0xc102, 0x1, 0x1);
        gbc.writeMem(0xaaa9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc9f1, gbc.sp());
        EXPECT(0xaaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa9));
        EXPECT(0xa7, gbc.readMem(0xaaaa));
        // CB A7 021C
        gbc.setState(0xaa51, 0x3f55, 0x53a0, 0xa34a, 0xc46f, 0xdb17, 0x1, 0x0);
        gbc.writeMem(0xaa51, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3f55, gbc.sp());
        EXPECT(0xaa53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa51));
        EXPECT(0xa7, gbc.readMem(0xaa52));
        // CB A7 021D
        gbc.setState(0x3ee1, 0xba1c, 0xd000, 0xab7c, 0xf40a, 0x5fed, 0x1, 0x1);
        gbc.writeMem(0x3ee1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xba1c, gbc.sp());
        EXPECT(0x3ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 021E
        gbc.setState(0x9d36, 0xb3dc, 0xe9e0, 0xc261, 0x5dbf, 0xd6d5, 0x0, 0x0);
        gbc.writeMem(0x9d36, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb3dc, gbc.sp());
        EXPECT(0x9d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d36));
        EXPECT(0xa7, gbc.readMem(0x9d37));
        // CB A7 021F
        gbc.setState(0xddc7, 0xa0eb, 0x52d0, 0xab87, 0xc6b3, 0x7192, 0x1, 0x1);
        gbc.writeMem(0xddc7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa0eb, gbc.sp());
        EXPECT(0xddc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc7));
        EXPECT(0xa7, gbc.readMem(0xddc8));
        // CB A7 0220
        gbc.setState(0x30ba, 0x1589, 0x7df0, 0xfad5, 0xeeb4, 0x9232, 0x0, 0x0);
        gbc.writeMem(0x30ba, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1589, gbc.sp());
        EXPECT(0x30bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0221
        gbc.setState(0x87f0, 0x6518, 0x5970, 0xbc2, 0x92f9, 0xa18b, 0x1, 0x1);
        gbc.writeMem(0x87f0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6518, gbc.sp());
        EXPECT(0x87f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f0));
        EXPECT(0xa7, gbc.readMem(0x87f1));
        // CB A7 0222
        gbc.setState(0xa361, 0xa395, 0x1c00, 0x50f6, 0xce31, 0x4d8b, 0x0, 0x1);
        gbc.writeMem(0xa361, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa395, gbc.sp());
        EXPECT(0xa363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa361));
        EXPECT(0xa7, gbc.readMem(0xa362));
        // CB A7 0223
        gbc.setState(0xa11e, 0x3597, 0xe90, 0xd5f4, 0xa28f, 0x30f2, 0x0, 0x0);
        gbc.writeMem(0xa11e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3597, gbc.sp());
        EXPECT(0xa120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11e));
        EXPECT(0xa7, gbc.readMem(0xa11f));
        // CB A7 0224
        gbc.setState(0x555e, 0xb22a, 0xde00, 0x1d7c, 0x8b93, 0xeb46, 0x1, 0x1);
        gbc.writeMem(0x555e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb22a, gbc.sp());
        EXPECT(0x5560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0226
        gbc.setState(0x9abd, 0xcded, 0x62e0, 0x3599, 0x97b5, 0xa93a, 0x0, 0x0);
        gbc.writeMem(0x9abd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcded, gbc.sp());
        EXPECT(0x9abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abd));
        EXPECT(0xa7, gbc.readMem(0x9abe));
        // CB A7 0227
        gbc.setState(0xb099, 0x418e, 0x8460, 0x8373, 0x8343, 0x19d, 0x1, 0x0);
        gbc.writeMem(0xb099, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x418e, gbc.sp());
        EXPECT(0xb09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb099));
        EXPECT(0xa7, gbc.readMem(0xb09a));
        // CB A7 0228
        gbc.setState(0xe60a, 0x9227, 0xb460, 0x3e58, 0xa3bf, 0xf800, 0x0, 0x1);
        gbc.writeMem(0xe60a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9227, gbc.sp());
        EXPECT(0xe60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60a));
        EXPECT(0xa7, gbc.readMem(0xe60b));
        // CB A7 0229
        gbc.setState(0x2dcb, 0x2ead, 0xb840, 0x793d, 0xde79, 0xf6bb, 0x1, 0x1);
        gbc.writeMem(0x2dcb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2ead, gbc.sp());
        EXPECT(0x2dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 022A
        gbc.setState(0x4d52, 0x4c8, 0x620, 0x56c0, 0xb304, 0x4911, 0x1, 0x0);
        gbc.writeMem(0x4d52, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4c8, gbc.sp());
        EXPECT(0x4d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 022B
        gbc.setState(0x1e1c, 0x3cca, 0xd460, 0x1118, 0xfe55, 0xcce6, 0x1, 0x0);
        gbc.writeMem(0x1e1c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3cca, gbc.sp());
        EXPECT(0x1e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 022C
        gbc.setState(0x1069, 0xdb3d, 0x1480, 0x40ef, 0x6559, 0xda95, 0x0, 0x0);
        gbc.writeMem(0x1069, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdb3d, gbc.sp());
        EXPECT(0x106b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 022E
        gbc.setState(0xd587, 0xda2c, 0xc40, 0x857e, 0xb366, 0x543c, 0x0, 0x0);
        gbc.writeMem(0xd587, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xda2c, gbc.sp());
        EXPECT(0xd589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd587));
        EXPECT(0xa7, gbc.readMem(0xd588));
        // CB A7 022F
        gbc.setState(0xc408, 0xcbd8, 0x9f00, 0x4985, 0xc804, 0x47a1, 0x0, 0x1);
        gbc.writeMem(0xc408, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcbd8, gbc.sp());
        EXPECT(0xc40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc408));
        EXPECT(0xa7, gbc.readMem(0xc409));
        // CB A7 0230
        gbc.setState(0xca2b, 0xf6b9, 0xd6f0, 0xa81d, 0x530f, 0xfd31, 0x1, 0x0);
        gbc.writeMem(0xca2b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf6b9, gbc.sp());
        EXPECT(0xca2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2b));
        EXPECT(0xa7, gbc.readMem(0xca2c));
        // CB A7 0231
        gbc.setState(0x8628, 0x4525, 0x72e0, 0xac45, 0x2b72, 0x7589, 0x0, 0x0);
        gbc.writeMem(0x8628, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4525, gbc.sp());
        EXPECT(0x862a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8628));
        EXPECT(0xa7, gbc.readMem(0x8629));
        // CB A7 0232
        gbc.setState(0xc3e7, 0x42f, 0x5d40, 0x653c, 0x2532, 0x14bd, 0x0, 0x1);
        gbc.writeMem(0xc3e7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x42f, gbc.sp());
        EXPECT(0xc3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e7));
        EXPECT(0xa7, gbc.readMem(0xc3e8));
        // CB A7 0234
        gbc.setState(0x283a, 0xe9b7, 0xa520, 0x2dcd, 0xc939, 0x5a40, 0x1, 0x1);
        gbc.writeMem(0x283a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe9b7, gbc.sp());
        EXPECT(0x283c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0235
        gbc.setState(0xe4a8, 0xa9a6, 0x13e0, 0xb343, 0x61df, 0xa7cc, 0x0, 0x1);
        gbc.writeMem(0xe4a8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa9a6, gbc.sp());
        EXPECT(0xe4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a8));
        EXPECT(0xa7, gbc.readMem(0xe4a9));
        // CB A7 0236
        gbc.setState(0x8860, 0x9aa4, 0xe9b0, 0x9e36, 0x9811, 0xf823, 0x0, 0x0);
        gbc.writeMem(0x8860, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9aa4, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8860));
        EXPECT(0xa7, gbc.readMem(0x8861));
        // CB A7 0237
        gbc.setState(0x1eca, 0x5f14, 0x4190, 0x30d2, 0x3080, 0xe1fb, 0x0, 0x1);
        gbc.writeMem(0x1eca, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5f14, gbc.sp());
        EXPECT(0x1ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0238
        gbc.setState(0x2dda, 0x895, 0xed10, 0x44e5, 0x77fd, 0xc769, 0x1, 0x1);
        gbc.writeMem(0x2dda, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x895, gbc.sp());
        EXPECT(0x2ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0239
        gbc.setState(0xd8bc, 0x3364, 0x19f0, 0x4aee, 0xf180, 0x93ae, 0x1, 0x1);
        gbc.writeMem(0xd8bc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3364, gbc.sp());
        EXPECT(0xd8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8bc));
        EXPECT(0xa7, gbc.readMem(0xd8bd));
        // CB A7 023A
        gbc.setState(0x8dd9, 0xad8c, 0xcca0, 0x5030, 0xb96, 0x86d1, 0x0, 0x0);
        gbc.writeMem(0x8dd9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xad8c, gbc.sp());
        EXPECT(0x8ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd9));
        EXPECT(0xa7, gbc.readMem(0x8dda));
        // CB A7 023B
        gbc.setState(0xcb36, 0xc870, 0x4430, 0x38d7, 0xad56, 0xbc7c, 0x1, 0x1);
        gbc.writeMem(0xcb36, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc870, gbc.sp());
        EXPECT(0xcb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb36));
        EXPECT(0xa7, gbc.readMem(0xcb37));
        // CB A7 023C
        gbc.setState(0x4fa, 0x3b15, 0x4a0, 0x142a, 0x7803, 0xd4e3, 0x1, 0x0);
        gbc.writeMem(0x4fa, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3b15, gbc.sp());
        EXPECT(0x4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 023D
        gbc.setState(0x744c, 0xc51f, 0xcb20, 0xd36f, 0x495e, 0x8cfa, 0x1, 0x1);
        gbc.writeMem(0x744c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc51f, gbc.sp());
        EXPECT(0x744e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 023E
        gbc.setState(0xc19f, 0xb17, 0x9270, 0x949, 0xddb3, 0xf2f8, 0x0, 0x1);
        gbc.writeMem(0xc19f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb17, gbc.sp());
        EXPECT(0xc1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc19f));
        EXPECT(0xa7, gbc.readMem(0xc1a0));
        // CB A7 023F
        gbc.setState(0x7945, 0x4cf0, 0xcaa0, 0x5e75, 0x79f7, 0x447f, 0x0, 0x1);
        gbc.writeMem(0x7945, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4cf0, gbc.sp());
        EXPECT(0x7947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0243
        gbc.setState(0x3335, 0xa005, 0xe7c0, 0xb9eb, 0x128b, 0xfc24, 0x0, 0x0);
        gbc.writeMem(0x3335, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa005, gbc.sp());
        EXPECT(0x3337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0244
        gbc.setState(0x5644, 0x2380, 0xbba0, 0xa1ab, 0xaf3e, 0x62c9, 0x1, 0x0);
        gbc.writeMem(0x5644, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2380, gbc.sp());
        EXPECT(0x5646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0245
        gbc.setState(0x3a4b, 0x46f8, 0x1070, 0x4cae, 0x4cf2, 0xdb04, 0x1, 0x0);
        gbc.writeMem(0x3a4b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x46f8, gbc.sp());
        EXPECT(0x3a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0246
        gbc.setState(0x8573, 0x5fd0, 0xce00, 0xa488, 0x6ca0, 0x6225, 0x0, 0x1);
        gbc.writeMem(0x8573, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5fd0, gbc.sp());
        EXPECT(0x8575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8573));
        EXPECT(0xa7, gbc.readMem(0x8574));
        // CB A7 0247
        gbc.setState(0x2ab2, 0x705b, 0xeb10, 0xced9, 0x8b0a, 0xde8d, 0x1, 0x1);
        gbc.writeMem(0x2ab2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x705b, gbc.sp());
        EXPECT(0x2ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0248
        gbc.setState(0xc839, 0x8641, 0x2f50, 0x6fa5, 0xef95, 0xfe34, 0x1, 0x1);
        gbc.writeMem(0xc839, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8641, gbc.sp());
        EXPECT(0xc83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc839));
        EXPECT(0xa7, gbc.readMem(0xc83a));
        // CB A7 0249
        gbc.setState(0x7326, 0x4643, 0xbd0, 0x9122, 0x8cc0, 0xba7f, 0x0, 0x1);
        gbc.writeMem(0x7326, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4643, gbc.sp());
        EXPECT(0x7328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 024A
        gbc.setState(0x8405, 0x3bc5, 0x8cb0, 0x9eb4, 0x2339, 0xc0e6, 0x0, 0x0);
        gbc.writeMem(0x8405, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3bc5, gbc.sp());
        EXPECT(0x8407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8405));
        EXPECT(0xa7, gbc.readMem(0x8406));
        // CB A7 024B
        gbc.setState(0xddf, 0x4be4, 0xe100, 0xbf53, 0x9caa, 0x47f5, 0x0, 0x0);
        gbc.writeMem(0xddf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4be4, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 024C
        gbc.setState(0x5ad0, 0x5741, 0xe990, 0xf083, 0xbb86, 0x3018, 0x1, 0x1);
        gbc.writeMem(0x5ad0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5741, gbc.sp());
        EXPECT(0x5ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 024D
        gbc.setState(0xddb, 0x39f5, 0xb150, 0x7a89, 0xdfed, 0x5eda, 0x0, 0x0);
        gbc.writeMem(0xddb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x39f5, gbc.sp());
        EXPECT(0xddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 024E
        gbc.setState(0x3d06, 0x4a13, 0xcea0, 0x5f29, 0x9e0d, 0x16e1, 0x0, 0x1);
        gbc.writeMem(0x3d06, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4a13, gbc.sp());
        EXPECT(0x3d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 024F
        gbc.setState(0x8545, 0x43b1, 0x4f00, 0x4d8b, 0xbdf9, 0xee6, 0x0, 0x1);
        gbc.writeMem(0x8545, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x43b1, gbc.sp());
        EXPECT(0x8547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8545));
        EXPECT(0xa7, gbc.readMem(0x8546));
        // CB A7 0250
        gbc.setState(0xb2bc, 0x964c, 0x86b0, 0x2e25, 0x3cc7, 0x3735, 0x1, 0x1);
        gbc.writeMem(0xb2bc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x964c, gbc.sp());
        EXPECT(0xb2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2bc));
        EXPECT(0xa7, gbc.readMem(0xb2bd));
        // CB A7 0251
        gbc.setState(0x65b3, 0xe3d5, 0x9240, 0xc575, 0xe8b7, 0xdb3, 0x1, 0x0);
        gbc.writeMem(0x65b3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe3d5, gbc.sp());
        EXPECT(0x65b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0252
        gbc.setState(0x1a8d, 0xb202, 0xe9a0, 0xb03e, 0x333c, 0x6a5, 0x0, 0x1);
        gbc.writeMem(0x1a8d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb202, gbc.sp());
        EXPECT(0x1a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0253
        gbc.setState(0x5e68, 0x6b66, 0x81e0, 0x9f39, 0x3d64, 0xc8a0, 0x1, 0x0);
        gbc.writeMem(0x5e68, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6b66, gbc.sp());
        EXPECT(0x5e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0254
        gbc.setState(0x6ab3, 0xbba8, 0x4bf0, 0x3c74, 0x6a30, 0x2c36, 0x1, 0x0);
        gbc.writeMem(0x6ab3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbba8, gbc.sp());
        EXPECT(0x6ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0255
        gbc.setState(0x2797, 0x8ec, 0xcb0, 0xfc80, 0x3a68, 0x4524, 0x0, 0x0);
        gbc.writeMem(0x2797, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8ec, gbc.sp());
        EXPECT(0x2799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0258
        gbc.setState(0xbb4a, 0x4bf8, 0x4d40, 0x12d2, 0xabc1, 0x1651, 0x0, 0x0);
        gbc.writeMem(0xbb4a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4bf8, gbc.sp());
        EXPECT(0xbb4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4a));
        EXPECT(0xa7, gbc.readMem(0xbb4b));
        // CB A7 0259
        gbc.setState(0x1885, 0x2355, 0x3360, 0x59dd, 0x3b76, 0x5100, 0x0, 0x1);
        gbc.writeMem(0x1885, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2355, gbc.sp());
        EXPECT(0x1887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 025A
        gbc.setState(0xc2d5, 0x2aee, 0x3a60, 0xc8a, 0xc9aa, 0x347, 0x1, 0x1);
        gbc.writeMem(0xc2d5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2aee, gbc.sp());
        EXPECT(0xc2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d5));
        EXPECT(0xa7, gbc.readMem(0xc2d6));
        // CB A7 025B
        gbc.setState(0x2eb4, 0x7660, 0x190, 0xb611, 0xd8d4, 0x1f6, 0x1, 0x1);
        gbc.writeMem(0x2eb4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7660, gbc.sp());
        EXPECT(0x2eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 025C
        gbc.setState(0xd132, 0xa9ad, 0x8300, 0xcee4, 0xbb1c, 0xca0c, 0x1, 0x0);
        gbc.writeMem(0xd132, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa9ad, gbc.sp());
        EXPECT(0xd134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd132));
        EXPECT(0xa7, gbc.readMem(0xd133));
        // CB A7 025D
        gbc.setState(0x98a3, 0x79ae, 0xc8e0, 0xfcc3, 0x142e, 0xc67d, 0x1, 0x1);
        gbc.writeMem(0x98a3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x79ae, gbc.sp());
        EXPECT(0x98a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a3));
        EXPECT(0xa7, gbc.readMem(0x98a4));
        // CB A7 025F
        gbc.setState(0x8953, 0xc82b, 0x8bd0, 0xb05b, 0x9ce3, 0xe838, 0x0, 0x0);
        gbc.writeMem(0x8953, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc82b, gbc.sp());
        EXPECT(0x8955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8953));
        EXPECT(0xa7, gbc.readMem(0x8954));
        // CB A7 0260
        gbc.setState(0x9c64, 0x212a, 0xa220, 0xf5b2, 0x441f, 0xb290, 0x0, 0x1);
        gbc.writeMem(0x9c64, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x212a, gbc.sp());
        EXPECT(0x9c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c64));
        EXPECT(0xa7, gbc.readMem(0x9c65));
        // CB A7 0261
        gbc.setState(0x9089, 0x1bb, 0xc0, 0x1c84, 0x9338, 0xcf45, 0x1, 0x0);
        gbc.writeMem(0x9089, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1bb, gbc.sp());
        EXPECT(0x908b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9089));
        EXPECT(0xa7, gbc.readMem(0x908a));
        // CB A7 0262
        gbc.setState(0x5dde, 0xc910, 0x9470, 0x50b7, 0xa951, 0xc485, 0x1, 0x1);
        gbc.writeMem(0x5dde, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc910, gbc.sp());
        EXPECT(0x5de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0264
        gbc.setState(0x238d, 0xcebf, 0x3950, 0x3008, 0x3c37, 0x4b0f, 0x0, 0x1);
        gbc.writeMem(0x238d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcebf, gbc.sp());
        EXPECT(0x238f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0265
        gbc.setState(0x1eec, 0x64ae, 0x9c00, 0x8df2, 0x8b6f, 0x2eb1, 0x0, 0x1);
        gbc.writeMem(0x1eec, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x64ae, gbc.sp());
        EXPECT(0x1eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0266
        gbc.setState(0xb939, 0x495d, 0x4de0, 0xdd5a, 0x3627, 0xa4ac, 0x0, 0x0);
        gbc.writeMem(0xb939, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x495d, gbc.sp());
        EXPECT(0xb93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb939));
        EXPECT(0xa7, gbc.readMem(0xb93a));
        // CB A7 0267
        gbc.setState(0xd7e, 0xa5d9, 0x7780, 0x487a, 0xb90d, 0xc525, 0x1, 0x0);
        gbc.writeMem(0xd7e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa5d9, gbc.sp());
        EXPECT(0xd80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0268
        gbc.setState(0x4a8e, 0x979c, 0xce80, 0x5173, 0x62bb, 0x9ba, 0x1, 0x1);
        gbc.writeMem(0x4a8e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x979c, gbc.sp());
        EXPECT(0x4a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0269
        gbc.setState(0x9341, 0x4bed, 0x9840, 0x82fa, 0x38a8, 0xaaee, 0x0, 0x1);
        gbc.writeMem(0x9341, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4bed, gbc.sp());
        EXPECT(0x9343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9341));
        EXPECT(0xa7, gbc.readMem(0x9342));
        // CB A7 026A
        gbc.setState(0x53e9, 0x85ad, 0xe2e0, 0x9778, 0xc3bf, 0x598c, 0x1, 0x1);
        gbc.writeMem(0x53e9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x85ad, gbc.sp());
        EXPECT(0x53eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 026B
        gbc.setState(0x4c18, 0x4130, 0xf160, 0x96d2, 0xf6bb, 0x6ffb, 0x0, 0x1);
        gbc.writeMem(0x4c18, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4130, gbc.sp());
        EXPECT(0x4c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 026C
        gbc.setState(0xde63, 0x2705, 0x84a0, 0xd212, 0x906b, 0x38cb, 0x0, 0x1);
        gbc.writeMem(0xde63, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2705, gbc.sp());
        EXPECT(0xde65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde63));
        EXPECT(0xa7, gbc.readMem(0xde64));
        // CB A7 026D
        gbc.setState(0x9e66, 0x310d, 0xced0, 0xcd1a, 0xdf25, 0x241d, 0x1, 0x1);
        gbc.writeMem(0x9e66, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x310d, gbc.sp());
        EXPECT(0x9e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e66));
        EXPECT(0xa7, gbc.readMem(0x9e67));
        // CB A7 026E
        gbc.setState(0x5a32, 0xa1e1, 0xf0a0, 0x2e5b, 0xa28c, 0x4add, 0x1, 0x0);
        gbc.writeMem(0x5a32, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa1e1, gbc.sp());
        EXPECT(0x5a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 026F
        gbc.setState(0xd339, 0xb979, 0xfb40, 0x924b, 0xb042, 0x9822, 0x1, 0x1);
        gbc.writeMem(0xd339, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb979, gbc.sp());
        EXPECT(0xd33b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd339));
        EXPECT(0xa7, gbc.readMem(0xd33a));
        // CB A7 0270
        gbc.setState(0x58db, 0x1286, 0x1e50, 0x8260, 0x97ee, 0xb8e0, 0x1, 0x1);
        gbc.writeMem(0x58db, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1286, gbc.sp());
        EXPECT(0x58dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0271
        gbc.setState(0x4b70, 0x7409, 0x3480, 0x1f7e, 0x201a, 0xa62c, 0x0, 0x1);
        gbc.writeMem(0x4b70, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7409, gbc.sp());
        EXPECT(0x4b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0272
        gbc.setState(0x2c58, 0xe726, 0x4720, 0xcc1e, 0x1388, 0xafea, 0x1, 0x0);
        gbc.writeMem(0x2c58, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe726, gbc.sp());
        EXPECT(0x2c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0273
        gbc.setState(0xa8cc, 0xfd16, 0x7bb0, 0x3de6, 0x1d16, 0x7a4a, 0x1, 0x1);
        gbc.writeMem(0xa8cc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0xa8ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cc));
        EXPECT(0xa7, gbc.readMem(0xa8cd));
        // CB A7 0275
        gbc.setState(0x3cb0, 0xafef, 0x5b50, 0xe806, 0x61cc, 0xfeea, 0x1, 0x0);
        gbc.writeMem(0x3cb0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xafef, gbc.sp());
        EXPECT(0x3cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0276
        gbc.setState(0xcb1, 0x180f, 0xba00, 0xde32, 0x7d8, 0x5377, 0x0, 0x1);
        gbc.writeMem(0xcb1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x180f, gbc.sp());
        EXPECT(0xcb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0277
        gbc.setState(0x19db, 0x9e98, 0x4460, 0x98c3, 0x2f49, 0x68b4, 0x1, 0x0);
        gbc.writeMem(0x19db, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9e98, gbc.sp());
        EXPECT(0x19dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0278
        gbc.setState(0x436f, 0xb0e1, 0x81d0, 0x3571, 0xbb3, 0xc6d8, 0x0, 0x0);
        gbc.writeMem(0x436f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb0e1, gbc.sp());
        EXPECT(0x4371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0279
        gbc.setState(0xc5e3, 0x7908, 0xa630, 0x40f9, 0x4eeb, 0xe6c, 0x0, 0x0);
        gbc.writeMem(0xc5e3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7908, gbc.sp());
        EXPECT(0xc5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e3));
        EXPECT(0xa7, gbc.readMem(0xc5e4));
        // CB A7 027A
        gbc.setState(0x4ca7, 0x6431, 0x280, 0xde62, 0x95eb, 0xba4c, 0x1, 0x0);
        gbc.writeMem(0x4ca7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6431, gbc.sp());
        EXPECT(0x4ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 027B
        gbc.setState(0xb343, 0x384d, 0xac0, 0xb361, 0x769e, 0x2d60, 0x0, 0x1);
        gbc.writeMem(0xb343, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x384d, gbc.sp());
        EXPECT(0xb345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb343));
        EXPECT(0xa7, gbc.readMem(0xb344));
        // CB A7 027C
        gbc.setState(0x2e3a, 0x5001, 0xcd50, 0x161f, 0xa404, 0x5b24, 0x0, 0x0);
        gbc.writeMem(0x2e3a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5001, gbc.sp());
        EXPECT(0x2e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 027D
        gbc.setState(0x750a, 0xbfb2, 0x1430, 0x2942, 0x3ea0, 0xd404, 0x1, 0x0);
        gbc.writeMem(0x750a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbfb2, gbc.sp());
        EXPECT(0x750c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 027E
        gbc.setState(0x19c1, 0x6a3, 0x6af0, 0x953f, 0x7bbd, 0xa0c1, 0x0, 0x0);
        gbc.writeMem(0x19c1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6a3, gbc.sp());
        EXPECT(0x19c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 027F
        gbc.setState(0x7074, 0x10f6, 0xf1f0, 0xb344, 0x615e, 0x7f13, 0x1, 0x1);
        gbc.writeMem(0x7074, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x10f6, gbc.sp());
        EXPECT(0x7076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0280
        gbc.setState(0x1f9e, 0xcdbb, 0x5880, 0xec01, 0xe565, 0x132, 0x0, 0x0);
        gbc.writeMem(0x1f9e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcdbb, gbc.sp());
        EXPECT(0x1fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0281
        gbc.setState(0xb71f, 0x1851, 0x6b0, 0xebc9, 0x62ec, 0x81d5, 0x1, 0x0);
        gbc.writeMem(0xb71f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1851, gbc.sp());
        EXPECT(0xb721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb71f));
        EXPECT(0xa7, gbc.readMem(0xb720));
        // CB A7 0282
        gbc.setState(0x3830, 0x6a39, 0x2f20, 0x1db7, 0x7096, 0x1d85, 0x1, 0x1);
        gbc.writeMem(0x3830, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6a39, gbc.sp());
        EXPECT(0x3832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0283
        gbc.setState(0x8b06, 0x1d04, 0x33b0, 0x13df, 0xa47e, 0xa0d0, 0x0, 0x0);
        gbc.writeMem(0x8b06, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1d04, gbc.sp());
        EXPECT(0x8b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b06));
        EXPECT(0xa7, gbc.readMem(0x8b07));
        // CB A7 0284
        gbc.setState(0x55d6, 0xbdb3, 0x7c80, 0xbed3, 0xab6a, 0x4110, 0x1, 0x1);
        gbc.writeMem(0x55d6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbdb3, gbc.sp());
        EXPECT(0x55d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0285
        gbc.setState(0xe247, 0x68ba, 0xfa10, 0xf8d1, 0x7b32, 0x5e7, 0x1, 0x0);
        gbc.writeMem(0xe247, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x68ba, gbc.sp());
        EXPECT(0xe249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe247));
        EXPECT(0xa7, gbc.readMem(0xe248));
        // CB A7 0287
        gbc.setState(0xdd38, 0xab9, 0x9e60, 0x542d, 0xa55e, 0xb8a4, 0x0, 0x0);
        gbc.writeMem(0xdd38, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xab9, gbc.sp());
        EXPECT(0xdd3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd38));
        EXPECT(0xa7, gbc.readMem(0xdd39));
        // CB A7 0288
        gbc.setState(0x532e, 0xa754, 0x2700, 0x84a6, 0x56ed, 0x9f00, 0x1, 0x1);
        gbc.writeMem(0x532e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa754, gbc.sp());
        EXPECT(0x5330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0289
        gbc.setState(0x835f, 0xf2de, 0x4620, 0x9f31, 0x6e6e, 0x5ef1, 0x0, 0x1);
        gbc.writeMem(0x835f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf2de, gbc.sp());
        EXPECT(0x8361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835f));
        EXPECT(0xa7, gbc.readMem(0x8360));
        // CB A7 028A
        gbc.setState(0xbdb8, 0x493, 0x5e30, 0xccf2, 0xf9b1, 0x496a, 0x1, 0x1);
        gbc.writeMem(0xbdb8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x493, gbc.sp());
        EXPECT(0xbdba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb8));
        EXPECT(0xa7, gbc.readMem(0xbdb9));
        // CB A7 028B
        gbc.setState(0x48de, 0x2903, 0xa1a0, 0xc858, 0x6f4c, 0x36fe, 0x1, 0x0);
        gbc.writeMem(0x48de, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2903, gbc.sp());
        EXPECT(0x48e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 028C
        gbc.setState(0xcb6a, 0xfae1, 0x3dc0, 0xec1b, 0x771e, 0xcb8b, 0x0, 0x0);
        gbc.writeMem(0xcb6a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfae1, gbc.sp());
        EXPECT(0xcb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6a));
        EXPECT(0xa7, gbc.readMem(0xcb6b));
        // CB A7 028D
        gbc.setState(0x1aa0, 0xf5b2, 0xf770, 0xd9a4, 0x7508, 0xbc48, 0x0, 0x1);
        gbc.writeMem(0x1aa0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf5b2, gbc.sp());
        EXPECT(0x1aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 028E
        gbc.setState(0xb134, 0xec4, 0xfd80, 0xe3d4, 0x8082, 0x35ac, 0x0, 0x1);
        gbc.writeMem(0xb134, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xec4, gbc.sp());
        EXPECT(0xb136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb134));
        EXPECT(0xa7, gbc.readMem(0xb135));
        // CB A7 028F
        gbc.setState(0xe8d, 0xb192, 0xd520, 0x726e, 0x6bfb, 0x93f2, 0x0, 0x1);
        gbc.writeMem(0xe8d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb192, gbc.sp());
        EXPECT(0xe8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0290
        gbc.setState(0xcb84, 0xd163, 0x3fd0, 0x488, 0x92d3, 0xa30c, 0x0, 0x1);
        gbc.writeMem(0xcb84, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd163, gbc.sp());
        EXPECT(0xcb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb84));
        EXPECT(0xa7, gbc.readMem(0xcb85));
        // CB A7 0291
        gbc.setState(0x2aa6, 0xc75, 0xab80, 0xd7f1, 0xace9, 0xfd09, 0x1, 0x0);
        gbc.writeMem(0x2aa6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc75, gbc.sp());
        EXPECT(0x2aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0292
        gbc.setState(0x5d7b, 0x59d1, 0x2980, 0xe4aa, 0x70a0, 0xbecb, 0x1, 0x0);
        gbc.writeMem(0x5d7b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x59d1, gbc.sp());
        EXPECT(0x5d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0293
        gbc.setState(0x702c, 0x7f04, 0x91b0, 0xb78b, 0xebec, 0xa790, 0x0, 0x1);
        gbc.writeMem(0x702c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7f04, gbc.sp());
        EXPECT(0x702e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0294
        gbc.setState(0x10af, 0x60b3, 0x4470, 0x869d, 0x510d, 0xf2b5, 0x0, 0x0);
        gbc.writeMem(0x10af, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x60b3, gbc.sp());
        EXPECT(0x10b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0295
        gbc.setState(0x636f, 0xbf31, 0xa980, 0xa8eb, 0x39fa, 0x4ff5, 0x1, 0x1);
        gbc.writeMem(0x636f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbf31, gbc.sp());
        EXPECT(0x6371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0296
        gbc.setState(0xd365, 0x3167, 0xb530, 0x8329, 0x3349, 0x9985, 0x1, 0x1);
        gbc.writeMem(0xd365, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3167, gbc.sp());
        EXPECT(0xd367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd365));
        EXPECT(0xa7, gbc.readMem(0xd366));
        // CB A7 0297
        gbc.setState(0x5337, 0x2aa, 0xbb80, 0x5965, 0x50c1, 0xddb5, 0x0, 0x1);
        gbc.writeMem(0x5337, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2aa, gbc.sp());
        EXPECT(0x5339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0298
        gbc.setState(0x8bc6, 0x1305, 0xf320, 0x3e6d, 0xa470, 0xa96a, 0x0, 0x0);
        gbc.writeMem(0x8bc6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1305, gbc.sp());
        EXPECT(0x8bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc6));
        EXPECT(0xa7, gbc.readMem(0x8bc7));
        // CB A7 0299
        gbc.setState(0x46c4, 0x42a1, 0xc3d0, 0x90e5, 0xb84e, 0x3697, 0x1, 0x0);
        gbc.writeMem(0x46c4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x42a1, gbc.sp());
        EXPECT(0x46c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 029A
        gbc.setState(0xd427, 0x1af0, 0x5c70, 0xbd9e, 0x83d0, 0x457, 0x1, 0x1);
        gbc.writeMem(0xd427, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1af0, gbc.sp());
        EXPECT(0xd429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd427));
        EXPECT(0xa7, gbc.readMem(0xd428));
        // CB A7 029B
        gbc.setState(0x5ac1, 0xd611, 0x4cc0, 0x7e1d, 0x9e6c, 0x297e, 0x1, 0x1);
        gbc.writeMem(0x5ac1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd611, gbc.sp());
        EXPECT(0x5ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 029C
        gbc.setState(0xac35, 0x9f73, 0xc270, 0x6fcd, 0xee13, 0x44d9, 0x0, 0x0);
        gbc.writeMem(0xac35, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9f73, gbc.sp());
        EXPECT(0xac37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac35));
        EXPECT(0xa7, gbc.readMem(0xac36));
        // CB A7 029D
        gbc.setState(0x5451, 0x1bcc, 0xd5e0, 0xad87, 0x172a, 0xaadc, 0x1, 0x0);
        gbc.writeMem(0x5451, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1bcc, gbc.sp());
        EXPECT(0x5453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 029E
        gbc.setState(0xd861, 0x3a26, 0x39d0, 0x37b0, 0xd060, 0x289, 0x1, 0x0);
        gbc.writeMem(0xd861, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3a26, gbc.sp());
        EXPECT(0xd863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd861));
        EXPECT(0xa7, gbc.readMem(0xd862));
        // CB A7 029F
        gbc.setState(0x9a91, 0xd841, 0xcc70, 0x5b20, 0xbcd1, 0xbb2e, 0x0, 0x1);
        gbc.writeMem(0x9a91, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd841, gbc.sp());
        EXPECT(0x9a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a91));
        EXPECT(0xa7, gbc.readMem(0x9a92));
        // CB A7 02A0
        gbc.setState(0x9c7c, 0x8d2d, 0x3170, 0x3e21, 0x2caa, 0x8df, 0x0, 0x1);
        gbc.writeMem(0x9c7c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8d2d, gbc.sp());
        EXPECT(0x9c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7c));
        EXPECT(0xa7, gbc.readMem(0x9c7d));
        // CB A7 02A1
        gbc.setState(0xcea9, 0xf77b, 0xad70, 0xe220, 0xe10c, 0xade6, 0x1, 0x0);
        gbc.writeMem(0xcea9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf77b, gbc.sp());
        EXPECT(0xceab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea9));
        EXPECT(0xa7, gbc.readMem(0xceaa));
        // CB A7 02A2
        gbc.setState(0xac53, 0x3d1, 0x2c40, 0xa02b, 0xd303, 0xbd9b, 0x0, 0x0);
        gbc.writeMem(0xac53, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3d1, gbc.sp());
        EXPECT(0xac55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac53));
        EXPECT(0xa7, gbc.readMem(0xac54));
        // CB A7 02A3
        gbc.setState(0x86c6, 0x9b27, 0x4c20, 0x2bde, 0x8368, 0x335e, 0x0, 0x1);
        gbc.writeMem(0x86c6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0x86c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c6));
        EXPECT(0xa7, gbc.readMem(0x86c7));
        // CB A7 02A4
        gbc.setState(0x872b, 0x1b43, 0x3c20, 0x262c, 0x9ef5, 0x434e, 0x0, 0x0);
        gbc.writeMem(0x872b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1b43, gbc.sp());
        EXPECT(0x872d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x872b));
        EXPECT(0xa7, gbc.readMem(0x872c));
        // CB A7 02A5
        gbc.setState(0x46b6, 0xf8d3, 0x7ac0, 0x2d14, 0x3d2d, 0xb951, 0x0, 0x1);
        gbc.writeMem(0x46b6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf8d3, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02A6
        gbc.setState(0x3e92, 0xabc6, 0x9790, 0x5c1a, 0x1f38, 0xcf2b, 0x1, 0x1);
        gbc.writeMem(0x3e92, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xabc6, gbc.sp());
        EXPECT(0x3e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02A7
        gbc.setState(0x72cc, 0x94c9, 0x2680, 0x2784, 0x96f6, 0x6148, 0x0, 0x1);
        gbc.writeMem(0x72cc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x94c9, gbc.sp());
        EXPECT(0x72ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02A8
        gbc.setState(0x5f6d, 0x512d, 0x3d20, 0xa786, 0xc9ea, 0xb554, 0x0, 0x1);
        gbc.writeMem(0x5f6d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x512d, gbc.sp());
        EXPECT(0x5f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02AA
        gbc.setState(0xae1, 0x4553, 0x6090, 0x1ef3, 0x828b, 0x2f00, 0x1, 0x1);
        gbc.writeMem(0xae1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4553, gbc.sp());
        EXPECT(0xae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02AB
        gbc.setState(0xe335, 0x9d0, 0x650, 0xa075, 0x1685, 0xc76c, 0x1, 0x1);
        gbc.writeMem(0xe335, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9d0, gbc.sp());
        EXPECT(0xe337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe335));
        EXPECT(0xa7, gbc.readMem(0xe336));
        // CB A7 02AC
        gbc.setState(0xb524, 0xef0e, 0x7610, 0x5fb7, 0x6f47, 0x59e8, 0x1, 0x1);
        gbc.writeMem(0xb524, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xef0e, gbc.sp());
        EXPECT(0xb526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb524));
        EXPECT(0xa7, gbc.readMem(0xb525));
        // CB A7 02AD
        gbc.setState(0xc7f2, 0x800b, 0x4c30, 0x4b38, 0x362e, 0x4c80, 0x0, 0x0);
        gbc.writeMem(0xc7f2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x800b, gbc.sp());
        EXPECT(0xc7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f2));
        EXPECT(0xa7, gbc.readMem(0xc7f3));
        // CB A7 02AE
        gbc.setState(0x5354, 0x3849, 0x4a10, 0xd919, 0xa0bf, 0xa6cf, 0x0, 0x0);
        gbc.writeMem(0x5354, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3849, gbc.sp());
        EXPECT(0x5356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02AF
        gbc.setState(0x8b90, 0x45a2, 0x5700, 0xbf18, 0x3216, 0x84a9, 0x0, 0x0);
        gbc.writeMem(0x8b90, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x45a2, gbc.sp());
        EXPECT(0x8b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b90));
        EXPECT(0xa7, gbc.readMem(0x8b91));
        // CB A7 02B0
        gbc.setState(0x5419, 0xace0, 0x770, 0xa4f5, 0xc315, 0xa721, 0x0, 0x1);
        gbc.writeMem(0x5419, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xace0, gbc.sp());
        EXPECT(0x541b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02B1
        gbc.setState(0x7eeb, 0xc085, 0xf9a0, 0x8566, 0xe98, 0x3e20, 0x1, 0x1);
        gbc.writeMem(0x7eeb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc085, gbc.sp());
        EXPECT(0x7eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02B2
        gbc.setState(0xb1c1, 0xc90a, 0xd4c0, 0x59c, 0x7087, 0xb8, 0x1, 0x0);
        gbc.writeMem(0xb1c1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc90a, gbc.sp());
        EXPECT(0xb1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c1));
        EXPECT(0xa7, gbc.readMem(0xb1c2));
        // CB A7 02B3
        gbc.setState(0xa6f8, 0xa3e6, 0x5e20, 0x6aba, 0xc201, 0xaeaa, 0x1, 0x1);
        gbc.writeMem(0xa6f8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa3e6, gbc.sp());
        EXPECT(0xa6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f8));
        EXPECT(0xa7, gbc.readMem(0xa6f9));
        // CB A7 02B4
        gbc.setState(0x393c, 0x4f9c, 0x8e60, 0xb407, 0x8533, 0xc4c5, 0x0, 0x0);
        gbc.writeMem(0x393c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4f9c, gbc.sp());
        EXPECT(0x393e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02B5
        gbc.setState(0x9e7f, 0x6c0e, 0x6520, 0x1bec, 0xdd25, 0x32b5, 0x0, 0x1);
        gbc.writeMem(0x9e7f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6c0e, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7f));
        EXPECT(0xa7, gbc.readMem(0x9e80));
        // CB A7 02B6
        gbc.setState(0x3605, 0xcdba, 0xbca0, 0xe528, 0x1a24, 0x2bd5, 0x0, 0x1);
        gbc.writeMem(0x3605, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcdba, gbc.sp());
        EXPECT(0x3607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02B7
        gbc.setState(0xa48e, 0x6d32, 0xc170, 0xded6, 0xdfa4, 0x4f24, 0x1, 0x1);
        gbc.writeMem(0xa48e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6d32, gbc.sp());
        EXPECT(0xa490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa48e));
        EXPECT(0xa7, gbc.readMem(0xa48f));
        // CB A7 02B8
        gbc.setState(0x2f44, 0xbf02, 0xb1e0, 0xf5ab, 0x840e, 0x4deb, 0x1, 0x0);
        gbc.writeMem(0x2f44, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbf02, gbc.sp());
        EXPECT(0x2f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02B9
        gbc.setState(0xccb1, 0xe793, 0x57e0, 0x9706, 0x9cf4, 0x6dce, 0x0, 0x1);
        gbc.writeMem(0xccb1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe793, gbc.sp());
        EXPECT(0xccb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb1));
        EXPECT(0xa7, gbc.readMem(0xccb2));
        // CB A7 02BA
        gbc.setState(0x2601, 0x98a8, 0xb730, 0x2935, 0xbb0d, 0x6ca, 0x0, 0x1);
        gbc.writeMem(0x2601, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x98a8, gbc.sp());
        EXPECT(0x2603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02BB
        gbc.setState(0xe1a2, 0xebbd, 0x5550, 0x27e7, 0x2a53, 0xb684, 0x1, 0x0);
        gbc.writeMem(0xe1a2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xebbd, gbc.sp());
        EXPECT(0xe1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a2));
        EXPECT(0xa7, gbc.readMem(0xe1a3));
        // CB A7 02BC
        gbc.setState(0x988f, 0x4f70, 0x26d0, 0x8d4b, 0xa55c, 0x5fae, 0x1, 0x1);
        gbc.writeMem(0x988f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4f70, gbc.sp());
        EXPECT(0x9891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988f));
        EXPECT(0xa7, gbc.readMem(0x9890));
        // CB A7 02BD
        gbc.setState(0xa50a, 0xb27e, 0x34f0, 0x4647, 0xde5a, 0xad6c, 0x0, 0x1);
        gbc.writeMem(0xa50a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0xa50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50a));
        EXPECT(0xa7, gbc.readMem(0xa50b));
        // CB A7 02BE
        gbc.setState(0x84b7, 0x8ac0, 0x4b10, 0xee21, 0xf8f7, 0x70ad, 0x1, 0x1);
        gbc.writeMem(0x84b7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8ac0, gbc.sp());
        EXPECT(0x84b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b7));
        EXPECT(0xa7, gbc.readMem(0x84b8));
        // CB A7 02BF
        gbc.setState(0x422d, 0xe2c0, 0x5ac0, 0x624, 0x8813, 0x5bda, 0x1, 0x0);
        gbc.writeMem(0x422d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe2c0, gbc.sp());
        EXPECT(0x422f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02C0
        gbc.setState(0xedbb, 0xe99d, 0x480, 0x9a7a, 0x6ae4, 0xf054, 0x1, 0x1);
        gbc.writeMem(0xedbb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe99d, gbc.sp());
        EXPECT(0xedbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedbb));
        EXPECT(0xa7, gbc.readMem(0xedbc));
        // CB A7 02C1
        gbc.setState(0x361d, 0xd399, 0x5b50, 0xef01, 0x32a3, 0x7b5c, 0x1, 0x1);
        gbc.writeMem(0x361d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd399, gbc.sp());
        EXPECT(0x361f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02C2
        gbc.setState(0xaefa, 0xa334, 0x99a0, 0x56f2, 0x3f09, 0xd1da, 0x1, 0x0);
        gbc.writeMem(0xaefa, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa334, gbc.sp());
        EXPECT(0xaefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaefa));
        EXPECT(0xa7, gbc.readMem(0xaefb));
        // CB A7 02C3
        gbc.setState(0xb77e, 0xe371, 0xd000, 0x9546, 0x3ff3, 0x8219, 0x1, 0x0);
        gbc.writeMem(0xb77e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe371, gbc.sp());
        EXPECT(0xb780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77e));
        EXPECT(0xa7, gbc.readMem(0xb77f));
        // CB A7 02C4
        gbc.setState(0x2b60, 0x3cfc, 0x9070, 0x8fab, 0x7466, 0x7343, 0x0, 0x1);
        gbc.writeMem(0x2b60, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3cfc, gbc.sp());
        EXPECT(0x2b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02C5
        gbc.setState(0x1087, 0x66f9, 0x170, 0x74f9, 0x510c, 0x5c8d, 0x1, 0x0);
        gbc.writeMem(0x1087, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x66f9, gbc.sp());
        EXPECT(0x1089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02C6
        gbc.setState(0x882b, 0xbb24, 0xf7d0, 0x95e8, 0x44f5, 0x7de5, 0x1, 0x1);
        gbc.writeMem(0x882b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbb24, gbc.sp());
        EXPECT(0x882d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x882b));
        EXPECT(0xa7, gbc.readMem(0x882c));
        // CB A7 02C7
        gbc.setState(0x9425, 0x6c8a, 0x6860, 0x92c2, 0xbc29, 0x95de, 0x0, 0x0);
        gbc.writeMem(0x9425, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6c8a, gbc.sp());
        EXPECT(0x9427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9425));
        EXPECT(0xa7, gbc.readMem(0x9426));
        // CB A7 02C8
        gbc.setState(0x202c, 0x8c6e, 0x5a70, 0x6d79, 0x5f47, 0xe82b, 0x1, 0x0);
        gbc.writeMem(0x202c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8c6e, gbc.sp());
        EXPECT(0x202e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02C9
        gbc.setState(0x37c0, 0x765e, 0x1540, 0x789f, 0x2040, 0xca92, 0x0, 0x0);
        gbc.writeMem(0x37c0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x765e, gbc.sp());
        EXPECT(0x37c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02CA
        gbc.setState(0x8c6e, 0x95df, 0xda30, 0x756d, 0xa856, 0xf799, 0x0, 0x1);
        gbc.writeMem(0x8c6e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x95df, gbc.sp());
        EXPECT(0x8c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6e));
        EXPECT(0xa7, gbc.readMem(0x8c6f));
        // CB A7 02CB
        gbc.setState(0x7577, 0x6949, 0xdc90, 0x99e3, 0x327b, 0xadab, 0x0, 0x1);
        gbc.writeMem(0x7577, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6949, gbc.sp());
        EXPECT(0x7579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02CC
        gbc.setState(0xe65, 0x8a95, 0x2210, 0x5421, 0xad26, 0x948b, 0x1, 0x1);
        gbc.writeMem(0xe65, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8a95, gbc.sp());
        EXPECT(0xe67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02CD
        gbc.setState(0x3541, 0x1dfa, 0xf4c0, 0x5154, 0x9046, 0xe279, 0x0, 0x0);
        gbc.writeMem(0x3541, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1dfa, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02CE
        gbc.setState(0x2dd, 0x8e44, 0xf610, 0x1238, 0x4735, 0x3aa2, 0x0, 0x0);
        gbc.writeMem(0x2dd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8e44, gbc.sp());
        EXPECT(0x2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02CF
        gbc.setState(0xaa37, 0xc702, 0x1230, 0x414b, 0x636, 0x6d1a, 0x0, 0x1);
        gbc.writeMem(0xaa37, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc702, gbc.sp());
        EXPECT(0xaa39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa37));
        EXPECT(0xa7, gbc.readMem(0xaa38));
        // CB A7 02D1
        gbc.setState(0x58c1, 0xfa3b, 0x3340, 0xf952, 0xa308, 0x4a7c, 0x1, 0x1);
        gbc.writeMem(0x58c1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfa3b, gbc.sp());
        EXPECT(0x58c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02D2
        gbc.setState(0x5e81, 0x14ea, 0x4550, 0x1f6b, 0xf435, 0x32e3, 0x0, 0x1);
        gbc.writeMem(0x5e81, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x14ea, gbc.sp());
        EXPECT(0x5e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02D3
        gbc.setState(0x54b0, 0x1524, 0x4cd0, 0x3f25, 0x5eb7, 0x169d, 0x0, 0x1);
        gbc.writeMem(0x54b0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0x54b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02D4
        gbc.setState(0xedc5, 0x71ae, 0xb10, 0xce1, 0xab5d, 0x946a, 0x0, 0x0);
        gbc.writeMem(0xedc5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x71ae, gbc.sp());
        EXPECT(0xedc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc5));
        EXPECT(0xa7, gbc.readMem(0xedc6));
        // CB A7 02D5
        gbc.setState(0x5d7c, 0x10ff, 0x6040, 0x2379, 0xf348, 0x2bfd, 0x1, 0x1);
        gbc.writeMem(0x5d7c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x10ff, gbc.sp());
        EXPECT(0x5d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02D6
        gbc.setState(0xca93, 0x3b0b, 0x210, 0x2cc2, 0x1f4, 0xb018, 0x1, 0x1);
        gbc.writeMem(0xca93, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3b0b, gbc.sp());
        EXPECT(0xca95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca93));
        EXPECT(0xa7, gbc.readMem(0xca94));
        // CB A7 02D7
        gbc.setState(0x1d3d, 0x8fa5, 0x2e70, 0x258c, 0x215, 0xedce, 0x1, 0x0);
        gbc.writeMem(0x1d3d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8fa5, gbc.sp());
        EXPECT(0x1d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02D8
        gbc.setState(0x8f1f, 0x3eab, 0x1790, 0x4e4d, 0x67d9, 0x9c37, 0x1, 0x0);
        gbc.writeMem(0x8f1f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3eab, gbc.sp());
        EXPECT(0x8f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1f));
        EXPECT(0xa7, gbc.readMem(0x8f20));
        // CB A7 02D9
        gbc.setState(0xd7b6, 0x82ec, 0x5860, 0xe378, 0x3587, 0xa9cb, 0x1, 0x0);
        gbc.writeMem(0xd7b6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x82ec, gbc.sp());
        EXPECT(0xd7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b6));
        EXPECT(0xa7, gbc.readMem(0xd7b7));
        // CB A7 02DA
        gbc.setState(0xb393, 0x9e40, 0x330, 0xcf97, 0x2de3, 0xa694, 0x0, 0x1);
        gbc.writeMem(0xb393, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9e40, gbc.sp());
        EXPECT(0xb395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb393));
        EXPECT(0xa7, gbc.readMem(0xb394));
        // CB A7 02DB
        gbc.setState(0x3514, 0xee4b, 0x1240, 0x27ea, 0x63db, 0x7237, 0x0, 0x0);
        gbc.writeMem(0x3514, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee4b, gbc.sp());
        EXPECT(0x3516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02DC
        gbc.setState(0xd751, 0xa646, 0x1360, 0x940, 0x3399, 0xde28, 0x0, 0x0);
        gbc.writeMem(0xd751, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa646, gbc.sp());
        EXPECT(0xd753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd751));
        EXPECT(0xa7, gbc.readMem(0xd752));
        // CB A7 02DD
        gbc.setState(0x4110, 0xe0c1, 0x4ab0, 0x4081, 0x34a1, 0x9711, 0x0, 0x0);
        gbc.writeMem(0x4110, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe0c1, gbc.sp());
        EXPECT(0x4112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02DE
        gbc.setState(0xe5cb, 0x54e0, 0xa8b0, 0x4a9, 0xe182, 0xe71c, 0x0, 0x1);
        gbc.writeMem(0xe5cb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x54e0, gbc.sp());
        EXPECT(0xe5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5cb));
        EXPECT(0xa7, gbc.readMem(0xe5cc));
        // CB A7 02DF
        gbc.setState(0xabd9, 0x1061, 0xf060, 0xbece, 0x7390, 0x79c0, 0x0, 0x0);
        gbc.writeMem(0xabd9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1061, gbc.sp());
        EXPECT(0xabdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd9));
        EXPECT(0xa7, gbc.readMem(0xabda));
        // CB A7 02E0
        gbc.setState(0xb88f, 0x14ce, 0x5050, 0x67e0, 0x75c2, 0x572f, 0x0, 0x1);
        gbc.writeMem(0xb88f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x14ce, gbc.sp());
        EXPECT(0xb891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88f));
        EXPECT(0xa7, gbc.readMem(0xb890));
        // CB A7 02E1
        gbc.setState(0x2e53, 0x11, 0x7ee0, 0xb903, 0x6332, 0x885d, 0x0, 0x1);
        gbc.writeMem(0x2e53, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x11, gbc.sp());
        EXPECT(0x2e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02E2
        gbc.setState(0x406f, 0xb68b, 0x85f0, 0xc573, 0x634b, 0xe0ad, 0x0, 0x0);
        gbc.writeMem(0x406f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb68b, gbc.sp());
        EXPECT(0x4071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02E3
        gbc.setState(0xebd8, 0x7184, 0x3240, 0xe04d, 0xe8e6, 0xde18, 0x0, 0x1);
        gbc.writeMem(0xebd8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7184, gbc.sp());
        EXPECT(0xebda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd8));
        EXPECT(0xa7, gbc.readMem(0xebd9));
        // CB A7 02E4
        gbc.setState(0x7fd8, 0xe3ae, 0xdcd0, 0x5eb5, 0x4bf8, 0xe85a, 0x1, 0x0);
        gbc.writeMem(0x7fd8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe3ae, gbc.sp());
        EXPECT(0x7fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02E5
        gbc.setState(0xe7ee, 0x2678, 0x4dc0, 0x14d4, 0x61fe, 0x31ef, 0x1, 0x1);
        gbc.writeMem(0xe7ee, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2678, gbc.sp());
        EXPECT(0xe7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ee));
        EXPECT(0xa7, gbc.readMem(0xe7ef));
        // CB A7 02E6
        gbc.setState(0x3fde, 0x7548, 0x6960, 0xca6e, 0xdf44, 0xa30f, 0x0, 0x1);
        gbc.writeMem(0x3fde, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7548, gbc.sp());
        EXPECT(0x3fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02E7
        gbc.setState(0x28a9, 0xfef4, 0x77b0, 0x6d53, 0x87a0, 0xce27, 0x0, 0x1);
        gbc.writeMem(0x28a9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfef4, gbc.sp());
        EXPECT(0x28ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02E8
        gbc.setState(0x3f50, 0x15e4, 0x8a50, 0x3b77, 0x2b1b, 0xb2de, 0x0, 0x0);
        gbc.writeMem(0x3f50, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x15e4, gbc.sp());
        EXPECT(0x3f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02EA
        gbc.setState(0xd749, 0xc5b0, 0x94e0, 0x14c9, 0x956c, 0x7149, 0x1, 0x0);
        gbc.writeMem(0xd749, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc5b0, gbc.sp());
        EXPECT(0xd74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd749));
        EXPECT(0xa7, gbc.readMem(0xd74a));
        // CB A7 02EB
        gbc.setState(0xc13e, 0x822c, 0xf000, 0xbb79, 0x6564, 0x5713, 0x1, 0x1);
        gbc.writeMem(0xc13e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x822c, gbc.sp());
        EXPECT(0xc140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc13e));
        EXPECT(0xa7, gbc.readMem(0xc13f));
        // CB A7 02ED
        gbc.setState(0x6735, 0x9ae2, 0x8e10, 0x1c01, 0xcde4, 0x7b5e, 0x0, 0x1);
        gbc.writeMem(0x6735, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9ae2, gbc.sp());
        EXPECT(0x6737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02EE
        gbc.setState(0x4bc7, 0xf4d9, 0x6320, 0x2668, 0xa8b8, 0x5e2e, 0x1, 0x1);
        gbc.writeMem(0x4bc7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf4d9, gbc.sp());
        EXPECT(0x4bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02EF
        gbc.setState(0x9e31, 0x1cf, 0x79f0, 0xa7bb, 0xe7de, 0x1b6b, 0x0, 0x0);
        gbc.writeMem(0x9e31, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1cf, gbc.sp());
        EXPECT(0x9e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e31));
        EXPECT(0xa7, gbc.readMem(0x9e32));
        // CB A7 02F0
        gbc.setState(0x218e, 0xf7d0, 0x9ba0, 0x8b68, 0x9f6, 0xbe65, 0x0, 0x1);
        gbc.writeMem(0x218e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf7d0, gbc.sp());
        EXPECT(0x2190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02F1
        gbc.setState(0xc4b3, 0x599a, 0x47e0, 0x58d8, 0x7f02, 0x8807, 0x0, 0x1);
        gbc.writeMem(0xc4b3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x599a, gbc.sp());
        EXPECT(0xc4b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b3));
        EXPECT(0xa7, gbc.readMem(0xc4b4));
        // CB A7 02F2
        gbc.setState(0x19c7, 0xed6a, 0x55d0, 0x6ff0, 0xc2c4, 0xb699, 0x1, 0x1);
        gbc.writeMem(0x19c7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xed6a, gbc.sp());
        EXPECT(0x19c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02F3
        gbc.setState(0x482b, 0xe9fc, 0x8e10, 0x1c58, 0xd8d, 0xe2b9, 0x0, 0x0);
        gbc.writeMem(0x482b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe9fc, gbc.sp());
        EXPECT(0x482d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02F4
        gbc.setState(0xadf4, 0x4b44, 0x1d50, 0x36e9, 0x2ad9, 0xd6b5, 0x1, 0x0);
        gbc.writeMem(0xadf4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4b44, gbc.sp());
        EXPECT(0xadf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf4));
        EXPECT(0xa7, gbc.readMem(0xadf5));
        // CB A7 02F5
        gbc.setState(0x2bf, 0x6590, 0xc230, 0xa64d, 0x9b13, 0x505b, 0x1, 0x0);
        gbc.writeMem(0x2bf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6590, gbc.sp());
        EXPECT(0x2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02F6
        gbc.setState(0x9012, 0xbc4e, 0xf490, 0xb6d5, 0x4388, 0xf2f2, 0x1, 0x0);
        gbc.writeMem(0x9012, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbc4e, gbc.sp());
        EXPECT(0x9014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9012));
        EXPECT(0xa7, gbc.readMem(0x9013));
        // CB A7 02F7
        gbc.setState(0x608, 0x2c42, 0xd7c0, 0xe70d, 0x3da7, 0x15c, 0x1, 0x0);
        gbc.writeMem(0x608, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2c42, gbc.sp());
        EXPECT(0x60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02F8
        gbc.setState(0x4a4b, 0x2b10, 0x7780, 0xe40b, 0xd015, 0xe0ae, 0x0, 0x1);
        gbc.writeMem(0x4a4b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2b10, gbc.sp());
        EXPECT(0x4a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02F9
        gbc.setState(0x98da, 0xf9c5, 0xec20, 0xdbf2, 0x2740, 0x3600, 0x1, 0x0);
        gbc.writeMem(0x98da, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf9c5, gbc.sp());
        EXPECT(0x98dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98da));
        EXPECT(0xa7, gbc.readMem(0x98db));
        // CB A7 02FA
        gbc.setState(0xb78c, 0x6018, 0xbc10, 0x7b2c, 0x1b50, 0xab97, 0x0, 0x1);
        gbc.writeMem(0xb78c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6018, gbc.sp());
        EXPECT(0xb78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78c));
        EXPECT(0xa7, gbc.readMem(0xb78d));
        // CB A7 02FB
        gbc.setState(0x9e79, 0xb804, 0x6630, 0xf0a, 0x411c, 0x6f25, 0x1, 0x0);
        gbc.writeMem(0x9e79, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb804, gbc.sp());
        EXPECT(0x9e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e79));
        EXPECT(0xa7, gbc.readMem(0x9e7a));
        // CB A7 02FC
        gbc.setState(0x2c92, 0xa1e9, 0xc850, 0xb735, 0xdeb6, 0xbd9c, 0x1, 0x0);
        gbc.writeMem(0x2c92, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa1e9, gbc.sp());
        EXPECT(0x2c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 02FD
        gbc.setState(0xa2b3, 0x45f6, 0x8780, 0xd4e1, 0x3d89, 0x6946, 0x0, 0x0);
        gbc.writeMem(0xa2b3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x45f6, gbc.sp());
        EXPECT(0xa2b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b3));
        EXPECT(0xa7, gbc.readMem(0xa2b4));
        // CB A7 02FE
        gbc.setState(0x7563, 0x743, 0x2240, 0xa93e, 0x4ffa, 0xa611, 0x1, 0x1);
        gbc.writeMem(0x7563, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x743, gbc.sp());
        EXPECT(0x7565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 02FF
        gbc.setState(0x9ac6, 0x42a5, 0xb370, 0xd2c, 0x869c, 0xb889, 0x0, 0x1);
        gbc.writeMem(0x9ac6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x42a5, gbc.sp());
        EXPECT(0x9ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac6));
        EXPECT(0xa7, gbc.readMem(0x9ac7));
        // CB A7 0300
        gbc.setState(0x88d2, 0x4e32, 0xcc00, 0x93a4, 0xc965, 0xd421, 0x0, 0x0);
        gbc.writeMem(0x88d2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4e32, gbc.sp());
        EXPECT(0x88d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d2));
        EXPECT(0xa7, gbc.readMem(0x88d3));
        // CB A7 0301
        gbc.setState(0xe01d, 0xdbe0, 0xd460, 0x29d7, 0xc283, 0x51eb, 0x0, 0x0);
        gbc.writeMem(0xe01d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdbe0, gbc.sp());
        EXPECT(0xe01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01d));
        EXPECT(0xa7, gbc.readMem(0xe01e));
        // CB A7 0303
        gbc.setState(0x1279, 0x92f, 0xd690, 0xd6c4, 0xa41a, 0x51ce, 0x0, 0x0);
        gbc.writeMem(0x1279, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x92f, gbc.sp());
        EXPECT(0x127b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0304
        gbc.setState(0xdcb8, 0x358a, 0x80a0, 0x474d, 0x78c2, 0xabe6, 0x0, 0x1);
        gbc.writeMem(0xdcb8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x358a, gbc.sp());
        EXPECT(0xdcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb8));
        EXPECT(0xa7, gbc.readMem(0xdcb9));
        // CB A7 0305
        gbc.setState(0xb3ba, 0x92e3, 0xb4f0, 0xf2, 0x5df, 0x283a, 0x0, 0x0);
        gbc.writeMem(0xb3ba, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x92e3, gbc.sp());
        EXPECT(0xb3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ba));
        EXPECT(0xa7, gbc.readMem(0xb3bb));
        // CB A7 0306
        gbc.setState(0x1db6, 0x6d7a, 0xd920, 0x72e2, 0x2e6d, 0x9c8f, 0x1, 0x1);
        gbc.writeMem(0x1db6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6d7a, gbc.sp());
        EXPECT(0x1db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0307
        gbc.setState(0x72df, 0xfbd6, 0x9ec0, 0x3583, 0x9410, 0x3f07, 0x0, 0x1);
        gbc.writeMem(0x72df, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfbd6, gbc.sp());
        EXPECT(0x72e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0308
        gbc.setState(0x2d8c, 0x6794, 0x1850, 0x6a50, 0xcb5f, 0xb3d8, 0x1, 0x0);
        gbc.writeMem(0x2d8c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6794, gbc.sp());
        EXPECT(0x2d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0309
        gbc.setState(0x5866, 0xf86a, 0x58b0, 0xb99d, 0xfa8c, 0x702, 0x0, 0x1);
        gbc.writeMem(0x5866, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf86a, gbc.sp());
        EXPECT(0x5868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 030A
        gbc.setState(0x2ca8, 0xdaf2, 0x88a0, 0x9983, 0x3b59, 0x5b60, 0x0, 0x0);
        gbc.writeMem(0x2ca8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdaf2, gbc.sp());
        EXPECT(0x2caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 030B
        gbc.setState(0xad09, 0x2e86, 0xca90, 0x5802, 0x3f5, 0x68a1, 0x1, 0x1);
        gbc.writeMem(0xad09, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2e86, gbc.sp());
        EXPECT(0xad0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad09));
        EXPECT(0xa7, gbc.readMem(0xad0a));
        // CB A7 030C
        gbc.setState(0xc67d, 0x65ac, 0x1a90, 0x457d, 0xc9b, 0xd20e, 0x0, 0x0);
        gbc.writeMem(0xc67d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x65ac, gbc.sp());
        EXPECT(0xc67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67d));
        EXPECT(0xa7, gbc.readMem(0xc67e));
        // CB A7 030D
        gbc.setState(0x186b, 0x54ff, 0x35e0, 0xf3bd, 0xd644, 0x7bf0, 0x1, 0x1);
        gbc.writeMem(0x186b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x54ff, gbc.sp());
        EXPECT(0x186d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 030E
        gbc.setState(0xc159, 0xb62d, 0xfcd0, 0x271a, 0x1e57, 0xf5a, 0x1, 0x0);
        gbc.writeMem(0xc159, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb62d, gbc.sp());
        EXPECT(0xc15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc159));
        EXPECT(0xa7, gbc.readMem(0xc15a));
        // CB A7 030F
        gbc.setState(0xa77b, 0x686, 0x6d20, 0xcf8, 0xf9b2, 0xb682, 0x1, 0x1);
        gbc.writeMem(0xa77b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x686, gbc.sp());
        EXPECT(0xa77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77b));
        EXPECT(0xa7, gbc.readMem(0xa77c));
        // CB A7 0310
        gbc.setState(0x524a, 0x3ddd, 0xb570, 0x7484, 0x526d, 0x9a32, 0x1, 0x0);
        gbc.writeMem(0x524a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3ddd, gbc.sp());
        EXPECT(0x524c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0311
        gbc.setState(0x809a, 0xa929, 0xd0f0, 0xc8b9, 0x8aad, 0x61a3, 0x1, 0x0);
        gbc.writeMem(0x809a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa929, gbc.sp());
        EXPECT(0x809c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809a));
        EXPECT(0xa7, gbc.readMem(0x809b));
        // CB A7 0312
        gbc.setState(0xb7a3, 0xde7c, 0x6690, 0x6311, 0x97c0, 0xd6bc, 0x0, 0x0);
        gbc.writeMem(0xb7a3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xde7c, gbc.sp());
        EXPECT(0xb7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a3));
        EXPECT(0xa7, gbc.readMem(0xb7a4));
        // CB A7 0313
        gbc.setState(0x746d, 0x3597, 0x8660, 0xca80, 0x3b60, 0xf4f4, 0x0, 0x1);
        gbc.writeMem(0x746d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3597, gbc.sp());
        EXPECT(0x746f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0314
        gbc.setState(0x3228, 0x94f6, 0xd590, 0x1c6, 0xbb2f, 0x596a, 0x0, 0x0);
        gbc.writeMem(0x3228, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x94f6, gbc.sp());
        EXPECT(0x322a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0315
        gbc.setState(0x648d, 0xd57b, 0x4be0, 0x8d04, 0xff14, 0xaaba, 0x0, 0x1);
        gbc.writeMem(0x648d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd57b, gbc.sp());
        EXPECT(0x648f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0316
        gbc.setState(0xc6ea, 0xb375, 0x3860, 0x887f, 0x19ee, 0xfb68, 0x1, 0x0);
        gbc.writeMem(0xc6ea, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb375, gbc.sp());
        EXPECT(0xc6ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ea));
        EXPECT(0xa7, gbc.readMem(0xc6eb));
        // CB A7 0317
        gbc.setState(0xd5e4, 0x7653, 0x2ec0, 0x9180, 0xa97b, 0xa9e4, 0x0, 0x0);
        gbc.writeMem(0xd5e4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7653, gbc.sp());
        EXPECT(0xd5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e4));
        EXPECT(0xa7, gbc.readMem(0xd5e5));
        // CB A7 0318
        gbc.setState(0x4a0c, 0xa3b, 0xe0d0, 0x76b2, 0x649c, 0x99c6, 0x0, 0x1);
        gbc.writeMem(0x4a0c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa3b, gbc.sp());
        EXPECT(0x4a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0319
        gbc.setState(0x5aef, 0xb823, 0x520, 0x40a5, 0x9a5c, 0x43bf, 0x0, 0x0);
        gbc.writeMem(0x5aef, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb823, gbc.sp());
        EXPECT(0x5af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 031A
        gbc.setState(0xa6dc, 0xc593, 0x1d90, 0x461f, 0xaa2d, 0x9e1c, 0x0, 0x0);
        gbc.writeMem(0xa6dc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc593, gbc.sp());
        EXPECT(0xa6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6dc));
        EXPECT(0xa7, gbc.readMem(0xa6dd));
        // CB A7 031B
        gbc.setState(0xb944, 0x27b4, 0xfd0, 0x7459, 0x6845, 0xecb4, 0x1, 0x0);
        gbc.writeMem(0xb944, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x27b4, gbc.sp());
        EXPECT(0xb946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb944));
        EXPECT(0xa7, gbc.readMem(0xb945));
        // CB A7 031C
        gbc.setState(0x3515, 0x2e89, 0xeb10, 0x4c03, 0xd1e8, 0x521c, 0x0, 0x0);
        gbc.writeMem(0x3515, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2e89, gbc.sp());
        EXPECT(0x3517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 031D
        gbc.setState(0x6db7, 0xd77d, 0xbd10, 0xe376, 0x10d4, 0xe2a9, 0x1, 0x0);
        gbc.writeMem(0x6db7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd77d, gbc.sp());
        EXPECT(0x6db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 031F
        gbc.setState(0x93e8, 0xc00f, 0xf8d0, 0x6ce4, 0xfe79, 0xc0c0, 0x1, 0x0);
        gbc.writeMem(0x93e8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc00f, gbc.sp());
        EXPECT(0x93ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e8));
        EXPECT(0xa7, gbc.readMem(0x93e9));
        // CB A7 0320
        gbc.setState(0xb02f, 0xa3c1, 0x5990, 0xfd18, 0x1eb4, 0xcc77, 0x0, 0x0);
        gbc.writeMem(0xb02f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa3c1, gbc.sp());
        EXPECT(0xb031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02f));
        EXPECT(0xa7, gbc.readMem(0xb030));
        // CB A7 0321
        gbc.setState(0xdb99, 0x27b9, 0xb070, 0x86aa, 0x90b8, 0x3c55, 0x1, 0x1);
        gbc.writeMem(0xdb99, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x27b9, gbc.sp());
        EXPECT(0xdb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb99));
        EXPECT(0xa7, gbc.readMem(0xdb9a));
        // CB A7 0322
        gbc.setState(0x3b9d, 0x94ff, 0x140, 0x999d, 0xa6c9, 0x58f6, 0x1, 0x1);
        gbc.writeMem(0x3b9d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x94ff, gbc.sp());
        EXPECT(0x3b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0323
        gbc.setState(0x571, 0x7062, 0x8800, 0xecf3, 0x34f0, 0x8ae3, 0x0, 0x1);
        gbc.writeMem(0x571, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7062, gbc.sp());
        EXPECT(0x573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0324
        gbc.setState(0x2388, 0x12ae, 0x77e0, 0xc85e, 0xf9d5, 0xea42, 0x0, 0x1);
        gbc.writeMem(0x2388, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x12ae, gbc.sp());
        EXPECT(0x238a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0325
        gbc.setState(0x7f82, 0xb350, 0x4b00, 0x73ab, 0x3b08, 0xca50, 0x1, 0x1);
        gbc.writeMem(0x7f82, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb350, gbc.sp());
        EXPECT(0x7f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0326
        gbc.setState(0xc015, 0x1262, 0xb0b0, 0xe5c2, 0x93f7, 0x706d, 0x1, 0x1);
        gbc.writeMem(0xc015, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1262, gbc.sp());
        EXPECT(0xc017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc015));
        EXPECT(0xa7, gbc.readMem(0xc016));
        // CB A7 0327
        gbc.setState(0x6010, 0x424c, 0x11a0, 0x9cd5, 0x9f5f, 0xa945, 0x1, 0x0);
        gbc.writeMem(0x6010, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x424c, gbc.sp());
        EXPECT(0x6012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0328
        gbc.setState(0x6281, 0x250e, 0x740, 0x78c5, 0xeadc, 0xc968, 0x0, 0x0);
        gbc.writeMem(0x6281, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x250e, gbc.sp());
        EXPECT(0x6283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0329
        gbc.setState(0x865d, 0x77fc, 0x8200, 0x4442, 0x624f, 0x4cc5, 0x0, 0x0);
        gbc.writeMem(0x865d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x77fc, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865d));
        EXPECT(0xa7, gbc.readMem(0x865e));
        // CB A7 032A
        gbc.setState(0x166, 0x4c2b, 0x3140, 0xfb80, 0x129b, 0x936e, 0x1, 0x0);
        gbc.writeMem(0x166, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4c2b, gbc.sp());
        EXPECT(0x168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 032B
        gbc.setState(0x1524, 0xeaeb, 0x1220, 0xa450, 0xc574, 0xfc69, 0x1, 0x1);
        gbc.writeMem(0x1524, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xeaeb, gbc.sp());
        EXPECT(0x1526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 032C
        gbc.setState(0x6ea1, 0x78fd, 0x870, 0xb506, 0x17c0, 0xa123, 0x1, 0x0);
        gbc.writeMem(0x6ea1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x78fd, gbc.sp());
        EXPECT(0x6ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 032D
        gbc.setState(0xe340, 0x11d, 0x2670, 0x200, 0xbfe1, 0xd235, 0x0, 0x0);
        gbc.writeMem(0xe340, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x11d, gbc.sp());
        EXPECT(0xe342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe340));
        EXPECT(0xa7, gbc.readMem(0xe341));
        // CB A7 032E
        gbc.setState(0xda50, 0x180, 0x9bc0, 0xfc3f, 0x7916, 0x4659, 0x1, 0x1);
        gbc.writeMem(0xda50, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x180, gbc.sp());
        EXPECT(0xda52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda50));
        EXPECT(0xa7, gbc.readMem(0xda51));
        // CB A7 0330
        gbc.setState(0xc55e, 0x90a7, 0xbc10, 0x8df, 0x7db7, 0xb799, 0x0, 0x0);
        gbc.writeMem(0xc55e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x90a7, gbc.sp());
        EXPECT(0xc560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55e));
        EXPECT(0xa7, gbc.readMem(0xc55f));
        // CB A7 0331
        gbc.setState(0xe49d, 0xc4e2, 0x48d0, 0xb8e2, 0x33a2, 0x37f4, 0x1, 0x1);
        gbc.writeMem(0xe49d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc4e2, gbc.sp());
        EXPECT(0xe49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49d));
        EXPECT(0xa7, gbc.readMem(0xe49e));
        // CB A7 0332
        gbc.setState(0x7c4b, 0xa6e, 0xa000, 0x221b, 0xf425, 0xaee3, 0x1, 0x1);
        gbc.writeMem(0x7c4b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa6e, gbc.sp());
        EXPECT(0x7c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0333
        gbc.setState(0xab66, 0x285, 0x1a00, 0xc925, 0xa2b0, 0x1692, 0x0, 0x1);
        gbc.writeMem(0xab66, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x285, gbc.sp());
        EXPECT(0xab68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab66));
        EXPECT(0xa7, gbc.readMem(0xab67));
        // CB A7 0334
        gbc.setState(0x4da2, 0x3acd, 0xcd40, 0xf43c, 0xc568, 0xc59a, 0x0, 0x0);
        gbc.writeMem(0x4da2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3acd, gbc.sp());
        EXPECT(0x4da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0335
        gbc.setState(0x9cf4, 0xb09, 0xa940, 0x9f40, 0x3a36, 0xd4b9, 0x1, 0x1);
        gbc.writeMem(0x9cf4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb09, gbc.sp());
        EXPECT(0x9cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf4));
        EXPECT(0xa7, gbc.readMem(0x9cf5));
        // CB A7 0337
        gbc.setState(0x5ac1, 0x1999, 0x5b00, 0x4e42, 0xd64e, 0xf2bf, 0x0, 0x0);
        gbc.writeMem(0x5ac1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1999, gbc.sp());
        EXPECT(0x5ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0338
        gbc.setState(0x179b, 0xc898, 0x5680, 0x5af9, 0xa88d, 0x3cd0, 0x1, 0x1);
        gbc.writeMem(0x179b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc898, gbc.sp());
        EXPECT(0x179d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0339
        gbc.setState(0xef2d, 0x4ce9, 0x8860, 0x52f, 0xa8b9, 0x5cc2, 0x1, 0x1);
        gbc.writeMem(0xef2d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4ce9, gbc.sp());
        EXPECT(0xef2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2d));
        EXPECT(0xa7, gbc.readMem(0xef2e));
        // CB A7 033A
        gbc.setState(0x7327, 0x6a92, 0x5940, 0x6311, 0x3830, 0x1e04, 0x0, 0x0);
        gbc.writeMem(0x7327, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6a92, gbc.sp());
        EXPECT(0x7329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 033B
        gbc.setState(0xd669, 0x407d, 0x49c0, 0x6f9c, 0x4b55, 0x23a9, 0x0, 0x0);
        gbc.writeMem(0xd669, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x407d, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd669));
        EXPECT(0xa7, gbc.readMem(0xd66a));
        // CB A7 033C
        gbc.setState(0xb3c5, 0xc2bb, 0xc2b0, 0xc405, 0x2bca, 0x72a5, 0x1, 0x0);
        gbc.writeMem(0xb3c5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc2bb, gbc.sp());
        EXPECT(0xb3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c5));
        EXPECT(0xa7, gbc.readMem(0xb3c6));
        // CB A7 033D
        gbc.setState(0xa20b, 0xfd24, 0xe8b0, 0x2a3c, 0x72b1, 0x8dc7, 0x1, 0x0);
        gbc.writeMem(0xa20b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfd24, gbc.sp());
        EXPECT(0xa20d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20b));
        EXPECT(0xa7, gbc.readMem(0xa20c));
        // CB A7 033E
        gbc.setState(0x136a, 0xa07c, 0x3550, 0xb10, 0x97d0, 0x35b2, 0x1, 0x0);
        gbc.writeMem(0x136a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa07c, gbc.sp());
        EXPECT(0x136c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 033F
        gbc.setState(0x1de3, 0x62d1, 0xc290, 0xd321, 0xb16e, 0xa1fa, 0x0, 0x1);
        gbc.writeMem(0x1de3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x62d1, gbc.sp());
        EXPECT(0x1de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0340
        gbc.setState(0xc33d, 0x81d5, 0xdc90, 0x5cc7, 0x32ed, 0x3507, 0x0, 0x1);
        gbc.writeMem(0xc33d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x81d5, gbc.sp());
        EXPECT(0xc33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33d));
        EXPECT(0xa7, gbc.readMem(0xc33e));
        // CB A7 0341
        gbc.setState(0x39d7, 0x95df, 0x19c0, 0x4553, 0xd572, 0xf63b, 0x0, 0x0);
        gbc.writeMem(0x39d7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x95df, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0342
        gbc.setState(0x1d98, 0x1c03, 0xd6b0, 0x7b44, 0x5b7d, 0xe3b4, 0x1, 0x0);
        gbc.writeMem(0x1d98, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1c03, gbc.sp());
        EXPECT(0x1d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0343
        gbc.setState(0x46e3, 0x3524, 0x31e0, 0x1b65, 0x89a8, 0xff18, 0x0, 0x0);
        gbc.writeMem(0x46e3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3524, gbc.sp());
        EXPECT(0x46e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0344
        gbc.setState(0x4ab7, 0x5b1b, 0x6e30, 0xf050, 0x6dbf, 0x2e37, 0x1, 0x0);
        gbc.writeMem(0x4ab7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5b1b, gbc.sp());
        EXPECT(0x4ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0345
        gbc.setState(0x88b1, 0x1842, 0x9210, 0xecb2, 0x390, 0x94ed, 0x0, 0x1);
        gbc.writeMem(0x88b1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1842, gbc.sp());
        EXPECT(0x88b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b1));
        EXPECT(0xa7, gbc.readMem(0x88b2));
        // CB A7 0346
        gbc.setState(0xcdfd, 0xb5b1, 0xabb0, 0x5e49, 0x6c14, 0x586b, 0x1, 0x0);
        gbc.writeMem(0xcdfd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb5b1, gbc.sp());
        EXPECT(0xcdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdfd));
        EXPECT(0xa7, gbc.readMem(0xcdfe));
        // CB A7 0347
        gbc.setState(0x6e70, 0xee3e, 0x5830, 0x637a, 0x75ff, 0xa052, 0x0, 0x1);
        gbc.writeMem(0x6e70, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xee3e, gbc.sp());
        EXPECT(0x6e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0348
        gbc.setState(0xcc7d, 0x3315, 0x4a00, 0x25bb, 0xaaf0, 0x93aa, 0x1, 0x1);
        gbc.writeMem(0xcc7d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3315, gbc.sp());
        EXPECT(0xcc7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7d));
        EXPECT(0xa7, gbc.readMem(0xcc7e));
        // CB A7 0349
        gbc.setState(0x3f25, 0x23ab, 0x8150, 0xf2a6, 0x166d, 0xa16, 0x0, 0x1);
        gbc.writeMem(0x3f25, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x23ab, gbc.sp());
        EXPECT(0x3f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 034A
        gbc.setState(0x99cb, 0x8e08, 0x7cf0, 0x9c65, 0x97ce, 0x32cd, 0x1, 0x1);
        gbc.writeMem(0x99cb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8e08, gbc.sp());
        EXPECT(0x99cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99cb));
        EXPECT(0xa7, gbc.readMem(0x99cc));
        // CB A7 034B
        gbc.setState(0x81ae, 0xaaf3, 0x4e0, 0xa0c3, 0x301e, 0x5edc, 0x1, 0x1);
        gbc.writeMem(0x81ae, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xaaf3, gbc.sp());
        EXPECT(0x81b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ae));
        EXPECT(0xa7, gbc.readMem(0x81af));
        // CB A7 034C
        gbc.setState(0xd668, 0x8e31, 0x14a0, 0x9c9, 0xc452, 0x56, 0x1, 0x0);
        gbc.writeMem(0xd668, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8e31, gbc.sp());
        EXPECT(0xd66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd668));
        EXPECT(0xa7, gbc.readMem(0xd669));
        // CB A7 034D
        gbc.setState(0xdb30, 0x261b, 0xade0, 0xb17c, 0x25a5, 0xf41b, 0x1, 0x1);
        gbc.writeMem(0xdb30, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x261b, gbc.sp());
        EXPECT(0xdb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb30));
        EXPECT(0xa7, gbc.readMem(0xdb31));
        // CB A7 034E
        gbc.setState(0x1010, 0x2801, 0x19e0, 0xc2a3, 0x31bd, 0x208, 0x1, 0x1);
        gbc.writeMem(0x1010, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2801, gbc.sp());
        EXPECT(0x1012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0350
        gbc.setState(0x8002, 0x7cbb, 0xb060, 0x765d, 0x2abc, 0x1e92, 0x0, 0x0);
        gbc.writeMem(0x8002, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7cbb, gbc.sp());
        EXPECT(0x8004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8002));
        EXPECT(0xa7, gbc.readMem(0x8003));
        // CB A7 0351
        gbc.setState(0xb9a8, 0x1dfd, 0xd6e0, 0xe78f, 0x3642, 0xce14, 0x1, 0x1);
        gbc.writeMem(0xb9a8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1dfd, gbc.sp());
        EXPECT(0xb9aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a8));
        EXPECT(0xa7, gbc.readMem(0xb9a9));
        // CB A7 0352
        gbc.setState(0x3f8c, 0x4b48, 0xab60, 0x9cdd, 0xcc3b, 0x7dce, 0x1, 0x1);
        gbc.writeMem(0x3f8c, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4b48, gbc.sp());
        EXPECT(0x3f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0353
        gbc.setState(0x23da, 0x12db, 0xff90, 0x7469, 0x26db, 0x84ae, 0x0, 0x0);
        gbc.writeMem(0x23da, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x12db, gbc.sp());
        EXPECT(0x23dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0354
        gbc.setState(0x8b02, 0xf305, 0xeb70, 0x453d, 0x5d02, 0x3310, 0x1, 0x0);
        gbc.writeMem(0x8b02, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf305, gbc.sp());
        EXPECT(0x8b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b02));
        EXPECT(0xa7, gbc.readMem(0x8b03));
        // CB A7 0355
        gbc.setState(0xe17f, 0x3951, 0xc580, 0x66b8, 0xb7d5, 0xc8d0, 0x1, 0x0);
        gbc.writeMem(0xe17f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3951, gbc.sp());
        EXPECT(0xe181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17f));
        EXPECT(0xa7, gbc.readMem(0xe180));
        // CB A7 0357
        gbc.setState(0x7735, 0x995b, 0x4510, 0x5eaa, 0x73ac, 0x2d78, 0x0, 0x0);
        gbc.writeMem(0x7735, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x995b, gbc.sp());
        EXPECT(0x7737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0358
        gbc.setState(0x2d2, 0x4599, 0xad20, 0x9f10, 0x91d2, 0x9a22, 0x0, 0x1);
        gbc.writeMem(0x2d2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4599, gbc.sp());
        EXPECT(0x2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0359
        gbc.setState(0xd29b, 0x36d9, 0xbeb0, 0x1279, 0x858d, 0x121f, 0x0, 0x1);
        gbc.writeMem(0xd29b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x36d9, gbc.sp());
        EXPECT(0xd29d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29b));
        EXPECT(0xa7, gbc.readMem(0xd29c));
        // CB A7 035A
        gbc.setState(0x201, 0x5a8f, 0xab0, 0x4252, 0x2a3e, 0xec82, 0x1, 0x1);
        gbc.writeMem(0x201, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5a8f, gbc.sp());
        EXPECT(0x203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 035B
        gbc.setState(0x2fb3, 0x3040, 0xe6b0, 0xfca8, 0xd4e, 0x2912, 0x0, 0x0);
        gbc.writeMem(0x2fb3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3040, gbc.sp());
        EXPECT(0x2fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 035C
        gbc.setState(0x9c72, 0xda8a, 0xcb80, 0xbb78, 0x98a2, 0x95cc, 0x1, 0x1);
        gbc.writeMem(0x9c72, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xda8a, gbc.sp());
        EXPECT(0x9c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c72));
        EXPECT(0xa7, gbc.readMem(0x9c73));
        // CB A7 035D
        gbc.setState(0xdb90, 0xcb07, 0xc220, 0x64b8, 0x7737, 0x3946, 0x0, 0x1);
        gbc.writeMem(0xdb90, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcb07, gbc.sp());
        EXPECT(0xdb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb90));
        EXPECT(0xa7, gbc.readMem(0xdb91));
        // CB A7 035E
        gbc.setState(0x2f49, 0x35d8, 0x7990, 0x39e4, 0xa507, 0x3b24, 0x1, 0x1);
        gbc.writeMem(0x2f49, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x35d8, gbc.sp());
        EXPECT(0x2f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 035F
        gbc.setState(0xbcd8, 0x4266, 0x9e0, 0x4b51, 0x152b, 0x91f8, 0x1, 0x0);
        gbc.writeMem(0xbcd8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4266, gbc.sp());
        EXPECT(0xbcda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd8));
        EXPECT(0xa7, gbc.readMem(0xbcd9));
        // CB A7 0360
        gbc.setState(0xde3, 0x8bcc, 0x8360, 0x31b3, 0x1074, 0xcab2, 0x1, 0x0);
        gbc.writeMem(0xde3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8bcc, gbc.sp());
        EXPECT(0xde5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0361
        gbc.setState(0x3bc0, 0x85be, 0x8c50, 0x5b3d, 0xa415, 0x925c, 0x1, 0x1);
        gbc.writeMem(0x3bc0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x85be, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0362
        gbc.setState(0x6249, 0xc12c, 0x24b0, 0xc0c9, 0xc908, 0xd6ed, 0x1, 0x0);
        gbc.writeMem(0x6249, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc12c, gbc.sp());
        EXPECT(0x624b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0363
        gbc.setState(0x1adb, 0xa31d, 0xdba0, 0x284a, 0x7095, 0xba0b, 0x1, 0x0);
        gbc.writeMem(0x1adb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa31d, gbc.sp());
        EXPECT(0x1add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0364
        gbc.setState(0x137b, 0x4072, 0xf450, 0xa9e, 0x9a01, 0x1a9f, 0x1, 0x1);
        gbc.writeMem(0x137b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4072, gbc.sp());
        EXPECT(0x137d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0365
        gbc.setState(0x1053, 0xca5e, 0xc790, 0x38ab, 0xf169, 0x582f, 0x0, 0x1);
        gbc.writeMem(0x1053, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xca5e, gbc.sp());
        EXPECT(0x1055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0366
        gbc.setState(0xe835, 0xa9a2, 0xc960, 0xefe0, 0xa0f6, 0x65b5, 0x1, 0x1);
        gbc.writeMem(0xe835, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa9a2, gbc.sp());
        EXPECT(0xe837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe835));
        EXPECT(0xa7, gbc.readMem(0xe836));
        // CB A7 0367
        gbc.setState(0xd2d1, 0xabab, 0xe260, 0x9bf8, 0xd52e, 0xbad8, 0x1, 0x0);
        gbc.writeMem(0xd2d1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xabab, gbc.sp());
        EXPECT(0xd2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d1));
        EXPECT(0xa7, gbc.readMem(0xd2d2));
        // CB A7 0368
        gbc.setState(0x940, 0xbbd4, 0x2b60, 0xf339, 0xd3bb, 0xf2c0, 0x0, 0x0);
        gbc.writeMem(0x940, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbbd4, gbc.sp());
        EXPECT(0x942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0369
        gbc.setState(0x1eb0, 0x364d, 0xc480, 0x657f, 0x6185, 0x10b2, 0x1, 0x0);
        gbc.writeMem(0x1eb0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x364d, gbc.sp());
        EXPECT(0x1eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 036A
        gbc.setState(0x4010, 0x7798, 0xf930, 0x5888, 0xb50e, 0x8123, 0x1, 0x0);
        gbc.writeMem(0x4010, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7798, gbc.sp());
        EXPECT(0x4012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 036B
        gbc.setState(0xe373, 0xda9c, 0xcc60, 0xe0b6, 0x392d, 0x81b1, 0x0, 0x0);
        gbc.writeMem(0xe373, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xda9c, gbc.sp());
        EXPECT(0xe375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe373));
        EXPECT(0xa7, gbc.readMem(0xe374));
        // CB A7 036C
        gbc.setState(0xe75, 0xc2c0, 0xca00, 0xad06, 0x8b2e, 0x770f, 0x0, 0x1);
        gbc.writeMem(0xe75, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc2c0, gbc.sp());
        EXPECT(0xe77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 036D
        gbc.setState(0x1f6b, 0x42e, 0x3330, 0xf7f4, 0xc2e3, 0x71d, 0x0, 0x0);
        gbc.writeMem(0x1f6b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x42e, gbc.sp());
        EXPECT(0x1f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 036E
        gbc.setState(0xbd44, 0xe1ff, 0x3910, 0x1a50, 0xc3aa, 0xa5db, 0x1, 0x1);
        gbc.writeMem(0xbd44, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe1ff, gbc.sp());
        EXPECT(0xbd46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd44));
        EXPECT(0xa7, gbc.readMem(0xbd45));
        // CB A7 036F
        gbc.setState(0x16fd, 0xc5eb, 0x5290, 0x4feb, 0x77f7, 0x33dc, 0x1, 0x1);
        gbc.writeMem(0x16fd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc5eb, gbc.sp());
        EXPECT(0x16ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0370
        gbc.setState(0x8f4, 0xcd53, 0xc800, 0x9174, 0x188b, 0x6e7a, 0x0, 0x1);
        gbc.writeMem(0x8f4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcd53, gbc.sp());
        EXPECT(0x8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0371
        gbc.setState(0x1742, 0x896d, 0x7220, 0x9a4d, 0xeb41, 0x85de, 0x0, 0x1);
        gbc.writeMem(0x1742, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x896d, gbc.sp());
        EXPECT(0x1744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0372
        gbc.setState(0x6b0b, 0xaa7c, 0x6ab0, 0x1173, 0x54d8, 0x8a01, 0x0, 0x0);
        gbc.writeMem(0x6b0b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xaa7c, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0373
        gbc.setState(0x4784, 0x5196, 0x7ac0, 0xd71c, 0xa567, 0xc27e, 0x1, 0x1);
        gbc.writeMem(0x4784, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5196, gbc.sp());
        EXPECT(0x4786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0374
        gbc.setState(0x84e0, 0x9d52, 0xeee0, 0x6b35, 0x1e15, 0x2924, 0x0, 0x0);
        gbc.writeMem(0x84e0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9d52, gbc.sp());
        EXPECT(0x84e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e0));
        EXPECT(0xa7, gbc.readMem(0x84e1));
        // CB A7 0375
        gbc.setState(0xe162, 0x75b1, 0x8130, 0x3288, 0x635, 0x900d, 0x0, 0x0);
        gbc.writeMem(0xe162, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x75b1, gbc.sp());
        EXPECT(0xe164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe162));
        EXPECT(0xa7, gbc.readMem(0xe163));
        // CB A7 0376
        gbc.setState(0x6c92, 0xe072, 0x720, 0xab3b, 0x67e0, 0x8040, 0x1, 0x1);
        gbc.writeMem(0x6c92, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe072, gbc.sp());
        EXPECT(0x6c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0377
        gbc.setState(0x5462, 0x7d08, 0x5df0, 0x8280, 0xe26d, 0x6fb7, 0x0, 0x1);
        gbc.writeMem(0x5462, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7d08, gbc.sp());
        EXPECT(0x5464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0378
        gbc.setState(0x7afd, 0x54f8, 0x9970, 0x1ec3, 0x5202, 0x5d7, 0x1, 0x0);
        gbc.writeMem(0x7afd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x54f8, gbc.sp());
        EXPECT(0x7aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0379
        gbc.setState(0x6678, 0x32f2, 0xee40, 0xcd3a, 0xfbd4, 0x4aa9, 0x1, 0x1);
        gbc.writeMem(0x6678, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x32f2, gbc.sp());
        EXPECT(0x667a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 037A
        gbc.setState(0x13ed, 0xb64, 0xe7d0, 0x88fb, 0x9c42, 0x3998, 0x0, 0x0);
        gbc.writeMem(0x13ed, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb64, gbc.sp());
        EXPECT(0x13ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 037B
        gbc.setState(0xe854, 0x8e19, 0x45a0, 0xc07, 0xf3d1, 0x616c, 0x1, 0x0);
        gbc.writeMem(0xe854, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8e19, gbc.sp());
        EXPECT(0xe856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe854));
        EXPECT(0xa7, gbc.readMem(0xe855));
        // CB A7 037C
        gbc.setState(0x1660, 0x9e03, 0x2bc0, 0xbdc2, 0xc5ac, 0x7b24, 0x0, 0x0);
        gbc.writeMem(0x1660, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9e03, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 037D
        gbc.setState(0xe326, 0x4e56, 0x84c0, 0x82c5, 0x906e, 0x855d, 0x1, 0x1);
        gbc.writeMem(0xe326, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4e56, gbc.sp());
        EXPECT(0xe328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe326));
        EXPECT(0xa7, gbc.readMem(0xe327));
        // CB A7 037E
        gbc.setState(0x3370, 0xf5ff, 0xc0e0, 0x2e4e, 0x7437, 0xff15, 0x0, 0x0);
        gbc.writeMem(0x3370, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf5ff, gbc.sp());
        EXPECT(0x3372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 037F
        gbc.setState(0x4113, 0x47a8, 0xd7f0, 0x5165, 0xfe0e, 0xd0d0, 0x0, 0x0);
        gbc.writeMem(0x4113, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x47a8, gbc.sp());
        EXPECT(0x4115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0380
        gbc.setState(0x6d04, 0x3f82, 0x7b50, 0x2aff, 0x2f37, 0x3952, 0x1, 0x1);
        gbc.writeMem(0x6d04, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3f82, gbc.sp());
        EXPECT(0x6d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0381
        gbc.setState(0xd2ab, 0x4973, 0x8e80, 0xff67, 0x960d, 0xfc30, 0x1, 0x0);
        gbc.writeMem(0xd2ab, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4973, gbc.sp());
        EXPECT(0xd2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ab));
        EXPECT(0xa7, gbc.readMem(0xd2ac));
        // CB A7 0382
        gbc.setState(0x46e4, 0x5586, 0x9050, 0x7731, 0xc2f4, 0xca86, 0x1, 0x1);
        gbc.writeMem(0x46e4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5586, gbc.sp());
        EXPECT(0x46e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0383
        gbc.setState(0x25b6, 0x967b, 0x15b0, 0x13cf, 0x187a, 0x8479, 0x1, 0x1);
        gbc.writeMem(0x25b6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x967b, gbc.sp());
        EXPECT(0x25b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0384
        gbc.setState(0x8559, 0xc44c, 0x0, 0x317, 0x4979, 0x7874, 0x1, 0x1);
        gbc.writeMem(0x8559, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc44c, gbc.sp());
        EXPECT(0x855b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8559));
        EXPECT(0xa7, gbc.readMem(0x855a));
        // CB A7 0385
        gbc.setState(0x46f6, 0x93a8, 0xf720, 0x4ba, 0x6438, 0x690d, 0x0, 0x0);
        gbc.writeMem(0x46f6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x93a8, gbc.sp());
        EXPECT(0x46f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0386
        gbc.setState(0xb338, 0x94f6, 0x660, 0x76be, 0xa866, 0x8975, 0x0, 0x0);
        gbc.writeMem(0xb338, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x94f6, gbc.sp());
        EXPECT(0xb33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb338));
        EXPECT(0xa7, gbc.readMem(0xb339));
        // CB A7 0387
        gbc.setState(0x5ec7, 0xee97, 0x10f0, 0x781c, 0x6815, 0x3f03, 0x1, 0x0);
        gbc.writeMem(0x5ec7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xee97, gbc.sp());
        EXPECT(0x5ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0388
        gbc.setState(0x6fd8, 0x79aa, 0x1cd0, 0xae13, 0xcffa, 0xc59, 0x1, 0x1);
        gbc.writeMem(0x6fd8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x79aa, gbc.sp());
        EXPECT(0x6fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0389
        gbc.setState(0x6629, 0xd5c9, 0x2a60, 0xd576, 0x682d, 0x9a4e, 0x1, 0x1);
        gbc.writeMem(0x6629, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd5c9, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 038A
        gbc.setState(0xd33a, 0x83d8, 0xbd80, 0xa308, 0x3c06, 0x11a6, 0x1, 0x0);
        gbc.writeMem(0xd33a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x83d8, gbc.sp());
        EXPECT(0xd33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33a));
        EXPECT(0xa7, gbc.readMem(0xd33b));
        // CB A7 038B
        gbc.setState(0x10fd, 0xf287, 0x7380, 0x67d1, 0x7152, 0xfc05, 0x1, 0x1);
        gbc.writeMem(0x10fd, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf287, gbc.sp());
        EXPECT(0x10ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 038C
        gbc.setState(0xe027, 0xafa5, 0x1510, 0x46c7, 0xef2d, 0x8a61, 0x1, 0x0);
        gbc.writeMem(0xe027, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xafa5, gbc.sp());
        EXPECT(0xe029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe027));
        EXPECT(0xa7, gbc.readMem(0xe028));
        // CB A7 038D
        gbc.setState(0xe9f4, 0x7c2a, 0x9bc0, 0x6d4d, 0x4906, 0xd696, 0x0, 0x1);
        gbc.writeMem(0xe9f4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7c2a, gbc.sp());
        EXPECT(0xe9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f4));
        EXPECT(0xa7, gbc.readMem(0xe9f5));
        // CB A7 038E
        gbc.setState(0x2c01, 0x7b74, 0x6c10, 0xd549, 0x38b7, 0x7ee9, 0x0, 0x1);
        gbc.writeMem(0x2c01, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7b74, gbc.sp());
        EXPECT(0x2c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0390
        gbc.setState(0x88f4, 0x4a19, 0xce0, 0x30cf, 0x7ae4, 0xf9, 0x1, 0x0);
        gbc.writeMem(0x88f4, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4a19, gbc.sp());
        EXPECT(0x88f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f4));
        EXPECT(0xa7, gbc.readMem(0x88f5));
        // CB A7 0391
        gbc.setState(0x4ecb, 0x3621, 0x2760, 0x3261, 0x6c1d, 0x5e09, 0x1, 0x0);
        gbc.writeMem(0x4ecb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3621, gbc.sp());
        EXPECT(0x4ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0392
        gbc.setState(0x15f6, 0xfe5f, 0x85c0, 0xab57, 0xb49e, 0x217b, 0x0, 0x1);
        gbc.writeMem(0x15f6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfe5f, gbc.sp());
        EXPECT(0x15f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0393
        gbc.setState(0xa556, 0xb971, 0x4350, 0xc2e6, 0x2724, 0xdaf4, 0x1, 0x1);
        gbc.writeMem(0xa556, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0xa558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa556));
        EXPECT(0xa7, gbc.readMem(0xa557));
        // CB A7 0394
        gbc.setState(0x5447, 0x5bee, 0x84e0, 0xf059, 0x8492, 0x877a, 0x0, 0x0);
        gbc.writeMem(0x5447, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5bee, gbc.sp());
        EXPECT(0x5449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 0395
        gbc.setState(0x1de7, 0x9d27, 0x9030, 0xf656, 0x9d4, 0x338c, 0x1, 0x0);
        gbc.writeMem(0x1de7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9d27, gbc.sp());
        EXPECT(0x1de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0396
        gbc.setState(0x59ab, 0xe7f0, 0x5cb0, 0xe879, 0xd282, 0x48e0, 0x0, 0x1);
        gbc.writeMem(0x59ab, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe7f0, gbc.sp());
        EXPECT(0x59ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0397
        gbc.setState(0xae7, 0x23f1, 0xe4b0, 0xacf9, 0x8ef5, 0xed97, 0x0, 0x1);
        gbc.writeMem(0xae7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x23f1, gbc.sp());
        EXPECT(0xae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 0398
        gbc.setState(0xdcca, 0xd3cb, 0xc9a0, 0xffa, 0x13ea, 0x7bca, 0x0, 0x0);
        gbc.writeMem(0xdcca, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd3cb, gbc.sp());
        EXPECT(0xdccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcca));
        EXPECT(0xa7, gbc.readMem(0xdccb));
        // CB A7 0399
        gbc.setState(0x8e23, 0xbee9, 0xdb70, 0x6378, 0xb860, 0x41fc, 0x1, 0x0);
        gbc.writeMem(0x8e23, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbee9, gbc.sp());
        EXPECT(0x8e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e23));
        EXPECT(0xa7, gbc.readMem(0x8e24));
        // CB A7 039A
        gbc.setState(0x5c8f, 0x799d, 0xba0, 0xe3ab, 0xed46, 0xcc40, 0x0, 0x1);
        gbc.writeMem(0x5c8f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x799d, gbc.sp());
        EXPECT(0x5c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 039B
        gbc.setState(0x3ddc, 0xf724, 0xbb40, 0xd7b0, 0x608c, 0x3cc1, 0x1, 0x1);
        gbc.writeMem(0x3ddc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0x3dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 039C
        gbc.setState(0xa1f6, 0x1290, 0xf250, 0x8a8c, 0x1b15, 0x6eed, 0x1, 0x0);
        gbc.writeMem(0xa1f6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1290, gbc.sp());
        EXPECT(0xa1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f6));
        EXPECT(0xa7, gbc.readMem(0xa1f7));
        // CB A7 039D
        gbc.setState(0x4fcf, 0x2e6c, 0x3280, 0x967b, 0xc99a, 0xf898, 0x1, 0x1);
        gbc.writeMem(0x4fcf, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2e6c, gbc.sp());
        EXPECT(0x4fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 039E
        gbc.setState(0xab3d, 0xaf0e, 0x20a0, 0xc12a, 0xa223, 0x651a, 0x0, 0x0);
        gbc.writeMem(0xab3d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaf0e, gbc.sp());
        EXPECT(0xab3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3d));
        EXPECT(0xa7, gbc.readMem(0xab3e));
        // CB A7 039F
        gbc.setState(0x2887, 0xc102, 0xcc70, 0xe251, 0xa490, 0x2fb7, 0x1, 0x0);
        gbc.writeMem(0x2887, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc102, gbc.sp());
        EXPECT(0x2889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03A0
        gbc.setState(0xdec0, 0x6202, 0xd460, 0x8674, 0x21c, 0x854d, 0x0, 0x1);
        gbc.writeMem(0xdec0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6202, gbc.sp());
        EXPECT(0xdec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec0));
        EXPECT(0xa7, gbc.readMem(0xdec1));
        // CB A7 03A1
        gbc.setState(0x4860, 0xd2f5, 0xf420, 0x9897, 0xa503, 0x8d2, 0x0, 0x0);
        gbc.writeMem(0x4860, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd2f5, gbc.sp());
        EXPECT(0x4862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03A2
        gbc.setState(0x508b, 0x76e5, 0x4bf0, 0x5660, 0xcb7f, 0x163f, 0x0, 0x1);
        gbc.writeMem(0x508b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x76e5, gbc.sp());
        EXPECT(0x508d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03A4
        gbc.setState(0xd78d, 0x92a6, 0xe00, 0xec3, 0x9d5e, 0xbb6b, 0x1, 0x0);
        gbc.writeMem(0xd78d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x92a6, gbc.sp());
        EXPECT(0xd78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78d));
        EXPECT(0xa7, gbc.readMem(0xd78e));
        // CB A7 03A5
        gbc.setState(0x72d1, 0x7ef9, 0xade0, 0x2f76, 0x27ae, 0xd07, 0x1, 0x0);
        gbc.writeMem(0x72d1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7ef9, gbc.sp());
        EXPECT(0x72d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03A6
        gbc.setState(0x3521, 0x7c76, 0xa310, 0x12d5, 0x1674, 0x2a68, 0x1, 0x0);
        gbc.writeMem(0x3521, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7c76, gbc.sp());
        EXPECT(0x3523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03A7
        gbc.setState(0xa2e2, 0xfeac, 0x1500, 0xe010, 0xb6f9, 0x815c, 0x0, 0x1);
        gbc.writeMem(0xa2e2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfeac, gbc.sp());
        EXPECT(0xa2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e2));
        EXPECT(0xa7, gbc.readMem(0xa2e3));
        // CB A7 03A8
        gbc.setState(0x2133, 0x298, 0x59f0, 0x4027, 0x4c7f, 0x7355, 0x1, 0x1);
        gbc.writeMem(0x2133, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x298, gbc.sp());
        EXPECT(0x2135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03A9
        gbc.setState(0xdefb, 0x7566, 0x2430, 0x5151, 0x8d01, 0x5b09, 0x1, 0x1);
        gbc.writeMem(0xdefb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7566, gbc.sp());
        EXPECT(0xdefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdefb));
        EXPECT(0xa7, gbc.readMem(0xdefc));
        // CB A7 03AA
        gbc.setState(0xaafa, 0xee0e, 0xeff0, 0xa9ee, 0x8cfe, 0xbce5, 0x0, 0x1);
        gbc.writeMem(0xaafa, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xee0e, gbc.sp());
        EXPECT(0xaafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafa));
        EXPECT(0xa7, gbc.readMem(0xaafb));
        // CB A7 03AB
        gbc.setState(0xb68b, 0xa3fc, 0xc540, 0xc001, 0x98f4, 0xf5e5, 0x0, 0x0);
        gbc.writeMem(0xb68b, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa3fc, gbc.sp());
        EXPECT(0xb68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb68b));
        EXPECT(0xa7, gbc.readMem(0xb68c));
        // CB A7 03AC
        gbc.setState(0x8c47, 0x95cf, 0x93b0, 0x6d4e, 0x4091, 0xb913, 0x1, 0x0);
        gbc.writeMem(0x8c47, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x95cf, gbc.sp());
        EXPECT(0x8c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c47));
        EXPECT(0xa7, gbc.readMem(0x8c48));
        // CB A7 03AD
        gbc.setState(0xc09a, 0xbdee, 0x9a20, 0x734c, 0xbc8, 0x6bf8, 0x0, 0x0);
        gbc.writeMem(0xc09a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbdee, gbc.sp());
        EXPECT(0xc09c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09a));
        EXPECT(0xa7, gbc.readMem(0xc09b));
        // CB A7 03AE
        gbc.setState(0xc65a, 0x84fb, 0x1580, 0x570f, 0x6b60, 0x1f90, 0x1, 0x1);
        gbc.writeMem(0xc65a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x84fb, gbc.sp());
        EXPECT(0xc65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc65a));
        EXPECT(0xa7, gbc.readMem(0xc65b));
        // CB A7 03AF
        gbc.setState(0x660a, 0xdfe3, 0x3ff0, 0xa42f, 0xa92a, 0xe489, 0x0, 0x1);
        gbc.writeMem(0x660a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdfe3, gbc.sp());
        EXPECT(0x660c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03B0
        gbc.setState(0x5049, 0x51d1, 0xe830, 0xca46, 0xfe99, 0xe40a, 0x1, 0x1);
        gbc.writeMem(0x5049, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x51d1, gbc.sp());
        EXPECT(0x504b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03B1
        gbc.setState(0x2c89, 0xc0f, 0x60e0, 0x38cf, 0x6fc2, 0xe911, 0x0, 0x1);
        gbc.writeMem(0x2c89, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc0f, gbc.sp());
        EXPECT(0x2c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03B2
        gbc.setState(0x3e8d, 0x8884, 0x8240, 0xcd43, 0x94a, 0xd18d, 0x0, 0x1);
        gbc.writeMem(0x3e8d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8884, gbc.sp());
        EXPECT(0x3e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03B3
        gbc.setState(0x5f31, 0xe7a5, 0xe540, 0x1a8, 0xeeb7, 0x13da, 0x0, 0x0);
        gbc.writeMem(0x5f31, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe7a5, gbc.sp());
        EXPECT(0x5f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03B4
        gbc.setState(0x8bf9, 0x9721, 0x2d30, 0xb206, 0x433d, 0x6824, 0x1, 0x1);
        gbc.writeMem(0x8bf9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9721, gbc.sp());
        EXPECT(0x8bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf9));
        EXPECT(0xa7, gbc.readMem(0x8bfa));
        // CB A7 03B5
        gbc.setState(0xd2cc, 0x6ecb, 0xed80, 0xb3d3, 0x9394, 0xc164, 0x1, 0x1);
        gbc.writeMem(0xd2cc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6ecb, gbc.sp());
        EXPECT(0xd2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2cc));
        EXPECT(0xa7, gbc.readMem(0xd2cd));
        // CB A7 03B6
        gbc.setState(0x7895, 0xb24f, 0x5c50, 0xd547, 0x9bd, 0xc19f, 0x1, 0x0);
        gbc.writeMem(0x7895, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb24f, gbc.sp());
        EXPECT(0x7897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03B7
        gbc.setState(0x23c5, 0x570b, 0x14a0, 0xa183, 0x4b5d, 0x4d4, 0x1, 0x1);
        gbc.writeMem(0x23c5, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x570b, gbc.sp());
        EXPECT(0x23c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03B8
        gbc.setState(0x6575, 0xabf2, 0xe710, 0x91bb, 0x5bf8, 0x526d, 0x0, 0x1);
        gbc.writeMem(0x6575, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xabf2, gbc.sp());
        EXPECT(0x6577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03B9
        gbc.setState(0xc3fc, 0xb8, 0x9710, 0xff98, 0x956b, 0xb82e, 0x0, 0x0);
        gbc.writeMem(0xc3fc, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb8, gbc.sp());
        EXPECT(0xc3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fc));
        EXPECT(0xa7, gbc.readMem(0xc3fd));
        // CB A7 03BC
        gbc.setState(0xb51e, 0x917d, 0x6860, 0x5b2f, 0xb8d9, 0xf49d, 0x0, 0x0);
        gbc.writeMem(0xb51e, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x917d, gbc.sp());
        EXPECT(0xb520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51e));
        EXPECT(0xa7, gbc.readMem(0xb51f));
        // CB A7 03BD
        gbc.setState(0xd7ef, 0xf3ff, 0x99e0, 0xac2b, 0xc982, 0xa8d5, 0x0, 0x1);
        gbc.writeMem(0xd7ef, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf3ff, gbc.sp());
        EXPECT(0xd7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ef));
        EXPECT(0xa7, gbc.readMem(0xd7f0));
        // CB A7 03BE
        gbc.setState(0xb4ac, 0xf914, 0x3a50, 0x991e, 0x700, 0x7a3a, 0x1, 0x1);
        gbc.writeMem(0xb4ac, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf914, gbc.sp());
        EXPECT(0xb4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ac));
        EXPECT(0xa7, gbc.readMem(0xb4ad));
        // CB A7 03BF
        gbc.setState(0xbfe3, 0x550, 0x36e0, 0x47e9, 0x33bf, 0xa7bd, 0x0, 0x1);
        gbc.writeMem(0xbfe3, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x550, gbc.sp());
        EXPECT(0xbfe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe3));
        EXPECT(0xa7, gbc.readMem(0xbfe4));
        // CB A7 03C0
        gbc.setState(0x2d85, 0x7bb8, 0xd070, 0x3691, 0x163d, 0x6c6, 0x0, 0x0);
        gbc.writeMem(0x2d85, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7bb8, gbc.sp());
        EXPECT(0x2d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03C1
        gbc.setState(0x6dce, 0x7c45, 0x8d40, 0x3cf1, 0x88c8, 0xdf02, 0x0, 0x0);
        gbc.writeMem(0x6dce, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7c45, gbc.sp());
        EXPECT(0x6dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03C2
        gbc.setState(0x5b58, 0x93e6, 0x1bb0, 0xa25d, 0x62e3, 0xdb02, 0x1, 0x0);
        gbc.writeMem(0x5b58, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x93e6, gbc.sp());
        EXPECT(0x5b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03C3
        gbc.setState(0x177d, 0x83c5, 0xbde0, 0xe2f, 0x2ac9, 0xa52c, 0x1, 0x0);
        gbc.writeMem(0x177d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x83c5, gbc.sp());
        EXPECT(0x177f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03C6
        gbc.setState(0x9cd9, 0xf111, 0x5a50, 0x1096, 0x4f6d, 0xc274, 0x0, 0x1);
        gbc.writeMem(0x9cd9, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf111, gbc.sp());
        EXPECT(0x9cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd9));
        EXPECT(0xa7, gbc.readMem(0x9cda));
        // CB A7 03C7
        gbc.setState(0xbbe8, 0x376e, 0x1ff0, 0xe0cf, 0xc366, 0x232b, 0x0, 0x0);
        gbc.writeMem(0xbbe8, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x376e, gbc.sp());
        EXPECT(0xbbea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe8));
        EXPECT(0xa7, gbc.readMem(0xbbe9));
        // CB A7 03C8
        gbc.setState(0xd10, 0xf2d9, 0x9320, 0x5fe4, 0x9b4a, 0x4746, 0x0, 0x1);
        gbc.writeMem(0xd10, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf2d9, gbc.sp());
        EXPECT(0xd12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03C9
        gbc.setState(0x1a5d, 0xdbf1, 0x9570, 0x5801, 0x7524, 0xd932, 0x0, 0x1);
        gbc.writeMem(0x1a5d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdbf1, gbc.sp());
        EXPECT(0x1a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03CA
        gbc.setState(0x48fb, 0x9763, 0x64a0, 0x8991, 0xcf2c, 0x148c, 0x0, 0x0);
        gbc.writeMem(0x48fb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9763, gbc.sp());
        EXPECT(0x48fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03CB
        gbc.setState(0xd179, 0x9fad, 0xe30, 0xf87b, 0x847e, 0x43cd, 0x0, 0x0);
        gbc.writeMem(0xd179, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9fad, gbc.sp());
        EXPECT(0xd17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd179));
        EXPECT(0xa7, gbc.readMem(0xd17a));
        // CB A7 03CD
        gbc.setState(0x8673, 0x5207, 0xf930, 0x707f, 0x37e7, 0x7353, 0x0, 0x0);
        gbc.writeMem(0x8673, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5207, gbc.sp());
        EXPECT(0x8675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8673));
        EXPECT(0xa7, gbc.readMem(0x8674));
        // CB A7 03CE
        gbc.setState(0x454d, 0xd38d, 0xa9d0, 0xe4ad, 0x9fbe, 0x7861, 0x0, 0x1);
        gbc.writeMem(0x454d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd38d, gbc.sp());
        EXPECT(0x454f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03CF
        gbc.setState(0x849, 0x4d5d, 0x5f90, 0x4c83, 0xb972, 0x8c56, 0x1, 0x0);
        gbc.writeMem(0x849, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4d5d, gbc.sp());
        EXPECT(0x84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03D1
        gbc.setState(0x52e0, 0x1578, 0x3c70, 0xf4e9, 0xe5fb, 0xa360, 0x0, 0x1);
        gbc.writeMem(0x52e0, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1578, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03D2
        gbc.setState(0x4cfb, 0x3dd2, 0x4f80, 0x47b, 0x4134, 0x61e8, 0x1, 0x0);
        gbc.writeMem(0x4cfb, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3dd2, gbc.sp());
        EXPECT(0x4cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03D3
        gbc.setState(0xd770, 0x3626, 0xa070, 0xf324, 0xa05e, 0x7244, 0x1, 0x0);
        gbc.writeMem(0xd770, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3626, gbc.sp());
        EXPECT(0xd772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd770));
        EXPECT(0xa7, gbc.readMem(0xd771));
        // CB A7 03D4
        gbc.setState(0x7ea1, 0x6159, 0xc2a0, 0x8fba, 0x70bf, 0x6395, 0x0, 0x1);
        gbc.writeMem(0x7ea1, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6159, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03D5
        gbc.setState(0x3f90, 0x80bc, 0xf700, 0xe848, 0x98cc, 0xef48, 0x0, 0x0);
        gbc.writeMem(0x3f90, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x80bc, gbc.sp());
        EXPECT(0x3f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03D6
        gbc.setState(0x6f52, 0x8739, 0x9200, 0xe65f, 0x2fe1, 0xdbeb, 0x0, 0x0);
        gbc.writeMem(0x6f52, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8739, gbc.sp());
        EXPECT(0x6f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03D7
        gbc.setState(0x3c62, 0xa28e, 0xb060, 0x71e5, 0x1263, 0x66c, 0x0, 0x1);
        gbc.writeMem(0x3c62, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa28e, gbc.sp());
        EXPECT(0x3c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03D8
        gbc.setState(0xce7, 0x490e, 0xd770, 0xa572, 0xbf40, 0x2473, 0x1, 0x0);
        gbc.writeMem(0xce7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x490e, gbc.sp());
        EXPECT(0xce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03D9
        gbc.setState(0x3c70, 0xa67d, 0xc10, 0xa6ad, 0x88b2, 0xc9b7, 0x1, 0x1);
        gbc.writeMem(0x3c70, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa67d, gbc.sp());
        EXPECT(0x3c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03DA
        gbc.setState(0xe44, 0x1b02, 0x4ff0, 0x11cc, 0x12a8, 0x486c, 0x0, 0x0);
        gbc.writeMem(0xe44, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1b02, gbc.sp());
        EXPECT(0xe46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03DB
        gbc.setState(0x2dd2, 0xa33e, 0x3600, 0xc2ef, 0x3f2f, 0x71e, 0x1, 0x0);
        gbc.writeMem(0x2dd2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa33e, gbc.sp());
        EXPECT(0x2dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03DC
        gbc.setState(0x34a6, 0x59f2, 0x43a0, 0x998a, 0xb375, 0xfc28, 0x0, 0x0);
        gbc.writeMem(0x34a6, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x59f2, gbc.sp());
        EXPECT(0x34a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03DD
        gbc.setState(0x2c0f, 0x7497, 0x44a0, 0x909, 0x828c, 0xbb9d, 0x1, 0x0);
        gbc.writeMem(0x2c0f, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7497, gbc.sp());
        EXPECT(0x2c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03DF
        gbc.setState(0x8c07, 0xcf8d, 0x2210, 0x1fdd, 0x9b09, 0xdc64, 0x0, 0x0);
        gbc.writeMem(0x8c07, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcf8d, gbc.sp());
        EXPECT(0x8c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c07));
        EXPECT(0xa7, gbc.readMem(0x8c08));
        // CB A7 03E0
        gbc.setState(0x53e7, 0x43c5, 0xebf0, 0x8a1c, 0xadde, 0x3c79, 0x1, 0x0);
        gbc.writeMem(0x53e7, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x43c5, gbc.sp());
        EXPECT(0x53e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A7 03E1
        gbc.setState(0x14f2, 0x3d2, 0xa820, 0xc0b6, 0xd319, 0x7b, 0x1, 0x1);
        gbc.writeMem(0x14f2, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3d2, gbc.sp());
        EXPECT(0x14f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03E2
        gbc.setState(0xe97d, 0x2535, 0x5900, 0xcdc4, 0x5936, 0xef8d, 0x1, 0x1);
        gbc.writeMem(0xe97d, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2535, gbc.sp());
        EXPECT(0xe97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97d));
        EXPECT(0xa7, gbc.readMem(0xe97e));
        // CB A7 03E3
        gbc.setState(0x924, 0xe54d, 0x51e0, 0x51f, 0x7644, 0x623a, 0x1, 0x1);
        gbc.writeMem(0x924, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe54d, gbc.sp());
        EXPECT(0x926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03E4
        gbc.setState(0xd97a, 0xd40c, 0x8360, 0xc781, 0xa08c, 0xc04d, 0x1, 0x1);
        gbc.writeMem(0xd97a, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd40c, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97a));
        EXPECT(0xa7, gbc.readMem(0xd97b));
        // CB A7 03E5
        gbc.setState(0x5974, 0xd82a, 0x8240, 0xbded, 0x8e9c, 0xc44f, 0x0, 0x0);
        gbc.writeMem(0x5974, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd82a, gbc.sp());
        EXPECT(0x5976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03E6
        gbc.setState(0x1a86, 0x3d12, 0x4760, 0xa07a, 0xc2b2, 0x583a, 0x1, 0x0);
        gbc.writeMem(0x1a86, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3d12, gbc.sp());
        EXPECT(0x1a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A7 03E7
        gbc.setState(0x1e85, 0x244, 0x4db0, 0x56bb, 0x4d10, 0xbb4c, 0x1, 0x0);
        gbc.writeMem(0x1e85, { 0xcb, 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x244, gbc.sp());
        EXPECT(0x1e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
