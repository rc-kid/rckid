    TEST(gbcemu, opcode_cb_40) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 40 0000
        gbc.setState(0xeebd, 0x9ea, 0x5e80, 0x8757, 0x9817, 0x70bb, 0x0, 0x1);
        gbc.writeMem(0xeebd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9ea);
        EXPECT(gbc.pc(), 0xeebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeebd), 0xcb);
        EXPECT(gbc.readMem(0xeebe), 0x40);
        // CB 40 0001
        gbc.setState(0x9451, 0x9591, 0x9f90, 0xfd2d, 0xe248, 0x541c, 0x0, 0x0);
        gbc.writeMem(0x9451, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9591);
        EXPECT(gbc.pc(), 0x9453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9451), 0xcb);
        EXPECT(gbc.readMem(0x9452), 0x40);
        // CB 40 0002
        gbc.setState(0x2e13, 0xd590, 0x8ae0, 0x907a, 0x617d, 0x5d4a, 0x1, 0x1);
        gbc.writeMem(0x2e13, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd590);
        EXPECT(gbc.pc(), 0x2e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0003
        gbc.setState(0x2dd3, 0xbcc2, 0xa2b0, 0x5d76, 0xe180, 0xf2e, 0x0, 0x1);
        gbc.writeMem(0x2dd3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbcc2);
        EXPECT(gbc.pc(), 0x2dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0004
        gbc.setState(0xacd1, 0xdff5, 0x4a30, 0x5b89, 0x415e, 0xae10, 0x1, 0x1);
        gbc.writeMem(0xacd1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdff5);
        EXPECT(gbc.pc(), 0xacd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd1), 0xcb);
        EXPECT(gbc.readMem(0xacd2), 0x40);
        // CB 40 0006
        gbc.setState(0xad6, 0x3004, 0x23e0, 0x100b, 0x1d92, 0xdd7b, 0x1, 0x0);
        gbc.writeMem(0xad6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3004);
        EXPECT(gbc.pc(), 0xad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0007
        gbc.setState(0x40a6, 0x67c8, 0x7420, 0x942f, 0x5edd, 0xbc5e, 0x0, 0x1);
        gbc.writeMem(0x40a6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x67c8);
        EXPECT(gbc.pc(), 0x40a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0008
        gbc.setState(0xec3e, 0xf0a3, 0x7bc0, 0x34e6, 0x7826, 0x71e5, 0x0, 0x0);
        gbc.writeMem(0xec3e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf0a3);
        EXPECT(gbc.pc(), 0xec40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3e), 0xcb);
        EXPECT(gbc.readMem(0xec3f), 0x40);
        // CB 40 0009
        gbc.setState(0x135c, 0x334e, 0x3550, 0x68fb, 0x3585, 0xfccb, 0x1, 0x1);
        gbc.writeMem(0x135c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x334e);
        EXPECT(gbc.pc(), 0x135e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 000A
        gbc.setState(0x83ea, 0xd5ce, 0xc570, 0x357a, 0xc616, 0xf7ec, 0x0, 0x1);
        gbc.writeMem(0x83ea, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd5ce);
        EXPECT(gbc.pc(), 0x83ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ea), 0xcb);
        EXPECT(gbc.readMem(0x83eb), 0x40);
        // CB 40 000B
        gbc.setState(0x1f85, 0xab44, 0x96e0, 0x5213, 0xac9c, 0x4b80, 0x0, 0x1);
        gbc.writeMem(0x1f85, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xab44);
        EXPECT(gbc.pc(), 0x1f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 000C
        gbc.setState(0xa5bf, 0xee6b, 0x6900, 0x31da, 0x2daf, 0x3e47, 0x0, 0x0);
        gbc.writeMem(0xa5bf, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xee6b);
        EXPECT(gbc.pc(), 0xa5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5bf), 0xcb);
        EXPECT(gbc.readMem(0xa5c0), 0x40);
        // CB 40 000D
        gbc.setState(0x18f8, 0xd108, 0x7b60, 0x25c3, 0x3828, 0xfc0e, 0x1, 0x0);
        gbc.writeMem(0x18f8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd108);
        EXPECT(gbc.pc(), 0x18fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 000E
        gbc.setState(0x8c67, 0x8740, 0x3d90, 0xa2d4, 0x8ef5, 0xc0c0, 0x1, 0x0);
        gbc.writeMem(0x8c67, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8740);
        EXPECT(gbc.pc(), 0x8c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c67), 0xcb);
        EXPECT(gbc.readMem(0x8c68), 0x40);
        // CB 40 000F
        gbc.setState(0x183c, 0xe5d7, 0x2a40, 0x3166, 0x1ab1, 0x8162, 0x0, 0x0);
        gbc.writeMem(0x183c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe5d7);
        EXPECT(gbc.pc(), 0x183e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0010
        gbc.setState(0x59df, 0x8db5, 0xad70, 0x5b83, 0xd6c4, 0x3863, 0x0, 0x1);
        gbc.writeMem(0x59df, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8db5);
        EXPECT(gbc.pc(), 0x59e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0011
        gbc.setState(0x868c, 0x5e7b, 0xcc90, 0xa99a, 0x26f6, 0x6cd5, 0x0, 0x0);
        gbc.writeMem(0x868c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5e7b);
        EXPECT(gbc.pc(), 0x868e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x868c), 0xcb);
        EXPECT(gbc.readMem(0x868d), 0x40);
        // CB 40 0012
        gbc.setState(0x6e86, 0x272c, 0x8cd0, 0x2adc, 0xac41, 0x1c01, 0x0, 0x0);
        gbc.writeMem(0x6e86, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x272c);
        EXPECT(gbc.pc(), 0x6e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0013
        gbc.setState(0x74aa, 0x5e5, 0xd980, 0x265a, 0xf52f, 0x1cdc, 0x0, 0x0);
        gbc.writeMem(0x74aa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5e5);
        EXPECT(gbc.pc(), 0x74ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0014
        gbc.setState(0xef0c, 0x9118, 0x58b0, 0x3d8d, 0x19a4, 0xc25e, 0x1, 0x1);
        gbc.writeMem(0xef0c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9118);
        EXPECT(gbc.pc(), 0xef0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef0c), 0xcb);
        EXPECT(gbc.readMem(0xef0d), 0x40);
        // CB 40 0015
        gbc.setState(0xcb46, 0x4b23, 0x7a30, 0xa751, 0xccaf, 0x8728, 0x1, 0x0);
        gbc.writeMem(0xcb46, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4b23);
        EXPECT(gbc.pc(), 0xcb48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb46), 0xcb);
        EXPECT(gbc.readMem(0xcb47), 0x40);
        // CB 40 0016
        gbc.setState(0x871c, 0x2faa, 0x4890, 0x3978, 0x7f4f, 0xa387, 0x0, 0x1);
        gbc.writeMem(0x871c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2faa);
        EXPECT(gbc.pc(), 0x871e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871c), 0xcb);
        EXPECT(gbc.readMem(0x871d), 0x40);
        // CB 40 0017
        gbc.setState(0x5f5a, 0x844b, 0xee90, 0xafc6, 0x82d3, 0x80f7, 0x1, 0x1);
        gbc.writeMem(0x5f5a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x844b);
        EXPECT(gbc.pc(), 0x5f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0018
        gbc.setState(0xd3a6, 0x2002, 0x9020, 0x2073, 0x9db3, 0x8832, 0x1, 0x0);
        gbc.writeMem(0xd3a6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2002);
        EXPECT(gbc.pc(), 0xd3a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a6), 0xcb);
        EXPECT(gbc.readMem(0xd3a7), 0x40);
        // CB 40 0019
        gbc.setState(0xecad, 0x7f77, 0x13b0, 0x4267, 0xac8d, 0x6717, 0x0, 0x0);
        gbc.writeMem(0xecad, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7f77);
        EXPECT(gbc.pc(), 0xecaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecad), 0xcb);
        EXPECT(gbc.readMem(0xecae), 0x40);
        // CB 40 001A
        gbc.setState(0x95ad, 0x2acf, 0x10c0, 0x5214, 0x73c6, 0xced, 0x1, 0x1);
        gbc.writeMem(0x95ad, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2acf);
        EXPECT(gbc.pc(), 0x95af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ad), 0xcb);
        EXPECT(gbc.readMem(0x95ae), 0x40);
        // CB 40 001B
        gbc.setState(0xadc9, 0x295f, 0xf240, 0xed45, 0xf779, 0xea70, 0x1, 0x0);
        gbc.writeMem(0xadc9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x295f);
        EXPECT(gbc.pc(), 0xadcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc9), 0xcb);
        EXPECT(gbc.readMem(0xadca), 0x40);
        // CB 40 001C
        gbc.setState(0x1a35, 0x26cf, 0x8e0, 0x1547, 0x1c55, 0x71b2, 0x0, 0x0);
        gbc.writeMem(0x1a35, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x26cf);
        EXPECT(gbc.pc(), 0x1a37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 001D
        gbc.setState(0xe971, 0x1396, 0x8fb0, 0x9069, 0xfe54, 0xa83b, 0x0, 0x0);
        gbc.writeMem(0xe971, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1396);
        EXPECT(gbc.pc(), 0xe973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe971), 0xcb);
        EXPECT(gbc.readMem(0xe972), 0x40);
        // CB 40 001E
        gbc.setState(0xd202, 0xc111, 0x9120, 0x87, 0x7cf1, 0xfb6b, 0x0, 0x1);
        gbc.writeMem(0xd202, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc111);
        EXPECT(gbc.pc(), 0xd204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd202), 0xcb);
        EXPECT(gbc.readMem(0xd203), 0x40);
        // CB 40 001F
        gbc.setState(0x8e38, 0xbdab, 0x5760, 0xa1f1, 0xfa7d, 0x8464, 0x0, 0x0);
        gbc.writeMem(0x8e38, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbdab);
        EXPECT(gbc.pc(), 0x8e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e38), 0xcb);
        EXPECT(gbc.readMem(0x8e39), 0x40);
        // CB 40 0021
        gbc.setState(0xc9ce, 0xfcf0, 0x4720, 0xa2cf, 0x9af9, 0x46bc, 0x1, 0x0);
        gbc.writeMem(0xc9ce, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfcf0);
        EXPECT(gbc.pc(), 0xc9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ce), 0xcb);
        EXPECT(gbc.readMem(0xc9cf), 0x40);
        // CB 40 0022
        gbc.setState(0xd13f, 0x3297, 0x54d0, 0xe0e0, 0x32c6, 0xabf8, 0x1, 0x1);
        gbc.writeMem(0xd13f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3297);
        EXPECT(gbc.pc(), 0xd141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd13f), 0xcb);
        EXPECT(gbc.readMem(0xd140), 0x40);
        // CB 40 0023
        gbc.setState(0x7b61, 0x67cd, 0x5710, 0x362e, 0xfbb3, 0x5418, 0x0, 0x0);
        gbc.writeMem(0x7b61, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x67cd);
        EXPECT(gbc.pc(), 0x7b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0024
        gbc.setState(0xabf3, 0x304f, 0x3220, 0xb4a8, 0xf2ef, 0x9ebb, 0x1, 0x0);
        gbc.writeMem(0xabf3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x304f);
        EXPECT(gbc.pc(), 0xabf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf3), 0xcb);
        EXPECT(gbc.readMem(0xabf4), 0x40);
        // CB 40 0025
        gbc.setState(0xae4b, 0xcfaa, 0x9f20, 0x2186, 0x636a, 0x3073, 0x1, 0x0);
        gbc.writeMem(0xae4b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xcfaa);
        EXPECT(gbc.pc(), 0xae4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae4b), 0xcb);
        EXPECT(gbc.readMem(0xae4c), 0x40);
        // CB 40 0026
        gbc.setState(0xbbca, 0x6350, 0x3d20, 0x42a3, 0x2125, 0x661c, 0x0, 0x0);
        gbc.writeMem(0xbbca, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6350);
        EXPECT(gbc.pc(), 0xbbcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbca), 0xcb);
        EXPECT(gbc.readMem(0xbbcb), 0x40);
        // CB 40 0027
        gbc.setState(0xcf42, 0x6399, 0xced0, 0x677c, 0x4ac4, 0x8d0b, 0x1, 0x1);
        gbc.writeMem(0xcf42, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6399);
        EXPECT(gbc.pc(), 0xcf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf42), 0xcb);
        EXPECT(gbc.readMem(0xcf43), 0x40);
        // CB 40 0028
        gbc.setState(0x97fa, 0xa9f2, 0x61c0, 0x71fd, 0xccc7, 0x7268, 0x1, 0x1);
        gbc.writeMem(0x97fa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa9f2);
        EXPECT(gbc.pc(), 0x97fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97fa), 0xcb);
        EXPECT(gbc.readMem(0x97fb), 0x40);
        // CB 40 0029
        gbc.setState(0x1637, 0xe830, 0x7300, 0xfde, 0x7212, 0xa20b, 0x0, 0x1);
        gbc.writeMem(0x1637, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe830);
        EXPECT(gbc.pc(), 0x1639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 002A
        gbc.setState(0xd43a, 0xe585, 0x8400, 0xc769, 0x875b, 0x50d8, 0x0, 0x1);
        gbc.writeMem(0xd43a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe585);
        EXPECT(gbc.pc(), 0xd43c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd43a), 0xcb);
        EXPECT(gbc.readMem(0xd43b), 0x40);
        // CB 40 002B
        gbc.setState(0x15da, 0xd527, 0x3a70, 0x3217, 0xc70c, 0xea77, 0x0, 0x0);
        gbc.writeMem(0x15da, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd527);
        EXPECT(gbc.pc(), 0x15dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 002C
        gbc.setState(0x90af, 0xd046, 0xeb10, 0x804e, 0x369, 0x4b40, 0x1, 0x1);
        gbc.writeMem(0x90af, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd046);
        EXPECT(gbc.pc(), 0x90b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90af), 0xcb);
        EXPECT(gbc.readMem(0x90b0), 0x40);
        // CB 40 002D
        gbc.setState(0xcee2, 0xbeb0, 0x77b0, 0xc6eb, 0xc74f, 0xee9b, 0x0, 0x0);
        gbc.writeMem(0xcee2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbeb0);
        EXPECT(gbc.pc(), 0xcee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee2), 0xcb);
        EXPECT(gbc.readMem(0xcee3), 0x40);
        // CB 40 002E
        gbc.setState(0x1536, 0x5751, 0x960, 0x829a, 0xdc56, 0xbd3f, 0x0, 0x1);
        gbc.writeMem(0x1536, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5751);
        EXPECT(gbc.pc(), 0x1538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 002F
        gbc.setState(0xa2ba, 0x4b27, 0xca50, 0x7032, 0x2bd2, 0xa2d7, 0x0, 0x1);
        gbc.writeMem(0xa2ba, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4b27);
        EXPECT(gbc.pc(), 0xa2bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ba), 0xcb);
        EXPECT(gbc.readMem(0xa2bb), 0x40);
        // CB 40 0030
        gbc.setState(0xb2d1, 0x3b6c, 0xe50, 0xf7de, 0xa5b7, 0x33bb, 0x1, 0x1);
        gbc.writeMem(0xb2d1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3b6c);
        EXPECT(gbc.pc(), 0xb2d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d1), 0xcb);
        EXPECT(gbc.readMem(0xb2d2), 0x40);
        // CB 40 0031
        gbc.setState(0xb0a7, 0x714b, 0xcfb0, 0x6198, 0x66f, 0x2c2f, 0x0, 0x1);
        gbc.writeMem(0xb0a7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x714b);
        EXPECT(gbc.pc(), 0xb0a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a7), 0xcb);
        EXPECT(gbc.readMem(0xb0a8), 0x40);
        // CB 40 0032
        gbc.setState(0xe915, 0xaae0, 0xe7f0, 0xc2c1, 0x5980, 0xb9ae, 0x1, 0x1);
        gbc.writeMem(0xe915, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xaae0);
        EXPECT(gbc.pc(), 0xe917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe915), 0xcb);
        EXPECT(gbc.readMem(0xe916), 0x40);
        // CB 40 0033
        gbc.setState(0x2197, 0x1ab9, 0x14d0, 0x5854, 0x61df, 0x655a, 0x0, 0x0);
        gbc.writeMem(0x2197, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1ab9);
        EXPECT(gbc.pc(), 0x2199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0034
        gbc.setState(0xb46f, 0xb681, 0x7830, 0xdacc, 0x3782, 0x89fd, 0x0, 0x1);
        gbc.writeMem(0xb46f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb681);
        EXPECT(gbc.pc(), 0xb471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb46f), 0xcb);
        EXPECT(gbc.readMem(0xb470), 0x40);
        // CB 40 0035
        gbc.setState(0xd9be, 0xbf32, 0x1fb0, 0x3b1, 0x82df, 0xa73d, 0x1, 0x0);
        gbc.writeMem(0xd9be, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbf32);
        EXPECT(gbc.pc(), 0xd9c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9be), 0xcb);
        EXPECT(gbc.readMem(0xd9bf), 0x40);
        // CB 40 0036
        gbc.setState(0xa7d0, 0x1e20, 0xce90, 0xb6aa, 0xb4eb, 0x2655, 0x1, 0x1);
        gbc.writeMem(0xa7d0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1e20);
        EXPECT(gbc.pc(), 0xa7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d0), 0xcb);
        EXPECT(gbc.readMem(0xa7d1), 0x40);
        // CB 40 0037
        gbc.setState(0x6ad4, 0x1e53, 0x26e0, 0x6398, 0x8f84, 0x272, 0x1, 0x0);
        gbc.writeMem(0x6ad4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1e53);
        EXPECT(gbc.pc(), 0x6ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0038
        gbc.setState(0xb17e, 0xce3b, 0xcb40, 0x541b, 0x5dec, 0x11f8, 0x0, 0x1);
        gbc.writeMem(0xb17e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xce3b);
        EXPECT(gbc.pc(), 0xb180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17e), 0xcb);
        EXPECT(gbc.readMem(0xb17f), 0x40);
        // CB 40 0039
        gbc.setState(0xbd8, 0xc165, 0x4cf0, 0x9633, 0xfd5f, 0x5d9b, 0x0, 0x1);
        gbc.writeMem(0xbd8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc165);
        EXPECT(gbc.pc(), 0xbda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 003A
        gbc.setState(0x935f, 0x4571, 0xaf20, 0x9722, 0x4ff0, 0x76a, 0x1, 0x0);
        gbc.writeMem(0x935f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4571);
        EXPECT(gbc.pc(), 0x9361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935f), 0xcb);
        EXPECT(gbc.readMem(0x9360), 0x40);
        // CB 40 003B
        gbc.setState(0xe6d3, 0xcc9d, 0x65f0, 0x5049, 0x6e72, 0x3b17, 0x0, 0x1);
        gbc.writeMem(0xe6d3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xcc9d);
        EXPECT(gbc.pc(), 0xe6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d3), 0xcb);
        EXPECT(gbc.readMem(0xe6d4), 0x40);
        // CB 40 003C
        gbc.setState(0x2b63, 0x9499, 0x7150, 0xd656, 0x8584, 0xbd64, 0x0, 0x0);
        gbc.writeMem(0x2b63, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9499);
        EXPECT(gbc.pc(), 0x2b65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 003D
        gbc.setState(0x8695, 0xd608, 0x7ee0, 0x1142, 0x9d54, 0xa8c, 0x1, 0x0);
        gbc.writeMem(0x8695, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd608);
        EXPECT(gbc.pc(), 0x8697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8695), 0xcb);
        EXPECT(gbc.readMem(0x8696), 0x40);
        // CB 40 003E
        gbc.setState(0x8961, 0x91ba, 0x9a80, 0xaf9f, 0xdb71, 0xe6ef, 0x1, 0x0);
        gbc.writeMem(0x8961, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x91ba);
        EXPECT(gbc.pc(), 0x8963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8961), 0xcb);
        EXPECT(gbc.readMem(0x8962), 0x40);
        // CB 40 003F
        gbc.setState(0x2c7c, 0x6a2d, 0x5460, 0xc37b, 0x1002, 0x2929, 0x1, 0x1);
        gbc.writeMem(0x2c7c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6a2d);
        EXPECT(gbc.pc(), 0x2c7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0040
        gbc.setState(0x98f6, 0x7bc, 0x8b10, 0xb78a, 0xb990, 0x6820, 0x0, 0x0);
        gbc.writeMem(0x98f6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7bc);
        EXPECT(gbc.pc(), 0x98f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f6), 0xcb);
        EXPECT(gbc.readMem(0x98f7), 0x40);
        // CB 40 0041
        gbc.setState(0x40ee, 0x2e15, 0x6fc0, 0x4d8a, 0x8da9, 0x7362, 0x0, 0x0);
        gbc.writeMem(0x40ee, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2e15);
        EXPECT(gbc.pc(), 0x40f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0042
        gbc.setState(0x8db1, 0x92bc, 0x7e30, 0x5440, 0xd2d8, 0x8f06, 0x1, 0x1);
        gbc.writeMem(0x8db1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x92bc);
        EXPECT(gbc.pc(), 0x8db3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db1), 0xcb);
        EXPECT(gbc.readMem(0x8db2), 0x40);
        // CB 40 0043
        gbc.setState(0xecc0, 0x8d8c, 0xb090, 0xa97, 0x44cb, 0x9eb3, 0x1, 0x1);
        gbc.writeMem(0xecc0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8d8c);
        EXPECT(gbc.pc(), 0xecc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc0), 0xcb);
        EXPECT(gbc.readMem(0xecc1), 0x40);
        // CB 40 0044
        gbc.setState(0xde2d, 0x6adb, 0x6300, 0x45b6, 0xec05, 0x3298, 0x1, 0x0);
        gbc.writeMem(0xde2d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6adb);
        EXPECT(gbc.pc(), 0xde2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2d), 0xcb);
        EXPECT(gbc.readMem(0xde2e), 0x40);
        // CB 40 0045
        gbc.setState(0x712f, 0x2a00, 0x4d80, 0x72cb, 0x1862, 0x3fa4, 0x1, 0x0);
        gbc.writeMem(0x712f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2a00);
        EXPECT(gbc.pc(), 0x7131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0047
        gbc.setState(0x37d3, 0x595d, 0x8870, 0x88b6, 0x6be7, 0xba7b, 0x0, 0x0);
        gbc.writeMem(0x37d3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x595d);
        EXPECT(gbc.pc(), 0x37d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0048
        gbc.setState(0x250c, 0x508b, 0x7b90, 0xfb26, 0x7e0f, 0x4f48, 0x1, 0x0);
        gbc.writeMem(0x250c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x508b);
        EXPECT(gbc.pc(), 0x250e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0049
        gbc.setState(0x527a, 0x9a6e, 0xe100, 0x267d, 0x9ffc, 0xd4f1, 0x1, 0x1);
        gbc.writeMem(0x527a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9a6e);
        EXPECT(gbc.pc(), 0x527c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 004A
        gbc.setState(0xbc9c, 0xfcfc, 0x7880, 0xacd8, 0xf664, 0xe484, 0x1, 0x1);
        gbc.writeMem(0xbc9c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfcfc);
        EXPECT(gbc.pc(), 0xbc9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc9c), 0xcb);
        EXPECT(gbc.readMem(0xbc9d), 0x40);
        // CB 40 004C
        gbc.setState(0xb8fe, 0x2bbe, 0x8890, 0xae28, 0x7aee, 0x1a5e, 0x0, 0x1);
        gbc.writeMem(0xb8fe, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2bbe);
        EXPECT(gbc.pc(), 0xb900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8fe), 0xcb);
        EXPECT(gbc.readMem(0xb8ff), 0x40);
        // CB 40 004D
        gbc.setState(0xcf73, 0x1331, 0x8d40, 0x7986, 0x99fb, 0xaad7, 0x0, 0x1);
        gbc.writeMem(0xcf73, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1331);
        EXPECT(gbc.pc(), 0xcf75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf73), 0xcb);
        EXPECT(gbc.readMem(0xcf74), 0x40);
        // CB 40 004E
        gbc.setState(0x9839, 0xd407, 0xcc0, 0xa87a, 0x84b4, 0x6146, 0x1, 0x0);
        gbc.writeMem(0x9839, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd407);
        EXPECT(gbc.pc(), 0x983b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9839), 0xcb);
        EXPECT(gbc.readMem(0x983a), 0x40);
        // CB 40 004F
        gbc.setState(0xdd85, 0x7cf3, 0x9eb0, 0xe2aa, 0x8d79, 0x47b2, 0x1, 0x1);
        gbc.writeMem(0xdd85, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7cf3);
        EXPECT(gbc.pc(), 0xdd87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd85), 0xcb);
        EXPECT(gbc.readMem(0xdd86), 0x40);
        // CB 40 0050
        gbc.setState(0x2524, 0x343d, 0x3190, 0x153d, 0xfc7f, 0x27db, 0x1, 0x0);
        gbc.writeMem(0x2524, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x343d);
        EXPECT(gbc.pc(), 0x2526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0051
        gbc.setState(0x2e3c, 0xeb74, 0x6080, 0xb7d1, 0xf061, 0x3f21, 0x0, 0x0);
        gbc.writeMem(0x2e3c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xeb74);
        EXPECT(gbc.pc(), 0x2e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0052
        gbc.setState(0x2212, 0x4660, 0xd8e0, 0xe793, 0x5ffa, 0x9628, 0x0, 0x0);
        gbc.writeMem(0x2212, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4660);
        EXPECT(gbc.pc(), 0x2214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0053
        gbc.setState(0xd539, 0x66ae, 0xad30, 0x17b, 0x1b0, 0x8b, 0x0, 0x1);
        gbc.writeMem(0xd539, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x66ae);
        EXPECT(gbc.pc(), 0xd53b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd539), 0xcb);
        EXPECT(gbc.readMem(0xd53a), 0x40);
        // CB 40 0054
        gbc.setState(0x962b, 0x7cb7, 0x6270, 0x417e, 0x14e5, 0xf3e9, 0x0, 0x0);
        gbc.writeMem(0x962b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7cb7);
        EXPECT(gbc.pc(), 0x962d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x962b), 0xcb);
        EXPECT(gbc.readMem(0x962c), 0x40);
        // CB 40 0055
        gbc.setState(0x418c, 0xc49b, 0xcaf0, 0xfeef, 0xda75, 0xc919, 0x1, 0x1);
        gbc.writeMem(0x418c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc49b);
        EXPECT(gbc.pc(), 0x418e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0056
        gbc.setState(0x19f, 0x93c5, 0x5f50, 0x205a, 0x14c9, 0xc2be, 0x1, 0x0);
        gbc.writeMem(0x19f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x93c5);
        EXPECT(gbc.pc(), 0x1a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0057
        gbc.setState(0xa059, 0xe93f, 0x9480, 0x8902, 0xb870, 0x27cc, 0x0, 0x0);
        gbc.writeMem(0xa059, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe93f);
        EXPECT(gbc.pc(), 0xa05b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa059), 0xcb);
        EXPECT(gbc.readMem(0xa05a), 0x40);
        // CB 40 0058
        gbc.setState(0x26bb, 0x5cfe, 0x2b60, 0x7e76, 0x127f, 0x60aa, 0x0, 0x0);
        gbc.writeMem(0x26bb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5cfe);
        EXPECT(gbc.pc(), 0x26bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0059
        gbc.setState(0xefa, 0x783d, 0x38e0, 0xa78c, 0xea81, 0x44e7, 0x0, 0x0);
        gbc.writeMem(0xefa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x783d);
        EXPECT(gbc.pc(), 0xefc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 005A
        gbc.setState(0x6f77, 0x681d, 0x9300, 0xec23, 0x31b7, 0x7d01, 0x1, 0x1);
        gbc.writeMem(0x6f77, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x681d);
        EXPECT(gbc.pc(), 0x6f79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 005B
        gbc.setState(0x7bb5, 0x3ba9, 0xc4e0, 0x62dc, 0x43cb, 0xc905, 0x1, 0x0);
        gbc.writeMem(0x7bb5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3ba9);
        EXPECT(gbc.pc(), 0x7bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 005C
        gbc.setState(0xdf76, 0x2804, 0x8370, 0x567b, 0xcc5d, 0x57a2, 0x1, 0x1);
        gbc.writeMem(0xdf76, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2804);
        EXPECT(gbc.pc(), 0xdf78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf76), 0xcb);
        EXPECT(gbc.readMem(0xdf77), 0x40);
        // CB 40 005D
        gbc.setState(0x627d, 0x87a, 0xb0a0, 0x2aff, 0x89e, 0x9b10, 0x0, 0x1);
        gbc.writeMem(0x627d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x87a);
        EXPECT(gbc.pc(), 0x627f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 005E
        gbc.setState(0x4cbf, 0x1164, 0xffa0, 0xecb7, 0x1515, 0x70dc, 0x1, 0x1);
        gbc.writeMem(0x4cbf, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1164);
        EXPECT(gbc.pc(), 0x4cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0060
        gbc.setState(0xd78f, 0xe044, 0x71d0, 0xa7e5, 0x521b, 0xa26a, 0x1, 0x1);
        gbc.writeMem(0xd78f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe044);
        EXPECT(gbc.pc(), 0xd791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd78f), 0xcb);
        EXPECT(gbc.readMem(0xd790), 0x40);
        // CB 40 0062
        gbc.setState(0xc6f4, 0x70f7, 0xbac0, 0xa43a, 0xaa9b, 0xe862, 0x1, 0x1);
        gbc.writeMem(0xc6f4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x70f7);
        EXPECT(gbc.pc(), 0xc6f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f4), 0xcb);
        EXPECT(gbc.readMem(0xc6f5), 0x40);
        // CB 40 0063
        gbc.setState(0x6cc2, 0x4179, 0x9380, 0x6329, 0xc190, 0xaefa, 0x0, 0x1);
        gbc.writeMem(0x6cc2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4179);
        EXPECT(gbc.pc(), 0x6cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0064
        gbc.setState(0x91aa, 0xb6e1, 0xb810, 0x5e4c, 0xc9be, 0x9426, 0x0, 0x0);
        gbc.writeMem(0x91aa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb6e1);
        EXPECT(gbc.pc(), 0x91ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91aa), 0xcb);
        EXPECT(gbc.readMem(0x91ab), 0x40);
        // CB 40 0065
        gbc.setState(0xc019, 0x62ad, 0x2e00, 0x5192, 0x3dfc, 0x3694, 0x1, 0x1);
        gbc.writeMem(0xc019, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x62ad);
        EXPECT(gbc.pc(), 0xc01b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc019), 0xcb);
        EXPECT(gbc.readMem(0xc01a), 0x40);
        // CB 40 0066
        gbc.setState(0x6b77, 0xec37, 0x7c80, 0xbf09, 0xbb9e, 0xe7f8, 0x1, 0x0);
        gbc.writeMem(0x6b77, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xec37);
        EXPECT(gbc.pc(), 0x6b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0068
        gbc.setState(0x532b, 0xcc5c, 0x6010, 0x2e80, 0x3e21, 0x59e7, 0x0, 0x1);
        gbc.writeMem(0x532b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcc5c);
        EXPECT(gbc.pc(), 0x532d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0069
        gbc.setState(0xef3d, 0x885c, 0xcb0, 0xc1b6, 0xfed9, 0xe80, 0x0, 0x1);
        gbc.writeMem(0xef3d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x885c);
        EXPECT(gbc.pc(), 0xef3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3d), 0xcb);
        EXPECT(gbc.readMem(0xef3e), 0x40);
        // CB 40 006A
        gbc.setState(0xee2e, 0xab14, 0x54a0, 0xe7a, 0xc712, 0xaf94, 0x0, 0x0);
        gbc.writeMem(0xee2e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xab14);
        EXPECT(gbc.pc(), 0xee30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee2e), 0xcb);
        EXPECT(gbc.readMem(0xee2f), 0x40);
        // CB 40 006B
        gbc.setState(0xb690, 0xcc30, 0xbea0, 0xcb5b, 0x9029, 0xe0f9, 0x1, 0x0);
        gbc.writeMem(0xb690, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xcc30);
        EXPECT(gbc.pc(), 0xb692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb690), 0xcb);
        EXPECT(gbc.readMem(0xb691), 0x40);
        // CB 40 006C
        gbc.setState(0x46dd, 0x2b20, 0xe870, 0x19a0, 0xf677, 0xa611, 0x1, 0x0);
        gbc.writeMem(0x46dd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2b20);
        EXPECT(gbc.pc(), 0x46df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 006D
        gbc.setState(0x248d, 0xb87b, 0xd720, 0xe248, 0xb6ec, 0x4c8f, 0x0, 0x0);
        gbc.writeMem(0x248d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb87b);
        EXPECT(gbc.pc(), 0x248f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 006E
        gbc.setState(0x19e7, 0xa935, 0x9ab0, 0x747a, 0x5c6c, 0x5c4b, 0x1, 0x1);
        gbc.writeMem(0x19e7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa935);
        EXPECT(gbc.pc(), 0x19e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 006F
        gbc.setState(0x2c79, 0x6412, 0xf1d0, 0x71d, 0x2035, 0xfad9, 0x1, 0x0);
        gbc.writeMem(0x2c79, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6412);
        EXPECT(gbc.pc(), 0x2c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0070
        gbc.setState(0xab1a, 0x9495, 0x81f0, 0x3332, 0x2eb5, 0xbe1c, 0x0, 0x0);
        gbc.writeMem(0xab1a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9495);
        EXPECT(gbc.pc(), 0xab1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1a), 0xcb);
        EXPECT(gbc.readMem(0xab1b), 0x40);
        // CB 40 0071
        gbc.setState(0xc4f4, 0x6f2, 0xcef0, 0xf1e8, 0xb1fa, 0x8aa0, 0x0, 0x1);
        gbc.writeMem(0xc4f4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6f2);
        EXPECT(gbc.pc(), 0xc4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4f4), 0xcb);
        EXPECT(gbc.readMem(0xc4f5), 0x40);
        // CB 40 0072
        gbc.setState(0xb2c5, 0xbc92, 0xf0a0, 0xf5e5, 0x3cac, 0xd7a0, 0x0, 0x0);
        gbc.writeMem(0xb2c5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xbc92);
        EXPECT(gbc.pc(), 0xb2c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c5), 0xcb);
        EXPECT(gbc.readMem(0xb2c6), 0x40);
        // CB 40 0073
        gbc.setState(0x326b, 0xbb19, 0x6fc0, 0x736b, 0x5f8f, 0x519d, 0x1, 0x0);
        gbc.writeMem(0x326b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xbb19);
        EXPECT(gbc.pc(), 0x326d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0074
        gbc.setState(0x769c, 0x1754, 0x7d30, 0xcbba, 0x2e5e, 0x4963, 0x1, 0x0);
        gbc.writeMem(0x769c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1754);
        EXPECT(gbc.pc(), 0x769e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0075
        gbc.setState(0xa01a, 0xcb57, 0xd010, 0x9d63, 0x138b, 0x654, 0x1, 0x1);
        gbc.writeMem(0xa01a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xcb57);
        EXPECT(gbc.pc(), 0xa01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa01a), 0xcb);
        EXPECT(gbc.readMem(0xa01b), 0x40);
        // CB 40 0076
        gbc.setState(0x8a08, 0x20be, 0xa90, 0x8162, 0x25ff, 0xa8f5, 0x1, 0x0);
        gbc.writeMem(0x8a08, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x20be);
        EXPECT(gbc.pc(), 0x8a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a08), 0xcb);
        EXPECT(gbc.readMem(0x8a09), 0x40);
        // CB 40 0077
        gbc.setState(0xe82a, 0x311, 0xc200, 0x6876, 0x5a60, 0x35ca, 0x0, 0x0);
        gbc.writeMem(0xe82a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x311);
        EXPECT(gbc.pc(), 0xe82c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe82a), 0xcb);
        EXPECT(gbc.readMem(0xe82b), 0x40);
        // CB 40 0078
        gbc.setState(0xc39, 0x5d09, 0x4070, 0xe536, 0xf993, 0x739b, 0x1, 0x1);
        gbc.writeMem(0xc39, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5d09);
        EXPECT(gbc.pc(), 0xc3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0079
        gbc.setState(0x214f, 0x5a29, 0x1a00, 0x2d7c, 0x31f4, 0x9835, 0x1, 0x1);
        gbc.writeMem(0x214f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5a29);
        EXPECT(gbc.pc(), 0x2151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 007A
        gbc.setState(0x117a, 0x8534, 0x7300, 0xfb4b, 0x1623, 0x4003, 0x1, 0x0);
        gbc.writeMem(0x117a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8534);
        EXPECT(gbc.pc(), 0x117c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 007B
        gbc.setState(0x132, 0xad30, 0x2640, 0xd9ba, 0x68a1, 0x55a7, 0x1, 0x1);
        gbc.writeMem(0x132, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xad30);
        EXPECT(gbc.pc(), 0x134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 007C
        gbc.setState(0x56ab, 0x7bf, 0xbd10, 0x19c, 0xa3b6, 0x936e, 0x0, 0x0);
        gbc.writeMem(0x56ab, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7bf);
        EXPECT(gbc.pc(), 0x56ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 007D
        gbc.setState(0x7c5, 0x290a, 0x8090, 0x2969, 0xb241, 0xe049, 0x1, 0x0);
        gbc.writeMem(0x7c5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x290a);
        EXPECT(gbc.pc(), 0x7c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 007E
        gbc.setState(0x14ca, 0xa28a, 0xbad0, 0x4ce5, 0x87d0, 0xae23, 0x1, 0x1);
        gbc.writeMem(0x14ca, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa28a);
        EXPECT(gbc.pc(), 0x14cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 007F
        gbc.setState(0x272b, 0xf2c4, 0xcea0, 0x6932, 0x8648, 0x742d, 0x1, 0x1);
        gbc.writeMem(0x272b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf2c4);
        EXPECT(gbc.pc(), 0x272d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0082
        gbc.setState(0xb73c, 0x4bdb, 0xabb0, 0xa00f, 0xfec5, 0x604f, 0x0, 0x0);
        gbc.writeMem(0xb73c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4bdb);
        EXPECT(gbc.pc(), 0xb73e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb73c), 0xcb);
        EXPECT(gbc.readMem(0xb73d), 0x40);
        // CB 40 0083
        gbc.setState(0x3444, 0x9340, 0xf1f0, 0xd4c9, 0x303a, 0xc4bd, 0x1, 0x0);
        gbc.writeMem(0x3444, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9340);
        EXPECT(gbc.pc(), 0x3446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0084
        gbc.setState(0x162a, 0x3fa1, 0x3110, 0xb83c, 0x6f67, 0x27ce, 0x0, 0x1);
        gbc.writeMem(0x162a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3fa1);
        EXPECT(gbc.pc(), 0x162c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0085
        gbc.setState(0x37ea, 0x7d3e, 0xe720, 0x9a86, 0xf0fd, 0x7b74, 0x1, 0x1);
        gbc.writeMem(0x37ea, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7d3e);
        EXPECT(gbc.pc(), 0x37ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0086
        gbc.setState(0x4d7, 0x791c, 0x33a0, 0x2c00, 0x51b7, 0xba83, 0x0, 0x0);
        gbc.writeMem(0x4d7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x791c);
        EXPECT(gbc.pc(), 0x4d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0087
        gbc.setState(0x252d, 0x11af, 0xdf00, 0xe02a, 0x7ecf, 0xc663, 0x1, 0x1);
        gbc.writeMem(0x252d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x11af);
        EXPECT(gbc.pc(), 0x252f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0088
        gbc.setState(0xd91e, 0x18ab, 0x1210, 0x5eae, 0xb462, 0x6164, 0x1, 0x1);
        gbc.writeMem(0xd91e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x18ab);
        EXPECT(gbc.pc(), 0xd920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd91e), 0xcb);
        EXPECT(gbc.readMem(0xd91f), 0x40);
        // CB 40 0089
        gbc.setState(0x8c98, 0xe5c6, 0x6c50, 0xb93f, 0xcca5, 0x9404, 0x0, 0x1);
        gbc.writeMem(0x8c98, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe5c6);
        EXPECT(gbc.pc(), 0x8c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c98), 0xcb);
        EXPECT(gbc.readMem(0x8c99), 0x40);
        // CB 40 008A
        gbc.setState(0xd578, 0xa4bb, 0xba40, 0x1bce, 0xb723, 0xaa23, 0x1, 0x0);
        gbc.writeMem(0xd578, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa4bb);
        EXPECT(gbc.pc(), 0xd57a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd578), 0xcb);
        EXPECT(gbc.readMem(0xd579), 0x40);
        // CB 40 008B
        gbc.setState(0x535d, 0xebf1, 0xb5f0, 0x222b, 0xb4cd, 0x3750, 0x0, 0x0);
        gbc.writeMem(0x535d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xebf1);
        EXPECT(gbc.pc(), 0x535f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 008D
        gbc.setState(0x7c80, 0x7ca4, 0x7cd0, 0x9be4, 0xa679, 0x28e1, 0x1, 0x0);
        gbc.writeMem(0x7c80, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7ca4);
        EXPECT(gbc.pc(), 0x7c82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 008E
        gbc.setState(0x5f97, 0x7741, 0x5df0, 0x33ea, 0x25fb, 0xb20c, 0x0, 0x0);
        gbc.writeMem(0x5f97, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7741);
        EXPECT(gbc.pc(), 0x5f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 008F
        gbc.setState(0xc85, 0xef05, 0x2830, 0xb25d, 0x4d7, 0xb1b1, 0x1, 0x0);
        gbc.writeMem(0xc85, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xef05);
        EXPECT(gbc.pc(), 0xc87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0090
        gbc.setState(0xd901, 0xeb35, 0x5e40, 0xbdda, 0x6c7a, 0xf3a4, 0x0, 0x1);
        gbc.writeMem(0xd901, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xeb35);
        EXPECT(gbc.pc(), 0xd903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd901), 0xcb);
        EXPECT(gbc.readMem(0xd902), 0x40);
        // CB 40 0091
        gbc.setState(0x7231, 0xcb74, 0xe370, 0xcb22, 0x6c62, 0x8cec, 0x0, 0x0);
        gbc.writeMem(0x7231, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcb74);
        EXPECT(gbc.pc(), 0x7233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0092
        gbc.setState(0x6644, 0x4f92, 0x7920, 0x168d, 0xa997, 0x6276, 0x0, 0x0);
        gbc.writeMem(0x6644, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4f92);
        EXPECT(gbc.pc(), 0x6646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0093
        gbc.setState(0x68c3, 0xb4ab, 0x9820, 0x6d9c, 0x3dea, 0xef5c, 0x1, 0x1);
        gbc.writeMem(0x68c3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb4ab);
        EXPECT(gbc.pc(), 0x68c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0094
        gbc.setState(0xea74, 0xa84e, 0xf760, 0x5329, 0xec1b, 0x76cf, 0x0, 0x1);
        gbc.writeMem(0xea74, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa84e);
        EXPECT(gbc.pc(), 0xea76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea74), 0xcb);
        EXPECT(gbc.readMem(0xea75), 0x40);
        // CB 40 0095
        gbc.setState(0x5671, 0x521, 0x2c40, 0x2d9c, 0x1f1c, 0xe824, 0x0, 0x0);
        gbc.writeMem(0x5671, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x521);
        EXPECT(gbc.pc(), 0x5673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0096
        gbc.setState(0x30fd, 0xcd36, 0x2e0, 0x5aeb, 0xe8ba, 0x64ce, 0x1, 0x0);
        gbc.writeMem(0x30fd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcd36);
        EXPECT(gbc.pc(), 0x30ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0097
        gbc.setState(0x8030, 0x1d07, 0x3060, 0x6984, 0x7423, 0x75f4, 0x1, 0x1);
        gbc.writeMem(0x8030, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1d07);
        EXPECT(gbc.pc(), 0x8032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8030), 0xcb);
        EXPECT(gbc.readMem(0x8031), 0x40);
        // CB 40 0098
        gbc.setState(0xe7d6, 0x60f1, 0x2ee0, 0x7c9d, 0xc161, 0x9f6d, 0x1, 0x1);
        gbc.writeMem(0xe7d6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x60f1);
        EXPECT(gbc.pc(), 0xe7d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d6), 0xcb);
        EXPECT(gbc.readMem(0xe7d7), 0x40);
        // CB 40 0099
        gbc.setState(0x8468, 0xcb72, 0x6860, 0x6463, 0x441b, 0x722e, 0x0, 0x1);
        gbc.writeMem(0x8468, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xcb72);
        EXPECT(gbc.pc(), 0x846a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8468), 0xcb);
        EXPECT(gbc.readMem(0x8469), 0x40);
        // CB 40 009A
        gbc.setState(0x7b91, 0xa31c, 0x7540, 0xf471, 0x1d6b, 0x7c98, 0x0, 0x0);
        gbc.writeMem(0x7b91, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa31c);
        EXPECT(gbc.pc(), 0x7b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 009B
        gbc.setState(0x7750, 0xb21, 0xa0a0, 0xc91f, 0xa82c, 0x8c58, 0x0, 0x1);
        gbc.writeMem(0x7750, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb21);
        EXPECT(gbc.pc(), 0x7752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 009C
        gbc.setState(0x67e8, 0xe1fb, 0x800, 0xd06e, 0x2fd0, 0x8d7b, 0x0, 0x0);
        gbc.writeMem(0x67e8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe1fb);
        EXPECT(gbc.pc(), 0x67ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 009D
        gbc.setState(0x2091, 0x9bf1, 0xb470, 0x92b8, 0x751d, 0x8b06, 0x1, 0x1);
        gbc.writeMem(0x2091, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9bf1);
        EXPECT(gbc.pc(), 0x2093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 009E
        gbc.setState(0xa809, 0xedd6, 0x4240, 0x925c, 0x3f18, 0x8df7, 0x0, 0x1);
        gbc.writeMem(0xa809, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xedd6);
        EXPECT(gbc.pc(), 0xa80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa809), 0xcb);
        EXPECT(gbc.readMem(0xa80a), 0x40);
        // CB 40 009F
        gbc.setState(0xab33, 0x631a, 0xdbb0, 0x9759, 0x56fb, 0x6709, 0x0, 0x0);
        gbc.writeMem(0xab33, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x631a);
        EXPECT(gbc.pc(), 0xab35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab33), 0xcb);
        EXPECT(gbc.readMem(0xab34), 0x40);
        // CB 40 00A0
        gbc.setState(0x60da, 0x6d2a, 0xbfa0, 0xc764, 0x31d, 0x63fb, 0x0, 0x1);
        gbc.writeMem(0x60da, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6d2a);
        EXPECT(gbc.pc(), 0x60dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00A1
        gbc.setState(0xc9e6, 0xf3b0, 0x8820, 0x78c3, 0xeba1, 0x34e3, 0x1, 0x0);
        gbc.writeMem(0xc9e6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf3b0);
        EXPECT(gbc.pc(), 0xc9e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e6), 0xcb);
        EXPECT(gbc.readMem(0xc9e7), 0x40);
        // CB 40 00A2
        gbc.setState(0xed9e, 0xa526, 0xcff0, 0x62e8, 0xdb71, 0xb9e5, 0x0, 0x0);
        gbc.writeMem(0xed9e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa526);
        EXPECT(gbc.pc(), 0xeda0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed9e), 0xcb);
        EXPECT(gbc.readMem(0xed9f), 0x40);
        // CB 40 00A3
        gbc.setState(0xb7c8, 0x29f2, 0xf610, 0x3985, 0xace9, 0x416b, 0x1, 0x1);
        gbc.writeMem(0xb7c8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x29f2);
        EXPECT(gbc.pc(), 0xb7ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c8), 0xcb);
        EXPECT(gbc.readMem(0xb7c9), 0x40);
        // CB 40 00A5
        gbc.setState(0x9872, 0xf8fc, 0x5ef0, 0xfe09, 0xd56f, 0xe409, 0x1, 0x1);
        gbc.writeMem(0x9872, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf8fc);
        EXPECT(gbc.pc(), 0x9874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9872), 0xcb);
        EXPECT(gbc.readMem(0x9873), 0x40);
        // CB 40 00A7
        gbc.setState(0xdcff, 0x4213, 0xecc0, 0xd62c, 0xd319, 0x4009, 0x1, 0x1);
        gbc.writeMem(0xdcff, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4213);
        EXPECT(gbc.pc(), 0xdd01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcff), 0xcb);
        EXPECT(gbc.readMem(0xdd00), 0x40);
        // CB 40 00A8
        gbc.setState(0x954b, 0x68b1, 0xa810, 0x2f39, 0xc0bf, 0xcbed, 0x1, 0x1);
        gbc.writeMem(0x954b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x68b1);
        EXPECT(gbc.pc(), 0x954d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x954b), 0xcb);
        EXPECT(gbc.readMem(0x954c), 0x40);
        // CB 40 00A9
        gbc.setState(0xd6f0, 0xc4a0, 0x2320, 0xdcd8, 0xc3f7, 0xb571, 0x0, 0x0);
        gbc.writeMem(0xd6f0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc4a0);
        EXPECT(gbc.pc(), 0xd6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f0), 0xcb);
        EXPECT(gbc.readMem(0xd6f1), 0x40);
        // CB 40 00AA
        gbc.setState(0x4933, 0x2a8f, 0xa1b0, 0xb556, 0x85a2, 0x7344, 0x1, 0x1);
        gbc.writeMem(0x4933, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2a8f);
        EXPECT(gbc.pc(), 0x4935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00AB
        gbc.setState(0xa1f8, 0x1053, 0x1cf0, 0x150b, 0xdb3, 0x4d03, 0x0, 0x0);
        gbc.writeMem(0xa1f8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1053);
        EXPECT(gbc.pc(), 0xa1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f8), 0xcb);
        EXPECT(gbc.readMem(0xa1f9), 0x40);
        // CB 40 00AC
        gbc.setState(0x6923, 0xdede, 0xa670, 0x4345, 0xd778, 0x9bde, 0x0, 0x1);
        gbc.writeMem(0x6923, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xdede);
        EXPECT(gbc.pc(), 0x6925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00AD
        gbc.setState(0xa140, 0x58db, 0x1290, 0x681a, 0x4e78, 0x8ffa, 0x1, 0x0);
        gbc.writeMem(0xa140, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x58db);
        EXPECT(gbc.pc(), 0xa142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa140), 0xcb);
        EXPECT(gbc.readMem(0xa141), 0x40);
        // CB 40 00AE
        gbc.setState(0xcc92, 0x2774, 0xee0, 0x363e, 0xeb87, 0x4947, 0x1, 0x0);
        gbc.writeMem(0xcc92, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2774);
        EXPECT(gbc.pc(), 0xcc94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc92), 0xcb);
        EXPECT(gbc.readMem(0xcc93), 0x40);
        // CB 40 00AF
        gbc.setState(0x9cf5, 0x86a6, 0xe300, 0x88e7, 0x3bb6, 0x506, 0x1, 0x1);
        gbc.writeMem(0x9cf5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x86a6);
        EXPECT(gbc.pc(), 0x9cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf5), 0xcb);
        EXPECT(gbc.readMem(0x9cf6), 0x40);
        // CB 40 00B0
        gbc.setState(0xd4ce, 0x7f18, 0xcac0, 0xae2f, 0x1946, 0x343c, 0x1, 0x0);
        gbc.writeMem(0xd4ce, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7f18);
        EXPECT(gbc.pc(), 0xd4d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ce), 0xcb);
        EXPECT(gbc.readMem(0xd4cf), 0x40);
        // CB 40 00B1
        gbc.setState(0xe74c, 0xe2c1, 0xf1d0, 0xcb8, 0xe536, 0x7a44, 0x0, 0x0);
        gbc.writeMem(0xe74c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe2c1);
        EXPECT(gbc.pc(), 0xe74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe74c), 0xcb);
        EXPECT(gbc.readMem(0xe74d), 0x40);
        // CB 40 00B2
        gbc.setState(0x5ea6, 0x140f, 0x9b70, 0x18cd, 0x3e7, 0x68a0, 0x1, 0x0);
        gbc.writeMem(0x5ea6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x140f);
        EXPECT(gbc.pc(), 0x5ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00B3
        gbc.setState(0xc00f, 0xe819, 0x1370, 0xf6ed, 0x65d0, 0xd10e, 0x1, 0x0);
        gbc.writeMem(0xc00f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe819);
        EXPECT(gbc.pc(), 0xc011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc00f), 0xcb);
        EXPECT(gbc.readMem(0xc010), 0x40);
        // CB 40 00B4
        gbc.setState(0x1201, 0xf8c7, 0x7870, 0xb744, 0xf87, 0xf65e, 0x1, 0x0);
        gbc.writeMem(0x1201, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf8c7);
        EXPECT(gbc.pc(), 0x1203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00B5
        gbc.setState(0xb706, 0x8ac2, 0x43f0, 0xf574, 0x16f9, 0xddb2, 0x1, 0x0);
        gbc.writeMem(0xb706, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8ac2);
        EXPECT(gbc.pc(), 0xb708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb706), 0xcb);
        EXPECT(gbc.readMem(0xb707), 0x40);
        // CB 40 00B6
        gbc.setState(0x7d04, 0xb42e, 0xe7d0, 0x1ff8, 0xcee2, 0x55ac, 0x0, 0x0);
        gbc.writeMem(0x7d04, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb42e);
        EXPECT(gbc.pc(), 0x7d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00B7
        gbc.setState(0x3ba5, 0x59fc, 0x6240, 0xfaa2, 0xbe3c, 0xc1cc, 0x1, 0x1);
        gbc.writeMem(0x3ba5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x59fc);
        EXPECT(gbc.pc(), 0x3ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00B8
        gbc.setState(0x344f, 0x3ea7, 0xdc30, 0xcdb8, 0x8d75, 0xd107, 0x1, 0x0);
        gbc.writeMem(0x344f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3ea7);
        EXPECT(gbc.pc(), 0x3451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00B9
        gbc.setState(0x9af3, 0x5702, 0x4d80, 0xf23e, 0x47ff, 0x69a4, 0x0, 0x0);
        gbc.writeMem(0x9af3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5702);
        EXPECT(gbc.pc(), 0x9af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af3), 0xcb);
        EXPECT(gbc.readMem(0x9af4), 0x40);
        // CB 40 00BA
        gbc.setState(0x8ebb, 0x50c4, 0x8b30, 0x3f2e, 0x6085, 0x4b52, 0x1, 0x0);
        gbc.writeMem(0x8ebb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x50c4);
        EXPECT(gbc.pc(), 0x8ebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ebb), 0xcb);
        EXPECT(gbc.readMem(0x8ebc), 0x40);
        // CB 40 00BB
        gbc.setState(0x3756, 0xe093, 0xc010, 0x15ad, 0xf93c, 0xb771, 0x1, 0x1);
        gbc.writeMem(0x3756, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe093);
        EXPECT(gbc.pc(), 0x3758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00BC
        gbc.setState(0xc346, 0x799, 0xbd80, 0xab5b, 0x45c6, 0x125a, 0x1, 0x1);
        gbc.writeMem(0xc346, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x799);
        EXPECT(gbc.pc(), 0xc348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc346), 0xcb);
        EXPECT(gbc.readMem(0xc347), 0x40);
        // CB 40 00BD
        gbc.setState(0x8c22, 0x9901, 0x6a10, 0x4d54, 0xfcac, 0xb246, 0x1, 0x0);
        gbc.writeMem(0x8c22, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9901);
        EXPECT(gbc.pc(), 0x8c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c22), 0xcb);
        EXPECT(gbc.readMem(0x8c23), 0x40);
        // CB 40 00BE
        gbc.setState(0xa919, 0x3c88, 0xee80, 0x238f, 0xa985, 0x737d, 0x1, 0x1);
        gbc.writeMem(0xa919, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3c88);
        EXPECT(gbc.pc(), 0xa91b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa919), 0xcb);
        EXPECT(gbc.readMem(0xa91a), 0x40);
        // CB 40 00BF
        gbc.setState(0x273f, 0xaa48, 0xc5e0, 0x42b5, 0xb71f, 0x9b82, 0x0, 0x0);
        gbc.writeMem(0x273f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xaa48);
        EXPECT(gbc.pc(), 0x2741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00C0
        gbc.setState(0x9f12, 0x3d47, 0x790, 0xd3c2, 0x6680, 0xc866, 0x1, 0x1);
        gbc.writeMem(0x9f12, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3d47);
        EXPECT(gbc.pc(), 0x9f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f12), 0xcb);
        EXPECT(gbc.readMem(0x9f13), 0x40);
        // CB 40 00C1
        gbc.setState(0x21a, 0x7e95, 0xbd30, 0xb96d, 0xcb9a, 0x9735, 0x1, 0x1);
        gbc.writeMem(0x21a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7e95);
        EXPECT(gbc.pc(), 0x21c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00C2
        gbc.setState(0xcd87, 0x6d4d, 0xfe80, 0x4703, 0x384a, 0x19fe, 0x0, 0x1);
        gbc.writeMem(0xcd87, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6d4d);
        EXPECT(gbc.pc(), 0xcd89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd87), 0xcb);
        EXPECT(gbc.readMem(0xcd88), 0x40);
        // CB 40 00C3
        gbc.setState(0x6449, 0xca8, 0x5660, 0xa35e, 0x870a, 0x2539, 0x1, 0x0);
        gbc.writeMem(0x6449, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xca8);
        EXPECT(gbc.pc(), 0x644b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00C4
        gbc.setState(0xe9a7, 0xcc13, 0x63b0, 0x5e93, 0x915, 0x5160, 0x1, 0x0);
        gbc.writeMem(0xe9a7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcc13);
        EXPECT(gbc.pc(), 0xe9a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9a7), 0xcb);
        EXPECT(gbc.readMem(0xe9a8), 0x40);
        // CB 40 00C5
        gbc.setState(0x2a8a, 0x421d, 0x29f0, 0xd4cd, 0x8530, 0xcf1f, 0x0, 0x1);
        gbc.writeMem(0x2a8a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x421d);
        EXPECT(gbc.pc(), 0x2a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00C6
        gbc.setState(0x31f6, 0x5408, 0xa590, 0xcc67, 0xf307, 0x36a6, 0x1, 0x0);
        gbc.writeMem(0x31f6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5408);
        EXPECT(gbc.pc(), 0x31f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00C7
        gbc.setState(0xd0fa, 0x212d, 0x6650, 0xaf80, 0x3855, 0xcd00, 0x1, 0x1);
        gbc.writeMem(0xd0fa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x212d);
        EXPECT(gbc.pc(), 0xd0fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0fa), 0xcb);
        EXPECT(gbc.readMem(0xd0fb), 0x40);
        // CB 40 00C8
        gbc.setState(0xef19, 0x396b, 0x8850, 0xf68, 0xbe49, 0xe58e, 0x1, 0x1);
        gbc.writeMem(0xef19, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x396b);
        EXPECT(gbc.pc(), 0xef1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef19), 0xcb);
        EXPECT(gbc.readMem(0xef1a), 0x40);
        // CB 40 00C9
        gbc.setState(0x4de6, 0x9802, 0xcc50, 0x308b, 0xf0c, 0x9279, 0x1, 0x0);
        gbc.writeMem(0x4de6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9802);
        EXPECT(gbc.pc(), 0x4de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00CB
        gbc.setState(0xd598, 0x459c, 0xcea0, 0x9306, 0x53b6, 0x23fd, 0x1, 0x0);
        gbc.writeMem(0xd598, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x459c);
        EXPECT(gbc.pc(), 0xd59a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd598), 0xcb);
        EXPECT(gbc.readMem(0xd599), 0x40);
        // CB 40 00CC
        gbc.setState(0x11e7, 0x849c, 0x2900, 0x5925, 0xd337, 0x49b, 0x0, 0x1);
        gbc.writeMem(0x11e7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x849c);
        EXPECT(gbc.pc(), 0x11e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00CD
        gbc.setState(0x26d2, 0xff8f, 0x3350, 0x8e5f, 0x8760, 0xb477, 0x0, 0x0);
        gbc.writeMem(0x26d2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xff8f);
        EXPECT(gbc.pc(), 0x26d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00CE
        gbc.setState(0x156, 0x3899, 0x4c30, 0x77c1, 0xa3f4, 0xa135, 0x1, 0x1);
        gbc.writeMem(0x156, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3899);
        EXPECT(gbc.pc(), 0x158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00CF
        gbc.setState(0x93fb, 0x7a65, 0x4bd0, 0xb551, 0x1fa1, 0x3a8a, 0x0, 0x0);
        gbc.writeMem(0x93fb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7a65);
        EXPECT(gbc.pc(), 0x93fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93fb), 0xcb);
        EXPECT(gbc.readMem(0x93fc), 0x40);
        // CB 40 00D0
        gbc.setState(0x8bc7, 0x68b, 0x19e0, 0x9d6c, 0xcf56, 0x2af5, 0x0, 0x1);
        gbc.writeMem(0x8bc7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x68b);
        EXPECT(gbc.pc(), 0x8bc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc7), 0xcb);
        EXPECT(gbc.readMem(0x8bc8), 0x40);
        // CB 40 00D1
        gbc.setState(0x437b, 0xe282, 0xe330, 0x5db7, 0x5b2, 0xa94, 0x1, 0x1);
        gbc.writeMem(0x437b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe282);
        EXPECT(gbc.pc(), 0x437d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00D2
        gbc.setState(0x2ee7, 0x4e7, 0x2e0, 0x6bfc, 0xfaff, 0x74af, 0x0, 0x1);
        gbc.writeMem(0x2ee7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4e7);
        EXPECT(gbc.pc(), 0x2ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00D3
        gbc.setState(0xd939, 0xa724, 0xa6d0, 0xbe16, 0xcc4b, 0xd72e, 0x1, 0x1);
        gbc.writeMem(0xd939, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa724);
        EXPECT(gbc.pc(), 0xd93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd939), 0xcb);
        EXPECT(gbc.readMem(0xd93a), 0x40);
        // CB 40 00D4
        gbc.setState(0x8bd7, 0x7b24, 0x78c0, 0x45f0, 0x5bc1, 0xf53c, 0x1, 0x1);
        gbc.writeMem(0x8bd7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7b24);
        EXPECT(gbc.pc(), 0x8bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd7), 0xcb);
        EXPECT(gbc.readMem(0x8bd8), 0x40);
        // CB 40 00D6
        gbc.setState(0x8338, 0x324d, 0xb960, 0x37, 0xf2e5, 0x9b47, 0x0, 0x0);
        gbc.writeMem(0x8338, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x324d);
        EXPECT(gbc.pc(), 0x833a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8338), 0xcb);
        EXPECT(gbc.readMem(0x8339), 0x40);
        // CB 40 00D7
        gbc.setState(0xaa56, 0x6376, 0x3800, 0xfcc5, 0xb9bd, 0xf0cd, 0x0, 0x0);
        gbc.writeMem(0xaa56, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6376);
        EXPECT(gbc.pc(), 0xaa58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa56), 0xcb);
        EXPECT(gbc.readMem(0xaa57), 0x40);
        // CB 40 00D8
        gbc.setState(0xe01a, 0x7eef, 0xaa80, 0x22d3, 0xe011, 0x3e50, 0x0, 0x1);
        gbc.writeMem(0xe01a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7eef);
        EXPECT(gbc.pc(), 0xe01c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01a), 0xcb);
        EXPECT(gbc.readMem(0xe01b), 0x40);
        // CB 40 00D9
        gbc.setState(0x1cdf, 0x5dae, 0x3220, 0x24af, 0x6f04, 0x6ce6, 0x0, 0x1);
        gbc.writeMem(0x1cdf, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5dae);
        EXPECT(gbc.pc(), 0x1ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00DA
        gbc.setState(0x255e, 0x912c, 0x2d00, 0x9d17, 0xd60b, 0x2711, 0x1, 0x1);
        gbc.writeMem(0x255e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x912c);
        EXPECT(gbc.pc(), 0x2560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00DB
        gbc.setState(0xed93, 0x2f30, 0x49e0, 0xef, 0x115a, 0x2f51, 0x0, 0x1);
        gbc.writeMem(0xed93, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2f30);
        EXPECT(gbc.pc(), 0xed95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed93), 0xcb);
        EXPECT(gbc.readMem(0xed94), 0x40);
        // CB 40 00DC
        gbc.setState(0x4693, 0x256b, 0x1300, 0x4ea8, 0xc849, 0x3118, 0x1, 0x1);
        gbc.writeMem(0x4693, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x256b);
        EXPECT(gbc.pc(), 0x4695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00DD
        gbc.setState(0xf03, 0xfb00, 0xd320, 0x21b9, 0xfb5a, 0xba2, 0x0, 0x0);
        gbc.writeMem(0xf03, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfb00);
        EXPECT(gbc.pc(), 0xf05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00DE
        gbc.setState(0x3a7, 0x5b2c, 0x8b90, 0x8d32, 0x8651, 0xb118, 0x1, 0x0);
        gbc.writeMem(0x3a7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5b2c);
        EXPECT(gbc.pc(), 0x3a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00DF
        gbc.setState(0x2ea8, 0xda92, 0x1f00, 0xfa04, 0x4be9, 0xd207, 0x0, 0x1);
        gbc.writeMem(0x2ea8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xda92);
        EXPECT(gbc.pc(), 0x2eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00E0
        gbc.setState(0x59f0, 0x606b, 0x10c0, 0x1e1b, 0x9fac, 0x6ecd, 0x1, 0x0);
        gbc.writeMem(0x59f0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x606b);
        EXPECT(gbc.pc(), 0x59f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00E1
        gbc.setState(0x6b97, 0xb054, 0xdb70, 0x52f2, 0x4ebd, 0xf40, 0x0, 0x0);
        gbc.writeMem(0x6b97, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb054);
        EXPECT(gbc.pc(), 0x6b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00E2
        gbc.setState(0xde80, 0xda5a, 0xf830, 0x71d5, 0x3183, 0x524f, 0x0, 0x1);
        gbc.writeMem(0xde80, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xda5a);
        EXPECT(gbc.pc(), 0xde82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde80), 0xcb);
        EXPECT(gbc.readMem(0xde81), 0x40);
        // CB 40 00E3
        gbc.setState(0xb3ea, 0xed81, 0xaae0, 0xb613, 0xc8b1, 0x9cfc, 0x0, 0x0);
        gbc.writeMem(0xb3ea, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xed81);
        EXPECT(gbc.pc(), 0xb3ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ea), 0xcb);
        EXPECT(gbc.readMem(0xb3eb), 0x40);
        // CB 40 00E4
        gbc.setState(0xc67, 0x9661, 0xb6c0, 0xafa9, 0x99f, 0x2f30, 0x1, 0x1);
        gbc.writeMem(0xc67, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9661);
        EXPECT(gbc.pc(), 0xc69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00E6
        gbc.setState(0x3a1c, 0xd891, 0x7710, 0x827d, 0x4b8d, 0xc737, 0x0, 0x0);
        gbc.writeMem(0x3a1c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd891);
        EXPECT(gbc.pc(), 0x3a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00E7
        gbc.setState(0xb639, 0x297b, 0x1b70, 0x932a, 0xb470, 0x6758, 0x0, 0x1);
        gbc.writeMem(0xb639, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x297b);
        EXPECT(gbc.pc(), 0xb63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb639), 0xcb);
        EXPECT(gbc.readMem(0xb63a), 0x40);
        // CB 40 00E8
        gbc.setState(0x3e68, 0x74a9, 0xee30, 0x51ff, 0x3136, 0xa816, 0x1, 0x0);
        gbc.writeMem(0x3e68, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x74a9);
        EXPECT(gbc.pc(), 0x3e6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00E9
        gbc.setState(0xa1cc, 0x2d02, 0x3b0, 0x7f2b, 0x4dc, 0xd7e0, 0x1, 0x1);
        gbc.writeMem(0xa1cc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2d02);
        EXPECT(gbc.pc(), 0xa1ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1cc), 0xcb);
        EXPECT(gbc.readMem(0xa1cd), 0x40);
        // CB 40 00EA
        gbc.setState(0x3a33, 0xb774, 0xe5f0, 0xa877, 0x86b1, 0x3068, 0x0, 0x1);
        gbc.writeMem(0x3a33, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb774);
        EXPECT(gbc.pc(), 0x3a35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00EB
        gbc.setState(0x95cb, 0x9c4c, 0xf0d0, 0xbc57, 0x600d, 0x882, 0x1, 0x1);
        gbc.writeMem(0x95cb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9c4c);
        EXPECT(gbc.pc(), 0x95cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95cb), 0xcb);
        EXPECT(gbc.readMem(0x95cc), 0x40);
        // CB 40 00EC
        gbc.setState(0xe61, 0xed51, 0x5210, 0x43a0, 0xa3aa, 0x38c3, 0x0, 0x0);
        gbc.writeMem(0xe61, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xed51);
        EXPECT(gbc.pc(), 0xe63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00ED
        gbc.setState(0x9a2e, 0xbb82, 0x480, 0xc08f, 0x9d21, 0xa582, 0x0, 0x1);
        gbc.writeMem(0x9a2e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbb82);
        EXPECT(gbc.pc(), 0x9a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2e), 0xcb);
        EXPECT(gbc.readMem(0x9a2f), 0x40);
        // CB 40 00EE
        gbc.setState(0xd074, 0xed75, 0x4920, 0xba8e, 0xa6f6, 0x42d2, 0x0, 0x1);
        gbc.writeMem(0xd074, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xed75);
        EXPECT(gbc.pc(), 0xd076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd074), 0xcb);
        EXPECT(gbc.readMem(0xd075), 0x40);
        // CB 40 00EF
        gbc.setState(0xb546, 0xeb31, 0x9ab0, 0x217b, 0x1521, 0x2089, 0x1, 0x0);
        gbc.writeMem(0xb546, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xeb31);
        EXPECT(gbc.pc(), 0xb548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb546), 0xcb);
        EXPECT(gbc.readMem(0xb547), 0x40);
        // CB 40 00F0
        gbc.setState(0xbe17, 0x1559, 0x9460, 0xc487, 0xdae5, 0x5f8e, 0x1, 0x0);
        gbc.writeMem(0xbe17, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1559);
        EXPECT(gbc.pc(), 0xbe19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe17), 0xcb);
        EXPECT(gbc.readMem(0xbe18), 0x40);
        // CB 40 00F1
        gbc.setState(0x7a05, 0x163d, 0x7500, 0x58a3, 0xdd64, 0x88c9, 0x1, 0x1);
        gbc.writeMem(0x7a05, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x163d);
        EXPECT(gbc.pc(), 0x7a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00F2
        gbc.setState(0x919c, 0xc571, 0x13d0, 0xc491, 0x32ce, 0x9811, 0x0, 0x0);
        gbc.writeMem(0x919c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc571);
        EXPECT(gbc.pc(), 0x919e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x919c), 0xcb);
        EXPECT(gbc.readMem(0x919d), 0x40);
        // CB 40 00F3
        gbc.setState(0x47a1, 0xbd47, 0xb700, 0x15c2, 0x55fc, 0x6810, 0x1, 0x0);
        gbc.writeMem(0x47a1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbd47);
        EXPECT(gbc.pc(), 0x47a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00F4
        gbc.setState(0x4911, 0xbc6f, 0xe2d0, 0xe9be, 0x5b0b, 0xd8b0, 0x1, 0x0);
        gbc.writeMem(0x4911, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xbc6f);
        EXPECT(gbc.pc(), 0x4913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00F5
        gbc.setState(0x4b33, 0xfa9c, 0x5ed0, 0x235, 0x65f6, 0x66ba, 0x0, 0x0);
        gbc.writeMem(0x4b33, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfa9c);
        EXPECT(gbc.pc(), 0x4b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00F6
        gbc.setState(0xa0f2, 0xfbc8, 0x61c0, 0xe542, 0xa954, 0xe6cb, 0x1, 0x0);
        gbc.writeMem(0xa0f2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfbc8);
        EXPECT(gbc.pc(), 0xa0f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f2), 0xcb);
        EXPECT(gbc.readMem(0xa0f3), 0x40);
        // CB 40 00F7
        gbc.setState(0x695, 0xd697, 0x84a0, 0x8a1b, 0xfbdc, 0xbd1d, 0x0, 0x0);
        gbc.writeMem(0x695, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd697);
        EXPECT(gbc.pc(), 0x697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00F9
        gbc.setState(0x5d0a, 0x8938, 0x7330, 0xd252, 0x9012, 0x41d0, 0x0, 0x0);
        gbc.writeMem(0x5d0a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8938);
        EXPECT(gbc.pc(), 0x5d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00FA
        gbc.setState(0x192f, 0xc90c, 0x8830, 0x8329, 0xcd08, 0x854b, 0x0, 0x1);
        gbc.writeMem(0x192f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc90c);
        EXPECT(gbc.pc(), 0x1931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 00FB
        gbc.setState(0xe9e7, 0x1a4b, 0xbbb0, 0xfa7a, 0x980e, 0x6fb5, 0x0, 0x1);
        gbc.writeMem(0xe9e7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1a4b);
        EXPECT(gbc.pc(), 0xe9e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e7), 0xcb);
        EXPECT(gbc.readMem(0xe9e8), 0x40);
        // CB 40 00FC
        gbc.setState(0x2a03, 0x4077, 0x6ac0, 0x19df, 0x5238, 0x24e5, 0x1, 0x1);
        gbc.writeMem(0x2a03, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4077);
        EXPECT(gbc.pc(), 0x2a05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 00FD
        gbc.setState(0xd815, 0xc6fc, 0xe0c0, 0xe189, 0x4036, 0xb685, 0x1, 0x1);
        gbc.writeMem(0xd815, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc6fc);
        EXPECT(gbc.pc(), 0xd817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd815), 0xcb);
        EXPECT(gbc.readMem(0xd816), 0x40);
        // CB 40 00FF
        gbc.setState(0x3c23, 0x6cc3, 0xfcf0, 0x119e, 0x71d8, 0x41d8, 0x0, 0x0);
        gbc.writeMem(0x3c23, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6cc3);
        EXPECT(gbc.pc(), 0x3c25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0100
        gbc.setState(0x2fc7, 0x4e8, 0x980, 0xe8d9, 0x7211, 0xcd42, 0x0, 0x0);
        gbc.writeMem(0x2fc7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4e8);
        EXPECT(gbc.pc(), 0x2fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0101
        gbc.setState(0xd010, 0xc41c, 0x2e70, 0x1740, 0x38f1, 0x2cad, 0x0, 0x0);
        gbc.writeMem(0xd010, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc41c);
        EXPECT(gbc.pc(), 0xd012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd010), 0xcb);
        EXPECT(gbc.readMem(0xd011), 0x40);
        // CB 40 0102
        gbc.setState(0xcabc, 0xf04e, 0x280, 0xcd70, 0xb0ed, 0x5e11, 0x1, 0x1);
        gbc.writeMem(0xcabc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf04e);
        EXPECT(gbc.pc(), 0xcabe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcabc), 0xcb);
        EXPECT(gbc.readMem(0xcabd), 0x40);
        // CB 40 0103
        gbc.setState(0xc141, 0x43e6, 0xc7a0, 0xabcd, 0x21c4, 0xce47, 0x0, 0x0);
        gbc.writeMem(0xc141, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x43e6);
        EXPECT(gbc.pc(), 0xc143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc141), 0xcb);
        EXPECT(gbc.readMem(0xc142), 0x40);
        // CB 40 0104
        gbc.setState(0x5a1e, 0xdd4c, 0x7f30, 0xd405, 0x601a, 0x4b05, 0x0, 0x0);
        gbc.writeMem(0x5a1e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xdd4c);
        EXPECT(gbc.pc(), 0x5a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0105
        gbc.setState(0xbad1, 0x7d5e, 0x9ae0, 0x8a61, 0x8824, 0xd71b, 0x1, 0x1);
        gbc.writeMem(0xbad1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7d5e);
        EXPECT(gbc.pc(), 0xbad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad1), 0xcb);
        EXPECT(gbc.readMem(0xbad2), 0x40);
        // CB 40 0106
        gbc.setState(0xce59, 0x969b, 0xe5a0, 0x6d83, 0x9e5, 0x564a, 0x0, 0x1);
        gbc.writeMem(0xce59, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x969b);
        EXPECT(gbc.pc(), 0xce5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce59), 0xcb);
        EXPECT(gbc.readMem(0xce5a), 0x40);
        // CB 40 0107
        gbc.setState(0xaf91, 0x88d4, 0xcdb0, 0x7ca8, 0x9e9a, 0x4fe6, 0x0, 0x0);
        gbc.writeMem(0xaf91, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x88d4);
        EXPECT(gbc.pc(), 0xaf93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf91), 0xcb);
        EXPECT(gbc.readMem(0xaf92), 0x40);
        // CB 40 0108
        gbc.setState(0xef62, 0x512d, 0xddf0, 0xd68d, 0xbed1, 0xea62, 0x1, 0x0);
        gbc.writeMem(0xef62, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x512d);
        EXPECT(gbc.pc(), 0xef64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef62), 0xcb);
        EXPECT(gbc.readMem(0xef63), 0x40);
        // CB 40 0109
        gbc.setState(0x2897, 0xd975, 0x18c0, 0x381, 0x94ee, 0x3436, 0x1, 0x1);
        gbc.writeMem(0x2897, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd975);
        EXPECT(gbc.pc(), 0x2899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 010A
        gbc.setState(0x65f1, 0x6098, 0xa260, 0x91c, 0xbce7, 0x1c1f, 0x0, 0x1);
        gbc.writeMem(0x65f1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6098);
        EXPECT(gbc.pc(), 0x65f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 010B
        gbc.setState(0x2694, 0x5046, 0xf70, 0x5237, 0x8a46, 0x8043, 0x1, 0x1);
        gbc.writeMem(0x2694, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5046);
        EXPECT(gbc.pc(), 0x2696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 010C
        gbc.setState(0xc139, 0x7a8e, 0x97a0, 0xb50e, 0xd740, 0xd2bf, 0x1, 0x1);
        gbc.writeMem(0xc139, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7a8e);
        EXPECT(gbc.pc(), 0xc13b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc139), 0xcb);
        EXPECT(gbc.readMem(0xc13a), 0x40);
        // CB 40 010D
        gbc.setState(0xee3e, 0xd447, 0x59e0, 0xa763, 0xd2ce, 0x63fd, 0x0, 0x0);
        gbc.writeMem(0xee3e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd447);
        EXPECT(gbc.pc(), 0xee40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee3e), 0xcb);
        EXPECT(gbc.readMem(0xee3f), 0x40);
        // CB 40 010E
        gbc.setState(0x907f, 0x1cf7, 0x4d70, 0xd09e, 0x965b, 0xb4a3, 0x1, 0x1);
        gbc.writeMem(0x907f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1cf7);
        EXPECT(gbc.pc(), 0x9081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x907f), 0xcb);
        EXPECT(gbc.readMem(0x9080), 0x40);
        // CB 40 010F
        gbc.setState(0xec0b, 0x7836, 0x2af0, 0x2d42, 0x8a76, 0xb18e, 0x0, 0x0);
        gbc.writeMem(0xec0b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7836);
        EXPECT(gbc.pc(), 0xec0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec0b), 0xcb);
        EXPECT(gbc.readMem(0xec0c), 0x40);
        // CB 40 0110
        gbc.setState(0x1080, 0xe6d3, 0x7800, 0x875c, 0x83ea, 0xe27, 0x0, 0x0);
        gbc.writeMem(0x1080, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe6d3);
        EXPECT(gbc.pc(), 0x1082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0111
        gbc.setState(0x4750, 0xd915, 0xe660, 0xf824, 0x10f6, 0xaed9, 0x1, 0x1);
        gbc.writeMem(0x4750, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd915);
        EXPECT(gbc.pc(), 0x4752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0112
        gbc.setState(0xd3cf, 0x322a, 0x4350, 0xa3d3, 0xfcaf, 0xb8c7, 0x0, 0x0);
        gbc.writeMem(0xd3cf, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x322a);
        EXPECT(gbc.pc(), 0xd3d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3cf), 0xcb);
        EXPECT(gbc.readMem(0xd3d0), 0x40);
        // CB 40 0113
        gbc.setState(0xa96b, 0xa632, 0x46f0, 0xa280, 0x52eb, 0x574b, 0x1, 0x0);
        gbc.writeMem(0xa96b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa632);
        EXPECT(gbc.pc(), 0xa96d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96b), 0xcb);
        EXPECT(gbc.readMem(0xa96c), 0x40);
        // CB 40 0114
        gbc.setState(0x9c43, 0x9594, 0xc140, 0x7c22, 0x1951, 0x827c, 0x0, 0x0);
        gbc.writeMem(0x9c43, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9594);
        EXPECT(gbc.pc(), 0x9c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c43), 0xcb);
        EXPECT(gbc.readMem(0x9c44), 0x40);
        // CB 40 0115
        gbc.setState(0xaa74, 0xf652, 0xd20, 0xc3aa, 0xd0e5, 0x7343, 0x0, 0x1);
        gbc.writeMem(0xaa74, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf652);
        EXPECT(gbc.pc(), 0xaa76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa74), 0xcb);
        EXPECT(gbc.readMem(0xaa75), 0x40);
        // CB 40 0116
        gbc.setState(0x1646, 0x843f, 0x2350, 0x6284, 0xb2ab, 0x41f1, 0x0, 0x0);
        gbc.writeMem(0x1646, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x843f);
        EXPECT(gbc.pc(), 0x1648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0117
        gbc.setState(0x6b65, 0x573d, 0x34b0, 0xd7a0, 0xaf14, 0x1b67, 0x0, 0x1);
        gbc.writeMem(0x6b65, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x573d);
        EXPECT(gbc.pc(), 0x6b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0118
        gbc.setState(0xdcd2, 0x8c70, 0xcc20, 0x30ff, 0xa972, 0xe4b1, 0x0, 0x1);
        gbc.writeMem(0xdcd2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8c70);
        EXPECT(gbc.pc(), 0xdcd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcd2), 0xcb);
        EXPECT(gbc.readMem(0xdcd3), 0x40);
        // CB 40 0119
        gbc.setState(0x90fa, 0x8e04, 0xd590, 0xea83, 0x4da1, 0x82c5, 0x1, 0x0);
        gbc.writeMem(0x90fa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8e04);
        EXPECT(gbc.pc(), 0x90fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90fa), 0xcb);
        EXPECT(gbc.readMem(0x90fb), 0x40);
        // CB 40 011B
        gbc.setState(0x8a3a, 0x38fb, 0x4280, 0x97d9, 0xee79, 0xee7b, 0x0, 0x1);
        gbc.writeMem(0x8a3a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x38fb);
        EXPECT(gbc.pc(), 0x8a3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a3a), 0xcb);
        EXPECT(gbc.readMem(0x8a3b), 0x40);
        // CB 40 011C
        gbc.setState(0x646c, 0x48af, 0xe390, 0xbf20, 0x1159, 0x35dd, 0x1, 0x0);
        gbc.writeMem(0x646c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x48af);
        EXPECT(gbc.pc(), 0x646e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 011D
        gbc.setState(0xd5d7, 0xfe14, 0xaab0, 0x5af4, 0xd822, 0x5a23, 0x1, 0x1);
        gbc.writeMem(0xd5d7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xfe14);
        EXPECT(gbc.pc(), 0xd5d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d7), 0xcb);
        EXPECT(gbc.readMem(0xd5d8), 0x40);
        // CB 40 011E
        gbc.setState(0x16e5, 0xb3c3, 0x48e0, 0xd596, 0x82c, 0xe03b, 0x0, 0x1);
        gbc.writeMem(0x16e5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb3c3);
        EXPECT(gbc.pc(), 0x16e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 011F
        gbc.setState(0x6cb0, 0x73f, 0x4d80, 0x563c, 0x4624, 0x8112, 0x0, 0x0);
        gbc.writeMem(0x6cb0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x73f);
        EXPECT(gbc.pc(), 0x6cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0120
        gbc.setState(0xe2d3, 0xb851, 0x2bd0, 0x2f1e, 0xbb8b, 0x6602, 0x0, 0x1);
        gbc.writeMem(0xe2d3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb851);
        EXPECT(gbc.pc(), 0xe2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d3), 0xcb);
        EXPECT(gbc.readMem(0xe2d4), 0x40);
        // CB 40 0121
        gbc.setState(0x2810, 0xa734, 0x6130, 0xab60, 0xa570, 0x8e25, 0x0, 0x1);
        gbc.writeMem(0x2810, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa734);
        EXPECT(gbc.pc(), 0x2812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0122
        gbc.setState(0x90d6, 0x503f, 0xbbf0, 0x3fb3, 0x2f30, 0x38a4, 0x0, 0x1);
        gbc.writeMem(0x90d6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x503f);
        EXPECT(gbc.pc(), 0x90d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d6), 0xcb);
        EXPECT(gbc.readMem(0x90d7), 0x40);
        // CB 40 0123
        gbc.setState(0x5d96, 0x816d, 0x78c0, 0x2457, 0x6cc1, 0xeea5, 0x1, 0x0);
        gbc.writeMem(0x5d96, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x816d);
        EXPECT(gbc.pc(), 0x5d98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0124
        gbc.setState(0x57df, 0x44a1, 0x1360, 0xef15, 0x267d, 0xfb84, 0x0, 0x0);
        gbc.writeMem(0x57df, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x44a1);
        EXPECT(gbc.pc(), 0x57e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0125
        gbc.setState(0x9e1, 0x7501, 0x2e30, 0xa5bb, 0x7fe3, 0xb9ff, 0x0, 0x0);
        gbc.writeMem(0x9e1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7501);
        EXPECT(gbc.pc(), 0x9e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0126
        gbc.setState(0x9946, 0xf46f, 0x6680, 0x1dc4, 0x2278, 0xbada, 0x0, 0x1);
        gbc.writeMem(0x9946, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf46f);
        EXPECT(gbc.pc(), 0x9948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9946), 0xcb);
        EXPECT(gbc.readMem(0x9947), 0x40);
        // CB 40 0127
        gbc.setState(0x3b8a, 0x8ee, 0xb9a0, 0x8098, 0xea91, 0x398c, 0x1, 0x1);
        gbc.writeMem(0x3b8a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8ee);
        EXPECT(gbc.pc(), 0x3b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0128
        gbc.setState(0x13bb, 0x4868, 0x8f0, 0x4d6f, 0x21e8, 0x9c83, 0x0, 0x0);
        gbc.writeMem(0x13bb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4868);
        EXPECT(gbc.pc(), 0x13bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0129
        gbc.setState(0x6718, 0xcae8, 0x9790, 0xe738, 0x5010, 0xffeb, 0x0, 0x1);
        gbc.writeMem(0x6718, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xcae8);
        EXPECT(gbc.pc(), 0x671a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 012A
        gbc.setState(0x310, 0x5fe1, 0x5090, 0xf237, 0x93a3, 0x54d8, 0x0, 0x1);
        gbc.writeMem(0x310, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5fe1);
        EXPECT(gbc.pc(), 0x312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 012B
        gbc.setState(0x419d, 0xa88e, 0x6310, 0x4b1c, 0xa751, 0xb468, 0x0, 0x1);
        gbc.writeMem(0x419d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa88e);
        EXPECT(gbc.pc(), 0x419f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 012C
        gbc.setState(0xbc5d, 0xfa4, 0x1ba0, 0x5bde, 0x56ce, 0x7816, 0x0, 0x1);
        gbc.writeMem(0xbc5d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfa4);
        EXPECT(gbc.pc(), 0xbc5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc5d), 0xcb);
        EXPECT(gbc.readMem(0xbc5e), 0x40);
        // CB 40 012D
        gbc.setState(0x6ca8, 0xbe32, 0x8570, 0x40c1, 0xfa33, 0xc32, 0x1, 0x0);
        gbc.writeMem(0x6ca8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbe32);
        EXPECT(gbc.pc(), 0x6caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 012E
        gbc.setState(0x65fd, 0xb37a, 0xf6c0, 0xd2a1, 0xf7f1, 0x9e17, 0x1, 0x1);
        gbc.writeMem(0x65fd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb37a);
        EXPECT(gbc.pc(), 0x65ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 012F
        gbc.setState(0x41cf, 0x97a6, 0x6720, 0x2d77, 0x6f59, 0x81ec, 0x1, 0x0);
        gbc.writeMem(0x41cf, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x97a6);
        EXPECT(gbc.pc(), 0x41d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0130
        gbc.setState(0x32b1, 0xcefd, 0xe630, 0x6ad0, 0x2b37, 0x47ed, 0x0, 0x1);
        gbc.writeMem(0x32b1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcefd);
        EXPECT(gbc.pc(), 0x32b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0131
        gbc.setState(0xc270, 0x37d7, 0xf3b0, 0x4b67, 0x7272, 0x5111, 0x0, 0x0);
        gbc.writeMem(0xc270, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x37d7);
        EXPECT(gbc.pc(), 0xc272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc270), 0xcb);
        EXPECT(gbc.readMem(0xc271), 0x40);
        // CB 40 0132
        gbc.setState(0x8254, 0xd72a, 0x62f0, 0x3fe9, 0xff8f, 0x9802, 0x1, 0x0);
        gbc.writeMem(0x8254, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd72a);
        EXPECT(gbc.pc(), 0x8256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8254), 0xcb);
        EXPECT(gbc.readMem(0x8255), 0x40);
        // CB 40 0133
        gbc.setState(0x37cd, 0xb3eb, 0xbe10, 0xc94e, 0xf5a8, 0xcdac, 0x1, 0x1);
        gbc.writeMem(0x37cd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb3eb);
        EXPECT(gbc.pc(), 0x37cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0134
        gbc.setState(0x3530, 0x53ca, 0x32a0, 0xecdc, 0x60be, 0xb68b, 0x0, 0x1);
        gbc.writeMem(0x3530, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x53ca);
        EXPECT(gbc.pc(), 0x3532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0135
        gbc.setState(0x2f6, 0x6c65, 0x2520, 0xf50, 0xa9e5, 0x5bfa, 0x0, 0x1);
        gbc.writeMem(0x2f6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6c65);
        EXPECT(gbc.pc(), 0x2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0137
        gbc.setState(0x1d99, 0x841e, 0x78a0, 0x8c8f, 0x8e36, 0xaf8a, 0x0, 0x1);
        gbc.writeMem(0x1d99, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x841e);
        EXPECT(gbc.pc(), 0x1d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0138
        gbc.setState(0xaf80, 0xcbc, 0xddf0, 0x2d02, 0x615c, 0xaf97, 0x1, 0x0);
        gbc.writeMem(0xaf80, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xcbc);
        EXPECT(gbc.pc(), 0xaf82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf80), 0xcb);
        EXPECT(gbc.readMem(0xaf81), 0x40);
        // CB 40 0139
        gbc.setState(0xe7dd, 0x6669, 0x2760, 0x7989, 0x39ad, 0x1be8, 0x1, 0x0);
        gbc.writeMem(0xe7dd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6669);
        EXPECT(gbc.pc(), 0xe7df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7dd), 0xcb);
        EXPECT(gbc.readMem(0xe7de), 0x40);
        // CB 40 013A
        gbc.setState(0xa3d, 0x9c58, 0xf8e0, 0x568a, 0x3685, 0xae6a, 0x0, 0x1);
        gbc.writeMem(0xa3d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9c58);
        EXPECT(gbc.pc(), 0xa3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 013B
        gbc.setState(0x80d4, 0x1c3c, 0x9090, 0xc989, 0xb3ef, 0xc526, 0x0, 0x0);
        gbc.writeMem(0x80d4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1c3c);
        EXPECT(gbc.pc(), 0x80d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d4), 0xcb);
        EXPECT(gbc.readMem(0x80d5), 0x40);
        // CB 40 013D
        gbc.setState(0xbaa2, 0xcc8b, 0xd930, 0xcfa0, 0xe9e4, 0x2bb2, 0x1, 0x0);
        gbc.writeMem(0xbaa2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xcc8b);
        EXPECT(gbc.pc(), 0xbaa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa2), 0xcb);
        EXPECT(gbc.readMem(0xbaa3), 0x40);
        // CB 40 013F
        gbc.setState(0xc7e9, 0xa4ef, 0xa200, 0x1431, 0x8213, 0xfa3b, 0x0, 0x1);
        gbc.writeMem(0xc7e9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa4ef);
        EXPECT(gbc.pc(), 0xc7eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e9), 0xcb);
        EXPECT(gbc.readMem(0xc7ea), 0x40);
        // CB 40 0140
        gbc.setState(0xbac5, 0x432d, 0xe580, 0x16c2, 0x4bab, 0xbb6b, 0x0, 0x0);
        gbc.writeMem(0xbac5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x432d);
        EXPECT(gbc.pc(), 0xbac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac5), 0xcb);
        EXPECT(gbc.readMem(0xbac6), 0x40);
        // CB 40 0141
        gbc.setState(0x1214, 0xf465, 0xa170, 0xc0, 0xfdda, 0x9e5a, 0x0, 0x0);
        gbc.writeMem(0x1214, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf465);
        EXPECT(gbc.pc(), 0x1216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0142
        gbc.setState(0x5b6, 0x3bd6, 0xbfc0, 0xba46, 0xe43, 0x16de, 0x0, 0x0);
        gbc.writeMem(0x5b6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3bd6);
        EXPECT(gbc.pc(), 0x5b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0143
        gbc.setState(0x260a, 0x239a, 0xaec0, 0x5d4e, 0xcf32, 0x4f02, 0x0, 0x0);
        gbc.writeMem(0x260a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x239a);
        EXPECT(gbc.pc(), 0x260c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0144
        gbc.setState(0x60bf, 0xbb11, 0xbfd0, 0xf0b5, 0xa533, 0x88b, 0x0, 0x0);
        gbc.writeMem(0x60bf, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbb11);
        EXPECT(gbc.pc(), 0x60c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0145
        gbc.setState(0x2fe9, 0xf22e, 0x40, 0x424c, 0x7d28, 0x36ce, 0x0, 0x0);
        gbc.writeMem(0x2fe9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf22e);
        EXPECT(gbc.pc(), 0x2feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0146
        gbc.setState(0xb448, 0x3852, 0xda90, 0x4b56, 0x1611, 0x3b4d, 0x0, 0x0);
        gbc.writeMem(0xb448, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3852);
        EXPECT(gbc.pc(), 0xb44a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb448), 0xcb);
        EXPECT(gbc.readMem(0xb449), 0x40);
        // CB 40 0148
        gbc.setState(0x5898, 0x756c, 0xdb30, 0xecc, 0x4c9d, 0x6bc0, 0x1, 0x1);
        gbc.writeMem(0x5898, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x756c);
        EXPECT(gbc.pc(), 0x589a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0149
        gbc.setState(0xc474, 0xdd3a, 0xf530, 0xd3b1, 0xc831, 0x7049, 0x1, 0x0);
        gbc.writeMem(0xc474, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdd3a);
        EXPECT(gbc.pc(), 0xc476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc474), 0xcb);
        EXPECT(gbc.readMem(0xc475), 0x40);
        // CB 40 014A
        gbc.setState(0x24f8, 0x5115, 0xd550, 0x3278, 0x1840, 0x7324, 0x1, 0x1);
        gbc.writeMem(0x24f8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5115);
        EXPECT(gbc.pc(), 0x24fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 014B
        gbc.setState(0x43d2, 0x4e51, 0x3cd0, 0x43a4, 0x9451, 0xb49d, 0x0, 0x0);
        gbc.writeMem(0x43d2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4e51);
        EXPECT(gbc.pc(), 0x43d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 014C
        gbc.setState(0x56de, 0x124a, 0x4470, 0x762, 0xa72e, 0x8c3f, 0x0, 0x1);
        gbc.writeMem(0x56de, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x124a);
        EXPECT(gbc.pc(), 0x56e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 014D
        gbc.setState(0xaa7c, 0xd4d2, 0xadc0, 0x2302, 0xec67, 0xc3b1, 0x0, 0x1);
        gbc.writeMem(0xaa7c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd4d2);
        EXPECT(gbc.pc(), 0xaa7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa7c), 0xcb);
        EXPECT(gbc.readMem(0xaa7d), 0x40);
        // CB 40 014E
        gbc.setState(0xa7ad, 0xe4bb, 0xa140, 0x4485, 0x2257, 0xaa73, 0x1, 0x0);
        gbc.writeMem(0xa7ad, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe4bb);
        EXPECT(gbc.pc(), 0xa7af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ad), 0xcb);
        EXPECT(gbc.readMem(0xa7ae), 0x40);
        // CB 40 014F
        gbc.setState(0x84c, 0x1c23, 0x34c0, 0x5f84, 0x79a2, 0xf18e, 0x0, 0x1);
        gbc.writeMem(0x84c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1c23);
        EXPECT(gbc.pc(), 0x84e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0150
        gbc.setState(0xdc8b, 0x9ec5, 0x4490, 0x4d17, 0xf45b, 0xddd, 0x0, 0x1);
        gbc.writeMem(0xdc8b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9ec5);
        EXPECT(gbc.pc(), 0xdc8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc8b), 0xcb);
        EXPECT(gbc.readMem(0xdc8c), 0x40);
        // CB 40 0151
        gbc.setState(0xda09, 0x3feb, 0x2ac0, 0x3b, 0x61cb, 0xfd01, 0x0, 0x0);
        gbc.writeMem(0xda09, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3feb);
        EXPECT(gbc.pc(), 0xda0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda09), 0xcb);
        EXPECT(gbc.readMem(0xda0a), 0x40);
        // CB 40 0152
        gbc.setState(0xa39a, 0x277b, 0x45a0, 0x12a1, 0x64ae, 0xec1f, 0x0, 0x0);
        gbc.writeMem(0xa39a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x277b);
        EXPECT(gbc.pc(), 0xa39c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39a), 0xcb);
        EXPECT(gbc.readMem(0xa39b), 0x40);
        // CB 40 0153
        gbc.setState(0xeefc, 0x1e0d, 0x18d0, 0xb590, 0x317e, 0x9462, 0x1, 0x1);
        gbc.writeMem(0xeefc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1e0d);
        EXPECT(gbc.pc(), 0xeefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeefc), 0xcb);
        EXPECT(gbc.readMem(0xeefd), 0x40);
        // CB 40 0154
        gbc.setState(0x29c9, 0x36dd, 0xa20, 0x314c, 0xb59d, 0xcdb6, 0x0, 0x0);
        gbc.writeMem(0x29c9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x36dd);
        EXPECT(gbc.pc(), 0x29cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0155
        gbc.setState(0x8d37, 0x5a11, 0x80d0, 0x924f, 0xca20, 0xd11, 0x1, 0x0);
        gbc.writeMem(0x8d37, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5a11);
        EXPECT(gbc.pc(), 0x8d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d37), 0xcb);
        EXPECT(gbc.readMem(0x8d38), 0x40);
        // CB 40 0156
        gbc.setState(0x81c1, 0x4043, 0x99f0, 0xd503, 0x16ab, 0x9c5, 0x1, 0x1);
        gbc.writeMem(0x81c1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4043);
        EXPECT(gbc.pc(), 0x81c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c1), 0xcb);
        EXPECT(gbc.readMem(0x81c2), 0x40);
        // CB 40 0157
        gbc.setState(0x971f, 0x1f86, 0xcd70, 0x5f7a, 0x578, 0xbfe0, 0x1, 0x1);
        gbc.writeMem(0x971f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1f86);
        EXPECT(gbc.pc(), 0x9721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x971f), 0xcb);
        EXPECT(gbc.readMem(0x9720), 0x40);
        // CB 40 0158
        gbc.setState(0xd300, 0x546c, 0xaec0, 0x5f0d, 0xdea4, 0xcf08, 0x0, 0x1);
        gbc.writeMem(0xd300, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x546c);
        EXPECT(gbc.pc(), 0xd302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd300), 0xcb);
        EXPECT(gbc.readMem(0xd301), 0x40);
        // CB 40 0159
        gbc.setState(0x6437, 0x9ea6, 0xca50, 0x4d53, 0x548a, 0x2584, 0x1, 0x1);
        gbc.writeMem(0x6437, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9ea6);
        EXPECT(gbc.pc(), 0x6439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 015A
        gbc.setState(0xa49f, 0xc89c, 0x6550, 0xe95e, 0x57a2, 0x38c7, 0x1, 0x0);
        gbc.writeMem(0xa49f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc89c);
        EXPECT(gbc.pc(), 0xa4a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49f), 0xcb);
        EXPECT(gbc.readMem(0xa4a0), 0x40);
        // CB 40 015B
        gbc.setState(0x9a9f, 0x5d4e, 0x1e30, 0x6c2b, 0xe14f, 0xc45d, 0x0, 0x0);
        gbc.writeMem(0x9a9f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5d4e);
        EXPECT(gbc.pc(), 0x9aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a9f), 0xcb);
        EXPECT(gbc.readMem(0x9aa0), 0x40);
        // CB 40 015C
        gbc.setState(0x9e9b, 0x78d1, 0xf120, 0xc865, 0xda3d, 0x5c2, 0x0, 0x1);
        gbc.writeMem(0x9e9b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x78d1);
        EXPECT(gbc.pc(), 0x9e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e9b), 0xcb);
        EXPECT(gbc.readMem(0x9e9c), 0x40);
        // CB 40 015D
        gbc.setState(0x1232, 0x824e, 0x30a0, 0xddca, 0xa127, 0x4900, 0x1, 0x0);
        gbc.writeMem(0x1232, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x824e);
        EXPECT(gbc.pc(), 0x1234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 015E
        gbc.setState(0x8293, 0x1049, 0xb340, 0xd43e, 0x610f, 0x7bfe, 0x1, 0x1);
        gbc.writeMem(0x8293, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1049);
        EXPECT(gbc.pc(), 0x8295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8293), 0xcb);
        EXPECT(gbc.readMem(0x8294), 0x40);
        // CB 40 015F
        gbc.setState(0xa0c9, 0x11ee, 0x51f0, 0x3f2a, 0xfc8d, 0x8d5a, 0x0, 0x1);
        gbc.writeMem(0xa0c9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x11ee);
        EXPECT(gbc.pc(), 0xa0cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c9), 0xcb);
        EXPECT(gbc.readMem(0xa0ca), 0x40);
        // CB 40 0160
        gbc.setState(0x5fd6, 0x5d1e, 0x96b0, 0xfddf, 0xb4ca, 0x2a15, 0x0, 0x1);
        gbc.writeMem(0x5fd6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5d1e);
        EXPECT(gbc.pc(), 0x5fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0161
        gbc.setState(0xd99, 0xa5ef, 0x5d40, 0xfa85, 0x5b52, 0x3ab2, 0x0, 0x1);
        gbc.writeMem(0xd99, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa5ef);
        EXPECT(gbc.pc(), 0xd9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0162
        gbc.setState(0x72cf, 0xa40b, 0x260, 0xed85, 0x8c41, 0x9c78, 0x1, 0x0);
        gbc.writeMem(0x72cf, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa40b);
        EXPECT(gbc.pc(), 0x72d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0163
        gbc.setState(0x4cc1, 0x5eac, 0x7040, 0x4ef7, 0xd5e8, 0x7d32, 0x1, 0x1);
        gbc.writeMem(0x4cc1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5eac);
        EXPECT(gbc.pc(), 0x4cc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0164
        gbc.setState(0x5585, 0x76fa, 0x5670, 0x9a0d, 0xe156, 0xdf47, 0x1, 0x1);
        gbc.writeMem(0x5585, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x76fa);
        EXPECT(gbc.pc(), 0x5587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0165
        gbc.setState(0xe5a7, 0xf913, 0x9600, 0x7d63, 0x32c9, 0xb79c, 0x1, 0x0);
        gbc.writeMem(0xe5a7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf913);
        EXPECT(gbc.pc(), 0xe5a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a7), 0xcb);
        EXPECT(gbc.readMem(0xe5a8), 0x40);
        // CB 40 0166
        gbc.setState(0x76b, 0x4634, 0xd870, 0xdf9e, 0xb5c8, 0xe167, 0x0, 0x0);
        gbc.writeMem(0x76b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4634);
        EXPECT(gbc.pc(), 0x76d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0167
        gbc.setState(0xa654, 0xe148, 0xde90, 0xa150, 0x858c, 0x8144, 0x1, 0x0);
        gbc.writeMem(0xa654, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe148);
        EXPECT(gbc.pc(), 0xa656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa654), 0xcb);
        EXPECT(gbc.readMem(0xa655), 0x40);
        // CB 40 0168
        gbc.setState(0xceb8, 0x7d00, 0x1470, 0xaeac, 0x9151, 0x2591, 0x1, 0x1);
        gbc.writeMem(0xceb8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7d00);
        EXPECT(gbc.pc(), 0xceba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb8), 0xcb);
        EXPECT(gbc.readMem(0xceb9), 0x40);
        // CB 40 0169
        gbc.setState(0xda97, 0x1eaf, 0x9880, 0x26d5, 0x3843, 0x933d, 0x0, 0x1);
        gbc.writeMem(0xda97, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1eaf);
        EXPECT(gbc.pc(), 0xda99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda97), 0xcb);
        EXPECT(gbc.readMem(0xda98), 0x40);
        // CB 40 016A
        gbc.setState(0xc2e5, 0x5f98, 0xfba0, 0x847f, 0x6a25, 0xe5cf, 0x0, 0x1);
        gbc.writeMem(0xc2e5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5f98);
        EXPECT(gbc.pc(), 0xc2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e5), 0xcb);
        EXPECT(gbc.readMem(0xc2e6), 0x40);
        // CB 40 016B
        gbc.setState(0xcd41, 0x9371, 0x7a50, 0x4cb3, 0x5a8a, 0xb6e0, 0x0, 0x1);
        gbc.writeMem(0xcd41, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9371);
        EXPECT(gbc.pc(), 0xcd43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd41), 0xcb);
        EXPECT(gbc.readMem(0xcd42), 0x40);
        // CB 40 016C
        gbc.setState(0x989b, 0x5b1a, 0xe570, 0x595c, 0x8a7a, 0x3440, 0x0, 0x0);
        gbc.writeMem(0x989b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5b1a);
        EXPECT(gbc.pc(), 0x989d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989b), 0xcb);
        EXPECT(gbc.readMem(0x989c), 0x40);
        // CB 40 016D
        gbc.setState(0x25e8, 0x95b0, 0x1240, 0x96b0, 0x3a62, 0x107d, 0x1, 0x0);
        gbc.writeMem(0x25e8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x95b0);
        EXPECT(gbc.pc(), 0x25ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 016E
        gbc.setState(0x2138, 0x1963, 0xaff0, 0xdf19, 0x7608, 0x756, 0x1, 0x1);
        gbc.writeMem(0x2138, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1963);
        EXPECT(gbc.pc(), 0x213a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 016F
        gbc.setState(0xc76b, 0x34d6, 0x2b50, 0x28c5, 0xa534, 0xcff2, 0x1, 0x0);
        gbc.writeMem(0xc76b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x34d6);
        EXPECT(gbc.pc(), 0xc76d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc76b), 0xcb);
        EXPECT(gbc.readMem(0xc76c), 0x40);
        // CB 40 0170
        gbc.setState(0x33c3, 0x5945, 0xfa70, 0xd0ba, 0x4b44, 0x9324, 0x1, 0x1);
        gbc.writeMem(0x33c3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5945);
        EXPECT(gbc.pc(), 0x33c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0171
        gbc.setState(0x3400, 0x60a8, 0xe00, 0x7539, 0x657a, 0x1a6c, 0x1, 0x1);
        gbc.writeMem(0x3400, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x60a8);
        EXPECT(gbc.pc(), 0x3402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0172
        gbc.setState(0x8c9f, 0x2110, 0x61d0, 0xaa42, 0xb76, 0xf3dd, 0x1, 0x1);
        gbc.writeMem(0x8c9f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2110);
        EXPECT(gbc.pc(), 0x8ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c9f), 0xcb);
        EXPECT(gbc.readMem(0x8ca0), 0x40);
        // CB 40 0173
        gbc.setState(0xc602, 0x6df0, 0xf030, 0x8b4b, 0x8205, 0x9ecd, 0x1, 0x0);
        gbc.writeMem(0xc602, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6df0);
        EXPECT(gbc.pc(), 0xc604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc602), 0xcb);
        EXPECT(gbc.readMem(0xc603), 0x40);
        // CB 40 0174
        gbc.setState(0x2e7e, 0x3f93, 0x47d0, 0xc0f0, 0xa8e3, 0x1180, 0x1, 0x1);
        gbc.writeMem(0x2e7e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3f93);
        EXPECT(gbc.pc(), 0x2e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0175
        gbc.setState(0xc14, 0xd083, 0xab20, 0xcffc, 0xd28e, 0x9a15, 0x1, 0x0);
        gbc.writeMem(0xc14, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd083);
        EXPECT(gbc.pc(), 0xc16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0176
        gbc.setState(0xbcee, 0x977e, 0x7e00, 0xc020, 0xf446, 0x3ba0, 0x0, 0x1);
        gbc.writeMem(0xbcee, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x977e);
        EXPECT(gbc.pc(), 0xbcf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcee), 0xcb);
        EXPECT(gbc.readMem(0xbcef), 0x40);
        // CB 40 0177
        gbc.setState(0x10be, 0x325c, 0xfad0, 0x4b71, 0x3997, 0x6088, 0x0, 0x0);
        gbc.writeMem(0x10be, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x325c);
        EXPECT(gbc.pc(), 0x10c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0178
        gbc.setState(0x5be0, 0xbaf7, 0x4100, 0x912, 0x8c0a, 0x6dc3, 0x0, 0x0);
        gbc.writeMem(0x5be0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbaf7);
        EXPECT(gbc.pc(), 0x5be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0179
        gbc.setState(0x8c36, 0x3885, 0xb690, 0x8e19, 0x5217, 0x5c68, 0x0, 0x0);
        gbc.writeMem(0x8c36, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3885);
        EXPECT(gbc.pc(), 0x8c38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c36), 0xcb);
        EXPECT(gbc.readMem(0x8c37), 0x40);
        // CB 40 017A
        gbc.setState(0xed69, 0xfd41, 0x51c0, 0x71d, 0x3846, 0x92b, 0x0, 0x1);
        gbc.writeMem(0xed69, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfd41);
        EXPECT(gbc.pc(), 0xed6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed69), 0xcb);
        EXPECT(gbc.readMem(0xed6a), 0x40);
        // CB 40 017B
        gbc.setState(0x911, 0x86a7, 0xac70, 0x57e, 0xd037, 0x5ae4, 0x0, 0x0);
        gbc.writeMem(0x911, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x86a7);
        EXPECT(gbc.pc(), 0x913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 017C
        gbc.setState(0xc949, 0x3dc0, 0x52c0, 0xdcb8, 0x3fc2, 0xbfdb, 0x1, 0x0);
        gbc.writeMem(0xc949, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3dc0);
        EXPECT(gbc.pc(), 0xc94b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc949), 0xcb);
        EXPECT(gbc.readMem(0xc94a), 0x40);
        // CB 40 017D
        gbc.setState(0x412a, 0xb343, 0x57c0, 0xe422, 0xa281, 0x2599, 0x1, 0x1);
        gbc.writeMem(0x412a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb343);
        EXPECT(gbc.pc(), 0x412c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 017E
        gbc.setState(0xeea8, 0x43ea, 0xe1d0, 0xca36, 0x4407, 0x65e7, 0x1, 0x1);
        gbc.writeMem(0xeea8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x43ea);
        EXPECT(gbc.pc(), 0xeeaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea8), 0xcb);
        EXPECT(gbc.readMem(0xeea9), 0x40);
        // CB 40 017F
        gbc.setState(0x4dcd, 0x346c, 0x80e0, 0xb94f, 0xeb74, 0x5b4e, 0x0, 0x1);
        gbc.writeMem(0x4dcd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x346c);
        EXPECT(gbc.pc(), 0x4dcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0180
        gbc.setState(0xe473, 0xe156, 0xec0, 0x737e, 0xe050, 0x21cc, 0x1, 0x0);
        gbc.writeMem(0xe473, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe156);
        EXPECT(gbc.pc(), 0xe475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe473), 0xcb);
        EXPECT(gbc.readMem(0xe474), 0x40);
        // CB 40 0181
        gbc.setState(0x538e, 0x9a0c, 0x3360, 0xb394, 0x3684, 0xe84d, 0x1, 0x0);
        gbc.writeMem(0x538e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9a0c);
        EXPECT(gbc.pc(), 0x5390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0183
        gbc.setState(0x21b8, 0xcac4, 0x540, 0x9583, 0xb095, 0x69a2, 0x0, 0x0);
        gbc.writeMem(0x21b8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcac4);
        EXPECT(gbc.pc(), 0x21ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0184
        gbc.setState(0x9cc1, 0xd2e3, 0x7480, 0xe0de, 0x23e, 0x41e9, 0x0, 0x1);
        gbc.writeMem(0x9cc1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd2e3);
        EXPECT(gbc.pc(), 0x9cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc1), 0xcb);
        EXPECT(gbc.readMem(0x9cc2), 0x40);
        // CB 40 0185
        gbc.setState(0x8f4, 0x6882, 0x4340, 0x301e, 0xaa4c, 0x5d32, 0x0, 0x1);
        gbc.writeMem(0x8f4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6882);
        EXPECT(gbc.pc(), 0x8f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0187
        gbc.setState(0x345f, 0x5c9, 0x38e0, 0x32fc, 0xa4e0, 0x5c2, 0x1, 0x1);
        gbc.writeMem(0x345f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5c9);
        EXPECT(gbc.pc(), 0x3461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0188
        gbc.setState(0xe14c, 0xbecf, 0xd3f0, 0xb174, 0xac1a, 0x4bcf, 0x0, 0x1);
        gbc.writeMem(0xe14c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbecf);
        EXPECT(gbc.pc(), 0xe14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14c), 0xcb);
        EXPECT(gbc.readMem(0xe14d), 0x40);
        // CB 40 0189
        gbc.setState(0x35b2, 0x887b, 0xa950, 0x8f11, 0xf4c6, 0xfc05, 0x1, 0x1);
        gbc.writeMem(0x35b2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x887b);
        EXPECT(gbc.pc(), 0x35b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 018A
        gbc.setState(0x7ccd, 0xe708, 0x4f20, 0x3a72, 0x79df, 0x8688, 0x0, 0x0);
        gbc.writeMem(0x7ccd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe708);
        EXPECT(gbc.pc(), 0x7ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 018B
        gbc.setState(0x2ec8, 0xca97, 0x21c0, 0x5b96, 0x7f36, 0xd17b, 0x1, 0x0);
        gbc.writeMem(0x2ec8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xca97);
        EXPECT(gbc.pc(), 0x2eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 018C
        gbc.setState(0x4c39, 0xba2b, 0x4090, 0xb98f, 0x5a52, 0xcce2, 0x0, 0x1);
        gbc.writeMem(0x4c39, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xba2b);
        EXPECT(gbc.pc(), 0x4c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 018E
        gbc.setState(0x9023, 0x9640, 0xdbf0, 0x66a1, 0x5b63, 0x4fe0, 0x1, 0x0);
        gbc.writeMem(0x9023, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9640);
        EXPECT(gbc.pc(), 0x9025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9023), 0xcb);
        EXPECT(gbc.readMem(0x9024), 0x40);
        // CB 40 018F
        gbc.setState(0x724c, 0x3fd0, 0xdd40, 0x6f44, 0x11d0, 0xbaf4, 0x1, 0x0);
        gbc.writeMem(0x724c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3fd0);
        EXPECT(gbc.pc(), 0x724e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0190
        gbc.setState(0x241d, 0x6c37, 0xbf70, 0x2f0c, 0x7854, 0x5765, 0x0, 0x1);
        gbc.writeMem(0x241d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6c37);
        EXPECT(gbc.pc(), 0x241f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0191
        gbc.setState(0x57f0, 0x2f63, 0xb940, 0xf40f, 0x6bfc, 0x7726, 0x0, 0x1);
        gbc.writeMem(0x57f0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2f63);
        EXPECT(gbc.pc(), 0x57f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0192
        gbc.setState(0x4b, 0x7cb, 0xfc70, 0x75e2, 0x7830, 0x99c6, 0x0, 0x0);
        gbc.writeMem(0x4b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7cb);
        EXPECT(gbc.pc(), 0x4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0194
        gbc.setState(0xddd0, 0x1e0d, 0xacf0, 0x6871, 0xaa40, 0x92a9, 0x1, 0x0);
        gbc.writeMem(0xddd0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1e0d);
        EXPECT(gbc.pc(), 0xddd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd0), 0xcb);
        EXPECT(gbc.readMem(0xddd1), 0x40);
        // CB 40 0195
        gbc.setState(0x64, 0x7486, 0x9ea0, 0xe2f1, 0x129b, 0x92ae, 0x0, 0x0);
        gbc.writeMem(0x64, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7486);
        EXPECT(gbc.pc(), 0x66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0196
        gbc.setState(0xc5e3, 0x5d77, 0xd690, 0x7fc9, 0x7da2, 0x2b39, 0x0, 0x0);
        gbc.writeMem(0xc5e3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5d77);
        EXPECT(gbc.pc(), 0xc5e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e3), 0xcb);
        EXPECT(gbc.readMem(0xc5e4), 0x40);
        // CB 40 0197
        gbc.setState(0xb6e7, 0xa519, 0x35e0, 0x5c7a, 0xb364, 0x23bc, 0x1, 0x1);
        gbc.writeMem(0xb6e7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa519);
        EXPECT(gbc.pc(), 0xb6e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e7), 0xcb);
        EXPECT(gbc.readMem(0xb6e8), 0x40);
        // CB 40 0198
        gbc.setState(0x9754, 0x1f04, 0x7d60, 0xe138, 0xbc4e, 0x1c5f, 0x0, 0x0);
        gbc.writeMem(0x9754, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1f04);
        EXPECT(gbc.pc(), 0x9756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9754), 0xcb);
        EXPECT(gbc.readMem(0x9755), 0x40);
        // CB 40 0199
        gbc.setState(0x7b58, 0xb1ba, 0x3280, 0xc3e7, 0x6ca5, 0x63ad, 0x1, 0x1);
        gbc.writeMem(0x7b58, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb1ba);
        EXPECT(gbc.pc(), 0x7b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 019A
        gbc.setState(0x3579, 0xdbb1, 0x300, 0x13cc, 0x47b6, 0xa9df, 0x1, 0x1);
        gbc.writeMem(0x3579, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xdbb1);
        EXPECT(gbc.pc(), 0x357b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 019B
        gbc.setState(0x7ba4, 0x3e5b, 0x8370, 0x9ffc, 0x6cb0, 0x58cc, 0x1, 0x1);
        gbc.writeMem(0x7ba4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3e5b);
        EXPECT(gbc.pc(), 0x7ba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 019C
        gbc.setState(0xdad0, 0xcb1f, 0xf290, 0x6a60, 0x5b78, 0x3ece, 0x1, 0x1);
        gbc.writeMem(0xdad0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcb1f);
        EXPECT(gbc.pc(), 0xdad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad0), 0xcb);
        EXPECT(gbc.readMem(0xdad1), 0x40);
        // CB 40 019D
        gbc.setState(0xe9e, 0x3258, 0xad0, 0x732, 0x3bb, 0xc410, 0x1, 0x1);
        gbc.writeMem(0xe9e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3258);
        EXPECT(gbc.pc(), 0xea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 019E
        gbc.setState(0x9f3c, 0xba06, 0xcf90, 0x25d3, 0xa10e, 0x7f44, 0x1, 0x1);
        gbc.writeMem(0x9f3c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xba06);
        EXPECT(gbc.pc(), 0x9f3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f3c), 0xcb);
        EXPECT(gbc.readMem(0x9f3d), 0x40);
        // CB 40 019F
        gbc.setState(0x40d6, 0x9b7b, 0x8af0, 0x99d5, 0xd347, 0x4cd, 0x1, 0x1);
        gbc.writeMem(0x40d6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9b7b);
        EXPECT(gbc.pc(), 0x40d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01A0
        gbc.setState(0xe8cc, 0x6157, 0x9660, 0x46bb, 0x75bf, 0xeae0, 0x1, 0x0);
        gbc.writeMem(0xe8cc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6157);
        EXPECT(gbc.pc(), 0xe8ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8cc), 0xcb);
        EXPECT(gbc.readMem(0xe8cd), 0x40);
        // CB 40 01A1
        gbc.setState(0x9bdd, 0xf343, 0x22e0, 0x6c72, 0xc65a, 0xc387, 0x0, 0x0);
        gbc.writeMem(0x9bdd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf343);
        EXPECT(gbc.pc(), 0x9bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bdd), 0xcb);
        EXPECT(gbc.readMem(0x9bde), 0x40);
        // CB 40 01A2
        gbc.setState(0x8625, 0xba53, 0x9820, 0x74af, 0xc635, 0x1b00, 0x1, 0x1);
        gbc.writeMem(0x8625, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xba53);
        EXPECT(gbc.pc(), 0x8627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8625), 0xcb);
        EXPECT(gbc.readMem(0x8626), 0x40);
        // CB 40 01A3
        gbc.setState(0xa43d, 0xa2db, 0x76a0, 0x4646, 0x7815, 0x2027, 0x0, 0x1);
        gbc.writeMem(0xa43d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa2db);
        EXPECT(gbc.pc(), 0xa43f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43d), 0xcb);
        EXPECT(gbc.readMem(0xa43e), 0x40);
        // CB 40 01A4
        gbc.setState(0x4e10, 0x841d, 0x30d0, 0xcf70, 0x501e, 0x64e2, 0x0, 0x1);
        gbc.writeMem(0x4e10, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x841d);
        EXPECT(gbc.pc(), 0x4e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01A5
        gbc.setState(0x157a, 0x4187, 0x6f50, 0xad86, 0xe928, 0x4d7a, 0x0, 0x1);
        gbc.writeMem(0x157a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4187);
        EXPECT(gbc.pc(), 0x157c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01A6
        gbc.setState(0x8fd1, 0x981, 0x140, 0xfaa2, 0xcd6a, 0xc373, 0x1, 0x1);
        gbc.writeMem(0x8fd1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x981);
        EXPECT(gbc.pc(), 0x8fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd1), 0xcb);
        EXPECT(gbc.readMem(0x8fd2), 0x40);
        // CB 40 01A7
        gbc.setState(0xd64c, 0xdde0, 0x14a0, 0x1ede, 0x78e9, 0x930c, 0x0, 0x0);
        gbc.writeMem(0xd64c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xdde0);
        EXPECT(gbc.pc(), 0xd64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd64c), 0xcb);
        EXPECT(gbc.readMem(0xd64d), 0x40);
        // CB 40 01A8
        gbc.setState(0x7f9f, 0xbee4, 0x5b10, 0xa769, 0xf61f, 0x4357, 0x1, 0x0);
        gbc.writeMem(0x7f9f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbee4);
        EXPECT(gbc.pc(), 0x7fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01A9
        gbc.setState(0xa6a2, 0xac1, 0x6390, 0x5d5c, 0xaccc, 0x8e43, 0x0, 0x0);
        gbc.writeMem(0xa6a2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xac1);
        EXPECT(gbc.pc(), 0xa6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a2), 0xcb);
        EXPECT(gbc.readMem(0xa6a3), 0x40);
        // CB 40 01AA
        gbc.setState(0x4349, 0x4b06, 0x5190, 0xa325, 0x3639, 0x4f18, 0x0, 0x1);
        gbc.writeMem(0x4349, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4b06);
        EXPECT(gbc.pc(), 0x434b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01AB
        gbc.setState(0xdec6, 0xf758, 0x9110, 0xe3ea, 0xdb48, 0xa35f, 0x1, 0x0);
        gbc.writeMem(0xdec6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf758);
        EXPECT(gbc.pc(), 0xdec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec6), 0xcb);
        EXPECT(gbc.readMem(0xdec7), 0x40);
        // CB 40 01AC
        gbc.setState(0x17a0, 0x329d, 0x3960, 0x2b76, 0x13f8, 0xa95e, 0x0, 0x0);
        gbc.writeMem(0x17a0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x329d);
        EXPECT(gbc.pc(), 0x17a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01AD
        gbc.setState(0xa8c2, 0xc25, 0x38e0, 0xba92, 0x87b1, 0x2e9, 0x1, 0x0);
        gbc.writeMem(0xa8c2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc25);
        EXPECT(gbc.pc(), 0xa8c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c2), 0xcb);
        EXPECT(gbc.readMem(0xa8c3), 0x40);
        // CB 40 01AE
        gbc.setState(0x5b75, 0x9399, 0x8c30, 0x1d24, 0x900a, 0xde57, 0x0, 0x1);
        gbc.writeMem(0x5b75, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9399);
        EXPECT(gbc.pc(), 0x5b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01B0
        gbc.setState(0x68e8, 0xa301, 0xb480, 0xa4b8, 0x400b, 0x7777, 0x1, 0x0);
        gbc.writeMem(0x68e8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa301);
        EXPECT(gbc.pc(), 0x68ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01B1
        gbc.setState(0x342e, 0x3342, 0x5f0, 0xdcef, 0x1c30, 0x30b7, 0x1, 0x0);
        gbc.writeMem(0x342e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3342);
        EXPECT(gbc.pc(), 0x3430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01B3
        gbc.setState(0x3954, 0x96a1, 0x1290, 0xb994, 0xbff2, 0xe3ce, 0x0, 0x0);
        gbc.writeMem(0x3954, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x96a1);
        EXPECT(gbc.pc(), 0x3956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01B4
        gbc.setState(0x6761, 0x9af7, 0x8d40, 0x6c63, 0xbc3a, 0xab7a, 0x0, 0x0);
        gbc.writeMem(0x6761, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9af7);
        EXPECT(gbc.pc(), 0x6763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01B5
        gbc.setState(0x2011, 0x25fc, 0xe5c0, 0x66f9, 0x1886, 0x681f, 0x1, 0x0);
        gbc.writeMem(0x2011, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x25fc);
        EXPECT(gbc.pc(), 0x2013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01B6
        gbc.setState(0xb14f, 0xef0, 0xba90, 0xb395, 0x597f, 0x16d7, 0x1, 0x0);
        gbc.writeMem(0xb14f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xef0);
        EXPECT(gbc.pc(), 0xb151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14f), 0xcb);
        EXPECT(gbc.readMem(0xb150), 0x40);
        // CB 40 01B7
        gbc.setState(0xba20, 0x5994, 0xacd0, 0x3aff, 0xef9c, 0xdaf5, 0x0, 0x1);
        gbc.writeMem(0xba20, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5994);
        EXPECT(gbc.pc(), 0xba22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba20), 0xcb);
        EXPECT(gbc.readMem(0xba21), 0x40);
        // CB 40 01B8
        gbc.setState(0xc164, 0xef46, 0x8970, 0x8ff3, 0xa2cb, 0x92f0, 0x0, 0x1);
        gbc.writeMem(0xc164, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xef46);
        EXPECT(gbc.pc(), 0xc166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc164), 0xcb);
        EXPECT(gbc.readMem(0xc165), 0x40);
        // CB 40 01B9
        gbc.setState(0xd7ba, 0xff8a, 0xb1e0, 0x2f5, 0x1ee, 0x84d4, 0x0, 0x1);
        gbc.writeMem(0xd7ba, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xff8a);
        EXPECT(gbc.pc(), 0xd7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ba), 0xcb);
        EXPECT(gbc.readMem(0xd7bb), 0x40);
        // CB 40 01BA
        gbc.setState(0xed78, 0x6c37, 0x5010, 0xc79c, 0xb150, 0xc9a1, 0x0, 0x1);
        gbc.writeMem(0xed78, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6c37);
        EXPECT(gbc.pc(), 0xed7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed78), 0xcb);
        EXPECT(gbc.readMem(0xed79), 0x40);
        // CB 40 01BB
        gbc.setState(0x854d, 0x6e6e, 0x19a0, 0x89b0, 0x9708, 0x822b, 0x1, 0x1);
        gbc.writeMem(0x854d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6e6e);
        EXPECT(gbc.pc(), 0x854f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854d), 0xcb);
        EXPECT(gbc.readMem(0x854e), 0x40);
        // CB 40 01BC
        gbc.setState(0x7383, 0xd282, 0xa1d0, 0x5d20, 0x345c, 0x90b5, 0x0, 0x0);
        gbc.writeMem(0x7383, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd282);
        EXPECT(gbc.pc(), 0x7385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01BD
        gbc.setState(0x1578, 0x9bc9, 0x64a0, 0x318, 0xd3db, 0xe419, 0x0, 0x0);
        gbc.writeMem(0x1578, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9bc9);
        EXPECT(gbc.pc(), 0x157a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01BE
        gbc.setState(0x7538, 0x1f22, 0x4660, 0xd42b, 0x53ad, 0xf63, 0x0, 0x1);
        gbc.writeMem(0x7538, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1f22);
        EXPECT(gbc.pc(), 0x753a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01C0
        gbc.setState(0xef3a, 0xc3b0, 0x5420, 0x357a, 0xe2ed, 0x40da, 0x0, 0x0);
        gbc.writeMem(0xef3a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc3b0);
        EXPECT(gbc.pc(), 0xef3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef3a), 0xcb);
        EXPECT(gbc.readMem(0xef3b), 0x40);
        // CB 40 01C2
        gbc.setState(0x7735, 0xd3d8, 0x2ed0, 0x259f, 0x4cf0, 0x31ae, 0x0, 0x0);
        gbc.writeMem(0x7735, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd3d8);
        EXPECT(gbc.pc(), 0x7737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01C3
        gbc.setState(0xdc56, 0xabda, 0xeff0, 0x5f3b, 0x714a, 0x16fd, 0x1, 0x0);
        gbc.writeMem(0xdc56, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xabda);
        EXPECT(gbc.pc(), 0xdc58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc56), 0xcb);
        EXPECT(gbc.readMem(0xdc57), 0x40);
        // CB 40 01C4
        gbc.setState(0x5a4f, 0xf9fd, 0x1d60, 0x93ea, 0xe9a8, 0xd13e, 0x0, 0x0);
        gbc.writeMem(0x5a4f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf9fd);
        EXPECT(gbc.pc(), 0x5a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01C5
        gbc.setState(0x534f, 0xbed3, 0x1730, 0xab8a, 0xf0ae, 0x6cf7, 0x1, 0x0);
        gbc.writeMem(0x534f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbed3);
        EXPECT(gbc.pc(), 0x5351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01C6
        gbc.setState(0x7910, 0xd27d, 0x7c80, 0x572e, 0x26a3, 0x63f4, 0x0, 0x1);
        gbc.writeMem(0x7910, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd27d);
        EXPECT(gbc.pc(), 0x7912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01C7
        gbc.setState(0xdf8d, 0xd4e7, 0xdc00, 0xaaa5, 0x2d55, 0x2ae2, 0x1, 0x1);
        gbc.writeMem(0xdf8d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd4e7);
        EXPECT(gbc.pc(), 0xdf8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8d), 0xcb);
        EXPECT(gbc.readMem(0xdf8e), 0x40);
        // CB 40 01C8
        gbc.setState(0xc9b9, 0xc802, 0xa480, 0x8302, 0x6641, 0x63d8, 0x0, 0x0);
        gbc.writeMem(0xc9b9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc802);
        EXPECT(gbc.pc(), 0xc9bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b9), 0xcb);
        EXPECT(gbc.readMem(0xc9ba), 0x40);
        // CB 40 01C9
        gbc.setState(0xc3cd, 0xa5e7, 0x5fe0, 0x35c, 0x1789, 0x230c, 0x0, 0x0);
        gbc.writeMem(0xc3cd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa5e7);
        EXPECT(gbc.pc(), 0xc3cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cd), 0xcb);
        EXPECT(gbc.readMem(0xc3ce), 0x40);
        // CB 40 01CA
        gbc.setState(0x40cc, 0x2f1f, 0x3e10, 0x6677, 0x50ca, 0x6be6, 0x1, 0x0);
        gbc.writeMem(0x40cc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2f1f);
        EXPECT(gbc.pc(), 0x40ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01CB
        gbc.setState(0x3d3a, 0x94d, 0x7480, 0x3f24, 0xab01, 0xd2c8, 0x0, 0x0);
        gbc.writeMem(0x3d3a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x94d);
        EXPECT(gbc.pc(), 0x3d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01CD
        gbc.setState(0x94ce, 0x18f3, 0xdd00, 0x2ef4, 0x5827, 0xf86e, 0x1, 0x1);
        gbc.writeMem(0x94ce, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x18f3);
        EXPECT(gbc.pc(), 0x94d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ce), 0xcb);
        EXPECT(gbc.readMem(0x94cf), 0x40);
        // CB 40 01CF
        gbc.setState(0xae1a, 0x57dc, 0x2810, 0x488c, 0xe0b9, 0xfc48, 0x1, 0x0);
        gbc.writeMem(0xae1a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x57dc);
        EXPECT(gbc.pc(), 0xae1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1a), 0xcb);
        EXPECT(gbc.readMem(0xae1b), 0x40);
        // CB 40 01D0
        gbc.setState(0x52ed, 0x82b8, 0xef80, 0x6f53, 0xe7c3, 0x9a0e, 0x1, 0x0);
        gbc.writeMem(0x52ed, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x82b8);
        EXPECT(gbc.pc(), 0x52ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01D1
        gbc.setState(0x2d5c, 0x6252, 0x3730, 0x3a1d, 0x44e0, 0xc4a9, 0x0, 0x1);
        gbc.writeMem(0x2d5c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6252);
        EXPECT(gbc.pc(), 0x2d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01D2
        gbc.setState(0xe2a1, 0x3a21, 0xea40, 0xe657, 0x1c94, 0xb80a, 0x1, 0x1);
        gbc.writeMem(0xe2a1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3a21);
        EXPECT(gbc.pc(), 0xe2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a1), 0xcb);
        EXPECT(gbc.readMem(0xe2a2), 0x40);
        // CB 40 01D3
        gbc.setState(0xa5be, 0x9998, 0x7580, 0x2b01, 0xd4d0, 0xb240, 0x1, 0x1);
        gbc.writeMem(0xa5be, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9998);
        EXPECT(gbc.pc(), 0xa5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5be), 0xcb);
        EXPECT(gbc.readMem(0xa5bf), 0x40);
        // CB 40 01D4
        gbc.setState(0xac1, 0xb7c5, 0x2630, 0x3b25, 0x1002, 0xd489, 0x1, 0x1);
        gbc.writeMem(0xac1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb7c5);
        EXPECT(gbc.pc(), 0xac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01D5
        gbc.setState(0x6829, 0xfdbe, 0x5870, 0x5b80, 0x13f1, 0xeed5, 0x0, 0x0);
        gbc.writeMem(0x6829, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfdbe);
        EXPECT(gbc.pc(), 0x682b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01D6
        gbc.setState(0xcf01, 0x2e2f, 0x6e00, 0x4973, 0x965b, 0x1938, 0x1, 0x0);
        gbc.writeMem(0xcf01, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2e2f);
        EXPECT(gbc.pc(), 0xcf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf01), 0xcb);
        EXPECT(gbc.readMem(0xcf02), 0x40);
        // CB 40 01D7
        gbc.setState(0xaac4, 0x3387, 0x4790, 0x8831, 0xdbb2, 0xc3ea, 0x0, 0x0);
        gbc.writeMem(0xaac4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3387);
        EXPECT(gbc.pc(), 0xaac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaac4), 0xcb);
        EXPECT(gbc.readMem(0xaac5), 0x40);
        // CB 40 01D8
        gbc.setState(0x1736, 0x5fba, 0x9630, 0x5583, 0x4686, 0xf96b, 0x1, 0x1);
        gbc.writeMem(0x1736, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5fba);
        EXPECT(gbc.pc(), 0x1738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01D9
        gbc.setState(0xdbc0, 0xaf6f, 0x30a0, 0x14f5, 0x6b70, 0xe4ff, 0x0, 0x0);
        gbc.writeMem(0xdbc0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xaf6f);
        EXPECT(gbc.pc(), 0xdbc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc0), 0xcb);
        EXPECT(gbc.readMem(0xdbc1), 0x40);
        // CB 40 01DA
        gbc.setState(0x6284, 0xd43a, 0xac0, 0xaa57, 0xd73a, 0x8422, 0x1, 0x0);
        gbc.writeMem(0x6284, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd43a);
        EXPECT(gbc.pc(), 0x6286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01DB
        gbc.setState(0x452b, 0x868e, 0xec30, 0x1fe3, 0xa283, 0xdc77, 0x1, 0x1);
        gbc.writeMem(0x452b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x868e);
        EXPECT(gbc.pc(), 0x452d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01DC
        gbc.setState(0xa462, 0x2b41, 0x8220, 0xe6df, 0x54c2, 0xbb37, 0x1, 0x1);
        gbc.writeMem(0xa462, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2b41);
        EXPECT(gbc.pc(), 0xa464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa462), 0xcb);
        EXPECT(gbc.readMem(0xa463), 0x40);
        // CB 40 01DD
        gbc.setState(0x7284, 0xa918, 0x1890, 0xb8cd, 0xca40, 0x9efa, 0x0, 0x1);
        gbc.writeMem(0x7284, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa918);
        EXPECT(gbc.pc(), 0x7286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01DE
        gbc.setState(0x7dcb, 0xcea0, 0x7340, 0xd6b4, 0x81ca, 0xd907, 0x0, 0x0);
        gbc.writeMem(0x7dcb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcea0);
        EXPECT(gbc.pc(), 0x7dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01DF
        gbc.setState(0x7a5f, 0xfb93, 0xc3b0, 0x46fb, 0x1760, 0x5f27, 0x0, 0x0);
        gbc.writeMem(0x7a5f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfb93);
        EXPECT(gbc.pc(), 0x7a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01E0
        gbc.setState(0x8af1, 0xb38a, 0xe7b0, 0xe1a8, 0x679a, 0x3c32, 0x1, 0x1);
        gbc.writeMem(0x8af1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb38a);
        EXPECT(gbc.pc(), 0x8af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af1), 0xcb);
        EXPECT(gbc.readMem(0x8af2), 0x40);
        // CB 40 01E1
        gbc.setState(0xdf90, 0xd96a, 0x6e80, 0x846d, 0x288e, 0xf07, 0x0, 0x0);
        gbc.writeMem(0xdf90, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd96a);
        EXPECT(gbc.pc(), 0xdf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf90), 0xcb);
        EXPECT(gbc.readMem(0xdf91), 0x40);
        // CB 40 01E2
        gbc.setState(0x4973, 0xb8cf, 0x7890, 0xce72, 0xe23a, 0x2e33, 0x1, 0x1);
        gbc.writeMem(0x4973, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb8cf);
        EXPECT(gbc.pc(), 0x4975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01E3
        gbc.setState(0x3450, 0x9131, 0x410, 0x2615, 0x3f52, 0x23b5, 0x0, 0x0);
        gbc.writeMem(0x3450, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9131);
        EXPECT(gbc.pc(), 0x3452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01E4
        gbc.setState(0x3323, 0x899d, 0xa930, 0x461e, 0xf528, 0x6a2d, 0x1, 0x1);
        gbc.writeMem(0x3323, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x899d);
        EXPECT(gbc.pc(), 0x3325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01E5
        gbc.setState(0x1cb3, 0x3a5f, 0xd1a0, 0x5363, 0x5b9d, 0x1529, 0x1, 0x1);
        gbc.writeMem(0x1cb3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3a5f);
        EXPECT(gbc.pc(), 0x1cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01E6
        gbc.setState(0xe2a9, 0x9d4a, 0x7c0, 0x2ad7, 0x2134, 0xf2a2, 0x0, 0x1);
        gbc.writeMem(0xe2a9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9d4a);
        EXPECT(gbc.pc(), 0xe2ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a9), 0xcb);
        EXPECT(gbc.readMem(0xe2aa), 0x40);
        // CB 40 01E8
        gbc.setState(0x43d, 0xffb, 0x6fa0, 0xbb29, 0x2e5d, 0xc8ab, 0x1, 0x1);
        gbc.writeMem(0x43d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xffb);
        EXPECT(gbc.pc(), 0x43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01E9
        gbc.setState(0xe296, 0x2677, 0x3780, 0xd4ca, 0x1124, 0x1788, 0x0, 0x0);
        gbc.writeMem(0xe296, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2677);
        EXPECT(gbc.pc(), 0xe298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe296), 0xcb);
        EXPECT(gbc.readMem(0xe297), 0x40);
        // CB 40 01EA
        gbc.setState(0x1e88, 0x8233, 0x64d0, 0xf294, 0x9cd0, 0x6401, 0x1, 0x1);
        gbc.writeMem(0x1e88, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8233);
        EXPECT(gbc.pc(), 0x1e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01EB
        gbc.setState(0x77b9, 0x1f76, 0xdf40, 0xdbb2, 0x5bcd, 0x4bac, 0x1, 0x1);
        gbc.writeMem(0x77b9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1f76);
        EXPECT(gbc.pc(), 0x77bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01EC
        gbc.setState(0xed15, 0xd01b, 0x3820, 0x8b87, 0x778c, 0xa68, 0x0, 0x1);
        gbc.writeMem(0xed15, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd01b);
        EXPECT(gbc.pc(), 0xed17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed15), 0xcb);
        EXPECT(gbc.readMem(0xed16), 0x40);
        // CB 40 01ED
        gbc.setState(0x91cd, 0xf14a, 0xd4d0, 0x2d5d, 0xd96, 0x5e93, 0x0, 0x0);
        gbc.writeMem(0x91cd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf14a);
        EXPECT(gbc.pc(), 0x91cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91cd), 0xcb);
        EXPECT(gbc.readMem(0x91ce), 0x40);
        // CB 40 01EE
        gbc.setState(0xb8c0, 0x630d, 0xc420, 0xb2ca, 0xd5ee, 0x3e80, 0x1, 0x0);
        gbc.writeMem(0xb8c0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x630d);
        EXPECT(gbc.pc(), 0xb8c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c0), 0xcb);
        EXPECT(gbc.readMem(0xb8c1), 0x40);
        // CB 40 01EF
        gbc.setState(0x7c8, 0xb66a, 0x1cf0, 0x9642, 0xc94, 0x1d09, 0x1, 0x0);
        gbc.writeMem(0x7c8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb66a);
        EXPECT(gbc.pc(), 0x7ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01F0
        gbc.setState(0xe9b7, 0xc754, 0xf860, 0x2d72, 0xce6, 0x6891, 0x0, 0x1);
        gbc.writeMem(0xe9b7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc754);
        EXPECT(gbc.pc(), 0xe9b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b7), 0xcb);
        EXPECT(gbc.readMem(0xe9b8), 0x40);
        // CB 40 01F1
        gbc.setState(0x149c, 0xe264, 0xfa30, 0xfe7, 0xca1b, 0xfeef, 0x1, 0x0);
        gbc.writeMem(0x149c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe264);
        EXPECT(gbc.pc(), 0x149e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01F2
        gbc.setState(0x7edd, 0xaf08, 0xe560, 0x5901, 0x79b3, 0xd814, 0x0, 0x0);
        gbc.writeMem(0x7edd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xaf08);
        EXPECT(gbc.pc(), 0x7edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01F3
        gbc.setState(0x602d, 0xf106, 0xf430, 0x3157, 0xffa, 0xef49, 0x0, 0x1);
        gbc.writeMem(0x602d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf106);
        EXPECT(gbc.pc(), 0x602f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01F4
        gbc.setState(0xcc, 0xaa19, 0x76c0, 0xe42a, 0x1bcf, 0xe95a, 0x0, 0x1);
        gbc.writeMem(0xcc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xaa19);
        EXPECT(gbc.pc(), 0xce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01F5
        gbc.setState(0x6bdd, 0xa0fd, 0x5180, 0x903b, 0x12f6, 0xb6b1, 0x1, 0x0);
        gbc.writeMem(0x6bdd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa0fd);
        EXPECT(gbc.pc(), 0x6bdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01F6
        gbc.setState(0x76ce, 0x3897, 0x9560, 0x767d, 0x836b, 0xb8c6, 0x1, 0x0);
        gbc.writeMem(0x76ce, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3897);
        EXPECT(gbc.pc(), 0x76d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01F7
        gbc.setState(0xe422, 0xe5aa, 0x3af0, 0x33b1, 0x13a, 0xdd77, 0x0, 0x1);
        gbc.writeMem(0xe422, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe5aa);
        EXPECT(gbc.pc(), 0xe424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe422), 0xcb);
        EXPECT(gbc.readMem(0xe423), 0x40);
        // CB 40 01F8
        gbc.setState(0x652, 0x9649, 0x82e0, 0x2272, 0xe27b, 0x8639, 0x0, 0x0);
        gbc.writeMem(0x652, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9649);
        EXPECT(gbc.pc(), 0x654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01F9
        gbc.setState(0x1f85, 0xc8a6, 0xbdb0, 0xbfe8, 0xdc3, 0x50ff, 0x0, 0x1);
        gbc.writeMem(0x1f85, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc8a6);
        EXPECT(gbc.pc(), 0x1f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01FA
        gbc.setState(0x6d11, 0x3a64, 0xaa0, 0xab80, 0xe274, 0x2844, 0x0, 0x0);
        gbc.writeMem(0x6d11, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3a64);
        EXPECT(gbc.pc(), 0x6d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 01FC
        gbc.setState(0x15c8, 0x27ea, 0xe130, 0x7a93, 0x8285, 0xd2f5, 0x1, 0x1);
        gbc.writeMem(0x15c8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x27ea);
        EXPECT(gbc.pc(), 0x15ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01FD
        gbc.setState(0x54dc, 0x53d3, 0xde30, 0x4b7a, 0xcea7, 0xedf1, 0x1, 0x0);
        gbc.writeMem(0x54dc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x53d3);
        EXPECT(gbc.pc(), 0x54de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01FE
        gbc.setState(0x6339, 0x5bea, 0xd2b0, 0x504d, 0x6598, 0xc635, 0x1, 0x1);
        gbc.writeMem(0x6339, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5bea);
        EXPECT(gbc.pc(), 0x633b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 01FF
        gbc.setState(0xb044, 0xfce1, 0x2700, 0x735c, 0x1563, 0xdb37, 0x1, 0x0);
        gbc.writeMem(0xb044, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfce1);
        EXPECT(gbc.pc(), 0xb046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb044), 0xcb);
        EXPECT(gbc.readMem(0xb045), 0x40);
        // CB 40 0201
        gbc.setState(0xc67e, 0x44da, 0x140, 0x644, 0xa25e, 0x78f4, 0x1, 0x0);
        gbc.writeMem(0xc67e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x44da);
        EXPECT(gbc.pc(), 0xc680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67e), 0xcb);
        EXPECT(gbc.readMem(0xc67f), 0x40);
        // CB 40 0202
        gbc.setState(0x86e, 0x5cf8, 0x8d50, 0x3435, 0x7c80, 0xd286, 0x1, 0x0);
        gbc.writeMem(0x86e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5cf8);
        EXPECT(gbc.pc(), 0x870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0203
        gbc.setState(0x2d31, 0x8cb2, 0x1a70, 0x5985, 0xdb41, 0x6026, 0x0, 0x0);
        gbc.writeMem(0x2d31, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8cb2);
        EXPECT(gbc.pc(), 0x2d33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0204
        gbc.setState(0xdafb, 0xed66, 0x38e0, 0x90c6, 0x6236, 0x9fe9, 0x0, 0x0);
        gbc.writeMem(0xdafb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xed66);
        EXPECT(gbc.pc(), 0xdafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdafb), 0xcb);
        EXPECT(gbc.readMem(0xdafc), 0x40);
        // CB 40 0205
        gbc.setState(0x7a58, 0x670a, 0x95a0, 0xab8d, 0x8c8f, 0x9268, 0x1, 0x0);
        gbc.writeMem(0x7a58, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x670a);
        EXPECT(gbc.pc(), 0x7a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0206
        gbc.setState(0x64e5, 0x7c74, 0x6a50, 0x29a9, 0x3dd7, 0xeccd, 0x0, 0x0);
        gbc.writeMem(0x64e5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7c74);
        EXPECT(gbc.pc(), 0x64e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0207
        gbc.setState(0x59a1, 0x8492, 0xfb90, 0x94a1, 0x812e, 0xd700, 0x1, 0x1);
        gbc.writeMem(0x59a1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8492);
        EXPECT(gbc.pc(), 0x59a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0208
        gbc.setState(0x7c43, 0x16c7, 0x8960, 0x3021, 0xba0c, 0xaca7, 0x1, 0x0);
        gbc.writeMem(0x7c43, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x16c7);
        EXPECT(gbc.pc(), 0x7c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0209
        gbc.setState(0x7e64, 0x9578, 0x8190, 0x5ff9, 0xc37a, 0x9f53, 0x0, 0x0);
        gbc.writeMem(0x7e64, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9578);
        EXPECT(gbc.pc(), 0x7e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 020A
        gbc.setState(0x6543, 0x8a56, 0xff00, 0xf0a6, 0x4b99, 0x938d, 0x0, 0x1);
        gbc.writeMem(0x6543, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8a56);
        EXPECT(gbc.pc(), 0x6545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 020B
        gbc.setState(0x5dae, 0xc350, 0x3940, 0x830d, 0x40b, 0x8342, 0x0, 0x0);
        gbc.writeMem(0x5dae, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc350);
        EXPECT(gbc.pc(), 0x5db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 020C
        gbc.setState(0x8809, 0xbb02, 0xe4f0, 0xfd2e, 0x403d, 0xcd21, 0x0, 0x1);
        gbc.writeMem(0x8809, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbb02);
        EXPECT(gbc.pc(), 0x880b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8809), 0xcb);
        EXPECT(gbc.readMem(0x880a), 0x40);
        // CB 40 020D
        gbc.setState(0xcb39, 0x2c57, 0x32d0, 0x6254, 0x601d, 0x6c64, 0x0, 0x0);
        gbc.writeMem(0xcb39, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2c57);
        EXPECT(gbc.pc(), 0xcb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb39), 0xcb);
        EXPECT(gbc.readMem(0xcb3a), 0x40);
        // CB 40 020E
        gbc.setState(0x517c, 0x223b, 0x2a40, 0xd118, 0x1ac0, 0xe7ce, 0x1, 0x0);
        gbc.writeMem(0x517c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x223b);
        EXPECT(gbc.pc(), 0x517e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 020F
        gbc.setState(0x73b6, 0xdccd, 0xde60, 0x3fcb, 0x6279, 0xc548, 0x0, 0x0);
        gbc.writeMem(0x73b6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdccd);
        EXPECT(gbc.pc(), 0x73b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0210
        gbc.setState(0x2714, 0xf81, 0x5480, 0x95a5, 0xf15, 0x7424, 0x1, 0x0);
        gbc.writeMem(0x2714, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf81);
        EXPECT(gbc.pc(), 0x2716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0211
        gbc.setState(0x29e4, 0x4922, 0x86b0, 0xfbd8, 0xd00d, 0xa853, 0x0, 0x1);
        gbc.writeMem(0x29e4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4922);
        EXPECT(gbc.pc(), 0x29e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0212
        gbc.setState(0x2a13, 0x2693, 0x7ee0, 0xa26, 0xb683, 0x5ad6, 0x1, 0x0);
        gbc.writeMem(0x2a13, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2693);
        EXPECT(gbc.pc(), 0x2a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0213
        gbc.setState(0x7f1b, 0xf541, 0xc0c0, 0xa56d, 0xfe33, 0x3c2d, 0x0, 0x0);
        gbc.writeMem(0x7f1b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf541);
        EXPECT(gbc.pc(), 0x7f1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0214
        gbc.setState(0x93c9, 0x4cf9, 0xaea0, 0xdfb3, 0xc2cd, 0x8078, 0x0, 0x0);
        gbc.writeMem(0x93c9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4cf9);
        EXPECT(gbc.pc(), 0x93cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c9), 0xcb);
        EXPECT(gbc.readMem(0x93ca), 0x40);
        // CB 40 0215
        gbc.setState(0x5535, 0x9722, 0xfaf0, 0x34e5, 0x9af4, 0x21c9, 0x1, 0x1);
        gbc.writeMem(0x5535, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9722);
        EXPECT(gbc.pc(), 0x5537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0216
        gbc.setState(0x2295, 0x9ffa, 0x21b0, 0x23fb, 0x96d6, 0x1d6, 0x0, 0x0);
        gbc.writeMem(0x2295, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9ffa);
        EXPECT(gbc.pc(), 0x2297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0217
        gbc.setState(0xdf41, 0xe0dd, 0xf4d0, 0xe68b, 0xbc6b, 0x77a8, 0x0, 0x0);
        gbc.writeMem(0xdf41, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe0dd);
        EXPECT(gbc.pc(), 0xdf43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf41), 0xcb);
        EXPECT(gbc.readMem(0xdf42), 0x40);
        // CB 40 0218
        gbc.setState(0xda10, 0xe0f9, 0x2200, 0xff5, 0x91ae, 0x40bc, 0x1, 0x1);
        gbc.writeMem(0xda10, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe0f9);
        EXPECT(gbc.pc(), 0xda12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda10), 0xcb);
        EXPECT(gbc.readMem(0xda11), 0x40);
        // CB 40 0219
        gbc.setState(0xcef2, 0x368, 0xad40, 0x270f, 0x408, 0x2aa4, 0x1, 0x1);
        gbc.writeMem(0xcef2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x368);
        EXPECT(gbc.pc(), 0xcef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef2), 0xcb);
        EXPECT(gbc.readMem(0xcef3), 0x40);
        // CB 40 021A
        gbc.setState(0xed71, 0x4a7c, 0xd5e0, 0x5124, 0x80af, 0x3b6d, 0x0, 0x1);
        gbc.writeMem(0xed71, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4a7c);
        EXPECT(gbc.pc(), 0xed73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed71), 0xcb);
        EXPECT(gbc.readMem(0xed72), 0x40);
        // CB 40 021B
        gbc.setState(0xb48b, 0xe5c9, 0x9fe0, 0xae30, 0x6e9e, 0xe8af, 0x1, 0x1);
        gbc.writeMem(0xb48b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe5c9);
        EXPECT(gbc.pc(), 0xb48d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb48b), 0xcb);
        EXPECT(gbc.readMem(0xb48c), 0x40);
        // CB 40 021C
        gbc.setState(0xbb40, 0x7143, 0x5190, 0xd75e, 0x9972, 0xcd07, 0x0, 0x1);
        gbc.writeMem(0xbb40, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7143);
        EXPECT(gbc.pc(), 0xbb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb40), 0xcb);
        EXPECT(gbc.readMem(0xbb41), 0x40);
        // CB 40 021D
        gbc.setState(0x5b79, 0x2781, 0x4a80, 0x8f1b, 0xa299, 0xbbb5, 0x1, 0x0);
        gbc.writeMem(0x5b79, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2781);
        EXPECT(gbc.pc(), 0x5b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 021E
        gbc.setState(0xb162, 0x6940, 0x7820, 0x8326, 0xb4de, 0x8c35, 0x0, 0x0);
        gbc.writeMem(0xb162, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6940);
        EXPECT(gbc.pc(), 0xb164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb162), 0xcb);
        EXPECT(gbc.readMem(0xb163), 0x40);
        // CB 40 021F
        gbc.setState(0x8d18, 0xf202, 0xb400, 0x8ed6, 0x29de, 0x2a8, 0x0, 0x1);
        gbc.writeMem(0x8d18, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf202);
        EXPECT(gbc.pc(), 0x8d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d18), 0xcb);
        EXPECT(gbc.readMem(0x8d19), 0x40);
        // CB 40 0220
        gbc.setState(0x56bb, 0x75ec, 0xb5e0, 0x2f3a, 0x7bd0, 0x3d6d, 0x0, 0x1);
        gbc.writeMem(0x56bb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x75ec);
        EXPECT(gbc.pc(), 0x56bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0221
        gbc.setState(0xdb13, 0x92d7, 0x8420, 0xc90, 0xd08e, 0x7c47, 0x1, 0x1);
        gbc.writeMem(0xdb13, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x92d7);
        EXPECT(gbc.pc(), 0xdb15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb13), 0xcb);
        EXPECT(gbc.readMem(0xdb14), 0x40);
        // CB 40 0222
        gbc.setState(0x433d, 0x14cd, 0x22f0, 0x5780, 0x52e9, 0x1f2f, 0x0, 0x0);
        gbc.writeMem(0x433d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x14cd);
        EXPECT(gbc.pc(), 0x433f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0223
        gbc.setState(0x2953, 0x1988, 0xf520, 0xa79c, 0xd9e2, 0x6c31, 0x0, 0x0);
        gbc.writeMem(0x2953, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1988);
        EXPECT(gbc.pc(), 0x2955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0224
        gbc.setState(0x51fa, 0x61f4, 0x1f90, 0x4b81, 0xe877, 0x58a2, 0x1, 0x0);
        gbc.writeMem(0x51fa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x61f4);
        EXPECT(gbc.pc(), 0x51fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0225
        gbc.setState(0xc764, 0x9fc2, 0xc6e0, 0x11ae, 0xc348, 0x6b4e, 0x0, 0x0);
        gbc.writeMem(0xc764, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9fc2);
        EXPECT(gbc.pc(), 0xc766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc764), 0xcb);
        EXPECT(gbc.readMem(0xc765), 0x40);
        // CB 40 0226
        gbc.setState(0x176c, 0x4694, 0x8da0, 0x272d, 0x1080, 0x574c, 0x0, 0x1);
        gbc.writeMem(0x176c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4694);
        EXPECT(gbc.pc(), 0x176e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0228
        gbc.setState(0x5ee5, 0x5c49, 0xb2f0, 0xaabd, 0x820c, 0x7b4a, 0x1, 0x1);
        gbc.writeMem(0x5ee5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5c49);
        EXPECT(gbc.pc(), 0x5ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0229
        gbc.setState(0x7e47, 0x3b96, 0xfa30, 0x974, 0xa731, 0xaab, 0x0, 0x0);
        gbc.writeMem(0x7e47, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3b96);
        EXPECT(gbc.pc(), 0x7e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 022A
        gbc.setState(0xa70a, 0x8e28, 0xec00, 0x60d1, 0x4a9e, 0xf383, 0x0, 0x1);
        gbc.writeMem(0xa70a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8e28);
        EXPECT(gbc.pc(), 0xa70c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa70a), 0xcb);
        EXPECT(gbc.readMem(0xa70b), 0x40);
        // CB 40 022B
        gbc.setState(0x878e, 0xfafd, 0xd260, 0xbfea, 0x5883, 0x1365, 0x1, 0x1);
        gbc.writeMem(0x878e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfafd);
        EXPECT(gbc.pc(), 0x8790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x878e), 0xcb);
        EXPECT(gbc.readMem(0x878f), 0x40);
        // CB 40 022C
        gbc.setState(0x2f13, 0x55b9, 0x43e0, 0xe5ba, 0x3271, 0x9864, 0x0, 0x1);
        gbc.writeMem(0x2f13, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x55b9);
        EXPECT(gbc.pc(), 0x2f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 022D
        gbc.setState(0x77a4, 0x58b2, 0xea70, 0x62f9, 0xa844, 0x73da, 0x1, 0x1);
        gbc.writeMem(0x77a4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x58b2);
        EXPECT(gbc.pc(), 0x77a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 022E
        gbc.setState(0x8743, 0x30fe, 0x4cf0, 0x55a3, 0x9983, 0x73e4, 0x0, 0x0);
        gbc.writeMem(0x8743, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x30fe);
        EXPECT(gbc.pc(), 0x8745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8743), 0xcb);
        EXPECT(gbc.readMem(0x8744), 0x40);
        // CB 40 022F
        gbc.setState(0x8f42, 0x1185, 0x7c60, 0x3482, 0x5899, 0x7526, 0x1, 0x0);
        gbc.writeMem(0x8f42, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1185);
        EXPECT(gbc.pc(), 0x8f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f42), 0xcb);
        EXPECT(gbc.readMem(0x8f43), 0x40);
        // CB 40 0230
        gbc.setState(0x81da, 0x2d9f, 0x32d0, 0x4669, 0x5ec, 0x5af9, 0x0, 0x0);
        gbc.writeMem(0x81da, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2d9f);
        EXPECT(gbc.pc(), 0x81dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81da), 0xcb);
        EXPECT(gbc.readMem(0x81db), 0x40);
        // CB 40 0231
        gbc.setState(0x6727, 0xb11e, 0x7fe0, 0x24a2, 0xa4ef, 0x8abb, 0x0, 0x0);
        gbc.writeMem(0x6727, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb11e);
        EXPECT(gbc.pc(), 0x6729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0232
        gbc.setState(0x7fb5, 0x7632, 0x250, 0x79e2, 0x5d65, 0x1a59, 0x0, 0x1);
        gbc.writeMem(0x7fb5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7632);
        EXPECT(gbc.pc(), 0x7fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0233
        gbc.setState(0xecdc, 0x3c2b, 0xbc20, 0x6b5e, 0xd243, 0x1056, 0x1, 0x0);
        gbc.writeMem(0xecdc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3c2b);
        EXPECT(gbc.pc(), 0xecde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecdc), 0xcb);
        EXPECT(gbc.readMem(0xecdd), 0x40);
        // CB 40 0234
        gbc.setState(0x6dc0, 0x4792, 0x39a0, 0x7ead, 0x9a6f, 0x11a2, 0x0, 0x1);
        gbc.writeMem(0x6dc0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4792);
        EXPECT(gbc.pc(), 0x6dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0235
        gbc.setState(0x6211, 0x4ffb, 0xa960, 0xfb40, 0xb35c, 0x1e0e, 0x1, 0x0);
        gbc.writeMem(0x6211, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4ffb);
        EXPECT(gbc.pc(), 0x6213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0236
        gbc.setState(0xc54f, 0x339, 0x5a50, 0x4cce, 0x64a3, 0xfac5, 0x0, 0x1);
        gbc.writeMem(0xc54f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x339);
        EXPECT(gbc.pc(), 0xc551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc54f), 0xcb);
        EXPECT(gbc.readMem(0xc550), 0x40);
        // CB 40 0237
        gbc.setState(0x6970, 0xe3c, 0x28d0, 0x225b, 0x66db, 0x44eb, 0x0, 0x0);
        gbc.writeMem(0x6970, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe3c);
        EXPECT(gbc.pc(), 0x6972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0238
        gbc.setState(0x3458, 0xf1ca, 0xe580, 0x8d46, 0x6ec8, 0xe41e, 0x0, 0x1);
        gbc.writeMem(0x3458, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf1ca);
        EXPECT(gbc.pc(), 0x345a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 023A
        gbc.setState(0x5850, 0xb182, 0xdfc0, 0x3fc3, 0xc43e, 0x9a65, 0x1, 0x1);
        gbc.writeMem(0x5850, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb182);
        EXPECT(gbc.pc(), 0x5852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 023B
        gbc.setState(0xb82, 0xea4b, 0x9870, 0x8cd4, 0x96f9, 0x483b, 0x1, 0x1);
        gbc.writeMem(0xb82, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xea4b);
        EXPECT(gbc.pc(), 0xb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 023C
        gbc.setState(0xa726, 0x440, 0x7d20, 0x5a1e, 0xffe6, 0x9e7, 0x1, 0x0);
        gbc.writeMem(0xa726, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x440);
        EXPECT(gbc.pc(), 0xa728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa726), 0xcb);
        EXPECT(gbc.readMem(0xa727), 0x40);
        // CB 40 023D
        gbc.setState(0x7e4c, 0xfb89, 0xd4d0, 0x2cb, 0xa2f5, 0x66c6, 0x1, 0x1);
        gbc.writeMem(0x7e4c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfb89);
        EXPECT(gbc.pc(), 0x7e4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 023E
        gbc.setState(0xe456, 0x214f, 0x3620, 0xbbae, 0x21d7, 0xb275, 0x0, 0x0);
        gbc.writeMem(0xe456, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x214f);
        EXPECT(gbc.pc(), 0xe458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe456), 0xcb);
        EXPECT(gbc.readMem(0xe457), 0x40);
        // CB 40 023F
        gbc.setState(0xb3b5, 0x2494, 0xca50, 0x745d, 0xc8ef, 0x5475, 0x0, 0x1);
        gbc.writeMem(0xb3b5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2494);
        EXPECT(gbc.pc(), 0xb3b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b5), 0xcb);
        EXPECT(gbc.readMem(0xb3b6), 0x40);
        // CB 40 0240
        gbc.setState(0x7bc7, 0x82ac, 0x7e80, 0xe33a, 0x447e, 0x4de, 0x0, 0x1);
        gbc.writeMem(0x7bc7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x82ac);
        EXPECT(gbc.pc(), 0x7bc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0241
        gbc.setState(0x42e2, 0x5146, 0xf260, 0x42ac, 0x8b00, 0x7b1b, 0x1, 0x1);
        gbc.writeMem(0x42e2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5146);
        EXPECT(gbc.pc(), 0x42e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0242
        gbc.setState(0xb25e, 0x8059, 0x40f0, 0x604a, 0x2673, 0x3e4f, 0x1, 0x1);
        gbc.writeMem(0xb25e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8059);
        EXPECT(gbc.pc(), 0xb260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25e), 0xcb);
        EXPECT(gbc.readMem(0xb25f), 0x40);
        // CB 40 0243
        gbc.setState(0x64da, 0xd66b, 0xb5c0, 0x7f9c, 0x3ba3, 0xcb3, 0x1, 0x1);
        gbc.writeMem(0x64da, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd66b);
        EXPECT(gbc.pc(), 0x64dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0244
        gbc.setState(0x3f0f, 0xa084, 0x58a0, 0xbd6b, 0xf59e, 0x7e2c, 0x0, 0x1);
        gbc.writeMem(0x3f0f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa084);
        EXPECT(gbc.pc(), 0x3f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0245
        gbc.setState(0x55ed, 0xdd8c, 0xdb20, 0x4ada, 0x63fe, 0x5647, 0x0, 0x0);
        gbc.writeMem(0x55ed, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdd8c);
        EXPECT(gbc.pc(), 0x55ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0246
        gbc.setState(0x340f, 0xfaa4, 0x7600, 0x148e, 0x9f2, 0x41ea, 0x0, 0x1);
        gbc.writeMem(0x340f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfaa4);
        EXPECT(gbc.pc(), 0x3411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0248
        gbc.setState(0xab5, 0xda04, 0x3970, 0x2ef2, 0x5160, 0x901, 0x1, 0x1);
        gbc.writeMem(0xab5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xda04);
        EXPECT(gbc.pc(), 0xab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0249
        gbc.setState(0xa1fd, 0x39fc, 0xfbe0, 0x2725, 0xa4d4, 0x6490, 0x0, 0x1);
        gbc.writeMem(0xa1fd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x39fc);
        EXPECT(gbc.pc(), 0xa1ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1fd), 0xcb);
        EXPECT(gbc.readMem(0xa1fe), 0x40);
        // CB 40 024A
        gbc.setState(0x2c72, 0x2b6, 0x9d80, 0xf646, 0x3988, 0xba20, 0x0, 0x0);
        gbc.writeMem(0x2c72, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2b6);
        EXPECT(gbc.pc(), 0x2c74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 024B
        gbc.setState(0xd0be, 0x4055, 0xc410, 0xac59, 0x2ce5, 0xd7db, 0x0, 0x1);
        gbc.writeMem(0xd0be, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4055);
        EXPECT(gbc.pc(), 0xd0c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0be), 0xcb);
        EXPECT(gbc.readMem(0xd0bf), 0x40);
        // CB 40 024D
        gbc.setState(0xd2eb, 0x5ff6, 0x2690, 0x7c07, 0xfcb9, 0xaccd, 0x1, 0x0);
        gbc.writeMem(0xd2eb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5ff6);
        EXPECT(gbc.pc(), 0xd2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2eb), 0xcb);
        EXPECT(gbc.readMem(0xd2ec), 0x40);
        // CB 40 024E
        gbc.setState(0x5588, 0xf478, 0xa090, 0x5803, 0x9c8e, 0x8e50, 0x1, 0x1);
        gbc.writeMem(0x5588, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf478);
        EXPECT(gbc.pc(), 0x558a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 024F
        gbc.setState(0xbf83, 0xbef4, 0x9180, 0x4d9f, 0xea4e, 0xb67f, 0x1, 0x0);
        gbc.writeMem(0xbf83, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbef4);
        EXPECT(gbc.pc(), 0xbf85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf83), 0xcb);
        EXPECT(gbc.readMem(0xbf84), 0x40);
        // CB 40 0250
        gbc.setState(0xbb59, 0x186f, 0x5d90, 0xde61, 0x586f, 0xf22b, 0x1, 0x1);
        gbc.writeMem(0xbb59, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x186f);
        EXPECT(gbc.pc(), 0xbb5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb59), 0xcb);
        EXPECT(gbc.readMem(0xbb5a), 0x40);
        // CB 40 0251
        gbc.setState(0x849b, 0xed4b, 0xdcb0, 0x810d, 0x3a9b, 0x1090, 0x1, 0x0);
        gbc.writeMem(0x849b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xed4b);
        EXPECT(gbc.pc(), 0x849d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849b), 0xcb);
        EXPECT(gbc.readMem(0x849c), 0x40);
        // CB 40 0254
        gbc.setState(0x869c, 0x6ce9, 0x9370, 0xad70, 0xea42, 0xdd6b, 0x1, 0x1);
        gbc.writeMem(0x869c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6ce9);
        EXPECT(gbc.pc(), 0x869e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x869c), 0xcb);
        EXPECT(gbc.readMem(0x869d), 0x40);
        // CB 40 0255
        gbc.setState(0xa987, 0x7375, 0x62d0, 0x1f4c, 0xdc6e, 0xbfca, 0x0, 0x1);
        gbc.writeMem(0xa987, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7375);
        EXPECT(gbc.pc(), 0xa989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa987), 0xcb);
        EXPECT(gbc.readMem(0xa988), 0x40);
        // CB 40 0256
        gbc.setState(0x1528, 0x2854, 0x3f90, 0xc9b2, 0xbae, 0xdd99, 0x0, 0x1);
        gbc.writeMem(0x1528, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2854);
        EXPECT(gbc.pc(), 0x152a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0257
        gbc.setState(0xe6e7, 0x9ca8, 0xd620, 0x1f1a, 0x678a, 0xc112, 0x0, 0x0);
        gbc.writeMem(0xe6e7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9ca8);
        EXPECT(gbc.pc(), 0xe6e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e7), 0xcb);
        EXPECT(gbc.readMem(0xe6e8), 0x40);
        // CB 40 0258
        gbc.setState(0x686e, 0x5469, 0xa450, 0x9912, 0xd024, 0xa14d, 0x0, 0x1);
        gbc.writeMem(0x686e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5469);
        EXPECT(gbc.pc(), 0x6870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0259
        gbc.setState(0x814c, 0x51c2, 0x9300, 0xde45, 0x90c8, 0x7494, 0x0, 0x0);
        gbc.writeMem(0x814c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x51c2);
        EXPECT(gbc.pc(), 0x814e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x814c), 0xcb);
        EXPECT(gbc.readMem(0x814d), 0x40);
        // CB 40 025A
        gbc.setState(0x595c, 0xf970, 0xf210, 0x7b62, 0xd2e, 0x11df, 0x1, 0x0);
        gbc.writeMem(0x595c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf970);
        EXPECT(gbc.pc(), 0x595e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 025B
        gbc.setState(0xd9a1, 0x7541, 0x8560, 0xba05, 0x65f2, 0xac8a, 0x0, 0x1);
        gbc.writeMem(0xd9a1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7541);
        EXPECT(gbc.pc(), 0xd9a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a1), 0xcb);
        EXPECT(gbc.readMem(0xd9a2), 0x40);
        // CB 40 025C
        gbc.setState(0x657a, 0xe6c7, 0x6a0, 0x554c, 0x4b4d, 0xdea4, 0x0, 0x1);
        gbc.writeMem(0x657a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe6c7);
        EXPECT(gbc.pc(), 0x657c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 025D
        gbc.setState(0xa5df, 0xf7a8, 0x84a0, 0xfdf2, 0xbfec, 0x8b1, 0x1, 0x1);
        gbc.writeMem(0xa5df, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf7a8);
        EXPECT(gbc.pc(), 0xa5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5df), 0xcb);
        EXPECT(gbc.readMem(0xa5e0), 0x40);
        // CB 40 025E
        gbc.setState(0xbbad, 0xfc31, 0xf290, 0x72c8, 0x7c55, 0xd52a, 0x0, 0x0);
        gbc.writeMem(0xbbad, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfc31);
        EXPECT(gbc.pc(), 0xbbaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbad), 0xcb);
        EXPECT(gbc.readMem(0xbbae), 0x40);
        // CB 40 025F
        gbc.setState(0xd706, 0x7d31, 0x6800, 0xf5f, 0x47ae, 0x2fa1, 0x1, 0x0);
        gbc.writeMem(0xd706, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7d31);
        EXPECT(gbc.pc(), 0xd708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd706), 0xcb);
        EXPECT(gbc.readMem(0xd707), 0x40);
        // CB 40 0261
        gbc.setState(0xd78, 0x107d, 0x6c40, 0x5092, 0x53ed, 0x2328, 0x0, 0x1);
        gbc.writeMem(0xd78, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x107d);
        EXPECT(gbc.pc(), 0xd7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0262
        gbc.setState(0xcfd7, 0xcf50, 0x3360, 0x5e3b, 0xa537, 0xed4c, 0x1, 0x1);
        gbc.writeMem(0xcfd7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcf50);
        EXPECT(gbc.pc(), 0xcfd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd7), 0xcb);
        EXPECT(gbc.readMem(0xcfd8), 0x40);
        // CB 40 0263
        gbc.setState(0xbb28, 0x534c, 0x83d0, 0x2bc7, 0xe892, 0x904, 0x0, 0x1);
        gbc.writeMem(0xbb28, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x534c);
        EXPECT(gbc.pc(), 0xbb2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb28), 0xcb);
        EXPECT(gbc.readMem(0xbb29), 0x40);
        // CB 40 0264
        gbc.setState(0x7c29, 0x364d, 0x2d20, 0x5be9, 0x9be6, 0xab85, 0x1, 0x1);
        gbc.writeMem(0x7c29, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x364d);
        EXPECT(gbc.pc(), 0x7c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0265
        gbc.setState(0x4735, 0x8c93, 0x2e30, 0x66fb, 0x8eb6, 0xc852, 0x1, 0x0);
        gbc.writeMem(0x4735, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8c93);
        EXPECT(gbc.pc(), 0x4737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0266
        gbc.setState(0x66b7, 0x5734, 0x8280, 0x8d, 0x65d9, 0x1f58, 0x1, 0x0);
        gbc.writeMem(0x66b7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5734);
        EXPECT(gbc.pc(), 0x66b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0267
        gbc.setState(0x8143, 0x1e26, 0x36c0, 0x1937, 0xebbc, 0x40f5, 0x0, 0x0);
        gbc.writeMem(0x8143, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1e26);
        EXPECT(gbc.pc(), 0x8145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8143), 0xcb);
        EXPECT(gbc.readMem(0x8144), 0x40);
        // CB 40 0268
        gbc.setState(0x48a3, 0xca6f, 0xd110, 0x47e0, 0xf61a, 0x5fde, 0x1, 0x0);
        gbc.writeMem(0x48a3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xca6f);
        EXPECT(gbc.pc(), 0x48a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0269
        gbc.setState(0xdc63, 0x1b29, 0x8970, 0x8730, 0x8237, 0xdd4d, 0x0, 0x1);
        gbc.writeMem(0xdc63, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1b29);
        EXPECT(gbc.pc(), 0xdc65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc63), 0xcb);
        EXPECT(gbc.readMem(0xdc64), 0x40);
        // CB 40 026A
        gbc.setState(0xc627, 0x51e7, 0xfda0, 0xe990, 0xbcde, 0x1098, 0x0, 0x1);
        gbc.writeMem(0xc627, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x51e7);
        EXPECT(gbc.pc(), 0xc629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc627), 0xcb);
        EXPECT(gbc.readMem(0xc628), 0x40);
        // CB 40 026B
        gbc.setState(0x6b76, 0xb8ea, 0x13b0, 0xad2a, 0xb86b, 0x2cda, 0x1, 0x0);
        gbc.writeMem(0x6b76, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb8ea);
        EXPECT(gbc.pc(), 0x6b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 026C
        gbc.setState(0xc518, 0xbb1c, 0xb630, 0xf3ac, 0xd4bc, 0x28c7, 0x0, 0x0);
        gbc.writeMem(0xc518, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbb1c);
        EXPECT(gbc.pc(), 0xc51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc518), 0xcb);
        EXPECT(gbc.readMem(0xc519), 0x40);
        // CB 40 026D
        gbc.setState(0x9b68, 0xd028, 0xb70, 0x99c2, 0x4a89, 0x5812, 0x1, 0x0);
        gbc.writeMem(0x9b68, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd028);
        EXPECT(gbc.pc(), 0x9b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b68), 0xcb);
        EXPECT(gbc.readMem(0x9b69), 0x40);
        // CB 40 026E
        gbc.setState(0x691c, 0xe363, 0xd3c0, 0x4b5a, 0xc52a, 0xdb9f, 0x0, 0x1);
        gbc.writeMem(0x691c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe363);
        EXPECT(gbc.pc(), 0x691e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0270
        gbc.setState(0x27ec, 0xaa4c, 0xae30, 0x39c2, 0x6e06, 0x38da, 0x1, 0x0);
        gbc.writeMem(0x27ec, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xaa4c);
        EXPECT(gbc.pc(), 0x27ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0271
        gbc.setState(0xdb3e, 0x6e8c, 0x4fb0, 0x95d6, 0xf014, 0xfc85, 0x0, 0x0);
        gbc.writeMem(0xdb3e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6e8c);
        EXPECT(gbc.pc(), 0xdb40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3e), 0xcb);
        EXPECT(gbc.readMem(0xdb3f), 0x40);
        // CB 40 0272
        gbc.setState(0xaeca, 0xb565, 0x900, 0xd5fe, 0x958d, 0x58d9, 0x1, 0x1);
        gbc.writeMem(0xaeca, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb565);
        EXPECT(gbc.pc(), 0xaecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeca), 0xcb);
        EXPECT(gbc.readMem(0xaecb), 0x40);
        // CB 40 0273
        gbc.setState(0x9129, 0xaaa9, 0xdeb0, 0xc4a0, 0x39ad, 0x67a6, 0x1, 0x0);
        gbc.writeMem(0x9129, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xaaa9);
        EXPECT(gbc.pc(), 0x912b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9129), 0xcb);
        EXPECT(gbc.readMem(0x912a), 0x40);
        // CB 40 0274
        gbc.setState(0x4ad3, 0xcbc2, 0x1fd0, 0xe98, 0xc683, 0x68b9, 0x1, 0x1);
        gbc.writeMem(0x4ad3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcbc2);
        EXPECT(gbc.pc(), 0x4ad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0275
        gbc.setState(0x2410, 0x4e8f, 0x92e0, 0xf069, 0x977d, 0x46de, 0x0, 0x1);
        gbc.writeMem(0x2410, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4e8f);
        EXPECT(gbc.pc(), 0x2412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0276
        gbc.setState(0x76f6, 0x90d0, 0xa160, 0xd2e, 0xe7ea, 0xb51a, 0x0, 0x0);
        gbc.writeMem(0x76f6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x90d0);
        EXPECT(gbc.pc(), 0x76f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0277
        gbc.setState(0x1ac7, 0x75f, 0x8290, 0x89f9, 0x335e, 0x620b, 0x0, 0x0);
        gbc.writeMem(0x1ac7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x75f);
        EXPECT(gbc.pc(), 0x1ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0278
        gbc.setState(0xdee6, 0x4937, 0x8dc0, 0xb592, 0xee12, 0x15da, 0x0, 0x1);
        gbc.writeMem(0xdee6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4937);
        EXPECT(gbc.pc(), 0xdee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee6), 0xcb);
        EXPECT(gbc.readMem(0xdee7), 0x40);
        // CB 40 0279
        gbc.setState(0x2e2b, 0xe19f, 0x37a0, 0xf191, 0x18c7, 0xec91, 0x0, 0x1);
        gbc.writeMem(0x2e2b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe19f);
        EXPECT(gbc.pc(), 0x2e2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 027A
        gbc.setState(0x36e7, 0xf878, 0xb4e0, 0xf625, 0x32ab, 0x3502, 0x1, 0x0);
        gbc.writeMem(0x36e7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf878);
        EXPECT(gbc.pc(), 0x36e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 027C
        gbc.setState(0x46e, 0xd452, 0xabf0, 0xa078, 0xdf0a, 0xff81, 0x1, 0x1);
        gbc.writeMem(0x46e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd452);
        EXPECT(gbc.pc(), 0x470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 027D
        gbc.setState(0xd2de, 0x6e1e, 0xbc70, 0x3eef, 0xb95c, 0x23f3, 0x1, 0x1);
        gbc.writeMem(0xd2de, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6e1e);
        EXPECT(gbc.pc(), 0xd2e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2de), 0xcb);
        EXPECT(gbc.readMem(0xd2df), 0x40);
        // CB 40 027E
        gbc.setState(0x4287, 0xd809, 0x6e30, 0xffd2, 0x9565, 0x2fc5, 0x0, 0x0);
        gbc.writeMem(0x4287, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd809);
        EXPECT(gbc.pc(), 0x4289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 027F
        gbc.setState(0x920f, 0xe60f, 0x3ee0, 0x7dbe, 0x2750, 0xff7a, 0x1, 0x1);
        gbc.writeMem(0x920f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe60f);
        EXPECT(gbc.pc(), 0x9211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x920f), 0xcb);
        EXPECT(gbc.readMem(0x9210), 0x40);
        // CB 40 0280
        gbc.setState(0x3515, 0x25f2, 0x4530, 0xfeb0, 0xa1f0, 0x997a, 0x0, 0x0);
        gbc.writeMem(0x3515, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x25f2);
        EXPECT(gbc.pc(), 0x3517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0281
        gbc.setState(0xe24b, 0x1582, 0xbf90, 0x5a5c, 0xda6, 0xa4a4, 0x1, 0x0);
        gbc.writeMem(0xe24b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1582);
        EXPECT(gbc.pc(), 0xe24d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24b), 0xcb);
        EXPECT(gbc.readMem(0xe24c), 0x40);
        // CB 40 0282
        gbc.setState(0xaa11, 0x66ea, 0x4300, 0x2e86, 0x8bab, 0x91f3, 0x1, 0x1);
        gbc.writeMem(0xaa11, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x66ea);
        EXPECT(gbc.pc(), 0xaa13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa11), 0xcb);
        EXPECT(gbc.readMem(0xaa12), 0x40);
        // CB 40 0283
        gbc.setState(0xe08b, 0xdcc9, 0x24a0, 0xbaec, 0xf04, 0xf4f9, 0x0, 0x1);
        gbc.writeMem(0xe08b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdcc9);
        EXPECT(gbc.pc(), 0xe08d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe08b), 0xcb);
        EXPECT(gbc.readMem(0xe08c), 0x40);
        // CB 40 0284
        gbc.setState(0x4342, 0x657c, 0x8290, 0x14d3, 0x2821, 0xb1dd, 0x1, 0x0);
        gbc.writeMem(0x4342, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x657c);
        EXPECT(gbc.pc(), 0x4344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0285
        gbc.setState(0xd33e, 0x840, 0x7ea0, 0x59ac, 0x4c20, 0xf505, 0x0, 0x1);
        gbc.writeMem(0xd33e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x840);
        EXPECT(gbc.pc(), 0xd340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33e), 0xcb);
        EXPECT(gbc.readMem(0xd33f), 0x40);
        // CB 40 0286
        gbc.setState(0x50a3, 0xc222, 0xcb0, 0x6b9c, 0x3f33, 0x3ea3, 0x0, 0x0);
        gbc.writeMem(0x50a3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc222);
        EXPECT(gbc.pc(), 0x50a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0288
        gbc.setState(0x5849, 0x913b, 0x5cf0, 0xfb74, 0xbf03, 0x787d, 0x1, 0x0);
        gbc.writeMem(0x5849, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x913b);
        EXPECT(gbc.pc(), 0x584b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 028A
        gbc.setState(0xedef, 0x59da, 0xf400, 0xf233, 0x6992, 0xd74, 0x0, 0x0);
        gbc.writeMem(0xedef, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x59da);
        EXPECT(gbc.pc(), 0xedf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedef), 0xcb);
        EXPECT(gbc.readMem(0xedf0), 0x40);
        // CB 40 028B
        gbc.setState(0x23ae, 0xb287, 0xf290, 0x570f, 0xdf21, 0x4ba0, 0x1, 0x0);
        gbc.writeMem(0x23ae, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb287);
        EXPECT(gbc.pc(), 0x23b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 028C
        gbc.setState(0xee87, 0x302b, 0xaf90, 0x8787, 0x4ced, 0xa8ea, 0x1, 0x1);
        gbc.writeMem(0xee87, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x302b);
        EXPECT(gbc.pc(), 0xee89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee87), 0xcb);
        EXPECT(gbc.readMem(0xee88), 0x40);
        // CB 40 028D
        gbc.setState(0xa159, 0x1b63, 0x9fe0, 0x7bfa, 0xb730, 0x196d, 0x1, 0x0);
        gbc.writeMem(0xa159, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1b63);
        EXPECT(gbc.pc(), 0xa15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa159), 0xcb);
        EXPECT(gbc.readMem(0xa15a), 0x40);
        // CB 40 028E
        gbc.setState(0x49ce, 0xe9b8, 0xb2f0, 0x37bf, 0x8cf4, 0x974e, 0x1, 0x1);
        gbc.writeMem(0x49ce, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe9b8);
        EXPECT(gbc.pc(), 0x49d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 028F
        gbc.setState(0x48e7, 0x13c3, 0x9730, 0x31b5, 0x5e19, 0x68cb, 0x1, 0x0);
        gbc.writeMem(0x48e7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x13c3);
        EXPECT(gbc.pc(), 0x48e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0290
        gbc.setState(0xb5c7, 0x220b, 0xe4f0, 0x1e99, 0x7b96, 0x9e4d, 0x1, 0x1);
        gbc.writeMem(0xb5c7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x220b);
        EXPECT(gbc.pc(), 0xb5c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c7), 0xcb);
        EXPECT(gbc.readMem(0xb5c8), 0x40);
        // CB 40 0292
        gbc.setState(0x1b66, 0x5e5a, 0x2e40, 0xf0d, 0x73f7, 0x3307, 0x0, 0x0);
        gbc.writeMem(0x1b66, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5e5a);
        EXPECT(gbc.pc(), 0x1b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0293
        gbc.setState(0x4f4c, 0x1ba8, 0x5810, 0x20d3, 0xa979, 0xd3e2, 0x1, 0x0);
        gbc.writeMem(0x4f4c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1ba8);
        EXPECT(gbc.pc(), 0x4f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0294
        gbc.setState(0x11fd, 0x479e, 0x71a0, 0xdff8, 0x7100, 0xd720, 0x1, 0x0);
        gbc.writeMem(0x11fd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x479e);
        EXPECT(gbc.pc(), 0x11ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0295
        gbc.setState(0x7702, 0x4639, 0x1dd0, 0x6abd, 0x8e0e, 0xc935, 0x1, 0x0);
        gbc.writeMem(0x7702, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4639);
        EXPECT(gbc.pc(), 0x7704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0296
        gbc.setState(0x4442, 0x30dd, 0xc400, 0x9f37, 0xd82f, 0x39ad, 0x0, 0x0);
        gbc.writeMem(0x4442, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x30dd);
        EXPECT(gbc.pc(), 0x4444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0297
        gbc.setState(0x1a45, 0x1bcb, 0xfe20, 0xbfe1, 0xcf09, 0xe1f1, 0x0, 0x0);
        gbc.writeMem(0x1a45, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1bcb);
        EXPECT(gbc.pc(), 0x1a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0298
        gbc.setState(0xdcd8, 0x9a51, 0x5770, 0x4cf7, 0x3b82, 0xc566, 0x1, 0x1);
        gbc.writeMem(0xdcd8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9a51);
        EXPECT(gbc.pc(), 0xdcda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd8), 0xcb);
        EXPECT(gbc.readMem(0xdcd9), 0x40);
        // CB 40 0299
        gbc.setState(0xd2b3, 0xab7e, 0xa530, 0xd050, 0x3f5a, 0xa431, 0x1, 0x1);
        gbc.writeMem(0xd2b3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xab7e);
        EXPECT(gbc.pc(), 0xd2b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2b3), 0xcb);
        EXPECT(gbc.readMem(0xd2b4), 0x40);
        // CB 40 029A
        gbc.setState(0x9f77, 0x3e1d, 0x7610, 0x9df, 0xc9cb, 0xfb70, 0x1, 0x0);
        gbc.writeMem(0x9f77, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3e1d);
        EXPECT(gbc.pc(), 0x9f79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f77), 0xcb);
        EXPECT(gbc.readMem(0x9f78), 0x40);
        // CB 40 029B
        gbc.setState(0x9f0d, 0xf236, 0x12d0, 0xdca, 0xc16d, 0x99d2, 0x1, 0x0);
        gbc.writeMem(0x9f0d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf236);
        EXPECT(gbc.pc(), 0x9f0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f0d), 0xcb);
        EXPECT(gbc.readMem(0x9f0e), 0x40);
        // CB 40 029D
        gbc.setState(0x40b3, 0x19c0, 0x10b0, 0xdfd3, 0xda1a, 0x45f6, 0x1, 0x1);
        gbc.writeMem(0x40b3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x19c0);
        EXPECT(gbc.pc(), 0x40b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 029E
        gbc.setState(0x7eee, 0xcf09, 0xf6c0, 0x1b63, 0x4353, 0xd634, 0x0, 0x1);
        gbc.writeMem(0x7eee, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcf09);
        EXPECT(gbc.pc(), 0x7ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 029F
        gbc.setState(0x19c3, 0x5d48, 0x5220, 0xd294, 0xb15e, 0x5da2, 0x1, 0x1);
        gbc.writeMem(0x19c3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5d48);
        EXPECT(gbc.pc(), 0x19c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02A0
        gbc.setState(0x9db3, 0xf9b5, 0x2100, 0xd9a5, 0xa973, 0xf906, 0x0, 0x0);
        gbc.writeMem(0x9db3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf9b5);
        EXPECT(gbc.pc(), 0x9db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db3), 0xcb);
        EXPECT(gbc.readMem(0x9db4), 0x40);
        // CB 40 02A1
        gbc.setState(0xbb91, 0xad65, 0xddd0, 0xfa0a, 0x2b5e, 0x6fae, 0x1, 0x0);
        gbc.writeMem(0xbb91, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xad65);
        EXPECT(gbc.pc(), 0xbb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb91), 0xcb);
        EXPECT(gbc.readMem(0xbb92), 0x40);
        // CB 40 02A2
        gbc.setState(0x4ff8, 0xa134, 0x9a20, 0x1925, 0xe44e, 0xc646, 0x0, 0x0);
        gbc.writeMem(0x4ff8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa134);
        EXPECT(gbc.pc(), 0x4ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02A3
        gbc.setState(0x3b0c, 0x81b9, 0xde50, 0xd17f, 0x58c6, 0x2aca, 0x0, 0x0);
        gbc.writeMem(0x3b0c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x81b9);
        EXPECT(gbc.pc(), 0x3b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02A4
        gbc.setState(0xbadb, 0x97, 0xa6a0, 0x7acd, 0x2bf5, 0x7e59, 0x1, 0x0);
        gbc.writeMem(0xbadb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x97);
        EXPECT(gbc.pc(), 0xbadd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbadb), 0xcb);
        EXPECT(gbc.readMem(0xbadc), 0x40);
        // CB 40 02A5
        gbc.setState(0xa025, 0x9f20, 0x8b60, 0xd970, 0xeb70, 0xd1ef, 0x1, 0x0);
        gbc.writeMem(0xa025, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9f20);
        EXPECT(gbc.pc(), 0xa027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa025), 0xcb);
        EXPECT(gbc.readMem(0xa026), 0x40);
        // CB 40 02A6
        gbc.setState(0xcfd3, 0x641, 0x1580, 0xd64, 0xf093, 0x41d1, 0x0, 0x0);
        gbc.writeMem(0xcfd3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x641);
        EXPECT(gbc.pc(), 0xcfd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd3), 0xcb);
        EXPECT(gbc.readMem(0xcfd4), 0x40);
        // CB 40 02A7
        gbc.setState(0x4dd7, 0xe2c, 0x6eb0, 0xc681, 0x8eaf, 0x26e0, 0x1, 0x1);
        gbc.writeMem(0x4dd7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe2c);
        EXPECT(gbc.pc(), 0x4dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02A8
        gbc.setState(0xd4bc, 0x5545, 0xf3d0, 0xc895, 0x54ae, 0x932c, 0x1, 0x1);
        gbc.writeMem(0xd4bc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5545);
        EXPECT(gbc.pc(), 0xd4be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4bc), 0xcb);
        EXPECT(gbc.readMem(0xd4bd), 0x40);
        // CB 40 02A9
        gbc.setState(0x2878, 0xebf8, 0x1da0, 0xef08, 0x1576, 0xc28b, 0x1, 0x1);
        gbc.writeMem(0x2878, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xebf8);
        EXPECT(gbc.pc(), 0x287a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02AA
        gbc.setState(0x2ed2, 0x4e95, 0x3200, 0x1bac, 0xf25e, 0xee70, 0x1, 0x0);
        gbc.writeMem(0x2ed2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4e95);
        EXPECT(gbc.pc(), 0x2ed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02AB
        gbc.setState(0x694d, 0x23f0, 0xb460, 0x9cf4, 0xab4f, 0xd0e2, 0x0, 0x0);
        gbc.writeMem(0x694d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x23f0);
        EXPECT(gbc.pc(), 0x694f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02AC
        gbc.setState(0x48b9, 0x8f90, 0xeb40, 0xc6f, 0xaa76, 0x9275, 0x0, 0x1);
        gbc.writeMem(0x48b9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8f90);
        EXPECT(gbc.pc(), 0x48bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02AF
        gbc.setState(0x7d18, 0xebb3, 0xe0f0, 0xc76e, 0x764b, 0x29d2, 0x0, 0x1);
        gbc.writeMem(0x7d18, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xebb3);
        EXPECT(gbc.pc(), 0x7d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02B0
        gbc.setState(0x3d5, 0xe43d, 0x3a80, 0xf2f5, 0x7ac5, 0xa1d8, 0x0, 0x1);
        gbc.writeMem(0x3d5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe43d);
        EXPECT(gbc.pc(), 0x3d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02B1
        gbc.setState(0x6bdc, 0x26c4, 0x2a0, 0x40ee, 0x80a7, 0x1ec8, 0x1, 0x1);
        gbc.writeMem(0x6bdc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x26c4);
        EXPECT(gbc.pc(), 0x6bde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02B2
        gbc.setState(0x3113, 0x689, 0xe940, 0xe6e8, 0x222f, 0xd354, 0x1, 0x1);
        gbc.writeMem(0x3113, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x689);
        EXPECT(gbc.pc(), 0x3115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02B3
        gbc.setState(0xbd45, 0xe2d0, 0xac00, 0x161e, 0x1e99, 0xa595, 0x0, 0x0);
        gbc.writeMem(0xbd45, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe2d0);
        EXPECT(gbc.pc(), 0xbd47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd45), 0xcb);
        EXPECT(gbc.readMem(0xbd46), 0x40);
        // CB 40 02B4
        gbc.setState(0xcdf0, 0xaa63, 0xdb60, 0x4b45, 0xf57d, 0x7c66, 0x1, 0x1);
        gbc.writeMem(0xcdf0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xaa63);
        EXPECT(gbc.pc(), 0xcdf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf0), 0xcb);
        EXPECT(gbc.readMem(0xcdf1), 0x40);
        // CB 40 02B6
        gbc.setState(0x36f5, 0x70bf, 0xd930, 0x55e, 0x20e4, 0x7efc, 0x1, 0x0);
        gbc.writeMem(0x36f5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x70bf);
        EXPECT(gbc.pc(), 0x36f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02B7
        gbc.setState(0x5c24, 0x4b15, 0x8c10, 0x84ef, 0xa770, 0x8466, 0x0, 0x1);
        gbc.writeMem(0x5c24, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4b15);
        EXPECT(gbc.pc(), 0x5c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02B8
        gbc.setState(0xaaab, 0x2d4b, 0xe7d0, 0x483e, 0xdfe5, 0xa4c2, 0x1, 0x0);
        gbc.writeMem(0xaaab, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2d4b);
        EXPECT(gbc.pc(), 0xaaad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaab), 0xcb);
        EXPECT(gbc.readMem(0xaaac), 0x40);
        // CB 40 02B9
        gbc.setState(0x7427, 0xfc8a, 0x8b30, 0xc4d4, 0x7de5, 0xfa53, 0x0, 0x1);
        gbc.writeMem(0x7427, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xfc8a);
        EXPECT(gbc.pc(), 0x7429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02BA
        gbc.setState(0x4238, 0x35e7, 0xbba0, 0x6f4e, 0x6607, 0x7239, 0x1, 0x0);
        gbc.writeMem(0x4238, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x35e7);
        EXPECT(gbc.pc(), 0x423a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02BB
        gbc.setState(0x5b77, 0x7b1f, 0x9540, 0xe31d, 0x92e5, 0x1fbe, 0x0, 0x0);
        gbc.writeMem(0x5b77, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7b1f);
        EXPECT(gbc.pc(), 0x5b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02BC
        gbc.setState(0xac1f, 0xa4aa, 0x1000, 0x25f, 0xfeae, 0x7c75, 0x0, 0x0);
        gbc.writeMem(0xac1f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa4aa);
        EXPECT(gbc.pc(), 0xac21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac1f), 0xcb);
        EXPECT(gbc.readMem(0xac20), 0x40);
        // CB 40 02BD
        gbc.setState(0x7cff, 0x67e9, 0xfab0, 0x29dc, 0xf5e7, 0x8ab6, 0x1, 0x0);
        gbc.writeMem(0x7cff, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x67e9);
        EXPECT(gbc.pc(), 0x7d01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02BE
        gbc.setState(0x47e3, 0xeef8, 0x5580, 0x5706, 0x97a2, 0xf034, 0x1, 0x0);
        gbc.writeMem(0x47e3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xeef8);
        EXPECT(gbc.pc(), 0x47e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02BF
        gbc.setState(0x9ac2, 0xd5ae, 0x7ee0, 0x7c0b, 0xcbcc, 0x34a0, 0x1, 0x0);
        gbc.writeMem(0x9ac2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd5ae);
        EXPECT(gbc.pc(), 0x9ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac2), 0xcb);
        EXPECT(gbc.readMem(0x9ac3), 0x40);
        // CB 40 02C1
        gbc.setState(0x9511, 0x1566, 0x66d0, 0x8572, 0x911a, 0x7bc6, 0x1, 0x1);
        gbc.writeMem(0x9511, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1566);
        EXPECT(gbc.pc(), 0x9513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9511), 0xcb);
        EXPECT(gbc.readMem(0x9512), 0x40);
        // CB 40 02C2
        gbc.setState(0xdf08, 0x541a, 0xe870, 0x7c64, 0x7f5c, 0xb780, 0x0, 0x1);
        gbc.writeMem(0xdf08, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x541a);
        EXPECT(gbc.pc(), 0xdf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf08), 0xcb);
        EXPECT(gbc.readMem(0xdf09), 0x40);
        // CB 40 02C3
        gbc.setState(0xcf74, 0x888a, 0x8d00, 0x8d5f, 0xef4d, 0x34cd, 0x0, 0x1);
        gbc.writeMem(0xcf74, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x888a);
        EXPECT(gbc.pc(), 0xcf76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf74), 0xcb);
        EXPECT(gbc.readMem(0xcf75), 0x40);
        // CB 40 02C4
        gbc.setState(0x6744, 0x8814, 0x6b70, 0xc9b0, 0x129, 0xe43b, 0x1, 0x0);
        gbc.writeMem(0x6744, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8814);
        EXPECT(gbc.pc(), 0x6746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02C6
        gbc.setState(0xe9e0, 0x1536, 0x7850, 0xc32d, 0x228b, 0x5b45, 0x1, 0x0);
        gbc.writeMem(0xe9e0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1536);
        EXPECT(gbc.pc(), 0xe9e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e0), 0xcb);
        EXPECT(gbc.readMem(0xe9e1), 0x40);
        // CB 40 02C7
        gbc.setState(0x3253, 0x7351, 0x88f0, 0xdb58, 0x9b4, 0x938f, 0x1, 0x1);
        gbc.writeMem(0x3253, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7351);
        EXPECT(gbc.pc(), 0x3255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02C8
        gbc.setState(0x6d94, 0x11fa, 0xa440, 0xcbba, 0xbacb, 0x9410, 0x0, 0x1);
        gbc.writeMem(0x6d94, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x11fa);
        EXPECT(gbc.pc(), 0x6d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02C9
        gbc.setState(0x3186, 0x2ae, 0xd410, 0x5654, 0xe3db, 0xf2d8, 0x0, 0x1);
        gbc.writeMem(0x3186, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2ae);
        EXPECT(gbc.pc(), 0x3188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02CA
        gbc.setState(0xcd94, 0x9d8, 0xb0f0, 0x4cfe, 0xf233, 0xd2cc, 0x0, 0x1);
        gbc.writeMem(0xcd94, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9d8);
        EXPECT(gbc.pc(), 0xcd96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd94), 0xcb);
        EXPECT(gbc.readMem(0xcd95), 0x40);
        // CB 40 02CB
        gbc.setState(0xa191, 0xdd01, 0x7d60, 0x301e, 0x78ab, 0x706c, 0x0, 0x1);
        gbc.writeMem(0xa191, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdd01);
        EXPECT(gbc.pc(), 0xa193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa191), 0xcb);
        EXPECT(gbc.readMem(0xa192), 0x40);
        // CB 40 02CC
        gbc.setState(0x834, 0x5fd6, 0xae50, 0x5765, 0x7bed, 0xd979, 0x1, 0x1);
        gbc.writeMem(0x834, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5fd6);
        EXPECT(gbc.pc(), 0x836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02CD
        gbc.setState(0x94af, 0x732, 0x6fc0, 0x43f4, 0xa3e5, 0x144e, 0x0, 0x0);
        gbc.writeMem(0x94af, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x732);
        EXPECT(gbc.pc(), 0x94b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94af), 0xcb);
        EXPECT(gbc.readMem(0x94b0), 0x40);
        // CB 40 02CE
        gbc.setState(0x85c6, 0xb981, 0xe940, 0xa8e2, 0xe6ea, 0x5577, 0x0, 0x1);
        gbc.writeMem(0x85c6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb981);
        EXPECT(gbc.pc(), 0x85c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c6), 0xcb);
        EXPECT(gbc.readMem(0x85c7), 0x40);
        // CB 40 02CF
        gbc.setState(0x6b57, 0xb795, 0x74d0, 0x47d5, 0x82b0, 0x5ff6, 0x1, 0x0);
        gbc.writeMem(0x6b57, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb795);
        EXPECT(gbc.pc(), 0x6b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02D0
        gbc.setState(0xe1db, 0x51c6, 0xd390, 0x63c6, 0xf856, 0x4c64, 0x0, 0x1);
        gbc.writeMem(0xe1db, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x51c6);
        EXPECT(gbc.pc(), 0xe1dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1db), 0xcb);
        EXPECT(gbc.readMem(0xe1dc), 0x40);
        // CB 40 02D1
        gbc.setState(0xdc4e, 0xb7ee, 0xe6e0, 0x9a62, 0x78a1, 0xac3f, 0x0, 0x0);
        gbc.writeMem(0xdc4e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb7ee);
        EXPECT(gbc.pc(), 0xdc50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc4e), 0xcb);
        EXPECT(gbc.readMem(0xdc4f), 0x40);
        // CB 40 02D2
        gbc.setState(0x27a9, 0x37d8, 0x8cc0, 0xef84, 0x4f15, 0x215f, 0x0, 0x0);
        gbc.writeMem(0x27a9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x37d8);
        EXPECT(gbc.pc(), 0x27ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02D3
        gbc.setState(0xb0bb, 0xc1bc, 0x4820, 0x605, 0x209f, 0x57cd, 0x1, 0x1);
        gbc.writeMem(0xb0bb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc1bc);
        EXPECT(gbc.pc(), 0xb0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0bb), 0xcb);
        EXPECT(gbc.readMem(0xb0bc), 0x40);
        // CB 40 02D4
        gbc.setState(0xdbc4, 0xf13b, 0x4b20, 0x75dc, 0x8fa8, 0x7cc, 0x1, 0x0);
        gbc.writeMem(0xdbc4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf13b);
        EXPECT(gbc.pc(), 0xdbc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc4), 0xcb);
        EXPECT(gbc.readMem(0xdbc5), 0x40);
        // CB 40 02D5
        gbc.setState(0x7e75, 0x7ab2, 0x6d60, 0xa381, 0x9ed2, 0x6a33, 0x1, 0x0);
        gbc.writeMem(0x7e75, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7ab2);
        EXPECT(gbc.pc(), 0x7e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02D6
        gbc.setState(0x7ee2, 0xfaa6, 0x1a10, 0x7e04, 0x5dde, 0x6e15, 0x1, 0x0);
        gbc.writeMem(0x7ee2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfaa6);
        EXPECT(gbc.pc(), 0x7ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02D7
        gbc.setState(0xe7d2, 0x3fbe, 0x5430, 0xf249, 0x4ee6, 0xbc29, 0x0, 0x0);
        gbc.writeMem(0xe7d2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3fbe);
        EXPECT(gbc.pc(), 0xe7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d2), 0xcb);
        EXPECT(gbc.readMem(0xe7d3), 0x40);
        // CB 40 02D9
        gbc.setState(0xd5aa, 0x920, 0x6be0, 0x24b, 0x620f, 0x5b9a, 0x1, 0x0);
        gbc.writeMem(0xd5aa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x920);
        EXPECT(gbc.pc(), 0xd5ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5aa), 0xcb);
        EXPECT(gbc.readMem(0xd5ab), 0x40);
        // CB 40 02DA
        gbc.setState(0xe3ad, 0x8a1, 0xb4a0, 0xae70, 0xe08d, 0x34af, 0x1, 0x1);
        gbc.writeMem(0xe3ad, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8a1);
        EXPECT(gbc.pc(), 0xe3af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ad), 0xcb);
        EXPECT(gbc.readMem(0xe3ae), 0x40);
        // CB 40 02DB
        gbc.setState(0x3eee, 0x395c, 0xb3a0, 0x5df2, 0x929f, 0xa0b3, 0x1, 0x0);
        gbc.writeMem(0x3eee, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x395c);
        EXPECT(gbc.pc(), 0x3ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02DC
        gbc.setState(0xe03b, 0x8dda, 0x7900, 0xc65e, 0x4411, 0x7969, 0x0, 0x0);
        gbc.writeMem(0xe03b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8dda);
        EXPECT(gbc.pc(), 0xe03d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03b), 0xcb);
        EXPECT(gbc.readMem(0xe03c), 0x40);
        // CB 40 02DE
        gbc.setState(0xa7d8, 0x48c9, 0xd270, 0x7006, 0x3654, 0x1ba4, 0x0, 0x0);
        gbc.writeMem(0xa7d8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x48c9);
        EXPECT(gbc.pc(), 0xa7da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d8), 0xcb);
        EXPECT(gbc.readMem(0xa7d9), 0x40);
        // CB 40 02DF
        gbc.setState(0x6753, 0xe18e, 0x3b20, 0x931b, 0xb0ba, 0x532d, 0x0, 0x1);
        gbc.writeMem(0x6753, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe18e);
        EXPECT(gbc.pc(), 0x6755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02E1
        gbc.setState(0xd4b7, 0x8536, 0xe1a0, 0xe90a, 0x37b, 0xa14a, 0x1, 0x0);
        gbc.writeMem(0xd4b7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8536);
        EXPECT(gbc.pc(), 0xd4b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b7), 0xcb);
        EXPECT(gbc.readMem(0xd4b8), 0x40);
        // CB 40 02E2
        gbc.setState(0xb3e3, 0xa64e, 0x23a0, 0x3715, 0x2f91, 0xccb6, 0x1, 0x0);
        gbc.writeMem(0xb3e3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa64e);
        EXPECT(gbc.pc(), 0xb3e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3e3), 0xcb);
        EXPECT(gbc.readMem(0xb3e4), 0x40);
        // CB 40 02E3
        gbc.setState(0xc344, 0x5c75, 0x7af0, 0x4c7f, 0x2d95, 0xa2e4, 0x1, 0x1);
        gbc.writeMem(0xc344, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5c75);
        EXPECT(gbc.pc(), 0xc346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc344), 0xcb);
        EXPECT(gbc.readMem(0xc345), 0x40);
        // CB 40 02E4
        gbc.setState(0xe9ba, 0x3519, 0x4d70, 0xd762, 0xa658, 0xe82f, 0x0, 0x1);
        gbc.writeMem(0xe9ba, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3519);
        EXPECT(gbc.pc(), 0xe9bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ba), 0xcb);
        EXPECT(gbc.readMem(0xe9bb), 0x40);
        // CB 40 02E6
        gbc.setState(0xec6c, 0x997d, 0x95b0, 0x1dc6, 0xec4, 0xdd6e, 0x0, 0x0);
        gbc.writeMem(0xec6c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x997d);
        EXPECT(gbc.pc(), 0xec6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec6c), 0xcb);
        EXPECT(gbc.readMem(0xec6d), 0x40);
        // CB 40 02E7
        gbc.setState(0x41cb, 0x6db1, 0x23f0, 0xf191, 0x48c3, 0xb3a3, 0x1, 0x0);
        gbc.writeMem(0x41cb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6db1);
        EXPECT(gbc.pc(), 0x41cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02E8
        gbc.setState(0x9b6a, 0x1bfa, 0x57d0, 0x7b9d, 0xb153, 0xcb0e, 0x0, 0x0);
        gbc.writeMem(0x9b6a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1bfa);
        EXPECT(gbc.pc(), 0x9b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6a), 0xcb);
        EXPECT(gbc.readMem(0x9b6b), 0x40);
        // CB 40 02E9
        gbc.setState(0x5a65, 0xf1a3, 0xc630, 0x3261, 0x4fd, 0xbe25, 0x0, 0x0);
        gbc.writeMem(0x5a65, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf1a3);
        EXPECT(gbc.pc(), 0x5a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02EA
        gbc.setState(0x4c5c, 0xd67, 0x2ba0, 0xc10f, 0x3b64, 0x610d, 0x0, 0x1);
        gbc.writeMem(0x4c5c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd67);
        EXPECT(gbc.pc(), 0x4c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02EB
        gbc.setState(0xc9ce, 0x9fb6, 0x5410, 0xd285, 0x735, 0x1089, 0x0, 0x0);
        gbc.writeMem(0xc9ce, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9fb6);
        EXPECT(gbc.pc(), 0xc9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ce), 0xcb);
        EXPECT(gbc.readMem(0xc9cf), 0x40);
        // CB 40 02EC
        gbc.setState(0x7e6, 0x4994, 0x21e0, 0xf4ce, 0x498f, 0xc1c4, 0x0, 0x0);
        gbc.writeMem(0x7e6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4994);
        EXPECT(gbc.pc(), 0x7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02ED
        gbc.setState(0x5d1c, 0xc056, 0x4b10, 0x2a96, 0xef78, 0xa647, 0x1, 0x0);
        gbc.writeMem(0x5d1c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc056);
        EXPECT(gbc.pc(), 0x5d1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02EE
        gbc.setState(0x2104, 0xbb2, 0xe710, 0xdfcb, 0xf5a0, 0xe598, 0x0, 0x0);
        gbc.writeMem(0x2104, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbb2);
        EXPECT(gbc.pc(), 0x2106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02EF
        gbc.setState(0xb8ea, 0x57c9, 0x55d0, 0x40f4, 0xdaa6, 0x47f1, 0x0, 0x0);
        gbc.writeMem(0xb8ea, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x57c9);
        EXPECT(gbc.pc(), 0xb8ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ea), 0xcb);
        EXPECT(gbc.readMem(0xb8eb), 0x40);
        // CB 40 02F0
        gbc.setState(0x1e90, 0x7c1c, 0x9bf0, 0x11d, 0x40b8, 0x1c89, 0x0, 0x1);
        gbc.writeMem(0x1e90, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7c1c);
        EXPECT(gbc.pc(), 0x1e92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02F2
        gbc.setState(0x2377, 0x8a7d, 0x78a0, 0x7c59, 0xc8a0, 0x6a4c, 0x0, 0x1);
        gbc.writeMem(0x2377, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8a7d);
        EXPECT(gbc.pc(), 0x2379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02F3
        gbc.setState(0xbc13, 0x5260, 0x2de0, 0x26c5, 0x1d3, 0x1328, 0x1, 0x1);
        gbc.writeMem(0xbc13, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5260);
        EXPECT(gbc.pc(), 0xbc15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc13), 0xcb);
        EXPECT(gbc.readMem(0xbc14), 0x40);
        // CB 40 02F4
        gbc.setState(0x17d9, 0x30ec, 0x6990, 0xf1af, 0x2405, 0x93f, 0x1, 0x0);
        gbc.writeMem(0x17d9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x30ec);
        EXPECT(gbc.pc(), 0x17db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02F5
        gbc.setState(0xb5f4, 0x6077, 0xdd10, 0xeca5, 0x5ff5, 0xa75f, 0x0, 0x0);
        gbc.writeMem(0xb5f4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6077);
        EXPECT(gbc.pc(), 0xb5f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f4), 0xcb);
        EXPECT(gbc.readMem(0xb5f5), 0x40);
        // CB 40 02F6
        gbc.setState(0xd4ed, 0x3894, 0x6c80, 0x64e7, 0xf13c, 0x5d6e, 0x0, 0x1);
        gbc.writeMem(0xd4ed, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3894);
        EXPECT(gbc.pc(), 0xd4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ed), 0xcb);
        EXPECT(gbc.readMem(0xd4ee), 0x40);
        // CB 40 02F7
        gbc.setState(0x1397, 0x37bf, 0xc1a0, 0xf24a, 0x7fde, 0xc6a0, 0x0, 0x0);
        gbc.writeMem(0x1397, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x37bf);
        EXPECT(gbc.pc(), 0x1399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02F8
        gbc.setState(0x7e47, 0xaa4, 0xe570, 0x589b, 0xe88c, 0xa86e, 0x1, 0x0);
        gbc.writeMem(0x7e47, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xaa4);
        EXPECT(gbc.pc(), 0x7e49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 02F9
        gbc.setState(0x34a0, 0x6270, 0x5ca0, 0xb4fd, 0xd300, 0x427e, 0x1, 0x1);
        gbc.writeMem(0x34a0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6270);
        EXPECT(gbc.pc(), 0x34a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02FA
        gbc.setState(0x2e20, 0x629d, 0xad00, 0x4ddc, 0xa1dd, 0x3c95, 0x0, 0x1);
        gbc.writeMem(0x2e20, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x629d);
        EXPECT(gbc.pc(), 0x2e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02FB
        gbc.setState(0x9482, 0x7650, 0x94a0, 0x9790, 0xd6a4, 0x5a7b, 0x0, 0x0);
        gbc.writeMem(0x9482, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7650);
        EXPECT(gbc.pc(), 0x9484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9482), 0xcb);
        EXPECT(gbc.readMem(0x9483), 0x40);
        // CB 40 02FC
        gbc.setState(0x901b, 0x5a59, 0x78a0, 0x31f9, 0xd12e, 0xc1a5, 0x0, 0x1);
        gbc.writeMem(0x901b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5a59);
        EXPECT(gbc.pc(), 0x901d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901b), 0xcb);
        EXPECT(gbc.readMem(0x901c), 0x40);
        // CB 40 02FD
        gbc.setState(0x4e77, 0xb1d3, 0x4780, 0x2224, 0xf9db, 0x8274, 0x1, 0x0);
        gbc.writeMem(0x4e77, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb1d3);
        EXPECT(gbc.pc(), 0x4e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 02FE
        gbc.setState(0x972a, 0xbd59, 0x3b50, 0x2497, 0xa22a, 0xf4e5, 0x0, 0x0);
        gbc.writeMem(0x972a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbd59);
        EXPECT(gbc.pc(), 0x972c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972a), 0xcb);
        EXPECT(gbc.readMem(0x972b), 0x40);
        // CB 40 02FF
        gbc.setState(0xa8b5, 0xa2da, 0x2dd0, 0x860c, 0x6c62, 0xcc7b, 0x1, 0x1);
        gbc.writeMem(0xa8b5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa2da);
        EXPECT(gbc.pc(), 0xa8b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8b5), 0xcb);
        EXPECT(gbc.readMem(0xa8b6), 0x40);
        // CB 40 0300
        gbc.setState(0x7c46, 0x21f8, 0x9830, 0xccef, 0x7d9a, 0xcb2a, 0x1, 0x1);
        gbc.writeMem(0x7c46, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x21f8);
        EXPECT(gbc.pc(), 0x7c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0301
        gbc.setState(0x1222, 0xf8f8, 0xf760, 0x1f9, 0x9b64, 0x34d3, 0x0, 0x1);
        gbc.writeMem(0x1222, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf8f8);
        EXPECT(gbc.pc(), 0x1224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0302
        gbc.setState(0xb70f, 0xcb24, 0xed00, 0x838d, 0x6a2a, 0x560d, 0x0, 0x1);
        gbc.writeMem(0xb70f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xcb24);
        EXPECT(gbc.pc(), 0xb711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70f), 0xcb);
        EXPECT(gbc.readMem(0xb710), 0x40);
        // CB 40 0303
        gbc.setState(0xd546, 0xa862, 0x2330, 0x5479, 0x1142, 0x79cc, 0x1, 0x0);
        gbc.writeMem(0xd546, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa862);
        EXPECT(gbc.pc(), 0xd548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd546), 0xcb);
        EXPECT(gbc.readMem(0xd547), 0x40);
        // CB 40 0304
        gbc.setState(0x4558, 0xef69, 0x6070, 0x8b99, 0xeb72, 0xd254, 0x0, 0x0);
        gbc.writeMem(0x4558, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xef69);
        EXPECT(gbc.pc(), 0x455a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0305
        gbc.setState(0x3808, 0x2608, 0x43f0, 0x1120, 0x3c, 0xefc0, 0x0, 0x0);
        gbc.writeMem(0x3808, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2608);
        EXPECT(gbc.pc(), 0x380a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0306
        gbc.setState(0x367, 0x5287, 0x7850, 0xad61, 0x7dea, 0xadcb, 0x1, 0x1);
        gbc.writeMem(0x367, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5287);
        EXPECT(gbc.pc(), 0x369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0307
        gbc.setState(0xbce1, 0xa9b1, 0x7120, 0xcac3, 0x66c2, 0xc123, 0x0, 0x1);
        gbc.writeMem(0xbce1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa9b1);
        EXPECT(gbc.pc(), 0xbce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce1), 0xcb);
        EXPECT(gbc.readMem(0xbce2), 0x40);
        // CB 40 0308
        gbc.setState(0x9102, 0x92fd, 0x15c0, 0x61c5, 0x1345, 0xe4ab, 0x0, 0x0);
        gbc.writeMem(0x9102, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x92fd);
        EXPECT(gbc.pc(), 0x9104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9102), 0xcb);
        EXPECT(gbc.readMem(0x9103), 0x40);
        // CB 40 0309
        gbc.setState(0xc2a, 0xe5f7, 0x5100, 0x3dd4, 0xc63c, 0xa769, 0x1, 0x0);
        gbc.writeMem(0xc2a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe5f7);
        EXPECT(gbc.pc(), 0xc2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 030A
        gbc.setState(0xd656, 0x8956, 0x6850, 0x3cc3, 0x1a05, 0x1fa0, 0x0, 0x0);
        gbc.writeMem(0xd656, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8956);
        EXPECT(gbc.pc(), 0xd658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd656), 0xcb);
        EXPECT(gbc.readMem(0xd657), 0x40);
        // CB 40 030B
        gbc.setState(0x7f04, 0xe52, 0xac40, 0x13ee, 0x7f29, 0x7d55, 0x1, 0x0);
        gbc.writeMem(0x7f04, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe52);
        EXPECT(gbc.pc(), 0x7f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 030C
        gbc.setState(0xb, 0xdb18, 0x9fc0, 0x44da, 0xf406, 0xc8d6, 0x1, 0x1);
        gbc.writeMem(0xb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdb18);
        EXPECT(gbc.pc(), 0xd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 030D
        gbc.setState(0x7b7a, 0xa570, 0x8690, 0x6431, 0xa35b, 0x9fc5, 0x1, 0x0);
        gbc.writeMem(0x7b7a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa570);
        EXPECT(gbc.pc(), 0x7b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 030E
        gbc.setState(0x7179, 0xabbb, 0x9480, 0x1292, 0x95ff, 0x4ff3, 0x0, 0x1);
        gbc.writeMem(0x7179, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xabbb);
        EXPECT(gbc.pc(), 0x717b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 030F
        gbc.setState(0x6aa5, 0x6497, 0xb930, 0x1c25, 0x2e2, 0x1b71, 0x0, 0x0);
        gbc.writeMem(0x6aa5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6497);
        EXPECT(gbc.pc(), 0x6aa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0310
        gbc.setState(0xdb91, 0x9c4d, 0xfab0, 0x3bd8, 0x330c, 0x540b, 0x1, 0x1);
        gbc.writeMem(0xdb91, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9c4d);
        EXPECT(gbc.pc(), 0xdb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb91), 0xcb);
        EXPECT(gbc.readMem(0xdb92), 0x40);
        // CB 40 0311
        gbc.setState(0x597d, 0xce93, 0x8b30, 0x5a99, 0x2459, 0x7ef8, 0x1, 0x1);
        gbc.writeMem(0x597d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xce93);
        EXPECT(gbc.pc(), 0x597f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0312
        gbc.setState(0x964c, 0x3fca, 0x3970, 0x603, 0x5d12, 0xfafb, 0x0, 0x0);
        gbc.writeMem(0x964c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3fca);
        EXPECT(gbc.pc(), 0x964e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x964c), 0xcb);
        EXPECT(gbc.readMem(0x964d), 0x40);
        // CB 40 0313
        gbc.setState(0x6961, 0xd3d3, 0x8aa0, 0xe305, 0x8f68, 0x3952, 0x1, 0x0);
        gbc.writeMem(0x6961, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd3d3);
        EXPECT(gbc.pc(), 0x6963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0314
        gbc.setState(0xae98, 0x907e, 0x9c80, 0x28a0, 0x3084, 0x625d, 0x1, 0x0);
        gbc.writeMem(0xae98, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x907e);
        EXPECT(gbc.pc(), 0xae9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae98), 0xcb);
        EXPECT(gbc.readMem(0xae99), 0x40);
        // CB 40 0315
        gbc.setState(0xe2ac, 0xa4d1, 0x5eb0, 0x7491, 0xf163, 0x98fb, 0x0, 0x0);
        gbc.writeMem(0xe2ac, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa4d1);
        EXPECT(gbc.pc(), 0xe2ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ac), 0xcb);
        EXPECT(gbc.readMem(0xe2ad), 0x40);
        // CB 40 0316
        gbc.setState(0x5fde, 0x909b, 0xd7e0, 0x9700, 0xbda0, 0xa5da, 0x0, 0x1);
        gbc.writeMem(0x5fde, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x909b);
        EXPECT(gbc.pc(), 0x5fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0317
        gbc.setState(0xd1f6, 0x2dd0, 0x5a20, 0xce6e, 0x1337, 0x2835, 0x1, 0x0);
        gbc.writeMem(0xd1f6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2dd0);
        EXPECT(gbc.pc(), 0xd1f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f6), 0xcb);
        EXPECT(gbc.readMem(0xd1f7), 0x40);
        // CB 40 0318
        gbc.setState(0xb338, 0xc9dd, 0x6f20, 0xe2c5, 0x6480, 0x55b2, 0x1, 0x1);
        gbc.writeMem(0xb338, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc9dd);
        EXPECT(gbc.pc(), 0xb33a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb338), 0xcb);
        EXPECT(gbc.readMem(0xb339), 0x40);
        // CB 40 0319
        gbc.setState(0xa67, 0x91e7, 0xfcb0, 0xc14e, 0x9a72, 0x1b3a, 0x0, 0x0);
        gbc.writeMem(0xa67, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x91e7);
        EXPECT(gbc.pc(), 0xa69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 031A
        gbc.setState(0x92a2, 0x2726, 0xce20, 0x2910, 0x8694, 0xbed4, 0x1, 0x1);
        gbc.writeMem(0x92a2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2726);
        EXPECT(gbc.pc(), 0x92a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a2), 0xcb);
        EXPECT(gbc.readMem(0x92a3), 0x40);
        // CB 40 031B
        gbc.setState(0x1bf3, 0x3fad, 0x7d60, 0x4d56, 0x330f, 0x3749, 0x0, 0x0);
        gbc.writeMem(0x1bf3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3fad);
        EXPECT(gbc.pc(), 0x1bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 031C
        gbc.setState(0xac22, 0xa2ce, 0x1630, 0xf79c, 0x148c, 0x65fe, 0x1, 0x0);
        gbc.writeMem(0xac22, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa2ce);
        EXPECT(gbc.pc(), 0xac24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac22), 0xcb);
        EXPECT(gbc.readMem(0xac23), 0x40);
        // CB 40 031D
        gbc.setState(0xb1bd, 0xbdf6, 0xc8f0, 0xc22, 0x8c4f, 0x829f, 0x0, 0x0);
        gbc.writeMem(0xb1bd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbdf6);
        EXPECT(gbc.pc(), 0xb1bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1bd), 0xcb);
        EXPECT(gbc.readMem(0xb1be), 0x40);
        // CB 40 031E
        gbc.setState(0xb6d8, 0x9e56, 0x3c50, 0x1f27, 0xb038, 0xd9dc, 0x1, 0x1);
        gbc.writeMem(0xb6d8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9e56);
        EXPECT(gbc.pc(), 0xb6da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d8), 0xcb);
        EXPECT(gbc.readMem(0xb6d9), 0x40);
        // CB 40 031F
        gbc.setState(0xed28, 0x9625, 0xbf90, 0x27bc, 0x895e, 0x2470, 0x1, 0x0);
        gbc.writeMem(0xed28, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9625);
        EXPECT(gbc.pc(), 0xed2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed28), 0xcb);
        EXPECT(gbc.readMem(0xed29), 0x40);
        // CB 40 0320
        gbc.setState(0x61ec, 0x21d6, 0xcce0, 0xa903, 0x144c, 0x5c1c, 0x1, 0x1);
        gbc.writeMem(0x61ec, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x21d6);
        EXPECT(gbc.pc(), 0x61ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0321
        gbc.setState(0xd3fa, 0xacd2, 0xc590, 0x3f37, 0x5b01, 0x15ba, 0x0, 0x0);
        gbc.writeMem(0xd3fa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xacd2);
        EXPECT(gbc.pc(), 0xd3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3fa), 0xcb);
        EXPECT(gbc.readMem(0xd3fb), 0x40);
        // CB 40 0322
        gbc.setState(0xf76, 0x9f6, 0xcbe0, 0xfd6b, 0x55e6, 0xa7b1, 0x1, 0x0);
        gbc.writeMem(0xf76, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9f6);
        EXPECT(gbc.pc(), 0xf78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0323
        gbc.setState(0xa9eb, 0xfef3, 0xa7f0, 0xa885, 0xe27d, 0x6643, 0x0, 0x0);
        gbc.writeMem(0xa9eb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xfef3);
        EXPECT(gbc.pc(), 0xa9ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9eb), 0xcb);
        EXPECT(gbc.readMem(0xa9ec), 0x40);
        // CB 40 0324
        gbc.setState(0x5d1b, 0x9262, 0xaf70, 0x49fb, 0xb4fe, 0x17f8, 0x1, 0x0);
        gbc.writeMem(0x5d1b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9262);
        EXPECT(gbc.pc(), 0x5d1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0325
        gbc.setState(0x2eed, 0x3a43, 0xc800, 0x16e5, 0x6374, 0x9025, 0x1, 0x1);
        gbc.writeMem(0x2eed, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3a43);
        EXPECT(gbc.pc(), 0x2eef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0326
        gbc.setState(0x767a, 0xc281, 0xc6f0, 0xadd8, 0xc283, 0xeddf, 0x1, 0x0);
        gbc.writeMem(0x767a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc281);
        EXPECT(gbc.pc(), 0x767c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0327
        gbc.setState(0x13cf, 0x3370, 0x16c0, 0xb7bc, 0x6763, 0x3044, 0x0, 0x1);
        gbc.writeMem(0x13cf, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3370);
        EXPECT(gbc.pc(), 0x13d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0329
        gbc.setState(0x18d1, 0x53a3, 0x9cb0, 0x4358, 0x9aab, 0xef5a, 0x0, 0x0);
        gbc.writeMem(0x18d1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x53a3);
        EXPECT(gbc.pc(), 0x18d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 032A
        gbc.setState(0xadb5, 0x4357, 0xb050, 0xa534, 0x5680, 0xb4fa, 0x0, 0x0);
        gbc.writeMem(0xadb5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4357);
        EXPECT(gbc.pc(), 0xadb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb5), 0xcb);
        EXPECT(gbc.readMem(0xadb6), 0x40);
        // CB 40 032B
        gbc.setState(0xde14, 0xc9d6, 0xd720, 0x79bc, 0x5690, 0xb239, 0x1, 0x1);
        gbc.writeMem(0xde14, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc9d6);
        EXPECT(gbc.pc(), 0xde16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde14), 0xcb);
        EXPECT(gbc.readMem(0xde15), 0x40);
        // CB 40 032C
        gbc.setState(0x717c, 0x4e52, 0x92a0, 0xc4f0, 0x34e3, 0x4be6, 0x1, 0x0);
        gbc.writeMem(0x717c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4e52);
        EXPECT(gbc.pc(), 0x717e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 032D
        gbc.setState(0xb2aa, 0x3cf6, 0x13d0, 0x940a, 0xa826, 0x2ca8, 0x0, 0x0);
        gbc.writeMem(0xb2aa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3cf6);
        EXPECT(gbc.pc(), 0xb2ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2aa), 0xcb);
        EXPECT(gbc.readMem(0xb2ab), 0x40);
        // CB 40 032E
        gbc.setState(0xb5dc, 0x8e44, 0x6ba0, 0xed7f, 0x1507, 0xd76b, 0x1, 0x0);
        gbc.writeMem(0xb5dc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8e44);
        EXPECT(gbc.pc(), 0xb5de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5dc), 0xcb);
        EXPECT(gbc.readMem(0xb5dd), 0x40);
        // CB 40 032F
        gbc.setState(0x9d18, 0x8115, 0x4090, 0x69cd, 0xd289, 0x83a3, 0x1, 0x1);
        gbc.writeMem(0x9d18, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8115);
        EXPECT(gbc.pc(), 0x9d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d18), 0xcb);
        EXPECT(gbc.readMem(0x9d19), 0x40);
        // CB 40 0330
        gbc.setState(0x3fc6, 0xec1f, 0xc700, 0x32c, 0x9524, 0xc9ce, 0x1, 0x1);
        gbc.writeMem(0x3fc6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xec1f);
        EXPECT(gbc.pc(), 0x3fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0331
        gbc.setState(0x644d, 0x67db, 0x8680, 0xeb91, 0x4129, 0xba55, 0x1, 0x1);
        gbc.writeMem(0x644d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x67db);
        EXPECT(gbc.pc(), 0x644f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0332
        gbc.setState(0x2b75, 0x691e, 0x7170, 0x6956, 0x8883, 0xc74c, 0x1, 0x0);
        gbc.writeMem(0x2b75, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x691e);
        EXPECT(gbc.pc(), 0x2b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0333
        gbc.setState(0x17b3, 0x5f6f, 0xe130, 0xda9c, 0x48d0, 0x3f9a, 0x1, 0x1);
        gbc.writeMem(0x17b3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5f6f);
        EXPECT(gbc.pc(), 0x17b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0334
        gbc.setState(0x4aad, 0x4cf6, 0x6500, 0xc2ea, 0x546a, 0x9eb4, 0x0, 0x1);
        gbc.writeMem(0x4aad, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4cf6);
        EXPECT(gbc.pc(), 0x4aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0335
        gbc.setState(0x92f9, 0xe7fd, 0xad00, 0x7f25, 0xbb0, 0x96d2, 0x0, 0x1);
        gbc.writeMem(0x92f9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe7fd);
        EXPECT(gbc.pc(), 0x92fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f9), 0xcb);
        EXPECT(gbc.readMem(0x92fa), 0x40);
        // CB 40 0337
        gbc.setState(0xdbea, 0x8b33, 0x3f30, 0xf81f, 0xd8c0, 0xde42, 0x1, 0x0);
        gbc.writeMem(0xdbea, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8b33);
        EXPECT(gbc.pc(), 0xdbec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbea), 0xcb);
        EXPECT(gbc.readMem(0xdbeb), 0x40);
        // CB 40 0338
        gbc.setState(0x1116, 0x8734, 0xbbc0, 0x465c, 0xb531, 0xa873, 0x1, 0x1);
        gbc.writeMem(0x1116, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8734);
        EXPECT(gbc.pc(), 0x1118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 033A
        gbc.setState(0xdaa7, 0xda49, 0xd4a0, 0x1cfe, 0xc09c, 0xae01, 0x1, 0x1);
        gbc.writeMem(0xdaa7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xda49);
        EXPECT(gbc.pc(), 0xdaa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa7), 0xcb);
        EXPECT(gbc.readMem(0xdaa8), 0x40);
        // CB 40 033B
        gbc.setState(0xe781, 0x23d5, 0xc8b0, 0x8dd3, 0x7362, 0x7b4f, 0x1, 0x0);
        gbc.writeMem(0xe781, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x23d5);
        EXPECT(gbc.pc(), 0xe783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe781), 0xcb);
        EXPECT(gbc.readMem(0xe782), 0x40);
        // CB 40 033D
        gbc.setState(0xaffe, 0x4be1, 0x6110, 0x3ba2, 0x448d, 0x63c3, 0x0, 0x0);
        gbc.writeMem(0xaffe, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4be1);
        EXPECT(gbc.pc(), 0xb000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaffe), 0xcb);
        EXPECT(gbc.readMem(0xafff), 0x40);
        // CB 40 033E
        gbc.setState(0x70a7, 0x36cb, 0xbe30, 0x751, 0x364b, 0x2e6, 0x1, 0x0);
        gbc.writeMem(0x70a7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x36cb);
        EXPECT(gbc.pc(), 0x70a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 033F
        gbc.setState(0x37f1, 0x73b5, 0xa110, 0xb898, 0xc411, 0x6ed8, 0x1, 0x1);
        gbc.writeMem(0x37f1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x73b5);
        EXPECT(gbc.pc(), 0x37f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0340
        gbc.setState(0x664c, 0x66d4, 0x2b90, 0x21fa, 0x4ae7, 0x31, 0x0, 0x1);
        gbc.writeMem(0x664c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x66d4);
        EXPECT(gbc.pc(), 0x664e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0341
        gbc.setState(0xe940, 0x7d9, 0x12f0, 0x2bf8, 0x52eb, 0x79a5, 0x1, 0x1);
        gbc.writeMem(0xe940, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7d9);
        EXPECT(gbc.pc(), 0xe942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe940), 0xcb);
        EXPECT(gbc.readMem(0xe941), 0x40);
        // CB 40 0342
        gbc.setState(0x6a76, 0x5a8c, 0xdd90, 0x4197, 0x6a39, 0x5669, 0x0, 0x1);
        gbc.writeMem(0x6a76, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5a8c);
        EXPECT(gbc.pc(), 0x6a78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0343
        gbc.setState(0xaeb, 0xa5c9, 0xc600, 0x82c9, 0xd3bc, 0x4e35, 0x0, 0x1);
        gbc.writeMem(0xaeb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa5c9);
        EXPECT(gbc.pc(), 0xaed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0345
        gbc.setState(0xe3b0, 0xaaae, 0xd2b0, 0x7dbb, 0x28f4, 0xfb7, 0x0, 0x1);
        gbc.writeMem(0xe3b0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xaaae);
        EXPECT(gbc.pc(), 0xe3b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b0), 0xcb);
        EXPECT(gbc.readMem(0xe3b1), 0x40);
        // CB 40 0346
        gbc.setState(0x3032, 0x9b59, 0x3b00, 0xa09f, 0xe9f4, 0xbc36, 0x0, 0x0);
        gbc.writeMem(0x3032, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9b59);
        EXPECT(gbc.pc(), 0x3034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0347
        gbc.setState(0x2be1, 0xc0ba, 0x2090, 0xd32d, 0x93f5, 0xa76f, 0x1, 0x1);
        gbc.writeMem(0x2be1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc0ba);
        EXPECT(gbc.pc(), 0x2be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0348
        gbc.setState(0x7ddc, 0x349, 0xdfa0, 0x19c, 0x6738, 0x2b4f, 0x0, 0x1);
        gbc.writeMem(0x7ddc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x349);
        EXPECT(gbc.pc(), 0x7dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0349
        gbc.setState(0x65e7, 0xc579, 0x88d0, 0x39b9, 0x190, 0x28c3, 0x0, 0x1);
        gbc.writeMem(0x65e7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc579);
        EXPECT(gbc.pc(), 0x65e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 034A
        gbc.setState(0xdac9, 0xa922, 0x5aa0, 0x9397, 0x2bdf, 0x3c12, 0x1, 0x0);
        gbc.writeMem(0xdac9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa922);
        EXPECT(gbc.pc(), 0xdacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac9), 0xcb);
        EXPECT(gbc.readMem(0xdaca), 0x40);
        // CB 40 034B
        gbc.setState(0x7595, 0x6471, 0x1830, 0x3c75, 0x1941, 0x60df, 0x0, 0x0);
        gbc.writeMem(0x7595, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6471);
        EXPECT(gbc.pc(), 0x7597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 034C
        gbc.setState(0x8b03, 0x9d82, 0x6ab0, 0xbc34, 0xb014, 0x1c10, 0x0, 0x1);
        gbc.writeMem(0x8b03, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9d82);
        EXPECT(gbc.pc(), 0x8b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b03), 0xcb);
        EXPECT(gbc.readMem(0x8b04), 0x40);
        // CB 40 034D
        gbc.setState(0x3f99, 0xec26, 0x4c90, 0x93a8, 0xf465, 0x75db, 0x1, 0x0);
        gbc.writeMem(0x3f99, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xec26);
        EXPECT(gbc.pc(), 0x3f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 034E
        gbc.setState(0x75c5, 0xfb6c, 0x4250, 0xed45, 0x7e13, 0x8146, 0x1, 0x0);
        gbc.writeMem(0x75c5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfb6c);
        EXPECT(gbc.pc(), 0x75c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 034F
        gbc.setState(0x7883, 0x7baf, 0x2ae0, 0xd330, 0xea67, 0xd700, 0x1, 0x0);
        gbc.writeMem(0x7883, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7baf);
        EXPECT(gbc.pc(), 0x7885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0350
        gbc.setState(0x9f14, 0x6876, 0xb40, 0xf802, 0xef62, 0x410e, 0x1, 0x0);
        gbc.writeMem(0x9f14, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6876);
        EXPECT(gbc.pc(), 0x9f16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f14), 0xcb);
        EXPECT(gbc.readMem(0x9f15), 0x40);
        // CB 40 0351
        gbc.setState(0xe0c0, 0x6794, 0x2270, 0xbe4e, 0xd348, 0x9bd4, 0x0, 0x0);
        gbc.writeMem(0xe0c0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6794);
        EXPECT(gbc.pc(), 0xe0c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c0), 0xcb);
        EXPECT(gbc.readMem(0xe0c1), 0x40);
        // CB 40 0352
        gbc.setState(0xd179, 0xf959, 0xec30, 0xe1c4, 0x4235, 0xd1cd, 0x0, 0x0);
        gbc.writeMem(0xd179, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf959);
        EXPECT(gbc.pc(), 0xd17b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd179), 0xcb);
        EXPECT(gbc.readMem(0xd17a), 0x40);
        // CB 40 0353
        gbc.setState(0xe031, 0xa8af, 0xcbc0, 0xee78, 0x74c1, 0x5574, 0x0, 0x0);
        gbc.writeMem(0xe031, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa8af);
        EXPECT(gbc.pc(), 0xe033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe031), 0xcb);
        EXPECT(gbc.readMem(0xe032), 0x40);
        // CB 40 0355
        gbc.setState(0x271a, 0xf2ed, 0x5a40, 0xa2b9, 0xc8d5, 0x20cf, 0x0, 0x1);
        gbc.writeMem(0x271a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf2ed);
        EXPECT(gbc.pc(), 0x271c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0356
        gbc.setState(0x8e4c, 0x1bc9, 0x22c0, 0x45e3, 0xb4e, 0x52d9, 0x0, 0x0);
        gbc.writeMem(0x8e4c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1bc9);
        EXPECT(gbc.pc(), 0x8e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e4c), 0xcb);
        EXPECT(gbc.readMem(0x8e4d), 0x40);
        // CB 40 0357
        gbc.setState(0x4a63, 0xf14f, 0x56f0, 0xa9c9, 0xbd12, 0x81f0, 0x1, 0x0);
        gbc.writeMem(0x4a63, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf14f);
        EXPECT(gbc.pc(), 0x4a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0358
        gbc.setState(0xbed0, 0x7378, 0x1410, 0xb86e, 0x5f90, 0x274f, 0x1, 0x1);
        gbc.writeMem(0xbed0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7378);
        EXPECT(gbc.pc(), 0xbed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed0), 0xcb);
        EXPECT(gbc.readMem(0xbed1), 0x40);
        // CB 40 0359
        gbc.setState(0xccd4, 0xa432, 0xc3d0, 0xee7d, 0xd0ee, 0x4b8e, 0x0, 0x1);
        gbc.writeMem(0xccd4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa432);
        EXPECT(gbc.pc(), 0xccd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd4), 0xcb);
        EXPECT(gbc.readMem(0xccd5), 0x40);
        // CB 40 035A
        gbc.setState(0xdf1, 0x29f9, 0x74a0, 0xcb35, 0xd78d, 0x4bec, 0x0, 0x0);
        gbc.writeMem(0xdf1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x29f9);
        EXPECT(gbc.pc(), 0xdf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 035B
        gbc.setState(0xae3c, 0x6f6f, 0xa2c0, 0xddf5, 0x18c3, 0xb589, 0x1, 0x1);
        gbc.writeMem(0xae3c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6f6f);
        EXPECT(gbc.pc(), 0xae3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae3c), 0xcb);
        EXPECT(gbc.readMem(0xae3d), 0x40);
        // CB 40 035C
        gbc.setState(0x6ad5, 0xee48, 0x99b0, 0xeac5, 0x9d27, 0x8f11, 0x0, 0x0);
        gbc.writeMem(0x6ad5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xee48);
        EXPECT(gbc.pc(), 0x6ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 035E
        gbc.setState(0x644d, 0xf447, 0xcae0, 0x498c, 0x9d55, 0x6fcd, 0x1, 0x0);
        gbc.writeMem(0x644d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf447);
        EXPECT(gbc.pc(), 0x644f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 035F
        gbc.setState(0x7fae, 0x3103, 0x95a0, 0x1db1, 0x1980, 0xedd2, 0x1, 0x1);
        gbc.writeMem(0x7fae, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3103);
        EXPECT(gbc.pc(), 0x7fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0360
        gbc.setState(0x9313, 0xf12b, 0xfa30, 0xbbcb, 0x49af, 0x8cbf, 0x1, 0x1);
        gbc.writeMem(0x9313, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf12b);
        EXPECT(gbc.pc(), 0x9315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9313), 0xcb);
        EXPECT(gbc.readMem(0x9314), 0x40);
        // CB 40 0361
        gbc.setState(0xd0cc, 0xeafa, 0x8720, 0x6880, 0xae1c, 0xaba8, 0x1, 0x1);
        gbc.writeMem(0xd0cc, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xeafa);
        EXPECT(gbc.pc(), 0xd0ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0cc), 0xcb);
        EXPECT(gbc.readMem(0xd0cd), 0x40);
        // CB 40 0362
        gbc.setState(0x2d2e, 0xc627, 0xb180, 0x20af, 0xaacd, 0x805d, 0x0, 0x0);
        gbc.writeMem(0x2d2e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc627);
        EXPECT(gbc.pc(), 0x2d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0363
        gbc.setState(0x6b15, 0x198b, 0x3800, 0xaed, 0x1bac, 0xc03b, 0x1, 0x1);
        gbc.writeMem(0x6b15, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x198b);
        EXPECT(gbc.pc(), 0x6b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0364
        gbc.setState(0x1547, 0x9db5, 0xda60, 0xaed8, 0xb4e8, 0x36d6, 0x1, 0x0);
        gbc.writeMem(0x1547, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9db5);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0365
        gbc.setState(0x39b2, 0xa39d, 0x29c0, 0xabd8, 0x6588, 0xc04e, 0x0, 0x0);
        gbc.writeMem(0x39b2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa39d);
        EXPECT(gbc.pc(), 0x39b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0366
        gbc.setState(0x5f3f, 0x7e0d, 0x32e0, 0x5c22, 0x49de, 0x81b4, 0x0, 0x1);
        gbc.writeMem(0x5f3f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7e0d);
        EXPECT(gbc.pc(), 0x5f41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0367
        gbc.setState(0x8c47, 0x8c2d, 0xdb40, 0xb853, 0xf132, 0x64dd, 0x1, 0x1);
        gbc.writeMem(0x8c47, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8c2d);
        EXPECT(gbc.pc(), 0x8c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c47), 0xcb);
        EXPECT(gbc.readMem(0x8c48), 0x40);
        // CB 40 0368
        gbc.setState(0x8f61, 0xba05, 0x4e0, 0x297a, 0x20a8, 0xb78d, 0x1, 0x0);
        gbc.writeMem(0x8f61, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xba05);
        EXPECT(gbc.pc(), 0x8f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f61), 0xcb);
        EXPECT(gbc.readMem(0x8f62), 0x40);
        // CB 40 0369
        gbc.setState(0xa26a, 0xda6b, 0x4e60, 0xd7d6, 0x29b4, 0x3403, 0x1, 0x1);
        gbc.writeMem(0xa26a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xda6b);
        EXPECT(gbc.pc(), 0xa26c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa26a), 0xcb);
        EXPECT(gbc.readMem(0xa26b), 0x40);
        // CB 40 036A
        gbc.setState(0x9d6f, 0x9499, 0xbac0, 0x755b, 0xcd4f, 0x8f9c, 0x1, 0x1);
        gbc.writeMem(0x9d6f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9499);
        EXPECT(gbc.pc(), 0x9d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d6f), 0xcb);
        EXPECT(gbc.readMem(0x9d70), 0x40);
        // CB 40 036B
        gbc.setState(0x6bd4, 0x8a56, 0xb410, 0x749c, 0xb147, 0xd227, 0x1, 0x0);
        gbc.writeMem(0x6bd4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8a56);
        EXPECT(gbc.pc(), 0x6bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 036C
        gbc.setState(0x7683, 0x580f, 0x3b70, 0x77b0, 0xc4f, 0xf67b, 0x0, 0x1);
        gbc.writeMem(0x7683, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x580f);
        EXPECT(gbc.pc(), 0x7685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 036D
        gbc.setState(0xd9b4, 0xf108, 0xe9c0, 0x4448, 0x6c52, 0xb822, 0x1, 0x1);
        gbc.writeMem(0xd9b4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf108);
        EXPECT(gbc.pc(), 0xd9b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b4), 0xcb);
        EXPECT(gbc.readMem(0xd9b5), 0x40);
        // CB 40 036E
        gbc.setState(0xb67c, 0x16d6, 0x160, 0xb04f, 0x9287, 0xcf47, 0x0, 0x1);
        gbc.writeMem(0xb67c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x16d6);
        EXPECT(gbc.pc(), 0xb67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb67c), 0xcb);
        EXPECT(gbc.readMem(0xb67d), 0x40);
        // CB 40 0370
        gbc.setState(0x25f4, 0xcb56, 0x56e0, 0x2dc9, 0xe11a, 0xc784, 0x1, 0x1);
        gbc.writeMem(0x25f4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xcb56);
        EXPECT(gbc.pc(), 0x25f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0371
        gbc.setState(0xa818, 0xeecf, 0x1090, 0xb98e, 0xf6e7, 0x4105, 0x0, 0x1);
        gbc.writeMem(0xa818, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xeecf);
        EXPECT(gbc.pc(), 0xa81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa818), 0xcb);
        EXPECT(gbc.readMem(0xa819), 0x40);
        // CB 40 0372
        gbc.setState(0xbcec, 0x3f5d, 0xfdb0, 0xc3c4, 0x36d0, 0x1c46, 0x1, 0x0);
        gbc.writeMem(0xbcec, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3f5d);
        EXPECT(gbc.pc(), 0xbcee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcec), 0xcb);
        EXPECT(gbc.readMem(0xbced), 0x40);
        // CB 40 0373
        gbc.setState(0xee61, 0x8b37, 0x1c10, 0x3c55, 0x76c7, 0xfb5b, 0x0, 0x0);
        gbc.writeMem(0xee61, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8b37);
        EXPECT(gbc.pc(), 0xee63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee61), 0xcb);
        EXPECT(gbc.readMem(0xee62), 0x40);
        // CB 40 0374
        gbc.setState(0xd69e, 0x6996, 0xb5b0, 0x912d, 0x78f7, 0x1267, 0x0, 0x1);
        gbc.writeMem(0xd69e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6996);
        EXPECT(gbc.pc(), 0xd6a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69e), 0xcb);
        EXPECT(gbc.readMem(0xd69f), 0x40);
        // CB 40 0375
        gbc.setState(0x60c6, 0x9a72, 0xee30, 0x1c9, 0x3cf8, 0x66, 0x1, 0x0);
        gbc.writeMem(0x60c6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9a72);
        EXPECT(gbc.pc(), 0x60c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0376
        gbc.setState(0xe63e, 0x9a2f, 0xa9f0, 0xcda, 0xe0c7, 0x46a3, 0x0, 0x0);
        gbc.writeMem(0xe63e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9a2f);
        EXPECT(gbc.pc(), 0xe640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe63e), 0xcb);
        EXPECT(gbc.readMem(0xe63f), 0x40);
        // CB 40 0377
        gbc.setState(0x1235, 0x1198, 0x5900, 0x1189, 0x8f2a, 0x1f3d, 0x1, 0x0);
        gbc.writeMem(0x1235, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1198);
        EXPECT(gbc.pc(), 0x1237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0378
        gbc.setState(0x7617, 0xdde6, 0xfed0, 0x92fd, 0xec34, 0x3cfa, 0x1, 0x0);
        gbc.writeMem(0x7617, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdde6);
        EXPECT(gbc.pc(), 0x7619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0379
        gbc.setState(0x701, 0xfdcc, 0xee00, 0x2bab, 0xbcb4, 0xf884, 0x1, 0x0);
        gbc.writeMem(0x701, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfdcc);
        EXPECT(gbc.pc(), 0x703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 037A
        gbc.setState(0x4cce, 0x3caa, 0xf240, 0x5e34, 0xb5e, 0x1f9c, 0x0, 0x1);
        gbc.writeMem(0x4cce, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3caa);
        EXPECT(gbc.pc(), 0x4cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 037B
        gbc.setState(0x623b, 0xe613, 0xb800, 0xb845, 0x5cbb, 0xd54c, 0x1, 0x0);
        gbc.writeMem(0x623b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe613);
        EXPECT(gbc.pc(), 0x623d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 037C
        gbc.setState(0x9538, 0x2640, 0xdca0, 0x892c, 0x41ef, 0x491b, 0x1, 0x0);
        gbc.writeMem(0x9538, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2640);
        EXPECT(gbc.pc(), 0x953a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9538), 0xcb);
        EXPECT(gbc.readMem(0x9539), 0x40);
        // CB 40 037D
        gbc.setState(0xbe87, 0x957b, 0x2df0, 0x695e, 0xcc1e, 0x4cc4, 0x1, 0x1);
        gbc.writeMem(0xbe87, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x957b);
        EXPECT(gbc.pc(), 0xbe89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe87), 0xcb);
        EXPECT(gbc.readMem(0xbe88), 0x40);
        // CB 40 037E
        gbc.setState(0x1e04, 0xf674, 0xee50, 0x92c, 0xd63, 0x5eb4, 0x1, 0x1);
        gbc.writeMem(0x1e04, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf674);
        EXPECT(gbc.pc(), 0x1e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 037F
        gbc.setState(0x1c0f, 0xff24, 0xf430, 0xd6a1, 0xda1c, 0x23ae, 0x0, 0x1);
        gbc.writeMem(0x1c0f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xff24);
        EXPECT(gbc.pc(), 0x1c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0380
        gbc.setState(0xb858, 0xe035, 0x6770, 0x2074, 0xec47, 0x2f48, 0x1, 0x1);
        gbc.writeMem(0xb858, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe035);
        EXPECT(gbc.pc(), 0xb85a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb858), 0xcb);
        EXPECT(gbc.readMem(0xb859), 0x40);
        // CB 40 0381
        gbc.setState(0x6fe, 0x4fde, 0x5ca0, 0x22e8, 0x7614, 0x2ab6, 0x0, 0x1);
        gbc.writeMem(0x6fe, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4fde);
        EXPECT(gbc.pc(), 0x700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0382
        gbc.setState(0x67d7, 0x868b, 0x4310, 0xc99b, 0xdaa1, 0x5403, 0x0, 0x0);
        gbc.writeMem(0x67d7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x868b);
        EXPECT(gbc.pc(), 0x67d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0383
        gbc.setState(0x39e1, 0xafea, 0xef50, 0xfb2d, 0x3742, 0x35ee, 0x0, 0x0);
        gbc.writeMem(0x39e1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xafea);
        EXPECT(gbc.pc(), 0x39e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0384
        gbc.setState(0xd5d1, 0xb7d5, 0x6c70, 0xee4c, 0x661f, 0xa9c4, 0x0, 0x0);
        gbc.writeMem(0xd5d1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb7d5);
        EXPECT(gbc.pc(), 0xd5d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d1), 0xcb);
        EXPECT(gbc.readMem(0xd5d2), 0x40);
        // CB 40 0385
        gbc.setState(0x77a7, 0x2c7b, 0xcd00, 0x8e6, 0x2db9, 0x8f2b, 0x0, 0x1);
        gbc.writeMem(0x77a7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2c7b);
        EXPECT(gbc.pc(), 0x77a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0386
        gbc.setState(0x8ba1, 0xa04b, 0xecf0, 0x3858, 0xaa05, 0xe995, 0x1, 0x0);
        gbc.writeMem(0x8ba1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa04b);
        EXPECT(gbc.pc(), 0x8ba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba1), 0xcb);
        EXPECT(gbc.readMem(0x8ba2), 0x40);
        // CB 40 0387
        gbc.setState(0x6ebf, 0x1bf0, 0x3760, 0x68a5, 0xdd04, 0xc3b3, 0x1, 0x1);
        gbc.writeMem(0x6ebf, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1bf0);
        EXPECT(gbc.pc(), 0x6ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0388
        gbc.setState(0x476a, 0xb50d, 0x3e80, 0xbc5, 0xb67, 0xa8ea, 0x1, 0x1);
        gbc.writeMem(0x476a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb50d);
        EXPECT(gbc.pc(), 0x476c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0389
        gbc.setState(0x9be1, 0x412c, 0xca30, 0x6d02, 0xe54e, 0xcd06, 0x1, 0x1);
        gbc.writeMem(0x9be1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x412c);
        EXPECT(gbc.pc(), 0x9be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9be1), 0xcb);
        EXPECT(gbc.readMem(0x9be2), 0x40);
        // CB 40 038A
        gbc.setState(0xca7f, 0xe60d, 0x7eb0, 0xdeba, 0xb424, 0x437e, 0x1, 0x0);
        gbc.writeMem(0xca7f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe60d);
        EXPECT(gbc.pc(), 0xca81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca7f), 0xcb);
        EXPECT(gbc.readMem(0xca80), 0x40);
        // CB 40 038B
        gbc.setState(0xdfc8, 0x3e9, 0x6eb0, 0x92d2, 0x7e17, 0xa37f, 0x0, 0x0);
        gbc.writeMem(0xdfc8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3e9);
        EXPECT(gbc.pc(), 0xdfca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc8), 0xcb);
        EXPECT(gbc.readMem(0xdfc9), 0x40);
        // CB 40 038C
        gbc.setState(0x42fe, 0xcfa0, 0x7460, 0x76ac, 0xb868, 0xae86, 0x1, 0x1);
        gbc.writeMem(0x42fe, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcfa0);
        EXPECT(gbc.pc(), 0x4300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 038D
        gbc.setState(0xd899, 0x5f3f, 0x6690, 0x6d7f, 0x5977, 0x70aa, 0x1, 0x0);
        gbc.writeMem(0xd899, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5f3f);
        EXPECT(gbc.pc(), 0xd89b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd899), 0xcb);
        EXPECT(gbc.readMem(0xd89a), 0x40);
        // CB 40 038E
        gbc.setState(0x9517, 0xc115, 0x9fc0, 0x37b6, 0xf772, 0xb77, 0x1, 0x1);
        gbc.writeMem(0x9517, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc115);
        EXPECT(gbc.pc(), 0x9519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9517), 0xcb);
        EXPECT(gbc.readMem(0x9518), 0x40);
        // CB 40 038F
        gbc.setState(0x24d1, 0x904d, 0xd450, 0x9b68, 0x643d, 0x5a88, 0x0, 0x1);
        gbc.writeMem(0x24d1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x904d);
        EXPECT(gbc.pc(), 0x24d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0391
        gbc.setState(0x2c9b, 0x9b01, 0x25a0, 0x9a1b, 0x9693, 0xf220, 0x0, 0x1);
        gbc.writeMem(0x2c9b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9b01);
        EXPECT(gbc.pc(), 0x2c9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0392
        gbc.setState(0x6599, 0xf3fa, 0xbb80, 0x6262, 0xb0e3, 0xdc74, 0x0, 0x0);
        gbc.writeMem(0x6599, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf3fa);
        EXPECT(gbc.pc(), 0x659b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 0393
        gbc.setState(0x858d, 0x7b3c, 0x8ab0, 0xdd54, 0xbcb6, 0x2292, 0x0, 0x0);
        gbc.writeMem(0x858d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7b3c);
        EXPECT(gbc.pc(), 0x858f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x858d), 0xcb);
        EXPECT(gbc.readMem(0x858e), 0x40);
        // CB 40 0394
        gbc.setState(0x6b9e, 0x172a, 0xc750, 0x5f4c, 0xe6c0, 0xe1b6, 0x1, 0x1);
        gbc.writeMem(0x6b9e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x172a);
        EXPECT(gbc.pc(), 0x6ba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0395
        gbc.setState(0x3e90, 0x4c80, 0x76f0, 0xc61b, 0xb077, 0x6c42, 0x1, 0x0);
        gbc.writeMem(0x3e90, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4c80);
        EXPECT(gbc.pc(), 0x3e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0397
        gbc.setState(0xb4a6, 0xfeb3, 0xa380, 0x9abc, 0x8980, 0xbd55, 0x0, 0x1);
        gbc.writeMem(0xb4a6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfeb3);
        EXPECT(gbc.pc(), 0xb4a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4a6), 0xcb);
        EXPECT(gbc.readMem(0xb4a7), 0x40);
        // CB 40 0398
        gbc.setState(0x63a5, 0x6eac, 0xbab0, 0x796e, 0xbf90, 0xd063, 0x1, 0x1);
        gbc.writeMem(0x63a5, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6eac);
        EXPECT(gbc.pc(), 0x63a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 0399
        gbc.setState(0x8d51, 0x2d95, 0x4820, 0x6622, 0xf48e, 0xf25, 0x0, 0x0);
        gbc.writeMem(0x8d51, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2d95);
        EXPECT(gbc.pc(), 0x8d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d51), 0xcb);
        EXPECT(gbc.readMem(0x8d52), 0x40);
        // CB 40 039A
        gbc.setState(0x372e, 0x96d7, 0xee70, 0xe886, 0x3b17, 0xbe14, 0x0, 0x1);
        gbc.writeMem(0x372e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x96d7);
        EXPECT(gbc.pc(), 0x3730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 039B
        gbc.setState(0x992d, 0x634b, 0x53b0, 0xaf73, 0x4264, 0x676e, 0x1, 0x0);
        gbc.writeMem(0x992d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x634b);
        EXPECT(gbc.pc(), 0x992f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992d), 0xcb);
        EXPECT(gbc.readMem(0x992e), 0x40);
        // CB 40 039C
        gbc.setState(0xb979, 0xc214, 0x7370, 0xd8b5, 0x3114, 0xbf17, 0x1, 0x0);
        gbc.writeMem(0xb979, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc214);
        EXPECT(gbc.pc(), 0xb97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb979), 0xcb);
        EXPECT(gbc.readMem(0xb97a), 0x40);
        // CB 40 039D
        gbc.setState(0x34db, 0x2983, 0xf710, 0xf3e4, 0xfe28, 0xc6e5, 0x0, 0x1);
        gbc.writeMem(0x34db, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2983);
        EXPECT(gbc.pc(), 0x34dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 039E
        gbc.setState(0x5334, 0xc4aa, 0x9b30, 0xc317, 0xbc61, 0xc84e, 0x1, 0x1);
        gbc.writeMem(0x5334, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc4aa);
        EXPECT(gbc.pc(), 0x5336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03A0
        gbc.setState(0x2258, 0x11b9, 0x110, 0x964b, 0xd5b2, 0x4fbf, 0x0, 0x0);
        gbc.writeMem(0x2258, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x11b9);
        EXPECT(gbc.pc(), 0x225a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03A1
        gbc.setState(0xd324, 0xe711, 0xf830, 0x663f, 0x3751, 0xd771, 0x1, 0x0);
        gbc.writeMem(0xd324, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe711);
        EXPECT(gbc.pc(), 0xd326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd324), 0xcb);
        EXPECT(gbc.readMem(0xd325), 0x40);
        // CB 40 03A2
        gbc.setState(0x32e, 0x8a3c, 0x9d0, 0x13fa, 0x1b8a, 0xe1ba, 0x0, 0x0);
        gbc.writeMem(0x32e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8a3c);
        EXPECT(gbc.pc(), 0x330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03A3
        gbc.setState(0xad16, 0xebcb, 0xcb20, 0x3e2c, 0x8b42, 0xae52, 0x0, 0x1);
        gbc.writeMem(0xad16, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xebcb);
        EXPECT(gbc.pc(), 0xad18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad16), 0xcb);
        EXPECT(gbc.readMem(0xad17), 0x40);
        // CB 40 03A4
        gbc.setState(0x9c81, 0x226a, 0xcab0, 0xd73, 0xf0da, 0x6478, 0x0, 0x1);
        gbc.writeMem(0x9c81, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x226a);
        EXPECT(gbc.pc(), 0x9c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c81), 0xcb);
        EXPECT(gbc.readMem(0x9c82), 0x40);
        // CB 40 03A5
        gbc.setState(0x78e2, 0x1fa2, 0x9ff0, 0x545e, 0xf072, 0x4ab, 0x1, 0x0);
        gbc.writeMem(0x78e2, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1fa2);
        EXPECT(gbc.pc(), 0x78e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03A6
        gbc.setState(0x3f7e, 0x8e7a, 0x9890, 0xf3af, 0x17c6, 0xe04e, 0x0, 0x0);
        gbc.writeMem(0x3f7e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8e7a);
        EXPECT(gbc.pc(), 0x3f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03A7
        gbc.setState(0xa549, 0xfecb, 0x9880, 0x5a94, 0x2f6c, 0xc559, 0x1, 0x0);
        gbc.writeMem(0xa549, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfecb);
        EXPECT(gbc.pc(), 0xa54b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa549), 0xcb);
        EXPECT(gbc.readMem(0xa54a), 0x40);
        // CB 40 03A8
        gbc.setState(0xe7ff, 0xf59b, 0xfec0, 0x25bc, 0xe84b, 0x95e3, 0x1, 0x1);
        gbc.writeMem(0xe7ff, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf59b);
        EXPECT(gbc.pc(), 0xe801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ff), 0xcb);
        EXPECT(gbc.readMem(0xe800), 0x40);
        // CB 40 03A9
        gbc.setState(0xae64, 0xc852, 0xf850, 0xf037, 0x17ad, 0xcabe, 0x0, 0x1);
        gbc.writeMem(0xae64, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc852);
        EXPECT(gbc.pc(), 0xae66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae64), 0xcb);
        EXPECT(gbc.readMem(0xae65), 0x40);
        // CB 40 03AA
        gbc.setState(0xd436, 0x2c6, 0x1b40, 0x26b0, 0xa2ed, 0xe31, 0x0, 0x1);
        gbc.writeMem(0xd436, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2c6);
        EXPECT(gbc.pc(), 0xd438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd436), 0xcb);
        EXPECT(gbc.readMem(0xd437), 0x40);
        // CB 40 03AB
        gbc.setState(0x27bd, 0xc031, 0x7480, 0x16fe, 0xcd08, 0x91e7, 0x1, 0x1);
        gbc.writeMem(0x27bd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc031);
        EXPECT(gbc.pc(), 0x27bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03AC
        gbc.setState(0xb48e, 0xec0e, 0xbff0, 0x35ef, 0xacd0, 0x4fa4, 0x1, 0x1);
        gbc.writeMem(0xb48e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xec0e);
        EXPECT(gbc.pc(), 0xb490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb48e), 0xcb);
        EXPECT(gbc.readMem(0xb48f), 0x40);
        // CB 40 03AD
        gbc.setState(0x125e, 0x9755, 0x5430, 0xfd08, 0x656c, 0xec3f, 0x1, 0x1);
        gbc.writeMem(0x125e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9755);
        EXPECT(gbc.pc(), 0x1260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03AE
        gbc.setState(0x7bbd, 0x730b, 0x8b0, 0xd1b6, 0xa77b, 0xf1, 0x1, 0x0);
        gbc.writeMem(0x7bbd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x730b);
        EXPECT(gbc.pc(), 0x7bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03AF
        gbc.setState(0x4e6, 0x1e9, 0xe90, 0xa0b2, 0xd560, 0x13f8, 0x1, 0x0);
        gbc.writeMem(0x4e6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1e9);
        EXPECT(gbc.pc(), 0x4e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03B0
        gbc.setState(0xf56, 0x1454, 0x6b50, 0x7f6b, 0x5f17, 0xdd3d, 0x0, 0x1);
        gbc.writeMem(0xf56, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1454);
        EXPECT(gbc.pc(), 0xf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03B1
        gbc.setState(0xe7b1, 0xc197, 0xce60, 0xb60, 0x76be, 0x6150, 0x1, 0x0);
        gbc.writeMem(0xe7b1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc197);
        EXPECT(gbc.pc(), 0xe7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b1), 0xcb);
        EXPECT(gbc.readMem(0xe7b2), 0x40);
        // CB 40 03B2
        gbc.setState(0xed26, 0xef33, 0xf430, 0x6415, 0xc455, 0x961e, 0x0, 0x0);
        gbc.writeMem(0xed26, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xef33);
        EXPECT(gbc.pc(), 0xed28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed26), 0xcb);
        EXPECT(gbc.readMem(0xed27), 0x40);
        // CB 40 03B3
        gbc.setState(0xc4, 0xd76c, 0x4b40, 0xc720, 0x3b01, 0xfa1c, 0x0, 0x0);
        gbc.writeMem(0xc4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd76c);
        EXPECT(gbc.pc(), 0xc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03B5
        gbc.setState(0xafe4, 0x426d, 0x9cb0, 0xe732, 0x1122, 0xfd98, 0x0, 0x1);
        gbc.writeMem(0xafe4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x426d);
        EXPECT(gbc.pc(), 0xafe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe4), 0xcb);
        EXPECT(gbc.readMem(0xafe5), 0x40);
        // CB 40 03B6
        gbc.setState(0x8658, 0x6892, 0x94b0, 0xe124, 0xf5fb, 0x4233, 0x0, 0x1);
        gbc.writeMem(0x8658, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6892);
        EXPECT(gbc.pc(), 0x865a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8658), 0xcb);
        EXPECT(gbc.readMem(0x8659), 0x40);
        // CB 40 03B7
        gbc.setState(0x9111, 0x30b9, 0x7aa0, 0xed9c, 0x2c84, 0xff2e, 0x1, 0x1);
        gbc.writeMem(0x9111, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x30b9);
        EXPECT(gbc.pc(), 0x9113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9111), 0xcb);
        EXPECT(gbc.readMem(0x9112), 0x40);
        // CB 40 03B8
        gbc.setState(0xa15d, 0xd31f, 0xe410, 0x1b72, 0x7271, 0xe752, 0x0, 0x0);
        gbc.writeMem(0xa15d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd31f);
        EXPECT(gbc.pc(), 0xa15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa15d), 0xcb);
        EXPECT(gbc.readMem(0xa15e), 0x40);
        // CB 40 03B9
        gbc.setState(0xb71f, 0xb4ff, 0x88a0, 0x9bf0, 0x86c, 0xd5df, 0x1, 0x1);
        gbc.writeMem(0xb71f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb4ff);
        EXPECT(gbc.pc(), 0xb721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb71f), 0xcb);
        EXPECT(gbc.readMem(0xb720), 0x40);
        // CB 40 03BA
        gbc.setState(0x2204, 0xea0f, 0xdf10, 0x30bb, 0x243d, 0x6c66, 0x0, 0x1);
        gbc.writeMem(0x2204, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xea0f);
        EXPECT(gbc.pc(), 0x2206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03BB
        gbc.setState(0x66d6, 0x4303, 0xa540, 0x9fb2, 0xd3b7, 0xda4c, 0x1, 0x0);
        gbc.writeMem(0x66d6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4303);
        EXPECT(gbc.pc(), 0x66d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03BC
        gbc.setState(0x6b72, 0x70ea, 0xed10, 0xeb83, 0x8cb1, 0x776f, 0x1, 0x1);
        gbc.writeMem(0x6b72, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x70ea);
        EXPECT(gbc.pc(), 0x6b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03BD
        gbc.setState(0xe738, 0xca0, 0x1250, 0x40ac, 0x8aa0, 0xf6fa, 0x1, 0x0);
        gbc.writeMem(0xe738, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xca0);
        EXPECT(gbc.pc(), 0xe73a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe738), 0xcb);
        EXPECT(gbc.readMem(0xe739), 0x40);
        // CB 40 03BE
        gbc.setState(0x6277, 0x76b0, 0x8a40, 0x1668, 0xaf37, 0x9f2b, 0x1, 0x1);
        gbc.writeMem(0x6277, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x76b0);
        EXPECT(gbc.pc(), 0x6279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03BF
        gbc.setState(0x4bac, 0x8bb6, 0x3070, 0x2205, 0x2a64, 0x5f7f, 0x1, 0x0);
        gbc.writeMem(0x4bac, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8bb6);
        EXPECT(gbc.pc(), 0x4bae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03C1
        gbc.setState(0x1cd8, 0x82dd, 0x1e0, 0x895f, 0x565, 0x5844, 0x0, 0x0);
        gbc.writeMem(0x1cd8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x82dd);
        EXPECT(gbc.pc(), 0x1cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03C2
        gbc.setState(0x11e9, 0x502d, 0x2610, 0xe572, 0x92d3, 0x7cf9, 0x1, 0x0);
        gbc.writeMem(0x11e9, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x502d);
        EXPECT(gbc.pc(), 0x11eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03C3
        gbc.setState(0x7cb4, 0xf69d, 0xabf0, 0x5b72, 0x8fe7, 0xd14, 0x0, 0x0);
        gbc.writeMem(0x7cb4, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf69d);
        EXPECT(gbc.pc(), 0x7cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03C4
        gbc.setState(0x1621, 0x51b4, 0xb430, 0x971a, 0x59bc, 0x6bac, 0x0, 0x0);
        gbc.writeMem(0x1621, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x51b4);
        EXPECT(gbc.pc(), 0x1623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03C5
        gbc.setState(0xa02d, 0xda6b, 0x3640, 0x74f, 0xa91b, 0x741c, 0x0, 0x1);
        gbc.writeMem(0xa02d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xda6b);
        EXPECT(gbc.pc(), 0xa02f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02d), 0xcb);
        EXPECT(gbc.readMem(0xa02e), 0x40);
        // CB 40 03C6
        gbc.setState(0x413c, 0x31fc, 0xe4d0, 0xca25, 0x80ab, 0xc564, 0x0, 0x1);
        gbc.writeMem(0x413c, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x31fc);
        EXPECT(gbc.pc(), 0x413e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03C7
        gbc.setState(0x4aa3, 0x5553, 0xee40, 0xa913, 0x2aa8, 0x383, 0x1, 0x0);
        gbc.writeMem(0x4aa3, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5553);
        EXPECT(gbc.pc(), 0x4aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03C8
        gbc.setState(0x6735, 0x9dc0, 0xd9f0, 0x2691, 0x6627, 0xc94a, 0x0, 0x0);
        gbc.writeMem(0x6735, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9dc0);
        EXPECT(gbc.pc(), 0x6737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03C9
        gbc.setState(0xe29b, 0xaf89, 0xee00, 0x8f32, 0x3523, 0xecce, 0x0, 0x1);
        gbc.writeMem(0xe29b, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xaf89);
        EXPECT(gbc.pc(), 0xe29d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe29b), 0xcb);
        EXPECT(gbc.readMem(0xe29c), 0x40);
        // CB 40 03CA
        gbc.setState(0x63de, 0x2db8, 0x9140, 0x8112, 0x8727, 0xefb7, 0x1, 0x0);
        gbc.writeMem(0x63de, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2db8);
        EXPECT(gbc.pc(), 0x63e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03CB
        gbc.setState(0x46d7, 0x1df9, 0x1bc0, 0x67f, 0x43c9, 0x4ad6, 0x1, 0x0);
        gbc.writeMem(0x46d7, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1df9);
        EXPECT(gbc.pc(), 0x46d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03CC
        gbc.setState(0xce0f, 0x89d2, 0x3b00, 0xf1e0, 0x81ea, 0xa66b, 0x0, 0x0);
        gbc.writeMem(0xce0f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x89d2);
        EXPECT(gbc.pc(), 0xce11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce0f), 0xcb);
        EXPECT(gbc.readMem(0xce10), 0x40);
        // CB 40 03CD
        gbc.setState(0xe9e1, 0x1f6, 0x3e30, 0xb7c5, 0x23b6, 0xe1a6, 0x1, 0x0);
        gbc.writeMem(0xe9e1, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1f6);
        EXPECT(gbc.pc(), 0xe9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e1), 0xcb);
        EXPECT(gbc.readMem(0xe9e2), 0x40);
        // CB 40 03CE
        gbc.setState(0xb764, 0x35db, 0x7160, 0x6263, 0x2f11, 0x2e09, 0x0, 0x0);
        gbc.writeMem(0xb764, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x35db);
        EXPECT(gbc.pc(), 0xb766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb764), 0xcb);
        EXPECT(gbc.readMem(0xb765), 0x40);
        // CB 40 03CF
        gbc.setState(0xe07a, 0x813a, 0x9ae0, 0x6d4b, 0x3cc2, 0x5203, 0x1, 0x1);
        gbc.writeMem(0xe07a, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x813a);
        EXPECT(gbc.pc(), 0xe07c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe07a), 0xcb);
        EXPECT(gbc.readMem(0xe07b), 0x40);
        // CB 40 03D0
        gbc.setState(0x3948, 0xf730, 0xa450, 0x5667, 0x4412, 0xab0d, 0x0, 0x0);
        gbc.writeMem(0x3948, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf730);
        EXPECT(gbc.pc(), 0x394a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03D1
        gbc.setState(0xddb8, 0xd226, 0x9570, 0x9c1a, 0x8816, 0xa4ca, 0x1, 0x1);
        gbc.writeMem(0xddb8, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd226);
        EXPECT(gbc.pc(), 0xddba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddb8), 0xcb);
        EXPECT(gbc.readMem(0xddb9), 0x40);
        // CB 40 03D2
        gbc.setState(0xba29, 0x2c7b, 0x8fa0, 0xd3a8, 0xd1f3, 0xade9, 0x0, 0x1);
        gbc.writeMem(0xba29, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2c7b);
        EXPECT(gbc.pc(), 0xba2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba29), 0xcb);
        EXPECT(gbc.readMem(0xba2a), 0x40);
        // CB 40 03D3
        gbc.setState(0x181e, 0xf23d, 0x93d0, 0x4fa7, 0x3819, 0xa650, 0x0, 0x1);
        gbc.writeMem(0x181e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf23d);
        EXPECT(gbc.pc(), 0x1820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03D4
        gbc.setState(0x136, 0x868, 0xf720, 0xcd1, 0xbdb6, 0x959, 0x1, 0x0);
        gbc.writeMem(0x136, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x868);
        EXPECT(gbc.pc(), 0x138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03D5
        gbc.setState(0x5491, 0x940c, 0x6e10, 0x9f22, 0x8ee6, 0xd096, 0x0, 0x1);
        gbc.writeMem(0x5491, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x940c);
        EXPECT(gbc.pc(), 0x5493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03D6
        gbc.setState(0xc80e, 0xe948, 0x6f0, 0x7e6b, 0xe49a, 0x3f64, 0x0, 0x1);
        gbc.writeMem(0xc80e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe948);
        EXPECT(gbc.pc(), 0xc810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc80e), 0xcb);
        EXPECT(gbc.readMem(0xc80f), 0x40);
        // CB 40 03D7
        gbc.setState(0xc620, 0x47e0, 0x2110, 0x984d, 0x59ab, 0xc4, 0x1, 0x0);
        gbc.writeMem(0xc620, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x47e0);
        EXPECT(gbc.pc(), 0xc622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc620), 0xcb);
        EXPECT(gbc.readMem(0xc621), 0x40);
        // CB 40 03D8
        gbc.setState(0x6e83, 0xbbdc, 0x6120, 0x2ab5, 0x6b55, 0x3b85, 0x0, 0x1);
        gbc.writeMem(0x6e83, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xbbdc);
        EXPECT(gbc.pc(), 0x6e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03D9
        gbc.setState(0x5980, 0x8eae, 0x4db0, 0x14d, 0xb9d3, 0x9941, 0x0, 0x0);
        gbc.writeMem(0x5980, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8eae);
        EXPECT(gbc.pc(), 0x5982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03DA
        gbc.setState(0x89ec, 0x6f4, 0x6300, 0x9ae3, 0xce61, 0xb418, 0x0, 0x0);
        gbc.writeMem(0x89ec, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6f4);
        EXPECT(gbc.pc(), 0x89ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ec), 0xcb);
        EXPECT(gbc.readMem(0x89ed), 0x40);
        // CB 40 03DC
        gbc.setState(0x2d44, 0x641c, 0x6a40, 0x39f5, 0x54b7, 0x5536, 0x0, 0x0);
        gbc.writeMem(0x2d44, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x641c);
        EXPECT(gbc.pc(), 0x2d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03DD
        gbc.setState(0xb07d, 0x219b, 0x40, 0xd551, 0xb533, 0x8753, 0x0, 0x1);
        gbc.writeMem(0xb07d, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x219b);
        EXPECT(gbc.pc(), 0xb07f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07d), 0xcb);
        EXPECT(gbc.readMem(0xb07e), 0x40);
        // CB 40 03DE
        gbc.setState(0x158e, 0xf4c4, 0x7390, 0x4d69, 0x6aa7, 0xc44d, 0x1, 0x0);
        gbc.writeMem(0x158e, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf4c4);
        EXPECT(gbc.pc(), 0x1590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03DF
        gbc.setState(0xd6c0, 0x6158, 0xa530, 0x2040, 0x410d, 0x1785, 0x1, 0x0);
        gbc.writeMem(0xd6c0, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6158);
        EXPECT(gbc.pc(), 0xd6c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c0), 0xcb);
        EXPECT(gbc.readMem(0xd6c1), 0x40);
        // CB 40 03E0
        gbc.setState(0x35cd, 0xbc, 0xf910, 0x2f8a, 0xec50, 0xd5b9, 0x1, 0x0);
        gbc.writeMem(0x35cd, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbc);
        EXPECT(gbc.pc(), 0x35cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03E1
        gbc.setState(0x5ffb, 0xb627, 0xaa40, 0x5348, 0x3989, 0xafc7, 0x0, 0x0);
        gbc.writeMem(0x5ffb, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb627);
        EXPECT(gbc.pc(), 0x5ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03E2
        gbc.setState(0x75f, 0x15a8, 0x5a40, 0xa69a, 0x8d48, 0xdc26, 0x1, 0x0);
        gbc.writeMem(0x75f, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x15a8);
        EXPECT(gbc.pc(), 0x761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03E3
        gbc.setState(0x3967, 0xb614, 0xad80, 0x2087, 0xbe5d, 0x8606, 0x1, 0x0);
        gbc.writeMem(0x3967, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb614);
        EXPECT(gbc.pc(), 0x3969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03E4
        gbc.setState(0x4863, 0x787a, 0x7110, 0x847, 0x3489, 0x636, 0x0, 0x0);
        gbc.writeMem(0x4863, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x787a);
        EXPECT(gbc.pc(), 0x4865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 40 03E5
        gbc.setState(0xa7aa, 0x36ea, 0x3b80, 0x4780, 0xc308, 0xe92f, 0x0, 0x0);
        gbc.writeMem(0xa7aa, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x36ea);
        EXPECT(gbc.pc(), 0xa7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7aa), 0xcb);
        EXPECT(gbc.readMem(0xa7ab), 0x40);
        // CB 40 03E6
        gbc.setState(0x5596, 0x6d65, 0x4bc0, 0xad8, 0xd1a9, 0xc9c7, 0x1, 0x0);
        gbc.writeMem(0x5596, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6d65);
        EXPECT(gbc.pc(), 0x5598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 40 03E7
        gbc.setState(0x1ed6, 0x3d17, 0xde10, 0x8fb2, 0xccd7, 0xcc7f, 0x0, 0x1);
        gbc.writeMem(0x1ed6, { 0xcb, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3d17);
        EXPECT(gbc.pc(), 0x1ed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
