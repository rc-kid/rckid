    TEST(gbcemu, opcode_68) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 68 0000
        gbc.setState(0x719a, 0xb02d, 0xc3d0, 0x3099, 0x5d57, 0xd416, 0x1, 0x1);
        gbc.writeMem(0x719a, { 0x68 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb02d, gbc.sp());
        EXPECT(0x719b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0001
        gbc.setState(0xb6d8, 0xcd8e, 0xa500, 0x5947, 0xd124, 0xda82, 0x0, 0x0);
        gbc.writeMem(0xb6d8, { 0x68 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcd8e, gbc.sp());
        EXPECT(0xb6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb6d8));
        // 68 0002
        gbc.setState(0x5dc1, 0x1c48, 0xd480, 0x518d, 0xd26b, 0x14e4, 0x1, 0x0);
        gbc.writeMem(0x5dc1, { 0x68 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1c48, gbc.sp());
        EXPECT(0x5dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0004
        gbc.setState(0xb35a, 0xd94e, 0xcb80, 0xa6df, 0x4378, 0x306c, 0x1, 0x1);
        gbc.writeMem(0xb35a, { 0x68 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd94e, gbc.sp());
        EXPECT(0xb35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb35a));
        // 68 0005
        gbc.setState(0x32ae, 0x4f0c, 0xd940, 0xed3, 0xc510, 0xa6e1, 0x1, 0x1);
        gbc.writeMem(0x32ae, { 0x68 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4f0c, gbc.sp());
        EXPECT(0x32af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0006
        gbc.setState(0xdc65, 0x3784, 0x83b0, 0xbf5b, 0xc702, 0xfef5, 0x1, 0x1);
        gbc.writeMem(0xdc65, { 0x68 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3784, gbc.sp());
        EXPECT(0xdc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdc65));
        // 68 0007
        gbc.setState(0xa07c, 0xf9, 0x47f0, 0xeaed, 0x8eb2, 0x5f0e, 0x0, 0x1);
        gbc.writeMem(0xa07c, { 0x68 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf9, gbc.sp());
        EXPECT(0xa07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa07c));
        // 68 0008
        gbc.setState(0x7cc, 0xa0d9, 0xda90, 0xaf8f, 0x729a, 0x79f0, 0x0, 0x1);
        gbc.writeMem(0x7cc, { 0x68 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa0d9, gbc.sp());
        EXPECT(0x7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0009
        gbc.setState(0xae6, 0xb869, 0x71e0, 0x519f, 0x72a2, 0xce19, 0x0, 0x0);
        gbc.writeMem(0xae6, { 0x68 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb869, gbc.sp());
        EXPECT(0xae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 000A
        gbc.setState(0xcbcb, 0x3b24, 0xb910, 0x69f6, 0xf2c3, 0xd8d2, 0x1, 0x0);
        gbc.writeMem(0xcbcb, { 0x68 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3b24, gbc.sp());
        EXPECT(0xcbcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcbcb));
        // 68 000B
        gbc.setState(0x1a0d, 0x119b, 0x500, 0x65a0, 0x2e25, 0xf06, 0x1, 0x1);
        gbc.writeMem(0x1a0d, { 0x68 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x119b, gbc.sp());
        EXPECT(0x1a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 000C
        gbc.setState(0xdff2, 0x4dc2, 0xdf40, 0x5705, 0x4550, 0xb370, 0x0, 0x0);
        gbc.writeMem(0xdff2, { 0x68 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4dc2, gbc.sp());
        EXPECT(0xdff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdff2));
        // 68 000E
        gbc.setState(0x26a2, 0x11e1, 0x1610, 0xc8c0, 0x5d2f, 0x64dd, 0x0, 0x0);
        gbc.writeMem(0x26a2, { 0x68 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x11e1, gbc.sp());
        EXPECT(0x26a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 000F
        gbc.setState(0x78ed, 0xbbfb, 0x9f40, 0xc19, 0xe3cf, 0x3968, 0x1, 0x1);
        gbc.writeMem(0x78ed, { 0x68 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbbfb, gbc.sp());
        EXPECT(0x78ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0010
        gbc.setState(0xa786, 0x80e7, 0x4720, 0xcb54, 0xee2b, 0xeaee, 0x1, 0x1);
        gbc.writeMem(0xa786, { 0x68 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x80e7, gbc.sp());
        EXPECT(0xa787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa786));
        // 68 0011
        gbc.setState(0xd9cb, 0x541a, 0xab20, 0xa0d8, 0x8fc6, 0x2de6, 0x1, 0x0);
        gbc.writeMem(0xd9cb, { 0x68 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x541a, gbc.sp());
        EXPECT(0xd9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd9cb));
        // 68 0012
        gbc.setState(0x8076, 0xdee5, 0x9740, 0x29ce, 0xf7cb, 0x4dde, 0x0, 0x0);
        gbc.writeMem(0x8076, { 0x68 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdee5, gbc.sp());
        EXPECT(0x8077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8076));
        // 68 0013
        gbc.setState(0xc032, 0x3f26, 0x5140, 0x3339, 0xa595, 0x6eaf, 0x1, 0x1);
        gbc.writeMem(0xc032, { 0x68 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3f26, gbc.sp());
        EXPECT(0xc033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc032));
        // 68 0014
        gbc.setState(0x33c0, 0xd574, 0x77b0, 0x61f9, 0x19d4, 0x43db, 0x1, 0x1);
        gbc.writeMem(0x33c0, { 0x68 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd574, gbc.sp());
        EXPECT(0x33c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0015
        gbc.setState(0x4957, 0xd673, 0x95f0, 0x76d4, 0x2caa, 0xce0c, 0x0, 0x1);
        gbc.writeMem(0x4957, { 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd673, gbc.sp());
        EXPECT(0x4958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0016
        gbc.setState(0xe599, 0x5135, 0xe9e0, 0xb0b, 0x929b, 0x76a3, 0x1, 0x0);
        gbc.writeMem(0xe599, { 0x68 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5135, gbc.sp());
        EXPECT(0xe59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe599));
        // 68 0017
        gbc.setState(0x1248, 0x92c8, 0xabb0, 0x52ce, 0xf9a4, 0x1cff, 0x0, 0x1);
        gbc.writeMem(0x1248, { 0x68 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x92c8, gbc.sp());
        EXPECT(0x1249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0019
        gbc.setState(0xa622, 0xedbd, 0xf590, 0x1bba, 0x1912, 0x634a, 0x0, 0x0);
        gbc.writeMem(0xa622, { 0x68 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xedbd, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa622));
        // 68 001A
        gbc.setState(0xbd7f, 0x52a2, 0x6b20, 0xd822, 0xacdb, 0x1921, 0x1, 0x0);
        gbc.writeMem(0xbd7f, { 0x68 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x52a2, gbc.sp());
        EXPECT(0xbd80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbd7f));
        // 68 001B
        gbc.setState(0x9a76, 0x1f9b, 0x3b30, 0xc64a, 0xe240, 0x3c29, 0x1, 0x0);
        gbc.writeMem(0x9a76, { 0x68 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1f9b, gbc.sp());
        EXPECT(0x9a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9a76));
        // 68 001C
        gbc.setState(0x4073, 0x8a86, 0x55c0, 0xaac6, 0xcef1, 0xbfc7, 0x0, 0x1);
        gbc.writeMem(0x4073, { 0x68 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8a86, gbc.sp());
        EXPECT(0x4074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 001D
        gbc.setState(0xcdbf, 0x267, 0x8d70, 0x4247, 0xd715, 0xe076, 0x0, 0x0);
        gbc.writeMem(0xcdbf, { 0x68 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x267, gbc.sp());
        EXPECT(0xcdc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcdbf));
        // 68 001E
        gbc.setState(0xd335, 0x7c89, 0xe890, 0xee3a, 0xcd62, 0x6ac0, 0x0, 0x0);
        gbc.writeMem(0xd335, { 0x68 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7c89, gbc.sp());
        EXPECT(0xd336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd335));
        // 68 0020
        gbc.setState(0xdbfa, 0xb79a, 0x1ca0, 0xf881, 0x75c5, 0xa623, 0x0, 0x0);
        gbc.writeMem(0xdbfa, { 0x68 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb79a, gbc.sp());
        EXPECT(0xdbfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdbfa));
        // 68 0021
        gbc.setState(0x8fd5, 0xec0c, 0xdd70, 0xf4f1, 0x3ed, 0xf401, 0x1, 0x0);
        gbc.writeMem(0x8fd5, { 0x68 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xec0c, gbc.sp());
        EXPECT(0x8fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8fd5));
        // 68 0022
        gbc.setState(0x62a8, 0x3729, 0xe7e0, 0xb6e9, 0x12b, 0x9fc1, 0x0, 0x1);
        gbc.writeMem(0x62a8, { 0x68 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3729, gbc.sp());
        EXPECT(0x62a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0023
        gbc.setState(0x6a0c, 0x9efe, 0x5520, 0x26c6, 0x141c, 0x98fb, 0x0, 0x0);
        gbc.writeMem(0x6a0c, { 0x68 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9efe, gbc.sp());
        EXPECT(0x6a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0026
        gbc.setState(0x64da, 0x361e, 0xe6e0, 0xee3a, 0x2024, 0x74c8, 0x0, 0x0);
        gbc.writeMem(0x64da, { 0x68 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x361e, gbc.sp());
        EXPECT(0x64db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0027
        gbc.setState(0x3cba, 0xc9e6, 0xea60, 0x3759, 0xaf47, 0x5b4b, 0x1, 0x0);
        gbc.writeMem(0x3cba, { 0x68 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc9e6, gbc.sp());
        EXPECT(0x3cbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0028
        gbc.setState(0x2269, 0xa342, 0xeac0, 0x7a3a, 0x8a57, 0x99f5, 0x0, 0x0);
        gbc.writeMem(0x2269, { 0x68 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa342, gbc.sp());
        EXPECT(0x226a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0029
        gbc.setState(0xb207, 0x3046, 0xa900, 0x9149, 0xd421, 0xed7b, 0x1, 0x0);
        gbc.writeMem(0xb207, { 0x68 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3046, gbc.sp());
        EXPECT(0xb208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb207));
        // 68 002A
        gbc.setState(0x5fce, 0xbc13, 0xe830, 0xe987, 0x834b, 0xeade, 0x1, 0x0);
        gbc.writeMem(0x5fce, { 0x68 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc13, gbc.sp());
        EXPECT(0x5fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 002B
        gbc.setState(0x543, 0x6eac, 0xca00, 0xac61, 0x597c, 0xde8b, 0x0, 0x1);
        gbc.writeMem(0x543, { 0x68 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6eac, gbc.sp());
        EXPECT(0x544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 002C
        gbc.setState(0x87db, 0x324d, 0xf610, 0xc34b, 0x27fc, 0x60f7, 0x0, 0x0);
        gbc.writeMem(0x87db, { 0x68 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x324d, gbc.sp());
        EXPECT(0x87dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x87db));
        // 68 002D
        gbc.setState(0xb978, 0x9dd2, 0x2fe0, 0xe3c6, 0xd2be, 0x8f90, 0x0, 0x1);
        gbc.writeMem(0xb978, { 0x68 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9dd2, gbc.sp());
        EXPECT(0xb979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb978));
        // 68 002E
        gbc.setState(0x919b, 0x24c6, 0xf7b0, 0x68e, 0x76a3, 0x2e25, 0x0, 0x0);
        gbc.writeMem(0x919b, { 0x68 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x24c6, gbc.sp());
        EXPECT(0x919c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x919b));
        // 68 002F
        gbc.setState(0xa0f7, 0xbe6e, 0x71b0, 0x8164, 0x42ea, 0xe67a, 0x0, 0x0);
        gbc.writeMem(0xa0f7, { 0x68 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbe6e, gbc.sp());
        EXPECT(0xa0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa0f7));
        // 68 0031
        gbc.setState(0xe72d, 0xe245, 0x1c40, 0x4f18, 0x6248, 0xa76d, 0x1, 0x0);
        gbc.writeMem(0xe72d, { 0x68 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe245, gbc.sp());
        EXPECT(0xe72e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe72d));
        // 68 0032
        gbc.setState(0xc448, 0x24b5, 0x1070, 0x563c, 0x7ad0, 0x8257, 0x0, 0x1);
        gbc.writeMem(0xc448, { 0x68 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x24b5, gbc.sp());
        EXPECT(0xc449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc448));
        // 68 0033
        gbc.setState(0x4fa2, 0xf912, 0x6a40, 0x4214, 0x9584, 0x55ee, 0x1, 0x0);
        gbc.writeMem(0x4fa2, { 0x68 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf912, gbc.sp());
        EXPECT(0x4fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0034
        gbc.setState(0xc919, 0x9ac7, 0x9ed0, 0x71b3, 0x1c5b, 0x30d8, 0x1, 0x0);
        gbc.writeMem(0xc919, { 0x68 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9ac7, gbc.sp());
        EXPECT(0xc91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc919));
        // 68 0035
        gbc.setState(0x6c5c, 0xb849, 0xf5e0, 0x5526, 0x7d8, 0x3edc, 0x1, 0x1);
        gbc.writeMem(0x6c5c, { 0x68 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb849, gbc.sp());
        EXPECT(0x6c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0036
        gbc.setState(0x190b, 0x5f22, 0x2350, 0x888f, 0xd0d8, 0xb8fa, 0x0, 0x1);
        gbc.writeMem(0x190b, { 0x68 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5f22, gbc.sp());
        EXPECT(0x190c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0037
        gbc.setState(0xaea0, 0x1853, 0x8c90, 0xb6f6, 0x3bc9, 0xc47, 0x1, 0x0);
        gbc.writeMem(0xaea0, { 0x68 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1853, gbc.sp());
        EXPECT(0xaea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xaea0));
        // 68 0038
        gbc.setState(0x4f89, 0xb9b3, 0xbdd0, 0x3d0e, 0xece3, 0xff82, 0x0, 0x0);
        gbc.writeMem(0x4f89, { 0x68 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0x4f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0039
        gbc.setState(0x62cb, 0x333b, 0x79d0, 0xeda6, 0xd018, 0xe4e6, 0x0, 0x1);
        gbc.writeMem(0x62cb, { 0x68 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x333b, gbc.sp());
        EXPECT(0x62cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 003A
        gbc.setState(0x723a, 0xc583, 0x7f40, 0x29f6, 0x8767, 0x6568, 0x1, 0x0);
        gbc.writeMem(0x723a, { 0x68 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc583, gbc.sp());
        EXPECT(0x723b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 003B
        gbc.setState(0xaa1, 0xb289, 0x46f0, 0x5443, 0x5b8a, 0x2d6, 0x1, 0x0);
        gbc.writeMem(0xaa1, { 0x68 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb289, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 003C
        gbc.setState(0xa3ca, 0x1991, 0x5360, 0x5677, 0xc1f8, 0x6d2, 0x0, 0x1);
        gbc.writeMem(0xa3ca, { 0x68 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1991, gbc.sp());
        EXPECT(0xa3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa3ca));
        // 68 003D
        gbc.setState(0x5fe1, 0xdc5b, 0xb740, 0x7bcf, 0xadc, 0x70f5, 0x0, 0x1);
        gbc.writeMem(0x5fe1, { 0x68 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdc5b, gbc.sp());
        EXPECT(0x5fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 003E
        gbc.setState(0x6198, 0x65ea, 0x8000, 0x7cc6, 0x8d83, 0xc6ef, 0x1, 0x1);
        gbc.writeMem(0x6198, { 0x68 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x65ea, gbc.sp());
        EXPECT(0x6199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 003F
        gbc.setState(0x534f, 0xf67e, 0x1360, 0xc02d, 0x823b, 0x699f, 0x0, 0x0);
        gbc.writeMem(0x534f, { 0x68 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf67e, gbc.sp());
        EXPECT(0x5350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0040
        gbc.setState(0xdec1, 0xf4f7, 0x4d90, 0xd26d, 0x3e53, 0x4017, 0x1, 0x0);
        gbc.writeMem(0xdec1, { 0x68 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf4f7, gbc.sp());
        EXPECT(0xdec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdec1));
        // 68 0042
        gbc.setState(0xab33, 0x64c5, 0x2530, 0x374c, 0x9a8a, 0xc239, 0x0, 0x0);
        gbc.writeMem(0xab33, { 0x68 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x64c5, gbc.sp());
        EXPECT(0xab34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xab33));
        // 68 0043
        gbc.setState(0x468d, 0x7d89, 0xdf50, 0x35ba, 0x277, 0xc7a4, 0x1, 0x0);
        gbc.writeMem(0x468d, { 0x68 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7d89, gbc.sp());
        EXPECT(0x468e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0044
        gbc.setState(0x198a, 0x7f3a, 0xa380, 0xe46f, 0xba3b, 0x578e, 0x1, 0x0);
        gbc.writeMem(0x198a, { 0x68 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7f3a, gbc.sp());
        EXPECT(0x198b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0046
        gbc.setState(0x5d89, 0x2903, 0xa450, 0x937e, 0x4300, 0x78e9, 0x0, 0x1);
        gbc.writeMem(0x5d89, { 0x68 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2903, gbc.sp());
        EXPECT(0x5d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0047
        gbc.setState(0xcc90, 0xc164, 0xccb0, 0x1aea, 0x2b02, 0x55e5, 0x1, 0x1);
        gbc.writeMem(0xcc90, { 0x68 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc164, gbc.sp());
        EXPECT(0xcc91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcc90));
        // 68 0048
        gbc.setState(0xda40, 0x68dd, 0x2e60, 0x53ad, 0x4af0, 0x5a5a, 0x0, 0x0);
        gbc.writeMem(0xda40, { 0x68 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x68dd, gbc.sp());
        EXPECT(0xda41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xda40));
        // 68 0049
        gbc.setState(0x2e6c, 0x685e, 0xc3d0, 0x6767, 0x4a09, 0x17d2, 0x0, 0x0);
        gbc.writeMem(0x2e6c, { 0x68 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x685e, gbc.sp());
        EXPECT(0x2e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 004A
        gbc.setState(0x5f53, 0x6b44, 0x5960, 0x7da0, 0x5fa5, 0xae78, 0x1, 0x1);
        gbc.writeMem(0x5f53, { 0x68 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6b44, gbc.sp());
        EXPECT(0x5f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 004B
        gbc.setState(0xdcbb, 0x1f56, 0x5f60, 0x2ae0, 0xace5, 0xfedb, 0x1, 0x0);
        gbc.writeMem(0xdcbb, { 0x68 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1f56, gbc.sp());
        EXPECT(0xdcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdcbb));
        // 68 004C
        gbc.setState(0x4579, 0x53bb, 0x2ed0, 0x651b, 0x33c2, 0xff67, 0x1, 0x0);
        gbc.writeMem(0x4579, { 0x68 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x53bb, gbc.sp());
        EXPECT(0x457a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 004D
        gbc.setState(0x5036, 0x7d61, 0x4830, 0x5e60, 0x2fe6, 0xafc7, 0x0, 0x1);
        gbc.writeMem(0x5036, { 0x68 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7d61, gbc.sp());
        EXPECT(0x5037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 004E
        gbc.setState(0x9ce, 0xa700, 0x8070, 0x4edb, 0x6f0, 0xc5e3, 0x1, 0x0);
        gbc.writeMem(0x9ce, { 0x68 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa700, gbc.sp());
        EXPECT(0x9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 004F
        gbc.setState(0xb120, 0x692f, 0xd1a0, 0xac69, 0x1bd, 0x1c1, 0x1, 0x1);
        gbc.writeMem(0xb120, { 0x68 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x692f, gbc.sp());
        EXPECT(0xb121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb120));
        // 68 0050
        gbc.setState(0xddab, 0xedd4, 0x2d80, 0xa748, 0x922a, 0x490f, 0x0, 0x0);
        gbc.writeMem(0xddab, { 0x68 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xedd4, gbc.sp());
        EXPECT(0xddac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xddab));
        // 68 0051
        gbc.setState(0x7597, 0x8333, 0x76d0, 0xd8b2, 0x1ded, 0x857f, 0x0, 0x1);
        gbc.writeMem(0x7597, { 0x68 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8333, gbc.sp());
        EXPECT(0x7598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0052
        gbc.setState(0x921e, 0xd18b, 0xef0, 0x4f2, 0xbe61, 0x6647, 0x0, 0x0);
        gbc.writeMem(0x921e, { 0x68 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd18b, gbc.sp());
        EXPECT(0x921f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x921e));
        // 68 0053
        gbc.setState(0x61af, 0xd94e, 0xe690, 0x2e7b, 0x38d2, 0x2d1b, 0x0, 0x1);
        gbc.writeMem(0x61af, { 0x68 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd94e, gbc.sp());
        EXPECT(0x61b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0054
        gbc.setState(0x9fbf, 0xf5e8, 0x650, 0x1270, 0x398, 0xdca6, 0x1, 0x1);
        gbc.writeMem(0x9fbf, { 0x68 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf5e8, gbc.sp());
        EXPECT(0x9fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9fbf));
        // 68 0055
        gbc.setState(0x66e0, 0x24d5, 0x8e70, 0x2496, 0x97ed, 0xf9dd, 0x1, 0x0);
        gbc.writeMem(0x66e0, { 0x68 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x24d5, gbc.sp());
        EXPECT(0x66e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0056
        gbc.setState(0xdaa, 0x747c, 0x1c50, 0xab3c, 0x169f, 0xce2c, 0x0, 0x1);
        gbc.writeMem(0xdaa, { 0x68 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x747c, gbc.sp());
        EXPECT(0xdab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0057
        gbc.setState(0x4cc4, 0xe71, 0x4e00, 0xe1aa, 0xd950, 0x8dc8, 0x1, 0x1);
        gbc.writeMem(0x4cc4, { 0x68 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe71, gbc.sp());
        EXPECT(0x4cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0058
        gbc.setState(0x51bd, 0x3f17, 0xdf00, 0x1eed, 0x1900, 0xc776, 0x0, 0x1);
        gbc.writeMem(0x51bd, { 0x68 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3f17, gbc.sp());
        EXPECT(0x51be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0059
        gbc.setState(0xaf51, 0x275e, 0x5b0, 0x1b64, 0x5632, 0xc70b, 0x1, 0x1);
        gbc.writeMem(0xaf51, { 0x68 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x275e, gbc.sp());
        EXPECT(0xaf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xaf51));
        // 68 005A
        gbc.setState(0x17ad, 0x8017, 0xc490, 0x7966, 0x6129, 0xaf9e, 0x1, 0x1);
        gbc.writeMem(0x17ad, { 0x68 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8017, gbc.sp());
        EXPECT(0x17ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 005B
        gbc.setState(0x96d4, 0x519f, 0xd5e0, 0xf918, 0x123b, 0xb076, 0x0, 0x1);
        gbc.writeMem(0x96d4, { 0x68 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x519f, gbc.sp());
        EXPECT(0x96d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x96d4));
        // 68 005C
        gbc.setState(0x5643, 0x87ae, 0x2b60, 0x2197, 0x2a24, 0x474b, 0x1, 0x0);
        gbc.writeMem(0x5643, { 0x68 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x87ae, gbc.sp());
        EXPECT(0x5644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 005D
        gbc.setState(0x578b, 0x7c5b, 0x9a80, 0x4ff3, 0x94, 0xac03, 0x1, 0x0);
        gbc.writeMem(0x578b, { 0x68 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7c5b, gbc.sp());
        EXPECT(0x578c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 005E
        gbc.setState(0x51ac, 0x3a15, 0x3a10, 0x4b46, 0x7c9, 0xd648, 0x0, 0x0);
        gbc.writeMem(0x51ac, { 0x68 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3a15, gbc.sp());
        EXPECT(0x51ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 005F
        gbc.setState(0xce22, 0x8619, 0x9020, 0x3c43, 0x5b8c, 0xd5c, 0x1, 0x0);
        gbc.writeMem(0xce22, { 0x68 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8619, gbc.sp());
        EXPECT(0xce23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xce22));
        // 68 0060
        gbc.setState(0xafdd, 0xc1fe, 0x8150, 0x350, 0xaa39, 0x42d7, 0x0, 0x1);
        gbc.writeMem(0xafdd, { 0x68 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc1fe, gbc.sp());
        EXPECT(0xafde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xafdd));
        // 68 0061
        gbc.setState(0x5341, 0x7ec8, 0xdf50, 0xefc9, 0xda61, 0x26f3, 0x0, 0x0);
        gbc.writeMem(0x5341, { 0x68 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7ec8, gbc.sp());
        EXPECT(0x5342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0062
        gbc.setState(0x265d, 0x91f8, 0xa850, 0x1d99, 0x3fa4, 0xedfc, 0x1, 0x1);
        gbc.writeMem(0x265d, { 0x68 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x91f8, gbc.sp());
        EXPECT(0x265e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0063
        gbc.setState(0x56e5, 0xb6d8, 0xc710, 0x2016, 0x9dc2, 0xed3, 0x1, 0x0);
        gbc.writeMem(0x56e5, { 0x68 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb6d8, gbc.sp());
        EXPECT(0x56e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0064
        gbc.setState(0x18be, 0x8e6f, 0x9bc0, 0x1620, 0x74a3, 0x862f, 0x1, 0x1);
        gbc.writeMem(0x18be, { 0x68 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8e6f, gbc.sp());
        EXPECT(0x18bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0065
        gbc.setState(0x8428, 0x469c, 0x9dd0, 0x8295, 0x296c, 0x7cbc, 0x1, 0x0);
        gbc.writeMem(0x8428, { 0x68 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x469c, gbc.sp());
        EXPECT(0x8429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8428));
        // 68 0066
        gbc.setState(0xbe62, 0x9f07, 0xd100, 0x26b1, 0xdb51, 0xbd49, 0x1, 0x1);
        gbc.writeMem(0xbe62, { 0x68 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9f07, gbc.sp());
        EXPECT(0xbe63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbe62));
        // 68 0067
        gbc.setState(0xa86, 0x2032, 0xf450, 0xd524, 0x7615, 0x40a5, 0x1, 0x0);
        gbc.writeMem(0xa86, { 0x68 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2032, gbc.sp());
        EXPECT(0xa87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0068
        gbc.setState(0x3cc, 0x3253, 0x2250, 0x33d8, 0x36f9, 0x58a, 0x0, 0x1);
        gbc.writeMem(0x3cc, { 0x68 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3253, gbc.sp());
        EXPECT(0x3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0069
        gbc.setState(0xe48a, 0x74d3, 0x4e00, 0x503e, 0x3def, 0x4818, 0x0, 0x0);
        gbc.writeMem(0xe48a, { 0x68 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x74d3, gbc.sp());
        EXPECT(0xe48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe48a));
        // 68 006A
        gbc.setState(0xb119, 0x83b5, 0xa380, 0xc2ee, 0x63a8, 0x8fbd, 0x1, 0x1);
        gbc.writeMem(0xb119, { 0x68 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x83b5, gbc.sp());
        EXPECT(0xb11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb119));
        // 68 006B
        gbc.setState(0x9488, 0x77f8, 0x7d90, 0x62b4, 0x481f, 0x3878, 0x0, 0x1);
        gbc.writeMem(0x9488, { 0x68 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x77f8, gbc.sp());
        EXPECT(0x9489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9488));
        // 68 006C
        gbc.setState(0xe93d, 0x60d4, 0x59c0, 0x1486, 0xb7ff, 0x6e8a, 0x0, 0x0);
        gbc.writeMem(0xe93d, { 0x68 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x60d4, gbc.sp());
        EXPECT(0xe93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe93d));
        // 68 006D
        gbc.setState(0x15d3, 0xdb8f, 0x2f0, 0x9732, 0xfcee, 0x824e, 0x1, 0x0);
        gbc.writeMem(0x15d3, { 0x68 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdb8f, gbc.sp());
        EXPECT(0x15d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 006F
        gbc.setState(0x8fa5, 0xb5b, 0xc770, 0x9cbf, 0x234a, 0x86fe, 0x1, 0x1);
        gbc.writeMem(0x8fa5, { 0x68 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb5b, gbc.sp());
        EXPECT(0x8fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8fa5));
        // 68 0070
        gbc.setState(0xa233, 0x30e3, 0x6890, 0xddc3, 0x2a0d, 0xd6a, 0x0, 0x0);
        gbc.writeMem(0xa233, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x30e3, gbc.sp());
        EXPECT(0xa234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa233));
        // 68 0072
        gbc.setState(0x102f, 0xce80, 0x6080, 0xe06e, 0xcfbc, 0xbaf2, 0x0, 0x0);
        gbc.writeMem(0x102f, { 0x68 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xce80, gbc.sp());
        EXPECT(0x1030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0073
        gbc.setState(0x5f21, 0x32f0, 0xc030, 0x142, 0xe803, 0xc38a, 0x0, 0x0);
        gbc.writeMem(0x5f21, { 0x68 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x32f0, gbc.sp());
        EXPECT(0x5f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0074
        gbc.setState(0x9c79, 0xb841, 0x3c0, 0x83b0, 0xb679, 0x847e, 0x1, 0x1);
        gbc.writeMem(0x9c79, { 0x68 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb841, gbc.sp());
        EXPECT(0x9c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9c79));
        // 68 0075
        gbc.setState(0x559f, 0x4fad, 0x3830, 0x48f7, 0x9227, 0x1a92, 0x0, 0x0);
        gbc.writeMem(0x559f, { 0x68 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4fad, gbc.sp());
        EXPECT(0x55a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0076
        gbc.setState(0x8ea, 0x9a6b, 0xf8c0, 0xb7d0, 0xcbcf, 0xdaca, 0x0, 0x1);
        gbc.writeMem(0x8ea, { 0x68 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9a6b, gbc.sp());
        EXPECT(0x8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0077
        gbc.setState(0xdf98, 0xd534, 0x3bd0, 0x6d8d, 0xcb1d, 0x4193, 0x1, 0x0);
        gbc.writeMem(0xdf98, { 0x68 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd534, gbc.sp());
        EXPECT(0xdf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdf98));
        // 68 0078
        gbc.setState(0x44d2, 0x79f8, 0xafb0, 0x41d6, 0xd553, 0x39c3, 0x0, 0x0);
        gbc.writeMem(0x44d2, { 0x68 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x79f8, gbc.sp());
        EXPECT(0x44d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0079
        gbc.setState(0xd8e8, 0x35bd, 0x74a0, 0x69ff, 0xd3a1, 0x8de5, 0x0, 0x0);
        gbc.writeMem(0xd8e8, { 0x68 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x35bd, gbc.sp());
        EXPECT(0xd8e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd8e8));
        // 68 007A
        gbc.setState(0xe15d, 0xc1e1, 0x3eb0, 0x79d8, 0xb2a, 0x8a06, 0x1, 0x0);
        gbc.writeMem(0xe15d, { 0x68 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc1e1, gbc.sp());
        EXPECT(0xe15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe15d));
        // 68 007B
        gbc.setState(0x9304, 0x577d, 0xf230, 0x14db, 0x4a43, 0xb550, 0x0, 0x0);
        gbc.writeMem(0x9304, { 0x68 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x577d, gbc.sp());
        EXPECT(0x9305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9304));
        // 68 007C
        gbc.setState(0x1e2, 0xf1cf, 0x9e20, 0x73a2, 0x4500, 0x1526, 0x1, 0x1);
        gbc.writeMem(0x1e2, { 0x68 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf1cf, gbc.sp());
        EXPECT(0x1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 007D
        gbc.setState(0x5338, 0x3cff, 0xce30, 0x563, 0x3d14, 0x3424, 0x1, 0x0);
        gbc.writeMem(0x5338, { 0x68 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3cff, gbc.sp());
        EXPECT(0x5339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 007E
        gbc.setState(0x4c55, 0xa8bc, 0xebe0, 0x8805, 0xa6d2, 0x2644, 0x1, 0x0);
        gbc.writeMem(0x4c55, { 0x68 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa8bc, gbc.sp());
        EXPECT(0x4c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 007F
        gbc.setState(0xe732, 0x673, 0x4790, 0xba74, 0x3fef, 0x91ff, 0x1, 0x0);
        gbc.writeMem(0xe732, { 0x68 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x673, gbc.sp());
        EXPECT(0xe733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe732));
        // 68 0080
        gbc.setState(0xde51, 0xb889, 0xb630, 0x7a40, 0xdec7, 0x54cc, 0x1, 0x0);
        gbc.writeMem(0xde51, { 0x68 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb889, gbc.sp());
        EXPECT(0xde52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xde51));
        // 68 0081
        gbc.setState(0x5260, 0xf100, 0xef00, 0x8b35, 0xec7f, 0x41ed, 0x1, 0x0);
        gbc.writeMem(0x5260, { 0x68 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf100, gbc.sp());
        EXPECT(0x5261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0082
        gbc.setState(0xf52, 0xfece, 0xb510, 0x4ef4, 0x6183, 0x749e, 0x0, 0x1);
        gbc.writeMem(0xf52, { 0x68 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfece, gbc.sp());
        EXPECT(0xf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0083
        gbc.setState(0x70d0, 0x44cb, 0x77d0, 0x4204, 0x6e3e, 0x5d0, 0x1, 0x1);
        gbc.writeMem(0x70d0, { 0x68 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x44cb, gbc.sp());
        EXPECT(0x70d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0084
        gbc.setState(0xeebc, 0xdea3, 0x69b0, 0x5818, 0x32cb, 0x77e3, 0x0, 0x0);
        gbc.writeMem(0xeebc, { 0x68 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdea3, gbc.sp());
        EXPECT(0xeebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xeebc));
        // 68 0085
        gbc.setState(0x4f27, 0xb37c, 0x4fc0, 0xc1a5, 0x24a1, 0x74bd, 0x1, 0x1);
        gbc.writeMem(0x4f27, { 0x68 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb37c, gbc.sp());
        EXPECT(0x4f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0086
        gbc.setState(0x6aed, 0xe793, 0x5a60, 0x480a, 0xbfad, 0x895e, 0x1, 0x0);
        gbc.writeMem(0x6aed, { 0x68 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe793, gbc.sp());
        EXPECT(0x6aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0087
        gbc.setState(0xb6a7, 0x6e9d, 0xd2e0, 0x5bba, 0xcc4e, 0x94e6, 0x0, 0x0);
        gbc.writeMem(0xb6a7, { 0x68 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6e9d, gbc.sp());
        EXPECT(0xb6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb6a7));
        // 68 0088
        gbc.setState(0x5a8c, 0xc748, 0x11c0, 0x8683, 0x7816, 0x87da, 0x1, 0x1);
        gbc.writeMem(0x5a8c, { 0x68 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc748, gbc.sp());
        EXPECT(0x5a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0089
        gbc.setState(0xb049, 0x71ab, 0xe370, 0x915a, 0x9443, 0xf91f, 0x0, 0x0);
        gbc.writeMem(0xb049, { 0x68 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x71ab, gbc.sp());
        EXPECT(0xb04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb049));
        // 68 008B
        gbc.setState(0x99ae, 0xc6c1, 0x2c50, 0x4ec0, 0xa088, 0xbaa7, 0x0, 0x1);
        gbc.writeMem(0x99ae, { 0x68 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc6c1, gbc.sp());
        EXPECT(0x99af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x99ae));
        // 68 008C
        gbc.setState(0xc42d, 0xf304, 0xe8d0, 0xc54c, 0xeef8, 0xc6ac, 0x0, 0x0);
        gbc.writeMem(0xc42d, { 0x68 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf304, gbc.sp());
        EXPECT(0xc42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc42d));
        // 68 008D
        gbc.setState(0x133c, 0xf6a2, 0x9350, 0x8810, 0xa0e8, 0x1810, 0x1, 0x1);
        gbc.writeMem(0x133c, { 0x68 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf6a2, gbc.sp());
        EXPECT(0x133d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 008E
        gbc.setState(0x6c0c, 0x94b, 0x3490, 0xa4eb, 0x3fe7, 0x8d52, 0x1, 0x1);
        gbc.writeMem(0x6c0c, { 0x68 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x94b, gbc.sp());
        EXPECT(0x6c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 008F
        gbc.setState(0x2222, 0xb10a, 0x64c0, 0x609b, 0x52d2, 0x324e, 0x1, 0x0);
        gbc.writeMem(0x2222, { 0x68 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb10a, gbc.sp());
        EXPECT(0x2223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0090
        gbc.setState(0xe8f7, 0x4608, 0xbae0, 0x36d7, 0x8bd8, 0xa046, 0x0, 0x1);
        gbc.writeMem(0xe8f7, { 0x68 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4608, gbc.sp());
        EXPECT(0xe8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe8f7));
        // 68 0092
        gbc.setState(0xae68, 0x55ea, 0x2820, 0xd93c, 0x7a62, 0xdb9d, 0x0, 0x0);
        gbc.writeMem(0xae68, { 0x68 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x55ea, gbc.sp());
        EXPECT(0xae69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xae68));
        // 68 0094
        gbc.setState(0x15af, 0xc338, 0xad30, 0x183, 0x80af, 0xae7c, 0x0, 0x1);
        gbc.writeMem(0x15af, { 0x68 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc338, gbc.sp());
        EXPECT(0x15b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0095
        gbc.setState(0x101b, 0xcc4e, 0xb3f0, 0x7928, 0xc964, 0x42fa, 0x0, 0x0);
        gbc.writeMem(0x101b, { 0x68 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcc4e, gbc.sp());
        EXPECT(0x101c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0096
        gbc.setState(0xb604, 0xdec, 0xebb0, 0x3519, 0xaaff, 0x882e, 0x1, 0x0);
        gbc.writeMem(0xb604, { 0x68 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdec, gbc.sp());
        EXPECT(0xb605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb604));
        // 68 0097
        gbc.setState(0x321e, 0x475, 0xa0f0, 0x582d, 0x54cf, 0x1793, 0x0, 0x1);
        gbc.writeMem(0x321e, { 0x68 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x475, gbc.sp());
        EXPECT(0x321f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0098
        gbc.setState(0x5906, 0xe3d, 0xcd70, 0xfe61, 0x552b, 0xa997, 0x1, 0x0);
        gbc.writeMem(0x5906, { 0x68 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe3d, gbc.sp());
        EXPECT(0x5907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0099
        gbc.setState(0xd9d4, 0xaa45, 0x4b40, 0xdae4, 0x8923, 0x10ff, 0x1, 0x0);
        gbc.writeMem(0xd9d4, { 0x68 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xaa45, gbc.sp());
        EXPECT(0xd9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd9d4));
        // 68 009A
        gbc.setState(0x3e09, 0x831, 0x7e00, 0x2819, 0x3e68, 0x5265, 0x1, 0x0);
        gbc.writeMem(0x3e09, { 0x68 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x831, gbc.sp());
        EXPECT(0x3e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 009B
        gbc.setState(0x57b4, 0x6bc3, 0x9680, 0x5ca8, 0x48ec, 0xa1b5, 0x1, 0x0);
        gbc.writeMem(0x57b4, { 0x68 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6bc3, gbc.sp());
        EXPECT(0x57b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 009C
        gbc.setState(0xc296, 0xc041, 0xc830, 0x272a, 0x6dd8, 0xc3af, 0x1, 0x1);
        gbc.writeMem(0xc296, { 0x68 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc041, gbc.sp());
        EXPECT(0xc297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc296));
        // 68 009D
        gbc.setState(0x17a7, 0xf9f5, 0x10a0, 0xbc0, 0xfe5f, 0x935f, 0x1, 0x1);
        gbc.writeMem(0x17a7, { 0x68 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf9f5, gbc.sp());
        EXPECT(0x17a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 009E
        gbc.setState(0x231f, 0x817, 0x5190, 0x8e73, 0x924, 0xd1bf, 0x1, 0x0);
        gbc.writeMem(0x231f, { 0x68 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x817, gbc.sp());
        EXPECT(0x2320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 009F
        gbc.setState(0x3ba5, 0x6833, 0x5630, 0x1d03, 0xeba2, 0x56ea, 0x0, 0x0);
        gbc.writeMem(0x3ba5, { 0x68 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6833, gbc.sp());
        EXPECT(0x3ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00A0
        gbc.setState(0xcd1a, 0xb9, 0xcf50, 0x6907, 0xef4e, 0xa631, 0x1, 0x1);
        gbc.writeMem(0xcd1a, { 0x68 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb9, gbc.sp());
        EXPECT(0xcd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcd1a));
        // 68 00A1
        gbc.setState(0x6944, 0x95ab, 0x440, 0xd7c8, 0xfc77, 0x34d5, 0x0, 0x0);
        gbc.writeMem(0x6944, { 0x68 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x95ab, gbc.sp());
        EXPECT(0x6945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00A2
        gbc.setState(0xe667, 0xf61a, 0x9680, 0x7b6c, 0x230c, 0xd18e, 0x1, 0x1);
        gbc.writeMem(0xe667, { 0x68 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf61a, gbc.sp());
        EXPECT(0xe668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe667));
        // 68 00A3
        gbc.setState(0xe392, 0x500f, 0x13c0, 0xdc9, 0xd6f7, 0x8760, 0x0, 0x1);
        gbc.writeMem(0xe392, { 0x68 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x500f, gbc.sp());
        EXPECT(0xe393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe392));
        // 68 00A4
        gbc.setState(0x991c, 0xe408, 0x7d40, 0xba50, 0x43f6, 0x4c31, 0x1, 0x1);
        gbc.writeMem(0x991c, { 0x68 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe408, gbc.sp());
        EXPECT(0x991d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x991c));
        // 68 00A5
        gbc.setState(0x2604, 0x32d6, 0x3950, 0x23b4, 0xd9ab, 0xac6e, 0x0, 0x0);
        gbc.writeMem(0x2604, { 0x68 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x32d6, gbc.sp());
        EXPECT(0x2605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00A6
        gbc.setState(0x2e85, 0x1bbc, 0xb040, 0xb0a0, 0xe5b, 0x9849, 0x1, 0x1);
        gbc.writeMem(0x2e85, { 0x68 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1bbc, gbc.sp());
        EXPECT(0x2e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00A7
        gbc.setState(0x96e0, 0xc840, 0x9ef0, 0x1c02, 0x36d2, 0x1db7, 0x1, 0x1);
        gbc.writeMem(0x96e0, { 0x68 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc840, gbc.sp());
        EXPECT(0x96e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x96e0));
        // 68 00A8
        gbc.setState(0x718d, 0x4cb3, 0x6a0, 0x8158, 0xf50, 0x4b2c, 0x1, 0x0);
        gbc.writeMem(0x718d, { 0x68 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4cb3, gbc.sp());
        EXPECT(0x718e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00A9
        gbc.setState(0x5c12, 0x1ad2, 0x4b00, 0xa8f7, 0xfd6, 0x99b5, 0x0, 0x1);
        gbc.writeMem(0x5c12, { 0x68 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1ad2, gbc.sp());
        EXPECT(0x5c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00AA
        gbc.setState(0xc8fc, 0x7c64, 0x4000, 0xaaf3, 0x19c3, 0x2cfa, 0x0, 0x1);
        gbc.writeMem(0xc8fc, { 0x68 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7c64, gbc.sp());
        EXPECT(0xc8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc8fc));
        // 68 00AB
        gbc.setState(0xb69b, 0x404f, 0xafe0, 0x9e75, 0x5943, 0x9a37, 0x0, 0x1);
        gbc.writeMem(0xb69b, { 0x68 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x404f, gbc.sp());
        EXPECT(0xb69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb69b));
        // 68 00AC
        gbc.setState(0x11f4, 0xef0b, 0x1150, 0x4ee5, 0x8b04, 0x4552, 0x1, 0x1);
        gbc.writeMem(0x11f4, { 0x68 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xef0b, gbc.sp());
        EXPECT(0x11f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00AD
        gbc.setState(0x2604, 0xc13d, 0xa3a0, 0xf525, 0xa6b2, 0x1944, 0x0, 0x1);
        gbc.writeMem(0x2604, { 0x68 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc13d, gbc.sp());
        EXPECT(0x2605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00AE
        gbc.setState(0x69c9, 0xe3bd, 0x4d20, 0xe618, 0x32ca, 0x2e85, 0x0, 0x0);
        gbc.writeMem(0x69c9, { 0x68 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe3bd, gbc.sp());
        EXPECT(0x69ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00AF
        gbc.setState(0x722a, 0xe920, 0x1990, 0x7be2, 0x3a27, 0xe7ff, 0x1, 0x1);
        gbc.writeMem(0x722a, { 0x68 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe920, gbc.sp());
        EXPECT(0x722b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00B0
        gbc.setState(0xe70f, 0x43b3, 0x8080, 0xd5e8, 0xafa6, 0x7f2e, 0x0, 0x1);
        gbc.writeMem(0xe70f, { 0x68 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x43b3, gbc.sp());
        EXPECT(0xe710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe70f));
        // 68 00B1
        gbc.setState(0xdb0a, 0x1187, 0xede0, 0xba24, 0xb21e, 0xbf3d, 0x1, 0x1);
        gbc.writeMem(0xdb0a, { 0x68 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1187, gbc.sp());
        EXPECT(0xdb0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdb0a));
        // 68 00B2
        gbc.setState(0x2f4d, 0x3cf9, 0xe480, 0x4e00, 0x43ae, 0x3df3, 0x0, 0x0);
        gbc.writeMem(0x2f4d, { 0x68 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3cf9, gbc.sp());
        EXPECT(0x2f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00B3
        gbc.setState(0xdea, 0x957d, 0xf8f0, 0x3c12, 0x2f1f, 0x900f, 0x1, 0x1);
        gbc.writeMem(0xdea, { 0x68 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x957d, gbc.sp());
        EXPECT(0xdeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00B4
        gbc.setState(0x6754, 0x94dd, 0xe200, 0x9bd4, 0xbe45, 0x9623, 0x1, 0x1);
        gbc.writeMem(0x6754, { 0x68 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x94dd, gbc.sp());
        EXPECT(0x6755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00B5
        gbc.setState(0x645f, 0x12ad, 0x73d0, 0xd7f, 0xbba0, 0x9b2f, 0x1, 0x1);
        gbc.writeMem(0x645f, { 0x68 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x12ad, gbc.sp());
        EXPECT(0x6460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00B6
        gbc.setState(0x68f7, 0x63f5, 0xf600, 0x76, 0xb807, 0x29cc, 0x0, 0x1);
        gbc.writeMem(0x68f7, { 0x68 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x63f5, gbc.sp());
        EXPECT(0x68f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00B7
        gbc.setState(0xa043, 0xdd8f, 0xc660, 0xfd68, 0x140b, 0xb885, 0x0, 0x1);
        gbc.writeMem(0xa043, { 0x68 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdd8f, gbc.sp());
        EXPECT(0xa044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa043));
        // 68 00B8
        gbc.setState(0x8cb4, 0xecc, 0x3510, 0x8fc8, 0x8e39, 0x426, 0x0, 0x1);
        gbc.writeMem(0x8cb4, { 0x68 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xecc, gbc.sp());
        EXPECT(0x8cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8cb4));
        // 68 00B9
        gbc.setState(0x38f9, 0x32a0, 0xfe10, 0x495f, 0xf7f8, 0x1e4c, 0x0, 0x1);
        gbc.writeMem(0x38f9, { 0x68 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x32a0, gbc.sp());
        EXPECT(0x38fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00BA
        gbc.setState(0xde48, 0x5baa, 0x6920, 0x897f, 0x1510, 0x318b, 0x0, 0x1);
        gbc.writeMem(0xde48, { 0x68 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5baa, gbc.sp());
        EXPECT(0xde49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xde48));
        // 68 00BB
        gbc.setState(0xe0f8, 0xf46d, 0xde90, 0x85e1, 0x9314, 0x94d3, 0x1, 0x1);
        gbc.writeMem(0xe0f8, { 0x68 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf46d, gbc.sp());
        EXPECT(0xe0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe0f8));
        // 68 00BC
        gbc.setState(0x5e59, 0x62ae, 0xe420, 0xc696, 0x376d, 0x8b36, 0x1, 0x1);
        gbc.writeMem(0x5e59, { 0x68 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x62ae, gbc.sp());
        EXPECT(0x5e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00BD
        gbc.setState(0x64bf, 0xa81e, 0x17f0, 0x5790, 0xd576, 0xde24, 0x0, 0x1);
        gbc.writeMem(0x64bf, { 0x68 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa81e, gbc.sp());
        EXPECT(0x64c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00BE
        gbc.setState(0x3c58, 0x92c4, 0x510, 0xe654, 0xd3ef, 0x19a1, 0x1, 0x1);
        gbc.writeMem(0x3c58, { 0x68 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x92c4, gbc.sp());
        EXPECT(0x3c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00BF
        gbc.setState(0x1c85, 0xeeb2, 0xaf90, 0xdbd2, 0x7001, 0x7823, 0x1, 0x1);
        gbc.writeMem(0x1c85, { 0x68 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xeeb2, gbc.sp());
        EXPECT(0x1c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00C1
        gbc.setState(0x36cb, 0x168b, 0x6320, 0xa9df, 0x258d, 0x2875, 0x0, 0x1);
        gbc.writeMem(0x36cb, { 0x68 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x168b, gbc.sp());
        EXPECT(0x36cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00C2
        gbc.setState(0xa67, 0xa3bb, 0x1e90, 0x9153, 0x2ca1, 0xc0d6, 0x0, 0x1);
        gbc.writeMem(0xa67, { 0x68 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa3bb, gbc.sp());
        EXPECT(0xa68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00C3
        gbc.setState(0x9909, 0xa69f, 0x78b0, 0x383f, 0x1118, 0x73ef, 0x0, 0x1);
        gbc.writeMem(0x9909, { 0x68 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa69f, gbc.sp());
        EXPECT(0x990a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9909));
        // 68 00C4
        gbc.setState(0x7904, 0xa355, 0x9f30, 0x1d47, 0x20b6, 0x2bbb, 0x1, 0x1);
        gbc.writeMem(0x7904, { 0x68 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa355, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00C5
        gbc.setState(0x159f, 0xc06e, 0x7be0, 0x1055, 0x7e8f, 0xf5bc, 0x1, 0x0);
        gbc.writeMem(0x159f, { 0x68 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc06e, gbc.sp());
        EXPECT(0x15a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00C6
        gbc.setState(0xd259, 0x1f48, 0xb6c0, 0x7de1, 0x7c24, 0x35f2, 0x1, 0x0);
        gbc.writeMem(0xd259, { 0x68 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1f48, gbc.sp());
        EXPECT(0xd25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd259));
        // 68 00C7
        gbc.setState(0x4803, 0x5f91, 0xec30, 0x75d6, 0x87f4, 0x10ad, 0x1, 0x0);
        gbc.writeMem(0x4803, { 0x68 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5f91, gbc.sp());
        EXPECT(0x4804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00C8
        gbc.setState(0xdfe0, 0xcb45, 0x70, 0x65c0, 0xa395, 0xd29e, 0x1, 0x1);
        gbc.writeMem(0xdfe0, { 0x68 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcb45, gbc.sp());
        EXPECT(0xdfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdfe0));
        // 68 00C9
        gbc.setState(0x6e11, 0xc495, 0xb560, 0x729, 0xd3c, 0x3c75, 0x0, 0x0);
        gbc.writeMem(0x6e11, { 0x68 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc495, gbc.sp());
        EXPECT(0x6e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00CA
        gbc.setState(0x33aa, 0xd7b7, 0x620, 0x1a60, 0x8e77, 0x39f3, 0x0, 0x1);
        gbc.writeMem(0x33aa, { 0x68 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd7b7, gbc.sp());
        EXPECT(0x33ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00CB
        gbc.setState(0xcf0d, 0xc6b, 0x8990, 0x6636, 0x6ba4, 0xdf0a, 0x0, 0x0);
        gbc.writeMem(0xcf0d, { 0x68 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc6b, gbc.sp());
        EXPECT(0xcf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcf0d));
        // 68 00CC
        gbc.setState(0x8fef, 0x6652, 0x6310, 0x5c4c, 0xdd01, 0x7392, 0x0, 0x1);
        gbc.writeMem(0x8fef, { 0x68 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6652, gbc.sp());
        EXPECT(0x8ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8fef));
        // 68 00CD
        gbc.setState(0x1f70, 0x8575, 0x1260, 0xe705, 0xb5a, 0x7cf8, 0x0, 0x1);
        gbc.writeMem(0x1f70, { 0x68 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8575, gbc.sp());
        EXPECT(0x1f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00CE
        gbc.setState(0x9c32, 0xcd16, 0x4690, 0x4f80, 0x5bef, 0x9fc9, 0x0, 0x1);
        gbc.writeMem(0x9c32, { 0x68 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcd16, gbc.sp());
        EXPECT(0x9c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9c32));
        // 68 00CF
        gbc.setState(0x135f, 0x88bb, 0x3d70, 0x694c, 0x8d3e, 0x47ec, 0x1, 0x1);
        gbc.writeMem(0x135f, { 0x68 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x88bb, gbc.sp());
        EXPECT(0x1360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00D0
        gbc.setState(0xa5b6, 0xa8d9, 0x1dd0, 0x60ec, 0x1e1f, 0x94e9, 0x1, 0x0);
        gbc.writeMem(0xa5b6, { 0x68 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa8d9, gbc.sp());
        EXPECT(0xa5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa5b6));
        // 68 00D1
        gbc.setState(0xe1c, 0x45be, 0x4f60, 0xccf3, 0x8ec, 0x4d3b, 0x0, 0x0);
        gbc.writeMem(0xe1c, { 0x68 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x45be, gbc.sp());
        EXPECT(0xe1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00D2
        gbc.setState(0x9e4f, 0x6836, 0x53b0, 0x6873, 0x236c, 0xd761, 0x1, 0x0);
        gbc.writeMem(0x9e4f, { 0x68 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6836, gbc.sp());
        EXPECT(0x9e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9e4f));
        // 68 00D3
        gbc.setState(0x7bf3, 0x984d, 0x5490, 0xc771, 0x7216, 0xbbc5, 0x0, 0x1);
        gbc.writeMem(0x7bf3, { 0x68 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x984d, gbc.sp());
        EXPECT(0x7bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00D5
        gbc.setState(0x4180, 0xf86e, 0xc740, 0x122e, 0xd66e, 0xf1d3, 0x0, 0x0);
        gbc.writeMem(0x4180, { 0x68 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf86e, gbc.sp());
        EXPECT(0x4181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00D6
        gbc.setState(0x39fd, 0xf497, 0xe180, 0xc695, 0x7687, 0xc09c, 0x1, 0x0);
        gbc.writeMem(0x39fd, { 0x68 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf497, gbc.sp());
        EXPECT(0x39fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00D7
        gbc.setState(0xd856, 0xe2b4, 0x370, 0xbc2b, 0x658c, 0xb3be, 0x1, 0x0);
        gbc.writeMem(0xd856, { 0x68 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe2b4, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd856));
        // 68 00D9
        gbc.setState(0x505b, 0xab85, 0x3ff0, 0x96d0, 0x3eba, 0xe3b1, 0x1, 0x0);
        gbc.writeMem(0x505b, { 0x68 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xab85, gbc.sp());
        EXPECT(0x505c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00DA
        gbc.setState(0x6181, 0xe56d, 0x6dc0, 0xe4b8, 0x349c, 0xc3f7, 0x1, 0x1);
        gbc.writeMem(0x6181, { 0x68 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe56d, gbc.sp());
        EXPECT(0x6182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00DB
        gbc.setState(0xbb20, 0x6df0, 0x8640, 0x24d4, 0xc841, 0xab2b, 0x1, 0x1);
        gbc.writeMem(0xbb20, { 0x68 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6df0, gbc.sp());
        EXPECT(0xbb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbb20));
        // 68 00DC
        gbc.setState(0x8a1e, 0xfad7, 0x2c50, 0x4043, 0x1040, 0xcc68, 0x0, 0x0);
        gbc.writeMem(0x8a1e, { 0x68 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfad7, gbc.sp());
        EXPECT(0x8a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8a1e));
        // 68 00DD
        gbc.setState(0x17ad, 0x5899, 0x3c00, 0x1157, 0x8430, 0xf308, 0x0, 0x0);
        gbc.writeMem(0x17ad, { 0x68 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5899, gbc.sp());
        EXPECT(0x17ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00DE
        gbc.setState(0x26a6, 0x4301, 0xc310, 0xfa56, 0x668b, 0xdae5, 0x0, 0x1);
        gbc.writeMem(0x26a6, { 0x68 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4301, gbc.sp());
        EXPECT(0x26a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00DF
        gbc.setState(0x19b8, 0x4c87, 0x3a90, 0x22fb, 0x7d85, 0x34e2, 0x0, 0x0);
        gbc.writeMem(0x19b8, { 0x68 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4c87, gbc.sp());
        EXPECT(0x19b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00E0
        gbc.setState(0xd41c, 0x4679, 0x3e80, 0x5838, 0xe485, 0x9e2f, 0x0, 0x0);
        gbc.writeMem(0xd41c, { 0x68 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4679, gbc.sp());
        EXPECT(0xd41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd41c));
        // 68 00E1
        gbc.setState(0x4aeb, 0xf260, 0x1bf0, 0x9b1e, 0xeaaa, 0xf0bb, 0x1, 0x0);
        gbc.writeMem(0x4aeb, { 0x68 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf260, gbc.sp());
        EXPECT(0x4aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00E2
        gbc.setState(0xdf49, 0x5689, 0xd6e0, 0x9a9c, 0xc3a6, 0xf857, 0x0, 0x0);
        gbc.writeMem(0xdf49, { 0x68 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5689, gbc.sp());
        EXPECT(0xdf4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdf49));
        // 68 00E3
        gbc.setState(0x4bda, 0x89cc, 0x95c0, 0xe4b7, 0x6211, 0x4dd2, 0x1, 0x1);
        gbc.writeMem(0x4bda, { 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x89cc, gbc.sp());
        EXPECT(0x4bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00E4
        gbc.setState(0xd3ab, 0xc366, 0xe390, 0x5965, 0x6efb, 0xe42d, 0x0, 0x1);
        gbc.writeMem(0xd3ab, { 0x68 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc366, gbc.sp());
        EXPECT(0xd3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd3ab));
        // 68 00E5
        gbc.setState(0x4da9, 0x96fb, 0x2410, 0xb0d, 0xe461, 0xe42f, 0x0, 0x0);
        gbc.writeMem(0x4da9, { 0x68 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x96fb, gbc.sp());
        EXPECT(0x4daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00E6
        gbc.setState(0xd20c, 0xdcc4, 0xa060, 0xc50b, 0x2c36, 0x32a6, 0x0, 0x1);
        gbc.writeMem(0xd20c, { 0x68 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdcc4, gbc.sp());
        EXPECT(0xd20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd20c));
        // 68 00E7
        gbc.setState(0x192a, 0x632e, 0x3960, 0x7dee, 0xdc3d, 0x2060, 0x1, 0x1);
        gbc.writeMem(0x192a, { 0x68 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x632e, gbc.sp());
        EXPECT(0x192b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00E8
        gbc.setState(0x6614, 0xf08e, 0xc180, 0xd2c9, 0xc1ce, 0x7bac, 0x0, 0x1);
        gbc.writeMem(0x6614, { 0x68 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf08e, gbc.sp());
        EXPECT(0x6615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00E9
        gbc.setState(0x5c70, 0x6f72, 0xaf0, 0x289a, 0x1329, 0xedad, 0x0, 0x1);
        gbc.writeMem(0x5c70, { 0x68 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6f72, gbc.sp());
        EXPECT(0x5c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00EA
        gbc.setState(0xcf2e, 0xca3d, 0x6430, 0x7503, 0xeaf, 0x1a47, 0x1, 0x1);
        gbc.writeMem(0xcf2e, { 0x68 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xca3d, gbc.sp());
        EXPECT(0xcf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcf2e));
        // 68 00EB
        gbc.setState(0xe66f, 0x408f, 0x8190, 0xa99, 0xb774, 0xb2e1, 0x1, 0x1);
        gbc.writeMem(0xe66f, { 0x68 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x408f, gbc.sp());
        EXPECT(0xe670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe66f));
        // 68 00EC
        gbc.setState(0x35b, 0xd3d3, 0xea50, 0xa082, 0xc344, 0x3104, 0x1, 0x1);
        gbc.writeMem(0x35b, { 0x68 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd3d3, gbc.sp());
        EXPECT(0x35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00EE
        gbc.setState(0xbf99, 0x4188, 0xb3a0, 0x2709, 0xc3b1, 0xdd07, 0x1, 0x0);
        gbc.writeMem(0xbf99, { 0x68 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4188, gbc.sp());
        EXPECT(0xbf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbf99));
        // 68 00EF
        gbc.setState(0xe369, 0xd956, 0x2e40, 0x4b4b, 0x5a38, 0x3e4b, 0x0, 0x0);
        gbc.writeMem(0xe369, { 0x68 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd956, gbc.sp());
        EXPECT(0xe36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe369));
        // 68 00F0
        gbc.setState(0x41e6, 0x13a1, 0xe910, 0xa4f9, 0x1d7, 0x5ee, 0x0, 0x1);
        gbc.writeMem(0x41e6, { 0x68 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x13a1, gbc.sp());
        EXPECT(0x41e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00F1
        gbc.setState(0xc9e9, 0x7ae0, 0xaae0, 0x3414, 0x2231, 0x7812, 0x0, 0x0);
        gbc.writeMem(0xc9e9, { 0x68 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7ae0, gbc.sp());
        EXPECT(0xc9ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc9e9));
        // 68 00F2
        gbc.setState(0x9819, 0x6752, 0xf0a0, 0xcc3e, 0xdaf5, 0xa1fe, 0x1, 0x1);
        gbc.writeMem(0x9819, { 0x68 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6752, gbc.sp());
        EXPECT(0x981a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9819));
        // 68 00F3
        gbc.setState(0x2df7, 0xd441, 0x1030, 0xd9cd, 0xd821, 0x611a, 0x0, 0x1);
        gbc.writeMem(0x2df7, { 0x68 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd441, gbc.sp());
        EXPECT(0x2df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00F4
        gbc.setState(0x7d44, 0x5d0e, 0xdf80, 0x67b5, 0xced6, 0x4296, 0x1, 0x0);
        gbc.writeMem(0x7d44, { 0x68 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5d0e, gbc.sp());
        EXPECT(0x7d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00F5
        gbc.setState(0x270c, 0x2fa2, 0x9b30, 0x7909, 0x550e, 0x491e, 0x0, 0x1);
        gbc.writeMem(0x270c, { 0x68 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2fa2, gbc.sp());
        EXPECT(0x270d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00F6
        gbc.setState(0x4e9d, 0x4d21, 0x5330, 0x1b6, 0xfdb3, 0x39de, 0x1, 0x0);
        gbc.writeMem(0x4e9d, { 0x68 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4d21, gbc.sp());
        EXPECT(0x4e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00F7
        gbc.setState(0x6d6b, 0xea9, 0x23c0, 0x4382, 0x843c, 0xa349, 0x0, 0x1);
        gbc.writeMem(0x6d6b, { 0x68 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xea9, gbc.sp());
        EXPECT(0x6d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00F8
        gbc.setState(0x5f73, 0xe71d, 0x1660, 0x575f, 0x8763, 0x537a, 0x0, 0x1);
        gbc.writeMem(0x5f73, { 0x68 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe71d, gbc.sp());
        EXPECT(0x5f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00F9
        gbc.setState(0x1858, 0x4f88, 0x5800, 0x3ca8, 0xc0a0, 0xd5c6, 0x0, 0x1);
        gbc.writeMem(0x1858, { 0x68 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4f88, gbc.sp());
        EXPECT(0x1859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 00FA
        gbc.setState(0x86a6, 0x4884, 0x7d10, 0x4bac, 0x12f8, 0xe3f0, 0x0, 0x1);
        gbc.writeMem(0x86a6, { 0x68 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4884, gbc.sp());
        EXPECT(0x86a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x86a6));
        // 68 00FB
        gbc.setState(0x461e, 0x5591, 0xdbb0, 0xe5ac, 0x5209, 0x316a, 0x0, 0x0);
        gbc.writeMem(0x461e, { 0x68 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5591, gbc.sp());
        EXPECT(0x461f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00FC
        gbc.setState(0x2460, 0x10aa, 0x3150, 0xb00, 0x39a, 0xac8b, 0x0, 0x0);
        gbc.writeMem(0x2460, { 0x68 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x10aa, gbc.sp());
        EXPECT(0x2461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00FE
        gbc.setState(0x860, 0x273f, 0x3e10, 0x85ed, 0x3187, 0xf362, 0x1, 0x1);
        gbc.writeMem(0x860, { 0x68 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x273f, gbc.sp());
        EXPECT(0x861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 00FF
        gbc.setState(0x8372, 0x2886, 0xcf60, 0x5c30, 0x80ec, 0x94c6, 0x0, 0x0);
        gbc.writeMem(0x8372, { 0x68 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2886, gbc.sp());
        EXPECT(0x8373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8372));
        // 68 0100
        gbc.setState(0x736c, 0x70c4, 0x3820, 0xc3b1, 0x64, 0xc582, 0x1, 0x0);
        gbc.writeMem(0x736c, { 0x68 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x70c4, gbc.sp());
        EXPECT(0x736d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0101
        gbc.setState(0x49bc, 0x8b9a, 0x54f0, 0x7938, 0xe3c4, 0xc63d, 0x1, 0x0);
        gbc.writeMem(0x49bc, { 0x68 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8b9a, gbc.sp());
        EXPECT(0x49bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0102
        gbc.setState(0xceb7, 0xb971, 0x33c0, 0x42be, 0xd91e, 0x7616, 0x0, 0x0);
        gbc.writeMem(0xceb7, { 0x68 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0xceb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xceb7));
        // 68 0103
        gbc.setState(0xc1ae, 0xa3ac, 0xdc30, 0xdfcb, 0x70cd, 0x7a92, 0x1, 0x0);
        gbc.writeMem(0xc1ae, { 0x68 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa3ac, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc1ae));
        // 68 0104
        gbc.setState(0xc128, 0x7175, 0x960, 0x1d91, 0xf603, 0xb9a1, 0x1, 0x0);
        gbc.writeMem(0xc128, { 0x68 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7175, gbc.sp());
        EXPECT(0xc129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc128));
        // 68 0105
        gbc.setState(0x3c7e, 0x58b2, 0x1fc0, 0xe77b, 0xea19, 0x5a56, 0x1, 0x1);
        gbc.writeMem(0x3c7e, { 0x68 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x58b2, gbc.sp());
        EXPECT(0x3c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0106
        gbc.setState(0x9bd6, 0x7069, 0x5870, 0x589c, 0x3817, 0x3cf6, 0x1, 0x1);
        gbc.writeMem(0x9bd6, { 0x68 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7069, gbc.sp());
        EXPECT(0x9bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9bd6));
        // 68 0107
        gbc.setState(0xe99f, 0x8883, 0x5e40, 0xdfc0, 0x1c5c, 0xfd1e, 0x1, 0x1);
        gbc.writeMem(0xe99f, { 0x68 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8883, gbc.sp());
        EXPECT(0xe9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe99f));
        // 68 0109
        gbc.setState(0xc01c, 0x68cb, 0x52c0, 0x3953, 0xa7ef, 0x10ad, 0x0, 0x1);
        gbc.writeMem(0xc01c, { 0x68 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x68cb, gbc.sp());
        EXPECT(0xc01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc01c));
        // 68 010A
        gbc.setState(0x446c, 0x578f, 0xa2e0, 0xe406, 0x15ec, 0x1852, 0x1, 0x0);
        gbc.writeMem(0x446c, { 0x68 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x578f, gbc.sp());
        EXPECT(0x446d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 010C
        gbc.setState(0x68ae, 0xd64c, 0x2070, 0x2e6f, 0x3a27, 0x27bf, 0x1, 0x0);
        gbc.writeMem(0x68ae, { 0x68 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd64c, gbc.sp());
        EXPECT(0x68af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 010D
        gbc.setState(0xea3f, 0x1230, 0x27b0, 0x12c6, 0x1c63, 0xf0de, 0x1, 0x1);
        gbc.writeMem(0xea3f, { 0x68 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1230, gbc.sp());
        EXPECT(0xea40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xea3f));
        // 68 010E
        gbc.setState(0xea87, 0x803e, 0x16b0, 0x7c7, 0xa4e9, 0x27f3, 0x0, 0x1);
        gbc.writeMem(0xea87, { 0x68 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x803e, gbc.sp());
        EXPECT(0xea88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xea87));
        // 68 010F
        gbc.setState(0x6828, 0x7b9b, 0x38e0, 0x61df, 0x125e, 0x8ac7, 0x1, 0x0);
        gbc.writeMem(0x6828, { 0x68 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7b9b, gbc.sp());
        EXPECT(0x6829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0110
        gbc.setState(0xe612, 0x61f5, 0x4be0, 0xaf45, 0x41e, 0x6958, 0x1, 0x0);
        gbc.writeMem(0xe612, { 0x68 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x61f5, gbc.sp());
        EXPECT(0xe613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe612));
        // 68 0111
        gbc.setState(0x5e14, 0xd4ac, 0x2710, 0xae72, 0xff0f, 0x8099, 0x0, 0x0);
        gbc.writeMem(0x5e14, { 0x68 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd4ac, gbc.sp());
        EXPECT(0x5e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0112
        gbc.setState(0xc16, 0x3386, 0x55c0, 0xdcef, 0xb92d, 0xa495, 0x1, 0x0);
        gbc.writeMem(0xc16, { 0x68 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3386, gbc.sp());
        EXPECT(0xc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0114
        gbc.setState(0x5e8, 0x59c2, 0x98a0, 0x4a7e, 0x4252, 0x81bd, 0x0, 0x0);
        gbc.writeMem(0x5e8, { 0x68 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x59c2, gbc.sp());
        EXPECT(0x5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0115
        gbc.setState(0xac66, 0xcf6, 0x5440, 0x3588, 0x97b8, 0xdb91, 0x1, 0x1);
        gbc.writeMem(0xac66, { 0x68 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcf6, gbc.sp());
        EXPECT(0xac67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xac66));
        // 68 0116
        gbc.setState(0xbf8f, 0x7965, 0xf600, 0x20e2, 0xfa9b, 0x59c2, 0x1, 0x1);
        gbc.writeMem(0xbf8f, { 0x68 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7965, gbc.sp());
        EXPECT(0xbf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbf8f));
        // 68 0117
        gbc.setState(0x6391, 0xe94b, 0xc530, 0x482f, 0x4e1f, 0xb3e2, 0x0, 0x1);
        gbc.writeMem(0x6391, { 0x68 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe94b, gbc.sp());
        EXPECT(0x6392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0118
        gbc.setState(0x665b, 0x3d22, 0xda70, 0x20b8, 0x8c68, 0x6fba, 0x1, 0x1);
        gbc.writeMem(0x665b, { 0x68 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3d22, gbc.sp());
        EXPECT(0x665c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0119
        gbc.setState(0x5b04, 0xd7fa, 0x4070, 0x7aca, 0x2157, 0x2c95, 0x0, 0x1);
        gbc.writeMem(0x5b04, { 0x68 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd7fa, gbc.sp());
        EXPECT(0x5b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 011A
        gbc.setState(0x7c25, 0x4bf4, 0x23d0, 0xe292, 0x9450, 0x98f9, 0x1, 0x1);
        gbc.writeMem(0x7c25, { 0x68 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4bf4, gbc.sp());
        EXPECT(0x7c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 011B
        gbc.setState(0xc89a, 0x2224, 0x1410, 0x4ec7, 0xa319, 0xd3d8, 0x0, 0x1);
        gbc.writeMem(0xc89a, { 0x68 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2224, gbc.sp());
        EXPECT(0xc89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc89a));
        // 68 011C
        gbc.setState(0x3596, 0x4c23, 0xfe50, 0xa38b, 0x6f77, 0xe130, 0x1, 0x0);
        gbc.writeMem(0x3596, { 0x68 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4c23, gbc.sp());
        EXPECT(0x3597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 011D
        gbc.setState(0x576c, 0xe40, 0x5750, 0xa93c, 0x39e, 0xd7be, 0x0, 0x1);
        gbc.writeMem(0x576c, { 0x68 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe40, gbc.sp());
        EXPECT(0x576d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 011E
        gbc.setState(0xb8c, 0xf7bb, 0x6390, 0x9275, 0x871c, 0x94d4, 0x1, 0x1);
        gbc.writeMem(0xb8c, { 0x68 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf7bb, gbc.sp());
        EXPECT(0xb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 011F
        gbc.setState(0x8fa9, 0xec88, 0x9d80, 0xb65f, 0xe79e, 0xec67, 0x1, 0x0);
        gbc.writeMem(0x8fa9, { 0x68 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xec88, gbc.sp());
        EXPECT(0x8faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8fa9));
        // 68 0120
        gbc.setState(0xab22, 0x60c6, 0x2b80, 0x58ef, 0xbe32, 0xee1a, 0x0, 0x0);
        gbc.writeMem(0xab22, { 0x68 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x60c6, gbc.sp());
        EXPECT(0xab23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xab22));
        // 68 0122
        gbc.setState(0x7a37, 0x152c, 0x1120, 0x285c, 0x6e4a, 0xa6f2, 0x1, 0x0);
        gbc.writeMem(0x7a37, { 0x68 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x152c, gbc.sp());
        EXPECT(0x7a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0123
        gbc.setState(0x5d4f, 0x730f, 0x6b40, 0xf4a, 0x2a0c, 0x9aa0, 0x0, 0x0);
        gbc.writeMem(0x5d4f, { 0x68 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x730f, gbc.sp());
        EXPECT(0x5d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0124
        gbc.setState(0x358e, 0xd43e, 0x52b0, 0x341f, 0xb584, 0xeb6a, 0x1, 0x0);
        gbc.writeMem(0x358e, { 0x68 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd43e, gbc.sp());
        EXPECT(0x358f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0125
        gbc.setState(0x9a83, 0xbde0, 0x200, 0xba9d, 0xc41c, 0x55d0, 0x0, 0x0);
        gbc.writeMem(0x9a83, { 0x68 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbde0, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9a83));
        // 68 0126
        gbc.setState(0x8ba5, 0xcffc, 0xb3c0, 0x8d3f, 0x3aa3, 0x2274, 0x1, 0x0);
        gbc.writeMem(0x8ba5, { 0x68 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcffc, gbc.sp());
        EXPECT(0x8ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8ba5));
        // 68 0127
        gbc.setState(0xe245, 0x85ee, 0xc1b0, 0xdbbe, 0x8198, 0xcefc, 0x1, 0x0);
        gbc.writeMem(0xe245, { 0x68 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x85ee, gbc.sp());
        EXPECT(0xe246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe245));
        // 68 0128
        gbc.setState(0x7e9c, 0xbbb, 0xb9d0, 0x722, 0x125, 0xec42, 0x1, 0x0);
        gbc.writeMem(0x7e9c, { 0x68 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbbb, gbc.sp());
        EXPECT(0x7e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0129
        gbc.setState(0xc486, 0x551e, 0x9fb0, 0xe861, 0x3d3c, 0xf8f8, 0x1, 0x1);
        gbc.writeMem(0xc486, { 0x68 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x551e, gbc.sp());
        EXPECT(0xc487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc486));
        // 68 012A
        gbc.setState(0x21e9, 0x2e3d, 0x1c30, 0x58cc, 0x91b8, 0x85a9, 0x0, 0x0);
        gbc.writeMem(0x21e9, { 0x68 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2e3d, gbc.sp());
        EXPECT(0x21ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 012B
        gbc.setState(0xda3c, 0x1441, 0xec0, 0x68b8, 0xfbb5, 0x41be, 0x1, 0x0);
        gbc.writeMem(0xda3c, { 0x68 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1441, gbc.sp());
        EXPECT(0xda3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xda3c));
        // 68 012C
        gbc.setState(0x9147, 0xa9d0, 0xc140, 0xb76e, 0x225c, 0xc7ab, 0x1, 0x0);
        gbc.writeMem(0x9147, { 0x68 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa9d0, gbc.sp());
        EXPECT(0x9148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9147));
        // 68 012D
        gbc.setState(0x4ac9, 0x5299, 0xff10, 0x4ce2, 0x530b, 0x9f44, 0x1, 0x1);
        gbc.writeMem(0x4ac9, { 0x68 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5299, gbc.sp());
        EXPECT(0x4aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 012E
        gbc.setState(0x6370, 0x945b, 0xeb80, 0x49ca, 0x970a, 0x273e, 0x0, 0x0);
        gbc.writeMem(0x6370, { 0x68 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x945b, gbc.sp());
        EXPECT(0x6371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 012F
        gbc.setState(0xbb27, 0xc19c, 0x8f80, 0xa488, 0x790e, 0xcffc, 0x1, 0x1);
        gbc.writeMem(0xbb27, { 0x68 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc19c, gbc.sp());
        EXPECT(0xbb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbb27));
        // 68 0130
        gbc.setState(0x5bfb, 0xa07a, 0xb520, 0x555, 0x8941, 0x1d07, 0x0, 0x1);
        gbc.writeMem(0x5bfb, { 0x68 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa07a, gbc.sp());
        EXPECT(0x5bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0132
        gbc.setState(0x3de4, 0x98b4, 0x9c0, 0xc31a, 0x8c71, 0x2cf4, 0x1, 0x1);
        gbc.writeMem(0x3de4, { 0x68 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x98b4, gbc.sp());
        EXPECT(0x3de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0133
        gbc.setState(0x31f9, 0xe083, 0x3d30, 0x7c5b, 0xeb0c, 0xf152, 0x1, 0x1);
        gbc.writeMem(0x31f9, { 0x68 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe083, gbc.sp());
        EXPECT(0x31fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0134
        gbc.setState(0x4033, 0xd9ad, 0xb770, 0xf277, 0xc71b, 0xcb57, 0x0, 0x1);
        gbc.writeMem(0x4033, { 0x68 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd9ad, gbc.sp());
        EXPECT(0x4034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0135
        gbc.setState(0x5c7e, 0x7b97, 0xb700, 0x5fbb, 0xbe96, 0x38, 0x1, 0x0);
        gbc.writeMem(0x5c7e, { 0x68 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7b97, gbc.sp());
        EXPECT(0x5c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0136
        gbc.setState(0xe019, 0x6d5d, 0xcc90, 0x8e73, 0x2ce1, 0x7737, 0x1, 0x0);
        gbc.writeMem(0xe019, { 0x68 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6d5d, gbc.sp());
        EXPECT(0xe01a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe019));
        // 68 0137
        gbc.setState(0xb088, 0xb09f, 0x7050, 0xf426, 0xddeb, 0xf534, 0x1, 0x1);
        gbc.writeMem(0xb088, { 0x68 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb09f, gbc.sp());
        EXPECT(0xb089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb088));
        // 68 0138
        gbc.setState(0x9a30, 0x9dae, 0xc820, 0x9bfc, 0xa3c, 0x7fd7, 0x1, 0x0);
        gbc.writeMem(0x9a30, { 0x68 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9dae, gbc.sp());
        EXPECT(0x9a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9a30));
        // 68 013A
        gbc.setState(0xa8b9, 0xa1be, 0x3ff0, 0x80ad, 0x6b4, 0xc47b, 0x1, 0x0);
        gbc.writeMem(0xa8b9, { 0x68 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa1be, gbc.sp());
        EXPECT(0xa8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa8b9));
        // 68 013C
        gbc.setState(0x9eb6, 0x390e, 0xbff0, 0x40c8, 0xa603, 0xfc2f, 0x0, 0x0);
        gbc.writeMem(0x9eb6, { 0x68 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x390e, gbc.sp());
        EXPECT(0x9eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9eb6));
        // 68 013D
        gbc.setState(0xa4d, 0x45ac, 0xe3f0, 0x4512, 0x5d81, 0x2ede, 0x1, 0x1);
        gbc.writeMem(0xa4d, { 0x68 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x45ac, gbc.sp());
        EXPECT(0xa4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 013F
        gbc.setState(0x7b41, 0xf6fa, 0xc730, 0x87f9, 0x2b2, 0x7cbb, 0x1, 0x1);
        gbc.writeMem(0x7b41, { 0x68 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf6fa, gbc.sp());
        EXPECT(0x7b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0140
        gbc.setState(0x360a, 0x3dcd, 0x9e20, 0xee13, 0x2c02, 0xad5c, 0x0, 0x0);
        gbc.writeMem(0x360a, { 0x68 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3dcd, gbc.sp());
        EXPECT(0x360b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0141
        gbc.setState(0xad97, 0x886f, 0x4a60, 0x278a, 0x4db1, 0x3a8f, 0x0, 0x0);
        gbc.writeMem(0xad97, { 0x68 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x886f, gbc.sp());
        EXPECT(0xad98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xad97));
        // 68 0142
        gbc.setState(0x18f1, 0xbcb3, 0x6cf0, 0xa97b, 0xfa7f, 0x4503, 0x0, 0x1);
        gbc.writeMem(0x18f1, { 0x68 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbcb3, gbc.sp());
        EXPECT(0x18f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0143
        gbc.setState(0x1064, 0x7127, 0xf8c0, 0xbe8b, 0x9e6b, 0x4f9d, 0x0, 0x1);
        gbc.writeMem(0x1064, { 0x68 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7127, gbc.sp());
        EXPECT(0x1065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0144
        gbc.setState(0x4240, 0x30e4, 0x1fc0, 0x137f, 0x32b9, 0xe615, 0x1, 0x0);
        gbc.writeMem(0x4240, { 0x68 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x30e4, gbc.sp());
        EXPECT(0x4241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0145
        gbc.setState(0xa4a9, 0x87ca, 0x4540, 0x1c2c, 0xa7b1, 0x2163, 0x1, 0x1);
        gbc.writeMem(0xa4a9, { 0x68 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x87ca, gbc.sp());
        EXPECT(0xa4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa4a9));
        // 68 0146
        gbc.setState(0x8316, 0x1b81, 0xe030, 0xe274, 0xe7ed, 0x36ac, 0x0, 0x1);
        gbc.writeMem(0x8316, { 0x68 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1b81, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8316));
        // 68 0147
        gbc.setState(0xa86b, 0x6147, 0x7490, 0xca35, 0xe3d4, 0x4f8b, 0x0, 0x0);
        gbc.writeMem(0xa86b, { 0x68 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6147, gbc.sp());
        EXPECT(0xa86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa86b));
        // 68 0148
        gbc.setState(0xddaf, 0x7842, 0xec10, 0xfa1c, 0xa2dc, 0x153a, 0x1, 0x0);
        gbc.writeMem(0xddaf, { 0x68 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7842, gbc.sp());
        EXPECT(0xddb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xddaf));
        // 68 0149
        gbc.setState(0xb07f, 0x2bd3, 0x1020, 0x8fe4, 0x6fd8, 0x454, 0x1, 0x1);
        gbc.writeMem(0xb07f, { 0x68 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2bd3, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb07f));
        // 68 014A
        gbc.setState(0x87c0, 0xb72f, 0xc2d0, 0xdecb, 0x8ef, 0xced5, 0x0, 0x1);
        gbc.writeMem(0x87c0, { 0x68 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb72f, gbc.sp());
        EXPECT(0x87c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x87c0));
        // 68 014B
        gbc.setState(0xab0d, 0x4532, 0xbbb0, 0x1f2b, 0xc05, 0xc67f, 0x0, 0x1);
        gbc.writeMem(0xab0d, { 0x68 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4532, gbc.sp());
        EXPECT(0xab0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xab0d));
        // 68 014C
        gbc.setState(0x7991, 0xf076, 0x44a0, 0x7464, 0x613a, 0x161, 0x1, 0x1);
        gbc.writeMem(0x7991, { 0x68 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf076, gbc.sp());
        EXPECT(0x7992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 014D
        gbc.setState(0xab82, 0x289b, 0x2e20, 0x5a51, 0x89f4, 0xef14, 0x0, 0x0);
        gbc.writeMem(0xab82, { 0x68 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x289b, gbc.sp());
        EXPECT(0xab83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xab82));
        // 68 014E
        gbc.setState(0x4bcc, 0x5cda, 0x6040, 0xe49f, 0xbb34, 0xcc0, 0x0, 0x0);
        gbc.writeMem(0x4bcc, { 0x68 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5cda, gbc.sp());
        EXPECT(0x4bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 014F
        gbc.setState(0xc977, 0x9655, 0xdf60, 0xb5a4, 0x869e, 0xebc7, 0x0, 0x0);
        gbc.writeMem(0xc977, { 0x68 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9655, gbc.sp());
        EXPECT(0xc978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc977));
        // 68 0150
        gbc.setState(0x1a0, 0x6f7a, 0x3d80, 0xa2de, 0xd192, 0xcb0e, 0x0, 0x0);
        gbc.writeMem(0x1a0, { 0x68 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6f7a, gbc.sp());
        EXPECT(0x1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0152
        gbc.setState(0xde32, 0xa02f, 0xac20, 0xe0c4, 0x2b26, 0x9808, 0x0, 0x0);
        gbc.writeMem(0xde32, { 0x68 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa02f, gbc.sp());
        EXPECT(0xde33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xde32));
        // 68 0153
        gbc.setState(0x3b32, 0xa8bb, 0x69c0, 0x6647, 0x2499, 0x56ba, 0x0, 0x0);
        gbc.writeMem(0x3b32, { 0x68 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa8bb, gbc.sp());
        EXPECT(0x3b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0154
        gbc.setState(0x6a58, 0xaa41, 0xa380, 0x2808, 0xaefc, 0x99b8, 0x1, 0x0);
        gbc.writeMem(0x6a58, { 0x68 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaa41, gbc.sp());
        EXPECT(0x6a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0155
        gbc.setState(0xe30, 0x4681, 0x26a0, 0xf2c8, 0x3cd1, 0xf628, 0x1, 0x0);
        gbc.writeMem(0xe30, { 0x68 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4681, gbc.sp());
        EXPECT(0xe31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0156
        gbc.setState(0x7edd, 0x8427, 0x9390, 0xa375, 0x6b1a, 0x6d9d, 0x0, 0x1);
        gbc.writeMem(0x7edd, { 0x68 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8427, gbc.sp());
        EXPECT(0x7ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0157
        gbc.setState(0x87b6, 0x9d23, 0x6820, 0x2296, 0x11ae, 0x2484, 0x1, 0x0);
        gbc.writeMem(0x87b6, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9d23, gbc.sp());
        EXPECT(0x87b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x87b6));
        // 68 0158
        gbc.setState(0x22be, 0x2b55, 0x1010, 0x9e40, 0xc1e5, 0x369b, 0x0, 0x1);
        gbc.writeMem(0x22be, { 0x68 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2b55, gbc.sp());
        EXPECT(0x22bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0159
        gbc.setState(0x827c, 0x7e6d, 0xc040, 0x913, 0x2957, 0x802, 0x1, 0x0);
        gbc.writeMem(0x827c, { 0x68 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7e6d, gbc.sp());
        EXPECT(0x827d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x827c));
        // 68 015A
        gbc.setState(0x8eba, 0x4029, 0x2520, 0x90b6, 0x3bd9, 0x723d, 0x1, 0x1);
        gbc.writeMem(0x8eba, { 0x68 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4029, gbc.sp());
        EXPECT(0x8ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8eba));
        // 68 015B
        gbc.setState(0xc8e4, 0xc26d, 0x7ee0, 0x671c, 0xacc, 0x2d3e, 0x1, 0x1);
        gbc.writeMem(0xc8e4, { 0x68 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc26d, gbc.sp());
        EXPECT(0xc8e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc8e4));
        // 68 015C
        gbc.setState(0xb561, 0xfe76, 0x3050, 0xe86c, 0x51a5, 0x5800, 0x1, 0x0);
        gbc.writeMem(0xb561, { 0x68 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfe76, gbc.sp());
        EXPECT(0xb562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb561));
        // 68 015D
        gbc.setState(0x127, 0x6312, 0x5f90, 0xecfb, 0x74f0, 0x644c, 0x0, 0x0);
        gbc.writeMem(0x127, { 0x68 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6312, gbc.sp());
        EXPECT(0x128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 015E
        gbc.setState(0xb826, 0x56a, 0x5080, 0x40d, 0xed9c, 0xe377, 0x0, 0x0);
        gbc.writeMem(0xb826, { 0x68 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x56a, gbc.sp());
        EXPECT(0xb827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb826));
        // 68 015F
        gbc.setState(0x484b, 0xf4ec, 0x4720, 0xd1f4, 0xffb6, 0x9f10, 0x0, 0x1);
        gbc.writeMem(0x484b, { 0x68 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf4ec, gbc.sp());
        EXPECT(0x484c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0160
        gbc.setState(0xddbe, 0x46b6, 0x2bc0, 0x7d06, 0x71c7, 0xb9fa, 0x0, 0x1);
        gbc.writeMem(0xddbe, { 0x68 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x46b6, gbc.sp());
        EXPECT(0xddbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xddbe));
        // 68 0161
        gbc.setState(0x71a8, 0xd240, 0x7050, 0x3128, 0xd018, 0xf145, 0x1, 0x1);
        gbc.writeMem(0x71a8, { 0x68 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd240, gbc.sp());
        EXPECT(0x71a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0162
        gbc.setState(0xdecb, 0x7d7b, 0xd750, 0xfdc, 0x15c6, 0x4d4c, 0x0, 0x0);
        gbc.writeMem(0xdecb, { 0x68 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7d7b, gbc.sp());
        EXPECT(0xdecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdecb));
        // 68 0163
        gbc.setState(0x3010, 0x9ca9, 0xfde0, 0x950e, 0x6d06, 0xf9e9, 0x0, 0x1);
        gbc.writeMem(0x3010, { 0x68 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9ca9, gbc.sp());
        EXPECT(0x3011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0164
        gbc.setState(0x5fa4, 0xfd50, 0x2f70, 0x26d3, 0xa42d, 0xc7dd, 0x0, 0x0);
        gbc.writeMem(0x5fa4, { 0x68 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfd50, gbc.sp());
        EXPECT(0x5fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0165
        gbc.setState(0xa1e2, 0x31cf, 0xd380, 0xd1ff, 0x8467, 0x5e9, 0x1, 0x0);
        gbc.writeMem(0xa1e2, { 0x68 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x31cf, gbc.sp());
        EXPECT(0xa1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa1e2));
        // 68 0166
        gbc.setState(0x2394, 0xe763, 0x8fa0, 0x1e05, 0xd6f4, 0x9c1d, 0x0, 0x0);
        gbc.writeMem(0x2394, { 0x68 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe763, gbc.sp());
        EXPECT(0x2395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0167
        gbc.setState(0xd4c3, 0xb78a, 0x4d50, 0x22a5, 0x606e, 0xcb52, 0x0, 0x0);
        gbc.writeMem(0xd4c3, { 0x68 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb78a, gbc.sp());
        EXPECT(0xd4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd4c3));
        // 68 0168
        gbc.setState(0x44e2, 0x1b95, 0xfcc0, 0xda93, 0x1f3d, 0x1b01, 0x0, 0x0);
        gbc.writeMem(0x44e2, { 0x68 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1b95, gbc.sp());
        EXPECT(0x44e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0169
        gbc.setState(0x5875, 0x594e, 0xf360, 0x6cc, 0x8332, 0x7ac, 0x1, 0x1);
        gbc.writeMem(0x5875, { 0x68 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x594e, gbc.sp());
        EXPECT(0x5876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 016A
        gbc.setState(0x50d8, 0xe2f3, 0x9250, 0xfb36, 0x94f2, 0x9c40, 0x1, 0x0);
        gbc.writeMem(0x50d8, { 0x68 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe2f3, gbc.sp());
        EXPECT(0x50d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 016B
        gbc.setState(0xac4c, 0x6a29, 0x5a90, 0xb133, 0x637c, 0xd928, 0x0, 0x1);
        gbc.writeMem(0xac4c, { 0x68 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6a29, gbc.sp());
        EXPECT(0xac4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xac4c));
        // 68 016C
        gbc.setState(0xd5e9, 0x6758, 0x2540, 0x2dd3, 0x4ee8, 0x93da, 0x1, 0x1);
        gbc.writeMem(0xd5e9, { 0x68 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6758, gbc.sp());
        EXPECT(0xd5ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd5e9));
        // 68 016D
        gbc.setState(0xc6d1, 0x5360, 0xb950, 0x2526, 0x8ebd, 0x950d, 0x0, 0x1);
        gbc.writeMem(0xc6d1, { 0x68 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5360, gbc.sp());
        EXPECT(0xc6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc6d1));
        // 68 016E
        gbc.setState(0x3416, 0x4a22, 0x46a0, 0x1c9d, 0x7dbc, 0x228c, 0x0, 0x0);
        gbc.writeMem(0x3416, { 0x68 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4a22, gbc.sp());
        EXPECT(0x3417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 016F
        gbc.setState(0x394e, 0xdd76, 0x7840, 0x7166, 0x2223, 0xb40d, 0x1, 0x1);
        gbc.writeMem(0x394e, { 0x68 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdd76, gbc.sp());
        EXPECT(0x394f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0170
        gbc.setState(0x5054, 0x3db6, 0xc810, 0x1a9b, 0x41b4, 0xd32c, 0x0, 0x0);
        gbc.writeMem(0x5054, { 0x68 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3db6, gbc.sp());
        EXPECT(0x5055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0171
        gbc.setState(0xd3a3, 0xed67, 0x8b90, 0x365a, 0xc010, 0xdbaf, 0x1, 0x1);
        gbc.writeMem(0xd3a3, { 0x68 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xed67, gbc.sp());
        EXPECT(0xd3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd3a3));
        // 68 0172
        gbc.setState(0xd625, 0xc98e, 0x5c10, 0xd4a3, 0x98df, 0x78d3, 0x1, 0x1);
        gbc.writeMem(0xd625, { 0x68 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc98e, gbc.sp());
        EXPECT(0xd626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd625));
        // 68 0173
        gbc.setState(0x6484, 0x11c5, 0xdf90, 0x7627, 0x3164, 0x6c8e, 0x0, 0x0);
        gbc.writeMem(0x6484, { 0x68 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x11c5, gbc.sp());
        EXPECT(0x6485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0174
        gbc.setState(0xe5e9, 0xfa7f, 0xee50, 0x2551, 0x82aa, 0xb85f, 0x0, 0x1);
        gbc.writeMem(0xe5e9, { 0x68 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfa7f, gbc.sp());
        EXPECT(0xe5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe5e9));
        // 68 0175
        gbc.setState(0x934b, 0xb002, 0xdae0, 0xf11, 0x5ce0, 0x104, 0x1, 0x0);
        gbc.writeMem(0x934b, { 0x68 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb002, gbc.sp());
        EXPECT(0x934c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x934b));
        // 68 0176
        gbc.setState(0xadd9, 0xf610, 0xc330, 0x5d30, 0x99fb, 0x2320, 0x0, 0x1);
        gbc.writeMem(0xadd9, { 0x68 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf610, gbc.sp());
        EXPECT(0xadda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xadd9));
        // 68 0177
        gbc.setState(0x4d42, 0xc2b5, 0xfad0, 0x9a9e, 0x3cee, 0x990d, 0x1, 0x0);
        gbc.writeMem(0x4d42, { 0x68 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc2b5, gbc.sp());
        EXPECT(0x4d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0178
        gbc.setState(0x80e0, 0xb10, 0x4f00, 0xcb58, 0x5981, 0x1d49, 0x1, 0x0);
        gbc.writeMem(0x80e0, { 0x68 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0x80e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x80e0));
        // 68 0179
        gbc.setState(0xe4ef, 0x240, 0xd7b0, 0x9c49, 0x8816, 0xf92, 0x0, 0x1);
        gbc.writeMem(0xe4ef, { 0x68 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x240, gbc.sp());
        EXPECT(0xe4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe4ef));
        // 68 017A
        gbc.setState(0xb502, 0x1f78, 0x2940, 0x4a36, 0xe635, 0x4e7b, 0x1, 0x0);
        gbc.writeMem(0xb502, { 0x68 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1f78, gbc.sp());
        EXPECT(0xb503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb502));
        // 68 017B
        gbc.setState(0xca08, 0xe7a8, 0x6230, 0xffd7, 0xe370, 0xf538, 0x1, 0x1);
        gbc.writeMem(0xca08, { 0x68 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe7a8, gbc.sp());
        EXPECT(0xca09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xca08));
        // 68 017C
        gbc.setState(0x70b0, 0xe5c3, 0x1a30, 0x12f2, 0xb5f4, 0x1df3, 0x1, 0x1);
        gbc.writeMem(0x70b0, { 0x68 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe5c3, gbc.sp());
        EXPECT(0x70b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 017D
        gbc.setState(0xd42d, 0x2cda, 0xaf60, 0x894, 0x2617, 0x2752, 0x0, 0x1);
        gbc.writeMem(0xd42d, { 0x68 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2cda, gbc.sp());
        EXPECT(0xd42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd42d));
        // 68 017E
        gbc.setState(0x28e2, 0x5143, 0x7190, 0xe8, 0x617d, 0x8a53, 0x1, 0x0);
        gbc.writeMem(0x28e2, { 0x68 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5143, gbc.sp());
        EXPECT(0x28e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 017F
        gbc.setState(0x6e23, 0xe3ed, 0x94b0, 0x222, 0x9280, 0x7a47, 0x1, 0x0);
        gbc.writeMem(0x6e23, { 0x68 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe3ed, gbc.sp());
        EXPECT(0x6e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0180
        gbc.setState(0xde44, 0x9934, 0xfec0, 0x7c39, 0xd112, 0x411c, 0x0, 0x1);
        gbc.writeMem(0xde44, { 0x68 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9934, gbc.sp());
        EXPECT(0xde45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xde44));
        // 68 0181
        gbc.setState(0x14a, 0x5ca2, 0x3f00, 0xedf, 0x583f, 0xd26, 0x0, 0x1);
        gbc.writeMem(0x14a, { 0x68 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5ca2, gbc.sp());
        EXPECT(0x14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0182
        gbc.setState(0x6c8e, 0xabd0, 0x7ab0, 0x60cd, 0x8690, 0xb255, 0x1, 0x0);
        gbc.writeMem(0x6c8e, { 0x68 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xabd0, gbc.sp());
        EXPECT(0x6c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0183
        gbc.setState(0x54f5, 0x1b9f, 0xae20, 0xaf52, 0x82c9, 0xb45b, 0x0, 0x0);
        gbc.writeMem(0x54f5, { 0x68 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1b9f, gbc.sp());
        EXPECT(0x54f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0184
        gbc.setState(0xdb61, 0x6c4f, 0xf010, 0x2a08, 0xefde, 0x8563, 0x1, 0x1);
        gbc.writeMem(0xdb61, { 0x68 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6c4f, gbc.sp());
        EXPECT(0xdb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdb61));
        // 68 0185
        gbc.setState(0x8788, 0x472b, 0x8730, 0xa191, 0x45c7, 0xd3cd, 0x0, 0x1);
        gbc.writeMem(0x8788, { 0x68 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x472b, gbc.sp());
        EXPECT(0x8789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8788));
        // 68 0186
        gbc.setState(0x5075, 0xcd03, 0xf240, 0x29ae, 0xdb8c, 0x21fc, 0x0, 0x1);
        gbc.writeMem(0x5075, { 0x68 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcd03, gbc.sp());
        EXPECT(0x5076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0187
        gbc.setState(0x8584, 0x1259, 0x4720, 0x20f9, 0xab77, 0x7001, 0x1, 0x1);
        gbc.writeMem(0x8584, { 0x68 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1259, gbc.sp());
        EXPECT(0x8585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8584));
        // 68 0189
        gbc.setState(0xc45b, 0x86ec, 0xd710, 0xd984, 0x2100, 0xa2c9, 0x0, 0x0);
        gbc.writeMem(0xc45b, { 0x68 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x86ec, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc45b));
        // 68 018A
        gbc.setState(0x6e1c, 0xf9e7, 0x7ec0, 0x7a6, 0x7ea9, 0x83e5, 0x0, 0x0);
        gbc.writeMem(0x6e1c, { 0x68 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf9e7, gbc.sp());
        EXPECT(0x6e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 018B
        gbc.setState(0x6a13, 0xb777, 0x6530, 0xa76a, 0xce89, 0x2338, 0x0, 0x1);
        gbc.writeMem(0x6a13, { 0x68 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb777, gbc.sp());
        EXPECT(0x6a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 018C
        gbc.setState(0x70a3, 0x697b, 0xcda0, 0x27d5, 0x87b1, 0x27e8, 0x1, 0x1);
        gbc.writeMem(0x70a3, { 0x68 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x697b, gbc.sp());
        EXPECT(0x70a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 018D
        gbc.setState(0xa48d, 0xc982, 0xc890, 0x620, 0x4780, 0xfd75, 0x1, 0x0);
        gbc.writeMem(0xa48d, { 0x68 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc982, gbc.sp());
        EXPECT(0xa48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa48d));
        // 68 018E
        gbc.setState(0x5cb1, 0xf558, 0xc3e0, 0x9081, 0x9d7a, 0x8a0f, 0x0, 0x1);
        gbc.writeMem(0x5cb1, { 0x68 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf558, gbc.sp());
        EXPECT(0x5cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 018F
        gbc.setState(0x23e4, 0xb052, 0x56d0, 0x5055, 0x616, 0xd870, 0x0, 0x0);
        gbc.writeMem(0x23e4, { 0x68 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb052, gbc.sp());
        EXPECT(0x23e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0190
        gbc.setState(0x7f77, 0x7aa1, 0x3560, 0x5cc4, 0xe698, 0x4a9f, 0x1, 0x1);
        gbc.writeMem(0x7f77, { 0x68 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7aa1, gbc.sp());
        EXPECT(0x7f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0191
        gbc.setState(0xcc48, 0xda4d, 0xc30, 0x2e86, 0x15a4, 0x2ff6, 0x1, 0x1);
        gbc.writeMem(0xcc48, { 0x68 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xda4d, gbc.sp());
        EXPECT(0xcc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcc48));
        // 68 0192
        gbc.setState(0x66ad, 0x2e52, 0x8720, 0x23d7, 0xf97b, 0x9d7d, 0x1, 0x0);
        gbc.writeMem(0x66ad, { 0x68 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2e52, gbc.sp());
        EXPECT(0x66ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0193
        gbc.setState(0x9f57, 0x538d, 0x55b0, 0xf5bc, 0x9353, 0x89bd, 0x1, 0x1);
        gbc.writeMem(0x9f57, { 0x68 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x538d, gbc.sp());
        EXPECT(0x9f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9f57));
        // 68 0194
        gbc.setState(0xd0c3, 0x34c5, 0x6fa0, 0x4882, 0x61fb, 0x2923, 0x0, 0x1);
        gbc.writeMem(0xd0c3, { 0x68 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x34c5, gbc.sp());
        EXPECT(0xd0c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd0c3));
        // 68 0195
        gbc.setState(0xa839, 0xfae0, 0x9050, 0xfc54, 0xd017, 0xa858, 0x0, 0x1);
        gbc.writeMem(0xa839, { 0x68 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfae0, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa839));
        // 68 0197
        gbc.setState(0xb9fb, 0xe154, 0xec90, 0x83f6, 0x9b17, 0x41a6, 0x1, 0x1);
        gbc.writeMem(0xb9fb, { 0x68 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe154, gbc.sp());
        EXPECT(0xb9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb9fb));
        // 68 0198
        gbc.setState(0x12bc, 0x8c5b, 0xddb0, 0xd6e8, 0x8d80, 0xb573, 0x1, 0x1);
        gbc.writeMem(0x12bc, { 0x68 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8c5b, gbc.sp());
        EXPECT(0x12bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0199
        gbc.setState(0x28ae, 0x3677, 0x7730, 0x3a9e, 0x98c9, 0xd4e4, 0x1, 0x1);
        gbc.writeMem(0x28ae, { 0x68 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3677, gbc.sp());
        EXPECT(0x28af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 019A
        gbc.setState(0xdbd9, 0x4674, 0x8430, 0x37f7, 0x6b9, 0x5e0d, 0x0, 0x1);
        gbc.writeMem(0xdbd9, { 0x68 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4674, gbc.sp());
        EXPECT(0xdbda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdbd9));
        // 68 019B
        gbc.setState(0x605d, 0xe484, 0x8d50, 0x5728, 0x18bd, 0xcbd3, 0x1, 0x0);
        gbc.writeMem(0x605d, { 0x68 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe484, gbc.sp());
        EXPECT(0x605e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 019C
        gbc.setState(0xa061, 0x797e, 0x3510, 0xd6ca, 0xd8ca, 0x4540, 0x0, 0x1);
        gbc.writeMem(0xa061, { 0x68 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x797e, gbc.sp());
        EXPECT(0xa062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa061));
        // 68 019D
        gbc.setState(0x9e2, 0x8de0, 0xbb90, 0x5b36, 0x2dc7, 0xebbe, 0x1, 0x1);
        gbc.writeMem(0x9e2, { 0x68 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8de0, gbc.sp());
        EXPECT(0x9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 019E
        gbc.setState(0x3c0, 0x437d, 0xd220, 0x836e, 0xdae9, 0xa87c, 0x1, 0x0);
        gbc.writeMem(0x3c0, { 0x68 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x437d, gbc.sp());
        EXPECT(0x3c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 019F
        gbc.setState(0x2923, 0x5ba5, 0xf600, 0x224a, 0x8374, 0xe9b3, 0x0, 0x1);
        gbc.writeMem(0x2923, { 0x68 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5ba5, gbc.sp());
        EXPECT(0x2924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01A0
        gbc.setState(0x9cd7, 0xbf1e, 0x5270, 0x8384, 0x1a07, 0xdf75, 0x1, 0x1);
        gbc.writeMem(0x9cd7, { 0x68 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbf1e, gbc.sp());
        EXPECT(0x9cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9cd7));
        // 68 01A1
        gbc.setState(0x7a5b, 0xdde6, 0x6ce0, 0xcb82, 0xc2db, 0x9375, 0x0, 0x1);
        gbc.writeMem(0x7a5b, { 0x68 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdde6, gbc.sp());
        EXPECT(0x7a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01A2
        gbc.setState(0x49b, 0xbc39, 0x53a0, 0xb05e, 0xe200, 0x54a5, 0x0, 0x1);
        gbc.writeMem(0x49b, { 0x68 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbc39, gbc.sp());
        EXPECT(0x49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01A3
        gbc.setState(0xb54f, 0xc7f6, 0xe500, 0x975a, 0x2eed, 0xa1a7, 0x0, 0x0);
        gbc.writeMem(0xb54f, { 0x68 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc7f6, gbc.sp());
        EXPECT(0xb550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb54f));
        // 68 01A4
        gbc.setState(0x6033, 0x8b77, 0x6b60, 0xef06, 0xa73f, 0x8071, 0x0, 0x0);
        gbc.writeMem(0x6033, { 0x68 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8b77, gbc.sp());
        EXPECT(0x6034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01A5
        gbc.setState(0x9ad0, 0xf058, 0x95c0, 0x6ec5, 0x524c, 0xb823, 0x1, 0x0);
        gbc.writeMem(0x9ad0, { 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf058, gbc.sp());
        EXPECT(0x9ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9ad0));
        // 68 01A6
        gbc.setState(0xa12c, 0xd541, 0x6560, 0x64a, 0x7dad, 0xbee2, 0x1, 0x1);
        gbc.writeMem(0xa12c, { 0x68 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd541, gbc.sp());
        EXPECT(0xa12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa12c));
        // 68 01A7
        gbc.setState(0x2bea, 0xb04f, 0xe3f0, 0xe1e, 0x2076, 0x3950, 0x0, 0x0);
        gbc.writeMem(0x2bea, { 0x68 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb04f, gbc.sp());
        EXPECT(0x2beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01A8
        gbc.setState(0xc1bf, 0x1d05, 0x9920, 0x358f, 0x1dce, 0x52e9, 0x1, 0x1);
        gbc.writeMem(0xc1bf, { 0x68 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1d05, gbc.sp());
        EXPECT(0xc1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc1bf));
        // 68 01A9
        gbc.setState(0x2b04, 0xf432, 0xaa70, 0x2631, 0x33a8, 0xf4b0, 0x1, 0x0);
        gbc.writeMem(0x2b04, { 0x68 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf432, gbc.sp());
        EXPECT(0x2b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01AA
        gbc.setState(0x61b7, 0x75f, 0x6ba0, 0x54ba, 0xf90, 0x58ad, 0x1, 0x0);
        gbc.writeMem(0x61b7, { 0x68 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x75f, gbc.sp());
        EXPECT(0x61b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01AB
        gbc.setState(0xdff9, 0xae8d, 0xe080, 0xa8d2, 0x8279, 0x2ec3, 0x0, 0x1);
        gbc.writeMem(0xdff9, { 0x68 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xae8d, gbc.sp());
        EXPECT(0xdffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdff9));
        // 68 01AC
        gbc.setState(0x99d, 0x2865, 0x8930, 0xee44, 0x2452, 0x5295, 0x0, 0x1);
        gbc.writeMem(0x99d, { 0x68 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2865, gbc.sp());
        EXPECT(0x99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01AD
        gbc.setState(0x1948, 0xc5a8, 0xc890, 0x954, 0x6ef4, 0xd318, 0x1, 0x0);
        gbc.writeMem(0x1948, { 0x68 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc5a8, gbc.sp());
        EXPECT(0x1949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01AE
        gbc.setState(0x855c, 0x34ed, 0x25d0, 0xc9a6, 0xc70, 0x399f, 0x0, 0x0);
        gbc.writeMem(0x855c, { 0x68 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x34ed, gbc.sp());
        EXPECT(0x855d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x855c));
        // 68 01B0
        gbc.setState(0x98dc, 0x6535, 0x9000, 0x3ce1, 0x1392, 0x1f81, 0x1, 0x1);
        gbc.writeMem(0x98dc, { 0x68 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6535, gbc.sp());
        EXPECT(0x98dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x98dc));
        // 68 01B2
        gbc.setState(0x73f9, 0x57c9, 0x4310, 0x34d4, 0xc0b, 0xc6d9, 0x0, 0x0);
        gbc.writeMem(0x73f9, { 0x68 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x57c9, gbc.sp());
        EXPECT(0x73fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01B3
        gbc.setState(0x9d5b, 0xb428, 0xd00, 0xa3df, 0xa156, 0xa49d, 0x1, 0x0);
        gbc.writeMem(0x9d5b, { 0x68 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb428, gbc.sp());
        EXPECT(0x9d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9d5b));
        // 68 01B4
        gbc.setState(0x212d, 0x4ef3, 0xf4a0, 0x8d0d, 0x164f, 0x8204, 0x0, 0x1);
        gbc.writeMem(0x212d, { 0x68 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4ef3, gbc.sp());
        EXPECT(0x212e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01B5
        gbc.setState(0xed45, 0x2aa0, 0x60a0, 0x65a1, 0x202d, 0x3117, 0x1, 0x0);
        gbc.writeMem(0xed45, { 0x68 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2aa0, gbc.sp());
        EXPECT(0xed46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xed45));
        // 68 01B7
        gbc.setState(0x5ea6, 0x6377, 0x69d0, 0xf18e, 0x221a, 0x375f, 0x0, 0x1);
        gbc.writeMem(0x5ea6, { 0x68 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6377, gbc.sp());
        EXPECT(0x5ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01B8
        gbc.setState(0x32c3, 0xe495, 0x62f0, 0xfb9f, 0x700e, 0xac53, 0x1, 0x1);
        gbc.writeMem(0x32c3, { 0x68 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe495, gbc.sp());
        EXPECT(0x32c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01B9
        gbc.setState(0xac23, 0x8405, 0x1030, 0x58e7, 0xadfc, 0x1140, 0x0, 0x0);
        gbc.writeMem(0xac23, { 0x68 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8405, gbc.sp());
        EXPECT(0xac24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xac23));
        // 68 01BA
        gbc.setState(0xa1ca, 0x2439, 0x75b0, 0xd13, 0x70b4, 0xae0b, 0x0, 0x1);
        gbc.writeMem(0xa1ca, { 0x68 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2439, gbc.sp());
        EXPECT(0xa1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa1ca));
        // 68 01BB
        gbc.setState(0x837b, 0x3a83, 0x7a00, 0x631a, 0xfc87, 0x5785, 0x1, 0x0);
        gbc.writeMem(0x837b, { 0x68 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3a83, gbc.sp());
        EXPECT(0x837c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x837b));
        // 68 01BC
        gbc.setState(0xcaf9, 0xa028, 0x88e0, 0x522b, 0x83a6, 0x278c, 0x0, 0x1);
        gbc.writeMem(0xcaf9, { 0x68 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa028, gbc.sp());
        EXPECT(0xcafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcaf9));
        // 68 01BD
        gbc.setState(0x3562, 0xcb68, 0x9e80, 0x462f, 0xdcc4, 0xabbf, 0x1, 0x1);
        gbc.writeMem(0x3562, { 0x68 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcb68, gbc.sp());
        EXPECT(0x3563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01BE
        gbc.setState(0x61fd, 0x3206, 0x6970, 0xe91f, 0x4e17, 0x99e3, 0x0, 0x0);
        gbc.writeMem(0x61fd, { 0x68 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3206, gbc.sp());
        EXPECT(0x61fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01BF
        gbc.setState(0xc745, 0xbc5e, 0xace0, 0xf1ca, 0x83b6, 0xeb8e, 0x1, 0x0);
        gbc.writeMem(0xc745, { 0x68 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbc5e, gbc.sp());
        EXPECT(0xc746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc745));
        // 68 01C0
        gbc.setState(0x81ab, 0x54bf, 0x4ed0, 0x5a29, 0x5c1, 0x8956, 0x1, 0x1);
        gbc.writeMem(0x81ab, { 0x68 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x54bf, gbc.sp());
        EXPECT(0x81ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x81ab));
        // 68 01C1
        gbc.setState(0x1161, 0x6232, 0xc0f0, 0x2cfb, 0x67, 0x8d37, 0x0, 0x0);
        gbc.writeMem(0x1161, { 0x68 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6232, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01C2
        gbc.setState(0xb057, 0x8b9f, 0x2110, 0x8fd0, 0xbf33, 0xe599, 0x0, 0x0);
        gbc.writeMem(0xb057, { 0x68 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8b9f, gbc.sp());
        EXPECT(0xb058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb057));
        // 68 01C3
        gbc.setState(0x34ce, 0x8530, 0x97e0, 0xc6d3, 0x1fce, 0xfbaf, 0x0, 0x1);
        gbc.writeMem(0x34ce, { 0x68 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8530, gbc.sp());
        EXPECT(0x34cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01C4
        gbc.setState(0x3771, 0x9e31, 0x7a40, 0xdda8, 0x83ef, 0x66a4, 0x1, 0x1);
        gbc.writeMem(0x3771, { 0x68 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9e31, gbc.sp());
        EXPECT(0x3772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01C6
        gbc.setState(0x95b1, 0x3758, 0xf130, 0x17bb, 0xe3dc, 0xf3d8, 0x0, 0x0);
        gbc.writeMem(0x95b1, { 0x68 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3758, gbc.sp());
        EXPECT(0x95b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x95b1));
        // 68 01C7
        gbc.setState(0xb45e, 0x76ac, 0xc740, 0x8099, 0xb414, 0x97fa, 0x1, 0x0);
        gbc.writeMem(0xb45e, { 0x68 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x76ac, gbc.sp());
        EXPECT(0xb45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb45e));
        // 68 01C8
        gbc.setState(0x705c, 0xece7, 0x3940, 0x2a0e, 0xa26a, 0x8720, 0x0, 0x0);
        gbc.writeMem(0x705c, { 0x68 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xece7, gbc.sp());
        EXPECT(0x705d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01C9
        gbc.setState(0x5d7d, 0xd8a3, 0x560, 0xf1ca, 0x4e4d, 0x5635, 0x0, 0x1);
        gbc.writeMem(0x5d7d, { 0x68 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd8a3, gbc.sp());
        EXPECT(0x5d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01CA
        gbc.setState(0x81e1, 0x9732, 0x6df0, 0x64f9, 0x7e6b, 0x9f45, 0x1, 0x0);
        gbc.writeMem(0x81e1, { 0x68 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9732, gbc.sp());
        EXPECT(0x81e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x81e1));
        // 68 01CB
        gbc.setState(0x650f, 0x2db8, 0xeb80, 0x629d, 0xa379, 0x8bd2, 0x1, 0x0);
        gbc.writeMem(0x650f, { 0x68 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2db8, gbc.sp());
        EXPECT(0x6510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01CC
        gbc.setState(0x362, 0x3a1d, 0x7ba0, 0x43ac, 0x563e, 0x3b, 0x1, 0x0);
        gbc.writeMem(0x362, { 0x68 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3a1d, gbc.sp());
        EXPECT(0x363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01CD
        gbc.setState(0xb450, 0x6656, 0xd890, 0x36b2, 0x4add, 0x29ce, 0x0, 0x1);
        gbc.writeMem(0xb450, { 0x68 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6656, gbc.sp());
        EXPECT(0xb451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb450));
        // 68 01CE
        gbc.setState(0x401e, 0x16ef, 0x4740, 0xa8c9, 0x5208, 0xebe5, 0x1, 0x1);
        gbc.writeMem(0x401e, { 0x68 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x16ef, gbc.sp());
        EXPECT(0x401f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01CF
        gbc.setState(0x9357, 0xfd0, 0xca00, 0xdbef, 0xad8, 0x7d4, 0x0, 0x0);
        gbc.writeMem(0x9357, { 0x68 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfd0, gbc.sp());
        EXPECT(0x9358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9357));
        // 68 01D0
        gbc.setState(0x796e, 0xcca, 0x7860, 0x32d5, 0x4c2d, 0xb39c, 0x0, 0x1);
        gbc.writeMem(0x796e, { 0x68 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcca, gbc.sp());
        EXPECT(0x796f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01D1
        gbc.setState(0x4b50, 0x1858, 0x1650, 0x5f9c, 0x72f0, 0x8e71, 0x1, 0x0);
        gbc.writeMem(0x4b50, { 0x68 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1858, gbc.sp());
        EXPECT(0x4b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01D2
        gbc.setState(0xe4f1, 0x20cc, 0xb640, 0xfcd4, 0xbe57, 0xf26, 0x0, 0x1);
        gbc.writeMem(0xe4f1, { 0x68 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x20cc, gbc.sp());
        EXPECT(0xe4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe4f1));
        // 68 01D3
        gbc.setState(0x125e, 0xc54d, 0x9a40, 0x4341, 0x358, 0x64ab, 0x0, 0x0);
        gbc.writeMem(0x125e, { 0x68 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc54d, gbc.sp());
        EXPECT(0x125f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01D4
        gbc.setState(0x601d, 0x40eb, 0x9420, 0xe1d5, 0xa16b, 0x9863, 0x1, 0x0);
        gbc.writeMem(0x601d, { 0x68 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x40eb, gbc.sp());
        EXPECT(0x601e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01D5
        gbc.setState(0x2615, 0xf787, 0xfdb0, 0xd345, 0xc5bc, 0x6429, 0x1, 0x1);
        gbc.writeMem(0x2615, { 0x68 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0x2616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01D6
        gbc.setState(0x4979, 0xcb3c, 0xc4c0, 0x10f7, 0x9678, 0x396f, 0x0, 0x1);
        gbc.writeMem(0x4979, { 0x68 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcb3c, gbc.sp());
        EXPECT(0x497a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01D7
        gbc.setState(0xc3a, 0xca80, 0xda00, 0x6e43, 0x4f21, 0x364a, 0x0, 0x0);
        gbc.writeMem(0xc3a, { 0x68 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xca80, gbc.sp());
        EXPECT(0xc3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01D8
        gbc.setState(0x130d, 0x19dd, 0x8990, 0xf422, 0xc5e5, 0x1d3d, 0x1, 0x1);
        gbc.writeMem(0x130d, { 0x68 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x19dd, gbc.sp());
        EXPECT(0x130e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01D9
        gbc.setState(0xae90, 0x6559, 0xd000, 0xeb04, 0xf520, 0xa8f4, 0x1, 0x1);
        gbc.writeMem(0xae90, { 0x68 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6559, gbc.sp());
        EXPECT(0xae91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xae90));
        // 68 01DA
        gbc.setState(0x1717, 0xebe8, 0x9120, 0x4bba, 0x2df7, 0xffa5, 0x0, 0x0);
        gbc.writeMem(0x1717, { 0x68 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xebe8, gbc.sp());
        EXPECT(0x1718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01DC
        gbc.setState(0x8327, 0x8bca, 0x7170, 0xdff, 0xbb82, 0x70a2, 0x0, 0x1);
        gbc.writeMem(0x8327, { 0x68 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8bca, gbc.sp());
        EXPECT(0x8328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8327));
        // 68 01DD
        gbc.setState(0x87af, 0xe7cc, 0xd430, 0xb679, 0x556c, 0xe879, 0x1, 0x0);
        gbc.writeMem(0x87af, { 0x68 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe7cc, gbc.sp());
        EXPECT(0x87b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x87af));
        // 68 01DE
        gbc.setState(0xacd8, 0xf3dc, 0xcf80, 0xd248, 0x8507, 0x2527, 0x1, 0x1);
        gbc.writeMem(0xacd8, { 0x68 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf3dc, gbc.sp());
        EXPECT(0xacd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xacd8));
        // 68 01E0
        gbc.setState(0xd790, 0x62d1, 0x7f30, 0x8c17, 0x3adb, 0xce51, 0x0, 0x1);
        gbc.writeMem(0xd790, { 0x68 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x62d1, gbc.sp());
        EXPECT(0xd791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd790));
        // 68 01E1
        gbc.setState(0xd988, 0x165a, 0x89d0, 0x6c91, 0x12d7, 0x6dff, 0x1, 0x0);
        gbc.writeMem(0xd988, { 0x68 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0xd989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd988));
        // 68 01E2
        gbc.setState(0xb123, 0x4ba, 0x4db0, 0x773f, 0xb6b0, 0x25bf, 0x0, 0x0);
        gbc.writeMem(0xb123, { 0x68 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4ba, gbc.sp());
        EXPECT(0xb124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb123));
        // 68 01E3
        gbc.setState(0x8b95, 0x2e2, 0x5780, 0xb19c, 0x3305, 0x16b2, 0x1, 0x1);
        gbc.writeMem(0x8b95, { 0x68 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2e2, gbc.sp());
        EXPECT(0x8b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8b95));
        // 68 01E4
        gbc.setState(0x9f1c, 0x35ce, 0x1800, 0xa10e, 0xec77, 0xe46, 0x0, 0x0);
        gbc.writeMem(0x9f1c, { 0x68 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x35ce, gbc.sp());
        EXPECT(0x9f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9f1c));
        // 68 01E5
        gbc.setState(0x5881, 0x2d63, 0x1160, 0x63e8, 0x3899, 0xad4e, 0x0, 0x0);
        gbc.writeMem(0x5881, { 0x68 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2d63, gbc.sp());
        EXPECT(0x5882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01E6
        gbc.setState(0x89c6, 0x9ac, 0xb820, 0x8e06, 0x96e7, 0x1b9f, 0x1, 0x1);
        gbc.writeMem(0x89c6, { 0x68 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9ac, gbc.sp());
        EXPECT(0x89c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x89c6));
        // 68 01E7
        gbc.setState(0x5c5c, 0x5055, 0x5490, 0x89e6, 0xb6f8, 0xb0f, 0x1, 0x0);
        gbc.writeMem(0x5c5c, { 0x68 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5055, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01E8
        gbc.setState(0x5238, 0xb35e, 0x1c50, 0xf630, 0x52ff, 0xb6df, 0x1, 0x1);
        gbc.writeMem(0x5238, { 0x68 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb35e, gbc.sp());
        EXPECT(0x5239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01E9
        gbc.setState(0x13e0, 0x5ea9, 0x39e0, 0x5453, 0x8aed, 0xfe45, 0x0, 0x0);
        gbc.writeMem(0x13e0, { 0x68 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5ea9, gbc.sp());
        EXPECT(0x13e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01EA
        gbc.setState(0xa9b9, 0x771c, 0x5490, 0x5e48, 0x3cdd, 0x78de, 0x0, 0x1);
        gbc.writeMem(0xa9b9, { 0x68 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x771c, gbc.sp());
        EXPECT(0xa9ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa9b9));
        // 68 01EB
        gbc.setState(0xd, 0xed8a, 0x5060, 0xe4c4, 0xc764, 0xde8e, 0x1, 0x1);
        gbc.writeMem(0xd, { 0x68 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xed8a, gbc.sp());
        EXPECT(0xe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01EC
        gbc.setState(0x8110, 0x6a12, 0x5a20, 0x8398, 0xf200, 0x70e9, 0x0, 0x1);
        gbc.writeMem(0x8110, { 0x68 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6a12, gbc.sp());
        EXPECT(0x8111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8110));
        // 68 01ED
        gbc.setState(0xd571, 0x440a, 0x1cf0, 0x3701, 0x8093, 0x7ab8, 0x0, 0x1);
        gbc.writeMem(0xd571, { 0x68 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x440a, gbc.sp());
        EXPECT(0xd572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd571));
        // 68 01EE
        gbc.setState(0x5324, 0xc352, 0x1a10, 0xe1b5, 0x7546, 0xa830, 0x1, 0x0);
        gbc.writeMem(0x5324, { 0x68 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc352, gbc.sp());
        EXPECT(0x5325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01EF
        gbc.setState(0x3b6f, 0xc7cb, 0xe7e0, 0x37bd, 0x175b, 0x909, 0x0, 0x1);
        gbc.writeMem(0x3b6f, { 0x68 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc7cb, gbc.sp());
        EXPECT(0x3b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01F0
        gbc.setState(0x6b34, 0x1310, 0xa50, 0xd555, 0x867e, 0x73ea, 0x1, 0x1);
        gbc.writeMem(0x6b34, { 0x68 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1310, gbc.sp());
        EXPECT(0x6b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01F2
        gbc.setState(0x7b7a, 0x9961, 0xdd70, 0x6eb8, 0x63d5, 0xdf4f, 0x0, 0x0);
        gbc.writeMem(0x7b7a, { 0x68 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9961, gbc.sp());
        EXPECT(0x7b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01F3
        gbc.setState(0x695f, 0x30d7, 0x8010, 0x33a1, 0xf0a8, 0x5d6b, 0x0, 0x1);
        gbc.writeMem(0x695f, { 0x68 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x30d7, gbc.sp());
        EXPECT(0x6960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01F4
        gbc.setState(0x9a6, 0x110a, 0x9550, 0x38c7, 0x71c8, 0xf526, 0x0, 0x0);
        gbc.writeMem(0x9a6, { 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x110a, gbc.sp());
        EXPECT(0x9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01F6
        gbc.setState(0x4532, 0xdd1c, 0x7040, 0xd39, 0x8c5a, 0x4b2d, 0x1, 0x1);
        gbc.writeMem(0x4532, { 0x68 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdd1c, gbc.sp());
        EXPECT(0x4533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01F7
        gbc.setState(0x5fea, 0x38bc, 0x3120, 0xbb54, 0x40a8, 0x2eea, 0x0, 0x0);
        gbc.writeMem(0x5fea, { 0x68 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x38bc, gbc.sp());
        EXPECT(0x5feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01F8
        gbc.setState(0x15bb, 0xbc14, 0x7c50, 0x4627, 0x9a93, 0xf962, 0x1, 0x1);
        gbc.writeMem(0x15bb, { 0x68 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbc14, gbc.sp());
        EXPECT(0x15bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01F9
        gbc.setState(0x74c8, 0x6dcf, 0x9300, 0xc693, 0x76b3, 0xfa9a, 0x0, 0x0);
        gbc.writeMem(0x74c8, { 0x68 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6dcf, gbc.sp());
        EXPECT(0x74c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01FA
        gbc.setState(0x8068, 0xa9b2, 0x65d0, 0x9ebd, 0xb00, 0x67d9, 0x0, 0x0);
        gbc.writeMem(0x8068, { 0x68 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa9b2, gbc.sp());
        EXPECT(0x8069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8068));
        // 68 01FB
        gbc.setState(0x2344, 0xe19f, 0x6110, 0x67d3, 0x5420, 0x790d, 0x0, 0x1);
        gbc.writeMem(0x2344, { 0x68 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe19f, gbc.sp());
        EXPECT(0x2345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 01FC
        gbc.setState(0xb8a, 0x74eb, 0x2240, 0xa48c, 0xc608, 0xe02, 0x0, 0x1);
        gbc.writeMem(0xb8a, { 0x68 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x74eb, gbc.sp());
        EXPECT(0xb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01FD
        gbc.setState(0x8c69, 0x7954, 0xd280, 0x1d1c, 0xecc2, 0x49cd, 0x0, 0x1);
        gbc.writeMem(0x8c69, { 0x68 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7954, gbc.sp());
        EXPECT(0x8c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8c69));
        // 68 01FE
        gbc.setState(0x5c3f, 0x472, 0xd2c0, 0xfade, 0x12ad, 0xa0e0, 0x1, 0x1);
        gbc.writeMem(0x5c3f, { 0x68 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x472, gbc.sp());
        EXPECT(0x5c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 01FF
        gbc.setState(0x88d2, 0xa159, 0xc6c0, 0xa1a2, 0x340a, 0xc52d, 0x0, 0x0);
        gbc.writeMem(0x88d2, { 0x68 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa159, gbc.sp());
        EXPECT(0x88d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x88d2));
        // 68 0200
        gbc.setState(0xac2b, 0x2090, 0xbdb0, 0xed84, 0x59e5, 0x33c7, 0x0, 0x0);
        gbc.writeMem(0xac2b, { 0x68 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2090, gbc.sp());
        EXPECT(0xac2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xac2b));
        // 68 0201
        gbc.setState(0x949d, 0x1029, 0x1b40, 0x2306, 0x2348, 0xc934, 0x1, 0x0);
        gbc.writeMem(0x949d, { 0x68 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1029, gbc.sp());
        EXPECT(0x949e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x949d));
        // 68 0202
        gbc.setState(0xcac8, 0x8959, 0xb4f0, 0x2413, 0x5ca, 0xe05a, 0x0, 0x1);
        gbc.writeMem(0xcac8, { 0x68 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8959, gbc.sp());
        EXPECT(0xcac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcac8));
        // 68 0203
        gbc.setState(0x9b04, 0x645c, 0x2a10, 0xe1c8, 0x3bb7, 0xa5e9, 0x0, 0x0);
        gbc.writeMem(0x9b04, { 0x68 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x645c, gbc.sp());
        EXPECT(0x9b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9b04));
        // 68 0204
        gbc.setState(0x5cbd, 0x81dd, 0x4e60, 0x497a, 0x9877, 0xf346, 0x0, 0x0);
        gbc.writeMem(0x5cbd, { 0x68 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x81dd, gbc.sp());
        EXPECT(0x5cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0205
        gbc.setState(0x7283, 0x724b, 0x87c0, 0x36e5, 0x13b1, 0x9ef9, 0x0, 0x1);
        gbc.writeMem(0x7283, { 0x68 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x724b, gbc.sp());
        EXPECT(0x7284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0206
        gbc.setState(0xef85, 0x691b, 0xd660, 0xb858, 0x1a69, 0xf102, 0x1, 0x1);
        gbc.writeMem(0xef85, { 0x68 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x691b, gbc.sp());
        EXPECT(0xef86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xef85));
        // 68 0207
        gbc.setState(0x91b7, 0xabce, 0x69c0, 0xa419, 0xebf8, 0xa761, 0x0, 0x0);
        gbc.writeMem(0x91b7, { 0x68 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xabce, gbc.sp());
        EXPECT(0x91b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x91b7));
        // 68 0208
        gbc.setState(0x9970, 0xb758, 0xad10, 0xdfd7, 0xd923, 0x53a3, 0x0, 0x0);
        gbc.writeMem(0x9970, { 0x68 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb758, gbc.sp());
        EXPECT(0x9971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9970));
        // 68 0209
        gbc.setState(0x2f85, 0x3376, 0x6da0, 0x8039, 0xac42, 0x8f73, 0x1, 0x0);
        gbc.writeMem(0x2f85, { 0x68 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3376, gbc.sp());
        EXPECT(0x2f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 020A
        gbc.setState(0xc96a, 0x5519, 0x87a0, 0x212f, 0xfb96, 0xfe36, 0x0, 0x0);
        gbc.writeMem(0xc96a, { 0x68 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5519, gbc.sp());
        EXPECT(0xc96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc96a));
        // 68 020B
        gbc.setState(0xc237, 0x62a3, 0x9580, 0xde2d, 0x603c, 0xb2c0, 0x0, 0x1);
        gbc.writeMem(0xc237, { 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x62a3, gbc.sp());
        EXPECT(0xc238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc237));
        // 68 020C
        gbc.setState(0x84a9, 0x18ca, 0x3020, 0x3295, 0xbd2b, 0x6c52, 0x1, 0x0);
        gbc.writeMem(0x84a9, { 0x68 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x18ca, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x84a9));
        // 68 020D
        gbc.setState(0x286a, 0x88d, 0x3dc0, 0xb000, 0x4176, 0x6a3c, 0x1, 0x1);
        gbc.writeMem(0x286a, { 0x68 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x88d, gbc.sp());
        EXPECT(0x286b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 020E
        gbc.setState(0x13ff, 0x6082, 0x9570, 0x729b, 0x8f7a, 0xe6f6, 0x1, 0x0);
        gbc.writeMem(0x13ff, { 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6082, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 020F
        gbc.setState(0xedab, 0xf78d, 0x1f70, 0xeb18, 0xd458, 0x2beb, 0x0, 0x0);
        gbc.writeMem(0xedab, { 0x68 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf78d, gbc.sp());
        EXPECT(0xedac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xedab));
        // 68 0210
        gbc.setState(0xe25b, 0x21b5, 0xd6d0, 0x8d43, 0x3ecc, 0x239f, 0x1, 0x0);
        gbc.writeMem(0xe25b, { 0x68 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x21b5, gbc.sp());
        EXPECT(0xe25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe25b));
        // 68 0211
        gbc.setState(0x364, 0x3d88, 0x1af0, 0x7288, 0x9d29, 0x99ce, 0x1, 0x1);
        gbc.writeMem(0x364, { 0x68 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3d88, gbc.sp());
        EXPECT(0x365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0212
        gbc.setState(0x9fb9, 0xe767, 0xc840, 0x973b, 0x5e84, 0x863e, 0x0, 0x1);
        gbc.writeMem(0x9fb9, { 0x68 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe767, gbc.sp());
        EXPECT(0x9fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9fb9));
        // 68 0213
        gbc.setState(0x60af, 0x18e9, 0xcf40, 0xe438, 0xd9bc, 0x2b4b, 0x1, 0x0);
        gbc.writeMem(0x60af, { 0x68 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x18e9, gbc.sp());
        EXPECT(0x60b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0214
        gbc.setState(0x82aa, 0x91b5, 0x3ac0, 0x6102, 0x6f0f, 0xbf2, 0x0, 0x0);
        gbc.writeMem(0x82aa, { 0x68 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0x82ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x82aa));
        // 68 0215
        gbc.setState(0x148d, 0xb515, 0xf800, 0x4821, 0x92d8, 0x6fc2, 0x1, 0x1);
        gbc.writeMem(0x148d, { 0x68 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb515, gbc.sp());
        EXPECT(0x148e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0216
        gbc.setState(0x6d8c, 0x2050, 0x1ba0, 0x3087, 0x3ea6, 0x8852, 0x1, 0x0);
        gbc.writeMem(0x6d8c, { 0x68 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2050, gbc.sp());
        EXPECT(0x6d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0217
        gbc.setState(0xa4bd, 0x9fc9, 0xd6b0, 0x3773, 0x151d, 0xbb21, 0x1, 0x0);
        gbc.writeMem(0xa4bd, { 0x68 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9fc9, gbc.sp());
        EXPECT(0xa4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa4bd));
        // 68 0218
        gbc.setState(0x5c0a, 0x26f, 0x49d0, 0x43b3, 0x52b9, 0xcd9a, 0x0, 0x0);
        gbc.writeMem(0x5c0a, { 0x68 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x26f, gbc.sp());
        EXPECT(0x5c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0219
        gbc.setState(0x68cf, 0xaf29, 0xd640, 0x704, 0x565c, 0x7bdb, 0x0, 0x1);
        gbc.writeMem(0x68cf, { 0x68 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xaf29, gbc.sp());
        EXPECT(0x68d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 021A
        gbc.setState(0x7598, 0x4a25, 0x8af0, 0x3301, 0x9528, 0xa084, 0x1, 0x0);
        gbc.writeMem(0x7598, { 0x68 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4a25, gbc.sp());
        EXPECT(0x7599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 021B
        gbc.setState(0x16dd, 0xe271, 0xc810, 0x31ca, 0x6410, 0x24ff, 0x0, 0x1);
        gbc.writeMem(0x16dd, { 0x68 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe271, gbc.sp());
        EXPECT(0x16de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 021C
        gbc.setState(0x1e67, 0xae77, 0x5460, 0x63cf, 0x466c, 0xac55, 0x0, 0x0);
        gbc.writeMem(0x1e67, { 0x68 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xae77, gbc.sp());
        EXPECT(0x1e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 021D
        gbc.setState(0xb519, 0x53c6, 0x9cf0, 0xc799, 0x445b, 0xd9ce, 0x1, 0x0);
        gbc.writeMem(0xb519, { 0x68 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x53c6, gbc.sp());
        EXPECT(0xb51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb519));
        // 68 021E
        gbc.setState(0x850, 0xda62, 0xafc0, 0xc114, 0xc73a, 0x5fbd, 0x0, 0x1);
        gbc.writeMem(0x850, { 0x68 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xda62, gbc.sp());
        EXPECT(0x851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 021F
        gbc.setState(0xd112, 0x8aaf, 0xa5e0, 0xfd7f, 0xf551, 0xbbfb, 0x0, 0x0);
        gbc.writeMem(0xd112, { 0x68 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8aaf, gbc.sp());
        EXPECT(0xd113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd112));
        // 68 0220
        gbc.setState(0xe041, 0xdd71, 0xecc0, 0x8b47, 0xbe90, 0x2d2b, 0x1, 0x1);
        gbc.writeMem(0xe041, { 0x68 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdd71, gbc.sp());
        EXPECT(0xe042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe041));
        // 68 0221
        gbc.setState(0x1a8f, 0x717c, 0x41b0, 0x5d92, 0xdceb, 0xe6e3, 0x0, 0x1);
        gbc.writeMem(0x1a8f, { 0x68 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x717c, gbc.sp());
        EXPECT(0x1a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0222
        gbc.setState(0x33dd, 0x72f4, 0xd840, 0xd73a, 0x3ce, 0x2938, 0x1, 0x0);
        gbc.writeMem(0x33dd, { 0x68 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x72f4, gbc.sp());
        EXPECT(0x33de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0223
        gbc.setState(0x9306, 0x150c, 0xecc0, 0xfdee, 0x6ee6, 0x1edd, 0x1, 0x1);
        gbc.writeMem(0x9306, { 0x68 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x150c, gbc.sp());
        EXPECT(0x9307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9306));
        // 68 0224
        gbc.setState(0x53ec, 0x3ac2, 0xc710, 0xc6d1, 0xa4c1, 0x4b5d, 0x0, 0x1);
        gbc.writeMem(0x53ec, { 0x68 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3ac2, gbc.sp());
        EXPECT(0x53ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0225
        gbc.setState(0xe226, 0x8550, 0xfc00, 0xd72b, 0x1d08, 0xc00a, 0x1, 0x1);
        gbc.writeMem(0xe226, { 0x68 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8550, gbc.sp());
        EXPECT(0xe227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe226));
        // 68 0226
        gbc.setState(0x9e88, 0xad86, 0xd920, 0xbd1b, 0xc90, 0x642c, 0x1, 0x0);
        gbc.writeMem(0x9e88, { 0x68 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xad86, gbc.sp());
        EXPECT(0x9e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9e88));
        // 68 0227
        gbc.setState(0x8bd3, 0x482, 0x8a40, 0x8155, 0x900, 0x4617, 0x1, 0x0);
        gbc.writeMem(0x8bd3, { 0x68 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x482, gbc.sp());
        EXPECT(0x8bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8bd3));
        // 68 0228
        gbc.setState(0xa572, 0x863c, 0x4ad0, 0x3ce1, 0x544b, 0x68ce, 0x1, 0x0);
        gbc.writeMem(0xa572, { 0x68 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x863c, gbc.sp());
        EXPECT(0xa573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa572));
        // 68 0229
        gbc.setState(0x8bdd, 0x35af, 0x34a0, 0xa8ce, 0x2f70, 0x8128, 0x1, 0x1);
        gbc.writeMem(0x8bdd, { 0x68 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x35af, gbc.sp());
        EXPECT(0x8bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8bdd));
        // 68 022A
        gbc.setState(0x1af9, 0x2ff, 0x4ce0, 0xd756, 0x1e60, 0xea0e, 0x1, 0x0);
        gbc.writeMem(0x1af9, { 0x68 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2ff, gbc.sp());
        EXPECT(0x1afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 022B
        gbc.setState(0x2501, 0xde78, 0x1560, 0x922d, 0x8f7b, 0x30f2, 0x0, 0x0);
        gbc.writeMem(0x2501, { 0x68 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xde78, gbc.sp());
        EXPECT(0x2502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 022C
        gbc.setState(0xe952, 0x7867, 0x44a0, 0xae5c, 0x7c03, 0xcaee, 0x0, 0x0);
        gbc.writeMem(0xe952, { 0x68 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7867, gbc.sp());
        EXPECT(0xe953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe952));
        // 68 022D
        gbc.setState(0x1dea, 0x430, 0xee30, 0x2ac1, 0xb914, 0x2d39, 0x1, 0x0);
        gbc.writeMem(0x1dea, { 0x68 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x430, gbc.sp());
        EXPECT(0x1deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 022E
        gbc.setState(0xe12f, 0x2701, 0x65c0, 0x2ecc, 0xf69d, 0x4534, 0x0, 0x1);
        gbc.writeMem(0xe12f, { 0x68 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2701, gbc.sp());
        EXPECT(0xe130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe12f));
        // 68 022F
        gbc.setState(0x5e3b, 0x9258, 0x8d50, 0xc4dc, 0x49c9, 0x3de2, 0x0, 0x1);
        gbc.writeMem(0x5e3b, { 0x68 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9258, gbc.sp());
        EXPECT(0x5e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0230
        gbc.setState(0x68de, 0xe8e9, 0x2ff0, 0x3425, 0xcd9b, 0xaf28, 0x0, 0x0);
        gbc.writeMem(0x68de, { 0x68 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe8e9, gbc.sp());
        EXPECT(0x68df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0231
        gbc.setState(0xacd4, 0x7681, 0x480, 0x7757, 0x2c84, 0x44a8, 0x1, 0x1);
        gbc.writeMem(0xacd4, { 0x68 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7681, gbc.sp());
        EXPECT(0xacd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xacd4));
        // 68 0232
        gbc.setState(0xd757, 0x532e, 0x67a0, 0x3219, 0x38f5, 0x8c5c, 0x1, 0x1);
        gbc.writeMem(0xd757, { 0x68 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x532e, gbc.sp());
        EXPECT(0xd758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd757));
        // 68 0233
        gbc.setState(0xcafe, 0x1437, 0xde0, 0x9408, 0x9208, 0x1d17, 0x0, 0x1);
        gbc.writeMem(0xcafe, { 0x68 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1437, gbc.sp());
        EXPECT(0xcaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcafe));
        // 68 0234
        gbc.setState(0x474, 0xdb9e, 0xd480, 0x3e7c, 0x6494, 0xd806, 0x0, 0x0);
        gbc.writeMem(0x474, { 0x68 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdb9e, gbc.sp());
        EXPECT(0x475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0235
        gbc.setState(0x25c, 0xb909, 0xfb70, 0x30e2, 0x5767, 0xbe48, 0x1, 0x1);
        gbc.writeMem(0x25c, { 0x68 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb909, gbc.sp());
        EXPECT(0x25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0236
        gbc.setState(0xc4a1, 0x68d2, 0xeb90, 0x311d, 0xb4ba, 0x7053, 0x1, 0x0);
        gbc.writeMem(0xc4a1, { 0x68 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x68d2, gbc.sp());
        EXPECT(0xc4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc4a1));
        // 68 0237
        gbc.setState(0xca05, 0x4fd, 0x9fd0, 0x532d, 0x98d7, 0x2e84, 0x0, 0x1);
        gbc.writeMem(0xca05, { 0x68 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4fd, gbc.sp());
        EXPECT(0xca06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xca05));
        // 68 0238
        gbc.setState(0xf48, 0x4619, 0x5040, 0xa450, 0x7b19, 0xc00b, 0x0, 0x0);
        gbc.writeMem(0xf48, { 0x68 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4619, gbc.sp());
        EXPECT(0xf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0239
        gbc.setState(0xb92c, 0x9e7a, 0x41d0, 0x7d4c, 0x3ae8, 0x7d0a, 0x1, 0x1);
        gbc.writeMem(0xb92c, { 0x68 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9e7a, gbc.sp());
        EXPECT(0xb92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb92c));
        // 68 023A
        gbc.setState(0x83dc, 0xf815, 0x36e0, 0x39ea, 0x9e45, 0xcfb8, 0x0, 0x1);
        gbc.writeMem(0x83dc, { 0x68 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf815, gbc.sp());
        EXPECT(0x83dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x83dc));
        // 68 023B
        gbc.setState(0xaa67, 0x1124, 0xc710, 0x23e7, 0xf14f, 0x54ec, 0x1, 0x0);
        gbc.writeMem(0xaa67, { 0x68 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1124, gbc.sp());
        EXPECT(0xaa68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xaa67));
        // 68 023C
        gbc.setState(0x83f9, 0x2525, 0x9cc0, 0xcbc1, 0xf66c, 0x740d, 0x0, 0x0);
        gbc.writeMem(0x83f9, { 0x68 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2525, gbc.sp());
        EXPECT(0x83fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x83f9));
        // 68 023D
        gbc.setState(0x740a, 0x281, 0x9950, 0xa905, 0x1514, 0xca2, 0x1, 0x1);
        gbc.writeMem(0x740a, { 0x68 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x281, gbc.sp());
        EXPECT(0x740b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 023E
        gbc.setState(0x88f2, 0x27da, 0x31e0, 0xbcd4, 0x7cad, 0x525d, 0x0, 0x1);
        gbc.writeMem(0x88f2, { 0x68 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x27da, gbc.sp());
        EXPECT(0x88f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x88f2));
        // 68 023F
        gbc.setState(0xd36c, 0xa97f, 0xe490, 0x6cb0, 0xb4eb, 0x14aa, 0x1, 0x1);
        gbc.writeMem(0xd36c, { 0x68 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa97f, gbc.sp());
        EXPECT(0xd36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd36c));
        // 68 0241
        gbc.setState(0x7a8b, 0x644c, 0x4660, 0x9f2e, 0x40fc, 0x363b, 0x0, 0x1);
        gbc.writeMem(0x7a8b, { 0x68 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x644c, gbc.sp());
        EXPECT(0x7a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0243
        gbc.setState(0x25bc, 0xed4, 0x7090, 0xaf64, 0x348b, 0xcd33, 0x1, 0x1);
        gbc.writeMem(0x25bc, { 0x68 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xed4, gbc.sp());
        EXPECT(0x25bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0244
        gbc.setState(0xc397, 0x73c0, 0x750, 0x4d3a, 0x7654, 0x6a68, 0x0, 0x0);
        gbc.writeMem(0xc397, { 0x68 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x73c0, gbc.sp());
        EXPECT(0xc398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc397));
        // 68 0245
        gbc.setState(0x6eff, 0x2223, 0x310, 0xfbf9, 0xc38d, 0x17b9, 0x1, 0x1);
        gbc.writeMem(0x6eff, { 0x68 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2223, gbc.sp());
        EXPECT(0x6f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0246
        gbc.setState(0x68, 0x539a, 0x8850, 0xc6f9, 0x4ba2, 0x29b5, 0x1, 0x0);
        gbc.writeMem(0x68, { 0x68 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x539a, gbc.sp());
        EXPECT(0x69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0247
        gbc.setState(0x314a, 0x8db, 0x7660, 0x3fd6, 0x8a21, 0xef83, 0x1, 0x0);
        gbc.writeMem(0x314a, { 0x68 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8db, gbc.sp());
        EXPECT(0x314b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0248
        gbc.setState(0x223d, 0x7626, 0xa70, 0x49dd, 0x2d7, 0x358d, 0x1, 0x0);
        gbc.writeMem(0x223d, { 0x68 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7626, gbc.sp());
        EXPECT(0x223e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0249
        gbc.setState(0xabb5, 0x55c, 0x4090, 0xa00c, 0x4013, 0xaced, 0x1, 0x0);
        gbc.writeMem(0xabb5, { 0x68 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x55c, gbc.sp());
        EXPECT(0xabb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xabb5));
        // 68 024A
        gbc.setState(0xc211, 0x856b, 0x2a00, 0xb49, 0x50a2, 0xf85, 0x0, 0x0);
        gbc.writeMem(0xc211, { 0x68 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x856b, gbc.sp());
        EXPECT(0xc212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc211));
        // 68 024B
        gbc.setState(0x13a4, 0x19b5, 0xbf30, 0x580e, 0xabb4, 0xda91, 0x1, 0x1);
        gbc.writeMem(0x13a4, { 0x68 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x19b5, gbc.sp());
        EXPECT(0x13a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 024C
        gbc.setState(0xd367, 0x8f8f, 0xfc10, 0x674a, 0x95b7, 0x97c9, 0x1, 0x1);
        gbc.writeMem(0xd367, { 0x68 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8f8f, gbc.sp());
        EXPECT(0xd368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd367));
        // 68 024D
        gbc.setState(0xdc37, 0x1759, 0xf420, 0x5c2, 0x5f08, 0x363f, 0x1, 0x0);
        gbc.writeMem(0xdc37, { 0x68 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1759, gbc.sp());
        EXPECT(0xdc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdc37));
        // 68 024E
        gbc.setState(0x3a73, 0xa16d, 0x2f20, 0xf9e8, 0x4e14, 0x2771, 0x0, 0x1);
        gbc.writeMem(0x3a73, { 0x68 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa16d, gbc.sp());
        EXPECT(0x3a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 024F
        gbc.setState(0x6c78, 0x31f9, 0x6bd0, 0xa0e3, 0x51ac, 0x1b45, 0x1, 0x0);
        gbc.writeMem(0x6c78, { 0x68 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x31f9, gbc.sp());
        EXPECT(0x6c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0250
        gbc.setState(0x1640, 0x2212, 0xb370, 0x8e63, 0xdee0, 0x4c26, 0x0, 0x1);
        gbc.writeMem(0x1640, { 0x68 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2212, gbc.sp());
        EXPECT(0x1641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0251
        gbc.setState(0xb890, 0x78b9, 0x5f40, 0xbd0f, 0x413c, 0xf0e7, 0x0, 0x0);
        gbc.writeMem(0xb890, { 0x68 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x78b9, gbc.sp());
        EXPECT(0xb891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb890));
        // 68 0252
        gbc.setState(0x3299, 0x3c1a, 0x9c70, 0x92df, 0x48a8, 0xe377, 0x0, 0x0);
        gbc.writeMem(0x3299, { 0x68 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3c1a, gbc.sp());
        EXPECT(0x329a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0253
        gbc.setState(0xc92b, 0x93fa, 0x8b0, 0xfc1e, 0xee8a, 0x9842, 0x0, 0x1);
        gbc.writeMem(0xc92b, { 0x68 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x93fa, gbc.sp());
        EXPECT(0xc92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc92b));
        // 68 0254
        gbc.setState(0xb019, 0x3a5f, 0xdc70, 0xa95f, 0x94c6, 0x2e53, 0x1, 0x0);
        gbc.writeMem(0xb019, { 0x68 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3a5f, gbc.sp());
        EXPECT(0xb01a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb019));
        // 68 0255
        gbc.setState(0x85e2, 0x874d, 0x2b40, 0xb80d, 0x8750, 0x6d8e, 0x0, 0x0);
        gbc.writeMem(0x85e2, { 0x68 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x874d, gbc.sp());
        EXPECT(0x85e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x85e2));
        // 68 0256
        gbc.setState(0x9f94, 0xd493, 0x5700, 0xe48e, 0x38a4, 0x8a06, 0x1, 0x1);
        gbc.writeMem(0x9f94, { 0x68 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd493, gbc.sp());
        EXPECT(0x9f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9f94));
        // 68 0257
        gbc.setState(0x9a72, 0xc892, 0x3e30, 0xfb1c, 0x992b, 0xc10e, 0x1, 0x1);
        gbc.writeMem(0x9a72, { 0x68 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc892, gbc.sp());
        EXPECT(0x9a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9a72));
        // 68 0258
        gbc.setState(0xe4a4, 0xc8e0, 0x2cc0, 0x809, 0x70bc, 0xf7b2, 0x0, 0x1);
        gbc.writeMem(0xe4a4, { 0x68 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc8e0, gbc.sp());
        EXPECT(0xe4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe4a4));
        // 68 0259
        gbc.setState(0xd110, 0x22e6, 0xd3d0, 0x9ca2, 0xd901, 0x3e9a, 0x1, 0x1);
        gbc.writeMem(0xd110, { 0x68 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x22e6, gbc.sp());
        EXPECT(0xd111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd110));
        // 68 025A
        gbc.setState(0x4270, 0xcc3c, 0x42b0, 0xaec9, 0xbb28, 0x3b8b, 0x1, 0x0);
        gbc.writeMem(0x4270, { 0x68 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcc3c, gbc.sp());
        EXPECT(0x4271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 025B
        gbc.setState(0x43d5, 0x9e8f, 0x4f40, 0xce34, 0xcf96, 0x2748, 0x0, 0x1);
        gbc.writeMem(0x43d5, { 0x68 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9e8f, gbc.sp());
        EXPECT(0x43d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 025C
        gbc.setState(0xe9c7, 0xc0dc, 0x6730, 0x4866, 0x18db, 0x2a28, 0x1, 0x0);
        gbc.writeMem(0xe9c7, { 0x68 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc0dc, gbc.sp());
        EXPECT(0xe9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe9c7));
        // 68 025D
        gbc.setState(0xeacb, 0xc44c, 0xf770, 0x7fd4, 0x879, 0xd3ff, 0x1, 0x0);
        gbc.writeMem(0xeacb, { 0x68 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc44c, gbc.sp());
        EXPECT(0xeacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xeacb));
        // 68 025E
        gbc.setState(0xeecd, 0x8e68, 0x6cc0, 0xa748, 0x4deb, 0xecbb, 0x0, 0x0);
        gbc.writeMem(0xeecd, { 0x68 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8e68, gbc.sp());
        EXPECT(0xeece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xeecd));
        // 68 025F
        gbc.setState(0xcac7, 0x85e0, 0x7120, 0x4f34, 0x638b, 0xbb81, 0x1, 0x1);
        gbc.writeMem(0xcac7, { 0x68 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x85e0, gbc.sp());
        EXPECT(0xcac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcac7));
        // 68 0260
        gbc.setState(0x8bd2, 0x5680, 0x7ee0, 0xfcdf, 0x7c7d, 0x5289, 0x1, 0x0);
        gbc.writeMem(0x8bd2, { 0x68 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5680, gbc.sp());
        EXPECT(0x8bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8bd2));
        // 68 0261
        gbc.setState(0x529c, 0xf13, 0xf940, 0xbeb4, 0xd5d1, 0x8fb6, 0x0, 0x1);
        gbc.writeMem(0x529c, { 0x68 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf13, gbc.sp());
        EXPECT(0x529d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0262
        gbc.setState(0x3a79, 0xc332, 0x2610, 0xa38f, 0x5584, 0x8475, 0x1, 0x0);
        gbc.writeMem(0x3a79, { 0x68 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc332, gbc.sp());
        EXPECT(0x3a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0263
        gbc.setState(0x236, 0x7407, 0x22f0, 0xb7b7, 0xfb63, 0xd330, 0x1, 0x1);
        gbc.writeMem(0x236, { 0x68 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7407, gbc.sp());
        EXPECT(0x237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0264
        gbc.setState(0xca0c, 0xbdb8, 0x8a0, 0xc0dd, 0x1266, 0xe6df, 0x0, 0x0);
        gbc.writeMem(0xca0c, { 0x68 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbdb8, gbc.sp());
        EXPECT(0xca0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xca0c));
        // 68 0265
        gbc.setState(0x9524, 0x4c81, 0x9760, 0xe8da, 0x685c, 0x3013, 0x0, 0x1);
        gbc.writeMem(0x9524, { 0x68 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4c81, gbc.sp());
        EXPECT(0x9525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9524));
        // 68 0266
        gbc.setState(0xe5f, 0x3cd2, 0x3ad0, 0xf5a, 0xd4c8, 0xcaaf, 0x0, 0x1);
        gbc.writeMem(0xe5f, { 0x68 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0xe60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0267
        gbc.setState(0x5fa8, 0xfe4a, 0x9690, 0xc6a0, 0xfb74, 0x57ff, 0x1, 0x1);
        gbc.writeMem(0x5fa8, { 0x68 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfe4a, gbc.sp());
        EXPECT(0x5fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0268
        gbc.setState(0xb746, 0x925f, 0x3720, 0xf081, 0x1716, 0xdf8d, 0x1, 0x1);
        gbc.writeMem(0xb746, { 0x68 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x925f, gbc.sp());
        EXPECT(0xb747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb746));
        // 68 0269
        gbc.setState(0x6fcc, 0x40b8, 0x27d0, 0x27cc, 0xede3, 0x79b6, 0x1, 0x0);
        gbc.writeMem(0x6fcc, { 0x68 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x40b8, gbc.sp());
        EXPECT(0x6fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 026A
        gbc.setState(0x3390, 0xd512, 0x90e0, 0xeb1c, 0x1edb, 0x7a1c, 0x1, 0x0);
        gbc.writeMem(0x3390, { 0x68 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd512, gbc.sp());
        EXPECT(0x3391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 026B
        gbc.setState(0x5027, 0x9c22, 0x6050, 0xdfce, 0xe936, 0x1dd8, 0x1, 0x1);
        gbc.writeMem(0x5027, { 0x68 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9c22, gbc.sp());
        EXPECT(0x5028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 026C
        gbc.setState(0xce0, 0xb86f, 0x23f0, 0x723d, 0x628f, 0x3579, 0x1, 0x1);
        gbc.writeMem(0xce0, { 0x68 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb86f, gbc.sp());
        EXPECT(0xce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 026D
        gbc.setState(0xdb9e, 0xf01e, 0x4e50, 0x3d21, 0xb063, 0x5a5e, 0x0, 0x0);
        gbc.writeMem(0xdb9e, { 0x68 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf01e, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdb9e));
        // 68 026E
        gbc.setState(0x8626, 0x28ba, 0x78a0, 0x44c2, 0xf7fa, 0x6237, 0x1, 0x1);
        gbc.writeMem(0x8626, { 0x68 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x28ba, gbc.sp());
        EXPECT(0x8627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8626));
        // 68 026F
        gbc.setState(0xb82d, 0x84be, 0xeda0, 0xa9e8, 0xca62, 0xeeee, 0x1, 0x0);
        gbc.writeMem(0xb82d, { 0x68 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x84be, gbc.sp());
        EXPECT(0xb82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb82d));
        // 68 0270
        gbc.setState(0x7daa, 0xe070, 0xce90, 0x89a4, 0x230c, 0xe295, 0x0, 0x1);
        gbc.writeMem(0x7daa, { 0x68 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe070, gbc.sp());
        EXPECT(0x7dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0271
        gbc.setState(0xda59, 0xa81e, 0xfcc0, 0x98e3, 0x4637, 0x67aa, 0x0, 0x1);
        gbc.writeMem(0xda59, { 0x68 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa81e, gbc.sp());
        EXPECT(0xda5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xda59));
        // 68 0272
        gbc.setState(0x6712, 0x9fe3, 0x1b70, 0xdd78, 0xa93a, 0x8773, 0x0, 0x0);
        gbc.writeMem(0x6712, { 0x68 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0x6713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0273
        gbc.setState(0xe281, 0x1f94, 0x9d00, 0x40fd, 0xad0e, 0x2796, 0x1, 0x1);
        gbc.writeMem(0xe281, { 0x68 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1f94, gbc.sp());
        EXPECT(0xe282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe281));
        // 68 0274
        gbc.setState(0x8a31, 0xc4a, 0x9580, 0x7c84, 0x7a44, 0x7bdf, 0x1, 0x1);
        gbc.writeMem(0x8a31, { 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc4a, gbc.sp());
        EXPECT(0x8a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8a31));
        // 68 0275
        gbc.setState(0x3b82, 0xebf6, 0x6370, 0xd718, 0x15fe, 0x2c43, 0x0, 0x1);
        gbc.writeMem(0x3b82, { 0x68 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xebf6, gbc.sp());
        EXPECT(0x3b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0276
        gbc.setState(0xd2b1, 0xc992, 0x9ee0, 0xad8e, 0xea43, 0xf296, 0x1, 0x1);
        gbc.writeMem(0xd2b1, { 0x68 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc992, gbc.sp());
        EXPECT(0xd2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd2b1));
        // 68 0277
        gbc.setState(0x18b0, 0xd5b9, 0xa060, 0x9ddb, 0x1759, 0x7df6, 0x1, 0x0);
        gbc.writeMem(0x18b0, { 0x68 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd5b9, gbc.sp());
        EXPECT(0x18b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0278
        gbc.setState(0x29b1, 0x11b2, 0xcbf0, 0xdcc, 0x65db, 0xdbb1, 0x1, 0x1);
        gbc.writeMem(0x29b1, { 0x68 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x11b2, gbc.sp());
        EXPECT(0x29b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0279
        gbc.setState(0xc1f, 0x4bae, 0xc0b0, 0x5bbb, 0xc001, 0x43ee, 0x1, 0x0);
        gbc.writeMem(0xc1f, { 0x68 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4bae, gbc.sp());
        EXPECT(0xc20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 027A
        gbc.setState(0x104a, 0xe7db, 0x5a20, 0x87fc, 0x8446, 0x244a, 0x0, 0x1);
        gbc.writeMem(0x104a, { 0x68 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe7db, gbc.sp());
        EXPECT(0x104b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 027C
        gbc.setState(0x7d9b, 0x1a7d, 0x96c0, 0x2652, 0x1e51, 0x1065, 0x1, 0x1);
        gbc.writeMem(0x7d9b, { 0x68 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1a7d, gbc.sp());
        EXPECT(0x7d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 027D
        gbc.setState(0x7e55, 0x2dbb, 0x5c50, 0xba17, 0xf874, 0x68f6, 0x0, 0x0);
        gbc.writeMem(0x7e55, { 0x68 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2dbb, gbc.sp());
        EXPECT(0x7e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0280
        gbc.setState(0xc743, 0xd1b7, 0xa3d0, 0xfc0b, 0x257e, 0xc449, 0x0, 0x1);
        gbc.writeMem(0xc743, { 0x68 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd1b7, gbc.sp());
        EXPECT(0xc744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc743));
        // 68 0282
        gbc.setState(0x64c2, 0x1713, 0x20, 0x1ef7, 0x898, 0x588c, 0x0, 0x0);
        gbc.writeMem(0x64c2, { 0x68 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1713, gbc.sp());
        EXPECT(0x64c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0283
        gbc.setState(0x561c, 0x4dc8, 0xa950, 0xc907, 0x2d96, 0x80e, 0x0, 0x1);
        gbc.writeMem(0x561c, { 0x68 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4dc8, gbc.sp());
        EXPECT(0x561d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0284
        gbc.setState(0x4de5, 0x352c, 0x6a0, 0xd5f2, 0x81d9, 0xe521, 0x0, 0x1);
        gbc.writeMem(0x4de5, { 0x68 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x352c, gbc.sp());
        EXPECT(0x4de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0285
        gbc.setState(0xa4e3, 0x4c18, 0xf8f0, 0xa1cc, 0x6cc9, 0x8422, 0x1, 0x0);
        gbc.writeMem(0xa4e3, { 0x68 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4c18, gbc.sp());
        EXPECT(0xa4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa4e3));
        // 68 0286
        gbc.setState(0x85e, 0x1e65, 0x9400, 0xb946, 0x91ca, 0x62c9, 0x0, 0x0);
        gbc.writeMem(0x85e, { 0x68 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1e65, gbc.sp());
        EXPECT(0x85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0287
        gbc.setState(0x4228, 0x788d, 0x93f0, 0x8afa, 0xbe83, 0x8d4a, 0x1, 0x1);
        gbc.writeMem(0x4228, { 0x68 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x788d, gbc.sp());
        EXPECT(0x4229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0288
        gbc.setState(0xe85, 0x1ab, 0x7710, 0x92aa, 0x75d6, 0xb4b2, 0x0, 0x1);
        gbc.writeMem(0xe85, { 0x68 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1ab, gbc.sp());
        EXPECT(0xe86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0289
        gbc.setState(0xe9ad, 0x2ac2, 0x29f0, 0xe62b, 0x19fd, 0xef2d, 0x1, 0x0);
        gbc.writeMem(0xe9ad, { 0x68 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2ac2, gbc.sp());
        EXPECT(0xe9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe9ad));
        // 68 028A
        gbc.setState(0x21b6, 0x6d50, 0xe50, 0x7cdf, 0x28df, 0xda57, 0x1, 0x0);
        gbc.writeMem(0x21b6, { 0x68 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6d50, gbc.sp());
        EXPECT(0x21b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 028B
        gbc.setState(0x63cb, 0x5f49, 0x42c0, 0xf581, 0xfadd, 0xe016, 0x1, 0x0);
        gbc.writeMem(0x63cb, { 0x68 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5f49, gbc.sp());
        EXPECT(0x63cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 028C
        gbc.setState(0x9f76, 0x7048, 0x4bd0, 0x6976, 0xb7c, 0xcf01, 0x0, 0x1);
        gbc.writeMem(0x9f76, { 0x68 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7048, gbc.sp());
        EXPECT(0x9f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9f76));
        // 68 028D
        gbc.setState(0xb799, 0xe73, 0xbf50, 0x4e1d, 0x56fa, 0x1981, 0x1, 0x1);
        gbc.writeMem(0xb799, { 0x68 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe73, gbc.sp());
        EXPECT(0xb79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb799));
        // 68 028E
        gbc.setState(0x9269, 0xba8e, 0x35a0, 0x129f, 0xf37f, 0x160d, 0x1, 0x1);
        gbc.writeMem(0x9269, { 0x68 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xba8e, gbc.sp());
        EXPECT(0x926a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9269));
        // 68 0290
        gbc.setState(0x89b8, 0x3fd8, 0x6050, 0x5807, 0x7294, 0x2f69, 0x0, 0x1);
        gbc.writeMem(0x89b8, { 0x68 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3fd8, gbc.sp());
        EXPECT(0x89b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x89b8));
        // 68 0291
        gbc.setState(0x2169, 0x544e, 0x2eb0, 0x6628, 0xff72, 0x5f9f, 0x0, 0x0);
        gbc.writeMem(0x2169, { 0x68 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x544e, gbc.sp());
        EXPECT(0x216a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0292
        gbc.setState(0xe265, 0x5c27, 0x1300, 0x395f, 0xc391, 0xae18, 0x1, 0x1);
        gbc.writeMem(0xe265, { 0x68 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5c27, gbc.sp());
        EXPECT(0xe266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe265));
        // 68 0293
        gbc.setState(0x5045, 0x55c3, 0x6d20, 0x6d90, 0xc3ff, 0xc9ac, 0x0, 0x1);
        gbc.writeMem(0x5045, { 0x68 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x55c3, gbc.sp());
        EXPECT(0x5046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0294
        gbc.setState(0xeaa1, 0xa810, 0xd3a0, 0xbe50, 0xd7af, 0x9be7, 0x1, 0x1);
        gbc.writeMem(0xeaa1, { 0x68 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa810, gbc.sp());
        EXPECT(0xeaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xeaa1));
        // 68 0295
        gbc.setState(0x33c, 0x885c, 0xb60, 0xefa4, 0x946f, 0x62e8, 0x1, 0x0);
        gbc.writeMem(0x33c, { 0x68 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x885c, gbc.sp());
        EXPECT(0x33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0296
        gbc.setState(0x2080, 0x24eb, 0x4710, 0x7a5a, 0x3907, 0x2054, 0x0, 0x0);
        gbc.writeMem(0x2080, { 0x68 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x24eb, gbc.sp());
        EXPECT(0x2081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0297
        gbc.setState(0x2e69, 0xde39, 0x7560, 0x31f4, 0x7d5f, 0x1de9, 0x1, 0x1);
        gbc.writeMem(0x2e69, { 0x68 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xde39, gbc.sp());
        EXPECT(0x2e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0298
        gbc.setState(0xc12e, 0xbda8, 0x9570, 0x3fc, 0x1c1c, 0x42e2, 0x1, 0x0);
        gbc.writeMem(0xc12e, { 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbda8, gbc.sp());
        EXPECT(0xc12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc12e));
        // 68 0299
        gbc.setState(0xb55, 0xe4a5, 0x290, 0xd888, 0x6ebe, 0x4d3b, 0x1, 0x0);
        gbc.writeMem(0xb55, { 0x68 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe4a5, gbc.sp());
        EXPECT(0xb56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 029A
        gbc.setState(0xc26e, 0x1649, 0x6ec0, 0xda6a, 0x4e0e, 0xb9b0, 0x1, 0x1);
        gbc.writeMem(0xc26e, { 0x68 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1649, gbc.sp());
        EXPECT(0xc26f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc26e));
        // 68 029B
        gbc.setState(0xc063, 0xf3fe, 0xdd70, 0x2d30, 0x4ec, 0xb45a, 0x1, 0x0);
        gbc.writeMem(0xc063, { 0x68 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf3fe, gbc.sp());
        EXPECT(0xc064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc063));
        // 68 029C
        gbc.setState(0xabec, 0x908f, 0x28d0, 0xdbb5, 0x129f, 0xd32b, 0x1, 0x1);
        gbc.writeMem(0xabec, { 0x68 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x908f, gbc.sp());
        EXPECT(0xabed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xabec));
        // 68 029D
        gbc.setState(0xc71a, 0xd17e, 0xe090, 0x24f3, 0x370d, 0x23b2, 0x0, 0x0);
        gbc.writeMem(0xc71a, { 0x68 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd17e, gbc.sp());
        EXPECT(0xc71b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc71a));
        // 68 029E
        gbc.setState(0x1f51, 0x3fd7, 0x45f0, 0x1571, 0x9c35, 0xc09f, 0x0, 0x0);
        gbc.writeMem(0x1f51, { 0x68 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3fd7, gbc.sp());
        EXPECT(0x1f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 029F
        gbc.setState(0xaa2, 0xca39, 0x3eb0, 0x9008, 0x4cf2, 0x12f9, 0x0, 0x1);
        gbc.writeMem(0xaa2, { 0x68 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xca39, gbc.sp());
        EXPECT(0xaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02A0
        gbc.setState(0xbd65, 0x259f, 0x2680, 0x2df3, 0x995e, 0x67c8, 0x1, 0x0);
        gbc.writeMem(0xbd65, { 0x68 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x259f, gbc.sp());
        EXPECT(0xbd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbd65));
        // 68 02A1
        gbc.setState(0x1518, 0xc06f, 0x49a0, 0x1c9e, 0x4ad5, 0xff91, 0x0, 0x0);
        gbc.writeMem(0x1518, { 0x68 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc06f, gbc.sp());
        EXPECT(0x1519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02A2
        gbc.setState(0x6ba2, 0x499f, 0x9bc0, 0x212f, 0x2022, 0x6494, 0x1, 0x0);
        gbc.writeMem(0x6ba2, { 0x68 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x499f, gbc.sp());
        EXPECT(0x6ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02A3
        gbc.setState(0xb19c, 0xf081, 0xe290, 0xda90, 0xb128, 0xef2c, 0x1, 0x0);
        gbc.writeMem(0xb19c, { 0x68 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf081, gbc.sp());
        EXPECT(0xb19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb19c));
        // 68 02A4
        gbc.setState(0x5f70, 0xae98, 0xb450, 0x867b, 0xafcf, 0xfab5, 0x0, 0x1);
        gbc.writeMem(0x5f70, { 0x68 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xae98, gbc.sp());
        EXPECT(0x5f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02A5
        gbc.setState(0xb09b, 0xca56, 0x8470, 0x9d39, 0xc2bf, 0x653f, 0x1, 0x1);
        gbc.writeMem(0xb09b, { 0x68 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xca56, gbc.sp());
        EXPECT(0xb09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb09b));
        // 68 02A6
        gbc.setState(0x240e, 0x4ea2, 0x5530, 0xfe77, 0xd5e5, 0x1583, 0x0, 0x0);
        gbc.writeMem(0x240e, { 0x68 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4ea2, gbc.sp());
        EXPECT(0x240f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02A7
        gbc.setState(0x4918, 0xacd7, 0x30, 0x9d99, 0x3a82, 0xfbf6, 0x1, 0x0);
        gbc.writeMem(0x4918, { 0x68 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xacd7, gbc.sp());
        EXPECT(0x4919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02A8
        gbc.setState(0xb3c6, 0x57b, 0xd880, 0xaa19, 0x40f0, 0xb011, 0x1, 0x0);
        gbc.writeMem(0xb3c6, { 0x68 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x57b, gbc.sp());
        EXPECT(0xb3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb3c6));
        // 68 02A9
        gbc.setState(0x6f5b, 0xbd0b, 0x68c0, 0xa737, 0x7ad5, 0x4ea, 0x0, 0x0);
        gbc.writeMem(0x6f5b, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbd0b, gbc.sp());
        EXPECT(0x6f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02AA
        gbc.setState(0xaac2, 0x830b, 0x56b0, 0xd43b, 0xc088, 0xc526, 0x1, 0x1);
        gbc.writeMem(0xaac2, { 0x68 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x830b, gbc.sp());
        EXPECT(0xaac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xaac2));
        // 68 02AC
        gbc.setState(0x49ce, 0xd6c3, 0xfb0, 0x240b, 0xdef8, 0x1b5, 0x1, 0x1);
        gbc.writeMem(0x49ce, { 0x68 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd6c3, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02AD
        gbc.setState(0x6347, 0xa11e, 0xcba0, 0xa589, 0x4905, 0x3fa1, 0x0, 0x0);
        gbc.writeMem(0x6347, { 0x68 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa11e, gbc.sp());
        EXPECT(0x6348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02AE
        gbc.setState(0x25da, 0xc78, 0x28a0, 0x93cd, 0xab49, 0x122b, 0x1, 0x0);
        gbc.writeMem(0x25da, { 0x68 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc78, gbc.sp());
        EXPECT(0x25db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02B0
        gbc.setState(0x94ff, 0x4b2, 0x6830, 0x4c1b, 0x49d, 0x6a63, 0x1, 0x1);
        gbc.writeMem(0x94ff, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4b2, gbc.sp());
        EXPECT(0x9500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x94ff));
        // 68 02B1
        gbc.setState(0x68da, 0xaf8, 0xb440, 0xa01f, 0x5f27, 0x515b, 0x0, 0x0);
        gbc.writeMem(0x68da, { 0x68 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xaf8, gbc.sp());
        EXPECT(0x68db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02B2
        gbc.setState(0x47c0, 0x6536, 0x1970, 0xa2dd, 0x1c72, 0xad63, 0x0, 0x0);
        gbc.writeMem(0x47c0, { 0x68 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6536, gbc.sp());
        EXPECT(0x47c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02B3
        gbc.setState(0x1693, 0xeaa6, 0xdd90, 0xce8f, 0x7722, 0xbce0, 0x0, 0x1);
        gbc.writeMem(0x1693, { 0x68 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xeaa6, gbc.sp());
        EXPECT(0x1694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02B4
        gbc.setState(0x1fca, 0xfe72, 0x2900, 0x81b1, 0x90c2, 0x6b8d, 0x1, 0x0);
        gbc.writeMem(0x1fca, { 0x68 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfe72, gbc.sp());
        EXPECT(0x1fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02B5
        gbc.setState(0x5083, 0x3efd, 0x8880, 0x4bb1, 0x9b34, 0xc86b, 0x1, 0x0);
        gbc.writeMem(0x5083, { 0x68 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3efd, gbc.sp());
        EXPECT(0x5084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02B7
        gbc.setState(0x7904, 0xf6be, 0xdc30, 0x3dec, 0xe436, 0x7229, 0x0, 0x1);
        gbc.writeMem(0x7904, { 0x68 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf6be, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02B8
        gbc.setState(0x288e, 0x3812, 0x58c0, 0x72ef, 0x62a7, 0x6c81, 0x0, 0x1);
        gbc.writeMem(0x288e, { 0x68 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3812, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02BA
        gbc.setState(0xbdfc, 0xe053, 0x6a40, 0x1328, 0x5dd9, 0xc7ea, 0x1, 0x1);
        gbc.writeMem(0xbdfc, { 0x68 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe053, gbc.sp());
        EXPECT(0xbdfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbdfc));
        // 68 02BB
        gbc.setState(0xa96e, 0xf2ad, 0xed0, 0x3c20, 0xb745, 0x847, 0x1, 0x1);
        gbc.writeMem(0xa96e, { 0x68 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf2ad, gbc.sp());
        EXPECT(0xa96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa96e));
        // 68 02BC
        gbc.setState(0x8fef, 0x2a95, 0xa9d0, 0xd4f1, 0xed6b, 0xd805, 0x0, 0x1);
        gbc.writeMem(0x8fef, { 0x68 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2a95, gbc.sp());
        EXPECT(0x8ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8fef));
        // 68 02BD
        gbc.setState(0x1e2a, 0xbaf9, 0x9f50, 0x21c5, 0x988c, 0x2ea, 0x1, 0x1);
        gbc.writeMem(0x1e2a, { 0x68 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbaf9, gbc.sp());
        EXPECT(0x1e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02BE
        gbc.setState(0xec87, 0x614d, 0xafc0, 0x41c, 0xd9c0, 0x29fd, 0x1, 0x0);
        gbc.writeMem(0xec87, { 0x68 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x614d, gbc.sp());
        EXPECT(0xec88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xec87));
        // 68 02BF
        gbc.setState(0x3db4, 0xe753, 0xffd0, 0x4338, 0x708a, 0x7628, 0x0, 0x1);
        gbc.writeMem(0x3db4, { 0x68 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe753, gbc.sp());
        EXPECT(0x3db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02C0
        gbc.setState(0x5fd2, 0x420b, 0xbda0, 0x3132, 0xdf53, 0xb03b, 0x1, 0x1);
        gbc.writeMem(0x5fd2, { 0x68 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x420b, gbc.sp());
        EXPECT(0x5fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02C1
        gbc.setState(0x3444, 0x66c4, 0x1420, 0x87b1, 0xb8f2, 0x9b02, 0x0, 0x1);
        gbc.writeMem(0x3444, { 0x68 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x66c4, gbc.sp());
        EXPECT(0x3445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02C2
        gbc.setState(0x3738, 0xfd1f, 0x83a0, 0x76ed, 0x6be9, 0x4e31, 0x0, 0x0);
        gbc.writeMem(0x3738, { 0x68 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfd1f, gbc.sp());
        EXPECT(0x3739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02C3
        gbc.setState(0x4a66, 0xc01e, 0x8370, 0x4e2a, 0xaa2, 0x1634, 0x1, 0x1);
        gbc.writeMem(0x4a66, { 0x68 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc01e, gbc.sp());
        EXPECT(0x4a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02C4
        gbc.setState(0xe268, 0x54c7, 0xf900, 0x661f, 0xb2b4, 0x7f8c, 0x1, 0x1);
        gbc.writeMem(0xe268, { 0x68 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x54c7, gbc.sp());
        EXPECT(0xe269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe268));
        // 68 02C5
        gbc.setState(0xd406, 0xc730, 0x17a0, 0x6dba, 0x2008, 0x4495, 0x0, 0x0);
        gbc.writeMem(0xd406, { 0x68 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc730, gbc.sp());
        EXPECT(0xd407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd406));
        // 68 02C6
        gbc.setState(0xdf73, 0x4aaa, 0x5a20, 0x5e04, 0xe3a1, 0xdae9, 0x1, 0x1);
        gbc.writeMem(0xdf73, { 0x68 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4aaa, gbc.sp());
        EXPECT(0xdf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdf73));
        // 68 02C7
        gbc.setState(0xb2bf, 0x5fce, 0x4750, 0x88f7, 0x37e1, 0x2086, 0x1, 0x0);
        gbc.writeMem(0xb2bf, { 0x68 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5fce, gbc.sp());
        EXPECT(0xb2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb2bf));
        // 68 02C8
        gbc.setState(0xce34, 0x6696, 0x7e90, 0x9513, 0xb077, 0xde47, 0x1, 0x0);
        gbc.writeMem(0xce34, { 0x68 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6696, gbc.sp());
        EXPECT(0xce35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xce34));
        // 68 02C9
        gbc.setState(0xc866, 0x8bbd, 0xbbd0, 0x6e78, 0x5e81, 0x329d, 0x1, 0x0);
        gbc.writeMem(0xc866, { 0x68 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8bbd, gbc.sp());
        EXPECT(0xc867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc866));
        // 68 02CA
        gbc.setState(0x56cc, 0xf1fe, 0x8220, 0x9528, 0x132b, 0xa571, 0x1, 0x1);
        gbc.writeMem(0x56cc, { 0x68 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf1fe, gbc.sp());
        EXPECT(0x56cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02CB
        gbc.setState(0x64a5, 0x5e71, 0xbaa0, 0x681e, 0xa31c, 0xa957, 0x1, 0x0);
        gbc.writeMem(0x64a5, { 0x68 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5e71, gbc.sp());
        EXPECT(0x64a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02CC
        gbc.setState(0x72a, 0x9b4, 0xf930, 0x6db7, 0xc0fc, 0x83e3, 0x0, 0x0);
        gbc.writeMem(0x72a, { 0x68 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9b4, gbc.sp());
        EXPECT(0x72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02CD
        gbc.setState(0x7071, 0xaea1, 0x2070, 0xb785, 0xdb63, 0x456c, 0x0, 0x0);
        gbc.writeMem(0x7071, { 0x68 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xaea1, gbc.sp());
        EXPECT(0x7072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02CE
        gbc.setState(0x2072, 0x3f88, 0x4040, 0x275c, 0xc779, 0x4977, 0x0, 0x0);
        gbc.writeMem(0x2072, { 0x68 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3f88, gbc.sp());
        EXPECT(0x2073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02CF
        gbc.setState(0x269e, 0xa34f, 0x35b0, 0x45bb, 0x6db7, 0x4cba, 0x1, 0x1);
        gbc.writeMem(0x269e, { 0x68 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa34f, gbc.sp());
        EXPECT(0x269f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02D0
        gbc.setState(0xd12d, 0x8ec1, 0xb90, 0xd621, 0x1eef, 0x3775, 0x1, 0x0);
        gbc.writeMem(0xd12d, { 0x68 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8ec1, gbc.sp());
        EXPECT(0xd12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd12d));
        // 68 02D1
        gbc.setState(0x6fc3, 0x551b, 0xb7f0, 0xa912, 0xa0a3, 0xf0b4, 0x1, 0x0);
        gbc.writeMem(0x6fc3, { 0x68 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x551b, gbc.sp());
        EXPECT(0x6fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02D2
        gbc.setState(0xc25d, 0x59aa, 0xcd20, 0x52ff, 0xba94, 0x6f61, 0x0, 0x1);
        gbc.writeMem(0xc25d, { 0x68 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x59aa, gbc.sp());
        EXPECT(0xc25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc25d));
        // 68 02D3
        gbc.setState(0xa351, 0x95d2, 0xb710, 0x8567, 0xedcd, 0x7382, 0x1, 0x1);
        gbc.writeMem(0xa351, { 0x68 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x95d2, gbc.sp());
        EXPECT(0xa352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa351));
        // 68 02D4
        gbc.setState(0x440, 0x5e8e, 0xbc90, 0x82b9, 0xfb59, 0x5b4c, 0x1, 0x0);
        gbc.writeMem(0x440, { 0x68 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5e8e, gbc.sp());
        EXPECT(0x441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02D5
        gbc.setState(0xb87c, 0x3fd6, 0x4f40, 0xc65e, 0xbb40, 0xb3e, 0x0, 0x0);
        gbc.writeMem(0xb87c, { 0x68 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3fd6, gbc.sp());
        EXPECT(0xb87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb87c));
        // 68 02D6
        gbc.setState(0x64ba, 0x23b2, 0xa40, 0x6f50, 0x9be9, 0xe37d, 0x1, 0x0);
        gbc.writeMem(0x64ba, { 0x68 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x23b2, gbc.sp());
        EXPECT(0x64bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02D7
        gbc.setState(0xac0a, 0x9c37, 0xd250, 0xddef, 0x7f0a, 0xd38d, 0x1, 0x0);
        gbc.writeMem(0xac0a, { 0x68 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9c37, gbc.sp());
        EXPECT(0xac0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xac0a));
        // 68 02D8
        gbc.setState(0x997f, 0xf314, 0xab90, 0x64b3, 0x7a3b, 0xf237, 0x1, 0x1);
        gbc.writeMem(0x997f, { 0x68 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf314, gbc.sp());
        EXPECT(0x9980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x997f));
        // 68 02D9
        gbc.setState(0x1139, 0xf594, 0x60c0, 0x75af, 0xe826, 0x92cd, 0x1, 0x0);
        gbc.writeMem(0x1139, { 0x68 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf594, gbc.sp());
        EXPECT(0x113a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02DA
        gbc.setState(0xa792, 0xef35, 0x49b0, 0x1078, 0xa915, 0x22d7, 0x1, 0x1);
        gbc.writeMem(0xa792, { 0x68 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xef35, gbc.sp());
        EXPECT(0xa793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa792));
        // 68 02DC
        gbc.setState(0x1fbf, 0x6526, 0xac20, 0x2a83, 0x5256, 0x926e, 0x0, 0x0);
        gbc.writeMem(0x1fbf, { 0x68 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6526, gbc.sp());
        EXPECT(0x1fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02DD
        gbc.setState(0x5996, 0x6b96, 0x57d0, 0xde23, 0x5959, 0x8051, 0x0, 0x0);
        gbc.writeMem(0x5996, { 0x68 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6b96, gbc.sp());
        EXPECT(0x5997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02DE
        gbc.setState(0xbf37, 0xf16f, 0x7a50, 0x9d73, 0x7171, 0x1457, 0x1, 0x1);
        gbc.writeMem(0xbf37, { 0x68 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf16f, gbc.sp());
        EXPECT(0xbf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbf37));
        // 68 02DF
        gbc.setState(0x35, 0x3082, 0xc5b0, 0x22bd, 0x2e73, 0x4bdf, 0x0, 0x0);
        gbc.writeMem(0x35, { 0x68 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3082, gbc.sp());
        EXPECT(0x36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02E0
        gbc.setState(0xe3c, 0xa5de, 0x7110, 0x5235, 0x1934, 0xb91d, 0x1, 0x0);
        gbc.writeMem(0xe3c, { 0x68 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa5de, gbc.sp());
        EXPECT(0xe3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02E1
        gbc.setState(0xbbed, 0x1648, 0xf50, 0x3ab7, 0xc1f1, 0xf5b8, 0x1, 0x0);
        gbc.writeMem(0xbbed, { 0x68 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1648, gbc.sp());
        EXPECT(0xbbee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbbed));
        // 68 02E2
        gbc.setState(0x1d33, 0xb0df, 0x0, 0x43f0, 0x1653, 0x75db, 0x0, 0x0);
        gbc.writeMem(0x1d33, { 0x68 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb0df, gbc.sp());
        EXPECT(0x1d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02E3
        gbc.setState(0x60b, 0xbd03, 0xa60, 0xd722, 0x4a97, 0x17f2, 0x1, 0x1);
        gbc.writeMem(0x60b, { 0x68 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbd03, gbc.sp());
        EXPECT(0x60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02E4
        gbc.setState(0x522f, 0xbe98, 0x8990, 0xe4c5, 0x46f0, 0xcad2, 0x0, 0x0);
        gbc.writeMem(0x522f, { 0x68 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbe98, gbc.sp());
        EXPECT(0x5230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02E5
        gbc.setState(0x1e90, 0x805a, 0xf4e0, 0x3a25, 0xba1f, 0xc530, 0x0, 0x1);
        gbc.writeMem(0x1e90, { 0x68 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x805a, gbc.sp());
        EXPECT(0x1e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02E6
        gbc.setState(0x2830, 0x3eeb, 0xa730, 0xd53c, 0x44c9, 0xf947, 0x1, 0x0);
        gbc.writeMem(0x2830, { 0x68 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3eeb, gbc.sp());
        EXPECT(0x2831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02E8
        gbc.setState(0xedba, 0x1e17, 0xa0e0, 0xcc77, 0x86f4, 0x8af2, 0x0, 0x0);
        gbc.writeMem(0xedba, { 0x68 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1e17, gbc.sp());
        EXPECT(0xedbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xedba));
        // 68 02E9
        gbc.setState(0x5d23, 0x149a, 0xd300, 0x8d2f, 0xb295, 0xfe41, 0x0, 0x1);
        gbc.writeMem(0x5d23, { 0x68 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x149a, gbc.sp());
        EXPECT(0x5d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02EA
        gbc.setState(0xc8e1, 0x91d, 0x3970, 0x214d, 0xc8d, 0xb52b, 0x1, 0x0);
        gbc.writeMem(0xc8e1, { 0x68 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x91d, gbc.sp());
        EXPECT(0xc8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc8e1));
        // 68 02EB
        gbc.setState(0xc9a3, 0xd276, 0xe4c0, 0x1296, 0xcba2, 0xbbe, 0x1, 0x0);
        gbc.writeMem(0xc9a3, { 0x68 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd276, gbc.sp());
        EXPECT(0xc9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc9a3));
        // 68 02EC
        gbc.setState(0xa77e, 0x6d62, 0xa770, 0xed9b, 0xaad2, 0xd422, 0x1, 0x1);
        gbc.writeMem(0xa77e, { 0x68 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6d62, gbc.sp());
        EXPECT(0xa77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa77e));
        // 68 02ED
        gbc.setState(0x4dbe, 0x6d72, 0xba70, 0xb5c3, 0xfb75, 0x565c, 0x0, 0x0);
        gbc.writeMem(0x4dbe, { 0x68 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6d72, gbc.sp());
        EXPECT(0x4dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02EE
        gbc.setState(0xd732, 0x230f, 0xdd50, 0x8092, 0x5945, 0xd88a, 0x1, 0x0);
        gbc.writeMem(0xd732, { 0x68 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x230f, gbc.sp());
        EXPECT(0xd733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd732));
        // 68 02F0
        gbc.setState(0xef19, 0x3b9e, 0x1e40, 0xebb, 0xad95, 0x8f43, 0x0, 0x1);
        gbc.writeMem(0xef19, { 0x68 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3b9e, gbc.sp());
        EXPECT(0xef1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xef19));
        // 68 02F1
        gbc.setState(0xd3b2, 0x4cb1, 0xf4c0, 0x41b1, 0xefe5, 0xd44c, 0x0, 0x0);
        gbc.writeMem(0xd3b2, { 0x68 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4cb1, gbc.sp());
        EXPECT(0xd3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd3b2));
        // 68 02F2
        gbc.setState(0x723a, 0x64d3, 0xff40, 0x5507, 0x3755, 0xc6a8, 0x0, 0x1);
        gbc.writeMem(0x723a, { 0x68 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x64d3, gbc.sp());
        EXPECT(0x723b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02F3
        gbc.setState(0x4782, 0x7d80, 0x6c0, 0x2807, 0x72fa, 0xcc23, 0x1, 0x1);
        gbc.writeMem(0x4782, { 0x68 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7d80, gbc.sp());
        EXPECT(0x4783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02F4
        gbc.setState(0xbfea, 0x537, 0xa160, 0xf84f, 0xfaff, 0x741a, 0x0, 0x0);
        gbc.writeMem(0xbfea, { 0x68 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x537, gbc.sp());
        EXPECT(0xbfeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbfea));
        // 68 02F5
        gbc.setState(0x21df, 0x3b63, 0xb2b0, 0x47c3, 0x523a, 0xbe21, 0x0, 0x1);
        gbc.writeMem(0x21df, { 0x68 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3b63, gbc.sp());
        EXPECT(0x21e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02F6
        gbc.setState(0x14c5, 0xe054, 0xefd0, 0x607c, 0x2a6, 0xdcee, 0x0, 0x0);
        gbc.writeMem(0x14c5, { 0x68 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe054, gbc.sp());
        EXPECT(0x14c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02F7
        gbc.setState(0x5dcb, 0x888e, 0x5680, 0x98de, 0xe02, 0xd211, 0x0, 0x1);
        gbc.writeMem(0x5dcb, { 0x68 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x888e, gbc.sp());
        EXPECT(0x5dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02F8
        gbc.setState(0x6875, 0xeaa2, 0x69b0, 0x7ab2, 0xee9f, 0x21c6, 0x0, 0x1);
        gbc.writeMem(0x6875, { 0x68 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xeaa2, gbc.sp());
        EXPECT(0x6876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02F9
        gbc.setState(0x6634, 0xe2f4, 0xea60, 0xeebd, 0x1b48, 0xdd26, 0x1, 0x0);
        gbc.writeMem(0x6634, { 0x68 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe2f4, gbc.sp());
        EXPECT(0x6635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 02FA
        gbc.setState(0xb79b, 0x590e, 0x4b0, 0x3bf, 0xa945, 0xa4f3, 0x0, 0x0);
        gbc.writeMem(0xb79b, { 0x68 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0xb79c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb79b));
        // 68 02FB
        gbc.setState(0x2c3f, 0xf506, 0x6b0, 0xec42, 0xd479, 0x8852, 0x0, 0x0);
        gbc.writeMem(0x2c3f, { 0x68 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf506, gbc.sp());
        EXPECT(0x2c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02FC
        gbc.setState(0x83ec, 0xe16e, 0xd830, 0xd63f, 0x846d, 0x4d35, 0x1, 0x1);
        gbc.writeMem(0x83ec, { 0x68 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe16e, gbc.sp());
        EXPECT(0x83ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x83ec));
        // 68 02FD
        gbc.setState(0x4d07, 0x9376, 0x88b0, 0xfc27, 0xe5e7, 0x90a1, 0x0, 0x1);
        gbc.writeMem(0x4d07, { 0x68 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9376, gbc.sp());
        EXPECT(0x4d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 02FE
        gbc.setState(0x4328, 0x2045, 0xb680, 0xc8cc, 0xe057, 0x1f4c, 0x0, 0x0);
        gbc.writeMem(0x4328, { 0x68 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2045, gbc.sp());
        EXPECT(0x4329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0300
        gbc.setState(0x69eb, 0x212, 0xe40, 0x26b5, 0xddf6, 0x538, 0x0, 0x1);
        gbc.writeMem(0x69eb, { 0x68 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x212, gbc.sp());
        EXPECT(0x69ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0301
        gbc.setState(0x9e25, 0x1df6, 0xf9e0, 0x49c6, 0x1578, 0x4265, 0x1, 0x0);
        gbc.writeMem(0x9e25, { 0x68 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1df6, gbc.sp());
        EXPECT(0x9e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9e25));
        // 68 0302
        gbc.setState(0x183f, 0x93ed, 0x7200, 0x4640, 0xf89c, 0x5727, 0x1, 0x1);
        gbc.writeMem(0x183f, { 0x68 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x93ed, gbc.sp());
        EXPECT(0x1840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0303
        gbc.setState(0x83a6, 0xdcc4, 0x9bf0, 0x8b21, 0x8b85, 0xb2b6, 0x1, 0x0);
        gbc.writeMem(0x83a6, { 0x68 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdcc4, gbc.sp());
        EXPECT(0x83a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x83a6));
        // 68 0304
        gbc.setState(0x6259, 0x5043, 0x8bd0, 0xdd8f, 0xd18f, 0x6156, 0x1, 0x1);
        gbc.writeMem(0x6259, { 0x68 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5043, gbc.sp());
        EXPECT(0x625a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0305
        gbc.setState(0x1512, 0x8cba, 0xee00, 0x6c21, 0xda44, 0xaba2, 0x0, 0x0);
        gbc.writeMem(0x1512, { 0x68 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8cba, gbc.sp());
        EXPECT(0x1513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0306
        gbc.setState(0xc593, 0x3009, 0x7e40, 0xd627, 0xe20b, 0x183b, 0x1, 0x1);
        gbc.writeMem(0xc593, { 0x68 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3009, gbc.sp());
        EXPECT(0xc594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc593));
        // 68 0307
        gbc.setState(0x2321, 0x87b7, 0xcae0, 0xfbe9, 0x5ac2, 0x76f2, 0x0, 0x1);
        gbc.writeMem(0x2321, { 0x68 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x87b7, gbc.sp());
        EXPECT(0x2322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0308
        gbc.setState(0x8e05, 0x7a4a, 0x3a40, 0xc8b7, 0xa26, 0xb552, 0x1, 0x1);
        gbc.writeMem(0x8e05, { 0x68 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7a4a, gbc.sp());
        EXPECT(0x8e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8e05));
        // 68 0309
        gbc.setState(0xab8d, 0x1e74, 0xa4a0, 0xfdff, 0x7c22, 0x4425, 0x1, 0x1);
        gbc.writeMem(0xab8d, { 0x68 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1e74, gbc.sp());
        EXPECT(0xab8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xab8d));
        // 68 030A
        gbc.setState(0x817c, 0xf16d, 0xa770, 0xfef3, 0xd8c9, 0xf57b, 0x0, 0x0);
        gbc.writeMem(0x817c, { 0x68 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf16d, gbc.sp());
        EXPECT(0x817d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x817c));
        // 68 030B
        gbc.setState(0x9608, 0x81f3, 0x98e0, 0xd0f, 0xf6db, 0xa1fe, 0x1, 0x0);
        gbc.writeMem(0x9608, { 0x68 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x81f3, gbc.sp());
        EXPECT(0x9609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9608));
        // 68 030C
        gbc.setState(0x2c25, 0x8577, 0xc830, 0xc454, 0xd171, 0x3414, 0x0, 0x0);
        gbc.writeMem(0x2c25, { 0x68 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8577, gbc.sp());
        EXPECT(0x2c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 030D
        gbc.setState(0x9360, 0x88ef, 0x3cf0, 0x6407, 0x9aa8, 0xe53c, 0x0, 0x0);
        gbc.writeMem(0x9360, { 0x68 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x88ef, gbc.sp());
        EXPECT(0x9361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9360));
        // 68 030E
        gbc.setState(0x663d, 0x1a99, 0x9730, 0x216d, 0xf64e, 0x947a, 0x0, 0x0);
        gbc.writeMem(0x663d, { 0x68 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1a99, gbc.sp());
        EXPECT(0x663e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 030F
        gbc.setState(0x3737, 0xb5c9, 0xbd50, 0x1e2f, 0x4a88, 0x4034, 0x0, 0x1);
        gbc.writeMem(0x3737, { 0x68 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb5c9, gbc.sp());
        EXPECT(0x3738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0310
        gbc.setState(0x8d56, 0xea28, 0x360, 0xe67b, 0x8abb, 0xbaeb, 0x0, 0x1);
        gbc.writeMem(0x8d56, { 0x68 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8d56));
        // 68 0311
        gbc.setState(0xd9b8, 0xa645, 0x3dd0, 0x1eed, 0x6a07, 0x3b62, 0x1, 0x1);
        gbc.writeMem(0xd9b8, { 0x68 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa645, gbc.sp());
        EXPECT(0xd9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd9b8));
        // 68 0312
        gbc.setState(0x3180, 0xbac0, 0x7f00, 0x9a10, 0x12ca, 0x670f, 0x1, 0x1);
        gbc.writeMem(0x3180, { 0x68 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbac0, gbc.sp());
        EXPECT(0x3181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0313
        gbc.setState(0xe93, 0x5cb1, 0xb0b0, 0xdaf7, 0xff30, 0xfc05, 0x1, 0x1);
        gbc.writeMem(0xe93, { 0x68 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5cb1, gbc.sp());
        EXPECT(0xe94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0314
        gbc.setState(0xc1ae, 0x5719, 0xafe0, 0x3fb9, 0x97f9, 0x58d0, 0x1, 0x1);
        gbc.writeMem(0xc1ae, { 0x68 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5719, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc1ae));
        // 68 0315
        gbc.setState(0xd9fd, 0x8247, 0x7660, 0x14ad, 0x4cc9, 0x352e, 0x1, 0x1);
        gbc.writeMem(0xd9fd, { 0x68 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8247, gbc.sp());
        EXPECT(0xd9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd9fd));
        // 68 0316
        gbc.setState(0xc6ea, 0x1e7, 0xbba0, 0xa86b, 0x917f, 0xf2c7, 0x0, 0x0);
        gbc.writeMem(0xc6ea, { 0x68 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1e7, gbc.sp());
        EXPECT(0xc6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc6ea));
        // 68 0317
        gbc.setState(0xa1a5, 0x4e18, 0xe9c0, 0x3c93, 0xd382, 0xd42c, 0x1, 0x0);
        gbc.writeMem(0xa1a5, { 0x68 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4e18, gbc.sp());
        EXPECT(0xa1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa1a5));
        // 68 0318
        gbc.setState(0xd7b9, 0x8e55, 0x9b90, 0x1ff8, 0xdfc, 0x41a1, 0x0, 0x0);
        gbc.writeMem(0xd7b9, { 0x68 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8e55, gbc.sp());
        EXPECT(0xd7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd7b9));
        // 68 0319
        gbc.setState(0x31d5, 0x1996, 0x8320, 0x2850, 0x3fa2, 0x2414, 0x1, 0x1);
        gbc.writeMem(0x31d5, { 0x68 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1996, gbc.sp());
        EXPECT(0x31d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 031A
        gbc.setState(0x1260, 0x2110, 0x8ae0, 0x4e1f, 0xa340, 0x3f5c, 0x0, 0x0);
        gbc.writeMem(0x1260, { 0x68 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2110, gbc.sp());
        EXPECT(0x1261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 031B
        gbc.setState(0xd65b, 0xf3dd, 0x2d10, 0xa519, 0xb514, 0xfa12, 0x0, 0x1);
        gbc.writeMem(0xd65b, { 0x68 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf3dd, gbc.sp());
        EXPECT(0xd65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd65b));
        // 68 031C
        gbc.setState(0x6e33, 0xf057, 0xb3a0, 0xd7aa, 0xafa8, 0xb273, 0x1, 0x0);
        gbc.writeMem(0x6e33, { 0x68 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf057, gbc.sp());
        EXPECT(0x6e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 031D
        gbc.setState(0xdf6a, 0x1f4d, 0x9580, 0x9482, 0xfa93, 0x96e, 0x1, 0x0);
        gbc.writeMem(0xdf6a, { 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1f4d, gbc.sp());
        EXPECT(0xdf6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdf6a));
        // 68 031E
        gbc.setState(0xa398, 0x1db0, 0x1100, 0xf130, 0x3c5c, 0xfa2b, 0x1, 0x1);
        gbc.writeMem(0xa398, { 0x68 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1db0, gbc.sp());
        EXPECT(0xa399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa398));
        // 68 031F
        gbc.setState(0xee7a, 0xbc1b, 0x75a0, 0xb876, 0x3e10, 0xf29f, 0x1, 0x1);
        gbc.writeMem(0xee7a, { 0x68 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbc1b, gbc.sp());
        EXPECT(0xee7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xee7a));
        // 68 0320
        gbc.setState(0x4b6e, 0x71fb, 0x9f60, 0xc0fb, 0xe01b, 0xe7aa, 0x0, 0x1);
        gbc.writeMem(0x4b6e, { 0x68 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x71fb, gbc.sp());
        EXPECT(0x4b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0321
        gbc.setState(0x2503, 0xc308, 0x2260, 0xfdba, 0x40b3, 0x2fbe, 0x0, 0x0);
        gbc.writeMem(0x2503, { 0x68 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc308, gbc.sp());
        EXPECT(0x2504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0322
        gbc.setState(0xb101, 0x2fd1, 0x5e00, 0xc03a, 0x7e5f, 0xd9ff, 0x1, 0x0);
        gbc.writeMem(0xb101, { 0x68 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2fd1, gbc.sp());
        EXPECT(0xb102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb101));
        // 68 0324
        gbc.setState(0x9dfb, 0xaf1b, 0xbb10, 0xecf1, 0xb294, 0x75e1, 0x1, 0x1);
        gbc.writeMem(0x9dfb, { 0x68 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaf1b, gbc.sp());
        EXPECT(0x9dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9dfb));
        // 68 0325
        gbc.setState(0x1d2f, 0x863a, 0x2cb0, 0xa58d, 0xe548, 0x472d, 0x0, 0x1);
        gbc.writeMem(0x1d2f, { 0x68 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x863a, gbc.sp());
        EXPECT(0x1d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0326
        gbc.setState(0x5079, 0x4d7d, 0x4370, 0x597c, 0x4f91, 0x4a96, 0x0, 0x1);
        gbc.writeMem(0x5079, { 0x68 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4d7d, gbc.sp());
        EXPECT(0x507a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0327
        gbc.setState(0x61c4, 0x9723, 0x3d90, 0x996a, 0x631b, 0xb44c, 0x1, 0x0);
        gbc.writeMem(0x61c4, { 0x68 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9723, gbc.sp());
        EXPECT(0x61c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0329
        gbc.setState(0x483d, 0xc9d3, 0x7220, 0x3e49, 0x3cd0, 0x459b, 0x1, 0x0);
        gbc.writeMem(0x483d, { 0x68 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc9d3, gbc.sp());
        EXPECT(0x483e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 032A
        gbc.setState(0xd6f9, 0xb91d, 0x440, 0x6ff1, 0xcd89, 0xa47, 0x0, 0x0);
        gbc.writeMem(0xd6f9, { 0x68 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb91d, gbc.sp());
        EXPECT(0xd6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd6f9));
        // 68 032B
        gbc.setState(0x3495, 0xecfd, 0x5a00, 0x8c7b, 0x87, 0x9be1, 0x0, 0x0);
        gbc.writeMem(0x3495, { 0x68 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xecfd, gbc.sp());
        EXPECT(0x3496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 032C
        gbc.setState(0xc304, 0x2d70, 0x5100, 0x2873, 0xe0a6, 0xf230, 0x0, 0x1);
        gbc.writeMem(0xc304, { 0x68 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2d70, gbc.sp());
        EXPECT(0xc305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc304));
        // 68 032D
        gbc.setState(0x3217, 0xc7c4, 0x9780, 0xc425, 0xbc36, 0xb5e5, 0x1, 0x1);
        gbc.writeMem(0x3217, { 0x68 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc7c4, gbc.sp());
        EXPECT(0x3218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 032E
        gbc.setState(0x2ed6, 0xe74b, 0x5b60, 0x3a2f, 0x963f, 0x2e79, 0x1, 0x0);
        gbc.writeMem(0x2ed6, { 0x68 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe74b, gbc.sp());
        EXPECT(0x2ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 032F
        gbc.setState(0x9c16, 0x27d4, 0xde20, 0x6b6, 0x14e6, 0x87c0, 0x0, 0x0);
        gbc.writeMem(0x9c16, { 0x68 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x27d4, gbc.sp());
        EXPECT(0x9c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9c16));
        // 68 0330
        gbc.setState(0xa999, 0xb04f, 0x9080, 0xb81a, 0xb6f8, 0x6ae3, 0x1, 0x1);
        gbc.writeMem(0xa999, { 0x68 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb04f, gbc.sp());
        EXPECT(0xa99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa999));
        // 68 0331
        gbc.setState(0xe60d, 0xcbc5, 0x6a40, 0x3026, 0xcfa2, 0xe083, 0x1, 0x0);
        gbc.writeMem(0xe60d, { 0x68 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcbc5, gbc.sp());
        EXPECT(0xe60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe60d));
        // 68 0332
        gbc.setState(0x1cb, 0x819a, 0xe370, 0x66b9, 0x21ab, 0x23be, 0x1, 0x1);
        gbc.writeMem(0x1cb, { 0x68 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x819a, gbc.sp());
        EXPECT(0x1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0333
        gbc.setState(0x45ba, 0xf571, 0xf9d0, 0xff6d, 0xc674, 0x2155, 0x0, 0x1);
        gbc.writeMem(0x45ba, { 0x68 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf571, gbc.sp());
        EXPECT(0x45bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0334
        gbc.setState(0xba7c, 0xfca7, 0xdc0, 0x21c2, 0x4f81, 0x9cd3, 0x1, 0x1);
        gbc.writeMem(0xba7c, { 0x68 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfca7, gbc.sp());
        EXPECT(0xba7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xba7c));
        // 68 0335
        gbc.setState(0x3422, 0x4e0c, 0x4280, 0x21af, 0x9d9e, 0x1db2, 0x1, 0x1);
        gbc.writeMem(0x3422, { 0x68 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4e0c, gbc.sp());
        EXPECT(0x3423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0336
        gbc.setState(0xb050, 0xdb99, 0x69b0, 0x6223, 0x408c, 0x3f4f, 0x1, 0x0);
        gbc.writeMem(0xb050, { 0x68 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdb99, gbc.sp());
        EXPECT(0xb051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb050));
        // 68 0337
        gbc.setState(0x59cb, 0x2556, 0x8d0, 0xb3f1, 0x7af4, 0x40cd, 0x0, 0x0);
        gbc.writeMem(0x59cb, { 0x68 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2556, gbc.sp());
        EXPECT(0x59cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0338
        gbc.setState(0xcbe6, 0xb5df, 0xc0d0, 0x6514, 0x4d4b, 0x615e, 0x0, 0x1);
        gbc.writeMem(0xcbe6, { 0x68 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb5df, gbc.sp());
        EXPECT(0xcbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcbe6));
        // 68 0339
        gbc.setState(0x4f32, 0x1d81, 0xcaa0, 0x6527, 0x7088, 0xe265, 0x1, 0x1);
        gbc.writeMem(0x4f32, { 0x68 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1d81, gbc.sp());
        EXPECT(0x4f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 033A
        gbc.setState(0x85df, 0xeb02, 0xd5e0, 0x24c9, 0x9fe9, 0x7509, 0x1, 0x1);
        gbc.writeMem(0x85df, { 0x68 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xeb02, gbc.sp());
        EXPECT(0x85e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x85df));
        // 68 033B
        gbc.setState(0xfe9, 0x2cf, 0xa30, 0xbb6, 0x545d, 0xfa0c, 0x1, 0x1);
        gbc.writeMem(0xfe9, { 0x68 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2cf, gbc.sp());
        EXPECT(0xfea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 033C
        gbc.setState(0x4e8b, 0x514a, 0xe320, 0x90a3, 0x159a, 0x95cf, 0x1, 0x0);
        gbc.writeMem(0x4e8b, { 0x68 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x514a, gbc.sp());
        EXPECT(0x4e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 033D
        gbc.setState(0x7e78, 0x513c, 0x1ef0, 0x7b97, 0x8814, 0x4348, 0x0, 0x0);
        gbc.writeMem(0x7e78, { 0x68 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x513c, gbc.sp());
        EXPECT(0x7e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 033E
        gbc.setState(0x9bec, 0xe24b, 0x6b10, 0xe3e5, 0x5f70, 0x2dfa, 0x0, 0x0);
        gbc.writeMem(0x9bec, { 0x68 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe24b, gbc.sp());
        EXPECT(0x9bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9bec));
        // 68 033F
        gbc.setState(0xafee, 0xc4ab, 0xfc10, 0x7bee, 0xc745, 0xa03a, 0x0, 0x0);
        gbc.writeMem(0xafee, { 0x68 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc4ab, gbc.sp());
        EXPECT(0xafef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xafee));
        // 68 0340
        gbc.setState(0x3f0d, 0x362c, 0x2b80, 0xee73, 0x863b, 0x7f79, 0x1, 0x0);
        gbc.writeMem(0x3f0d, { 0x68 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x362c, gbc.sp());
        EXPECT(0x3f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0341
        gbc.setState(0xb70d, 0xbc54, 0x770, 0x54ed, 0x7910, 0xa4f6, 0x0, 0x0);
        gbc.writeMem(0xb70d, { 0x68 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbc54, gbc.sp());
        EXPECT(0xb70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb70d));
        // 68 0342
        gbc.setState(0x8d69, 0x77dd, 0x63c0, 0x7622, 0x2595, 0xd934, 0x1, 0x1);
        gbc.writeMem(0x8d69, { 0x68 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x77dd, gbc.sp());
        EXPECT(0x8d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8d69));
        // 68 0343
        gbc.setState(0x23b9, 0xe9b7, 0x3850, 0xf80e, 0xfa7c, 0x9c68, 0x1, 0x0);
        gbc.writeMem(0x23b9, { 0x68 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe9b7, gbc.sp());
        EXPECT(0x23ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0344
        gbc.setState(0x4a7d, 0x7ecb, 0xba90, 0x9c30, 0x27b2, 0xef2, 0x1, 0x0);
        gbc.writeMem(0x4a7d, { 0x68 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7ecb, gbc.sp());
        EXPECT(0x4a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0347
        gbc.setState(0x5605, 0x7b2a, 0x7450, 0xdff5, 0xc772, 0x2505, 0x1, 0x1);
        gbc.writeMem(0x5605, { 0x68 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7b2a, gbc.sp());
        EXPECT(0x5606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0348
        gbc.setState(0x2c05, 0x3cb1, 0x3b70, 0x144, 0x146b, 0x3e5d, 0x0, 0x0);
        gbc.writeMem(0x2c05, { 0x68 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3cb1, gbc.sp());
        EXPECT(0x2c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0349
        gbc.setState(0x3d9a, 0x8af3, 0xf000, 0xb8be, 0x44ed, 0xba1a, 0x1, 0x1);
        gbc.writeMem(0x3d9a, { 0x68 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8af3, gbc.sp());
        EXPECT(0x3d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 034A
        gbc.setState(0xe559, 0x13e8, 0x9570, 0x1b67, 0x4e2e, 0xbf21, 0x0, 0x0);
        gbc.writeMem(0xe559, { 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x13e8, gbc.sp());
        EXPECT(0xe55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe559));
        // 68 034B
        gbc.setState(0x377e, 0x4259, 0xf5f0, 0x8e61, 0x8a28, 0x21fb, 0x1, 0x1);
        gbc.writeMem(0x377e, { 0x68 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4259, gbc.sp());
        EXPECT(0x377f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 034C
        gbc.setState(0x7776, 0xd76, 0x8ce0, 0x43ad, 0x4127, 0x7176, 0x1, 0x0);
        gbc.writeMem(0x7776, { 0x68 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd76, gbc.sp());
        EXPECT(0x7777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 034D
        gbc.setState(0x1ae3, 0xc053, 0x25a0, 0x7610, 0xba87, 0xb776, 0x0, 0x1);
        gbc.writeMem(0x1ae3, { 0x68 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc053, gbc.sp());
        EXPECT(0x1ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 034E
        gbc.setState(0xa798, 0xc81, 0x1460, 0x2e22, 0xd99a, 0x81e2, 0x0, 0x1);
        gbc.writeMem(0xa798, { 0x68 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc81, gbc.sp());
        EXPECT(0xa799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa798));
        // 68 034F
        gbc.setState(0x3d52, 0xc16c, 0x9610, 0x5fc5, 0x32bb, 0x5fe9, 0x0, 0x0);
        gbc.writeMem(0x3d52, { 0x68 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc16c, gbc.sp());
        EXPECT(0x3d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0350
        gbc.setState(0xa769, 0xafc8, 0xd920, 0xf41a, 0xa137, 0x6ef5, 0x1, 0x1);
        gbc.writeMem(0xa769, { 0x68 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xafc8, gbc.sp());
        EXPECT(0xa76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa769));
        // 68 0351
        gbc.setState(0x5400, 0xb060, 0x7fc0, 0xe084, 0x9c97, 0xcaf8, 0x1, 0x1);
        gbc.writeMem(0x5400, { 0x68 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb060, gbc.sp());
        EXPECT(0x5401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0352
        gbc.setState(0x39af, 0xf2f2, 0xefb0, 0xe4ad, 0x8b6d, 0xee5b, 0x0, 0x0);
        gbc.writeMem(0x39af, { 0x68 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf2f2, gbc.sp());
        EXPECT(0x39b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0353
        gbc.setState(0x587, 0xf37d, 0x3e20, 0xf771, 0x5a39, 0x4bc6, 0x0, 0x1);
        gbc.writeMem(0x587, { 0x68 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf37d, gbc.sp());
        EXPECT(0x588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0354
        gbc.setState(0x261f, 0xc245, 0x69f0, 0x3559, 0xd956, 0x8c12, 0x0, 0x1);
        gbc.writeMem(0x261f, { 0x68 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc245, gbc.sp());
        EXPECT(0x2620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0355
        gbc.setState(0x21a0, 0x9409, 0x46e0, 0xff90, 0x2136, 0xbd17, 0x1, 0x0);
        gbc.writeMem(0x21a0, { 0x68 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9409, gbc.sp());
        EXPECT(0x21a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0356
        gbc.setState(0x186f, 0x11b9, 0x4c70, 0x88bd, 0xcb27, 0x6e9d, 0x1, 0x0);
        gbc.writeMem(0x186f, { 0x68 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x11b9, gbc.sp());
        EXPECT(0x1870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0357
        gbc.setState(0x5031, 0x9ee7, 0x1ff0, 0xee83, 0x53b0, 0x669c, 0x1, 0x1);
        gbc.writeMem(0x5031, { 0x68 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9ee7, gbc.sp());
        EXPECT(0x5032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0358
        gbc.setState(0x3500, 0x6022, 0x6770, 0xb45e, 0x3340, 0xd6eb, 0x1, 0x1);
        gbc.writeMem(0x3500, { 0x68 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6022, gbc.sp());
        EXPECT(0x3501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0359
        gbc.setState(0x28f9, 0x89ce, 0xbd70, 0x4e79, 0x45bd, 0x9feb, 0x0, 0x1);
        gbc.writeMem(0x28f9, { 0x68 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x89ce, gbc.sp());
        EXPECT(0x28fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 035A
        gbc.setState(0xa20c, 0x4836, 0xd100, 0xc3a9, 0x3e2c, 0x6870, 0x1, 0x1);
        gbc.writeMem(0xa20c, { 0x68 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4836, gbc.sp());
        EXPECT(0xa20d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa20c));
        // 68 035B
        gbc.setState(0xd807, 0x880e, 0x4d00, 0x5729, 0x89bd, 0x8892, 0x0, 0x0);
        gbc.writeMem(0xd807, { 0x68 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x880e, gbc.sp());
        EXPECT(0xd808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd807));
        // 68 035C
        gbc.setState(0x51fa, 0xe61b, 0x9990, 0xf71f, 0x887c, 0x411f, 0x0, 0x0);
        gbc.writeMem(0x51fa, { 0x68 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe61b, gbc.sp());
        EXPECT(0x51fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 035D
        gbc.setState(0x3abf, 0xc2a5, 0x3f20, 0x5259, 0x8c55, 0xf55a, 0x0, 0x0);
        gbc.writeMem(0x3abf, { 0x68 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc2a5, gbc.sp());
        EXPECT(0x3ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 035E
        gbc.setState(0x1568, 0xa64e, 0x5990, 0x7f00, 0xfc88, 0x1970, 0x1, 0x0);
        gbc.writeMem(0x1568, { 0x68 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa64e, gbc.sp());
        EXPECT(0x1569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 035F
        gbc.setState(0x3cf7, 0xf0f1, 0x9b80, 0xe411, 0xa68d, 0x592b, 0x1, 0x1);
        gbc.writeMem(0x3cf7, { 0x68 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf0f1, gbc.sp());
        EXPECT(0x3cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0360
        gbc.setState(0xc6c7, 0xd888, 0xb5b0, 0x8f36, 0x3173, 0xc191, 0x1, 0x0);
        gbc.writeMem(0xc6c7, { 0x68 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd888, gbc.sp());
        EXPECT(0xc6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc6c7));
        // 68 0361
        gbc.setState(0x744c, 0x76f5, 0xc360, 0xfa6a, 0x41ce, 0x70c0, 0x1, 0x0);
        gbc.writeMem(0x744c, { 0x68 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x76f5, gbc.sp());
        EXPECT(0x744d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0363
        gbc.setState(0xb81b, 0xb02f, 0xcb00, 0x57a3, 0xa072, 0x5a56, 0x1, 0x0);
        gbc.writeMem(0xb81b, { 0x68 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb02f, gbc.sp());
        EXPECT(0xb81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb81b));
        // 68 0364
        gbc.setState(0x3f0, 0x7c55, 0x8dc0, 0xa30, 0x74fb, 0xca4b, 0x0, 0x1);
        gbc.writeMem(0x3f0, { 0x68 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7c55, gbc.sp());
        EXPECT(0x3f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0365
        gbc.setState(0x1257, 0x94fe, 0xa340, 0x47e8, 0x8703, 0x8b38, 0x1, 0x1);
        gbc.writeMem(0x1257, { 0x68 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x94fe, gbc.sp());
        EXPECT(0x1258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0366
        gbc.setState(0x40b5, 0xc886, 0x4cf0, 0x4e6e, 0x3275, 0x2051, 0x1, 0x1);
        gbc.writeMem(0x40b5, { 0x68 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc886, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0367
        gbc.setState(0x9cdb, 0xb90, 0x22a0, 0x5348, 0x5abb, 0x11f1, 0x0, 0x1);
        gbc.writeMem(0x9cdb, { 0x68 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb90, gbc.sp());
        EXPECT(0x9cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9cdb));
        // 68 0368
        gbc.setState(0xc35c, 0xb16d, 0xbab0, 0x4a78, 0xd854, 0x280d, 0x1, 0x0);
        gbc.writeMem(0xc35c, { 0x68 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb16d, gbc.sp());
        EXPECT(0xc35d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc35c));
        // 68 0369
        gbc.setState(0x75bc, 0x825a, 0x1670, 0xa80f, 0x11b0, 0xcb6e, 0x0, 0x1);
        gbc.writeMem(0x75bc, { 0x68 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x825a, gbc.sp());
        EXPECT(0x75bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 036A
        gbc.setState(0x6ec4, 0x98b0, 0xdf0, 0x8acd, 0x1fce, 0xc468, 0x0, 0x1);
        gbc.writeMem(0x6ec4, { 0x68 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x98b0, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 036B
        gbc.setState(0x819a, 0x8b8f, 0x1380, 0x57c8, 0xae0e, 0x6d9f, 0x1, 0x0);
        gbc.writeMem(0x819a, { 0x68 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8b8f, gbc.sp());
        EXPECT(0x819b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x819a));
        // 68 036C
        gbc.setState(0x2cdc, 0x8340, 0xd560, 0x5e0c, 0xd98f, 0x4f4e, 0x0, 0x1);
        gbc.writeMem(0x2cdc, { 0x68 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8340, gbc.sp());
        EXPECT(0x2cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 036D
        gbc.setState(0x81fa, 0xfb14, 0xccc0, 0x1355, 0x401e, 0x371e, 0x0, 0x1);
        gbc.writeMem(0x81fa, { 0x68 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfb14, gbc.sp());
        EXPECT(0x81fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x81fa));
        // 68 036E
        gbc.setState(0xbd7d, 0x2373, 0x1700, 0xf4bc, 0x696d, 0xb53, 0x1, 0x0);
        gbc.writeMem(0xbd7d, { 0x68 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2373, gbc.sp());
        EXPECT(0xbd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbd7d));
        // 68 036F
        gbc.setState(0xe452, 0x334, 0x7490, 0x8d74, 0x2bef, 0x7639, 0x0, 0x0);
        gbc.writeMem(0xe452, { 0x68 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x334, gbc.sp());
        EXPECT(0xe453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe452));
        // 68 0370
        gbc.setState(0xda7f, 0x8aa5, 0xf380, 0x7466, 0xd790, 0xc687, 0x1, 0x0);
        gbc.writeMem(0xda7f, { 0x68 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8aa5, gbc.sp());
        EXPECT(0xda80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xda7f));
        // 68 0371
        gbc.setState(0x8c07, 0xcc59, 0xabd0, 0x144e, 0x50dc, 0x8cb7, 0x0, 0x0);
        gbc.writeMem(0x8c07, { 0x68 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcc59, gbc.sp());
        EXPECT(0x8c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8c07));
        // 68 0372
        gbc.setState(0x8bf2, 0x278, 0x8d60, 0xf395, 0xbe2c, 0x77f9, 0x0, 0x0);
        gbc.writeMem(0x8bf2, { 0x68 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x278, gbc.sp());
        EXPECT(0x8bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8bf2));
        // 68 0373
        gbc.setState(0xa9f0, 0x2a84, 0x1ad0, 0x3a9a, 0x4af1, 0x2cd0, 0x0, 0x0);
        gbc.writeMem(0xa9f0, { 0x68 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2a84, gbc.sp());
        EXPECT(0xa9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa9f0));
        // 68 0374
        gbc.setState(0x7979, 0x18f3, 0x6470, 0x7e78, 0x5f5a, 0xb2a8, 0x0, 0x0);
        gbc.writeMem(0x7979, { 0x68 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x18f3, gbc.sp());
        EXPECT(0x797a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0375
        gbc.setState(0xd65f, 0xe6cd, 0xff70, 0xaf18, 0xb19e, 0x3ca6, 0x1, 0x1);
        gbc.writeMem(0xd65f, { 0x68 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe6cd, gbc.sp());
        EXPECT(0xd660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd65f));
        // 68 0376
        gbc.setState(0x22c9, 0xfb7c, 0x8d30, 0xcb, 0x6bdd, 0x3f29, 0x1, 0x0);
        gbc.writeMem(0x22c9, { 0x68 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfb7c, gbc.sp());
        EXPECT(0x22ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0377
        gbc.setState(0xe70c, 0x2b34, 0x59f0, 0xd8ad, 0xa962, 0xe3f6, 0x0, 0x0);
        gbc.writeMem(0xe70c, { 0x68 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2b34, gbc.sp());
        EXPECT(0xe70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe70c));
        // 68 0378
        gbc.setState(0x9df3, 0xa987, 0xd190, 0x212a, 0x78c0, 0x890d, 0x0, 0x1);
        gbc.writeMem(0x9df3, { 0x68 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa987, gbc.sp());
        EXPECT(0x9df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9df3));
        // 68 0379
        gbc.setState(0xa356, 0xc73d, 0x2130, 0xdb86, 0x8597, 0x3fdc, 0x1, 0x0);
        gbc.writeMem(0xa356, { 0x68 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc73d, gbc.sp());
        EXPECT(0xa357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa356));
        // 68 037A
        gbc.setState(0x6e3d, 0xe40b, 0xda0, 0x8e39, 0x13cf, 0x1464, 0x0, 0x1);
        gbc.writeMem(0x6e3d, { 0x68 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe40b, gbc.sp());
        EXPECT(0x6e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 037B
        gbc.setState(0x65da, 0xb2d9, 0x1970, 0x46e9, 0x65ba, 0x1c7d, 0x1, 0x0);
        gbc.writeMem(0x65da, { 0x68 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb2d9, gbc.sp());
        EXPECT(0x65db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 037C
        gbc.setState(0xc92, 0x80b7, 0x9610, 0x4320, 0xaac9, 0xc227, 0x0, 0x1);
        gbc.writeMem(0xc92, { 0x68 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x80b7, gbc.sp());
        EXPECT(0xc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 037D
        gbc.setState(0x6e91, 0xd988, 0x2550, 0xe371, 0xaa72, 0x9039, 0x1, 0x0);
        gbc.writeMem(0x6e91, { 0x68 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd988, gbc.sp());
        EXPECT(0x6e92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 037E
        gbc.setState(0xd563, 0x662b, 0x5de0, 0xa86e, 0x7cfc, 0x26f4, 0x0, 0x1);
        gbc.writeMem(0xd563, { 0x68 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x662b, gbc.sp());
        EXPECT(0xd564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd563));
        // 68 037F
        gbc.setState(0x3ca0, 0xafb, 0xd570, 0x615f, 0xfb33, 0xa28a, 0x1, 0x0);
        gbc.writeMem(0x3ca0, { 0x68 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xafb, gbc.sp());
        EXPECT(0x3ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0380
        gbc.setState(0x11ce, 0x3ad1, 0xd340, 0xa42f, 0x762f, 0xe2db, 0x1, 0x1);
        gbc.writeMem(0x11ce, { 0x68 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3ad1, gbc.sp());
        EXPECT(0x11cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0381
        gbc.setState(0xaf18, 0x3681, 0xd460, 0x6f35, 0xe505, 0x52da, 0x0, 0x0);
        gbc.writeMem(0xaf18, { 0x68 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3681, gbc.sp());
        EXPECT(0xaf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xaf18));
        // 68 0382
        gbc.setState(0x9e5a, 0x8ad8, 0x3510, 0xfdae, 0x52fe, 0x7c04, 0x1, 0x0);
        gbc.writeMem(0x9e5a, { 0x68 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8ad8, gbc.sp());
        EXPECT(0x9e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9e5a));
        // 68 0384
        gbc.setState(0x9278, 0x9555, 0x2c30, 0xbcd9, 0xa19c, 0x7fa1, 0x1, 0x1);
        gbc.writeMem(0x9278, { 0x68 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9555, gbc.sp());
        EXPECT(0x9279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9278));
        // 68 0385
        gbc.setState(0x950d, 0x4c7b, 0xac40, 0xac9, 0x197e, 0xcb70, 0x0, 0x0);
        gbc.writeMem(0x950d, { 0x68 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4c7b, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x950d));
        // 68 0386
        gbc.setState(0x14d9, 0x9a0f, 0x1300, 0x9002, 0xa98a, 0x7b0a, 0x0, 0x1);
        gbc.writeMem(0x14d9, { 0x68 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9a0f, gbc.sp());
        EXPECT(0x14da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0387
        gbc.setState(0xebba, 0x3571, 0x28f0, 0x9d64, 0xc280, 0x3070, 0x0, 0x0);
        gbc.writeMem(0xebba, { 0x68 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3571, gbc.sp());
        EXPECT(0xebbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xebba));
        // 68 0388
        gbc.setState(0xd4d0, 0xe854, 0xfb30, 0x647, 0x5ebe, 0x2313, 0x1, 0x1);
        gbc.writeMem(0xd4d0, { 0x68 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe854, gbc.sp());
        EXPECT(0xd4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd4d0));
        // 68 0389
        gbc.setState(0xe2d, 0x5d33, 0x820, 0xe102, 0xf410, 0xe99a, 0x0, 0x1);
        gbc.writeMem(0xe2d, { 0x68 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5d33, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 038A
        gbc.setState(0x68e6, 0xeda5, 0x5e60, 0x4bc0, 0xea48, 0x2c8f, 0x0, 0x0);
        gbc.writeMem(0x68e6, { 0x68 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xeda5, gbc.sp());
        EXPECT(0x68e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 038B
        gbc.setState(0xe54c, 0x80c7, 0x3280, 0x25bf, 0x31ad, 0x26a5, 0x0, 0x1);
        gbc.writeMem(0xe54c, { 0x68 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x80c7, gbc.sp());
        EXPECT(0xe54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe54c));
        // 68 038C
        gbc.setState(0xbc4b, 0xc87c, 0x3ab0, 0x217b, 0x586d, 0xa1a7, 0x0, 0x1);
        gbc.writeMem(0xbc4b, { 0x68 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc87c, gbc.sp());
        EXPECT(0xbc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbc4b));
        // 68 038D
        gbc.setState(0x82d7, 0x7d82, 0x1c50, 0x8076, 0x7542, 0xaf82, 0x1, 0x1);
        gbc.writeMem(0x82d7, { 0x68 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7d82, gbc.sp());
        EXPECT(0x82d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x82d7));
        // 68 038E
        gbc.setState(0x90e, 0xfcdb, 0xbbe0, 0xfc8b, 0x4378, 0x5b93, 0x1, 0x0);
        gbc.writeMem(0x90e, { 0x68 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfcdb, gbc.sp());
        EXPECT(0x90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 038F
        gbc.setState(0x45b6, 0x1dbc, 0x7d0, 0x22b0, 0xda39, 0xc8bb, 0x1, 0x1);
        gbc.writeMem(0x45b6, { 0x68 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1dbc, gbc.sp());
        EXPECT(0x45b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 0390
        gbc.setState(0x649, 0x685a, 0xd160, 0x1f68, 0x35fe, 0xa528, 0x0, 0x1);
        gbc.writeMem(0x649, { 0x68 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x685a, gbc.sp());
        EXPECT(0x64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0391
        gbc.setState(0x588, 0x182f, 0x2180, 0x4f8f, 0xd2ec, 0xbd5, 0x1, 0x1);
        gbc.writeMem(0x588, { 0x68 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x182f, gbc.sp());
        EXPECT(0x589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0392
        gbc.setState(0x55f3, 0x3cfb, 0x800, 0x7b9e, 0x6494, 0xdacb, 0x0, 0x1);
        gbc.writeMem(0x55f3, { 0x68 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0x55f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 0394
        gbc.setState(0xbaa3, 0x374d, 0x7820, 0x8ee8, 0x5680, 0x175a, 0x0, 0x1);
        gbc.writeMem(0xbaa3, { 0x68 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x374d, gbc.sp());
        EXPECT(0xbaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbaa3));
        // 68 0396
        gbc.setState(0xa69c, 0x5fa1, 0xb270, 0x6427, 0x7d56, 0xeca6, 0x1, 0x1);
        gbc.writeMem(0xa69c, { 0x68 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5fa1, gbc.sp());
        EXPECT(0xa69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa69c));
        // 68 0397
        gbc.setState(0xdf57, 0x452d, 0x59c0, 0xbba8, 0xf976, 0xfc72, 0x0, 0x0);
        gbc.writeMem(0xdf57, { 0x68 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x452d, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdf57));
        // 68 0398
        gbc.setState(0xc784, 0xe2fb, 0x8900, 0x448, 0xbac6, 0x838d, 0x1, 0x0);
        gbc.writeMem(0xc784, { 0x68 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe2fb, gbc.sp());
        EXPECT(0xc785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc784));
        // 68 0399
        gbc.setState(0xd0a0, 0x860e, 0x120, 0x8ef7, 0xd281, 0x9df8, 0x1, 0x1);
        gbc.writeMem(0xd0a0, { 0x68 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x860e, gbc.sp());
        EXPECT(0xd0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd0a0));
        // 68 039A
        gbc.setState(0xb5df, 0x3b9b, 0x82e0, 0xbbfd, 0x578d, 0xd070, 0x1, 0x0);
        gbc.writeMem(0xb5df, { 0x68 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3b9b, gbc.sp());
        EXPECT(0xb5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb5df));
        // 68 039B
        gbc.setState(0xda0d, 0x149d, 0xe920, 0xcecb, 0x7a76, 0x9421, 0x1, 0x1);
        gbc.writeMem(0xda0d, { 0x68 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x149d, gbc.sp());
        EXPECT(0xda0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xda0d));
        // 68 039C
        gbc.setState(0xeb08, 0xf057, 0x390, 0x680d, 0x9178, 0x999, 0x1, 0x1);
        gbc.writeMem(0xeb08, { 0x68 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf057, gbc.sp());
        EXPECT(0xeb09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xeb08));
        // 68 039D
        gbc.setState(0x1fae, 0xf8f3, 0x9d40, 0xbedd, 0xbe7, 0x6314, 0x0, 0x0);
        gbc.writeMem(0x1fae, { 0x68 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf8f3, gbc.sp());
        EXPECT(0x1faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 039E
        gbc.setState(0xaa68, 0x8b35, 0xdc0, 0x6565, 0x3e41, 0xae8b, 0x0, 0x0);
        gbc.writeMem(0xaa68, { 0x68 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8b35, gbc.sp());
        EXPECT(0xaa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xaa68));
        // 68 039F
        gbc.setState(0xc1e1, 0xd847, 0xc070, 0x8f5b, 0x7a9d, 0xa354, 0x0, 0x0);
        gbc.writeMem(0xc1e1, { 0x68 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd847, gbc.sp());
        EXPECT(0xc1e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc1e1));
        // 68 03A0
        gbc.setState(0x5e3d, 0xd2ec, 0x7510, 0xafef, 0xa358, 0xa996, 0x0, 0x1);
        gbc.writeMem(0x5e3d, { 0x68 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd2ec, gbc.sp());
        EXPECT(0x5e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03A1
        gbc.setState(0x660f, 0xebf6, 0x8100, 0xea20, 0x743e, 0x7c15, 0x1, 0x0);
        gbc.writeMem(0x660f, { 0x68 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xebf6, gbc.sp());
        EXPECT(0x6610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03A2
        gbc.setState(0xe9b9, 0xb041, 0xd560, 0x6dad, 0x247e, 0xfd54, 0x0, 0x0);
        gbc.writeMem(0xe9b9, { 0x68 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb041, gbc.sp());
        EXPECT(0xe9ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe9b9));
        // 68 03A3
        gbc.setState(0xc7f3, 0x95c4, 0x55f0, 0x8a3e, 0xf740, 0x22f5, 0x1, 0x1);
        gbc.writeMem(0xc7f3, { 0x68 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x95c4, gbc.sp());
        EXPECT(0xc7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc7f3));
        // 68 03A4
        gbc.setState(0x8684, 0xf368, 0x2010, 0xa62b, 0xdc49, 0x92a, 0x0, 0x0);
        gbc.writeMem(0x8684, { 0x68 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf368, gbc.sp());
        EXPECT(0x8685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8684));
        // 68 03A5
        gbc.setState(0xd275, 0xe664, 0xb370, 0x8f9, 0x69c2, 0xe772, 0x0, 0x0);
        gbc.writeMem(0xd275, { 0x68 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe664, gbc.sp());
        EXPECT(0xd276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd275));
        // 68 03A6
        gbc.setState(0xa841, 0xb0d3, 0x96e0, 0x1246, 0xeee4, 0xe226, 0x0, 0x0);
        gbc.writeMem(0xa841, { 0x68 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb0d3, gbc.sp());
        EXPECT(0xa842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa841));
        // 68 03A7
        gbc.setState(0xad4a, 0xa667, 0xa730, 0x4492, 0x74e1, 0x8d6d, 0x1, 0x1);
        gbc.writeMem(0xad4a, { 0x68 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa667, gbc.sp());
        EXPECT(0xad4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xad4a));
        // 68 03A9
        gbc.setState(0xed36, 0xa33f, 0x79c0, 0xf04d, 0x463f, 0x90ca, 0x0, 0x0);
        gbc.writeMem(0xed36, { 0x68 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa33f, gbc.sp());
        EXPECT(0xed37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xed36));
        // 68 03AA
        gbc.setState(0xbfb0, 0x68cd, 0xbb80, 0xd0a5, 0x4d8e, 0x7d91, 0x1, 0x0);
        gbc.writeMem(0xbfb0, { 0x68 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0xbfb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbfb0));
        // 68 03AB
        gbc.setState(0x1713, 0x4c3e, 0x6ae0, 0xd106, 0x8844, 0x7981, 0x0, 0x0);
        gbc.writeMem(0x1713, { 0x68 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4c3e, gbc.sp());
        EXPECT(0x1714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03AD
        gbc.setState(0x4af5, 0x4e82, 0xc2d0, 0x1981, 0x18ee, 0xd872, 0x1, 0x1);
        gbc.writeMem(0x4af5, { 0x68 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4e82, gbc.sp());
        EXPECT(0x4af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03AE
        gbc.setState(0xa901, 0x5bb8, 0x78d0, 0xa05, 0x15a7, 0x8a6b, 0x0, 0x0);
        gbc.writeMem(0xa901, { 0x68 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5bb8, gbc.sp());
        EXPECT(0xa902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa901));
        // 68 03AF
        gbc.setState(0x4e0c, 0xd254, 0x70d0, 0xdb1a, 0x97b, 0x933f, 0x1, 0x0);
        gbc.writeMem(0x4e0c, { 0x68 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd254, gbc.sp());
        EXPECT(0x4e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03B0
        gbc.setState(0x57d1, 0x877e, 0x8b20, 0x3588, 0x527d, 0xed94, 0x0, 0x0);
        gbc.writeMem(0x57d1, { 0x68 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x877e, gbc.sp());
        EXPECT(0x57d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03B1
        gbc.setState(0x237b, 0x4f41, 0x1430, 0x1c72, 0x7b77, 0xd273, 0x0, 0x1);
        gbc.writeMem(0x237b, { 0x68 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4f41, gbc.sp());
        EXPECT(0x237c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03B2
        gbc.setState(0x8297, 0x8009, 0x16f0, 0x7c8a, 0x9443, 0xabdf, 0x1, 0x1);
        gbc.writeMem(0x8297, { 0x68 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8009, gbc.sp());
        EXPECT(0x8298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8297));
        // 68 03B3
        gbc.setState(0x1fd, 0x435d, 0x2900, 0x5085, 0x918d, 0xdd6c, 0x1, 0x1);
        gbc.writeMem(0x1fd, { 0x68 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x435d, gbc.sp());
        EXPECT(0x1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03B4
        gbc.setState(0x2114, 0x205b, 0xf340, 0xd11d, 0x2259, 0x2ec4, 0x1, 0x1);
        gbc.writeMem(0x2114, { 0x68 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x205b, gbc.sp());
        EXPECT(0x2115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03B5
        gbc.setState(0x72ae, 0x127e, 0x43d0, 0xa854, 0x703d, 0x3cfe, 0x0, 0x0);
        gbc.writeMem(0x72ae, { 0x68 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x127e, gbc.sp());
        EXPECT(0x72af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03B7
        gbc.setState(0xa683, 0x59ca, 0x30f0, 0xb65a, 0x9f2b, 0x2b3b, 0x0, 0x0);
        gbc.writeMem(0xa683, { 0x68 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x59ca, gbc.sp());
        EXPECT(0xa684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa683));
        // 68 03B8
        gbc.setState(0xb857, 0x56fd, 0x5040, 0x266e, 0x3b6d, 0x464c, 0x1, 0x0);
        gbc.writeMem(0xb857, { 0x68 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x56fd, gbc.sp());
        EXPECT(0xb858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb857));
        // 68 03B9
        gbc.setState(0x967f, 0xdf6e, 0x6140, 0x8c1d, 0x333c, 0xcbc, 0x1, 0x1);
        gbc.writeMem(0x967f, { 0x68 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdf6e, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x967f));
        // 68 03BB
        gbc.setState(0x8582, 0xf91d, 0x26f0, 0xa5b4, 0xa163, 0x21a6, 0x0, 0x1);
        gbc.writeMem(0x8582, { 0x68 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf91d, gbc.sp());
        EXPECT(0x8583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8582));
        // 68 03BC
        gbc.setState(0xe31c, 0x2a01, 0xa890, 0x415c, 0x4fed, 0x222f, 0x0, 0x1);
        gbc.writeMem(0xe31c, { 0x68 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2a01, gbc.sp());
        EXPECT(0xe31d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe31c));
        // 68 03BD
        gbc.setState(0x10e7, 0xcd54, 0xec10, 0x228a, 0x3df4, 0x726e, 0x0, 0x0);
        gbc.writeMem(0x10e7, { 0x68 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcd54, gbc.sp());
        EXPECT(0x10e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03BE
        gbc.setState(0x8e7e, 0x29e8, 0xa310, 0xf544, 0x5c99, 0x1cb2, 0x1, 0x1);
        gbc.writeMem(0x8e7e, { 0x68 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x29e8, gbc.sp());
        EXPECT(0x8e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8e7e));
        // 68 03BF
        gbc.setState(0x6e79, 0x9711, 0x2750, 0x940a, 0x8a82, 0x462a, 0x0, 0x1);
        gbc.writeMem(0x6e79, { 0x68 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9711, gbc.sp());
        EXPECT(0x6e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03C0
        gbc.setState(0x58de, 0x5afb, 0x4eb0, 0x97f0, 0x7100, 0x10d3, 0x1, 0x1);
        gbc.writeMem(0x58de, { 0x68 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5afb, gbc.sp());
        EXPECT(0x58df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03C1
        gbc.setState(0x3ad5, 0x502a, 0x7900, 0x4410, 0x7d9b, 0x2c5c, 0x1, 0x0);
        gbc.writeMem(0x3ad5, { 0x68 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x502a, gbc.sp());
        EXPECT(0x3ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03C3
        gbc.setState(0xd06f, 0x666f, 0x79e0, 0x54f7, 0x1027, 0x602d, 0x1, 0x0);
        gbc.writeMem(0xd06f, { 0x68 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x666f, gbc.sp());
        EXPECT(0xd070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd06f));
        // 68 03C4
        gbc.setState(0x16d0, 0x3349, 0x5740, 0xcdaf, 0xda8, 0x84ae, 0x0, 0x0);
        gbc.writeMem(0x16d0, { 0x68 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3349, gbc.sp());
        EXPECT(0x16d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03C5
        gbc.setState(0x4e0f, 0x9255, 0xd0c0, 0x95d, 0x4147, 0xb8c3, 0x0, 0x1);
        gbc.writeMem(0x4e0f, { 0x68 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9255, gbc.sp());
        EXPECT(0x4e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03C6
        gbc.setState(0x8f02, 0x4e44, 0x7a90, 0xc557, 0xa96b, 0x7353, 0x1, 0x0);
        gbc.writeMem(0x8f02, { 0x68 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4e44, gbc.sp());
        EXPECT(0x8f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8f02));
        // 68 03C7
        gbc.setState(0x4573, 0x5fb7, 0x2d80, 0xe6e3, 0x4cee, 0xa3a4, 0x0, 0x1);
        gbc.writeMem(0x4573, { 0x68 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5fb7, gbc.sp());
        EXPECT(0x4574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03C8
        gbc.setState(0xe803, 0xd2f9, 0xd820, 0x36d1, 0x9b98, 0xbc10, 0x1, 0x0);
        gbc.writeMem(0xe803, { 0x68 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd2f9, gbc.sp());
        EXPECT(0xe804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe803));
        // 68 03C9
        gbc.setState(0x419e, 0xaf76, 0x65e0, 0xb73e, 0x356f, 0xadc, 0x1, 0x1);
        gbc.writeMem(0x419e, { 0x68 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xaf76, gbc.sp());
        EXPECT(0x419f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03CA
        gbc.setState(0x43b6, 0xa63, 0xfdb0, 0xb107, 0xd970, 0x3c86, 0x0, 0x0);
        gbc.writeMem(0x43b6, { 0x68 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa63, gbc.sp());
        EXPECT(0x43b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03CB
        gbc.setState(0x5974, 0x8656, 0xc750, 0x2fe2, 0xcc26, 0xaa8, 0x0, 0x0);
        gbc.writeMem(0x5974, { 0x68 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8656, gbc.sp());
        EXPECT(0x5975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03CC
        gbc.setState(0x73a9, 0xb494, 0x91e0, 0x66c0, 0xcd03, 0xf739, 0x0, 0x1);
        gbc.writeMem(0x73a9, { 0x68 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb494, gbc.sp());
        EXPECT(0x73aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03CD
        gbc.setState(0x9e53, 0xa99a, 0x2d80, 0x5c19, 0x207a, 0xfd4, 0x1, 0x1);
        gbc.writeMem(0x9e53, { 0x68 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa99a, gbc.sp());
        EXPECT(0x9e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9e53));
        // 68 03CE
        gbc.setState(0x73ad, 0x874, 0x70a0, 0xca00, 0xb111, 0xbfbd, 0x1, 0x0);
        gbc.writeMem(0x73ad, { 0x68 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x874, gbc.sp());
        EXPECT(0x73ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03CF
        gbc.setState(0x1292, 0xfe15, 0x10e0, 0x7677, 0x312, 0x9e6d, 0x0, 0x0);
        gbc.writeMem(0x1292, { 0x68 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0x1293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03D0
        gbc.setState(0x1d9f, 0x1df8, 0x1400, 0x987f, 0x5b28, 0xf799, 0x0, 0x1);
        gbc.writeMem(0x1d9f, { 0x68 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1df8, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03D1
        gbc.setState(0x9f55, 0xd879, 0xa940, 0x6a83, 0xa6e8, 0xd0f6, 0x1, 0x0);
        gbc.writeMem(0x9f55, { 0x68 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd879, gbc.sp());
        EXPECT(0x9f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9f55));
        // 68 03D2
        gbc.setState(0x1a27, 0x653e, 0x4230, 0x848b, 0x40f3, 0x81ce, 0x1, 0x1);
        gbc.writeMem(0x1a27, { 0x68 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x653e, gbc.sp());
        EXPECT(0x1a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03D3
        gbc.setState(0x21f1, 0x7e7e, 0x87d0, 0x400b, 0xd9bd, 0x759c, 0x1, 0x0);
        gbc.writeMem(0x21f1, { 0x68 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7e7e, gbc.sp());
        EXPECT(0x21f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03D4
        gbc.setState(0x381a, 0xff31, 0x58e0, 0x8d15, 0x5667, 0xf6, 0x1, 0x1);
        gbc.writeMem(0x381a, { 0x68 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xff31, gbc.sp());
        EXPECT(0x381b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03D5
        gbc.setState(0x44b6, 0x742, 0x7b00, 0x55ab, 0x4e1, 0x4837, 0x0, 0x0);
        gbc.writeMem(0x44b6, { 0x68 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x742, gbc.sp());
        EXPECT(0x44b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03D7
        gbc.setState(0x652d, 0x908c, 0xf6e0, 0x3497, 0x4ba7, 0xe7e7, 0x1, 0x1);
        gbc.writeMem(0x652d, { 0x68 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x908c, gbc.sp());
        EXPECT(0x652e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03D8
        gbc.setState(0xeb23, 0x78cc, 0x44b0, 0xeb71, 0xd608, 0x27ca, 0x1, 0x1);
        gbc.writeMem(0xeb23, { 0x68 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x78cc, gbc.sp());
        EXPECT(0xeb24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xeb23));
        // 68 03D9
        gbc.setState(0xd08b, 0xa597, 0x36e0, 0x9fe4, 0xcd2b, 0xa406, 0x1, 0x1);
        gbc.writeMem(0xd08b, { 0x68 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa597, gbc.sp());
        EXPECT(0xd08c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd08b));
        // 68 03DA
        gbc.setState(0xd61, 0x2a79, 0xdd10, 0x5d62, 0x3d33, 0x92c2, 0x1, 0x0);
        gbc.writeMem(0xd61, { 0x68 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2a79, gbc.sp());
        EXPECT(0xd62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03DB
        gbc.setState(0xb3e7, 0x355f, 0x2530, 0x899, 0x7eb8, 0xfaa6, 0x1, 0x0);
        gbc.writeMem(0xb3e7, { 0x68 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x355f, gbc.sp());
        EXPECT(0xb3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb3e7));
        // 68 03DC
        gbc.setState(0x40ac, 0x7233, 0x6a00, 0x1bd4, 0xa00, 0xc8f6, 0x1, 0x0);
        gbc.writeMem(0x40ac, { 0x68 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7233, gbc.sp());
        EXPECT(0x40ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03DD
        gbc.setState(0x9302, 0xfa82, 0x3940, 0x9bd0, 0x7981, 0x1c33, 0x0, 0x1);
        gbc.writeMem(0x9302, { 0x68 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfa82, gbc.sp());
        EXPECT(0x9303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9302));
        // 68 03DE
        gbc.setState(0x5fd9, 0xd7c3, 0xada0, 0x4baf, 0x53af, 0x20ab, 0x1, 0x0);
        gbc.writeMem(0x5fd9, { 0x68 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd7c3, gbc.sp());
        EXPECT(0x5fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03DF
        gbc.setState(0x5ade, 0xb64c, 0x5de0, 0xe5c7, 0xb7fb, 0xf712, 0x1, 0x1);
        gbc.writeMem(0x5ade, { 0x68 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb64c, gbc.sp());
        EXPECT(0x5adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 68 03E0
        gbc.setState(0xd6f1, 0xc74f, 0xe860, 0x5c60, 0xaeae, 0xa9, 0x0, 0x1);
        gbc.writeMem(0xd6f1, { 0x68 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc74f, gbc.sp());
        EXPECT(0xd6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd6f1));
        // 68 03E1
        gbc.setState(0x85c9, 0x3f8b, 0xe960, 0xdee9, 0x92b7, 0x65cf, 0x1, 0x1);
        gbc.writeMem(0x85c9, { 0x68 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3f8b, gbc.sp());
        EXPECT(0x85ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x85c9));
        // 68 03E2
        gbc.setState(0x20e5, 0xf731, 0x4d30, 0xa3c2, 0xb8d0, 0x1e4c, 0x1, 0x0);
        gbc.writeMem(0x20e5, { 0x68 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf731, gbc.sp());
        EXPECT(0x20e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03E3
        gbc.setState(0x8e87, 0x48ee, 0x3d10, 0x5852, 0xc8ca, 0x906a, 0x0, 0x0);
        gbc.writeMem(0x8e87, { 0x68 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x48ee, gbc.sp());
        EXPECT(0x8e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8e87));
        // 68 03E5
        gbc.setState(0x11b3, 0x9885, 0xe870, 0xd0fb, 0xb095, 0x78fe, 0x1, 0x0);
        gbc.writeMem(0x11b3, { 0x68 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9885, gbc.sp());
        EXPECT(0x11b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 68 03E6
        gbc.setState(0xac27, 0x7621, 0xbdc0, 0x3c6e, 0xc12a, 0xd184, 0x1, 0x0);
        gbc.writeMem(0xac27, { 0x68 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7621, gbc.sp());
        EXPECT(0xac28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xac27));
        // 68 03E7
        gbc.setState(0xeef3, 0xda28, 0x6120, 0x75b5, 0x4824, 0xe7a3, 0x1, 0x1);
        gbc.writeMem(0xeef3, { 0x68 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xda28, gbc.sp());
        EXPECT(0xeef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xeef3));
    }
